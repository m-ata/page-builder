{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/guest/public/SelectHotel.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { UseOrest } from '@webcms/orest';\nimport { setToState, updateState } from 'state/actions';\nimport { useSelector } from 'react-redux';\nimport { Container } from '@material-ui/core';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nimport WebCmsGlobal from 'components/webcms-global';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport { jsonGroupBy, LOCAL_STORAGE_OREST_TOKEN_TEXT } from 'model/orest/constants';\nimport Grid from '@material-ui/core/Grid';\nimport withWidth from '@material-ui/core/withWidth';\nimport { useSnackbar } from 'notistack';\nimport { useRouter } from 'next/router';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflowX: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n    minHeight: 600,\n    height: '100vh',\n    borderRadius: 2\n  },\n  gridList: {\n    width: '100%',\n    marginBottom: '25px!important'\n  },\n  gridListTitle: {\n    height: 55,\n    background: '#e3eaea',\n    borderBottom: '1px solid rgb(224 224 224)',\n    color: '#79756d'\n  },\n  icon: {\n    color: 'rgb(255 255 255 / 83%)'\n  }\n}));\n\nconst HotelCard = ({\n  title,\n  imgUrl,\n  onClick\n}) => {\n  return __jsx(Card, {\n    onClick: () => onClick(),\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, __jsx(CardActionArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, __jsx(CardMedia, {\n    component: \"img\",\n    height: \"190\",\n    image: imgUrl,\n    alt: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }), __jsx(CardContent, {\n    style: {\n      padding: '0 10px 0 10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    alignItems: \"center\",\n    justify: 'space-between',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }, __jsx(Typography, {\n    variant: \"button\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 29\n    }\n  }, title)), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }, __jsx(IconButton, {\n    style: {\n      position: 'relative',\n      left: 10\n    },\n    onClick: () => onClick(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 29\n    }\n  }, __jsx(ArrowForwardIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 33\n    }\n  })))))));\n};\n\nconst SelectHotel = props => {\n  const {\n    setToState,\n    onClose\n  } = props;\n  const classes = useStyles();\n  const router = useRouter();\n  let currentUser = useSelector(state => state.orest.currentUser && state.orest.currentUser);\n  const token = useSelector(state => {\n    var _state$orest, _state$orest$currentU, _state$orest$currentU2;\n\n    return (state === null || state === void 0 ? void 0 : (_state$orest = state.orest) === null || _state$orest === void 0 ? void 0 : (_state$orest$currentU = _state$orest.currentUser) === null || _state$orest$currentU === void 0 ? void 0 : (_state$orest$currentU2 = _state$orest$currentU.auth) === null || _state$orest$currentU2 === void 0 ? void 0 : _state$orest$currentU2.access_token) || false;\n  });\n  const hotelRefNo = Number(router.query.hotelrefno);\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const {\n    t\n  } = useTranslation();\n  const {\n    GENERAL_SETTINGS\n  } = useContext(WebCmsGlobal);\n  useEffect(() => {\n    let active = true;\n\n    if (active && hotelRefNo) {\n      var _GENERAL_SETTINGS$HOT;\n\n      const useHotelRefno = (GENERAL_SETTINGS === null || GENERAL_SETTINGS === void 0 ? void 0 : (_GENERAL_SETTINGS$HOT = GENERAL_SETTINGS.HOTEL_CHAIN_LIST) === null || _GENERAL_SETTINGS$HOT === void 0 ? void 0 : _GENERAL_SETTINGS$HOT.find(item => item.id === hotelRefNo)) || false;\n\n      if (useHotelRefno) {\n        handleHotelSelect(useHotelRefno.id, useHotelRefno.code);\n      }\n    }\n\n    return () => {\n      active = false;\n    };\n  }, [hotelRefNo]);\n\n  const handleHotelSelect = (id, code) => {\n    if (id) {\n      if (currentUser) {\n        UseOrest({\n          apiUrl: GENERAL_SETTINGS.OREST_URL,\n          endpoint: 'tools/changehotel',\n          method: 'PUT',\n          token,\n          params: {\n            hotelrefno: id\n          }\n        }).then(respose => {\n          if (respose.data && respose.data.data && respose.data.data.res) {\n            setToState('guest', ['changeHotelRefno'], respose.data.data.res);\n            setToState('guest', ['changeHotelName'], code);\n            enqueueSnackbar(t('str_hotelChangedSuccessfully'), {\n              variant: 'success'\n            });\n          } else {\n            enqueueSnackbar(t('str_unexpectedProblem'), {\n              variant: 'warning'\n            });\n          }\n        }).catch(() => {\n          enqueueSnackbar(t('str_unexpectedProblem'), {\n            variant: 'warning'\n          });\n        });\n      } else {\n        setToState('guest', ['changeHotelRefno'], id);\n        setToState('guest', ['changeHotelName'], code);\n      }\n\n      if (typeof onClose === 'function') {\n        setToState('guest', ['infoListOneGroup', 'id'], false);\n        setToState('guest', ['infoListOneGroup', 'groupName'], false);\n        setToState('guest', ['infoListOneGroup', 'data'], false);\n        setToState('guest', ['infoListOneGroup', 'langcode'], false);\n        setToState('guest', ['infoListOneGroup', 'chainid'], false);\n        onClose();\n      }\n    }\n  };\n\n  let newHotelList = jsonGroupBy(GENERAL_SETTINGS.HOTEL_CHAIN_LIST, 'countryAndCity');\n  return __jsx(Container, {\n    maxWidth: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, newHotelList && Object.keys(newHotelList).sort().reverse().map((groupName, index) => {\n    return __jsx(\"div\", {\n      className: classes.gridList,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 25\n      }\n    }, __jsx(\"div\", {\n      className: classes.gridListTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 29\n      }\n    }, __jsx(Typography, {\n      variant: \"h6\",\n      component: \"div\",\n      style: {\n        padding: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 33\n      }\n    }, groupName)), __jsx(Grid, {\n      container: true,\n      justify: 'space-between',\n      alignItems: 'center',\n      spacing: 2,\n      style: {\n        padding: '12px 10px 10px 15px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 29\n      }\n    }, newHotelList && newHotelList[groupName].sort((a, b) => {\n      return a.code - b.code;\n    }).map(hotel => __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 37\n      }\n    }, __jsx(HotelCard, {\n      key: hotel.code,\n      title: hotel.code,\n      imgUrl: hotel.thumbnail && GENERAL_SETTINGS.STATIC_URL + hotel.thumbnail,\n      onClick: () => handleHotelSelect(hotel.id, hotel.code),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 41\n      }\n    })))));\n  })));\n};\n\nconst mapStateToProps = state => {\n  return {\n    state: state.formReducer.guest\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  updateState: (stateType, stateName, value) => dispatch(updateState(stateType, stateName, value)),\n  setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withWidth()(SelectHotel));","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/guest/public/SelectHotel.js"],"names":["React","useEffect","useContext","connect","UseOrest","setToState","updateState","useSelector","Container","useTranslation","WebCmsGlobal","makeStyles","Card","CardActionArea","CardContent","CardMedia","Typography","jsonGroupBy","LOCAL_STORAGE_OREST_TOKEN_TEXT","Grid","withWidth","useSnackbar","useRouter","IconButton","ArrowForwardIcon","useStyles","theme","root","display","flexWrap","justifyContent","overflowX","backgroundColor","palette","background","paper","minHeight","height","borderRadius","gridList","width","marginBottom","gridListTitle","borderBottom","color","icon","HotelCard","title","imgUrl","onClick","padding","position","left","SelectHotel","props","onClose","classes","router","currentUser","state","orest","token","auth","access_token","hotelRefNo","Number","query","hotelrefno","enqueueSnackbar","t","GENERAL_SETTINGS","active","useHotelRefno","HOTEL_CHAIN_LIST","find","item","id","handleHotelSelect","code","apiUrl","OREST_URL","endpoint","method","params","then","respose","data","res","variant","catch","newHotelList","Object","keys","sort","reverse","map","groupName","index","a","b","hotel","thumbnail","STATIC_URL","mapStateToProps","formReducer","guest","mapDispatchToProps","dispatch","stateType","stateName","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext } from 'react'\nimport { connect } from 'react-redux'\nimport { UseOrest } from '@webcms/orest'\nimport { setToState, updateState } from 'state/actions'\nimport { useSelector } from 'react-redux'\nimport { Container } from '@material-ui/core'\nimport useTranslation from 'lib/translations/hooks/useTranslation'\nimport WebCmsGlobal from 'components/webcms-global'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardActionArea from '@material-ui/core/CardActionArea'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport Typography from '@material-ui/core/Typography'\nimport { jsonGroupBy, LOCAL_STORAGE_OREST_TOKEN_TEXT } from 'model/orest/constants'\nimport Grid from '@material-ui/core/Grid'\nimport withWidth from '@material-ui/core/withWidth'\nimport { useSnackbar } from 'notistack'\nimport { useRouter } from 'next/router'\nimport IconButton from '@material-ui/core/IconButton'\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflowX: 'hidden',\n        backgroundColor: theme.palette.background.paper,\n        minHeight: 600,\n        height:'100vh',\n        borderRadius: 2,\n    },\n    gridList: {\n        width: '100%',\n        marginBottom: '25px!important'\n    },\n    gridListTitle: {\n        height: 55,\n        background: '#e3eaea',\n        borderBottom: '1px solid rgb(224 224 224)',\n        color: '#79756d'\n    },\n    icon: {\n        color: 'rgb(255 255 255 / 83%)',\n    },\n}))\n\nconst HotelCard = ({title, imgUrl, onClick}) => {\n    return (\n        <Card onClick={() => onClick()} variant=\"outlined\">\n            <CardActionArea>\n                <CardMedia\n                    component=\"img\"\n                    height=\"190\"\n                    image={imgUrl}\n                    alt={title}\n                />\n                <CardContent style={{padding: '0 10px 0 10px'}}>\n                    <Grid container direction=\"row\" alignItems=\"center\" justify={'space-between'}>\n                        <Grid item>\n                            <Typography variant=\"button\" component=\"div\">\n                                {title}\n                            </Typography>\n                        </Grid>\n                        <Grid item>\n                            <IconButton style={{ position: 'relative', left: 10 }} onClick={() => onClick()}>\n                                <ArrowForwardIcon/>\n                            </IconButton>\n                        </Grid>\n                    </Grid>\n                </CardContent>\n            </CardActionArea>\n        </Card>\n    )\n}\n\nconst SelectHotel = (props) => {\n    const { setToState, onClose } = props\n    const classes = useStyles()\n    const router = useRouter()\n\n    let currentUser = useSelector((state) => state.orest.currentUser && state.orest.currentUser)\n    const token = useSelector((state) => state?.orest?.currentUser?.auth?.access_token || false)\n    const hotelRefNo = Number(router.query.hotelrefno)\n\n    const { enqueueSnackbar } = useSnackbar()\n    const { t } = useTranslation()\n    const { GENERAL_SETTINGS } = useContext(WebCmsGlobal)\n\n    useEffect(() => {\n        let active = true\n\n        if(active && hotelRefNo){\n            const useHotelRefno = GENERAL_SETTINGS?.HOTEL_CHAIN_LIST?.find(item => item.id === hotelRefNo) || false\n            if(useHotelRefno){\n                handleHotelSelect(useHotelRefno.id, useHotelRefno.code)\n            }\n        }\n\n        return () => {\n            active = false\n        }\n    }, [hotelRefNo])\n\n    const handleHotelSelect = (id, code) => {\n        if (id) {\n            if(currentUser){\n                UseOrest({\n                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                    endpoint: 'tools/changehotel',\n                    method: 'PUT',\n                    token,\n                    params: {\n                        hotelrefno: id\n                    },\n                }).then((respose) => {\n                    if(respose.data && respose.data.data && respose.data.data.res){\n                        setToState('guest', ['changeHotelRefno'], respose.data.data.res)\n                        setToState('guest', ['changeHotelName'], code)\n                        enqueueSnackbar(t('str_hotelChangedSuccessfully'), { variant: 'success' })\n                    }else{\n                        enqueueSnackbar(t('str_unexpectedProblem'), { variant: 'warning' })\n                    }\n\n                }).catch(()=>{\n                    enqueueSnackbar(t('str_unexpectedProblem'), { variant: 'warning' })\n                })\n            }else {\n                setToState('guest', ['changeHotelRefno'], id)\n                setToState('guest', ['changeHotelName'], code)\n            }\n\n            if(typeof onClose === 'function'){\n                setToState('guest', ['infoListOneGroup', 'id'], false)\n                setToState('guest', ['infoListOneGroup', 'groupName'], false)\n                setToState('guest', ['infoListOneGroup', 'data'], false)\n                setToState('guest', ['infoListOneGroup', 'langcode'], false)\n                setToState('guest', ['infoListOneGroup', 'chainid'], false)\n                onClose()\n            }\n        }\n    }\n\n    let newHotelList = jsonGroupBy(GENERAL_SETTINGS.HOTEL_CHAIN_LIST, 'countryAndCity')\n\n    return (\n        <Container maxWidth=\"md\">\n            <div className={classes.root}>\n                {newHotelList &&\n                Object.keys(newHotelList).sort().reverse().map((groupName, index) => {\n                    return (\n                        <div className={classes.gridList} key={index}>\n                            <div className={classes.gridListTitle}>\n                                <Typography variant=\"h6\" component=\"div\" style={{padding: 10}}>\n                                    {groupName}\n                                </Typography>\n                            </div>\n                            <Grid container justify={'space-between'} alignItems={'center'} spacing={2} style={{padding: '12px 10px 10px 15px'}}>\n                                {newHotelList && newHotelList[groupName].sort((a, b) => { return a.code - b.code}).map((hotel) => (\n                                    <Grid item xs={12} sm={6}>\n                                        <HotelCard\n                                            key={hotel.code}\n                                            title={hotel.code}\n                                            imgUrl={hotel.thumbnail && GENERAL_SETTINGS.STATIC_URL + hotel.thumbnail}\n                                            onClick={()=> handleHotelSelect(hotel.id, hotel.code)}\n                                        />\n                                    </Grid>\n                                ))}\n                            </Grid>\n                        </div>\n                    )\n                })}\n            </div>\n        </Container>\n\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        state: state.formReducer.guest,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    updateState: (stateType, stateName, value) => dispatch(updateState(stateType, stateName, value)),\n    setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withWidth()(SelectHotel))\n"]},"metadata":{},"sourceType":"module"}