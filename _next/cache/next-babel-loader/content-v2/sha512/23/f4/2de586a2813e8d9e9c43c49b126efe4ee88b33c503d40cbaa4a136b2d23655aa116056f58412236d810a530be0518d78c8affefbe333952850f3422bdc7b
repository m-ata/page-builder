{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/guest/account/AccountPage.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport GuestLayout from 'components/layout/containers/GuestLayout';\nimport Tabs from '@material-ui/core/Tabs';\nimport MuiTab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport styles from './style/AccountPage.style';\nimport AccountBanner from 'components/layout/components/AccountBanner';\nimport withWidth from '@material-ui/core/withWidth/withWidth';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core';\nimport { connect, useSelector } from 'react-redux';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nimport Home from 'components/guest/public/Home';\nimport Info from 'components/guest/public/Info';\nimport Events from 'components/guest/public/Events';\nimport MyProfile from './MyProfile';\nimport History from './History';\nimport Router, { useRouter } from 'next/router';\nimport { ZERO } from 'model/globals';\nimport AccountKiosk from './AccountKiosk';\nimport { setToState } from 'state/actions';\nconst useStyles = makeStyles(styles);\nconst Tab = withStyles(theme => ({\n  root: {\n    textTransform: 'uppercase',\n    [theme.breakpoints.down('xs')]: {\n      fontSize: '0.8em'\n    }\n  }\n}))(MuiTab);\n\nconst TabPanel = props => {\n  const {\n    children,\n    value,\n    hashCode,\n    index\n  } = props,\n        other = _objectWithoutProperties(props, [\"children\", \"value\", \"hashCode\", \"index\"]);\n\n  const classes = useStyles();\n  return __jsx(Typography, _extends({\n    component: \"div\",\n    role: \"tabpanel\",\n    hidden: value !== hashCode,\n    id: `scrollable-auto-tabpanel-${index}`,\n    \"aria-labelledby\": `scrollable-auto-tab-${index}`,\n    className: classes.tabPanel\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), value === hashCode && __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 36\n    }\n  }, children));\n};\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  hashCode: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`\n  };\n}\n\nconst Account = props => {\n  const {\n    width,\n    setToState\n  } = props;\n  const classes = useStyles();\n  const router = useRouter();\n  const isKiosk = router.query.kiosk === 'true' ? true : false;\n  const {\n    t\n  } = useTranslation();\n  const isLogin = useSelector(state => state.orest.currentUser && state.orest.currentUser.auth) ? true : false;\n  let guestMenu = [{\n    componentId: 'HOME',\n    name: 'str_home',\n    hashCode: 'home',\n    onlylogin: false\n  }, {\n    componentId: 'INFO',\n    name: 'str_hotelInfo',\n    hashCode: 'info',\n    onlylogin: false\n  }, {\n    componentId: 'EVENTS',\n    name: 'str_events',\n    hashCode: 'events',\n    onlylogin: false\n  }, {\n    componentId: 'MY_PROFILE',\n    name: 'str_myProfile',\n    hashCode: 'profile',\n    onlylogin: true\n  }, {\n    componentId: 'HISTORY',\n    name: 'str_history',\n    hashCode: 'history',\n    onlylogin: true\n  }];\n  guestMenu = !isLogin ? guestMenu.filter(item => item.onlylogin === false) : guestMenu;\n  const tabPanelHashCode = router.query.menu;\n  const {\n    0: guestTabPanelHashCode,\n    1: setGuestTabPanelHashCode\n  } = useState(guestMenu.findIndex(menu => menu.hashCode === tabPanelHashCode) > -1 ? router.query.menu : guestMenu && guestMenu[ZERO] && guestMenu[ZERO].hashCode ? guestMenu[ZERO].hashCode : false);\n  useEffect(() => {\n    setToState('guest', ['tabPanelHashCode'], guestTabPanelHashCode);\n  }, []);\n  useEffect(() => {\n    if (router.query.menu) {\n      const menuIndex = guestMenu.findIndex(menu => menu.hashCode === tabPanelHashCode);\n\n      if (menuIndex > -1) {\n        setGuestTabPanelHashCode(router.query.menu);\n        setToState('guest', ['tabPanelHashCode'], router.query.menu);\n      }\n    }\n  }, [router.query.menu]);\n\n  if (!guestTabPanelHashCode) {\n    return __jsx(GuestLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, __jsx(Typography, {\n      variant: \"h6\",\n      align: \"center\",\n      style: {\n        marginTop: 50\n      },\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, t('str_youMustLoginFirst')));\n  }\n\n  const handleGuestPanelTabChange = (event, newValue) => {\n    if (guestTabPanelHashCode !== newValue) {\n      setGuestTabPanelHashCode(newValue);\n      setToState('guest', ['tabPanelHashCode'], newValue);\n\n      if (tabPanelHashCode) {\n        Router.push({\n          pathname: router.pathname,\n          query: {\n            menu: newValue\n          }\n        });\n      }\n\n      setToState('guest', ['infoListOneGroup', 'id'], false);\n      setToState('guest', ['infoListOneGroup', 'groupName'], false);\n      setToState('guest', ['infoListOneGroup', 'data'], false);\n      setToState('guest', ['infoListOneGroup', 'langcode'], false);\n      setToState('guest', ['infoListOneGroup', 'chainid'], false);\n    }\n  };\n\n  const renderMenuComponent = menuItem => {\n    switch (menuItem.componentId) {\n      case 'HOME':\n        return __jsx(Home, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 24\n          }\n        });\n\n      case 'INFO':\n        return __jsx(Info, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 24\n          }\n        });\n\n      case 'EVENTS':\n        return __jsx(Events, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 24\n          }\n        });\n\n      case 'MY_PROFILE':\n        return __jsx(MyProfile, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 24\n          }\n        });\n\n      case 'HISTORY':\n        return __jsx(History, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 24\n          }\n        });\n    }\n  };\n\n  if (isKiosk) {\n    return __jsx(AccountKiosk, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return __jsx(GuestLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }, isLogin && __jsx(AccountBanner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 25\n    }\n  }), __jsx(Tabs, {\n    value: guestTabPanelHashCode,\n    onChange: handleGuestPanelTabChange,\n    variant: guestMenu.length > 3 && width === 'xs' ? 'scrollable' : 'fullWidth',\n    scrollButtons: \"on\",\n    classes: {\n      root: classes.tabsRoot,\n      indicator: classes.tabsIndicator,\n      flexContainer: classes.tabsFlexContainer\n    },\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    \"aria-label\": \"menu tabs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }, guestMenu.map((menuItem, i) => {\n    return __jsx(Tab, _extends({\n      className: classes.tab,\n      value: menuItem.hashCode,\n      label: t(menuItem.name)\n    }, a11yProps(i), {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 28\n      }\n    }));\n  })), guestMenu.map((menuItem, i) => {\n    return __jsx(TabPanel, {\n      value: guestTabPanelHashCode,\n      hashCode: menuItem.hashCode,\n      index: i,\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 21\n      }\n    }, renderMenuComponent(menuItem));\n  }));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value))\n});\n\nexport default connect(null, mapDispatchToProps)(withWidth()(Account));","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/guest/account/AccountPage.js"],"names":["React","useEffect","useState","PropTypes","GuestLayout","Tabs","MuiTab","Typography","styles","AccountBanner","withWidth","makeStyles","withStyles","connect","useSelector","useTranslation","Home","Info","Events","MyProfile","History","Router","useRouter","ZERO","AccountKiosk","setToState","useStyles","Tab","theme","root","textTransform","breakpoints","down","fontSize","TabPanel","props","children","value","hashCode","index","other","classes","tabPanel","propTypes","node","any","isRequired","a11yProps","id","Account","width","router","isKiosk","query","kiosk","t","isLogin","state","orest","currentUser","auth","guestMenu","componentId","name","onlylogin","filter","item","tabPanelHashCode","menu","guestTabPanelHashCode","setGuestTabPanelHashCode","findIndex","menuIndex","marginTop","handleGuestPanelTabChange","event","newValue","push","pathname","renderMenuComponent","menuItem","length","tabsRoot","indicator","tabsIndicator","flexContainer","tabsFlexContainer","map","i","tab","mapDispatchToProps","dispatch","stateType","stateName"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport GuestLayout from 'components/layout/containers/GuestLayout'\nimport Tabs from '@material-ui/core/Tabs'\nimport MuiTab from '@material-ui/core/Tab'\nimport Typography from '@material-ui/core/Typography'\nimport styles from './style/AccountPage.style'\nimport AccountBanner from 'components/layout/components/AccountBanner'\nimport withWidth from '@material-ui/core/withWidth/withWidth'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { withStyles } from '@material-ui/core'\nimport { connect, useSelector } from 'react-redux'\nimport useTranslation from 'lib/translations/hooks/useTranslation'\nimport Home from 'components/guest/public/Home'\nimport Info from 'components/guest/public/Info'\nimport Events from 'components/guest/public/Events'\nimport MyProfile from './MyProfile'\nimport History from './History'\nimport Router, { useRouter } from 'next/router'\nimport { ZERO } from 'model/globals'\nimport AccountKiosk from './AccountKiosk'\nimport { setToState } from 'state/actions'\n\nconst useStyles = makeStyles(styles)\n\nconst Tab = withStyles((theme) => ({\n    root: {\n        textTransform: 'uppercase',\n        [theme.breakpoints.down('xs')]: {\n            fontSize: '0.8em',\n        },\n    }\n}))(MuiTab)\n\nconst TabPanel = (props) => {\n    const { children, value, hashCode, index, ...other } = props\n    const classes = useStyles()\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== hashCode}\n            id={`scrollable-auto-tabpanel-${index}`}\n            aria-labelledby={`scrollable-auto-tab-${index}`}\n            className={classes.tabPanel}\n            {...other}\n        >\n            {value === hashCode && <React.Fragment>{children}</React.Fragment>}\n        </Typography>\n    )\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    hashCode: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n}\n\nfunction a11yProps(index) {\n    return {\n        id: `scrollable-auto-tab-${index}`,\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    }\n}\n\nconst Account = (props) => {\n    const { width, setToState } = props\n    const classes = useStyles()\n    const router = useRouter()\n    const isKiosk = router.query.kiosk === 'true' ? true : false\n    const { t } = useTranslation()\n    const isLogin = useSelector((state) => state.orest.currentUser && state.orest.currentUser.auth) ? true : false\n\n    let guestMenu = [\n        {\n            componentId: 'HOME',\n            name: 'str_home',\n            hashCode: 'home',\n            onlylogin: false,\n        },\n        {\n            componentId: 'INFO',\n            name: 'str_hotelInfo',\n            hashCode: 'info',\n            onlylogin: false,\n        },\n        {\n            componentId: 'EVENTS',\n            name: 'str_events',\n            hashCode: 'events',\n            onlylogin: false,\n        },\n        {\n            componentId: 'MY_PROFILE',\n            name: 'str_myProfile',\n            hashCode: 'profile',\n            onlylogin: true,\n        },\n        {\n            componentId: 'HISTORY',\n            name: 'str_history',\n            hashCode: 'history',\n            onlylogin: true,\n        },\n    ]\n\n    guestMenu = !isLogin ? guestMenu.filter((item) => item.onlylogin === false) : guestMenu\n    const tabPanelHashCode = router.query.menu\n    const [guestTabPanelHashCode, setGuestTabPanelHashCode] = useState(\n        guestMenu.findIndex((menu) => menu.hashCode === tabPanelHashCode) > -1\n            ? router.query.menu\n            : guestMenu && guestMenu[ZERO] && guestMenu[ZERO].hashCode\n            ? guestMenu[ZERO].hashCode\n            : false\n    )\n\n    useEffect(() => {\n        setToState('guest', ['tabPanelHashCode'], guestTabPanelHashCode)\n    }, [])\n\n    useEffect(()=> {\n        if(router.query.menu){\n           const menuIndex = guestMenu.findIndex((menu) => menu.hashCode === tabPanelHashCode)\n           if(menuIndex > -1){\n               setGuestTabPanelHashCode(router.query.menu)\n               setToState('guest', ['tabPanelHashCode'], router.query.menu)\n           }\n        }\n    }, [router.query.menu])\n\n    if (!guestTabPanelHashCode) {\n        return (\n            <GuestLayout>\n                <Typography variant=\"h6\" align=\"center\" style={{ marginTop: 50 }} gutterBottom>\n                    {t('str_youMustLoginFirst')}\n                </Typography>\n            </GuestLayout>\n        )\n    }\n\n    const handleGuestPanelTabChange = (event, newValue) => {\n        if (guestTabPanelHashCode !== newValue) {\n            setGuestTabPanelHashCode(newValue)\n            setToState('guest', ['tabPanelHashCode'], newValue)\n            if (tabPanelHashCode) {\n                Router.push({\n                    pathname: router.pathname,\n                    query: {\n                        menu: newValue,\n                    },\n                })\n            }\n\n            setToState('guest', ['infoListOneGroup', 'id'], false)\n            setToState('guest', ['infoListOneGroup', 'groupName'], false)\n            setToState('guest', ['infoListOneGroup', 'data'], false)\n            setToState('guest', ['infoListOneGroup', 'langcode'], false)\n            setToState('guest', ['infoListOneGroup', 'chainid'], false)\n        }\n    }\n\n    const renderMenuComponent = (menuItem) => {\n        switch (menuItem.componentId) {\n            case 'HOME':\n                return <Home />\n            case 'INFO':\n                return <Info />\n            case 'EVENTS':\n                return <Events />\n            case 'MY_PROFILE':\n                return <MyProfile />\n            case 'HISTORY':\n                return <History />\n        }\n    }\n\n    if(isKiosk){\n        return <AccountKiosk />\n    }\n\n    return (\n        <GuestLayout>\n            {isLogin && <AccountBanner />}\n            <Tabs\n                value={guestTabPanelHashCode}\n                onChange={handleGuestPanelTabChange}\n                variant={guestMenu.length > 3 && width === 'xs' ? 'scrollable' : 'fullWidth'}\n                scrollButtons=\"on\"\n                classes={{\n                    root: classes.tabsRoot,\n                    indicator: classes.tabsIndicator,\n                    flexContainer: classes.tabsFlexContainer,\n                }}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                aria-label=\"menu tabs\"\n            >\n                {guestMenu.map((menuItem, i) => {\n                    return <Tab className={classes.tab} value={menuItem.hashCode} label={t(menuItem.name)} {...a11yProps(i)} key={i} />\n                })}\n            </Tabs>\n            {guestMenu.map((menuItem, i) => {\n                return (\n                    <TabPanel value={guestTabPanelHashCode} hashCode={menuItem.hashCode} index={i} key={i}>\n                        {renderMenuComponent(menuItem)}\n                    </TabPanel>\n                )\n            })}\n        </GuestLayout>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value)),\n})\n\nexport default connect(null, mapDispatchToProps)(withWidth()(Account))"]},"metadata":{},"sourceType":"module"}