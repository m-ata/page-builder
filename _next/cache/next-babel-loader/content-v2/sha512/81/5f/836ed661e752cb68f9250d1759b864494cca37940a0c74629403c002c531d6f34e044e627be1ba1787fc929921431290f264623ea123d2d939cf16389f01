{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/survey/surveytree/options/PrivacyInfo.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { SURVEY_INPUT_VARIANT } from '../../../../assets/const';\nimport useSurveyAction from '../../../../model/survey/useSurveyAction';\nimport { useSelector } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport styles from '../../style/SurveyOptions.style';\nimport SurveyTooltip from 'components/survey/helper/SurveyTooltip';\nconst useStyles = makeStyles(styles); //TODO - ask what is this for and improve component\n\nexport default function PrivacyInfoOption(props) {\n  const {\n    option,\n    optionTyp\n  } = props; //style\n\n  const classes = useStyles(); //redux\n\n  const {\n    setSurveyAnswerMulti,\n    deleteSurveyAnswer\n  } = useSurveyAction();\n  const surveyTrans = useSelector(state => state.survey.trans);\n  const surveyIsValid = useSelector(state => state.survey.isValid);\n  const oldAnswer = useSelector(state => state.survey.answers[surveyTrans] && state.survey.answers[surveyTrans][option.parentid] && state.survey.answers[surveyTrans][option.parentid][option.id]); //state\n\n  const {\n    0: optionValue,\n    1: setOptionValue\n  } = useState(oldAnswer ? oldAnswer.valuetext : '');\n  const {\n    0: isFocus,\n    1: setIsFocus\n  } = useState(false);\n\n  const handleChangeOption = event => {\n    const value = event.target.value;\n    setOptionValue(value);\n\n    if (value !== '') {\n      setSurveyAnswerMulti(surveyTrans, option.parentid, option.id, {\n        typ: optionTyp,\n        parentid: option.parentid,\n        valuetext: value\n      });\n    } else {\n      deleteSurveyAnswer(surveyTrans, option.parentid, option.id);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: classes.optionContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, __jsx(SurveyTooltip, {\n    title: option && option.note || '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, __jsx(TextField, {\n    onChange: handleChangeOption,\n    onFocus: () => {\n      setIsFocus(true);\n    },\n    onBlur: () => {\n      setIsFocus(false);\n    },\n    variant: SURVEY_INPUT_VARIANT,\n    fullWidth: true,\n    disabled: surveyIsValid,\n    name: String(option.id),\n    value: isFocus ? optionValue : optionValue.replace(/\\S/gi, '*'),\n    label: option.langwordtxt || option.description,\n    className: classes.textField,\n    InputProps: {\n      classes: {\n        input: classes.textFieldInput\n      }\n    },\n    InputLabelProps: {\n      className: classes.textFieldLabel\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/survey/surveytree/options/PrivacyInfo.js"],"names":["React","useState","TextField","SURVEY_INPUT_VARIANT","useSurveyAction","useSelector","makeStyles","styles","SurveyTooltip","useStyles","PrivacyInfoOption","props","option","optionTyp","classes","setSurveyAnswerMulti","deleteSurveyAnswer","surveyTrans","state","survey","trans","surveyIsValid","isValid","oldAnswer","answers","parentid","id","optionValue","setOptionValue","valuetext","isFocus","setIsFocus","handleChangeOption","event","value","target","typ","optionContainer","note","String","replace","langwordtxt","description","textField","input","textFieldInput","className","textFieldLabel"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,oBAAT,QAAqC,0BAArC;AACA,OAAOC,eAAP,MAA4B,0CAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,OAAOC,aAAP,MAA0B,wCAA1B;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAACC,MAAD,CAA5B,C,CAEA;;AACA,eAAe,SAASG,iBAAT,CAA2BC,KAA3B,EAAkC;AAC7C,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAwBF,KAA9B,CAD6C,CAG7C;;AACA,QAAMG,OAAO,GAAGL,SAAS,EAAzB,CAJ6C,CAM7C;;AACA,QAAM;AAAEM,IAAAA,oBAAF;AAAwBC,IAAAA;AAAxB,MAA+CZ,eAAe,EAApE;AACA,QAAMa,WAAW,GAAGZ,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAaC,KAAzB,CAA/B;AACA,QAAMC,aAAa,GAAGhB,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAaG,OAAzB,CAAjC;AACA,QAAMC,SAAS,GAAGlB,WAAW,CACxBa,KAAD,IACIA,KAAK,CAACC,MAAN,CAAaK,OAAb,CAAqBP,WAArB,KACAC,KAAK,CAACC,MAAN,CAAaK,OAAb,CAAqBP,WAArB,EAAkCL,MAAM,CAACa,QAAzC,CADA,IAEAP,KAAK,CAACC,MAAN,CAAaK,OAAb,CAAqBP,WAArB,EAAkCL,MAAM,CAACa,QAAzC,EAAmDb,MAAM,CAACc,EAA1D,CAJqB,CAA7B,CAV6C,CAiB7C;;AACA,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgC3B,QAAQ,CAACsB,SAAS,GAAGA,SAAS,CAACM,SAAb,GAAyB,EAAnC,CAA9C;AACA,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwB9B,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAM+B,kBAAkB,GAAIC,KAAD,IAAW;AAClC,UAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAA3B;AACAN,IAAAA,cAAc,CAACM,KAAD,CAAd;;AAEA,QAAIA,KAAK,KAAK,EAAd,EAAkB;AACdnB,MAAAA,oBAAoB,CAACE,WAAD,EAAcL,MAAM,CAACa,QAArB,EAA+Bb,MAAM,CAACc,EAAtC,EAA0C;AAC1DU,QAAAA,GAAG,EAAEvB,SADqD;AAE1DY,QAAAA,QAAQ,EAAEb,MAAM,CAACa,QAFyC;AAG1DI,QAAAA,SAAS,EAAEK;AAH+C,OAA1C,CAApB;AAKH,KAND,MAMO;AACHlB,MAAAA,kBAAkB,CAACC,WAAD,EAAcL,MAAM,CAACa,QAArB,EAA+Bb,MAAM,CAACc,EAAtC,CAAlB;AACH;AACJ,GAbD;;AAeA,SACI;AAAK,IAAA,SAAS,EAAEZ,OAAO,CAACuB,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,aAAD;AAAe,IAAA,KAAK,EAAEzB,MAAM,IAAIA,MAAM,CAAC0B,IAAjB,IAAyB,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AACI,IAAA,QAAQ,EAAEN,kBADd;AAEI,IAAA,OAAO,EAAE,MAAM;AACXD,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH,KAJL;AAKI,IAAA,MAAM,EAAE,MAAM;AACVA,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAPL;AAQI,IAAA,OAAO,EAAE5B,oBARb;AASI,IAAA,SAAS,MATb;AAUI,IAAA,QAAQ,EAAEkB,aAVd;AAWI,IAAA,IAAI,EAAEkB,MAAM,CAAC3B,MAAM,CAACc,EAAR,CAXhB;AAYI,IAAA,KAAK,EAAEI,OAAO,GAAGH,WAAH,GAAiBA,WAAW,CAACa,OAAZ,CAAoB,MAApB,EAA4B,GAA5B,CAZnC;AAaI,IAAA,KAAK,EAAE5B,MAAM,CAAC6B,WAAP,IAAsB7B,MAAM,CAAC8B,WAbxC;AAcI,IAAA,SAAS,EAAE5B,OAAO,CAAC6B,SAdvB;AAeI,IAAA,UAAU,EAAE;AAAE7B,MAAAA,OAAO,EAAE;AAAE8B,QAAAA,KAAK,EAAE9B,OAAO,CAAC+B;AAAjB;AAAX,KAfhB;AAgBI,IAAA,eAAe,EAAE;AAAEC,MAAAA,SAAS,EAAEhC,OAAO,CAACiC;AAArB,KAhBrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ;AAwBH","sourcesContent":["import React, { useState } from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport { SURVEY_INPUT_VARIANT } from '../../../../assets/const'\nimport useSurveyAction from '../../../../model/survey/useSurveyAction'\nimport { useSelector } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\nimport styles from '../../style/SurveyOptions.style'\nimport SurveyTooltip from 'components/survey/helper/SurveyTooltip'\n\nconst useStyles = makeStyles(styles)\n\n//TODO - ask what is this for and improve component\nexport default function PrivacyInfoOption(props) {\n    const { option, optionTyp } = props\n\n    //style\n    const classes = useStyles()\n\n    //redux\n    const { setSurveyAnswerMulti, deleteSurveyAnswer } = useSurveyAction()\n    const surveyTrans = useSelector((state) => state.survey.trans)\n    const surveyIsValid = useSelector((state) => state.survey.isValid)\n    const oldAnswer = useSelector(\n        (state) =>\n            state.survey.answers[surveyTrans] &&\n            state.survey.answers[surveyTrans][option.parentid] &&\n            state.survey.answers[surveyTrans][option.parentid][option.id],\n    )\n\n    //state\n    const [optionValue, setOptionValue] = useState(oldAnswer ? oldAnswer.valuetext : '')\n    const [isFocus, setIsFocus] = useState(false)\n\n    const handleChangeOption = (event) => {\n        const value = event.target.value\n        setOptionValue(value)\n\n        if (value !== '') {\n            setSurveyAnswerMulti(surveyTrans, option.parentid, option.id, {\n                typ: optionTyp,\n                parentid: option.parentid,\n                valuetext: value,\n            })\n        } else {\n            deleteSurveyAnswer(surveyTrans, option.parentid, option.id)\n        }\n    }\n\n    return (\n        <div className={classes.optionContainer}>\n            <SurveyTooltip title={option && option.note || ''}>\n                <TextField\n                    onChange={handleChangeOption}\n                    onFocus={() => {\n                        setIsFocus(true)\n                    }}\n                    onBlur={() => {\n                        setIsFocus(false)\n                    }}\n                    variant={SURVEY_INPUT_VARIANT}\n                    fullWidth\n                    disabled={surveyIsValid}\n                    name={String(option.id)}\n                    value={isFocus ? optionValue : optionValue.replace(/\\S/gi, '*')}\n                    label={option.langwordtxt || option.description}\n                    className={classes.textField}\n                    InputProps={{ classes: { input: classes.textFieldInput } }}\n                    InputLabelProps={{ className: classes.textFieldLabel }}\n                />\n            </SurveyTooltip>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}