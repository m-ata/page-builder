{"ast":null,"code":"import _extends from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/mata/app-cloudweb/components/user-portal/components/RequestDetailNote.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport { deleteFromState as _deleteFromState, pushToState as _pushToState, setToState as _setToState, updateState as _updateState } from 'state/actions';\nimport { Patch, ViewList, List, UseOrest, Delete } from '@webcms/orest';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Card from '@material-ui/core/Card';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport DoneIcon from '@material-ui/icons/Done';\nimport EditIcon from '@material-ui/icons/Edit';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PopupState, { bindTrigger, bindMenu } from 'material-ui-popup-state';\nimport { DEFAULT_OREST_TOKEN, isErrorMsg, OREST_ENDPOINT, REQUEST_METHOD_CONST } from 'model/orest/constants';\nimport WebCmsGlobal from 'components/webcms-global';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport NewRequestNoteReply from './NewRequestNoteReply';\nimport Collapse from '@material-ui/core/Collapse';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport LoadingSpinner from '../../LoadingSpinner';\nimport TextField from '@material-ui/core/TextField';\nimport useNotifications from '../../../model/notification/useNotifications';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nimport { CustomToolTip } from './CustomToolTip/CustomToolTip';\nimport moment from 'moment';\nimport clsx from 'clsx';\nimport { PreviewFile } from \"../../../model/orest/components/RaFile\";\nimport { useSnackbar } from \"notistack\";\nimport MediaViewerDialog from \"../../../@webcms-ui/core/media-viewer-dialog\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      width: '100%'\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: 200\n    },\n    field: {\n      marginRight: theme.spacing(1)\n    },\n    replyNoteBox: function replyNoteBox(props) {\n      return {\n        width: props !== null && props !== void 0 && props.isreply ? 'calc(100% - ' + (props === null || props === void 0 ? void 0 : props.treeLevel) * 25 + 'px)' : '100%',\n        marginLeft: props !== null && props !== void 0 && props.isreply ? 'auto' : '',\n        paddingTop: props !== null && props !== void 0 && props.isreply ? 0 : ''\n      };\n    },\n    dateStyle: {\n      fontSize: 13,\n      color: '#565656',\n      \"float\": 'right',\n      paddingRight: \"8px\"\n    },\n    textFieldStyle: {\n      \"& .MuiOutlinedInput-root\": {\n        \"& fieldset\": {\n          border: \"1px solid #E8E9EC\"\n        },\n        \"&:hover fieldset\": {\n          borderColor: \"#4666B0\"\n        },\n        \"&.Mui-focused fieldset\": {\n          borderColor: \"#4666B0\"\n        }\n      }\n    },\n    inputAdornmentStyle: {\n      position: \"absolute\",\n      right: \"2px\",\n      top: \"10px\",\n      \"&.MuiInputAdornment-positionStart\": {\n        marginRight: \"0\"\n      }\n    },\n    cardStyle: {\n      width: '100%',\n      \"& .MuiCardHeader-subheader>a\": {\n        color: \"#007bff\",\n        textDecoration: \"none\",\n        \"&:hover\": {\n          color: \"#0056b3\",\n          textDecoration: \"underline\"\n        }\n      }\n    },\n    listItem: {\n      paddingTop: 0,\n      paddingBottom: 0\n    },\n    iconButton: {\n      textAlign: 'center',\n      width: '100%',\n      cursor: 'pointer',\n      padding: '1px 12px',\n      borderRadius: '4px',\n      '&:hover': {\n        backgroundColor: 'rgb(0,0,0,0.04)'\n      }\n    },\n    icon: {\n      margin: '4px 0'\n    },\n    disabledIcon: {\n      color: 'rgba(0, 0, 0, 0.38)',\n      cursor: 'standard',\n      pointerEvents: 'none'\n    },\n    imageNote: {\n      cursor: 'pointer',\n      border: '1px solid #ddd',\n      width: 150,\n      height: 100,\n      borderRadius: '4px',\n      '&:hover': {\n        boxShadow: '0 0 2px 1px rgb(0 140 186 / 50%)'\n      }\n    }\n  };\n});\n\nvar RequestDetailNote = function RequestDetailNote(props) {\n  _s();\n\n  var state = props.state,\n      data = props.data,\n      isreply = props.isreply,\n      currentTaskNotes = props.currentTaskNotes,\n      setToState = props.setToState,\n      updateState = props.updateState,\n      treeLevel = props.treeLevel,\n      getNoteList = props.getNoteList,\n      handleGetScroll = props.handleGetScroll,\n      raNoteUserAccess = props.raNoteUserAccess;\n  var classes = useStyles({\n    isreply: isreply,\n    treeLevel: treeLevel\n  });\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useSnackbar = useSnackbar(),\n      enqueueSnackbar = _useSnackbar.enqueueSnackbar;\n\n  var _useContext = useContext(WebCmsGlobal),\n      GENERAL_SETTINGS = _useContext.GENERAL_SETTINGS;\n\n  var loginfo = useSelector(function (state) {\n    var _state$orest, _state$orest$currentU;\n\n    return (state === null || state === void 0 ? void 0 : (_state$orest = state.orest) === null || _state$orest === void 0 ? void 0 : (_state$orest$currentU = _state$orest.currentUser) === null || _state$orest$currentU === void 0 ? void 0 : _state$orest$currentU.loginfo) || false;\n  });\n  var token = useSelector(function (state) {\n    var _state$orest2, _state$orest2$current, _state$orest2$current2;\n\n    return (state === null || state === void 0 ? void 0 : (_state$orest2 = state.orest) === null || _state$orest2 === void 0 ? void 0 : (_state$orest2$current = _state$orest2.currentUser) === null || _state$orest2$current === void 0 ? void 0 : (_state$orest2$current2 = _state$orest2$current.auth) === null || _state$orest2$current2 === void 0 ? void 0 : _state$orest2$current2.access_token) || false;\n  });\n\n  var _useState = useState(false),\n      isMyRequestNoteReply = _useState[0],\n      setIsMyRequestNoteReply = _useState[1];\n\n  var _useState2 = useState(false),\n      openMediaDialog = _useState2[0],\n      setOpenMediaDialog = _useState2[1];\n\n  var _useState3 = useState(false),\n      isMediaLoading = _useState3[0],\n      setIsMediaLoading = _useState3[1];\n\n  var _useState4 = useState(''),\n      mediaUrl = _useState4[0],\n      setMediaUrl = _useState4[1];\n\n  var _useState5 = useState(''),\n      fileType = _useState5[0],\n      setFileType = _useState5[1];\n\n  var handleRequestDetailNoteDone = function handleRequestDetailNoteDone(popupState, isDone) {\n    popupState.close();\n    updateState('userPortal', 'currentTaskNotesLoading', true);\n    handleGetScroll();\n    Patch({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.RANOTE,\n      token: token,\n      gid: data.gid,\n      data: {\n        isdone: !isDone\n      }\n    }).then(function (r1) {\n      if (r1.status === 200) {\n        getNoteList();\n      } else {\n        updateState('userPortal', 'currentTaskNotesLoading', false);\n      }\n    });\n  };\n\n  var handleDefRequestReplyNote = function handleDefRequestReplyNote(noteid, userid) {\n    if (state.defMyRequestNoteReply.length > 0) {\n      Delete({\n        apiUrl: GENERAL_SETTINGS.OREST_URL,\n        endpoint: OREST_ENDPOINT.RANOTE,\n        token: token,\n        gid: state.defMyRequestNoteReply.gid,\n        params: {\n          hotelrefno: data.hotelrefno\n        }\n      }).then(function (r) {\n        if (r.status === 200) {\n          setToState('userPortal', ['defMyRequestNoteReply'], []);\n        } else {}\n      });\n    }\n\n    setIsMyRequestNoteReply(true);\n    UseOrest({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.RANOTE + OREST_ENDPOINT.SLASH + OREST_ENDPOINT.REPLY,\n      token: token,\n      method: REQUEST_METHOD_CONST.POST,\n      params: {\n        id: noteid,\n        userid: userid,\n        hotelrefno: data.hotelrefno\n      }\n    }).then(function (r1) {\n      var replyID = r1.data.data[0].res;\n\n      if (r1.status === 200 && replyID > 0) {\n        List({\n          apiUrl: GENERAL_SETTINGS.OREST_URL,\n          endpoint: OREST_ENDPOINT.RANOTE,\n          token: token,\n          params: {\n            query: \"id::\".concat(replyID, \",isprivate::false\"),\n            start: 0,\n            hotelrefno: data.hotelrefno\n          }\n        }).then(function (r2) {\n          setToState('userPortal', ['defMyRequestNoteReply'], r2.data.data[0]);\n          setIsMyRequestNoteReply(false);\n        });\n      } else {\n        setIsMyRequestNoteReply(false);\n      }\n    });\n  };\n\n  var handleEditModalStatus = function handleEditModalStatus(popupState) {\n    popupState.close();\n    setToState('userPortal', ['openNoteDialog'], true);\n    setToState('userPortal', ['isEditNote'], true);\n    setToState('userPortal', ['defMyRequestNote'], data);\n  };\n\n  var checkURL = function checkURL(url) {\n    return url.match(/\\.(jpeg|jpg|gif|png)$/) != null;\n  };\n\n  var handleFindLink = function handleFindLink(data) {\n    var aElementRegex = /<a(.*?)<\\/a>/gm;\n    var attributeRegex = /<a(.*?)>/g;\n    var regex = /href=\"(https?:\\/\\/[^\\s]+)|(https?:\\/\\/[^\\s]+)/g;\n    var imgRegex = /<img(.*?)>/gm;\n    var imgAltRegex = /alt=\"(.*?)\"/;\n    var replaceData = data;\n    var htmlHref;\n    var list;\n    var attributeString;\n    var imgList;\n\n    while ((htmlHref = aElementRegex.exec(data)) !== null) {\n      while ((attributeString = attributeRegex.exec(htmlHref[0])) !== null) {\n        if (!attributeString[1].includes('target')) {\n          var replacedText = \"\".concat(attributeString[1], \" target=_blank\");\n          replaceData = replaceData.replace(attributeString[1], replacedText);\n        }\n      }\n    }\n\n    while ((list = regex.exec(data)) !== null) {\n      if (!list[0].includes('</a') && !list[0].includes('href')) {\n        var _replacedText = checkURL(list[0]) ? \"<img class=\\\"\".concat(classes.imageNote, \"\\\" title=\\\"\").concat(t('str_show'), \"\\\" src=\\\"\").concat(list[0], \"\\\"/>\") : \"<a href=\".concat(list[0], \" target=_blank style=\\\"color:#007bff \\\">\").concat(list[0], \"</a>\");\n\n        replaceData = replaceData.replace(list[0], _replacedText);\n      }\n    }\n\n    while ((imgList = imgRegex.exec(data)) !== null) {\n      var imgAltText = imgAltRegex.exec(imgList[1]);\n\n      if (imgAltText) {\n        var _replacedText2 = \"<img src=\\\"/imgs/empty_image.jpg\\\" title=\\\"\".concat(t('str_show'), \"\\\" class=\\\"\").concat(classes.imageNote, \"\\\" alt=\\\"\").concat(imgAltText[1], \"\\\" />\");\n\n        replaceData = replaceData.replace(imgList[0], _replacedText2);\n      }\n    }\n\n    replaceData = replaceData.replaceAll('\\n', '</br>');\n    return replaceData;\n  };\n\n  var handlePreviewMedia = function handlePreviewMedia(gid, fileUrl) {\n    setOpenMediaDialog(true);\n    var key = fileUrl || gid;\n    var note;\n\n    if (state.noteImages) {\n      var _state$noteImages$dat;\n\n      if (((_state$noteImages$dat = state.noteImages[data.id]) === null || _state$noteImages$dat === void 0 ? void 0 : _state$noteImages$dat.length) > 0) {\n        note = state.noteImages[data.id].find(function (e) {\n          return e['key'] === key;\n        });\n      }\n    }\n\n    if (note) {\n      var _note, _note2;\n\n      setMediaUrl((_note = note) === null || _note === void 0 ? void 0 : _note.url);\n      setFileType((_note2 = note) === null || _note2 === void 0 ? void 0 : _note2.fileType);\n    } else {\n      setIsMediaLoading(true);\n      PreviewFile(GENERAL_SETTINGS, token, gid, fileUrl, data === null || data === void 0 ? void 0 : data.hotelrefno).then(function (res) {\n        setIsMediaLoading(false);\n\n        if (res.success) {\n          setMediaUrl(res === null || res === void 0 ? void 0 : res.url);\n          setFileType(res === null || res === void 0 ? void 0 : res.fileType);\n          var imageData = _objectSpread({}, state.noteImages) || {};\n          var array = state.noteImages[data === null || data === void 0 ? void 0 : data.id] || [];\n          array.push({\n            url: res === null || res === void 0 ? void 0 : res.url,\n            fileType: res === null || res === void 0 ? void 0 : res.fileType,\n            key: key\n          });\n          imageData[data.id] = array;\n          setToState('userPortal', ['noteImages'], imageData);\n        } else {\n          enqueueSnackbar(t(res === null || res === void 0 ? void 0 : res.errorText), {\n            variant: (res === null || res === void 0 ? void 0 : res.variant) || 'error'\n          });\n        }\n      });\n    }\n  };\n\n  var handleAnchorClick = function handleAnchorClick(e) {\n    var targetLink = e.target.closest('img');\n\n    if (targetLink && targetLink.src) {\n      var _targetLink$alt;\n\n      var gid = (targetLink === null || targetLink === void 0 ? void 0 : (_targetLink$alt = targetLink.alt) === null || _targetLink$alt === void 0 ? void 0 : _targetLink$alt.length) > 0 && targetLink.alt || false;\n      var url = gid ? false : (targetLink === null || targetLink === void 0 ? void 0 : targetLink.src) || false;\n\n      if (url || gid) {\n        handlePreviewMedia(gid, url);\n      } else {\n        return;\n      }\n    } else {\n      return;\n    }\n\n    if (!targetLink) return;\n    e.preventDefault();\n  };\n\n  return __jsx(React.Fragment, {\n    key: data.gid,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 9\n    }\n  }, __jsx(ListItem, {\n    alignItems: \"flex-start\",\n    className: classes.replyNoteBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 13\n    }\n  }, __jsx(Card, {\n    variant: \"outlined\",\n    style: {\n      width: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 17\n    }\n  }, __jsx(CardHeader, {\n    action: __jsx(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 29\n      }\n    }, __jsx(IconButton, {\n      size: \"small\",\n      disabled: state.currentTaskNotesLoading || isMyRequestNoteReply || state.defMyRequestNoteReply && state.defMyRequestNoteReply.pid === data.id ? true : false,\n      onClick: function onClick() {\n        return handleDefRequestReplyNote(data.id, loginfo.id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 33\n      }\n    }, isMyRequestNoteReply ? __jsx(LoadingSpinner, {\n      size: 20,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 41\n      }\n    }) : __jsx(ReplyIcon, {\n      fontSize: \"small\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 41\n      }\n    })), __jsx(PopupState, {\n      variant: \"popover\",\n      popupId: data.gid,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 33\n      }\n    }, function (popupState) {\n      return __jsx(React.Fragment, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 41\n        }\n      }, __jsx(IconButton, _extends({\n        disabled: state.currentTaskNotesLoading,\n        size: \"small\",\n        \"aria-label\": \"context-menu\"\n      }, bindTrigger(popupState), {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 45\n        }\n      }), __jsx(MoreVertIcon, {\n        fontSize: \"small\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 49\n        }\n      })), __jsx(Menu, _extends({}, bindMenu(popupState), {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 45\n        }\n      }), __jsx(ListItem, {\n        className: classes.listItem,\n        disableGutters: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 49\n        }\n      }, loginfo.selfish ? (data === null || data === void 0 ? void 0 : data.insuserid) === (loginfo === null || loginfo === void 0 ? void 0 : loginfo.id) ? __jsx(CustomToolTip, {\n        title: data.isdone ? t('str_undone') : t('str_done'),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 65\n        }\n      }, __jsx(\"div\", {\n        className: classes.iconButton,\n        onClick: function onClick() {\n          return handleRequestDetailNoteDone(popupState);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 69\n        }\n      }, data.isdone ? __jsx(SkipPreviousIcon, {\n        className: classes.icon,\n        fontSize: \"small\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 81\n        }\n      }) : __jsx(DoneIcon, {\n        className: classes.icon,\n        fontSize: \"small\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 81\n        }\n      }))) : __jsx(CustomToolTip, {\n        title: t('str_notAuthorizedToAccess'),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 65\n        }\n      }, __jsx(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 69\n        }\n      }, __jsx(\"div\", {\n        className: clsx(classes.iconButton, classes.disabledIcon),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 73\n        }\n      }, data.isdone ? __jsx(SkipPreviousIcon, {\n        className: classes.icon,\n        fontSize: \"small\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 85\n        }\n      }) : __jsx(DoneIcon, {\n        className: classes.icon,\n        fontSize: \"small\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 85\n        }\n      })))) : raNoteUserAccess !== null && raNoteUserAccess !== void 0 && raNoteUserAccess.canu ? __jsx(CustomToolTip, {\n        title: data.isdone ? t('str_undone') : t('str_done'),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 61\n        }\n      }, __jsx(\"div\", {\n        className: classes.iconButton,\n        onClick: function onClick() {\n          return handleRequestDetailNoteDone(popupState);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 65\n        }\n      }, data.isdone ? __jsx(SkipPreviousIcon, {\n        className: classes.icon,\n        fontSize: \"small\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 77\n        }\n      }) : __jsx(DoneIcon, {\n        className: classes.icon,\n        fontSize: \"small\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 77\n        }\n      }))) : __jsx(CustomToolTip, {\n        title: t('str_notAuthorizedToAccess'),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 61\n        }\n      }, __jsx(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 66\n        }\n      }, __jsx(\"div\", {\n        className: clsx(classes.iconButton, classes.disabledIcon),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 70\n        }\n      }, data.isdone ? __jsx(SkipPreviousIcon, {\n        className: classes.icon,\n        fontSize: \"small\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 82\n        }\n      }) : __jsx(DoneIcon, {\n        className: classes.icon,\n        fontSize: \"small\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 82\n        }\n      }))))), __jsx(ListItem, {\n        className: classes.listItem,\n        disableGutters: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 49\n        }\n      }, loginfo.selfish ? (data === null || data === void 0 ? void 0 : data.insuserid) === (loginfo === null || loginfo === void 0 ? void 0 : loginfo.id) ? __jsx(CustomToolTip, {\n        title: t('str_edit'),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 65\n        }\n      }, __jsx(\"div\", {\n        className: classes.iconButton,\n        onClick: function onClick() {\n          return handleEditModalStatus(popupState);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 69\n        }\n      }, __jsx(EditIcon, {\n        className: classes.icon,\n        fontSize: \"small\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 73\n        }\n      }))) : __jsx(CustomToolTip, {\n        title: t('str_notAuthorizedToAccess'),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 65\n        }\n      }, __jsx(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 69\n        }\n      }, __jsx(\"div\", {\n        className: clsx(classes.iconButton, classes.disabledIcon),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 73\n        }\n      }, __jsx(EditIcon, {\n        className: classes.icon,\n        fontSize: \"small\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 77\n        }\n      })))) : raNoteUserAccess !== null && raNoteUserAccess !== void 0 && raNoteUserAccess.canu ? __jsx(CustomToolTip, {\n        title: t('str_edit'),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 61\n        }\n      }, __jsx(\"div\", {\n        className: classes.iconButton,\n        onClick: function onClick() {\n          return handleEditModalStatus(popupState);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 65\n        }\n      }, __jsx(EditIcon, {\n        className: classes.icon,\n        fontSize: \"small\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 69\n        }\n      }))) : __jsx(CustomToolTip, {\n        title: t('str_notAuthorizedToAccess'),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 61\n        }\n      }, __jsx(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 66\n        }\n      }, __jsx(\"div\", {\n        className: clsx(classes.iconButton, classes.disabledIcon),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 70\n        }\n      }, __jsx(EditIcon, {\n        className: classes.icon,\n        fontSize: \"small\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 74\n        }\n      })))))));\n    })),\n    title: __jsx(Typography, {\n      variant: \"subtitle2\",\n      style: {\n        borderBottom: \"1px solid \".concat(data.isdone ? \"green\" : \"red\")\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 29\n      }\n    }, data.insusercode, \" \", data.refcode ? ' - ' + data.refcode : '', __jsx(\"a\", {\n      className: classes.dateStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 33\n      }\n    }, moment(data.insdatetime).format('L  HH:mm:ss'))),\n    subheader: data.listinfo ? __jsx(\"span\", {\n      onClick: handleAnchorClick,\n      style: {\n        fontSize: 13,\n        lineHeight: 1,\n        color: '#565656'\n      },\n      dangerouslySetInnerHTML: {\n        __html: handleFindLink(data.listinfo)\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 33\n      }\n    }) : __jsx(\"span\", {\n      style: {\n        fontSize: 13,\n        lineHeight: 1,\n        color: '#565656'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 33\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 21\n    }\n  }))), __jsx(Collapse, {\n    \"in\": state.defMyRequestNoteReply && state.defMyRequestNoteReply.pid === data.id ? true : false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 13\n    }\n  }, __jsx(NewRequestNoteReply, {\n    noteid: data.id,\n    taskmid: data.masterid,\n    userid: loginfo.id,\n    taskHotelRefNo: data.hotelrefno,\n    getNoteList: getNoteList,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 17\n    }\n  })), data.hasreply && currentTaskNotes && currentTaskNotes.filter(function (note) {\n    return note.pid === data.id;\n  }).map(function (reply, i) {\n    return __jsx(RequestDetailNote, {\n      handleGetScroll: handleGetScroll,\n      getNoteList: getNoteList,\n      raNoteUserAccess: raNoteUserAccess,\n      key: i,\n      state: state,\n      currentTaskNotes: currentTaskNotes,\n      setToState: setToState,\n      updateState: updateState,\n      data: reply,\n      notemasterid: reply.masterid,\n      isreply: true,\n      treeLevel: reply.treelevel,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 25\n      }\n    });\n  }), __jsx(MediaViewerDialog, {\n    open: openMediaDialog,\n    maxWidth: 'md',\n    fullWidth: true,\n    loading: isMediaLoading,\n    fileType: fileType,\n    url: mediaUrl,\n    t: t,\n    onClose: function onClose() {\n      setOpenMediaDialog(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 13\n    }\n  }));\n};\n\n_s(RequestDetailNote, \"R+B1LLxsCpsGmkqSm2kB5/+DknY=\", false, function () {\n  return [useStyles, useTranslation, useSnackbar, useSelector, useSelector];\n});\n\n_c = RequestDetailNote;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    state: state.formReducer.userPortal\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setToState: function setToState(stateType, stateName, value) {\n      return dispatch(_setToState(stateType, stateName, value));\n    },\n    updateState: function updateState(stateType, stateName, value) {\n      return dispatch(_updateState(stateType, stateName, value));\n    },\n    pushToState: function pushToState(stateType, stateName, value) {\n      return dispatch(_pushToState(stateType, stateName, value));\n    },\n    deleteFromState: function deleteFromState(stateType, stateName, value) {\n      return dispatch(_deleteFromState(stateType, stateName, value));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RequestDetailNote);\n\nvar _c;\n\n$RefreshReg$(_c, \"RequestDetailNote\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/user-portal/components/RequestDetailNote.js"],"names":["React","useContext","useEffect","useState","connect","useSelector","useRouter","deleteFromState","pushToState","setToState","updateState","Patch","ViewList","List","UseOrest","Delete","makeStyles","ListItem","Typography","Grid","InputAdornment","FormControlLabel","Checkbox","Card","IconButton","MoreVertIcon","DoneIcon","EditIcon","CardHeader","Menu","MenuItem","PopupState","bindTrigger","bindMenu","DEFAULT_OREST_TOKEN","isErrorMsg","OREST_ENDPOINT","REQUEST_METHOD_CONST","WebCmsGlobal","ReplyIcon","SkipPreviousIcon","NewRequestNoteReply","Collapse","Dialog","Button","LoadingSpinner","TextField","useNotifications","useTranslation","CustomToolTip","moment","clsx","PreviewFile","useSnackbar","MediaViewerDialog","useStyles","theme","root","width","textField","marginLeft","spacing","marginRight","field","replyNoteBox","props","isreply","treeLevel","paddingTop","dateStyle","fontSize","color","paddingRight","textFieldStyle","border","borderColor","inputAdornmentStyle","position","right","top","cardStyle","textDecoration","listItem","paddingBottom","iconButton","textAlign","cursor","padding","borderRadius","backgroundColor","icon","margin","disabledIcon","pointerEvents","imageNote","height","boxShadow","RequestDetailNote","state","data","currentTaskNotes","getNoteList","handleGetScroll","raNoteUserAccess","classes","t","enqueueSnackbar","GENERAL_SETTINGS","loginfo","orest","currentUser","token","auth","access_token","isMyRequestNoteReply","setIsMyRequestNoteReply","openMediaDialog","setOpenMediaDialog","isMediaLoading","setIsMediaLoading","mediaUrl","setMediaUrl","fileType","setFileType","handleRequestDetailNoteDone","popupState","isDone","close","apiUrl","OREST_URL","endpoint","RANOTE","gid","isdone","then","r1","status","handleDefRequestReplyNote","noteid","userid","defMyRequestNoteReply","length","params","hotelrefno","r","SLASH","REPLY","method","POST","id","replyID","res","query","start","r2","handleEditModalStatus","checkURL","url","match","handleFindLink","aElementRegex","attributeRegex","regex","imgRegex","imgAltRegex","replaceData","htmlHref","list","attributeString","imgList","exec","includes","replacedText","replace","imgAltText","replaceAll","handlePreviewMedia","fileUrl","key","note","noteImages","find","e","success","imageData","array","push","errorText","variant","handleAnchorClick","targetLink","target","closest","src","alt","preventDefault","currentTaskNotesLoading","pid","selfish","insuserid","canu","borderBottom","insusercode","refcode","insdatetime","format","listinfo","lineHeight","__html","masterid","hasreply","filter","map","reply","i","treelevel","mapStateToProps","formReducer","userPortal","mapDispatchToProps","dispatch","stateType","stateName","value"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport { connect, useSelector } from 'react-redux'\nimport { useRouter } from 'next/router'\nimport { deleteFromState, pushToState, setToState, updateState } from 'state/actions'\nimport { Patch, ViewList, List, UseOrest, Delete } from '@webcms/orest'\nimport { makeStyles } from '@material-ui/core/styles'\nimport ListItem from '@material-ui/core/ListItem'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Card from '@material-ui/core/Card'\nimport IconButton from '@material-ui/core/IconButton'\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\nimport DoneIcon from '@material-ui/icons/Done'\nimport EditIcon from '@material-ui/icons/Edit'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport PopupState, { bindTrigger, bindMenu } from 'material-ui-popup-state'\nimport { DEFAULT_OREST_TOKEN, isErrorMsg, OREST_ENDPOINT, REQUEST_METHOD_CONST } from 'model/orest/constants'\nimport WebCmsGlobal from 'components/webcms-global'\nimport ReplyIcon from '@material-ui/icons/Reply'\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport NewRequestNoteReply from './NewRequestNoteReply'\nimport Collapse from '@material-ui/core/Collapse'\nimport Dialog from '@material-ui/core/Dialog'\nimport Button from '@material-ui/core/Button'\nimport LoadingSpinner from '../../LoadingSpinner'\nimport TextField from '@material-ui/core/TextField'\nimport useNotifications from '../../../model/notification/useNotifications'\nimport useTranslation from 'lib/translations/hooks/useTranslation'\nimport {CustomToolTip} from './CustomToolTip/CustomToolTip';\nimport moment from 'moment';\nimport clsx from 'clsx';\nimport {PreviewFile} from \"../../../model/orest/components/RaFile\";\nimport {useSnackbar} from \"notistack\";\nimport MediaViewerDialog from \"../../../@webcms-ui/core/media-viewer-dialog\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: 200,\n    },\n    field: {\n        marginRight: theme.spacing(1),\n    },\n    replyNoteBox: props =>  ({\n        width: props?.isreply ? 'calc(100% - ' + (props?.treeLevel * 25) + 'px)' : '100%' ,\n        marginLeft: props?.isreply ? 'auto' : '',\n        paddingTop: props?.isreply ? 0 : '',\n    }),\n    dateStyle: {\n        fontSize: 13,\n        color: '#565656',\n        float: 'right',\n        paddingRight: \"8px\",\n    },\n    textFieldStyle: {\n        \"& .MuiOutlinedInput-root\": {\n            \"& fieldset\": {\n                border: \"1px solid #E8E9EC\",\n            },\n            \"&:hover fieldset\": {\n                borderColor: \"#4666B0\"\n            },\n            \"&.Mui-focused fieldset\": {\n                borderColor: \"#4666B0\",\n            },\n        },\n    },\n    inputAdornmentStyle: {\n        position:\"absolute\",\n        right:\"2px\",\n        top:\"10px\",\n        \"&.MuiInputAdornment-positionStart\": {\n            marginRight:\"0\"\n        }\n    },\n    cardStyle: {\n        width: '100%',\n        \"& .MuiCardHeader-subheader>a\": {\n            color: \"#007bff\",\n            textDecoration: \"none\",\n            \"&:hover\": {\n                color: \"#0056b3\",\n                textDecoration: \"underline\"\n            }\n        },\n    },\n    listItem: {\n        paddingTop: 0,\n        paddingBottom: 0\n    },\n    iconButton: {\n        textAlign: 'center',\n        width: '100%',\n        cursor: 'pointer',\n        padding: '1px 12px',\n        borderRadius: '4px',\n        '&:hover': {\n            backgroundColor: 'rgb(0,0,0,0.04)'\n        }\n    },\n    icon: {\n        margin: '4px 0'\n    },\n    disabledIcon: {\n        color: 'rgba(0, 0, 0, 0.38)',\n        cursor: 'standard',\n        pointerEvents: 'none'\n    },\n    imageNote: {\n        cursor: 'pointer',\n        border: '1px solid #ddd',\n        width: 150,\n        height: 100,\n        borderRadius: '4px',\n        '&:hover': {\n            boxShadow: '0 0 2px 1px rgb(0 140 186 / 50%)'\n        },\n\n    }\n}))\n\nconst RequestDetailNote = (props) => {\n    const { state, data, isreply, currentTaskNotes, setToState, updateState, treeLevel, getNoteList, handleGetScroll, raNoteUserAccess } = props\n\n    const classes = useStyles({isreply, treeLevel})\n    const { t } = useTranslation()\n\n    const { enqueueSnackbar } = useSnackbar();\n\n    const { GENERAL_SETTINGS } = useContext(WebCmsGlobal)\n    const loginfo = useSelector((state) => state?.orest?.currentUser?.loginfo || false)\n    const token = useSelector((state) => state?.orest?.currentUser?.auth?.access_token || false)\n\n    const [isMyRequestNoteReply, setIsMyRequestNoteReply] = useState(false)\n    const [openMediaDialog, setOpenMediaDialog] = useState(false);\n    const [isMediaLoading, setIsMediaLoading] = useState(false);\n    const [mediaUrl, setMediaUrl] = useState('');\n    const [fileType, setFileType] = useState('');\n\n\n    const handleRequestDetailNoteDone = (popupState, isDone) => {\n        popupState.close();\n        updateState('userPortal', 'currentTaskNotesLoading', true)\n        handleGetScroll();\n        Patch({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.RANOTE,\n            token,\n            gid: data.gid,\n            data: {\n                isdone: !isDone,\n            },\n        }).then((r1) => {\n            if (r1.status === 200) {\n                getNoteList();\n            } else {\n                updateState('userPortal', 'currentTaskNotesLoading', false)\n            }\n        })\n    }\n\n\n    const handleDefRequestReplyNote = (noteid, userid) => {\n        if (state.defMyRequestNoteReply.length > 0) {\n            Delete({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: OREST_ENDPOINT.RANOTE,\n                token,\n                gid: state.defMyRequestNoteReply.gid,\n                params: {\n                    hotelrefno: data.hotelrefno,\n                },\n            }).then((r) => {\n                if (r.status === 200) {\n                    setToState('userPortal', ['defMyRequestNoteReply'], [])\n                } else {\n                }\n            })\n        }\n\n        setIsMyRequestNoteReply(true)\n        UseOrest({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.RANOTE + OREST_ENDPOINT.SLASH + OREST_ENDPOINT.REPLY,\n            token,\n            method: REQUEST_METHOD_CONST.POST,\n            params: {\n                id: noteid,\n                userid: userid,\n                hotelrefno: data.hotelrefno,\n            },\n        }).then((r1) => {\n            const replyID = r1.data.data[0].res\n            if (r1.status === 200 && replyID > 0) {\n                List({\n                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                    endpoint: OREST_ENDPOINT.RANOTE,\n                    token,\n                    params: {\n                        query: `id::${replyID},isprivate::false`,\n                        start: 0,\n                        hotelrefno: data.hotelrefno,\n                    },\n                }).then((r2) => {\n                    setToState('userPortal', ['defMyRequestNoteReply'], r2.data.data[0])\n                    setIsMyRequestNoteReply(false)\n                })\n            } else {\n                setIsMyRequestNoteReply(false)\n            }\n        })\n    }\n    \n    const handleEditModalStatus = (popupState) => {\n        popupState.close();\n        setToState('userPortal', ['openNoteDialog'], true);\n        setToState('userPortal', ['isEditNote'], true);\n        setToState('userPortal', ['defMyRequestNote'], data)\n    }\n\n    const checkURL = (url) =>  {\n        return(url.match(/\\.(jpeg|jpg|gif|png)$/) != null);\n    }\n\n    const handleFindLink = (data) => {\n        const aElementRegex = /<a(.*?)<\\/a>/gm\n        const attributeRegex = /<a(.*?)>/g\n        const regex = /href=\"(https?:\\/\\/[^\\s]+)|(https?:\\/\\/[^\\s]+)/g\n        const imgRegex = /<img(.*?)>/gm\n        const imgAltRegex = /alt=\"(.*?)\"/\n        let replaceData = data;\n        let htmlHref;\n        let list;\n        let attributeString;\n        let imgList\n\n        while ((htmlHref = aElementRegex.exec(data)) !== null) {\n            while((attributeString = attributeRegex.exec(htmlHref[0])) !== null) {\n                if(!attributeString[1].includes('target')) {\n                    const replacedText = `${attributeString[1]} target=_blank`\n                    replaceData = replaceData.replace(attributeString[1], replacedText)\n                }\n            }\n        }\n\n        while ((list = regex.exec(data)) !== null){\n            if(!list[0].includes('</a') && !list[0].includes('href')) {\n                const replacedText = checkURL(list[0]) ? `<img class=\"${classes.imageNote}\" title=\"${t('str_show')}\" src=\"${list[0]}\"/>` : `<a href=${list[0]} target=_blank style=\"color:#007bff \">${list[0]}</a>`\n                replaceData = replaceData.replace(list[0], replacedText)\n            }\n        }\n\n        while ((imgList = imgRegex.exec(data)) !== null){\n            const imgAltText = imgAltRegex.exec(imgList[1])\n            if(imgAltText) {\n                const replacedText = `<img src=\"/imgs/empty_image.jpg\" title=\"${t('str_show')}\" class=\"${classes.imageNote}\" alt=\"${imgAltText[1]}\" />`\n                replaceData = replaceData.replace(imgList[0], replacedText)\n            }\n        }\n\n        replaceData = replaceData.replaceAll('\\n', '</br>')\n\n        return replaceData;\n    }\n\n    const handlePreviewMedia = (gid, fileUrl) => {\n        setOpenMediaDialog(true)\n        const key = fileUrl || gid\n        let note\n        if(state.noteImages) {\n            if(state.noteImages[data.id]?.length > 0) {\n                note = state.noteImages[data.id].find(e => e['key'] === key)\n            }\n        }\n        if(note) {\n            setMediaUrl(note?.url)\n            setFileType(note?.fileType)\n        } else {\n            setIsMediaLoading(true)\n            PreviewFile(GENERAL_SETTINGS, token, gid, fileUrl, data?.hotelrefno).then(res => {\n                setIsMediaLoading(false);\n                if(res.success) {\n                    setMediaUrl(res?.url);\n                    setFileType(res?.fileType)\n                    const imageData = {...state.noteImages} || {}\n                    const array = state.noteImages[data?.id] || []\n                    array.push({url: res?.url, fileType: res?.fileType, key: key})\n                    imageData[data.id] = array\n                    setToState('userPortal', ['noteImages'], imageData)\n                } else {\n                    enqueueSnackbar(t(res?.errorText), { variant: res?.variant || 'error' })\n                }\n            })\n        }\n\n    }\n\n    const handleAnchorClick = (e) => {\n        const targetLink = e.target.closest('img')\n        if (targetLink && targetLink.src) {\n            const gid = targetLink?.alt?.length > 0 && targetLink.alt || false\n            const url = gid ? false : targetLink?.src || false\n            if(url || gid) {\n                handlePreviewMedia(gid, url)\n            } else {\n                return;\n            }\n        } else {\n            return\n        }\n\n        if (!targetLink) return\n        e.preventDefault()\n    }\n\n\n\n    return (\n        <React.Fragment key={data.gid}>\n            <ListItem alignItems=\"flex-start\" className={classes.replyNoteBox}>\n                <Card variant=\"outlined\" style={{ width: '100%' }}>\n                    <CardHeader\n                        action={\n                            <React.Fragment>\n                                <IconButton\n                                    size=\"small\"\n                                    disabled={\n                                        state.currentTaskNotesLoading || isMyRequestNoteReply ||\n                                        (state.defMyRequestNoteReply && state.defMyRequestNoteReply.pid === data.id)\n                                            ? true\n                                            : false\n                                    }\n                                    onClick={() => handleDefRequestReplyNote(data.id, loginfo.id)}\n                                >\n                                    {isMyRequestNoteReply ? (\n                                        <LoadingSpinner size={20} />\n                                    ) : (\n                                        <ReplyIcon fontSize=\"small\" />\n                                    )}\n                                </IconButton>\n                                <PopupState variant=\"popover\" popupId={data.gid}>\n                                    {(popupState) => (\n                                        <React.Fragment>\n                                            <IconButton\n                                                disabled={state.currentTaskNotesLoading}\n                                                size=\"small\"\n                                                aria-label=\"context-menu\"\n                                                {...bindTrigger(popupState)}\n                                            >\n                                                <MoreVertIcon fontSize=\"small\" />\n                                            </IconButton>\n                                            <Menu {...bindMenu(popupState)}>\n                                                <ListItem className={classes.listItem} disableGutters>\n                                                    {\n                                                        loginfo.selfish ? (\n                                                            data?.insuserid === loginfo?.id ? (\n                                                                <CustomToolTip title={data.isdone ? t('str_undone') : t('str_done')}>\n                                                                    <div className={classes.iconButton} onClick={() => handleRequestDetailNoteDone(popupState)}>\n                                                                        {\n                                                                            data.isdone ? (\n                                                                                <SkipPreviousIcon className={classes.icon} fontSize=\"small\"/>\n                                                                            ) : (\n                                                                                <DoneIcon className={classes.icon} fontSize=\"small\" />\n                                                                            )\n                                                                        }\n                                                                    </div>\n                                                                </CustomToolTip>\n                                                            ) : (\n                                                                <CustomToolTip title={t('str_notAuthorizedToAccess')}>\n                                                                    <span>\n                                                                        <div className={clsx(classes.iconButton, classes.disabledIcon)}>\n                                                                            {\n                                                                                data.isdone ? (\n                                                                                    <SkipPreviousIcon className={classes.icon} fontSize=\"small\"/>\n                                                                                ) : (\n                                                                                    <DoneIcon className={classes.icon} fontSize=\"small\" />\n                                                                                )\n                                                                            }\n                                                                        </div>\n                                                                    </span>\n                                                                </CustomToolTip>\n                                                            )\n                                                        ) : raNoteUserAccess?.canu ? (\n                                                            <CustomToolTip title={data.isdone ? t('str_undone') : t('str_done')}>\n                                                                <div className={classes.iconButton} onClick={() => handleRequestDetailNoteDone(popupState)}>\n                                                                    {\n                                                                        data.isdone ? (\n                                                                            <SkipPreviousIcon className={classes.icon} fontSize=\"small\"/>\n                                                                        ) : (\n                                                                            <DoneIcon className={classes.icon} fontSize=\"small\" />\n                                                                        )\n                                                                    }\n                                                                </div>\n                                                            </CustomToolTip>\n                                                        ) : (\n                                                            <CustomToolTip title={t('str_notAuthorizedToAccess')}>\n                                                                 <span>\n                                                                     <div className={clsx(classes.iconButton, classes.disabledIcon)}>\n                                                                         {\n                                                                             data.isdone ? (\n                                                                                 <SkipPreviousIcon className={classes.icon} fontSize=\"small\"/>\n                                                                             ) : (\n                                                                                 <DoneIcon className={classes.icon} fontSize=\"small\" />\n                                                                             )\n                                                                         }\n                                                                     </div>\n                                                                 </span>\n                                                            </CustomToolTip>\n                                                        )\n                                                    }\n                                                </ListItem>\n                                                <ListItem className={classes.listItem} disableGutters>\n                                                    {\n                                                        loginfo.selfish ? (\n                                                            data?.insuserid === loginfo?.id ? (\n                                                                <CustomToolTip title={t('str_edit')}>\n                                                                    <div className={classes.iconButton} onClick={() => handleEditModalStatus(popupState)}>\n                                                                        <EditIcon className={classes.icon} fontSize=\"small\" />\n                                                                    </div>\n                                                                </CustomToolTip>\n                                                            ) : (\n                                                                <CustomToolTip  title={t('str_notAuthorizedToAccess')}>\n                                                                    <span>\n                                                                        <div className={clsx(classes.iconButton, classes.disabledIcon)} >\n                                                                            <EditIcon className={classes.icon} fontSize=\"small\" />\n                                                                        </div>\n                                                                    </span>\n                                                                </CustomToolTip>\n                                                            )\n                                                        ) : raNoteUserAccess?.canu ? (\n                                                            <CustomToolTip title={t('str_edit')}>\n                                                                <div className={classes.iconButton} onClick={() => handleEditModalStatus(popupState)}>\n                                                                    <EditIcon className={classes.icon} fontSize=\"small\" />\n                                                                </div>\n                                                            </CustomToolTip>\n                                                        ) : (\n                                                            <CustomToolTip title={t('str_notAuthorizedToAccess')}>\n                                                                 <span>\n                                                                     <div className={clsx(classes.iconButton, classes.disabledIcon)}>\n                                                                         <EditIcon className={classes.icon} fontSize=\"small\" />\n                                                                     </div>\n                                                                 </span>\n                                                            </CustomToolTip>\n                                                        )\n                                                    }\n                                                </ListItem>\n                                            </Menu>\n                                        </React.Fragment>\n                                    )}\n                                </PopupState>\n                            </React.Fragment>\n                        }\n                        title={\n                            <Typography variant=\"subtitle2\" style={{borderBottom: `1px solid ${data.isdone ? \"green\" : \"red\"}`}}>\n                                {data.insusercode} {data.refcode ? ' - ' + data.refcode : ''}\n                                <a className={classes.dateStyle}>{moment(data.insdatetime).format('L  HH:mm:ss')}</a>\n                            </Typography>\n                        }\n                        subheader={\n                            data.listinfo ? (\n                                <span\n                                    onClick={handleAnchorClick}\n                                    style={{ fontSize: 13, lineHeight: 1, color: '#565656' }}\n                                    dangerouslySetInnerHTML={{ __html: handleFindLink(data.listinfo) }}\n                                ></span>\n                            ) : (\n                                <span style={{ fontSize: 13, lineHeight: 1, color: '#565656' }}></span>\n                            )\n                        }\n                    />\n                </Card>\n            </ListItem>\n            <Collapse in={state.defMyRequestNoteReply && state.defMyRequestNoteReply.pid === data.id ? true : false}>\n                <NewRequestNoteReply noteid={data.id} taskmid={data.masterid}  userid={loginfo.id} taskHotelRefNo={data.hotelrefno} getNoteList={getNoteList}/>\n            </Collapse>\n            {data.hasreply &&\n                currentTaskNotes &&\n                currentTaskNotes\n                    .filter((note) => note.pid === data.id)\n                    .map((reply, i) => (\n                        <RequestDetailNote\n                            handleGetScroll={handleGetScroll}\n                            getNoteList={getNoteList}\n                            raNoteUserAccess={raNoteUserAccess}\n                            key={i}\n                            state={state}\n                            currentTaskNotes={currentTaskNotes}\n                            setToState={setToState}\n                            updateState={updateState}\n                            data={reply}\n                            notemasterid={reply.masterid}\n                            isreply={true}\n                            treeLevel={reply.treelevel}\n                        />\n                    ))}\n            <MediaViewerDialog\n                open={openMediaDialog}\n                maxWidth={'md'}\n                fullWidth\n                loading={isMediaLoading}\n                fileType={fileType}\n                url={mediaUrl}\n                t={t}\n                onClose={() => {setOpenMediaDialog(false)}}\n            />\n        </React.Fragment>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        state: state.formReducer.userPortal,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value)),\n    updateState: (stateType, stateName, value) => dispatch(updateState(stateType, stateName, value)),\n    pushToState: (stateType, stateName, value) => dispatch(pushToState(stateType, stateName, value)),\n    deleteFromState: (stateType, stateName, value) => dispatch(deleteFromState(stateType, stateName, value)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RequestDetailNote)\n"]},"metadata":{},"sourceType":"module"}