{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/steps/webpage/Final.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useContext, useEffect } from 'react'; //material imports\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField'; //redux imports\n\nimport { connect } from 'react-redux'; // imports for toaster\n\nimport { ToastContainer, toast } from 'react-toastify'; //imports configs\n\nimport WebCmsGlobal from 'components/webcms-global';\nimport { isErrorMsg, OREST_ENDPOINT } from '../../../../../model/orest/constants'; //router import\n\nimport { useRouter } from 'next/router';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { setToState, updateState } from '../../../../../state/actions';\nimport { Insert, Patch, ViewList } from '@webcms/orest';\nimport { Checkbox, FormControlLabel } from '@material-ui/core';\nimport { COLORS, SAVED_SUCCESS, UPDATE_SUCCESS } from \"../../constants\";\nimport axios from \"axios\";\nimport LoadingSpinner from \"../../../../LoadingSpinner\";\nconst useStyles = makeStyles(theme => ({\n  actionButton: {\n    marginLeft: theme.spacing(1),\n    borderRadius: 20\n  }\n}));\n\nconst Final = props => {\n  const {\n    state,\n    dialogTitle,\n    resetFinal,\n    isWebPageSelected,\n    updateState\n  } = props; //local state\n\n  const {\n    0: isOpen,\n    1: setOpen\n  } = useState(true);\n  const {\n    0: code,\n    1: setCode\n  } = useState('');\n  const {\n    0: description,\n    1: setDescription\n  } = useState('');\n  const {\n    0: isTemplate,\n    1: setIsTemplate\n  } = useState(false);\n  const {\n    0: webPage,\n    1: setWebPage\n  } = useState('');\n  const {\n    0: langFileGID,\n    1: setLangFileGID\n  } = useState('');\n  const {\n    0: url,\n    1: setUrl\n  } = useState('');\n  const {\n    0: isRequestSend,\n    1: setRequestSend\n  } = useState(false);\n  const emptyPage = {\n    id: '',\n    sections: []\n  };\n  const {\n    0: websiteData,\n    1: setWebsiteData\n  } = useState(null);\n  const {\n    0: websiteGID,\n    1: setWebsiteGID\n  } = useState(null);\n  const classes = useStyles();\n  const {\n    GENERAL_SETTINGS,\n    token\n  } = useContext(WebCmsGlobal);\n  const router = useRouter();\n  const companyId = router.query.companyID;\n  const authToken = token || router.query.authToken;\n  useEffect(() => {\n    //setting url\n    if (window && window.location && window.location.port) {\n      setUrl(`${window.location.protocol}//${window.location.hostname}:${window.location.port}`);\n    } else {\n      setUrl(`${window.location.protocol}//${window.location.hostname}`);\n    }\n  }, []);\n  useEffect(() => {\n    if (isWebPageSelected && state.code) {\n      setRequestSend(true);\n      console.log('state.code ==> ', state.code);\n      ViewList({\n        apiUrl: GENERAL_SETTINGS.OREST_URL,\n        endpoint: OREST_ENDPOINT.RAFILE,\n        token: authToken,\n        params: {\n          query: `code::${state.code},filetype::WEBPAGE`,\n          hotelrefno: Number(companyId)\n        }\n      }).then(res => {\n        if (res.status === 200 && res.data && res.data.data.length > 0) {\n          setWebPage(res.data.data[0]);\n\n          if (!res.data.data[0].istemplate) {\n            setCode(res.data.data[0].code);\n            setDescription(res.data.data[0].description);\n            setIsTemplate(res.data.data[0].istemplate);\n          }\n\n          ViewList({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.RAFILE,\n            token: authToken,\n            params: {\n              query: `code::${state.code},filetype::LANG.WEBPAGE`,\n              hotelrefno: Number(companyId)\n            }\n          }).then(res1 => {\n            if (res1.status === 200 && res1.data && res1.data.data.length > 0) {\n              setLangFileGID(res1.data.data[0].gid);\n              ViewList({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: OREST_ENDPOINT.RAFILE,\n                token: authToken,\n                params: {\n                  query: `code::WEBINDEX,filetype::WEBSITE`,\n                  hotelrefno: Number(companyId)\n                }\n              }).then(res2 => {\n                var _res2$data, _res2$data$data;\n\n                if ((res2 === null || res2 === void 0 ? void 0 : res2.status) === 200 && (res2 === null || res2 === void 0 ? void 0 : (_res2$data = res2.data) === null || _res2$data === void 0 ? void 0 : (_res2$data$data = _res2$data.data) === null || _res2$data$data === void 0 ? void 0 : _res2$data$data.length) > 0) {\n                  var _res2$data2, _res2$data2$data$;\n\n                  setRequestSend(false);\n                  const website = JSON.parse(Buffer.from(res2 === null || res2 === void 0 ? void 0 : (_res2$data2 = res2.data) === null || _res2$data2 === void 0 ? void 0 : (_res2$data2$data$ = _res2$data2.data[0]) === null || _res2$data2$data$ === void 0 ? void 0 : _res2$data2$data$.filedata, 'base64').toString('utf-8'));\n                  setWebsiteGID(res2.data.data[0].gid);\n                  const updatedWebsitePages = [...website.pages];\n                  const page = updatedWebsitePages === null || updatedWebsitePages === void 0 ? void 0 : updatedWebsitePages.find(x => (x === null || x === void 0 ? void 0 : x.gid) === res.data.data[0].gid);\n\n                  if (page) {\n                    const index = updatedWebsitePages.indexOf(page);\n\n                    if (page !== null && page !== void 0 && page.code) {\n                      var _page$code;\n\n                      const pageCode = page === null || page === void 0 ? void 0 : (_page$code = page.code) === null || _page$code === void 0 ? void 0 : _page$code.find(x => x === code);\n\n                      if (!pageCode) {\n                        page.code.push(code);\n                      }\n                    } else {\n                      page['code'] = [code];\n                    }\n\n                    updatedWebsitePages[index] = page;\n                    website.pages = updatedWebsitePages;\n                  }\n\n                  setWebsiteData(website);\n                } else {\n                  setRequestSend(false);\n                }\n              });\n            } else {\n              setRequestSend(false);\n              toast.error('Something went wrong while fetching language webpage file. Please check network tab.', {\n                position: toast.POSITION.TOP_RIGHT\n              });\n            }\n          });\n        } else {\n          setRequestSend(false);\n          toast.error('Something went wrong while fetching webpage file. Please check network tab.', {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        }\n      });\n    }\n  }, [isWebPageSelected, state.code]);\n\n  const handleSave = () => {\n    // saving web page in rafile\n    if (isWebPageSelected) {\n      if (webPage && webPage.istemplate) {\n        rafileInsert();\n      } else {\n        rafilePatch();\n      }\n    } else {\n      rafileInsert();\n    }\n  };\n\n  const rafileInsert = () => {\n    setRequestSend(true);\n    Insert({\n      // insert web page json to rafile\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.RAFILE,\n      token: authToken,\n      data: {\n        code: code,\n        description: description,\n        filetype: 'WEBPAGE',\n        filedata: Buffer.from(JSON.stringify(state.page)).toString('base64'),\n        istemplate: isTemplate,\n        langid: state.langId,\n        hotelrefno: Number(companyId)\n      }\n    }).then(res => {\n      var _res$data;\n\n      if (res.status === 200 && res !== null && res !== void 0 && (_res$data = res.data) !== null && _res$data !== void 0 && _res$data.data) {\n        Insert({\n          // insert language file for web page into rafile\n          apiUrl: GENERAL_SETTINGS.OREST_URL,\n          endpoint: OREST_ENDPOINT.RAFILE,\n          token: authToken,\n          data: {\n            code: code,\n            description: description,\n            contentype: '0000530',\n            filetype: 'LANG.WEBPAGE',\n            filedata: Buffer.from(JSON.stringify(state.langsFile)).toString('base64'),\n            masterid: res.data.data.mid,\n            hotelrefno: Number(companyId)\n          }\n        }).then(res1 => {\n          var _res1$data;\n\n          if (res1.status === 200 && res1 !== null && res1 !== void 0 && (_res1$data = res1.data) !== null && _res1$data !== void 0 && _res1$data.data) {\n            axios.get(url + '/?clearall=true').then(res3 => {\n              setRequestSend(false);\n\n              if (res3.status === 200) {\n                updateState('pageBuilder', 'pageStep', 0);\n                updateState('pageBuilder', 'isTemplate', false);\n                updateState('pageBuilder', 'previousStep', 0);\n                updateState('pageBuilder', 'page', emptyPage);\n                updateState('pageBuilder', 'langsFile', {});\n                toast.success(SAVED_SUCCESS, {\n                  position: toast.POSITION.TOP_RIGHT\n                });\n                toast.success('Cache cleared automatically', {\n                  position: toast.POSITION.TOP_RIGHT\n                });\n                handleReset();\n              } else {\n                const retErr = isErrorMsg(res3);\n                toast.error(retErr.errorMsg, {\n                  position: toast.POSITION.TOP_RIGHT\n                });\n              }\n            });\n          } else {\n            setRequestSend(false);\n            const retErr = isErrorMsg(res);\n            toast.error(retErr.errorMsg, {\n              position: toast.POSITION.TOP_RIGHT\n            });\n          }\n        });\n      } else {\n        setRequestSend(false);\n        const retErr = isErrorMsg(res);\n        toast.error(retErr.errorMsg, {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      }\n    });\n  };\n\n  const rafilePatch = () => {\n    setRequestSend(true);\n    Patch({\n      // update web page json to rafile\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.RAFILE,\n      token: authToken,\n      gid: webPage.gid,\n      params: {\n        hotelrefno: Number(companyId)\n      },\n      data: {\n        code: code,\n        description: description,\n        filedata: Buffer.from(JSON.stringify(state.page)).toString('base64'),\n        istemplate: isTemplate,\n        hotelrefno: Number(companyId)\n      }\n    }).then(res1 => {\n      var _res1$data2;\n\n      if (res1.status === 200 && res1 !== null && res1 !== void 0 && (_res1$data2 = res1.data) !== null && _res1$data2 !== void 0 && _res1$data2.data) {\n        Patch({\n          // update lang file for web page to rafile\n          apiUrl: GENERAL_SETTINGS.OREST_URL,\n          endpoint: OREST_ENDPOINT.RAFILE,\n          token: authToken,\n          gid: langFileGID,\n          params: {\n            hotelrefno: Number(companyId)\n          },\n          data: {\n            code: code,\n            description: description,\n            filedata: Buffer.from(JSON.stringify(state.langsFile)).toString('base64'),\n            masterid: res1.data.data.mid,\n            hotelrefno: Number(companyId)\n          }\n        }).then(res2 => {\n          var _res2$data3;\n\n          if (res2.status === 200 && res2 !== null && res2 !== void 0 && (_res2$data3 = res2.data) !== null && _res2$data3 !== void 0 && _res2$data3.data) {\n            const website = _objectSpread({}, websiteData);\n\n            const updatedWebsitePages = [...website.pages];\n            const page = updatedWebsitePages === null || updatedWebsitePages === void 0 ? void 0 : updatedWebsitePages.find(x => (x === null || x === void 0 ? void 0 : x.gid) === res1.data.data.gid);\n\n            if (page) {\n              const index = updatedWebsitePages.indexOf(page);\n\n              if (page !== null && page !== void 0 && page.code) {\n                var _page$code2;\n\n                const pageCode = page === null || page === void 0 ? void 0 : (_page$code2 = page.code) === null || _page$code2 === void 0 ? void 0 : _page$code2.find(x => x === code);\n\n                if (!pageCode) {\n                  page.code.push(code);\n                }\n              } else {\n                page['code'] = [code];\n              }\n\n              updatedWebsitePages[index] = page;\n              website.pages = updatedWebsitePages;\n              Patch({\n                // update website into rafile\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: OREST_ENDPOINT.RAFILE,\n                token: authToken,\n                gid: websiteGID,\n                params: {\n                  hotelrefno: Number(companyId)\n                },\n                data: {\n                  filedata: Buffer.from(JSON.stringify(website)).toString(\"base64\"),\n                  hotelrefno: Number(companyId)\n                }\n              }).then(res3 => {\n                var _res3$data;\n\n                if ((res3 === null || res3 === void 0 ? void 0 : res3.status) === 200 && res3 !== null && res3 !== void 0 && (_res3$data = res3.data) !== null && _res3$data !== void 0 && _res3$data.data) {\n                  setRequestSend(false);\n                  handleClearData();\n                  handleReset();\n                  toast.success(UPDATE_SUCCESS, {\n                    position: toast.POSITION.TOP_RIGHT\n                  });\n                } else {\n                  const retErr = isErrorMsg(res3);\n                  toast.error(retErr.errorMsg, {\n                    position: toast.POSITION.TOP_RIGHT\n                  });\n                }\n              });\n            } else {\n              setRequestSend(false);\n              handleClearData();\n              toast.success(UPDATE_SUCCESS, {\n                position: toast.POSITION.TOP_RIGHT\n              });\n              handleReset();\n            }\n          } else {\n            setRequestSend(false);\n            const retErr = isErrorMsg(res2);\n            toast.error(retErr.errorMsg, {\n              position: toast.POSITION.TOP_RIGHT\n            });\n          }\n        });\n      } else {\n        setRequestSend(false);\n        const retErr = isErrorMsg(res1);\n        toast.error(retErr.errorMsg, {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      }\n    });\n  };\n\n  const handleClearData = () => {\n    updateState('pageBuilder', 'pageStep', 0);\n    updateState('pageBuilder', 'isTemplate', false);\n    updateState('pageBuilder', 'previousStep', 0);\n    updateState('pageBuilder', 'page', emptyPage);\n    updateState('pageBuilder', 'langsFile', {});\n  };\n\n  const handleReset = () => {\n    setCode('');\n    setDescription('');\n    setOpen(false);\n    resetFinal('');\n  };\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 9\n    }\n  }, __jsx(Dialog, {\n    disableBackdropClick: true,\n    disableEnforceFocus: true,\n    fullWidth: true,\n    maxWidth: \"md\",\n    open: isOpen,\n    onClose: handleReset,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 13\n    }\n  }, __jsx(DialogTitle, {\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 17\n    }\n  }, ' ', dialogTitle, \" \", __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 35\n    }\n  }), ' '), __jsx(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 17\n    }\n  }, isRequestSend ? __jsx(LoadingSpinner, {\n    style: {\n      color: COLORS.secondary\n    },\n    size: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 41\n    }\n  }) : __jsx(React.Fragment, null, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 33\n    }\n  }, __jsx(TextField, {\n    label: \"Code\",\n    placeholder: \"Please enter code here ...\",\n    value: code,\n    style: {\n      minWidth: 500\n    },\n    onChange: e => setCode(e.target.value),\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 37\n    }\n  })), __jsx(\"div\", {\n    style: {\n      marginTop: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 33\n    }\n  }, __jsx(TextField, {\n    label: \"Description\",\n    placeholder: \"Please enter description here ...\",\n    value: description,\n    onChange: e => setDescription(e.target.value),\n    multiline: true,\n    style: {\n      minWidth: 500\n    },\n    rows: 1,\n    rowsMax: 4,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 37\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 33\n    }\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: isTemplate,\n      onChange: () => setIsTemplate(!isTemplate),\n      name: \"istemplate\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 45\n      }\n    }),\n    label: \"Save as Template\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 37\n    }\n  })))), __jsx(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    onClick: handleReset,\n    variant: \"contained\",\n    size: \"small\",\n    \"aria-label\": \"add\",\n    className: classes.actionButton,\n    disabled: isRequestSend,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 21\n    }\n  }, \"Cancel\"), __jsx(Button, {\n    onClick: handleSave,\n    className: classes.actionButton,\n    variant: \"contained\",\n    size: \"small\",\n    \"aria-label\": \"add\",\n    color: \"primary\",\n    disabled: !(description && code) || isRequestSend,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 21\n    }\n  }, \"APPLY\"))), __jsx(ToastContainer, {\n    autoClose: 8000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    state: state.formReducer.pageBuilder\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  updateState: (stateType, stateName, value) => dispatch(updateState(stateType, stateName, value)),\n  setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Final);","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/steps/webpage/Final.js"],"names":["React","useState","useContext","useEffect","Dialog","DialogActions","DialogContent","DialogTitle","Button","TextField","connect","ToastContainer","toast","WebCmsGlobal","isErrorMsg","OREST_ENDPOINT","useRouter","makeStyles","setToState","updateState","Insert","Patch","ViewList","Checkbox","FormControlLabel","COLORS","SAVED_SUCCESS","UPDATE_SUCCESS","axios","LoadingSpinner","useStyles","theme","actionButton","marginLeft","spacing","borderRadius","Final","props","state","dialogTitle","resetFinal","isWebPageSelected","isOpen","setOpen","code","setCode","description","setDescription","isTemplate","setIsTemplate","webPage","setWebPage","langFileGID","setLangFileGID","url","setUrl","isRequestSend","setRequestSend","emptyPage","id","sections","websiteData","setWebsiteData","websiteGID","setWebsiteGID","classes","GENERAL_SETTINGS","token","router","companyId","query","companyID","authToken","window","location","port","protocol","hostname","console","log","apiUrl","OREST_URL","endpoint","RAFILE","params","hotelrefno","Number","then","res","status","data","length","istemplate","res1","gid","res2","website","JSON","parse","Buffer","from","filedata","toString","updatedWebsitePages","pages","page","find","x","index","indexOf","pageCode","push","error","position","POSITION","TOP_RIGHT","handleSave","rafileInsert","rafilePatch","filetype","stringify","langid","langId","contentype","langsFile","masterid","mid","get","res3","success","handleReset","retErr","errorMsg","handleClearData","color","secondary","minWidth","e","target","value","marginTop","mapStateToProps","formReducer","pageBuilder","mapDispatchToProps","dispatch","stateType","stateName"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\n//material imports\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\n//redux imports\nimport { connect } from 'react-redux'\n// imports for toaster\nimport { ToastContainer, toast } from 'react-toastify'\n//imports configs\nimport WebCmsGlobal from 'components/webcms-global'\nimport { isErrorMsg, OREST_ENDPOINT } from '../../../../../model/orest/constants'\n//router import\nimport { useRouter } from 'next/router'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { setToState, updateState } from '../../../../../state/actions'\nimport { Insert, Patch, ViewList } from '@webcms/orest'\nimport { Checkbox, FormControlLabel } from '@material-ui/core'\nimport {COLORS, SAVED_SUCCESS, UPDATE_SUCCESS} from \"../../constants\";\nimport axios from \"axios\";\nimport LoadingSpinner from \"../../../../LoadingSpinner\";\n\nconst useStyles = makeStyles((theme) => ({\n    actionButton: {\n        marginLeft: theme.spacing(1),\n        borderRadius: 20,\n    },\n}))\n\nconst Final = (props) => {\n    const { state, dialogTitle, resetFinal, isWebPageSelected, updateState } = props\n\n    //local state\n    const [isOpen, setOpen] = useState(true)\n    const [code, setCode] = useState('')\n    const [description, setDescription] = useState('')\n    const [isTemplate, setIsTemplate] = useState(false)\n    const [webPage, setWebPage] = useState('');\n    const [langFileGID, setLangFileGID] = useState('');\n    const [url, setUrl] = useState('');\n    const [isRequestSend, setRequestSend] = useState(false);\n    const emptyPage = {\n        id: '',\n        sections: [],\n    };\n    const [websiteData, setWebsiteData] = useState(null);\n    const [websiteGID, setWebsiteGID] = useState(null);\n\n    const classes = useStyles();\n\n    const { GENERAL_SETTINGS, token } = useContext(WebCmsGlobal);\n\n    const router = useRouter();\n    const companyId = router.query.companyID;\n    const authToken = token || router.query.authToken;\n\n    useEffect(() => { //setting url\n        if (window && window.location && window.location.port) {\n            setUrl(`${window.location.protocol}//${window.location.hostname}:${window.location.port}`);\n        } else {\n            setUrl(`${window.location.protocol}//${window.location.hostname}`);\n        }\n    }, []);\n\n    useEffect(() => {\n        if (isWebPageSelected && state.code) {\n            setRequestSend(true);\n            console.log('state.code ==> ', state.code);\n            ViewList({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: OREST_ENDPOINT.RAFILE,\n                token: authToken,\n                params: {\n                    query: `code::${state.code},filetype::WEBPAGE`,\n                    hotelrefno: Number(companyId),\n                },\n            }).then((res) => {\n                if (res.status === 200 && res.data && res.data.data.length > 0) {\n                    setWebPage(res.data.data[0])\n                    if (!res.data.data[0].istemplate) {\n                        setCode(res.data.data[0].code)\n                        setDescription(res.data.data[0].description);\n                        setIsTemplate(res.data.data[0].istemplate)\n                    }\n                    ViewList({\n                        apiUrl: GENERAL_SETTINGS.OREST_URL,\n                        endpoint: OREST_ENDPOINT.RAFILE,\n                        token: authToken,\n                        params: {\n                            query: `code::${state.code},filetype::LANG.WEBPAGE`,\n                            hotelrefno: Number(companyId),\n                        },\n                    }).then(res1 => {\n                        if (res1.status === 200 && res1.data && res1.data.data.length > 0) {\n                            setLangFileGID(res1.data.data[0].gid);\n                            ViewList({\n                                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                                endpoint: OREST_ENDPOINT.RAFILE,\n                                token: authToken,\n                                params: {\n                                    query: `code::WEBINDEX,filetype::WEBSITE`,\n                                    hotelrefno: Number(companyId),\n                                },\n                            }).then(res2 => {\n                                if (res2?.status === 200 && res2?.data?.data?.length > 0) {\n                                    setRequestSend(false);\n                                    const website = JSON.parse(Buffer.from(res2?.data?.data[0]?.filedata, 'base64').toString('utf-8'));\n                                    setWebsiteGID(res2.data.data[0].gid);\n                                    const updatedWebsitePages = [...website.pages];\n                                    const page = updatedWebsitePages?.find(x => x?.gid === res.data.data[0].gid);\n                                    if (page) {\n                                        const index = updatedWebsitePages.indexOf(page);\n                                        if (page?.code) {\n                                            const pageCode = page?.code?.find(x => x === code);\n                                            if (!pageCode) {\n                                                page.code.push(code);\n                                            }\n                                        } else {\n                                            page['code'] = [code];\n                                        }\n                                        updatedWebsitePages[index] = page;\n                                        website.pages = updatedWebsitePages;\n                                    }\n                                    setWebsiteData(website);\n                                } else {\n                                    setRequestSend(false);\n                                }\n                            })\n                        } else {\n                            setRequestSend(false);\n                            toast.error('Something went wrong while fetching language webpage file. Please check network tab.', {\n                                position: toast.POSITION.TOP_RIGHT,\n                            })\n                        }\n                    })\n                } else {\n                    setRequestSend(false);\n                    toast.error('Something went wrong while fetching webpage file. Please check network tab.', {\n                        position: toast.POSITION.TOP_RIGHT,\n                    })\n                }\n            })\n        }\n    }, [isWebPageSelected, state.code])\n\n    const handleSave = () => {\n        // saving web page in rafile\n        if (isWebPageSelected) {\n            if (webPage && webPage.istemplate) {\n                rafileInsert();\n            } else {\n                rafilePatch();\n            }\n        } else {\n            rafileInsert()\n        }\n    }\n\n    const rafileInsert = () => {\n        setRequestSend(true);\n        Insert({\n            // insert web page json to rafile\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.RAFILE,\n            token: authToken,\n            data: {\n                code: code,\n                description: description,\n                filetype: 'WEBPAGE',\n                filedata: Buffer.from(JSON.stringify(state.page)).toString('base64'),\n                istemplate: isTemplate,\n                langid: state.langId,\n                hotelrefno: Number(companyId),\n            },\n        }).then((res) => {\n            if (res.status === 200 && res?.data?.data) {\n                Insert({\n                    // insert language file for web page into rafile\n                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                    endpoint: OREST_ENDPOINT.RAFILE,\n                    token: authToken,\n                    data: {\n                        code: code,\n                        description: description,\n                        contentype: '0000530',\n                        filetype: 'LANG.WEBPAGE',\n                        filedata: Buffer.from(JSON.stringify(state.langsFile)).toString('base64'),\n                        masterid: res.data.data.mid,\n                        hotelrefno: Number(companyId),\n                    },\n                }).then(res1 => {\n                    if (res1.status === 200 && res1?.data?.data) {\n                        axios.get(url + '/?clearall=true').then(res3 => {\n                            setRequestSend(false);\n                            if (res3.status === 200) {\n                                updateState('pageBuilder', 'pageStep', 0);\n                                updateState('pageBuilder', 'isTemplate', false);\n                                updateState('pageBuilder', 'previousStep', 0);\n                                updateState('pageBuilder', 'page', emptyPage);\n                                updateState('pageBuilder', 'langsFile', {});\n                                toast.success(SAVED_SUCCESS, {\n                                    position: toast.POSITION.TOP_RIGHT,\n                                })\n                                toast.success('Cache cleared automatically', {\n                                    position: toast.POSITION.TOP_RIGHT\n                                });\n                                handleReset();\n                            } else {\n                                const retErr = isErrorMsg(res3);\n                                toast.error(retErr.errorMsg, {\n                                    position: toast.POSITION.TOP_RIGHT,\n                                })\n                            }\n                        })\n                    } else {\n                        setRequestSend(false);\n                        const retErr = isErrorMsg(res);\n                        toast.error(retErr.errorMsg, {\n                            position: toast.POSITION.TOP_RIGHT,\n                        })\n                    }\n                })\n            } else {\n                setRequestSend(false);\n                const retErr = isErrorMsg(res);\n                toast.error(retErr.errorMsg, {\n                    position: toast.POSITION.TOP_RIGHT,\n                })\n            }\n        })\n    }\n\n    const rafilePatch = () => {\n        setRequestSend(true);\n        Patch({\n            // update web page json to rafile\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.RAFILE,\n            token: authToken,\n            gid: webPage.gid,\n            params: {\n                hotelrefno: Number(companyId)\n            },\n            data: {\n                code: code,\n                description: description,\n                filedata: Buffer.from(JSON.stringify(state.page)).toString('base64'),\n                istemplate: isTemplate,\n                hotelrefno: Number(companyId),\n            },\n        }).then((res1) => {\n            if (res1.status === 200 && res1?.data?.data) {\n                Patch({\n                    // update lang file for web page to rafile\n                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                    endpoint: OREST_ENDPOINT.RAFILE,\n                    token: authToken,\n                    gid: langFileGID,\n                    params: {\n                        hotelrefno: Number(companyId)\n                    },\n                    data: {\n                        code: code,\n                        description: description,\n                        filedata: Buffer.from(JSON.stringify(state.langsFile)).toString('base64'),\n                        masterid: res1.data.data.mid,\n                        hotelrefno: Number(companyId),\n                    },\n                }).then(res2 => {\n                    if (res2.status === 200 && res2?.data?.data) {\n                        const website = {...websiteData};\n                        const updatedWebsitePages = [...website.pages];\n                        const page = updatedWebsitePages?.find(x => x?.gid === res1.data.data.gid);\n                        if (page) {\n                            const index = updatedWebsitePages.indexOf(page);\n                            if (page?.code) {\n                                const pageCode = page?.code?.find(x => x === code);\n                                if (!pageCode) {\n                                    page.code.push(code);\n                                }\n                            } else {\n                                page['code'] = [code];\n                            }\n                            updatedWebsitePages[index] = page;\n                            website.pages = updatedWebsitePages;\n                            Patch({ // update website into rafile\n                                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                                endpoint: OREST_ENDPOINT.RAFILE,\n                                token: authToken,\n                                gid: websiteGID,\n                                params: {\n                                    hotelrefno: Number(companyId)\n                                },\n                                data: {\n                                    filedata: Buffer.from(JSON.stringify(website)).toString(\"base64\"),\n                                    hotelrefno: Number(companyId)\n                                },\n                            }).then(res3 => {\n                                if (res3?.status === 200 && res3?.data?.data) {\n                                    setRequestSend(false);\n                                    handleClearData();\n                                    handleReset();\n                                    toast.success(UPDATE_SUCCESS, {\n                                        position: toast.POSITION.TOP_RIGHT,\n                                    });\n\n                                } else {\n                                    const retErr = isErrorMsg(res3);\n                                    toast.error(retErr.errorMsg, {\n                                        position: toast.POSITION.TOP_RIGHT,\n                                    })\n                                }\n                            })\n                        } else {\n                            setRequestSend(false);\n                            handleClearData();\n                            toast.success(UPDATE_SUCCESS, {\n                                position: toast.POSITION.TOP_RIGHT,\n                            });\n                            handleReset();\n                        }\n                    } else {\n                        setRequestSend(false);\n                        const retErr = isErrorMsg(res2);\n                        toast.error(retErr.errorMsg, {\n                            position: toast.POSITION.TOP_RIGHT,\n                        })\n                    }\n                })\n            } else {\n                setRequestSend(false);\n                const retErr = isErrorMsg(res1);\n                toast.error(retErr.errorMsg, {\n                    position: toast.POSITION.TOP_RIGHT,\n                })\n            }\n        })\n    }\n\n    const handleClearData = () => {\n        updateState('pageBuilder', 'pageStep', 0);\n        updateState('pageBuilder', 'isTemplate', false);\n        updateState('pageBuilder', 'previousStep', 0);\n        updateState('pageBuilder', 'page', emptyPage);\n        updateState('pageBuilder', 'langsFile', {});\n    }\n\n    const handleReset = () => {\n        setCode('')\n        setDescription('')\n        setOpen(false)\n        resetFinal('')\n    }\n\n    return (\n        <React.Fragment>\n            <Dialog\n                disableBackdropClick\n                disableEnforceFocus\n                fullWidth={true}\n                maxWidth=\"md\"\n                open={isOpen}\n                onClose={handleReset}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <DialogTitle color=\"secondary\">\n                    {' '}\n                    {dialogTitle} <hr />{' '}\n                </DialogTitle>\n                <DialogContent>\n                    {\n                        isRequestSend ? <LoadingSpinner style={{color: COLORS.secondary}} size={40} /> :\n                            <>\n                                <div>\n                                    <TextField\n                                        label=\"Code\"\n                                        placeholder=\"Please enter code here ...\"\n                                        value={code}\n                                        style={{minWidth: 500}}\n                                        onChange={(e) => setCode(e.target.value)}\n                                        variant=\"outlined\"\n                                    />\n                                </div>\n                                <div style={{marginTop: 30}}>\n                                    <TextField\n                                        label=\"Description\"\n                                        placeholder=\"Please enter description here ...\"\n                                        value={description}\n                                        onChange={(e) => setDescription(e.target.value)}\n                                        multiline\n                                        style={{minWidth: 500}}\n                                        rows={1}\n                                        rowsMax={4}\n                                        variant=\"outlined\"\n                                    />\n                                </div>\n                                <div>\n                                    <FormControlLabel\n                                        control={\n                                            <Checkbox\n                                                checked={isTemplate}\n                                                onChange={() => setIsTemplate(!isTemplate)}\n                                                name=\"istemplate\"\n                                                color=\"primary\"\n                                            />\n                                        }\n                                        label=\"Save as Template\"\n                                    />\n                                </div>\n                            </>\n                    }\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={handleReset}\n                        variant=\"contained\"\n                        size=\"small\"\n                        aria-label=\"add\"\n                        className={classes.actionButton}\n                        disabled={isRequestSend}\n                    >\n                        Cancel\n                    </Button>\n\n                    <Button\n                        onClick={handleSave}\n                        className={classes.actionButton}\n                        variant=\"contained\"\n                        size=\"small\"\n                        aria-label=\"add\"\n                        color=\"primary\"\n                        disabled={!(description && code) || isRequestSend}\n                    >\n                        APPLY\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <ToastContainer autoClose={8000} />\n        </React.Fragment>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        state: state.formReducer.pageBuilder,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    updateState: (stateType, stateName, value) => dispatch(updateState(stateType, stateName, value)),\n    setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Final)\n"]},"metadata":{},"sourceType":"module"}