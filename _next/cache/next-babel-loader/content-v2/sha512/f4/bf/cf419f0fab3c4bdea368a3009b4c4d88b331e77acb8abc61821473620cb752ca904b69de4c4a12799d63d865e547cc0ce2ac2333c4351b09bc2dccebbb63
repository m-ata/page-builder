{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/guest/account/Offers/OfferCard.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport styles from './style/OfferCard.style';\nimport LoadingSpinner from 'components/LoadingSpinner';\nimport { Grid, Card, CardContent, CardActionArea, CardActions, Button, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport WebCmsGlobal from '../../../webcms-global';\nimport stylesTabPanel from '../style/TabPanel.style';\nimport CardImage from '@webcms-ui/core/card-image';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nimport { getHyperlinkParser } from 'model/orest/constants';\nvar useStyles = makeStyles(styles);\nvar useStylesTabPanel = makeStyles(stylesTabPanel);\nexport default function OfferCard(props) {\n  _s();\n\n  var offer = props.offer,\n      onDetail = props.onDetail;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var classes = useStyles();\n  var classesTabPanel = useStylesTabPanel();\n\n  var _useContext = useContext(WebCmsGlobal),\n      GENERAL_SETTINGS = _useContext.GENERAL_SETTINGS;\n\n  if (!offer) {\n    return __jsx(LoadingSpinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 16\n      }\n    });\n  }\n\n  var cta = false;\n\n  if (offer.cta) {\n    var link = getHyperlinkParser(offer.cta);\n\n    if (link) {\n      cta = {};\n      cta.href = link.href;\n      cta.text = link.text;\n    }\n  }\n\n  return __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: 4,\n    className: classesTabPanel.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, __jsx(Card, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, __jsx(CardActionArea, {\n    onClick: function onClick() {\n      return onDetail(offer.sliderid);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, __jsx(CardImage, {\n    className: classes.offerImage,\n    src: offer.url !== null ? GENERAL_SETTINGS.STATIC_URL + offer.url : null,\n    alt: t(offer.localdesc),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }), offer.saleprice && offer.pricecurr && __jsx(\"span\", {\n    className: classes.priceBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  }, __jsx(Typography, {\n    className: classes.price,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 29\n    }\n  }, offer.saleprice, \" \", offer.pricecurr, \" \", __jsx(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 69\n    }\n  }, \"/\", t(offer.qty)))), __jsx(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, (offer.localtitle || offer.title) && __jsx(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h2\",\n    align: \"center\",\n    className: classes.nameText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 29\n    }\n  }, t(offer.localtitle || offer.title)), (offer.localdesc || offer.description) && __jsx(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 29\n    }\n  }, t(offer.localdesc || offer.description)))), __jsx(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, cta && cta.text && cta.href && __jsx(Button, {\n    classes: {\n      root: classes.ctaButton\n    },\n    variant: \"outlined\",\n    color: \"primary\",\n    fullWidth: true,\n    onClick: function onClick() {\n      return cta.href.includes(window.location.host) ? window.location.href = cta.href : window.open(cta.href);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }, t(cta.text)))));\n}\n\n_s(OfferCard, \"Dq+OUCMafAvFUieUxZgi6qTNc/Y=\", false, function () {\n  return [useTranslation, useStyles, useStylesTabPanel];\n});\n\n_c = OfferCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"OfferCard\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/guest/account/Offers/OfferCard.js"],"names":["React","useContext","styles","LoadingSpinner","Grid","Card","CardContent","CardActionArea","CardActions","Button","Typography","makeStyles","WebCmsGlobal","stylesTabPanel","CardImage","useTranslation","getHyperlinkParser","useStyles","useStylesTabPanel","OfferCard","props","offer","onDetail","t","classes","classesTabPanel","GENERAL_SETTINGS","cta","link","href","text","gridItem","root","sliderid","offerImage","url","STATIC_URL","localdesc","saleprice","pricecurr","priceBox","price","qty","localtitle","title","nameText","description","ctaButton","includes","window","location","host","open"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react'\nimport styles from './style/OfferCard.style'\nimport LoadingSpinner from 'components/LoadingSpinner'\nimport { Grid, Card, CardContent, CardActionArea, CardActions, Button, Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport WebCmsGlobal from '../../../webcms-global'\nimport stylesTabPanel from '../style/TabPanel.style'\nimport CardImage from '@webcms-ui/core/card-image'\nimport useTranslation from 'lib/translations/hooks/useTranslation'\nimport { getHyperlinkParser } from 'model/orest/constants'\n\nconst useStyles = makeStyles(styles)\nconst useStylesTabPanel = makeStyles(stylesTabPanel)\n\nexport default function OfferCard(props) {\n    const { offer, onDetail } = props\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const classesTabPanel = useStylesTabPanel()\n    const { GENERAL_SETTINGS } = useContext(WebCmsGlobal)\n\n    if (!offer) {\n        return <LoadingSpinner />\n    }\n\n    let cta = false\n    if (offer.cta) {\n        let link = getHyperlinkParser(offer.cta)\n        if (link) {\n            cta = {}\n            cta.href = link.href\n            cta.text = link.text\n        }\n    }\n\n    return (\n        <Grid item xs={12} sm={6} md={4} className={classesTabPanel.gridItem}>\n            <Card className={classes.root}>\n                <CardActionArea onClick={() => onDetail(offer.sliderid)}>\n                    <CardImage\n                        className={classes.offerImage}\n                        src={offer.url !== null ? GENERAL_SETTINGS.STATIC_URL + offer.url : null}\n                        alt={t(offer.localdesc)}\n                    />\n                    {(offer.saleprice && offer.pricecurr) && (\n                        <span className={classes.priceBox}>\n                            <Typography className={classes.price}>\n                                {offer.saleprice} {offer.pricecurr} <small>/{t(offer.qty)}</small>\n                            </Typography>\n                        </span>\n                    )}\n                    <CardContent>\n                        {(offer.localtitle || offer.title) && (\n                            <Typography gutterBottom variant='h5' component='h2' align='center' className={classes.nameText}>\n                                {t(offer.localtitle || offer.title)}\n                            </Typography>\n                        )}\n                        {(offer.localdesc || offer.description) && (\n                            <Typography variant='body2' color='textSecondary' component='p' align='center'>\n                                {t(offer.localdesc || offer.description)}\n                            </Typography>\n                        )}\n                    </CardContent>\n                </CardActionArea>\n                <CardActions>\n                    {(cta && cta.text && cta.href) && (\n                        <Button classes={{root: classes.ctaButton}} variant=\"outlined\" color=\"primary\" fullWidth onClick={() => cta.href.includes(window.location.host) ? window.location.href = cta.href : window.open(cta.href)}>\n                            {t(cta.text)}\n                        </Button>\n                    )}\n                </CardActions>\n            </Card>\n        </Grid>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}