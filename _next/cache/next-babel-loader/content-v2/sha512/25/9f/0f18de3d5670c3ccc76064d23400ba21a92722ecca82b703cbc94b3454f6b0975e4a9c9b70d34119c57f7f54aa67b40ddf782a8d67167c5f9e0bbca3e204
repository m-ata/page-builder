{"ast":null,"code":"import _extends from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/mata/app-cloudweb/components/guest/account/History/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { useSelector, connect } from 'react-redux';\nimport { setToState as _setToState, updateState as _updateState } from 'state/actions';\nimport { Container, Paper } from '@material-ui/core';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport RoomReservations from '../Reservations/RoomReservations';\nimport EventReservations from '../Reservations/EventReservations';\nimport BonusHistory from '../Transactions/BonusHistory';\nimport Router, { useRouter } from 'next/router';\nimport { ZERO } from 'model/globals';\nimport GuestComments from \"../GuestComments/GuestComments\";\n\nvar TabPanel = function TabPanel(props) {\n  var children = props.children,\n      value = props.value,\n      hashCode = props.hashCode,\n      index = props.index,\n      other = _objectWithoutProperties(props, [\"children\", \"value\", \"hashCode\", \"index\"]);\n\n  return __jsx(\"div\", _extends({\n    role: \"tabpanel\",\n    hidden: value !== hashCode,\n    id: \"scrollable-auto-tabpanel-\".concat(index),\n    \"aria-labelledby\": \"scrollable-auto-tab-\".concat(index)\n  }, other, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }), value === hashCode && __jsx(Paper, {\n    square: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 36\n    }\n  }, children));\n};\n\n_c = TabPanel;\n\nvar a11yProps = function a11yProps(index) {\n  return {\n    id: \"scrollable-auto-tab-\".concat(index),\n    'aria-controls': \"scrollable-auto-tabpanel-\".concat(index)\n  };\n};\n\nvar History = function History(props) {\n  _s();\n\n  var state = props.state,\n      setToState = props.setToState;\n  var router = useRouter();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var loginfo = useSelector(function (state) {\n    return state.orest.currentUser && state.orest.currentUser.loginfo;\n  });\n  var isClient = loginfo.roletype === '6500310';\n  var historyTabMenu = [{\n    code: 'RESERVATION',\n    title: 'str_reservation',\n    hashCode: 'reservation'\n  }, {\n    code: 'EVENTS',\n    title: 'str_events',\n    hashCode: 'events'\n  }, {\n    code: 'BONUS',\n    title: 'str_bonus',\n    hashCode: 'bonus'\n  }];\n\n  if (!isClient) {\n    historyTabMenu.push({\n      code: 'COMMENTS',\n      title: 'str_comments',\n      hashCode: 'comments'\n    });\n  }\n\n  var tabPanelHashCode = router.query.tab;\n\n  var _useState = useState(historyTabMenu.findIndex(function (menu) {\n    return menu.hashCode === tabPanelHashCode;\n  }) > -1 ? tabPanelHashCode : historyTabMenu[ZERO].hashCode),\n      historyTabsHashCode = _useState[0],\n      setHistoryTabsHashCode = _useState[1];\n\n  var handleGuestHistoryPanelTabChange = function handleGuestHistoryPanelTabChange(event, newValue) {\n    if (historyTabsHashCode !== newValue) {\n      setHistoryTabsHashCode(newValue);\n\n      if (tabPanelHashCode) {\n        /* Router.push({\n             pathname: router.pathname,\n             query: {\n                 menu: router.query.menu,\n                 tab: newValue,\n             },\n         })*/\n      }\n    }\n  };\n\n  var renderEventComponent = function renderEventComponent(historyItem) {\n    var component;\n\n    switch (historyItem.code) {\n      case 'RESERVATION':\n        component = __jsx(RoomReservations, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }\n        });\n        break;\n\n      case 'EVENTS':\n        component = __jsx(EventReservations, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }\n        });\n        break;\n\n      case 'BONUS':\n        component = __jsx(BonusHistory, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 29\n          }\n        });\n        break;\n\n      case 'COMMENTS':\n        component = __jsx(GuestComments, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }\n        });\n        break;\n    }\n\n    return component;\n  };\n\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, __jsx(Container, {\n    maxWidth: \"lg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, __jsx(AppBar, {\n    position: \"static\",\n    color: \"default\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, __jsx(Tabs, {\n    value: historyTabsHashCode,\n    onChange: handleGuestHistoryPanelTabChange,\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    variant: \"scrollable\",\n    scrollButtons: \"auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }, historyTabMenu.map(function (item, i) {\n    return __jsx(Tab, _extends({\n      label: t(item.title),\n      value: item.hashCode\n    }, a11yProps(i), {\n      key: i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 29\n      }\n    }));\n  }))), historyTabMenu.map(function (item, i) {\n    return __jsx(TabPanel, {\n      value: historyTabsHashCode,\n      hashCode: item.hashCode,\n      index: i,\n      key: i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }\n    }, __jsx(Box, {\n      p: 3,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 25\n      }\n    }, renderEventComponent(item)));\n  })));\n};\n\n_s(History, \"LI8/c0LcNbky6ud5LcLq3yy21cs=\", false, function () {\n  return [useRouter, useTranslation, useSelector];\n});\n\n_c2 = History;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    state: state.formReducer.guest\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateState: function updateState(stateType, stateName, value) {\n      return dispatch(_updateState(stateType, stateName, value));\n    },\n    setToState: function setToState(stateType, stateName, value) {\n      return dispatch(_setToState(stateType, stateName, value));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(History);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"History\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/guest/account/History/index.js"],"names":["React","useState","useSelector","connect","setToState","updateState","Container","Paper","useTranslation","AppBar","Tabs","Tab","Box","RoomReservations","EventReservations","BonusHistory","Router","useRouter","ZERO","GuestComments","TabPanel","props","children","value","hashCode","index","other","a11yProps","id","History","state","router","t","loginfo","orest","currentUser","isClient","roletype","historyTabMenu","code","title","push","tabPanelHashCode","query","tab","findIndex","menu","historyTabsHashCode","setHistoryTabsHashCode","handleGuestHistoryPanelTabChange","event","newValue","renderEventComponent","historyItem","component","map","item","i","mapStateToProps","formReducer","guest","mapDispatchToProps","dispatch","stateType","stateName"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport {useSelector, connect } from 'react-redux'\nimport { setToState, updateState } from 'state/actions'\nimport { Container, Paper } from '@material-ui/core'\nimport useTranslation from 'lib/translations/hooks/useTranslation'\nimport AppBar from '@material-ui/core/AppBar'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Box from '@material-ui/core/Box'\nimport RoomReservations from '../Reservations/RoomReservations'\nimport EventReservations from '../Reservations/EventReservations'\nimport BonusHistory from '../Transactions/BonusHistory'\nimport Router, { useRouter } from 'next/router'\nimport { ZERO } from 'model/globals'\nimport GuestComments from \"../GuestComments/GuestComments\";\n\nconst TabPanel = (props) => {\n    const { children, value, hashCode, index, ...other } = props\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== hashCode}\n            id={`scrollable-auto-tabpanel-${index}`}\n            aria-labelledby={`scrollable-auto-tab-${index}`}\n            {...other}\n        >\n            {value === hashCode && <Paper square>{children}</Paper>}\n        </div>\n    )\n}\n\nconst a11yProps = (index) => {\n    return {\n        id: `scrollable-auto-tab-${index}`,\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    }\n}\n\nconst History = (props) => {\n    const { state, setToState } = props\n    const router = useRouter()\n    const { t } = useTranslation()\n\n    const loginfo = useSelector((state) => state.orest.currentUser && state.orest.currentUser.loginfo)\n    const isClient = loginfo.roletype === '6500310'\n\n    const historyTabMenu = [\n        {\n            code: 'RESERVATION',\n            title: 'str_reservation',\n            hashCode: 'reservation',\n        },\n        {\n            code: 'EVENTS',\n            title: 'str_events',\n            hashCode: 'events',\n        },\n        {\n            code: 'BONUS',\n            title: 'str_bonus',\n            hashCode: 'bonus',\n        },\n    ]\n    if(!isClient) {\n        historyTabMenu.push({\n            code: 'COMMENTS',\n            title: 'str_comments',\n            hashCode: 'comments',\n        })\n    }\n\n    const tabPanelHashCode = router.query.tab\n    const [historyTabsHashCode, setHistoryTabsHashCode] = useState(\n        historyTabMenu.findIndex((menu) => menu.hashCode === tabPanelHashCode) > -1\n            ? tabPanelHashCode\n            : historyTabMenu[ZERO].hashCode\n    )\n\n    const handleGuestHistoryPanelTabChange = (event, newValue) => {\n        if (historyTabsHashCode !== newValue) {\n            setHistoryTabsHashCode(newValue)\n            if (tabPanelHashCode) {\n               /* Router.push({\n                    pathname: router.pathname,\n                    query: {\n                        menu: router.query.menu,\n                        tab: newValue,\n                    },\n                })*/\n            }\n        }\n    }\n\n    const renderEventComponent = (historyItem) => {\n        let component\n        switch (historyItem.code) {\n            case 'RESERVATION':\n                component = <RoomReservations />\n                break\n            case 'EVENTS':\n                component = <EventReservations />\n                break\n            case 'BONUS':\n                component = <BonusHistory />\n                break\n            case 'COMMENTS':\n                component = <GuestComments />\n                break\n        }\n\n        return component\n    }\n\n    return (\n        <React.Fragment>\n            <Container maxWidth=\"lg\">\n                <AppBar position=\"static\" color=\"default\">\n                    <Tabs\n                        value={historyTabsHashCode}\n                        onChange={handleGuestHistoryPanelTabChange}\n                        indicatorColor=\"primary\"\n                        textColor=\"primary\"\n                        variant=\"scrollable\"\n                        scrollButtons=\"auto\"\n                    >\n                        {historyTabMenu.map((item, i) => (\n                            <Tab label={t(item.title)} value={item.hashCode} {...a11yProps(i)} key={i} />\n                        ))}\n                    </Tabs>\n                </AppBar>\n                {historyTabMenu.map((item, i) => (\n                    <TabPanel value={historyTabsHashCode} hashCode={item.hashCode} index={i} key={i}>\n                        <Box p={3}>{renderEventComponent(item)}</Box>\n                    </TabPanel>\n                ))}\n            </Container>\n        </React.Fragment>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        state: state.formReducer.guest,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    updateState: (stateType, stateName, value) => dispatch(updateState(stateType, stateName, value)),\n    setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(History)\n"]},"metadata":{},"sourceType":"module"}