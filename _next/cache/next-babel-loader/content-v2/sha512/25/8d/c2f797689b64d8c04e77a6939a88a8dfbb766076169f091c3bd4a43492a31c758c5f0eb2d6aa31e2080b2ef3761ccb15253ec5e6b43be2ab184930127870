{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/steps/faq/FAQPreview.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useEffect, useState } from 'react';\nimport { Container, AppBar, Tab, Tabs, Typography, Box, Accordion, AccordionSummary, AccordionDetails } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { COLORS } from \"../../constants\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n  },\n  scrollable: {\n    height: 800,\n    overflow: 'auto'\n  },\n  activeTab: {\n    backgroundColor: 'white',\n    color: 'silver',\n    borderRadius: 10,\n    marginTop: 4\n  },\n  defaultTab: {\n    backgroundColor: 'silver',\n    color: 'gray',\n    borderRadius: 10,\n    marginTop: 4\n  }\n}));\nconst defaultProps = {\n  bgcolor: 'background.paper',\n  border: 1,\n  borderColor: 'silver'\n};\n\nconst a11yProps = index => {\n  return {\n    id: `${index}`,\n    'aria-controls': `category-${index}`\n  };\n};\n\nconst FAQPreview = props => {\n  const {\n    state\n  } = props; //local state\n\n  const {\n    0: activeTab,\n    1: setActiveTab\n  } = useState(state.faq[0].id);\n  const {\n    0: qa,\n    1: setQa\n  } = useState(null);\n  const classes = useStyles();\n  useEffect(() => {\n    let updatedQA = [];\n\n    if (activeTab) {\n      updatedQA = state.faq.find(x => x.id === activeTab);\n      updatedQA && updatedQA.items && setQa(updatedQA.items);\n    }\n  }, [activeTab]);\n\n  const handleTabChange = (event, newValue) => {\n    setActiveTab(newValue);\n  };\n\n  return __jsx(Container, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, __jsx(AppBar, {\n    position: \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, __jsx(Tabs, {\n    value: activeTab,\n    onChange: handleTabChange,\n    \"aria-label\": \"faq tabs\",\n    variant: \"scrollable\",\n    TabIndicatorProps: {\n      style: {\n        display: 'none'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, state.faq && state.faq.length > 0 && state.faq.map((value, index) => {\n    return __jsx(Tab, _extends({\n      className: activeTab === value.id ? classes.activeTab : classes.defaultTab,\n      style: {\n        marginLeft: index === 0 ? 0 : 4\n      },\n      value: value.id,\n      label: value.text,\n      wrapped: true\n    }, a11yProps(value.id), {\n      key: value.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 33\n      }\n    }));\n  }))), __jsx(Box, _extends({}, defaultProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }), __jsx(Typography, {\n    component: 'div',\n    className: classes.scrollable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, qa && qa.length > 0 && qa.map((value, i) => {\n    return __jsx(Accordion, {\n      key: `qa-${i}`,\n      style: {\n        backgroundColor: COLORS.backButton,\n        marginTop: i !== 0 && 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 33\n      }\n    }, __jsx(AccordionSummary, {\n      expandIcon: __jsx(ExpandMoreIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 53\n        }\n      }),\n      \"aria-controls\": \"panel1a-content\",\n      id: \"panel1a-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 37\n      }\n    }, __jsx(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: value.text\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 41\n      }\n    })), __jsx(AccordionDetails, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 37\n      }\n    }, __jsx(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: value.items[0].text\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 41\n      }\n    })));\n  }))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    state: state.formReducer.pageBuilder\n  };\n};\n\nexport default connect(mapStateToProps)(FAQPreview);","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/steps/faq/FAQPreview.js"],"names":["React","useEffect","useState","Container","AppBar","Tab","Tabs","Typography","Box","Accordion","AccordionSummary","AccordionDetails","ExpandMoreIcon","makeStyles","connect","COLORS","useStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","scrollable","height","overflow","activeTab","color","borderRadius","marginTop","defaultTab","defaultProps","bgcolor","border","borderColor","a11yProps","index","id","FAQPreview","props","state","setActiveTab","faq","qa","setQa","classes","updatedQA","find","x","items","handleTabChange","event","newValue","style","display","length","map","value","marginLeft","text","i","backButton","__html","mapStateToProps","formReducer","pageBuilder"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {Container, AppBar, Tab, Tabs, Typography, Box, Accordion, AccordionSummary, AccordionDetails} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport {COLORS} from \"../../constants\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n    },\n    scrollable: {\n        height: 800,\n        overflow: 'auto'\n    },\n    activeTab: {\n        backgroundColor: 'white',\n        color: 'silver',\n        borderRadius: 10,\n        marginTop: 4,\n    },\n    defaultTab: {\n        backgroundColor: 'silver',\n        color: 'gray',\n        borderRadius: 10,\n        marginTop: 4,\n    }\n}));\n\nconst defaultProps = {\n    bgcolor: 'background.paper',\n    border: 1,\n    borderColor: 'silver',\n}\n\nconst a11yProps = (index) => {\n    return {\n        id: `${index}`,\n        'aria-controls': `category-${index}`,\n    };\n}\n\nconst FAQPreview = (props) => {\n\n    const { state } = props;\n    //local state\n    const [activeTab, setActiveTab] = useState(state.faq[0].id);\n    const [qa, setQa] = useState(null);\n    const classes = useStyles();\n\n    useEffect(() => {\n        let updatedQA = [];\n        if (activeTab) {\n            updatedQA = state.faq.find(x => x.id === activeTab);\n            updatedQA && updatedQA.items && setQa(updatedQA.items);\n        }\n    }, [activeTab]);\n\n    const handleTabChange = (event, newValue) => {\n        setActiveTab(newValue);\n    }\n\n    return (\n        <Container className={classes.root}>\n            <AppBar position=\"static\">\n                <Tabs\n                    value={activeTab}\n                    onChange={handleTabChange}\n                    aria-label=\"faq tabs\"\n                    variant=\"scrollable\"\n                    TabIndicatorProps={{style: {display: 'none'}}}\n                >\n                    {\n                        state.faq && state.faq.length > 0 && state.faq.map((value, index) => {\n                            return (\n                                <Tab\n                                    className={activeTab === value.id ? classes.activeTab : classes.defaultTab}\n                                    style={{marginLeft: index === 0 ? 0 : 4}}\n                                    value={value.id}\n                                    label={value.text}\n                                    wrapped\n                                    {...a11yProps(value.id)}\n                                    key={value.id}\n                                />\n                            )\n                        })\n                    }\n                </Tabs>\n            </AppBar>\n            <Box {...defaultProps} >\n                <Typography component={'div'} className={classes.scrollable} >\n                    {\n                        qa && qa.length > 0 && qa.map((value, i) => {\n                            return (\n                                <Accordion key={`qa-${i}`} style={{backgroundColor: COLORS.backButton, marginTop: i !== 0 && 8}} >\n                                    <AccordionSummary\n                                        expandIcon={<ExpandMoreIcon />}\n                                        aria-controls=\"panel1a-content\"\n                                        id=\"panel1a-header\"\n                                    >\n                                        <div dangerouslySetInnerHTML={{__html: value.text}} ></div>\n                                    </AccordionSummary>\n                                    <AccordionDetails>\n                                        <div dangerouslySetInnerHTML={{__html: value.items[0].text}} ></div>\n                                    </AccordionDetails>\n                                </Accordion>\n                            )\n                        })\n                    }\n                </Typography>\n            </Box>\n        </Container>\n    )\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        state: state.formReducer.pageBuilder,\n    }\n}\n\nexport default connect(mapStateToProps)(FAQPreview);"]},"metadata":{},"sourceType":"module"}