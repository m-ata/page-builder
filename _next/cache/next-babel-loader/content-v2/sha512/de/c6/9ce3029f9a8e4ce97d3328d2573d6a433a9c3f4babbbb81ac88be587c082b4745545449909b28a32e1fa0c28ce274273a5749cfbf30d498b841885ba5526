{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\n\nvar _jsxFileName = \"/Users/mata/app-cloudweb/components/emp-portal/tabs/Work/index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Insert, UseOrest, ViewList, Patch, Delete, Upload } from \"@webcms/orest\";\nimport WebCmsGlobal from \"../../../webcms-global\";\nimport { useSelector } from \"react-redux\";\nimport { isErrorMsg, mobileTelNoFormat, OREST_ENDPOINT } from \"../../../../model/orest/constants\";\nimport { Grid, Typography, Dialog, Checkbox, FormControlLabel, Button, Menu, MenuItem, IconButton } from \"@material-ui/core\";\nimport { useSnackbar } from \"notistack\";\nimport MaterialTableGeneric from \"../../../MaterialTableGeneric\";\nimport { SLASH } from \"../../../../model/globals\";\nimport useTranslation from \"../../../../lib/translations/hooks/useTranslation\";\nimport renderFormElements, { ELEMENT_TYPES } from \"../../../render-form-elements\";\nimport { required } from \"../../../../state/utils/form\";\nimport AddDialogActions from \"../../../AddDialogActions\";\nimport { LocaleContext } from \"../../../../lib/translations/context/LocaleContext\";\nimport LoadingSpinner from \"../../../LoadingSpinner\";\nimport { helper } from \"../../../../@webcms-globals\";\nimport TrackedChangesDialog from \"../../../TrackedChangesDialog\";\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\nimport MaterialTable, { MTableHeader } from \"material-table\";\nimport MaterialTableLocalization from \"../../../MaterialTableLocalization\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport TableColumnText from \"../../../TableColumnText\";\nimport PopupState, { bindMenu, bindTrigger } from \"material-ui-popup-state\";\nimport { CustomToolTip } from \"../../../user-portal/components/CustomToolTip/CustomToolTip\";\nimport CachedIcon from \"@material-ui/icons/Cached\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport moment from \"moment\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport getSymbolFromCurrency from \"../../../../model/currency-symbol\";\nimport Fab from \"@material-ui/core/Fab\";\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\nimport { DropzoneDialog } from \"material-ui-dropzone\";\nimport VisibilityOutlinedIcon from \"@material-ui/icons/VisibilityOutlined\";\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\nimport CloudDownloadOutlinedIcon from \"@material-ui/icons/CloudDownloadOutlined\";\nimport axios from \"axios\";\nimport MediaViewerDialog from \"../../../../@webcms-ui/core/media-viewer-dialog\";\nvar VARIANT = 'outlined';\n\nfunction WorkExperience(props) {\n  _s();\n\n  var _workExperienceData$c,\n      _workExperienceData$c2,\n      _workExperienceData$c3,\n      _workExperienceData$c4,\n      _workExperienceData$s,\n      _workExperienceData$s2,\n      _workExperienceData$s3,\n      _workExperienceData$s4,\n      _workExperienceData$e,\n      _workExperienceData$e2,\n      _workExperienceData$e3,\n      _workExperienceData$e4,\n      _workExperienceData$w,\n      _workExperienceData$w2,\n      _workExperienceData$w3,\n      _workExperienceData$w4,\n      _workExperienceData$w5,\n      _workExperienceData$w6,\n      _workExperienceData$w7,\n      _workExperienceData$w8,\n      _workExperienceData$l,\n      _workExperienceData$l2,\n      _workExperienceData$l3,\n      _workExperienceData$l4,\n      _this = this;\n\n  //props\n  var empId = props.empId; //snackbar\n\n  var _useSnackbar = useSnackbar(),\n      enqueueSnackbar = _useSnackbar.enqueueSnackbar; //context\n\n\n  var _useContext = useContext(WebCmsGlobal),\n      GENERAL_SETTINGS = _useContext.GENERAL_SETTINGS;\n\n  var _useContext2 = useContext(LocaleContext),\n      locale = _useContext2.locale;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var tableLocalization = MaterialTableLocalization(); //redux state\n\n  var token = useSelector(function (state) {\n    var _state$orest, _state$orest$currentU, _state$orest$currentU2;\n\n    return (state === null || state === void 0 ? void 0 : (_state$orest = state.orest) === null || _state$orest === void 0 ? void 0 : (_state$orest$currentU = _state$orest.currentUser) === null || _state$orest$currentU === void 0 ? void 0 : (_state$orest$currentU2 = _state$orest$currentU.auth) === null || _state$orest$currentU2 === void 0 ? void 0 : _state$orest$currentU2.access_token) || false;\n  });\n  var hotelRefNo = useSelector(function (state) {\n    var _state$hotelinfo;\n\n    return (state === null || state === void 0 ? void 0 : (_state$hotelinfo = state.hotelinfo) === null || _state$hotelinfo === void 0 ? void 0 : _state$hotelinfo.currentHotelRefNo) || GENERAL_SETTINGS.HOTELREFNO || false;\n  });\n  var state = useSelector(function (state) {\n    var _state$orest2, _state$orest2$state, _state$orest2$state$e;\n\n    return (state === null || state === void 0 ? void 0 : (_state$orest2 = state.orest) === null || _state$orest2 === void 0 ? void 0 : (_state$orest2$state = _state$orest2.state) === null || _state$orest2$state === void 0 ? void 0 : (_state$orest2$state$e = _state$orest2$state.emp) === null || _state$orest2$state$e === void 0 ? void 0 : _state$orest2$state$e.mid) || false;\n  }); //locale state\n\n  var initialState = {\n    company: {\n      value: '',\n      isError: false,\n      required: true,\n      helperText: ''\n    },\n    startdate: {\n      value: '',\n      isError: false,\n      required: false,\n      helperText: ''\n    },\n    enddate: {\n      value: '',\n      isError: false,\n      required: false,\n      helperText: ''\n    },\n    workpos: {\n      value: '',\n      isError: false,\n      required: false,\n      helperText: ''\n    },\n    worksalary: {\n      value: '',\n      isError: false,\n      required: false,\n      helperText: ''\n    },\n    leavereason: {\n      value: '',\n      isError: false,\n      required: false,\n      helperText: ''\n    },\n    stdfileid: {\n      value: 0,\n      isError: false,\n      required: false,\n      helperText: ''\n    }\n  };\n\n  var _useState = useState(false),\n      isLoadingList = _useState[0],\n      setIsLoadingList = _useState[1];\n\n  var _useState2 = useState(false),\n      allHotels = _useState2[0],\n      setAllHotels = _useState2[1];\n\n  var _useState3 = useState([]),\n      workExperienceList = _useState3[0],\n      setWorkExperienceList = _useState3[1];\n\n  var _useState4 = useState(false),\n      openAddDialog = _useState4[0],\n      setOpenAddDialog = _useState4[1];\n\n  var _useState5 = useState(null),\n      selectedWorkExperienceData = _useState5[0],\n      setSelectedWorkExperienceData = _useState5[1];\n\n  var _useState6 = useState(false),\n      selectedGid = _useState6[0],\n      setSelectedGid = _useState6[1];\n\n  var _useState7 = useState(null),\n      getData = _useState7[0],\n      setGetData = _useState7[1];\n\n  var _useState8 = useState(false),\n      openTrackedDialog = _useState8[0],\n      setOpenTrackedDialog = _useState8[1];\n\n  var _useState9 = useState(false),\n      isDef = _useState9[0],\n      setIsDef = _useState9[1];\n\n  var _useState10 = useState(false),\n      isSaving = _useState10[0],\n      setIsSaving = _useState10[1];\n\n  var _useState11 = useState(initialState),\n      workExperienceData = _useState11[0],\n      setWorkExperienceData = _useState11[1];\n\n  var _useState12 = useState(initialState),\n      workExperienceDataBase = _useState12[0],\n      setWorkExperienceDataBase = _useState12[1];\n\n  var _useState13 = useState(false),\n      isInitialStateLoad = _useState13[0],\n      setIsInitialStateLoad = _useState13[1];\n\n  var _useState14 = useState(false),\n      isDeleting = _useState14[0],\n      setIsDeleting = _useState14[1];\n\n  var _useState15 = useState(false),\n      workFileUploadStatus = _useState15[0],\n      setWorkFileUploadStatus = _useState15[1];\n\n  var _useState16 = useState(false),\n      workFileListLoading = _useState16[0],\n      setWorkFileListLoading = _useState16[1];\n\n  var _useState17 = useState([]),\n      workFileList = _useState17[0],\n      setWorkFileList = _useState17[1];\n\n  var _useState18 = useState(false),\n      openPreviewDialog = _useState18[0],\n      setOpenPreviewDialog = _useState18[1];\n\n  var _useState19 = useState(false),\n      isPreviewLoading = _useState19[0],\n      setIsPreviewLoading = _useState19[1];\n\n  var _useState20 = useState(''),\n      mediaUrl = _useState20[0],\n      setMediaUrl = _useState20[1];\n\n  var _useState21 = useState(''),\n      fileType = _useState21[0],\n      setFileType = _useState21[1];\n\n  var _useState22 = useState(false),\n      isFileDeleting = _useState22[0],\n      setIsFileDeleting = _useState22[1];\n\n  var _useState23 = useState(false),\n      isFileDownloading = _useState23[0],\n      setIsFileDownloading = _useState23[1];\n\n  var _useState24 = useState({}),\n      popupState = _useState24[0],\n      setPopupState = _useState24[1];\n\n  var _useState25 = useState(false),\n      deleteFileInfo = _useState25[0],\n      setDeleteFileInfo = _useState25[1];\n\n  var _useState26 = useState(),\n      hasRightData = _useState26[0],\n      setHasRightData = _useState26[1];\n\n  var _useState27 = useState(null),\n      file = _useState27[0],\n      setFile = _useState27[1];\n\n  var openDialog = function openDialog() {\n    setWorkFileUploadStatus(true);\n  };\n\n  var formElements = [{\n    type: ELEMENT_TYPES.textField,\n    id: 'company',\n    name: 'company',\n    value: (_workExperienceData$c = workExperienceData.company) === null || _workExperienceData$c === void 0 ? void 0 : _workExperienceData$c.value,\n    error: (_workExperienceData$c2 = workExperienceData.company) === null || _workExperienceData$c2 === void 0 ? void 0 : _workExperienceData$c2.isError,\n    required: (_workExperienceData$c3 = workExperienceData.company) === null || _workExperienceData$c3 === void 0 ? void 0 : _workExperienceData$c3.isRequired,\n    disabled: isSaving,\n    label: t('str_company'),\n    helperText: (_workExperienceData$c4 = workExperienceData.company) === null || _workExperienceData$c4 === void 0 ? void 0 : _workExperienceData$c4.helperText,\n    onChange: function onChange(e) {\n      return handleOnChangeFormElements(e);\n    },\n    onBlur: function onBlur(e) {\n      return handleOnBlurFormElements(e);\n    },\n    variant: VARIANT,\n    fullWidth: true,\n    gridProps: {\n      xs: 12,\n      sm: 12\n    }\n  }, {\n    type: ELEMENT_TYPES.datePicker,\n    id: 'startdate',\n    name: 'startdate',\n    value: (_workExperienceData$s = workExperienceData.startdate) === null || _workExperienceData$s === void 0 ? void 0 : _workExperienceData$s.value,\n    error: (_workExperienceData$s2 = workExperienceData.startdate) === null || _workExperienceData$s2 === void 0 ? void 0 : _workExperienceData$s2.isError,\n    required: (_workExperienceData$s3 = workExperienceData.startdate) === null || _workExperienceData$s3 === void 0 ? void 0 : _workExperienceData$s3.isRequired,\n    disabled: isSaving,\n    label: t('str_startDate'),\n    helperText: (_workExperienceData$s4 = workExperienceData.startdate) === null || _workExperienceData$s4 === void 0 ? void 0 : _workExperienceData$s4.helperText,\n    onChange: function onChange(newValue, name) {\n      return handleOnChangeFormElements(newValue, name);\n    },\n    onBlur: function onBlur(e) {\n      return handleOnBlurFormElements(e);\n    },\n    variant: VARIANT,\n    fullWidth: true,\n    gridProps: {\n      xs: 12,\n      sm: 6\n    }\n  }, {\n    type: ELEMENT_TYPES.datePicker,\n    id: 'enddate',\n    name: 'enddate',\n    value: (_workExperienceData$e = workExperienceData.enddate) === null || _workExperienceData$e === void 0 ? void 0 : _workExperienceData$e.value,\n    error: (_workExperienceData$e2 = workExperienceData.enddate) === null || _workExperienceData$e2 === void 0 ? void 0 : _workExperienceData$e2.isError,\n    required: (_workExperienceData$e3 = workExperienceData.enddate) === null || _workExperienceData$e3 === void 0 ? void 0 : _workExperienceData$e3.isRequired,\n    disabled: isSaving,\n    label: t('str_endDate'),\n    helperText: (_workExperienceData$e4 = workExperienceData.enddate) === null || _workExperienceData$e4 === void 0 ? void 0 : _workExperienceData$e4.helperText,\n    onChange: function onChange(newValue, name) {\n      return handleOnChangeFormElements(newValue, name);\n    },\n    onBlur: function onBlur(e) {\n      return handleOnBlurFormElements(e);\n    },\n    variant: VARIANT,\n    fullWidth: true,\n    gridProps: {\n      xs: 12,\n      sm: 6\n    }\n  }, {\n    type: ELEMENT_TYPES.textField,\n    id: 'workpos',\n    name: 'workpos',\n    value: (_workExperienceData$w = workExperienceData.workpos) === null || _workExperienceData$w === void 0 ? void 0 : _workExperienceData$w.value,\n    error: (_workExperienceData$w2 = workExperienceData.workpos) === null || _workExperienceData$w2 === void 0 ? void 0 : _workExperienceData$w2.isError,\n    required: (_workExperienceData$w3 = workExperienceData.workpos) === null || _workExperienceData$w3 === void 0 ? void 0 : _workExperienceData$w3.isRequired,\n    disabled: isSaving,\n    label: t('str_workPosition'),\n    helperText: (_workExperienceData$w4 = workExperienceData.workpos) === null || _workExperienceData$w4 === void 0 ? void 0 : _workExperienceData$w4.helperText,\n    onChange: function onChange(e) {\n      return handleOnChangeFormElements(e);\n    },\n    onBlur: function onBlur(e) {\n      return handleOnBlurFormElements(e);\n    },\n    variant: VARIANT,\n    fullWidth: true,\n    gridProps: {\n      xs: 12,\n      sm: 6\n    }\n  }, {\n    type: ELEMENT_TYPES.numberFormat,\n    id: 'worksalary',\n    name: 'worksalary',\n    value: Number((_workExperienceData$w5 = workExperienceData.worksalary) === null || _workExperienceData$w5 === void 0 ? void 0 : _workExperienceData$w5.value),\n    error: (_workExperienceData$w6 = workExperienceData.worksalary) === null || _workExperienceData$w6 === void 0 ? void 0 : _workExperienceData$w6.isError,\n    required: (_workExperienceData$w7 = workExperienceData.worksalary) === null || _workExperienceData$w7 === void 0 ? void 0 : _workExperienceData$w7.isRequired,\n    disabled: isSaving,\n    label: t('str_workSalary'),\n    helperText: (_workExperienceData$w8 = workExperienceData.worksalary) === null || _workExperienceData$w8 === void 0 ? void 0 : _workExperienceData$w8.helperText,\n    onChange: function onChange(e, name) {\n      return handleChangeNumberFormat(e, name);\n    },\n    onBlur: function onBlur(e) {\n      return handleOnBlurFormElements(e);\n    },\n    variant: VARIANT,\n    fullWidth: true,\n    gridProps: {\n      xs: 12,\n      sm: 6\n    }\n  }, {\n    type: ELEMENT_TYPES.textField,\n    id: 'leavereason',\n    name: 'leavereason',\n    value: (_workExperienceData$l = workExperienceData.leavereason) === null || _workExperienceData$l === void 0 ? void 0 : _workExperienceData$l.value,\n    error: (_workExperienceData$l2 = workExperienceData.leavereason) === null || _workExperienceData$l2 === void 0 ? void 0 : _workExperienceData$l2.isError,\n    required: (_workExperienceData$l3 = workExperienceData.leavereason) === null || _workExperienceData$l3 === void 0 ? void 0 : _workExperienceData$l3.isRequired,\n    disabled: isSaving,\n    label: t('str_reasonForQuit'),\n    helperText: (_workExperienceData$l4 = workExperienceData.leavereason) === null || _workExperienceData$l4 === void 0 ? void 0 : _workExperienceData$l4.helperText,\n    onChange: function onChange(e) {\n      return handleOnChangeFormElements(e);\n    },\n    onBlur: function onBlur(e) {\n      return handleOnBlurFormElements(e);\n    },\n    variant: VARIANT,\n    fullWidth: true,\n    gridProps: {\n      xs: 12,\n      sm: 12\n    }\n  }];\n  var WorkExperienceColumns = [{\n    title: __jsx(Button, {\n      style: {\n        padding: 0,\n        maxWidth: 25,\n        minWidth: 25\n      },\n      disabled: true,\n      color: 'primary',\n      variant: 'text',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }\n    }, __jsx(MoreVertIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 21\n      }\n    })),\n    render: function render(props) {\n      return __jsx(TableColumnText, {\n        maxWidth: 20,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 17\n        }\n      }, __jsx(PopupState, {\n        variant: \"popover\",\n        popupId: \"material-table-action-column\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }\n      }, function (popupState) {\n        return __jsx(React.Fragment, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 29\n          }\n        }, __jsx(Button, _extends({\n          style: {\n            padding: 0,\n            maxWidth: 25,\n            minWidth: 25\n          },\n          color: 'primary',\n          variant: 'contained'\n        }, bindTrigger(popupState), {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 33\n          }\n        }), __jsx(MoreVertIcon, {\n          size: 'small',\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 37\n          }\n        })), __jsx(Menu, _extends({\n          anchorOrigin: {\n            vertical: \"bottom\",\n            horizontal: \"left\"\n          },\n          transformOrigin: {\n            vertical: \"top\",\n            horizontal: \"left\"\n          },\n          getContentAnchorEl: null\n        }, bindMenu(popupState), {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 33\n          }\n        }), __jsx(MenuItem, {\n          onClick: function onClick() {\n            setSelectedWorkExperienceData(props);\n            setSelectedGid((props === null || props === void 0 ? void 0 : props.gid) || false);\n            handleOpenAddDialog(props);\n            popupState.close();\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 37\n          }\n        }, __jsx(EditOutlinedIcon, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 42\n          }\n        }), __jsx(Typography, {\n          style: {\n            paddingLeft: '8px'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 41\n          }\n        }, t('str_edit'))), __jsx(MenuItem, {\n          onClick: function onClick() {\n            return handleDeleteItem(props.gid);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 37\n          }\n        }, __jsx(DeleteIcon, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 41\n          }\n        }), __jsx(Typography, {\n          style: {\n            paddingLeft: '8px'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 41\n          }\n        }, t('str_delete')))));\n      }));\n    }\n  }, {\n    title: t('str_company'),\n    field: 'company',\n    render: function render(props) {\n      return __jsx(TableColumnText, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 32\n        }\n      }, props === null || props === void 0 ? void 0 : props.company);\n    }\n  }, {\n    title: t('str_startDate'),\n    field: 'startdate',\n    render: function render(props) {\n      return __jsx(TableColumnText, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 32\n        }\n      }, props === null || props === void 0 ? void 0 : props.startdate);\n    }\n  }, {\n    title: t('str_endDate'),\n    field: 'enddate',\n    render: function render(props) {\n      return __jsx(TableColumnText, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 32\n        }\n      }, props === null || props === void 0 ? void 0 : props.enddate);\n    }\n  }, {\n    title: t('str_workPos'),\n    field: 'workpos',\n    render: function render(props) {\n      return __jsx(TableColumnText, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 32\n        }\n      }, props === null || props === void 0 ? void 0 : props.workpos);\n    }\n  }, {\n    title: t('str_workSalary'),\n    field: 'worksalary',\n    render: function render(props) {\n      return __jsx(TableColumnText, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 17\n        }\n      }, props === null || props === void 0 ? void 0 : props.worksalary, \" \", getSymbolFromCurrency((props === null || props === void 0 ? void 0 : props.currencyCode) || 'TL'));\n    }\n  }, {\n    title: t('str_reasonForQuit'),\n    field: 'leavereason',\n    render: function render(props) {\n      return __jsx(TableColumnText, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 32\n        }\n      }, props === null || props === void 0 ? void 0 : props.leavereason);\n    }\n  }, {\n    title: t('str_preview'),\n    field: 'stdfileid',\n    render: function render(props) {\n      return props !== null && props !== void 0 && props.stdfileid ? __jsx(PopupState, {\n        variant: \"popover\",\n        popupId: \"status-menu\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 29\n        }\n      }, function (popupState) {\n        return __jsx(React.Fragment, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 37\n          }\n        }, __jsx(MenuItem, {\n          onClick: function onClick() {\n            setOpenPreviewDialog(true);\n            handlePreviewFile(props.mid, 'EMPLANG.CERT');\n          },\n          disabled: isFileDeleting || isFileDownloading,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 41\n          }\n        }, __jsx(VisibilityOutlinedIcon, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 45\n          }\n        })));\n      }) : null;\n    }\n  }, {\n    title: t('str_download'),\n    field: 'stdfileid',\n    render: function render(props) {\n      return props !== null && props !== void 0 && props.stdfileid ? __jsx(PopupState, {\n        variant: \"popover\",\n        popupId: \"status-menu\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 29\n        }\n      }, function (popupState) {\n        return __jsx(React.Fragment, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 37\n          }\n        }, (hasRightData === null || hasRightData === void 0 ? void 0 : hasRightData.cand) && __jsx(MenuItem, {\n          onClick: function onClick() {\n            setOpenTrackedDialog(true);\n            setDeleteFileInfo(props);\n            setPopupState(popupState);\n          },\n          disabled: isFileDeleting || isFileDownloading,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 49\n          }\n        }, isFileDeleting ? __jsx(LoadingSpinner, {\n          size: 18,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 71\n          }\n        }) : __jsx(DeleteOutlinedIcon, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 57\n          }\n        }), __jsx(Typography, {\n          style: {\n            paddingLeft: '8px'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 53\n          }\n        }, t('str_delete'))), __jsx(MenuItem, {\n          onClick: function onClick() {\n            return handleTaskFileDownload(props.mid, 'EMPLANG.CERT', props.description);\n          },\n          disabled: isFileDeleting || isFileDownloading,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 41\n          }\n        }, isFileDownloading ? __jsx(LoadingSpinner, {\n          size: 18,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 66\n          }\n        }) : __jsx(CloudDownloadOutlinedIcon, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 49\n          }\n        })));\n      }) : null;\n    }\n  }];\n  useEffect(function () {\n    if (token && empId) {\n      getWorkExperienceList();\n    }\n  }, []);\n  useEffect(function () {\n    var isEffect = true;\n\n    if (isEffect && workExperienceData && getData) {\n      var newClientInitialState = helper.objectMapper(workExperienceData, getData, ['company']);\n      setWorkExperienceData(newClientInitialState);\n      setWorkExperienceDataBase(newClientInitialState);\n      setIsInitialStateLoad(true);\n    }\n\n    return function () {\n      isEffect = false;\n    };\n  }, [getData]);\n\n  var handleDeleteItem = function handleDeleteItem(gid) {\n    setIsDeleting(true);\n    Delete({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.EMPWORK,\n      token: token,\n      gid: gid,\n      params: {\n        hotelrefno: GENERAL_SETTINGS.HOTELREFNO\n      }\n    }).then(function (res) {\n      if (res.status === 200) {\n        getWorkExperienceList();\n      } else {\n        var _error$errorMsg, _error$errorMsg2;\n\n        var error = isErrorMsg(res);\n        enqueueSnackbar(((_error$errorMsg = error.errorMsg) === null || _error$errorMsg === void 0 ? void 0 : _error$errorMsg.length) > 50 ? (_error$errorMsg2 = error.errorMsg) === null || _error$errorMsg2 === void 0 ? void 0 : _error$errorMsg2.substring(0, 50) : error.errorMsg, {\n          variant: 'error'\n        });\n        setIsDeleting(false);\n      }\n    });\n  };\n\n  var getWorkExperienceList = function getWorkExperienceList() {\n    setIsLoadingList(true);\n    ViewList({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.EMPWORK,\n      token: token,\n      params: {\n        query: \"empid:\".concat(empId),\n        allhotels: allHotels,\n        hotelrefno: hotelRefNo\n      }\n    }).then(function (res) {\n      setIsLoadingList(false);\n\n      if (res.status === 200) {\n        if (res.data.count > 0) {\n          setWorkExperienceList(res.data.data);\n        }\n      } else {\n        var _error$errorMsg3, _error$errorMsg4;\n\n        var error = isErrorMsg(res);\n        enqueueSnackbar(((_error$errorMsg3 = error.errorMsg) === null || _error$errorMsg3 === void 0 ? void 0 : _error$errorMsg3.length) > 50 ? (_error$errorMsg4 = error.errorMsg) === null || _error$errorMsg4 === void 0 ? void 0 : _error$errorMsg4.substring(0, 50) : error.errorMsg, {\n          variant: 'error'\n        });\n      }\n    });\n  };\n\n  var handleGetSelectedWorkExperience = function handleGetSelectedWorkExperience(selectedWorkExperience) {\n    if (selectedWorkExperience) {\n      setIsDef(true);\n      UseOrest({\n        apiUrl: GENERAL_SETTINGS.OREST_URL,\n        endpoint: OREST_ENDPOINT.EMPWORK + SLASH + OREST_ENDPOINT.VIEW + SLASH + 'get' + SLASH + selectedWorkExperience.gid,\n        token: token\n      }).then(function (res) {\n        setIsDef(false);\n\n        if (res.status === 200 && res.data.data) {\n          var data = res.data.data;\n          setGetData(data);\n        }\n      });\n    }\n  };\n\n  var handleDefRecord = function handleDefRecord() {\n    setIsDef(true);\n    UseOrest({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.EMPWORK + SLASH + OREST_ENDPOINT.DEF,\n      token: token,\n      params: {\n        hotelrefno: hotelRefNo\n      }\n    }).then(function (res) {\n      if (res.status === 200 && res.data.count > 0) {\n        var data = Object.assign({}, res.data.data, workExperienceData);\n        setWorkExperienceData(data);\n        setWorkExperienceDataBase(data);\n      }\n\n      setIsDef(false);\n    });\n  };\n\n  var handleSave = function handleSave() {\n    var data = _objectSpread({}, workExperienceData);\n\n    Object.keys(initialState).map(function (key) {\n      data[key] = typeof data[key].value === 'object' ? data[key].value ? data[key].value.id : null : data[key].value;\n    });\n\n    if (empId) {\n      setIsSaving(true);\n\n      if (selectedGid) {\n        Patch({\n          apiUrl: GENERAL_SETTINGS.OREST_URL,\n          endpoint: OREST_ENDPOINT.EMPWORK,\n          gid: selectedGid,\n          data: data,\n          token: token\n        }).then(function (res) {\n          if (file) {\n            Upload({\n              apiUrl: GENERAL_SETTINGS.OREST_URL,\n              token: token,\n              params: {\n                masterid: res.data.data.mid,\n                code: 'EMPLANG.CERT',\n                orsactive: true,\n                hotelrefno: hotelRefNo\n              },\n              files: [file]\n            });\n          }\n\n          if (res.status === 200) {\n            enqueueSnackbar(t('str_processCompletedSuccessfully'), {\n              variant: 'success'\n            });\n            setOpenAddDialog(false);\n            getWorkExperienceList();\n            handleReset();\n          } else {\n            var error = isErrorMsg(res);\n            enqueueSnackbar(error.errorMsg, {\n              variant: 'error'\n            });\n          }\n\n          setIsSaving(false);\n        });\n      } else {\n        data.empid = empId;\n        data.hotelrefno = hotelRefNo;\n        Insert({\n          apiUrl: GENERAL_SETTINGS.OREST_URL,\n          endpoint: OREST_ENDPOINT.EMPWORK,\n          token: token,\n          data: data\n        }).then( /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(res) {\n            var error;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    if (res.status === 200) {\n                      if (file) {\n                        Upload({\n                          apiUrl: GENERAL_SETTINGS.OREST_URL,\n                          token: token,\n                          params: {\n                            masterid: res.data.data.mid,\n                            code: 'EMPLANG.CERT',\n                            orsactive: true,\n                            hotelrefno: hotelRefNo\n                          },\n                          files: [file]\n                        });\n                      }\n\n                      enqueueSnackbar(t('str_processCompletedSuccessfully'), {\n                        variant: 'success'\n                      });\n                      setOpenAddDialog(false);\n                      getWorkExperienceList();\n                      handleReset();\n                    } else {\n                      error = isErrorMsg(res);\n                      enqueueSnackbar(error.errorMsg, {\n                        variant: 'error'\n                      });\n                    }\n\n                    setIsSaving(false);\n\n                  case 2:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }());\n      }\n    }\n  };\n\n  var handleChangeNumberFormat = function handleChangeNumberFormat(value, name) {\n    setWorkExperienceData(_objectSpread(_objectSpread({}, workExperienceData), {}, _defineProperty({}, name, _objectSpread(_objectSpread({}, workExperienceData[name]), {}, {\n      value: value === null || value === void 0 ? void 0 : value.floatValue\n    }))));\n  };\n\n  var handleOnChangeFormElements = function handleOnChangeFormElements(event, key, isOnBlur) {\n    var name = key ? key : event.target.name;\n    var value = event !== null && event !== void 0 && event.target ? event.target.value : event;\n\n    if (isOnBlur) {\n      var _workExperienceData$n, _workExperienceData$n2;\n\n      setWorkExperienceData(_objectSpread(_objectSpread({}, workExperienceData), {}, _defineProperty({}, name, _objectSpread(_objectSpread({}, workExperienceData[name]), {}, {\n        isError: ((_workExperienceData$n = workExperienceData[name]) === null || _workExperienceData$n === void 0 ? void 0 : _workExperienceData$n.isRequired) && !!required(value),\n        helperText: ((_workExperienceData$n2 = workExperienceData[name]) === null || _workExperienceData$n2 === void 0 ? void 0 : _workExperienceData$n2.isRequired) && !!required(value) && t('str_mandatory')\n      }))));\n    } else {\n      var _workExperienceData$n3, _workExperienceData$n4;\n\n      setWorkExperienceData(_objectSpread(_objectSpread({}, workExperienceData), {}, _defineProperty({}, name, _objectSpread(_objectSpread({}, workExperienceData[name]), {}, {\n        value: name === \"startdate\" || name === \"enddate\" ? moment(value).format(OREST_ENDPOINT.DATEFORMAT) : value,\n        isError: ((_workExperienceData$n3 = workExperienceData[name]) === null || _workExperienceData$n3 === void 0 ? void 0 : _workExperienceData$n3.isRequired) && !!required(value),\n        helperText: ((_workExperienceData$n4 = workExperienceData[name]) === null || _workExperienceData$n4 === void 0 ? void 0 : _workExperienceData$n4.isRequired) && !!required(value) && t('str_mandatory')\n      }))));\n    }\n  };\n\n  var handleOnBlurFormElements = function handleOnBlurFormElements(event, key) {\n    handleOnChangeFormElements(event, key, true);\n  };\n\n  var handleOpenAddDialog = function handleOpenAddDialog() {\n    var selectedWorkExperience = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    if (selectedWorkExperience) {\n      handleGetSelectedWorkExperience(selectedWorkExperience);\n    } else {\n      handleDefRecord();\n    }\n\n    setOpenAddDialog(true);\n  };\n\n  var handleCloseDialog = function handleCloseDialog() {\n    if (JSON.stringify(workExperienceData) !== JSON.stringify(workExperienceDataBase)) {\n      setOpenTrackedDialog(true);\n    } else {\n      setOpenAddDialog(false);\n      handleReset();\n    }\n  };\n\n  var handleReset = function handleReset() {\n    setTimeout(function () {\n      setIsInitialStateLoad(false);\n      setGetData(null);\n      setWorkExperienceData(initialState);\n      setWorkExperienceDataBase(initialState);\n      setSelectedWorkExperienceData(null);\n      setSelectedGid(null);\n      setFileType('');\n      setMediaUrl('');\n    }, 100);\n  };\n\n  var handlePreviewFile = function handlePreviewFile(mid, code) {\n    setIsPreviewLoading(true);\n    axios({\n      url: \"\".concat(GENERAL_SETTINGS.OREST_URL, \"/tools/file/download\"),\n      headers: {\n        'Authorization': \"Bearer \".concat(token)\n      },\n      method: 'get',\n      responseType: 'arraybuffer',\n      params: {\n        mid: mid,\n        code: code,\n        hotelrefno: GENERAL_SETTINGS.HOTELREFNO\n      }\n    }).then(function (r) {\n      if (r.status === 200) {\n        var blob = new Blob([r.data], {\n          type: r.data.type\n        }),\n            url = URL.createObjectURL(blob);\n        setMediaUrl(url);\n        setIsPreviewLoading(false);\n      }\n    });\n  };\n\n  var handleTaskFileDownload = function handleTaskFileDownload(mid, code, description) {\n    axios({\n      url: \"\".concat(GENERAL_SETTINGS.OREST_URL, \"/tools/file/download\"),\n      headers: {\n        'Authorization': \"Bearer \".concat(token)\n      },\n      method: 'get',\n      responseType: 'blob',\n      params: {\n        mid: mid,\n        code: code,\n        hotelrefno: GENERAL_SETTINGS.HOTELREFNO\n      }\n    }).then(function (r) {\n      if (r.status === 200) {\n        var blob = new Blob([r.data], {\n          type: r.data.type\n        }),\n            url = URL.createObjectURL(blob),\n            link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', \"\".concat(description).toLowerCase()); //or any other extension\n\n        document.body.appendChild(link);\n        link.click();\n        link.remove();\n      }\n    });\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 676,\n      columnNumber: 9\n    }\n  }, __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 677,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 678,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 4,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 679,\n      columnNumber: 21\n    }\n  }, __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 680,\n      columnNumber: 25\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 681,\n      columnNumber: 29\n    }\n  }, __jsx(CustomToolTip, {\n    title: t('str_refresh'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 682,\n      columnNumber: 33\n    }\n  }, __jsx(IconButton, {\n    onClick: function onClick() {\n      return getWorkExperienceList();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 683,\n      columnNumber: 37\n    }\n  }, __jsx(CachedIcon, {\n    style: {\n      color: \"#F16A4B\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 686,\n      columnNumber: 41\n    }\n  })))), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 690,\n      columnNumber: 29\n    }\n  }, __jsx(CustomToolTip, {\n    title: t('str_add'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 691,\n      columnNumber: 33\n    }\n  }, __jsx(IconButton, {\n    onClick: function onClick() {\n      return handleOpenAddDialog(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 692,\n      columnNumber: 37\n    }\n  }, __jsx(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 695,\n      columnNumber: 41\n    }\n  })))))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 701,\n      columnNumber: 21\n    }\n  }, __jsx(MaterialTable, {\n    isLoading: isLoadingList,\n    columns: WorkExperienceColumns,\n    data: workExperienceList,\n    localization: tableLocalization,\n    options: {\n      headerStyle: {\n        cursor: 'default',\n        fontWeight: \"bold\",\n        fontSize: \"12px\",\n        color: \"#A3A6B4\",\n        textTransform: \"uppercase\",\n        backgroundColor: \"#F5F6FA\",\n        whiteSpace: 'nowrap',\n        borderLeft: '1px solid #FFF'\n      },\n      cellStyle: {\n        whiteSpace: 'nowrap',\n        borderLeft: '1px solid rgba(224, 224, 224, 1)',\n        fontSize: '13px'\n      },\n      toolbar: false,\n      selection: false,\n      sorting: false,\n      search: false,\n      actionsColumnIndex: 1,\n      selectionColumnIndex: 1\n    },\n    components: {\n      Header: function Header(props) {\n        var overrideProps = _objectSpread({}, props);\n\n        overrideProps.draggable = false;\n        return __jsx(MTableHeader, _extends({}, overrideProps, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 735,\n            columnNumber: 41\n          }\n        }));\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 702,\n      columnNumber: 25\n    }\n  }))), __jsx(Dialog, {\n    open: openAddDialog,\n    disableEnforceFocus: true,\n    maxWidth: 'sm',\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 742,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    style: {\n      padding: 24\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 743,\n      columnNumber: 21\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 744,\n      columnNumber: 25\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 745,\n      columnNumber: 29\n    }\n  }, __jsx(Typography, {\n    style: {\n      fontWeight: '600',\n      fontSize: '18px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 746,\n      columnNumber: 33\n    }\n  }, selectedWorkExperienceData ? t('str_editWork') : t('str_addWorkExperience'))), isDef ? __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 753,\n      columnNumber: 37\n    }\n  }, __jsx(LoadingSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 754,\n      columnNumber: 41\n    }\n  })) : __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 757,\n      columnNumber: 37\n    }\n  }, formElements.map(function (item, index) {\n    return __jsx(Grid, _extends({\n      key: index,\n      item: true\n    }, item.gridProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 760,\n        columnNumber: 49\n      }\n    }), renderFormElements(item));\n  }), __jsx(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 765,\n      columnNumber: 41\n    }\n  }, __jsx(Fab, {\n    variant: \"extended\",\n    size: \"18px\",\n    onClick: openDialog,\n    color: \"primary\",\n    style: {\n      fontWeight: '600',\n      fontSize: 'inherit',\n      borderRadius: 7,\n      height: 42\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 766,\n      columnNumber: 45\n    }\n  }, __jsx(CloudUploadIcon, {\n    style: {\n      marginRight: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 778,\n      columnNumber: 49\n    }\n  }), t('str_upload')), __jsx(DropzoneDialog, {\n    open: workFileUploadStatus,\n    onSave: function onSave(file) {\n      setWorkFileUploadStatus(false);\n      setFile(file[0]);\n    },\n    acceptedFiles: ['image/jpeg', 'image/png', 'image/bmp', 'image/gif', 'video/mp4', 'application/zip'],\n    showPreviews: true,\n    filesLimit: 3,\n    maxFileSize: 5000000,\n    onClose: function onClose() {\n      return setWorkFileUploadStatus(false);\n    },\n    submitButtonText: t('str_save'),\n    cancelButtonText: t('str_cancel'),\n    dialogTitle: t('str_uploadTheWorkCertificateFile'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 781,\n      columnNumber: 45\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 804,\n      columnNumber: 41\n    }\n  }, __jsx(AddDialogActions, {\n    disabled: isSaving,\n    loading: isSaving,\n    onCancelClick: handleCloseDialog,\n    onSaveClick: handleSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 805,\n      columnNumber: 45\n    }\n  })))))), __jsx(MediaViewerDialog, {\n    open: openPreviewDialog,\n    maxWidth: 'md',\n    fullWidth: true,\n    loading: isPreviewLoading,\n    fileType: fileType,\n    url: mediaUrl,\n    t: t,\n    onClose: function onClose() {\n      setOpenPreviewDialog(false);\n      setTimeout(function () {\n        handleReset();\n      }, 100);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 818,\n      columnNumber: 17\n    }\n  }), __jsx(TrackedChangesDialog, {\n    open: openTrackedDialog,\n    onPressNo: function onPressNo(e) {\n      setOpenTrackedDialog(e);\n    },\n    onPressYes: function onPressYes(e) {\n      setOpenTrackedDialog(e);\n      setOpenAddDialog(false);\n      handleReset();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 833,\n      columnNumber: 17\n    }\n  })));\n}\n\n_s(WorkExperience, \"FisFrtYjpds5/vL1qQTvAx5i2lY=\", false, function () {\n  return [useSnackbar, useTranslation, useSelector, useSelector, useSelector];\n});\n\n_c = WorkExperience;\nexport default WorkExperience;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkExperience\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/emp-portal/tabs/Work/index.js"],"names":["React","useState","useEffect","useContext","Insert","UseOrest","ViewList","Patch","Delete","Upload","WebCmsGlobal","useSelector","isErrorMsg","mobileTelNoFormat","OREST_ENDPOINT","Grid","Typography","Dialog","Checkbox","FormControlLabel","Button","Menu","MenuItem","IconButton","useSnackbar","MaterialTableGeneric","SLASH","useTranslation","renderFormElements","ELEMENT_TYPES","required","AddDialogActions","LocaleContext","LoadingSpinner","helper","TrackedChangesDialog","EditOutlinedIcon","MaterialTable","MTableHeader","MaterialTableLocalization","MoreVertIcon","TableColumnText","PopupState","bindMenu","bindTrigger","CustomToolTip","CachedIcon","AddIcon","moment","DeleteIcon","getSymbolFromCurrency","Fab","CloudUploadIcon","DropzoneDialog","VisibilityOutlinedIcon","DeleteOutlinedIcon","CloudDownloadOutlinedIcon","axios","MediaViewerDialog","VARIANT","WorkExperience","props","empId","enqueueSnackbar","GENERAL_SETTINGS","locale","t","tableLocalization","token","state","orest","currentUser","auth","access_token","hotelRefNo","hotelinfo","currentHotelRefNo","HOTELREFNO","emp","mid","initialState","company","value","isError","helperText","startdate","enddate","workpos","worksalary","leavereason","stdfileid","isLoadingList","setIsLoadingList","allHotels","setAllHotels","workExperienceList","setWorkExperienceList","openAddDialog","setOpenAddDialog","selectedWorkExperienceData","setSelectedWorkExperienceData","selectedGid","setSelectedGid","getData","setGetData","openTrackedDialog","setOpenTrackedDialog","isDef","setIsDef","isSaving","setIsSaving","workExperienceData","setWorkExperienceData","workExperienceDataBase","setWorkExperienceDataBase","isInitialStateLoad","setIsInitialStateLoad","isDeleting","setIsDeleting","workFileUploadStatus","setWorkFileUploadStatus","workFileListLoading","setWorkFileListLoading","workFileList","setWorkFileList","openPreviewDialog","setOpenPreviewDialog","isPreviewLoading","setIsPreviewLoading","mediaUrl","setMediaUrl","fileType","setFileType","isFileDeleting","setIsFileDeleting","isFileDownloading","setIsFileDownloading","popupState","setPopupState","deleteFileInfo","setDeleteFileInfo","hasRightData","setHasRightData","file","setFile","openDialog","formElements","type","textField","id","name","error","isRequired","disabled","label","onChange","e","handleOnChangeFormElements","onBlur","handleOnBlurFormElements","variant","fullWidth","gridProps","xs","sm","datePicker","newValue","numberFormat","Number","handleChangeNumberFormat","WorkExperienceColumns","title","padding","maxWidth","minWidth","render","vertical","horizontal","gid","handleOpenAddDialog","close","paddingLeft","handleDeleteItem","field","currencyCode","handlePreviewFile","cand","handleTaskFileDownload","description","getWorkExperienceList","isEffect","newClientInitialState","objectMapper","apiUrl","OREST_URL","endpoint","EMPWORK","params","hotelrefno","then","res","status","errorMsg","length","substring","query","allhotels","data","count","handleGetSelectedWorkExperience","selectedWorkExperience","VIEW","handleDefRecord","DEF","Object","assign","handleSave","keys","map","key","masterid","code","orsactive","files","handleReset","empid","floatValue","event","isOnBlur","target","format","DATEFORMAT","handleCloseDialog","JSON","stringify","setTimeout","url","headers","method","responseType","r","blob","Blob","URL","createObjectURL","link","document","createElement","href","setAttribute","toLowerCase","body","appendChild","click","remove","color","headerStyle","cursor","fontWeight","fontSize","textTransform","backgroundColor","whiteSpace","borderLeft","cellStyle","toolbar","selection","sorting","search","actionsColumnIndex","selectionColumnIndex","Header","overrideProps","draggable","item","index","borderRadius","height","marginRight"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,UAApC,QAAqD,OAArD;AACA,SAAQC,MAAR,EAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,KAApC,EAA2CC,MAA3C,EAAmDC,MAAnD,QAAgE,eAAhE;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,UAAR,EAAoBC,iBAApB,EAAuCC,cAAvC,QAA4D,mCAA5D;AACA,SACIC,IADJ,EAEIC,UAFJ,EAGIC,MAHJ,EAIIC,QAJJ,EAIcC,gBAJd,EAIgCC,MAJhC,EAIwCC,IAJxC,EAI8CC,QAJ9C,EAIwDC,UAJxD,QAKO,mBALP;AAMA,SAAQC,WAAR,QAA0B,WAA1B;AACA,OAAOC,oBAAP,MAAiC,+BAAjC;AACA,SAAQC,KAAR,QAAoB,2BAApB;AACA,OAAOC,cAAP,MAA2B,mDAA3B;AACA,OAAOC,kBAAP,IAA4BC,aAA5B,QAAgD,+BAAhD;AACA,SAAQC,QAAR,QAAuB,8BAAvB;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;AACA,SAAQC,aAAR,QAA4B,oDAA5B;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,SAAQC,MAAR,QAAqB,6BAArB;AACA,OAAOC,oBAAP,MAAiC,+BAAjC;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,aAAP,IAAuBC,YAAvB,QAA0C,gBAA1C;AACA,OAAOC,yBAAP,MAAsC,oCAAtC;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,OAAOC,UAAP,IAAoBC,QAApB,EAA8BC,WAA9B,QAAgD,yBAAhD;AACA,SAAQC,aAAR,QAA4B,6DAA5B;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,qBAAP,MAAkC,mCAAlC;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,SAAQC,cAAR,QAA6B,sBAA7B;AACA,OAAOC,sBAAP,MAAmC,uCAAnC;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AACA,OAAOC,yBAAP,MAAsC,0CAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,iBAAP,MAA8B,iDAA9B;AAEA,IAAMC,OAAO,GAAG,UAAhB;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAE3B;AAF2B,MAGpBC,KAHoB,GAGXD,KAHW,CAGpBC,KAHoB,EAK3B;;AAL2B,qBAMDtC,WAAW,EANV;AAAA,MAMpBuC,eANoB,gBAMpBA,eANoB,EAQ3B;;;AAR2B,oBASA5D,UAAU,CAACO,YAAD,CATV;AAAA,MASpBsD,gBAToB,eASpBA,gBAToB;;AAAA,qBAUV7D,UAAU,CAAC6B,aAAD,CAVA;AAAA,MAUpBiC,MAVoB,gBAUpBA,MAVoB;;AAAA,wBAWftC,cAAc,EAXC;AAAA,MAWpBuC,CAXoB,mBAWpBA,CAXoB;;AAa3B,MAAMC,iBAAiB,GAAG5B,yBAAyB,EAAnD,CAb2B,CAe3B;;AACA,MAAM6B,KAAK,GAAGzD,WAAW,CAAC,UAAC0D,KAAD;AAAA;;AAAA,WAAW,CAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,4BAAAA,KAAK,CAAEC,KAAP,uFAAcC,WAAd,0GAA2BC,IAA3B,kFAAiCC,YAAjC,KAAiD,KAA5D;AAAA,GAAD,CAAzB;AACA,MAAMC,UAAU,GAAG/D,WAAW,CAAC,UAAC0D,KAAD;AAAA;;AAAA,WAAW,CAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,gCAAAA,KAAK,CAAEM,SAAP,sEAAkBC,iBAAlB,KAAuCZ,gBAAgB,CAACa,UAAxD,IAAsE,KAAjF;AAAA,GAAD,CAA9B;AACA,MAAMR,KAAK,GAAG1D,WAAW,CAAC,UAAC0D,KAAD;AAAA;;AAAA,WAAW,CAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,6BAAAA,KAAK,CAAEC,KAAP,uFAAcD,KAAd,qGAAqBS,GAArB,gFAA0BC,GAA1B,KAAiC,KAA5C;AAAA,GAAD,CAAzB,CAlB2B,CAoB3B;;AACA,MAAMC,YAAY,GAAG;AACjBC,IAAAA,OAAO,EAAE;AAACC,MAAAA,KAAK,EAAE,EAAR;AAAYC,MAAAA,OAAO,EAAE,KAArB;AAA4BrD,MAAAA,QAAQ,EAAE,IAAtC;AAA4CsD,MAAAA,UAAU,EAAE;AAAxD,KADQ;AAEjBC,IAAAA,SAAS,EAAE;AAACH,MAAAA,KAAK,EAAE,EAAR;AAAYC,MAAAA,OAAO,EAAE,KAArB;AAA4BrD,MAAAA,QAAQ,EAAE,KAAtC;AAA6CsD,MAAAA,UAAU,EAAE;AAAzD,KAFM;AAGjBE,IAAAA,OAAO,EAAE;AAACJ,MAAAA,KAAK,EAAE,EAAR;AAAYC,MAAAA,OAAO,EAAE,KAArB;AAA4BrD,MAAAA,QAAQ,EAAE,KAAtC;AAA6CsD,MAAAA,UAAU,EAAE;AAAzD,KAHQ;AAIjBG,IAAAA,OAAO,EAAE;AAACL,MAAAA,KAAK,EAAE,EAAR;AAAYC,MAAAA,OAAO,EAAE,KAArB;AAA4BrD,MAAAA,QAAQ,EAAE,KAAtC;AAA6CsD,MAAAA,UAAU,EAAE;AAAzD,KAJQ;AAKjBI,IAAAA,UAAU,EAAE;AAACN,MAAAA,KAAK,EAAE,EAAR;AAAYC,MAAAA,OAAO,EAAE,KAArB;AAA4BrD,MAAAA,QAAQ,EAAE,KAAtC;AAA6CsD,MAAAA,UAAU,EAAE;AAAzD,KALK;AAMjBK,IAAAA,WAAW,EAAE;AAACP,MAAAA,KAAK,EAAE,EAAR;AAAYC,MAAAA,OAAO,EAAE,KAArB;AAA4BrD,MAAAA,QAAQ,EAAE,KAAtC;AAA6CsD,MAAAA,UAAU,EAAE;AAAzD,KANI;AAOjBM,IAAAA,SAAS,EAAE;AAACR,MAAAA,KAAK,EAAE,CAAR;AAAWC,MAAAA,OAAO,EAAE,KAApB;AAA2BrD,MAAAA,QAAQ,EAAE,KAArC;AAA4CsD,MAAAA,UAAU,EAAE;AAAxD;AAPM,GAArB;;AArB2B,kBA+BenF,QAAQ,CAAC,KAAD,CA/BvB;AAAA,MA+BpB0F,aA/BoB;AAAA,MA+BLC,gBA/BK;;AAAA,mBAgCO3F,QAAQ,CAAC,KAAD,CAhCf;AAAA,MAgCpB4F,SAhCoB;AAAA,MAgCTC,YAhCS;;AAAA,mBAiCyB7F,QAAQ,CAAC,EAAD,CAjCjC;AAAA,MAiCpB8F,kBAjCoB;AAAA,MAiCAC,qBAjCA;;AAAA,mBAkCe/F,QAAQ,CAAC,KAAD,CAlCvB;AAAA,MAkCpBgG,aAlCoB;AAAA,MAkCLC,gBAlCK;;AAAA,mBAoCyCjG,QAAQ,CAAC,IAAD,CApCjD;AAAA,MAoCpBkG,0BApCoB;AAAA,MAoCQC,6BApCR;;AAAA,mBAqCWnG,QAAQ,CAAC,KAAD,CArCnB;AAAA,MAqCpBoG,WArCoB;AAAA,MAqCPC,cArCO;;AAAA,mBAsCGrG,QAAQ,CAAC,IAAD,CAtCX;AAAA,MAsCpBsG,OAtCoB;AAAA,MAsCXC,UAtCW;;AAAA,mBAuCuBvG,QAAQ,CAAC,KAAD,CAvC/B;AAAA,MAuCpBwG,iBAvCoB;AAAA,MAuCDC,oBAvCC;;AAAA,mBAwCDzG,QAAQ,CAAC,KAAD,CAxCP;AAAA,MAwCpB0G,KAxCoB;AAAA,MAwCbC,QAxCa;;AAAA,oBAyCK3G,QAAQ,CAAC,KAAD,CAzCb;AAAA,MAyCpB4G,QAzCoB;AAAA,MAyCVC,WAzCU;;AAAA,oBA0CyB7G,QAAQ,CAAC+E,YAAD,CA1CjC;AAAA,MA0CpB+B,kBA1CoB;AAAA,MA0CAC,qBA1CA;;AAAA,oBA2CiC/G,QAAQ,CAAC+E,YAAD,CA3CzC;AAAA,MA2CpBiC,sBA3CoB;AAAA,MA2CIC,yBA3CJ;;AAAA,oBA4CyBjH,QAAQ,CAAC,KAAD,CA5CjC;AAAA,MA4CpBkH,kBA5CoB;AAAA,MA4CAC,qBA5CA;;AAAA,oBA6CSnH,QAAQ,CAAC,KAAD,CA7CjB;AAAA,MA6CpBoH,UA7CoB;AAAA,MA6CRC,aA7CQ;;AAAA,oBA8C6BrH,QAAQ,CAAC,KAAD,CA9CrC;AAAA,MA8CpBsH,oBA9CoB;AAAA,MA8CEC,uBA9CF;;AAAA,oBA+C2BvH,QAAQ,CAAC,KAAD,CA/CnC;AAAA,MA+CpBwH,mBA/CoB;AAAA,MA+CCC,sBA/CD;;AAAA,oBAgDazH,QAAQ,CAAC,EAAD,CAhDrB;AAAA,MAgDpB0H,YAhDoB;AAAA,MAgDNC,eAhDM;;AAAA,oBAiDuB3H,QAAQ,CAAC,KAAD,CAjD/B;AAAA,MAiDpB4H,iBAjDoB;AAAA,MAiDDC,oBAjDC;;AAAA,oBAkDqB7H,QAAQ,CAAC,KAAD,CAlD7B;AAAA,MAkDpB8H,gBAlDoB;AAAA,MAkDFC,mBAlDE;;AAAA,oBAmDK/H,QAAQ,CAAC,EAAD,CAnDb;AAAA,MAmDpBgI,QAnDoB;AAAA,MAmDVC,WAnDU;;AAAA,oBAoDKjI,QAAQ,CAAC,EAAD,CApDb;AAAA,MAoDpBkI,QApDoB;AAAA,MAoDVC,WApDU;;AAAA,oBAqDiBnI,QAAQ,CAAC,KAAD,CArDzB;AAAA,MAqDpBoI,cArDoB;AAAA,MAqDJC,iBArDI;;AAAA,oBAsDuBrI,QAAQ,CAAC,KAAD,CAtD/B;AAAA,MAsDpBsI,iBAtDoB;AAAA,MAsDDC,oBAtDC;;AAAA,oBAuDSvI,QAAQ,CAAC,EAAD,CAvDjB;AAAA,MAuDpBwI,UAvDoB;AAAA,MAuDRC,aAvDQ;;AAAA,oBAwDiBzI,QAAQ,CAAC,KAAD,CAxDzB;AAAA,MAwDpB0I,cAxDoB;AAAA,MAwDJC,iBAxDI;;AAAA,oBAyDa3I,QAAQ,EAzDrB;AAAA,MAyDpB4I,YAzDoB;AAAA,MAyDNC,eAzDM;;AAAA,oBA0DH7I,QAAQ,CAAC,IAAD,CA1DL;AAAA,MA0DpB8I,IA1DoB;AAAA,MA0DdC,OA1Dc;;AA4D3B,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrBzB,IAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACH,GAFD;;AAGA,MAAM0B,YAAY,GAAG,CACjB;AACIC,IAAAA,IAAI,EAAEtH,aAAa,CAACuH,SADxB;AAEIC,IAAAA,EAAE,EAAE,SAFR;AAGIC,IAAAA,IAAI,EAAE,SAHV;AAIIpE,IAAAA,KAAK,2BAAE6B,kBAAkB,CAAC9B,OAArB,0DAAE,sBAA4BC,KAJvC;AAKIqE,IAAAA,KAAK,4BAAExC,kBAAkB,CAAC9B,OAArB,2DAAE,uBAA4BE,OALvC;AAMIrD,IAAAA,QAAQ,4BAAEiF,kBAAkB,CAAC9B,OAArB,2DAAE,uBAA4BuE,UAN1C;AAOIC,IAAAA,QAAQ,EAAE5C,QAPd;AAQI6C,IAAAA,KAAK,EAAExF,CAAC,CAAC,aAAD,CARZ;AASIkB,IAAAA,UAAU,4BAAE2B,kBAAkB,CAAC9B,OAArB,2DAAE,uBAA4BG,UAT5C;AAUIuE,IAAAA,QAAQ,EAAE,kBAACC,CAAD;AAAA,aAAOC,0BAA0B,CAACD,CAAD,CAAjC;AAAA,KAVd;AAWIE,IAAAA,MAAM,EAAE,gBAACF,CAAD;AAAA,aAAOG,wBAAwB,CAACH,CAAD,CAA/B;AAAA,KAXZ;AAYII,IAAAA,OAAO,EAAErG,OAZb;AAaIsG,IAAAA,SAAS,EAAE,IAbf;AAcIC,IAAAA,SAAS,EAAE;AAACC,MAAAA,EAAE,EAAE,EAAL;AAASC,MAAAA,EAAE,EAAE;AAAb;AAdf,GADiB,EAiBjB;AACIjB,IAAAA,IAAI,EAAEtH,aAAa,CAACwI,UADxB;AAEIhB,IAAAA,EAAE,EAAE,WAFR;AAGIC,IAAAA,IAAI,EAAE,WAHV;AAIIpE,IAAAA,KAAK,2BAAE6B,kBAAkB,CAAC1B,SAArB,0DAAE,sBAA8BH,KAJzC;AAKIqE,IAAAA,KAAK,4BAAExC,kBAAkB,CAAC1B,SAArB,2DAAE,uBAA8BF,OALzC;AAMIrD,IAAAA,QAAQ,4BAAEiF,kBAAkB,CAAC1B,SAArB,2DAAE,uBAA8BmE,UAN5C;AAOIC,IAAAA,QAAQ,EAAE5C,QAPd;AAQI6C,IAAAA,KAAK,EAAExF,CAAC,CAAC,eAAD,CARZ;AASIkB,IAAAA,UAAU,4BAAE2B,kBAAkB,CAAC1B,SAArB,2DAAE,uBAA8BD,UAT9C;AAUIuE,IAAAA,QAAQ,EAAE,kBAACW,QAAD,EAAWhB,IAAX;AAAA,aAAoBO,0BAA0B,CAACS,QAAD,EAAWhB,IAAX,CAA9C;AAAA,KAVd;AAWIQ,IAAAA,MAAM,EAAE,gBAACF,CAAD;AAAA,aAAOG,wBAAwB,CAACH,CAAD,CAA/B;AAAA,KAXZ;AAYII,IAAAA,OAAO,EAAErG,OAZb;AAaIsG,IAAAA,SAAS,EAAE,IAbf;AAcIC,IAAAA,SAAS,EAAE;AAACC,MAAAA,EAAE,EAAE,EAAL;AAASC,MAAAA,EAAE,EAAE;AAAb;AAdf,GAjBiB,EAiCjB;AACIjB,IAAAA,IAAI,EAAEtH,aAAa,CAACwI,UADxB;AAEIhB,IAAAA,EAAE,EAAE,SAFR;AAGIC,IAAAA,IAAI,EAAE,SAHV;AAIIpE,IAAAA,KAAK,2BAAE6B,kBAAkB,CAACzB,OAArB,0DAAE,sBAA4BJ,KAJvC;AAKIqE,IAAAA,KAAK,4BAAExC,kBAAkB,CAACzB,OAArB,2DAAE,uBAA4BH,OALvC;AAMIrD,IAAAA,QAAQ,4BAAEiF,kBAAkB,CAACzB,OAArB,2DAAE,uBAA4BkE,UAN1C;AAOIC,IAAAA,QAAQ,EAAE5C,QAPd;AAQI6C,IAAAA,KAAK,EAAExF,CAAC,CAAC,aAAD,CARZ;AASIkB,IAAAA,UAAU,4BAAE2B,kBAAkB,CAACzB,OAArB,2DAAE,uBAA4BF,UAT5C;AAUIuE,IAAAA,QAAQ,EAAE,kBAACW,QAAD,EAAWhB,IAAX;AAAA,aAAoBO,0BAA0B,CAACS,QAAD,EAAWhB,IAAX,CAA9C;AAAA,KAVd;AAWIQ,IAAAA,MAAM,EAAE,gBAACF,CAAD;AAAA,aAAOG,wBAAwB,CAACH,CAAD,CAA/B;AAAA,KAXZ;AAYII,IAAAA,OAAO,EAAErG,OAZb;AAaIsG,IAAAA,SAAS,EAAE,IAbf;AAcIC,IAAAA,SAAS,EAAE;AAACC,MAAAA,EAAE,EAAE,EAAL;AAASC,MAAAA,EAAE,EAAE;AAAb;AAdf,GAjCiB,EAiDjB;AACIjB,IAAAA,IAAI,EAAEtH,aAAa,CAACuH,SADxB;AAEIC,IAAAA,EAAE,EAAE,SAFR;AAGIC,IAAAA,IAAI,EAAE,SAHV;AAIIpE,IAAAA,KAAK,2BAAE6B,kBAAkB,CAACxB,OAArB,0DAAE,sBAA4BL,KAJvC;AAKIqE,IAAAA,KAAK,4BAAExC,kBAAkB,CAACxB,OAArB,2DAAE,uBAA4BJ,OALvC;AAMIrD,IAAAA,QAAQ,4BAAEiF,kBAAkB,CAACxB,OAArB,2DAAE,uBAA4BiE,UAN1C;AAOIC,IAAAA,QAAQ,EAAE5C,QAPd;AAQI6C,IAAAA,KAAK,EAAExF,CAAC,CAAC,kBAAD,CARZ;AASIkB,IAAAA,UAAU,4BAAE2B,kBAAkB,CAACxB,OAArB,2DAAE,uBAA4BH,UAT5C;AAUIuE,IAAAA,QAAQ,EAAE,kBAACC,CAAD;AAAA,aAAOC,0BAA0B,CAACD,CAAD,CAAjC;AAAA,KAVd;AAWIE,IAAAA,MAAM,EAAE,gBAACF,CAAD;AAAA,aAAOG,wBAAwB,CAACH,CAAD,CAA/B;AAAA,KAXZ;AAYII,IAAAA,OAAO,EAAErG,OAZb;AAaIsG,IAAAA,SAAS,EAAE,IAbf;AAcIC,IAAAA,SAAS,EAAE;AAACC,MAAAA,EAAE,EAAE,EAAL;AAASC,MAAAA,EAAE,EAAE;AAAb;AAdf,GAjDiB,EAiEjB;AACIjB,IAAAA,IAAI,EAAEtH,aAAa,CAAC0I,YADxB;AAEIlB,IAAAA,EAAE,EAAE,YAFR;AAGIC,IAAAA,IAAI,EAAE,YAHV;AAIIpE,IAAAA,KAAK,EAAEsF,MAAM,2BAACzD,kBAAkB,CAACvB,UAApB,2DAAC,uBAA+BN,KAAhC,CAJjB;AAKIqE,IAAAA,KAAK,4BAAExC,kBAAkB,CAACvB,UAArB,2DAAE,uBAA+BL,OAL1C;AAMIrD,IAAAA,QAAQ,4BAAEiF,kBAAkB,CAACvB,UAArB,2DAAE,uBAA+BgE,UAN7C;AAOIC,IAAAA,QAAQ,EAAE5C,QAPd;AAQI6C,IAAAA,KAAK,EAAExF,CAAC,CAAC,gBAAD,CARZ;AASIkB,IAAAA,UAAU,4BAAE2B,kBAAkB,CAACvB,UAArB,2DAAE,uBAA+BJ,UAT/C;AAUIuE,IAAAA,QAAQ,EAAE,kBAACC,CAAD,EAAIN,IAAJ;AAAA,aAAamB,wBAAwB,CAACb,CAAD,EAAIN,IAAJ,CAArC;AAAA,KAVd;AAWIQ,IAAAA,MAAM,EAAE,gBAACF,CAAD;AAAA,aAAOG,wBAAwB,CAACH,CAAD,CAA/B;AAAA,KAXZ;AAYII,IAAAA,OAAO,EAAErG,OAZb;AAaIsG,IAAAA,SAAS,EAAE,IAbf;AAcIC,IAAAA,SAAS,EAAE;AAACC,MAAAA,EAAE,EAAE,EAAL;AAASC,MAAAA,EAAE,EAAE;AAAb;AAdf,GAjEiB,EAiFjB;AACIjB,IAAAA,IAAI,EAAEtH,aAAa,CAACuH,SADxB;AAEIC,IAAAA,EAAE,EAAE,aAFR;AAGIC,IAAAA,IAAI,EAAE,aAHV;AAIIpE,IAAAA,KAAK,2BAAE6B,kBAAkB,CAACtB,WAArB,0DAAE,sBAAgCP,KAJ3C;AAKIqE,IAAAA,KAAK,4BAAExC,kBAAkB,CAACtB,WAArB,2DAAE,uBAAgCN,OAL3C;AAMIrD,IAAAA,QAAQ,4BAAEiF,kBAAkB,CAACtB,WAArB,2DAAE,uBAAgC+D,UAN9C;AAOIC,IAAAA,QAAQ,EAAE5C,QAPd;AAQI6C,IAAAA,KAAK,EAAExF,CAAC,CAAC,mBAAD,CARZ;AASIkB,IAAAA,UAAU,4BAAE2B,kBAAkB,CAACtB,WAArB,2DAAE,uBAAgCL,UAThD;AAUIuE,IAAAA,QAAQ,EAAE,kBAACC,CAAD;AAAA,aAAOC,0BAA0B,CAACD,CAAD,CAAjC;AAAA,KAVd;AAWIE,IAAAA,MAAM,EAAE,gBAACF,CAAD;AAAA,aAAOG,wBAAwB,CAACH,CAAD,CAA/B;AAAA,KAXZ;AAYII,IAAAA,OAAO,EAAErG,OAZb;AAaIsG,IAAAA,SAAS,EAAE,IAbf;AAcIC,IAAAA,SAAS,EAAE;AAACC,MAAAA,EAAE,EAAE,EAAL;AAASC,MAAAA,EAAE,EAAE;AAAb;AAdf,GAjFiB,CAArB;AAmGA,MAAMM,qBAAqB,GAAG,CAC1B;AACIC,IAAAA,KAAK,EACD,MAAC,MAAD;AACI,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAE,CAAV;AAAaC,QAAAA,QAAQ,EAAE,EAAvB;AAA2BC,QAAAA,QAAQ,EAAE;AAArC,OADX;AAEI,MAAA,QAAQ,MAFZ;AAGI,MAAA,KAAK,EAAE,SAHX;AAII,MAAA,OAAO,EAAE,MAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMI,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CAFR;AAWIC,IAAAA,MAAM,EAAE,gBAAAlH,KAAK;AAAA,aACT,MAAC,eAAD;AAAiB,QAAA,QAAQ,EAAE,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,UAAD;AAAY,QAAA,OAAO,EAAC,SAApB;AAA8B,QAAA,OAAO,EAAC,8BAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,UAAC4E,UAAD;AAAA,eACG,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,MAAC,MAAD;AACI,UAAA,KAAK,EAAE;AAACmC,YAAAA,OAAO,EAAE,CAAV;AAAaC,YAAAA,QAAQ,EAAE,EAAvB;AAA2BC,YAAAA,QAAQ,EAAE;AAArC,WADX;AAEI,UAAA,KAAK,EAAE,SAFX;AAGI,UAAA,OAAO,EAAE;AAHb,WAIQlI,WAAW,CAAC6F,UAAD,CAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAMI,MAAC,YAAD;AAAc,UAAA,IAAI,EAAE,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANJ,CADJ,EASI,MAAC,IAAD;AACI,UAAA,YAAY,EAAE;AACVuC,YAAAA,QAAQ,EAAE,QADA;AAEVC,YAAAA,UAAU,EAAE;AAFF,WADlB;AAKI,UAAA,eAAe,EAAE;AACbD,YAAAA,QAAQ,EAAE,KADG;AAEbC,YAAAA,UAAU,EAAE;AAFC,WALrB;AASI,UAAA,kBAAkB,EAAE;AATxB,WAUQtI,QAAQ,CAAC8F,UAAD,CAVhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAYI,MAAC,QAAD;AACI,UAAA,OAAO,EAAE,mBAAM;AACXrC,YAAAA,6BAA6B,CAACvC,KAAD,CAA7B;AACAyC,YAAAA,cAAc,CAAC,CAAAzC,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEqH,GAAP,KAAc,KAAf,CAAd;AACAC,YAAAA,mBAAmB,CAACtH,KAAD,CAAnB;AACA4E,YAAAA,UAAU,CAAC2C,KAAX;AACH,WANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAQK,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UARL,EASI,MAAC,UAAD;AAAY,UAAA,KAAK,EAAE;AAACC,YAAAA,WAAW,EAAE;AAAd,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA0CnH,CAAC,CAAC,UAAD,CAA3C,CATJ,CAZJ,EAuBI,MAAC,QAAD;AACI,UAAA,OAAO,EAAE;AAAA,mBAAMoH,gBAAgB,CAACzH,KAAK,CAACqH,GAAP,CAAtB;AAAA,WADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAGI,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHJ,EAII,MAAC,UAAD;AAAY,UAAA,KAAK,EAAE;AAACG,YAAAA,WAAW,EAAE;AAAd,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA0CnH,CAAC,CAAC,YAAD,CAA3C,CAJJ,CAvBJ,CATJ,CADH;AAAA,OADL,CADJ,CADS;AAAA;AAXjB,GAD0B,EA6D1B;AACIyG,IAAAA,KAAK,EAAEzG,CAAC,CAAC,aAAD,CADZ;AAEIqH,IAAAA,KAAK,EAAE,SAFX;AAGIR,IAAAA,MAAM,EAAE,gBAAClH,KAAD;AAAA,aAAW,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkBA,KAAlB,aAAkBA,KAAlB,uBAAkBA,KAAK,CAAEoB,OAAzB,CAAX;AAAA;AAHZ,GA7D0B,EAkE1B;AACI0F,IAAAA,KAAK,EAAEzG,CAAC,CAAC,eAAD,CADZ;AAEIqH,IAAAA,KAAK,EAAE,WAFX;AAGIR,IAAAA,MAAM,EAAE,gBAAClH,KAAD;AAAA,aAAW,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkBA,KAAlB,aAAkBA,KAAlB,uBAAkBA,KAAK,CAAEwB,SAAzB,CAAX;AAAA;AAHZ,GAlE0B,EAuE1B;AACIsF,IAAAA,KAAK,EAAEzG,CAAC,CAAC,aAAD,CADZ;AAEIqH,IAAAA,KAAK,EAAE,SAFX;AAGIR,IAAAA,MAAM,EAAE,gBAAClH,KAAD;AAAA,aAAW,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkBA,KAAlB,aAAkBA,KAAlB,uBAAkBA,KAAK,CAAEyB,OAAzB,CAAX;AAAA;AAHZ,GAvE0B,EA4E1B;AACIqF,IAAAA,KAAK,EAAEzG,CAAC,CAAC,aAAD,CADZ;AAEIqH,IAAAA,KAAK,EAAE,SAFX;AAGIR,IAAAA,MAAM,EAAE,gBAAClH,KAAD;AAAA,aAAW,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkBA,KAAlB,aAAkBA,KAAlB,uBAAkBA,KAAK,CAAE0B,OAAzB,CAAX;AAAA;AAHZ,GA5E0B,EAiF1B;AACIoF,IAAAA,KAAK,EAAEzG,CAAC,CAAC,gBAAD,CADZ;AAEIqH,IAAAA,KAAK,EAAE,YAFX;AAGIR,IAAAA,MAAM,EAAE,gBAAClH,KAAD;AAAA,aACJ,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkBA,KAAlB,aAAkBA,KAAlB,uBAAkBA,KAAK,CAAE2B,UAAzB,OAAsCtC,qBAAqB,CAAC,CAAAW,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAE2H,YAAP,KAAuB,IAAxB,CAA3D,CADI;AAAA;AAHZ,GAjF0B,EAuF1B;AACIb,IAAAA,KAAK,EAAEzG,CAAC,CAAC,mBAAD,CADZ;AAEIqH,IAAAA,KAAK,EAAE,aAFX;AAGIR,IAAAA,MAAM,EAAE,gBAAClH,KAAD;AAAA,aAAW,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkBA,KAAlB,aAAkBA,KAAlB,uBAAkBA,KAAK,CAAE4B,WAAzB,CAAX;AAAA;AAHZ,GAvF0B,EA4F1B;AACIkF,IAAAA,KAAK,EAAEzG,CAAC,CAAC,aAAD,CADZ;AAEIqH,IAAAA,KAAK,EAAE,WAFX;AAGIR,IAAAA,MAAM,EAAE,gBAAAlH,KAAK;AAAA,aAELA,KAAK,SAAL,IAAAA,KAAK,WAAL,IAAAA,KAAK,CAAE6B,SAAP,GAEQ,MAAC,UAAD;AAAY,QAAA,OAAO,EAAC,SAApB;AAA8B,QAAA,OAAO,EAAC,aAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,UAAC+C,UAAD;AAAA,eACG,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,MAAC,QAAD;AACI,UAAA,OAAO,EAAE,mBAAM;AACXX,YAAAA,oBAAoB,CAAC,IAAD,CAApB;AACA2D,YAAAA,iBAAiB,CAAC5H,KAAK,CAACkB,GAAP,EAAY,cAAZ,CAAjB;AACH,WAJL;AAKI,UAAA,QAAQ,EAAEsD,cAAc,IAAIE,iBALhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAOI,MAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPJ,CADJ,CADH;AAAA,OADL,CAFR,GAiBQ,IAnBH;AAAA;AAHjB,GA5F0B,EAsH1B;AACIoC,IAAAA,KAAK,EAAEzG,CAAC,CAAC,cAAD,CADZ;AAEIqH,IAAAA,KAAK,EAAE,WAFX;AAGIR,IAAAA,MAAM,EAAE,gBAAAlH,KAAK;AAAA,aAELA,KAAK,SAAL,IAAAA,KAAK,WAAL,IAAAA,KAAK,CAAE6B,SAAP,GAEQ,MAAC,UAAD;AAAY,QAAA,OAAO,EAAC,SAApB;AAA8B,QAAA,OAAO,EAAC,aAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,UAAC+C,UAAD;AAAA,eACG,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEQ,CAAAI,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAE6C,IAAd,KACI,MAAC,QAAD;AACI,UAAA,OAAO,EAAE,mBAAM;AACXhF,YAAAA,oBAAoB,CAAC,IAAD,CAApB;AACAkC,YAAAA,iBAAiB,CAAC/E,KAAD,CAAjB;AACA6E,YAAAA,aAAa,CAACD,UAAD,CAAb;AACH,WALL;AAMI,UAAA,QAAQ,EAAEJ,cAAc,IAAIE,iBANhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAQKF,cAAc,GAAG,MAAC,cAAD;AAAgB,UAAA,IAAI,EAAE,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAH,GACX,MAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UATR,EAUI,MAAC,UAAD;AACI,UAAA,KAAK,EAAE;AAACgD,YAAAA,WAAW,EAAE;AAAd,WADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACkCnH,CAAC,CAAC,YAAD,CADnC,CAVJ,CAHZ,EAkBI,MAAC,QAAD;AACI,UAAA,OAAO,EAAE;AAAA,mBAAMyH,sBAAsB,CAAC9H,KAAK,CAACkB,GAAP,EAAY,cAAZ,EAA4BlB,KAAK,CAAC+H,WAAlC,CAA5B;AAAA,WADb;AAEI,UAAA,QAAQ,EAAEvD,cAAc,IAAIE,iBAFhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIKA,iBAAiB,GAAG,MAAC,cAAD;AAAgB,UAAA,IAAI,EAAE,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAH,GACd,MAAC,yBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALR,CAlBJ,CADH;AAAA,OADL,CAFR,GAgCQ,IAlCH;AAAA;AAHjB,GAtH0B,CAA9B;AAiKArI,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIkE,KAAK,IAAIN,KAAb,EAAoB;AAChB+H,MAAAA,qBAAqB;AACxB;AACJ,GAJQ,EAIN,EAJM,CAAT;AAMA3L,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAI4L,QAAQ,GAAG,IAAf;;AACA,QAAIA,QAAQ,IAAI/E,kBAAZ,IAAkCR,OAAtC,EAA+C;AAC3C,UAAMwF,qBAAqB,GAAG7J,MAAM,CAAC8J,YAAP,CAAoBjF,kBAApB,EAAwCR,OAAxC,EAAiD,CAAC,SAAD,CAAjD,CAA9B;AACAS,MAAAA,qBAAqB,CAAC+E,qBAAD,CAArB;AACA7E,MAAAA,yBAAyB,CAAC6E,qBAAD,CAAzB;AACA3E,MAAAA,qBAAqB,CAAC,IAAD,CAArB;AACH;;AAGD,WAAO,YAAM;AACT0E,MAAAA,QAAQ,GAAG,KAAX;AACH,KAFD;AAIH,GAdQ,EAcN,CAACvF,OAAD,CAdM,CAAT;;AAgBA,MAAM+E,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACJ,GAAD,EAAS;AAC9B5D,IAAAA,aAAa,CAAC,IAAD,CAAb;AACA9G,IAAAA,MAAM,CAAC;AACHyL,MAAAA,MAAM,EAAEjI,gBAAgB,CAACkI,SADtB;AAEHC,MAAAA,QAAQ,EAAErL,cAAc,CAACsL,OAFtB;AAGHhI,MAAAA,KAAK,EAALA,KAHG;AAIH8G,MAAAA,GAAG,EAAEA,GAJF;AAKHmB,MAAAA,MAAM,EAAE;AACJC,QAAAA,UAAU,EAAEtI,gBAAgB,CAACa;AADzB;AALL,KAAD,CAAN,CAQG0H,IARH,CAQQ,UAACC,GAAD,EAAS;AACb,UAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACpBZ,QAAAA,qBAAqB;AACxB,OAFD,MAEO;AAAA;;AACH,YAAMtC,KAAK,GAAG3I,UAAU,CAAC4L,GAAD,CAAxB;AACAzI,QAAAA,eAAe,CAAC,oBAAAwF,KAAK,CAACmD,QAAN,oEAAgBC,MAAhB,IAAyB,EAAzB,uBAA8BpD,KAAK,CAACmD,QAApC,qDAA8B,iBAAgBE,SAAhB,CAA0B,CAA1B,EAA6B,EAA7B,CAA9B,GAAiErD,KAAK,CAACmD,QAAxE,EAAkF;AAAC1C,UAAAA,OAAO,EAAE;AAAV,SAAlF,CAAf;AACA1C,QAAAA,aAAa,CAAC,KAAD,CAAb;AACH;AACJ,KAhBD;AAiBH,GAnBD;;AAqBA,MAAMuE,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAM;AAChCjG,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAtF,IAAAA,QAAQ,CAAC;AACL2L,MAAAA,MAAM,EAAEjI,gBAAgB,CAACkI,SADpB;AAELC,MAAAA,QAAQ,EAAErL,cAAc,CAACsL,OAFpB;AAGLhI,MAAAA,KAAK,EAALA,KAHK;AAILiI,MAAAA,MAAM,EAAE;AACJQ,QAAAA,KAAK,kBAAW/I,KAAX,CADD;AAEJgJ,QAAAA,SAAS,EAAEjH,SAFP;AAGJyG,QAAAA,UAAU,EAAE5H;AAHR;AAJH,KAAD,CAAR,CASG6H,IATH,CASQ,UAAAC,GAAG,EAAI;AACX5G,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;;AACA,UAAI4G,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACpB,YAAID,GAAG,CAACO,IAAJ,CAASC,KAAT,GAAiB,CAArB,EAAwB;AACpBhH,UAAAA,qBAAqB,CAACwG,GAAG,CAACO,IAAJ,CAASA,IAAV,CAArB;AACH;AACJ,OAJD,MAIO;AAAA;;AACH,YAAMxD,KAAK,GAAG3I,UAAU,CAAC4L,GAAD,CAAxB;AACAzI,QAAAA,eAAe,CAAC,qBAAAwF,KAAK,CAACmD,QAAN,sEAAgBC,MAAhB,IAAyB,EAAzB,uBAA8BpD,KAAK,CAACmD,QAApC,qDAA8B,iBAAgBE,SAAhB,CAA0B,CAA1B,EAA6B,EAA7B,CAA9B,GAAiErD,KAAK,CAACmD,QAAxE,EAAkF;AAAC1C,UAAAA,OAAO,EAAE;AAAV,SAAlF,CAAf;AACH;AACJ,KAnBD;AAoBH,GAtBD;;AAwBA,MAAMiD,+BAA+B,GAAG,SAAlCA,+BAAkC,CAACC,sBAAD,EAA4B;AAChE,QAAIA,sBAAJ,EAA4B;AACxBtG,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAvG,MAAAA,QAAQ,CAAC;AACL4L,QAAAA,MAAM,EAAEjI,gBAAgB,CAACkI,SADpB;AAELC,QAAAA,QAAQ,EAAErL,cAAc,CAACsL,OAAf,GAAyB1K,KAAzB,GAAiCZ,cAAc,CAACqM,IAAhD,GAAuDzL,KAAvD,GAA+D,KAA/D,GAAuEA,KAAvE,GAA+EwL,sBAAsB,CAAChC,GAF3G;AAGL9G,QAAAA,KAAK,EAALA;AAHK,OAAD,CAAR,CAIGmI,IAJH,CAIQ,UAAAC,GAAG,EAAI;AACX5F,QAAAA,QAAQ,CAAC,KAAD,CAAR;;AACA,YAAI4F,GAAG,CAACC,MAAJ,KAAe,GAAf,IAAsBD,GAAG,CAACO,IAAJ,CAASA,IAAnC,EAAyC;AACrC,cAAMA,IAAI,GAAGP,GAAG,CAACO,IAAJ,CAASA,IAAtB;AACAvG,UAAAA,UAAU,CAACuG,IAAD,CAAV;AAEH;AACJ,OAXD;AAYH;AACJ,GAhBD;;AAkBA,MAAMK,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC1BxG,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAvG,IAAAA,QAAQ,CAAC;AACL4L,MAAAA,MAAM,EAAEjI,gBAAgB,CAACkI,SADpB;AAELC,MAAAA,QAAQ,EAAErL,cAAc,CAACsL,OAAf,GAAyB1K,KAAzB,GAAiCZ,cAAc,CAACuM,GAFrD;AAGLjJ,MAAAA,KAAK,EAALA,KAHK;AAILiI,MAAAA,MAAM,EAAE;AACJC,QAAAA,UAAU,EAAE5H;AADR;AAJH,KAAD,CAAR,CAOG6H,IAPH,CAOQ,UAAAC,GAAG,EAAI;AACX,UAAIA,GAAG,CAACC,MAAJ,KAAe,GAAf,IAAsBD,GAAG,CAACO,IAAJ,CAASC,KAAT,GAAiB,CAA3C,EAA8C;AAC1C,YAAMD,IAAI,GAAGO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBf,GAAG,CAACO,IAAJ,CAASA,IAA3B,EAAiChG,kBAAjC,CAAb;AACAC,QAAAA,qBAAqB,CAAC+F,IAAD,CAArB;AACA7F,QAAAA,yBAAyB,CAAC6F,IAAD,CAAzB;AACH;;AACDnG,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACH,KAdD;AAeH,GAjBD;;AAmBA,MAAM4G,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrB,QAAMT,IAAI,qBAAOhG,kBAAP,CAAV;;AAEAuG,IAAAA,MAAM,CAACG,IAAP,CAAYzI,YAAZ,EAA0B0I,GAA1B,CAA8B,UAACC,GAAD,EAAS;AACnCZ,MAAAA,IAAI,CAACY,GAAD,CAAJ,GAAY,OAAOZ,IAAI,CAACY,GAAD,CAAJ,CAAUzI,KAAjB,KAA2B,QAA3B,GAAsC6H,IAAI,CAACY,GAAD,CAAJ,CAAUzI,KAAV,GAAkB6H,IAAI,CAACY,GAAD,CAAJ,CAAUzI,KAAV,CAAgBmE,EAAlC,GAAuC,IAA7E,GAAoF0D,IAAI,CAACY,GAAD,CAAJ,CAAUzI,KAA1G;AACH,KAFD;;AAGA,QAAIpB,KAAJ,EAAW;AACPgD,MAAAA,WAAW,CAAC,IAAD,CAAX;;AACA,UAAIT,WAAJ,EAAiB;AACb9F,QAAAA,KAAK,CAAC;AACF0L,UAAAA,MAAM,EAAEjI,gBAAgB,CAACkI,SADvB;AAEFC,UAAAA,QAAQ,EAAErL,cAAc,CAACsL,OAFvB;AAGFlB,UAAAA,GAAG,EAAE7E,WAHH;AAIF0G,UAAAA,IAAI,EAAEA,IAJJ;AAKF3I,UAAAA,KAAK,EAALA;AALE,SAAD,CAAL,CAMGmI,IANH,CAMQ,UAAAC,GAAG,EAAI;AACX,cAAIzD,IAAJ,EAAU;AACNtI,YAAAA,MAAM,CAAC;AACHwL,cAAAA,MAAM,EAAEjI,gBAAgB,CAACkI,SADtB;AAEH9H,cAAAA,KAAK,EAAEA,KAFJ;AAGHiI,cAAAA,MAAM,EAAE;AACJuB,gBAAAA,QAAQ,EAAEpB,GAAG,CAACO,IAAJ,CAASA,IAAT,CAAchI,GADpB;AAEJ8I,gBAAAA,IAAI,EAAE,cAFF;AAGJC,gBAAAA,SAAS,EAAE,IAHP;AAIJxB,gBAAAA,UAAU,EAAE5H;AAJR,eAHL;AASHqJ,cAAAA,KAAK,EAAE,CAAChF,IAAD;AATJ,aAAD,CAAN;AAWH;;AACD,cAAIyD,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACpB1I,YAAAA,eAAe,CAACG,CAAC,CAAC,kCAAD,CAAF,EAAwC;AAAC8F,cAAAA,OAAO,EAAE;AAAV,aAAxC,CAAf;AACA9D,YAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACA2F,YAAAA,qBAAqB;AACrBmC,YAAAA,WAAW;AACd,WALD,MAKO;AACH,gBAAMzE,KAAK,GAAG3I,UAAU,CAAC4L,GAAD,CAAxB;AACAzI,YAAAA,eAAe,CAACwF,KAAK,CAACmD,QAAP,EAAiB;AAAC1C,cAAAA,OAAO,EAAE;AAAV,aAAjB,CAAf;AACH;;AACDlD,UAAAA,WAAW,CAAC,KAAD,CAAX;AACH,SA9BD;AA+BH,OAhCD,MAgCO;AACHiG,QAAAA,IAAI,CAACkB,KAAL,GAAanK,KAAb;AACAiJ,QAAAA,IAAI,CAACT,UAAL,GAAkB5H,UAAlB;AACAtE,QAAAA,MAAM,CAAC;AACH6L,UAAAA,MAAM,EAAEjI,gBAAgB,CAACkI,SADtB;AAEHC,UAAAA,QAAQ,EAAErL,cAAc,CAACsL,OAFtB;AAGHhI,UAAAA,KAAK,EAALA,KAHG;AAIH2I,UAAAA,IAAI,EAAEA;AAJH,SAAD,CAAN,CAKGR,IALH;AAAA,8EAKQ,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACJ,wBAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACpB,0BAAI1D,IAAJ,EAAU;AACNtI,wBAAAA,MAAM,CAAC;AACHwL,0BAAAA,MAAM,EAAEjI,gBAAgB,CAACkI,SADtB;AAEH9H,0BAAAA,KAAK,EAAEA,KAFJ;AAGHiI,0BAAAA,MAAM,EAAE;AACJuB,4BAAAA,QAAQ,EAAEpB,GAAG,CAACO,IAAJ,CAASA,IAAT,CAAchI,GADpB;AAEJ8I,4BAAAA,IAAI,EAAE,cAFF;AAGJC,4BAAAA,SAAS,EAAE,IAHP;AAIJxB,4BAAAA,UAAU,EAAE5H;AAJR,2BAHL;AASHqJ,0BAAAA,KAAK,EAAE,CAAChF,IAAD;AATJ,yBAAD,CAAN;AAWH;;AACDhF,sBAAAA,eAAe,CAACG,CAAC,CAAC,kCAAD,CAAF,EAAwC;AAAC8F,wBAAAA,OAAO,EAAE;AAAV,uBAAxC,CAAf;AACA9D,sBAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACA2F,sBAAAA,qBAAqB;AACrBmC,sBAAAA,WAAW;AACd,qBAlBD,MAkBO;AACGzE,sBAAAA,KADH,GACW3I,UAAU,CAAC4L,GAAD,CADrB;AAEHzI,sBAAAA,eAAe,CAACwF,KAAK,CAACmD,QAAP,EAAiB;AAAC1C,wBAAAA,OAAO,EAAE;AAAV,uBAAjB,CAAf;AACH;;AACDlD,oBAAAA,WAAW,CAAC,KAAD,CAAX;;AAvBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WALR;;AAAA;AAAA;AAAA;AAAA;AA8BH;AACJ;AACJ,GA3ED;;AA6EA,MAAM2D,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACvF,KAAD,EAAQoE,IAAR,EAAiB;AAC9CtC,IAAAA,qBAAqB,iCACdD,kBADc,2BAEhBuC,IAFgB,kCAGVvC,kBAAkB,CAACuC,IAAD,CAHR;AAIbpE,MAAAA,KAAK,EAAEA,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEgJ;AAJD,SAArB;AAOH,GARD;;AAUA,MAAMrE,0BAA0B,GAAG,SAA7BA,0BAA6B,CAACsE,KAAD,EAAQR,GAAR,EAAaS,QAAb,EAA0B;AACzD,QAAM9E,IAAI,GAAGqE,GAAG,GAAGA,GAAH,GAASQ,KAAK,CAACE,MAAN,CAAa/E,IAAtC;AACA,QAAMpE,KAAK,GAAGiJ,KAAK,SAAL,IAAAA,KAAK,WAAL,IAAAA,KAAK,CAAEE,MAAP,GAAgBF,KAAK,CAACE,MAAN,CAAanJ,KAA7B,GAAqCiJ,KAAnD;;AAEA,QAAIC,QAAJ,EAAc;AAAA;;AACVpH,MAAAA,qBAAqB,iCACdD,kBADc,2BAEhBuC,IAFgB,kCAGVvC,kBAAkB,CAACuC,IAAD,CAHR;AAIbnE,QAAAA,OAAO,EAAE,0BAAA4B,kBAAkB,CAACuC,IAAD,CAAlB,gFAA0BE,UAA1B,KAAwC,CAAC,CAAC1H,QAAQ,CAACoD,KAAD,CAJ9C;AAKbE,QAAAA,UAAU,EAAE,2BAAA2B,kBAAkB,CAACuC,IAAD,CAAlB,kFAA0BE,UAA1B,KAAwC,CAAC,CAAC1H,QAAQ,CAACoD,KAAD,CAAlD,IAA6DhB,CAAC,CAAC,eAAD;AAL7D,WAArB;AAQH,KATD,MASO;AAAA;;AACH8C,MAAAA,qBAAqB,iCACdD,kBADc,2BAEhBuC,IAFgB,kCAGVvC,kBAAkB,CAACuC,IAAD,CAHR;AAIbpE,QAAAA,KAAK,EAAEoE,IAAI,KAAK,WAAT,IAAwBA,IAAI,KAAK,SAAjC,GAA6CtG,MAAM,CAACkC,KAAD,CAAN,CAAcoJ,MAAd,CAAqBxN,cAAc,CAACyN,UAApC,CAA7C,GAA+FrJ,KAJzF;AAKbC,QAAAA,OAAO,EAAE,2BAAA4B,kBAAkB,CAACuC,IAAD,CAAlB,kFAA0BE,UAA1B,KAAwC,CAAC,CAAC1H,QAAQ,CAACoD,KAAD,CAL9C;AAMbE,QAAAA,UAAU,EAAE,2BAAA2B,kBAAkB,CAACuC,IAAD,CAAlB,kFAA0BE,UAA1B,KAAwC,CAAC,CAAC1H,QAAQ,CAACoD,KAAD,CAAlD,IAA6DhB,CAAC,CAAC,eAAD;AAN7D,WAArB;AASH;AACJ,GAxBD;;AA0BA,MAAM6F,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACoE,KAAD,EAAQR,GAAR,EAAgB;AAC7C9D,IAAAA,0BAA0B,CAACsE,KAAD,EAAQR,GAAR,EAAa,IAAb,CAA1B;AACH,GAFD;;AAIA,MAAMxC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAoC;AAAA,QAAnC+B,sBAAmC,uEAAV,KAAU;;AAC5D,QAAIA,sBAAJ,EAA4B;AACxBD,MAAAA,+BAA+B,CAACC,sBAAD,CAA/B;AACH,KAFD,MAEO;AACHE,MAAAA,eAAe;AAClB;;AACDlH,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH,GAPD;;AASA,MAAMsI,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC5B,QAAIC,IAAI,CAACC,SAAL,CAAe3H,kBAAf,MAAuC0H,IAAI,CAACC,SAAL,CAAezH,sBAAf,CAA3C,EAAmF;AAC/EP,MAAAA,oBAAoB,CAAC,IAAD,CAApB;AACH,KAFD,MAEO;AACHR,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACA8H,MAAAA,WAAW;AACd;AACJ,GAPD;;AAUA,MAAMA,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtBW,IAAAA,UAAU,CAAC,YAAM;AACbvH,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACAZ,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAQ,MAAAA,qBAAqB,CAAChC,YAAD,CAArB;AACAkC,MAAAA,yBAAyB,CAAClC,YAAD,CAAzB;AACAoB,MAAAA,6BAA6B,CAAC,IAAD,CAA7B;AACAE,MAAAA,cAAc,CAAC,IAAD,CAAd;AACA8B,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAF,MAAAA,WAAW,CAAC,EAAD,CAAX;AACH,KATS,EASP,GATO,CAAV;AAUH,GAXD;;AAaA,MAAMuD,iBAAiB,GAAG,SAApBA,iBAAoB,CAAC1G,GAAD,EAAM8I,IAAN,EAAe;AACrC7F,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACAvE,IAAAA,KAAK,CAAC;AACFmL,MAAAA,GAAG,YAAK5K,gBAAgB,CAACkI,SAAtB,yBADD;AAEF2C,MAAAA,OAAO,EAAE;AACL,0CAA2BzK,KAA3B;AADK,OAFP;AAKF0K,MAAAA,MAAM,EAAE,KALN;AAMFC,MAAAA,YAAY,EAAE,aANZ;AAOF1C,MAAAA,MAAM,EAAE;AACJtH,QAAAA,GAAG,EAAEA,GADD;AAEJ8I,QAAAA,IAAI,EAAEA,IAFF;AAGJvB,QAAAA,UAAU,EAAEtI,gBAAgB,CAACa;AAHzB;AAPN,KAAD,CAAL,CAYG0H,IAZH,CAYQ,UAACyC,CAAD,EAAO;AACX,UAAIA,CAAC,CAACvC,MAAF,KAAa,GAAjB,EAAsB;AAClB,YAAIwC,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACF,CAAC,CAACjC,IAAH,CAAT,EAAmB;AAAC5D,UAAAA,IAAI,EAAE6F,CAAC,CAACjC,IAAF,CAAO5D;AAAd,SAAnB,CAAX;AAAA,YACMyF,GAAG,GAAGO,GAAG,CAACC,eAAJ,CAAoBH,IAApB,CADZ;AAGA/G,QAAAA,WAAW,CAAC0G,GAAD,CAAX;AACA5G,QAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACH;AACJ,KApBD;AAqBH,GAvBD;;AAyBA,MAAM2D,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAC5G,GAAD,EAAM8I,IAAN,EAAYjC,WAAZ,EAA4B;AACvDnI,IAAAA,KAAK,CAAC;AACFmL,MAAAA,GAAG,YAAK5K,gBAAgB,CAACkI,SAAtB,yBADD;AAEF2C,MAAAA,OAAO,EAAE;AACL,0CAA2BzK,KAA3B;AADK,OAFP;AAKF0K,MAAAA,MAAM,EAAE,KALN;AAMFC,MAAAA,YAAY,EAAE,MANZ;AAOF1C,MAAAA,MAAM,EAAE;AACJtH,QAAAA,GAAG,EAAEA,GADD;AAEJ8I,QAAAA,IAAI,EAAEA,IAFF;AAGJvB,QAAAA,UAAU,EAAEtI,gBAAgB,CAACa;AAHzB;AAPN,KAAD,CAAL,CAYG0H,IAZH,CAYQ,UAACyC,CAAD,EAAO;AACX,UAAIA,CAAC,CAACvC,MAAF,KAAa,GAAjB,EAAsB;AAClB,YAAIwC,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACF,CAAC,CAACjC,IAAH,CAAT,EAAmB;AAAC5D,UAAAA,IAAI,EAAE6F,CAAC,CAACjC,IAAF,CAAO5D;AAAd,SAAnB,CAAX;AAAA,YACMyF,GAAG,GAAGO,GAAG,CAACC,eAAJ,CAAoBH,IAApB,CADZ;AAAA,YAEMI,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAFb;AAIAF,QAAAA,IAAI,CAACG,IAAL,GAAYZ,GAAZ;AACAS,QAAAA,IAAI,CAACI,YAAL,CAAkB,UAAlB,EAA8B,UAAG7D,WAAH,EAAiB8D,WAAjB,EAA9B,EANkB,CAM4C;;AAC9DJ,QAAAA,QAAQ,CAACK,IAAT,CAAcC,WAAd,CAA0BP,IAA1B;AACAA,QAAAA,IAAI,CAACQ,KAAL;AACAR,QAAAA,IAAI,CAACS,MAAL;AACH;AACJ,KAxBD;AAyBH,GA1BD;;AA4BA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,EAAE,EAAE,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,EAAE,EAAE,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,aAAD;AAAe,IAAA,KAAK,EAAE5L,CAAC,CAAC,aAAD,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AACI,IAAA,OAAO,EAAE;AAAA,aAAM2H,qBAAqB,EAA3B;AAAA,KADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,MAAC,UAAD;AAAY,IAAA,KAAK,EAAE;AAACkE,MAAAA,KAAK,EAAE;AAAR,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ,CADJ,CADJ,EAUI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,EAAE,EAAE,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,aAAD;AAAe,IAAA,KAAK,EAAE7L,CAAC,CAAC,SAAD,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AACI,IAAA,OAAO,EAAE;AAAA,aAAMiH,mBAAmB,CAAC,KAAD,CAAzB;AAAA,KADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ,CADJ,CAVJ,CADJ,CADJ,EAuBI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,aAAD;AACI,IAAA,SAAS,EAAExF,aADf;AAEI,IAAA,OAAO,EAAE+E,qBAFb;AAGI,IAAA,IAAI,EAAE3E,kBAHV;AAII,IAAA,YAAY,EAAE5B,iBAJlB;AAKI,IAAA,OAAO,EAAE;AACL6L,MAAAA,WAAW,EAAE;AACTC,QAAAA,MAAM,EAAE,SADC;AAETC,QAAAA,UAAU,EAAE,MAFH;AAGTC,QAAAA,QAAQ,EAAE,MAHD;AAITJ,QAAAA,KAAK,EAAE,SAJE;AAKTK,QAAAA,aAAa,EAAE,WALN;AAMTC,QAAAA,eAAe,EAAE,SANR;AAOTC,QAAAA,UAAU,EAAE,QAPH;AAQTC,QAAAA,UAAU,EAAE;AARH,OADR;AAWLC,MAAAA,SAAS,EAAE;AACPF,QAAAA,UAAU,EAAE,QADL;AAEPC,QAAAA,UAAU,EAAE,kCAFL;AAGPJ,QAAAA,QAAQ,EAAE;AAHH,OAXN;AAgBLM,MAAAA,OAAO,EAAE,KAhBJ;AAiBLC,MAAAA,SAAS,EAAE,KAjBN;AAkBLC,MAAAA,OAAO,EAAE,KAlBJ;AAmBLC,MAAAA,MAAM,EAAE,KAnBH;AAoBLC,MAAAA,kBAAkB,EAAE,CApBf;AAqBLC,MAAAA,oBAAoB,EAAE;AArBjB,KALb;AA4BI,IAAA,UAAU,EAAE;AACRC,MAAAA,MAAM,EAAE,gBAAClN,KAAD,EAAW;AACf,YAAMmN,aAAa,qBAAOnN,KAAP,CAAnB;;AACAmN,QAAAA,aAAa,CAACC,SAAd,GAA0B,KAA1B;AACA,eACI,MAAC,YAAD,eAAmBD,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAGH;AAPO,KA5BhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAvBJ,CADJ,EAiEI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAE/K,aAAd;AAA6B,IAAA,mBAAmB,MAAhD;AAAiD,IAAA,QAAQ,EAAE,IAA3D;AAAiE,IAAA,SAAS,MAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,KAAK,EAAE;AAAC2E,MAAAA,OAAO,EAAE;AAAV,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AAAY,IAAA,KAAK,EAAE;AACfsF,MAAAA,UAAU,EAAE,KADG;AAEfC,MAAAA,QAAQ,EAAE;AAFK,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGIhK,0BAA0B,GAAGjC,CAAC,CAAC,cAAD,CAAJ,GAAuBA,CAAC,CAAC,uBAAD,CAHtD,CADJ,CADJ,EAQQyC,KAAK,GACD,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADC,GAKD,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQuC,YAAY,CAACwE,GAAb,CAAiB,UAACwD,IAAD,EAAOC,KAAP;AAAA,WACb,MAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,KAAX;AAAkB,MAAA,IAAI;AAAtB,OAA2BD,IAAI,CAAChH,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACKtI,kBAAkB,CAACsP,IAAD,CADvB,CADa;AAAA,GAAjB,CAFR,EAQI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,GAAD;AACI,IAAA,OAAO,EAAC,UADZ;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,OAAO,EAAEjI,UAHb;AAII,IAAA,KAAK,EAAC,SAJV;AAKI,IAAA,KAAK,EAAE;AACHiH,MAAAA,UAAU,EAAE,KADT;AAEHC,MAAAA,QAAQ,EAAE,SAFP;AAGHiB,MAAAA,YAAY,EAAE,CAHX;AAIHC,MAAAA,MAAM,EAAE;AAJL,KALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYI,MAAC,eAAD;AAAiB,IAAA,KAAK,EAAE;AAACC,MAAAA,WAAW,EAAE;AAAd,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,EAaKpN,CAAC,CAAC,YAAD,CAbN,CADJ,EAgBI,MAAC,cAAD;AACI,IAAA,IAAI,EAAEqD,oBADV;AAEI,IAAA,MAAM,EAAE,gBAACwB,IAAD,EAAU;AACdvB,MAAAA,uBAAuB,CAAC,KAAD,CAAvB;AACAwB,MAAAA,OAAO,CAACD,IAAI,CAAC,CAAD,CAAL,CAAP;AACH,KALL;AAMI,IAAA,aAAa,EAAE,CACX,YADW,EAEX,WAFW,EAGX,WAHW,EAIX,WAJW,EAKX,WALW,EAMX,iBANW,CANnB;AAcI,IAAA,YAAY,EAAE,IAdlB;AAeI,IAAA,UAAU,EAAE,CAfhB;AAgBI,IAAA,WAAW,EAAE,OAhBjB;AAiBI,IAAA,OAAO,EAAE;AAAA,aAAMvB,uBAAuB,CAAC,KAAD,CAA7B;AAAA,KAjBb;AAkBI,IAAA,gBAAgB,EAAEtD,CAAC,CAAC,UAAD,CAlBvB;AAmBI,IAAA,gBAAgB,EAAEA,CAAC,CAAC,YAAD,CAnBvB;AAoBI,IAAA,WAAW,EAAEA,CAAC,CAAC,kCAAD,CApBlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBJ,CARJ,EA+CI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,gBAAD;AACI,IAAA,QAAQ,EAAE2C,QADd;AAEI,IAAA,OAAO,EAAEA,QAFb;AAGI,IAAA,aAAa,EAAE2H,iBAHnB;AAII,IAAA,WAAW,EAAEhB,UAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CA/CJ,CAbZ,CADJ,CADJ,CAjEJ,EA6II,MAAC,iBAAD;AACI,IAAA,IAAI,EAAE3F,iBADV;AAEI,IAAA,QAAQ,EAAE,IAFd;AAGI,IAAA,SAAS,MAHb;AAII,IAAA,OAAO,EAAEE,gBAJb;AAKI,IAAA,QAAQ,EAAEI,QALd;AAMI,IAAA,GAAG,EAAEF,QANT;AAOI,IAAA,CAAC,EAAE/D,CAPP;AAQI,IAAA,OAAO,EAAE,mBAAM;AACX4D,MAAAA,oBAAoB,CAAC,KAAD,CAApB;AACA6G,MAAAA,UAAU,CAAC,YAAM;AACbX,QAAAA,WAAW;AACd,OAFS,EAEP,GAFO,CAAV;AAGH,KAbL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7IJ,EA4JI,MAAC,oBAAD;AACI,IAAA,IAAI,EAAEvH,iBADV;AAEI,IAAA,SAAS,EAAE,mBAACmD,CAAD,EAAO;AACdlD,MAAAA,oBAAoB,CAACkD,CAAD,CAApB;AACH,KAJL;AAKI,IAAA,UAAU,EAAE,oBAACA,CAAD,EAAO;AACflD,MAAAA,oBAAoB,CAACkD,CAAD,CAApB;AACA1D,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACA8H,MAAAA,WAAW;AACd,KATL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5JJ,CADJ,CADJ;AA4KH;;GAjyBQpK,c;UAMqBpC,W,EAKdG,c,EAKEhB,W,EACKA,W,EACLA,W;;;KAlBTiD,c;AAmyBT,eAAeA,cAAf","sourcesContent":["import React, {useState, useEffect, useContext} from 'react';\nimport {Insert, UseOrest, ViewList, Patch, Delete, Upload} from \"@webcms/orest\";\nimport WebCmsGlobal from \"../../../webcms-global\";\nimport {useSelector} from \"react-redux\";\nimport {isErrorMsg, mobileTelNoFormat, OREST_ENDPOINT} from \"../../../../model/orest/constants\";\nimport {\n    Grid,\n    Typography,\n    Dialog,\n    Checkbox, FormControlLabel, Button, Menu, MenuItem, IconButton\n} from \"@material-ui/core\";\nimport {useSnackbar} from \"notistack\";\nimport MaterialTableGeneric from \"../../../MaterialTableGeneric\";\nimport {SLASH} from \"../../../../model/globals\";\nimport useTranslation from \"../../../../lib/translations/hooks/useTranslation\";\nimport renderFormElements, {ELEMENT_TYPES} from \"../../../render-form-elements\";\nimport {required} from \"../../../../state/utils/form\";\nimport AddDialogActions from \"../../../AddDialogActions\";\nimport {LocaleContext} from \"../../../../lib/translations/context/LocaleContext\";\nimport LoadingSpinner from \"../../../LoadingSpinner\";\nimport {helper} from \"../../../../@webcms-globals\";\nimport TrackedChangesDialog from \"../../../TrackedChangesDialog\";\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\nimport MaterialTable, {MTableHeader} from \"material-table\";\nimport MaterialTableLocalization from \"../../../MaterialTableLocalization\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport TableColumnText from \"../../../TableColumnText\";\nimport PopupState, {bindMenu, bindTrigger} from \"material-ui-popup-state\";\nimport {CustomToolTip} from \"../../../user-portal/components/CustomToolTip/CustomToolTip\";\nimport CachedIcon from \"@material-ui/icons/Cached\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport moment from \"moment\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport getSymbolFromCurrency from \"../../../../model/currency-symbol\";\nimport Fab from \"@material-ui/core/Fab\";\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\nimport {DropzoneDialog} from \"material-ui-dropzone\";\nimport VisibilityOutlinedIcon from \"@material-ui/icons/VisibilityOutlined\";\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\nimport CloudDownloadOutlinedIcon from \"@material-ui/icons/CloudDownloadOutlined\";\nimport axios from \"axios\";\nimport MediaViewerDialog from \"../../../../@webcms-ui/core/media-viewer-dialog\";\n\nconst VARIANT = 'outlined'\n\nfunction WorkExperience(props) {\n\n    //props\n    const {empId} = props\n\n    //snackbar\n    const {enqueueSnackbar} = useSnackbar();\n\n    //context\n    const {GENERAL_SETTINGS} = useContext(WebCmsGlobal)\n    const {locale} = useContext(LocaleContext)\n    const {t} = useTranslation()\n\n    const tableLocalization = MaterialTableLocalization();\n\n    //redux state\n    const token = useSelector((state) => state?.orest?.currentUser?.auth?.access_token || false)\n    const hotelRefNo = useSelector((state) => state?.hotelinfo?.currentHotelRefNo || GENERAL_SETTINGS.HOTELREFNO || false)\n    const state = useSelector((state) => state?.orest?.state?.emp?.mid || false)\n\n    //locale state\n    const initialState = {\n        company: {value: '', isError: false, required: true, helperText: ''},\n        startdate: {value: '', isError: false, required: false, helperText: ''},\n        enddate: {value: '', isError: false, required: false, helperText: ''},\n        workpos: {value: '', isError: false, required: false, helperText: ''},\n        worksalary: {value: '', isError: false, required: false, helperText: ''},\n        leavereason: {value: '', isError: false, required: false, helperText: ''},\n        stdfileid: {value: 0, isError: false, required: false, helperText: ''},\n    }\n\n    const [isLoadingList, setIsLoadingList] = useState(false)\n    const [allHotels, setAllHotels] = useState(false)\n    const [workExperienceList, setWorkExperienceList] = useState([])\n    const [openAddDialog, setOpenAddDialog] = useState(false);\n\n    const [selectedWorkExperienceData, setSelectedWorkExperienceData] = useState(null)\n    const [selectedGid, setSelectedGid] = useState(false)\n    const [getData, setGetData] = useState(null)\n    const [openTrackedDialog, setOpenTrackedDialog] = useState(false);\n    const [isDef, setIsDef] = useState(false)\n    const [isSaving, setIsSaving] = useState(false)\n    const [workExperienceData, setWorkExperienceData] = useState(initialState)\n    const [workExperienceDataBase, setWorkExperienceDataBase] = useState(initialState)\n    const [isInitialStateLoad, setIsInitialStateLoad] = useState(false)\n    const [isDeleting, setIsDeleting] = useState(false)\n    const [workFileUploadStatus, setWorkFileUploadStatus] = useState(false)\n    const [workFileListLoading, setWorkFileListLoading] = useState(false)\n    const [workFileList, setWorkFileList] = useState([])\n    const [openPreviewDialog, setOpenPreviewDialog] = useState(false);\n    const [isPreviewLoading, setIsPreviewLoading] = useState(false);\n    const [mediaUrl, setMediaUrl] = useState('');\n    const [fileType, setFileType] = useState('');\n    const [isFileDeleting, setIsFileDeleting] = useState(false);\n    const [isFileDownloading, setIsFileDownloading] = useState(false);\n    const [popupState, setPopupState] = useState({});\n    const [deleteFileInfo, setDeleteFileInfo] = useState(false);\n    const [hasRightData, setHasRightData] = useState();\n    const [file, setFile] = useState(null)\n\n    const openDialog = () => {\n        setWorkFileUploadStatus(true)\n    }\n    const formElements = [\n        {\n            type: ELEMENT_TYPES.textField,\n            id: 'company',\n            name: 'company',\n            value: workExperienceData.company?.value,\n            error: workExperienceData.company?.isError,\n            required: workExperienceData.company?.isRequired,\n            disabled: isSaving,\n            label: t('str_company'),\n            helperText: workExperienceData.company?.helperText,\n            onChange: (e) => handleOnChangeFormElements(e),\n            onBlur: (e) => handleOnBlurFormElements(e),\n            variant: VARIANT,\n            fullWidth: true,\n            gridProps: {xs: 12, sm: 12}\n        },\n        {\n            type: ELEMENT_TYPES.datePicker,\n            id: 'startdate',\n            name: 'startdate',\n            value: workExperienceData.startdate?.value,\n            error: workExperienceData.startdate?.isError,\n            required: workExperienceData.startdate?.isRequired,\n            disabled: isSaving,\n            label: t('str_startDate'),\n            helperText: workExperienceData.startdate?.helperText,\n            onChange: (newValue, name) => handleOnChangeFormElements(newValue, name),\n            onBlur: (e) => handleOnBlurFormElements(e),\n            variant: VARIANT,\n            fullWidth: true,\n            gridProps: {xs: 12, sm: 6}\n        },\n        {\n            type: ELEMENT_TYPES.datePicker,\n            id: 'enddate',\n            name: 'enddate',\n            value: workExperienceData.enddate?.value,\n            error: workExperienceData.enddate?.isError,\n            required: workExperienceData.enddate?.isRequired,\n            disabled: isSaving,\n            label: t('str_endDate'),\n            helperText: workExperienceData.enddate?.helperText,\n            onChange: (newValue, name) => handleOnChangeFormElements(newValue, name),\n            onBlur: (e) => handleOnBlurFormElements(e),\n            variant: VARIANT,\n            fullWidth: true,\n            gridProps: {xs: 12, sm: 6}\n        },\n        {\n            type: ELEMENT_TYPES.textField,\n            id: 'workpos',\n            name: 'workpos',\n            value: workExperienceData.workpos?.value,\n            error: workExperienceData.workpos?.isError,\n            required: workExperienceData.workpos?.isRequired,\n            disabled: isSaving,\n            label: t('str_workPosition'),\n            helperText: workExperienceData.workpos?.helperText,\n            onChange: (e) => handleOnChangeFormElements(e),\n            onBlur: (e) => handleOnBlurFormElements(e),\n            variant: VARIANT,\n            fullWidth: true,\n            gridProps: {xs: 12, sm: 6}\n        },\n        {\n            type: ELEMENT_TYPES.numberFormat,\n            id: 'worksalary',\n            name: 'worksalary',\n            value: Number(workExperienceData.worksalary?.value),\n            error: workExperienceData.worksalary?.isError,\n            required: workExperienceData.worksalary?.isRequired,\n            disabled: isSaving,\n            label: t('str_workSalary'),\n            helperText: workExperienceData.worksalary?.helperText,\n            onChange: (e, name) => handleChangeNumberFormat(e, name),\n            onBlur: (e) => handleOnBlurFormElements(e),\n            variant: VARIANT,\n            fullWidth: true,\n            gridProps: {xs: 12, sm: 6}\n        },\n        {\n            type: ELEMENT_TYPES.textField,\n            id: 'leavereason',\n            name: 'leavereason',\n            value: workExperienceData.leavereason?.value,\n            error: workExperienceData.leavereason?.isError,\n            required: workExperienceData.leavereason?.isRequired,\n            disabled: isSaving,\n            label: t('str_reasonForQuit'),\n            helperText: workExperienceData.leavereason?.helperText,\n            onChange: (e) => handleOnChangeFormElements(e),\n            onBlur: (e) => handleOnBlurFormElements(e),\n            variant: VARIANT,\n            fullWidth: true,\n            gridProps: {xs: 12, sm: 12}\n        }\n    ]\n\n    const WorkExperienceColumns = [\n        {\n            title: (\n                <Button\n                    style={{padding: 0, maxWidth: 25, minWidth: 25}}\n                    disabled\n                    color={'primary'}\n                    variant={'text'}\n                >\n                    <MoreVertIcon/>\n                </Button>\n            ),\n            render: props => (\n                <TableColumnText maxWidth={20}>\n                    <PopupState variant=\"popover\" popupId=\"material-table-action-column\">\n                        {(popupState) => (\n                            <React.Fragment>\n                                <Button\n                                    style={{padding: 0, maxWidth: 25, minWidth: 25}}\n                                    color={'primary'}\n                                    variant={'contained'}\n                                    {...bindTrigger(popupState)}\n                                >\n                                    <MoreVertIcon size={'small'}/>\n                                </Button>\n                                <Menu\n                                    anchorOrigin={{\n                                        vertical: \"bottom\",\n                                        horizontal: \"left\"\n                                    }}\n                                    transformOrigin={{\n                                        vertical: \"top\",\n                                        horizontal: \"left\"\n                                    }}\n                                    getContentAnchorEl={null}\n                                    {...bindMenu(popupState)}\n                                >\n                                    <MenuItem\n                                        onClick={() => {\n                                            setSelectedWorkExperienceData(props)\n                                            setSelectedGid(props?.gid || false)\n                                            handleOpenAddDialog(props)\n                                            popupState.close();\n                                        }}\n                                    >\n                                        {<EditOutlinedIcon/>}\n                                        <Typography style={{paddingLeft: '8px'}}>{t('str_edit')}</Typography>\n                                    </MenuItem>\n                                    <MenuItem\n                                        onClick={() => handleDeleteItem(props.gid)}\n                                    >\n                                        <DeleteIcon/>\n                                        <Typography style={{paddingLeft: '8px'}}>{t('str_delete')}</Typography>\n                                    </MenuItem>\n                                </Menu>\n                            </React.Fragment>\n                        )}\n                    </PopupState>\n                </TableColumnText>\n            )\n        },\n        {\n            title: t('str_company'),\n            field: 'company',\n            render: (props) => <TableColumnText>{props?.company}</TableColumnText>\n        },\n        {\n            title: t('str_startDate'),\n            field: 'startdate',\n            render: (props) => <TableColumnText>{props?.startdate}</TableColumnText>\n        },\n        {\n            title: t('str_endDate'),\n            field: 'enddate',\n            render: (props) => <TableColumnText>{props?.enddate}</TableColumnText>\n        },\n        {\n            title: t('str_workPos'),\n            field: 'workpos',\n            render: (props) => <TableColumnText>{props?.workpos}</TableColumnText>\n        },\n        {\n            title: t('str_workSalary'),\n            field: 'worksalary',\n            render: (props) =>\n                <TableColumnText>{props?.worksalary} {getSymbolFromCurrency(props?.currencyCode || 'TL')}</TableColumnText>\n        },\n        {\n            title: t('str_reasonForQuit'),\n            field: 'leavereason',\n            render: (props) => <TableColumnText>{props?.leavereason}</TableColumnText>\n        },\n        {\n            title: t('str_preview'),\n            field: 'stdfileid',\n            render: props => (\n                (\n                    props?.stdfileid ?\n                        (\n                            <PopupState variant=\"popover\" popupId=\"status-menu\">\n                                {(popupState) => (\n                                    <React.Fragment>\n                                        <MenuItem\n                                            onClick={() => {\n                                                setOpenPreviewDialog(true);\n                                                handlePreviewFile(props.mid, 'EMPLANG.CERT')\n                                            }}\n                                            disabled={isFileDeleting || isFileDownloading}\n                                        >\n                                            <VisibilityOutlinedIcon/>\n                                        </MenuItem>\n                                    </React.Fragment>\n                                )}\n                            </PopupState>\n                        ) : null\n                )\n            ),\n        },\n        {\n            title: t('str_download'),\n            field: 'stdfileid',\n            render: props => (\n                (\n                    props?.stdfileid ?\n                        (\n                            <PopupState variant=\"popover\" popupId=\"status-menu\">\n                                {(popupState) => (\n                                    <React.Fragment>\n                                        {\n                                            hasRightData?.cand && (\n                                                <MenuItem\n                                                    onClick={() => {\n                                                        setOpenTrackedDialog(true)\n                                                        setDeleteFileInfo(props);\n                                                        setPopupState(popupState);\n                                                    }}\n                                                    disabled={isFileDeleting || isFileDownloading}\n                                                >\n                                                    {isFileDeleting ? <LoadingSpinner size={18}/> :\n                                                        <DeleteOutlinedIcon/>}\n                                                    <Typography\n                                                        style={{paddingLeft: '8px'}}>{t('str_delete')}</Typography>\n                                                </MenuItem>\n                                            )\n                                        }\n                                        <MenuItem\n                                            onClick={() => handleTaskFileDownload(props.mid, 'EMPLANG.CERT', props.description)}\n                                            disabled={isFileDeleting || isFileDownloading}\n                                        >\n                                            {isFileDownloading ? <LoadingSpinner size={18}/> :\n                                                <CloudDownloadOutlinedIcon/>}\n                                        </MenuItem>\n                                    </React.Fragment>\n                                )}\n                            </PopupState>\n                        ) : null\n                )\n            )\n        },\n    ]\n\n    useEffect(() => {\n        if (token && empId) {\n            getWorkExperienceList()\n        }\n    }, [])\n\n    useEffect(() => {\n        let isEffect = true\n        if (isEffect && workExperienceData && getData) {\n            const newClientInitialState = helper.objectMapper(workExperienceData, getData, ['company'])\n            setWorkExperienceData(newClientInitialState)\n            setWorkExperienceDataBase(newClientInitialState)\n            setIsInitialStateLoad(true)\n        }\n\n\n        return () => {\n            isEffect = false\n        }\n\n    }, [getData])\n\n    const handleDeleteItem = (gid) => {\n        setIsDeleting(true)\n        Delete({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.EMPWORK,\n            token,\n            gid: gid,\n            params: {\n                hotelrefno: GENERAL_SETTINGS.HOTELREFNO,\n            }\n        }).then((res) => {\n            if (res.status === 200) {\n                getWorkExperienceList()\n            } else {\n                const error = isErrorMsg(res)\n                enqueueSnackbar(error.errorMsg?.length > 50 ? error.errorMsg?.substring(0, 50) : error.errorMsg, {variant: 'error'})\n                setIsDeleting(false)\n            }\n        })\n    }\n\n    const getWorkExperienceList = () => {\n        setIsLoadingList(true)\n        ViewList({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.EMPWORK,\n            token,\n            params: {\n                query: `empid:${empId}`,\n                allhotels: allHotels,\n                hotelrefno: hotelRefNo\n            }\n        }).then(res => {\n            setIsLoadingList(false)\n            if (res.status === 200) {\n                if (res.data.count > 0) {\n                    setWorkExperienceList(res.data.data)\n                }\n            } else {\n                const error = isErrorMsg(res)\n                enqueueSnackbar(error.errorMsg?.length > 50 ? error.errorMsg?.substring(0, 50) : error.errorMsg, {variant: 'error'})\n            }\n        })\n    }\n\n    const handleGetSelectedWorkExperience = (selectedWorkExperience) => {\n        if (selectedWorkExperience) {\n            setIsDef(true)\n            UseOrest({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: OREST_ENDPOINT.EMPWORK + SLASH + OREST_ENDPOINT.VIEW + SLASH + 'get' + SLASH + selectedWorkExperience.gid,\n                token\n            }).then(res => {\n                setIsDef(false)\n                if (res.status === 200 && res.data.data) {\n                    const data = res.data.data\n                    setGetData(data)\n\n                }\n            })\n        }\n    }\n\n    const handleDefRecord = () => {\n        setIsDef(true)\n        UseOrest({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.EMPWORK + SLASH + OREST_ENDPOINT.DEF,\n            token,\n            params: {\n                hotelrefno: hotelRefNo\n            }\n        }).then(res => {\n            if (res.status === 200 && res.data.count > 0) {\n                const data = Object.assign({}, res.data.data, workExperienceData)\n                setWorkExperienceData(data)\n                setWorkExperienceDataBase(data)\n            }\n            setIsDef(false)\n        })\n    }\n\n    const handleSave = () => {\n        const data = {...workExperienceData}\n\n        Object.keys(initialState).map((key) => {\n            data[key] = typeof data[key].value === 'object' ? data[key].value ? data[key].value.id : null : data[key].value\n        })\n        if (empId) {\n            setIsSaving(true)\n            if (selectedGid) {\n                Patch({\n                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                    endpoint: OREST_ENDPOINT.EMPWORK,\n                    gid: selectedGid,\n                    data: data,\n                    token\n                }).then(res => {\n                    if (file) {\n                        Upload({\n                            apiUrl: GENERAL_SETTINGS.OREST_URL,\n                            token: token,\n                            params: {\n                                masterid: res.data.data.mid,\n                                code: 'EMPLANG.CERT',\n                                orsactive: true,\n                                hotelrefno: hotelRefNo\n                            },\n                            files: [file],\n                        })\n                    }\n                    if (res.status === 200) {\n                        enqueueSnackbar(t('str_processCompletedSuccessfully'), {variant: 'success'})\n                        setOpenAddDialog(false)\n                        getWorkExperienceList()\n                        handleReset()\n                    } else {\n                        const error = isErrorMsg(res)\n                        enqueueSnackbar(error.errorMsg, {variant: 'error'})\n                    }\n                    setIsSaving(false)\n                })\n            } else {\n                data.empid = empId\n                data.hotelrefno = hotelRefNo\n                Insert({\n                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                    endpoint: OREST_ENDPOINT.EMPWORK,\n                    token,\n                    data: data\n                }).then(async (res) => {\n                    if (res.status === 200) {\n                        if (file) {\n                            Upload({\n                                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                                token: token,\n                                params: {\n                                    masterid: res.data.data.mid,\n                                    code: 'EMPLANG.CERT',\n                                    orsactive: true,\n                                    hotelrefno: hotelRefNo\n                                },\n                                files: [file],\n                            })\n                        }\n                        enqueueSnackbar(t('str_processCompletedSuccessfully'), {variant: 'success'})\n                        setOpenAddDialog(false)\n                        getWorkExperienceList()\n                        handleReset()\n                    } else {\n                        const error = isErrorMsg(res)\n                        enqueueSnackbar(error.errorMsg, {variant: 'error'})\n                    }\n                    setIsSaving(false)\n                })\n            }\n        }\n    }\n\n    const handleChangeNumberFormat = (value, name) => {\n        setWorkExperienceData({\n            ...workExperienceData,\n            [name]: {\n                ...workExperienceData[name],\n                value: value?.floatValue,\n            }\n        })\n    }\n\n    const handleOnChangeFormElements = (event, key, isOnBlur) => {\n        const name = key ? key : event.target.name\n        const value = event?.target ? event.target.value : event\n\n        if (isOnBlur) {\n            setWorkExperienceData({\n                ...workExperienceData,\n                [name]: {\n                    ...workExperienceData[name],\n                    isError: workExperienceData[name]?.isRequired && !!required(value),\n                    helperText: workExperienceData[name]?.isRequired && !!required(value) && t('str_mandatory'),\n                }\n            })\n        } else {\n            setWorkExperienceData({\n                ...workExperienceData,\n                [name]: {\n                    ...workExperienceData[name],\n                    value: name === \"startdate\" || name === \"enddate\" ? moment(value).format(OREST_ENDPOINT.DATEFORMAT) : value,\n                    isError: workExperienceData[name]?.isRequired && !!required(value),\n                    helperText: workExperienceData[name]?.isRequired && !!required(value) && t('str_mandatory'),\n                }\n            })\n        }\n    }\n\n    const handleOnBlurFormElements = (event, key) => {\n        handleOnChangeFormElements(event, key, true)\n    }\n\n    const handleOpenAddDialog = (selectedWorkExperience = false) => {\n        if (selectedWorkExperience) {\n            handleGetSelectedWorkExperience(selectedWorkExperience)\n        } else {\n            handleDefRecord()\n        }\n        setOpenAddDialog(true)\n    }\n\n    const handleCloseDialog = () => {\n        if (JSON.stringify(workExperienceData) !== JSON.stringify(workExperienceDataBase)) {\n            setOpenTrackedDialog(true)\n        } else {\n            setOpenAddDialog(false)\n            handleReset()\n        }\n    }\n\n\n    const handleReset = () => {\n        setTimeout(() => {\n            setIsInitialStateLoad(false)\n            setGetData(null)\n            setWorkExperienceData(initialState)\n            setWorkExperienceDataBase(initialState)\n            setSelectedWorkExperienceData(null)\n            setSelectedGid(null)\n            setFileType('');\n            setMediaUrl('');\n        }, 100)\n    }\n\n    const handlePreviewFile = (mid, code) => {\n        setIsPreviewLoading(true)\n        axios({\n            url: `${GENERAL_SETTINGS.OREST_URL}/tools/file/download`,\n            headers: {\n                'Authorization': `Bearer ${token}`,\n            },\n            method: 'get',\n            responseType: 'arraybuffer',\n            params: {\n                mid: mid,\n                code: code,\n                hotelrefno: GENERAL_SETTINGS.HOTELREFNO,\n            },\n        }).then((r) => {\n            if (r.status === 200) {\n                let blob = new Blob([r.data], {type: r.data.type})\n                    , url = URL.createObjectURL(blob)\n\n                setMediaUrl(url)\n                setIsPreviewLoading(false)\n            }\n        })\n    }\n\n    const handleTaskFileDownload = (mid, code, description) => {\n        axios({\n            url: `${GENERAL_SETTINGS.OREST_URL}/tools/file/download`,\n            headers: {\n                'Authorization': `Bearer ${token}`,\n            },\n            method: 'get',\n            responseType: 'blob',\n            params: {\n                mid: mid,\n                code: code,\n                hotelrefno: GENERAL_SETTINGS.HOTELREFNO,\n            },\n        }).then((r) => {\n            if (r.status === 200) {\n                let blob = new Blob([r.data], {type: r.data.type})\n                    , url = URL.createObjectURL(blob)\n                    , link = document.createElement('a')\n\n                link.href = url\n                link.setAttribute('download', `${description}`.toLowerCase()) //or any other extension\n                document.body.appendChild(link)\n                link.click()\n                link.remove()\n            }\n        })\n    }\n\n    return (\n        <div>\n            <React.Fragment>\n                <Grid container>\n                    <Grid item xs={4} sm={3}>\n                        <Grid container>\n                            <Grid item xs={6} sm={3}>\n                                <CustomToolTip title={t('str_refresh')}>\n                                    <IconButton\n                                        onClick={() => getWorkExperienceList()}\n                                    >\n                                        <CachedIcon style={{color: \"#F16A4B\"}}/>\n                                    </IconButton>\n                                </CustomToolTip>\n                            </Grid>\n                            <Grid item xs={6} sm={3}>\n                                <CustomToolTip title={t('str_add')}>\n                                    <IconButton\n                                        onClick={() => handleOpenAddDialog(false)}\n                                    >\n                                        <AddIcon/>\n                                    </IconButton>\n                                </CustomToolTip>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <MaterialTable\n                            isLoading={isLoadingList}\n                            columns={WorkExperienceColumns}\n                            data={workExperienceList}\n                            localization={tableLocalization}\n                            options={{\n                                headerStyle: {\n                                    cursor: 'default',\n                                    fontWeight: \"bold\",\n                                    fontSize: \"12px\",\n                                    color: \"#A3A6B4\",\n                                    textTransform: \"uppercase\",\n                                    backgroundColor: \"#F5F6FA\",\n                                    whiteSpace: 'nowrap',\n                                    borderLeft: '1px solid #FFF',\n                                },\n                                cellStyle: {\n                                    whiteSpace: 'nowrap',\n                                    borderLeft: '1px solid rgba(224, 224, 224, 1)',\n                                    fontSize: '13px',\n                                },\n                                toolbar: false,\n                                selection: false,\n                                sorting: false,\n                                search: false,\n                                actionsColumnIndex: 1,\n                                selectionColumnIndex: 1\n                            }}\n                            components={{\n                                Header: (props) => {\n                                    const overrideProps = {...props}\n                                    overrideProps.draggable = false\n                                    return (\n                                        <MTableHeader  {...overrideProps}/>\n                                    )\n                                },\n                            }}\n                        />\n                    </Grid>\n                </Grid>\n                <Dialog open={openAddDialog} disableEnforceFocus maxWidth={'sm'} fullWidth>\n                    <div style={{padding: 24}}>\n                        <Grid container spacing={3}>\n                            <Grid item xs={12}>\n                                <Typography style={{\n                                    fontWeight: '600',\n                                    fontSize: '18px'\n                                }}>{selectedWorkExperienceData ? t('str_editWork') : t('str_addWorkExperience')}</Typography>\n                            </Grid>\n                            {\n                                isDef ? (\n                                    <Grid item xs={12}>\n                                        <LoadingSpinner/>\n                                    </Grid>\n                                ) : (\n                                    <React.Fragment>\n                                        {\n                                            formElements.map((item, index) => (\n                                                <Grid key={index} item {...item.gridProps}>\n                                                    {renderFormElements(item)}\n                                                </Grid>\n                                            ))\n                                        }\n                                        <Grid item xs={4}>\n                                            <Fab\n                                                variant=\"extended\"\n                                                size=\"18px\"\n                                                onClick={openDialog}\n                                                color=\"primary\"\n                                                style={{\n                                                    fontWeight: '600',\n                                                    fontSize: 'inherit',\n                                                    borderRadius: 7,\n                                                    height: 42\n                                                }}\n                                            >\n                                                <CloudUploadIcon style={{marginRight: 10}}/>\n                                                {t('str_upload')}\n                                            </Fab>\n                                            <DropzoneDialog\n                                                open={workFileUploadStatus}\n                                                onSave={(file) => {\n                                                    setWorkFileUploadStatus(false)\n                                                    setFile(file[0])\n                                                }}\n                                                acceptedFiles={[\n                                                    'image/jpeg',\n                                                    'image/png',\n                                                    'image/bmp',\n                                                    'image/gif',\n                                                    'video/mp4',\n                                                    'application/zip',\n                                                ]}\n                                                showPreviews={true}\n                                                filesLimit={3}\n                                                maxFileSize={5000000}\n                                                onClose={() => setWorkFileUploadStatus(false)}\n                                                submitButtonText={t('str_save')}\n                                                cancelButtonText={t('str_cancel')}\n                                                dialogTitle={t('str_uploadTheWorkCertificateFile')}\n                                            />\n                                        </Grid>\n                                        <Grid item xs={12}>\n                                            <AddDialogActions\n                                                disabled={isSaving}\n                                                loading={isSaving}\n                                                onCancelClick={handleCloseDialog}\n                                                onSaveClick={handleSave}\n                                            />\n                                        </Grid>\n                                    </React.Fragment>\n                                )\n                            }\n                        </Grid>\n                    </div>\n                </Dialog>\n                <MediaViewerDialog\n                    open={openPreviewDialog}\n                    maxWidth={'md'}\n                    fullWidth\n                    loading={isPreviewLoading}\n                    fileType={fileType}\n                    url={mediaUrl}\n                    t={t}\n                    onClose={() => {\n                        setOpenPreviewDialog(false);\n                        setTimeout(() => {\n                            handleReset();\n                        }, 100)\n                    }}\n                />\n                <TrackedChangesDialog\n                    open={openTrackedDialog}\n                    onPressNo={(e) => {\n                        setOpenTrackedDialog(e);\n                    }}\n                    onPressYes={(e) => {\n                        setOpenTrackedDialog(e);\n                        setOpenAddDialog(false)\n                        handleReset()\n                    }}\n                />\n            </React.Fragment>\n        </div>\n    )\n}\n\nexport default WorkExperience"]},"metadata":{},"sourceType":"module"}