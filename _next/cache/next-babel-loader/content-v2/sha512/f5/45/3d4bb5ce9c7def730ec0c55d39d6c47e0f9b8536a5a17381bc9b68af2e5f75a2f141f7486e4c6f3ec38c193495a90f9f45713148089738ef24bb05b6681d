{"ast":null,"code":"import _extends from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/mata/app-cloudweb/components/survey/surveytree/options/Group.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport OnePageSurvey from '../render-types/OnePageSurvey';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport styles from '../../style/SurveyOptions.style';\nimport Tab from '@material-ui/core/Tab';\nimport GroupPerPageSurvey from '../render-types/GroupPerPageSurvey';\nimport Tabs from '@material-ui/core/Tabs';\nimport Typography from '@material-ui/core/Typography';\nimport useSurveyAction from '../../../../model/survey/useSurveyAction';\nimport SwipeableViews from 'react-swipeable-views';\nimport { SURVEY_DISPLAY_TYPE_GROUP, SURVEY_DISPLAY_TYPE_QUESTION, SURVEY_DISPLAY_TYPE_ONE_PAGE } from '../../../../model/survey/constants';\nimport QuestionOption from './Question';\nimport WebCmsGlobal from '../../../webcms-global';\nimport SurveyTooltip from 'components/survey/helper/SurveyTooltip';\nvar useStyles = makeStyles(styles);\nvar backgroundColors = ['#FCB655', '#2697D4', '#18BA7A', '#4666B0', '#F16A4B', '#67B548', '#122D31', '#ED323B', '#00A79E'];\n\nfunction a11yProps(index) {\n  return {\n    id: \"scrollable-auto-tab-\".concat(index),\n    'aria-controls': \"scrollable-auto-tabpanel-\".concat(index)\n  };\n}\n\nfunction TabPanel(props) {\n  _s();\n\n  var children = props.children,\n      value = props.value,\n      index = props.index,\n      other = _objectWithoutProperties(props, [\"children\", \"value\", \"index\"]);\n\n  var classes = useStyles();\n  return __jsx(Typography, _extends({\n    component: \"div\",\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: \"scrollable-auto-tabpanel-\".concat(index),\n    \"aria-labelledby\": \"scrollable-auto-tab-\".concat(index),\n    className: classes.tabPanel\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), value === index && __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 33\n    }\n  }, children));\n}\n\n_s(TabPanel, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = TabPanel;\n\nfunction GroupOption(props) {\n  _s2();\n\n  var _this = this;\n\n  var option = props.option,\n      options = props.options,\n      optionTyp = props.optionTyp,\n      index = props.index;\n\n  var _useContext = useContext(WebCmsGlobal),\n      GENERAL_SETTINGS = _useContext.GENERAL_SETTINGS; //style\n\n\n  var classes = useStyles();\n  var theme = useTheme(); //redux\n\n  var _useSurveyAction = useSurveyAction(),\n      setSurveyPage = _useSurveyAction.setSurveyPage,\n      setSurveyLastPage = _useSurveyAction.setSurveyLastPage,\n      setSurveyGroup = _useSurveyAction.setSurveyGroup,\n      setSurveyLastGroup = _useSurveyAction.setSurveyLastGroup;\n\n  var surveyIsValid = useSelector(function (state) {\n    return state.survey.isValid;\n  });\n  var displayType = useSelector(function (state) {\n    return state.survey.displayType;\n  });\n  var surveyPage = String(useSelector(function (state) {\n    return state.survey.page;\n  }));\n  var surveyGroup = String(useSelector(function (state) {\n    return state.survey.group;\n  }));\n  var defaultExpanded = Number(index) === 1 && displayType === SURVEY_DISPLAY_TYPE_ONE_PAGE ? true : false; //state\n\n  var counter = 0;\n  var groupLimits = [];\n  useEffect(function () {\n    if (displayType === SURVEY_DISPLAY_TYPE_GROUP) {\n      setSurveyLastGroup(options.length);\n    } else if (displayType === SURVEY_DISPLAY_TYPE_QUESTION) {\n      setSurveyLastGroup(options.length);\n    }\n  }, []);\n  useEffect(function () {\n    if (displayType === SURVEY_DISPLAY_TYPE_QUESTION) {\n      if (groupLimits && groupLimits[surveyPage] !== undefined) {\n        if (Number(surveyGroup) !== setSurveyGroup(groupLimits[surveyPage])) {\n          setSurveyGroup(groupLimits[surveyPage]);\n        }\n      }\n    }\n  }, [surveyPage]);\n  useEffect(function () {\n    if (displayType === SURVEY_DISPLAY_TYPE_QUESTION) {\n      setSurveyLastPage(counter);\n    }\n  }, [counter]);\n\n  var handleChange = function handleChange(event, newValue) {\n    var value = Number(newValue);\n\n    if (Number(surveyGroup) !== value) {\n      setSurveyGroup(value);\n    }\n\n    if (displayType === SURVEY_DISPLAY_TYPE_QUESTION) {\n      var indexOfFirstQuestionOfGroup = groupLimits.indexOf(value);\n      var firstQuestionOfGroup = groupLimits[indexOfFirstQuestionOfGroup];\n      setSurveyPage(indexOfFirstQuestionOfGroup);\n\n      if (firstQuestionOfGroup) {\n        setSurveyGroup(firstQuestionOfGroup);\n      }\n    }\n  };\n\n  if (displayType === SURVEY_DISPLAY_TYPE_GROUP) {\n    return __jsx(React.Fragment, null, __jsx(Tabs, {\n      value: surveyGroup,\n      onChange: handleChange,\n      variant: 'scrollable',\n      scrollButtons: 'auto',\n      classes: {\n        root: classes.tabsRoot,\n        indicator: classes.tabsIndicator,\n        flexContainer: classes.tabsFlexContainer,\n        scrollButtons: classes.tabsScrollButtons\n      },\n      TabScrollButtonProps: {\n        classes: {\n          root: classes.tabScrollRoot,\n          disabled: classes.tabScrollDisabled\n        }\n      },\n      \"aria-label\": \"menu tabs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, options.map(function (option, i) {\n      return __jsx(Tab, _extends({\n        label: __jsx(SurveyTooltip, {\n          title: option && option.note || '',\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 37\n          }\n        }, __jsx(\"span\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 41\n          }\n        }, option.langwordtxt || option.description)),\n        icon: option.imageurl && __jsx(\"img\", {\n          src: GENERAL_SETTINGS.STATIC_URL + option.imageurl,\n          alt: option.langwordtxt || option.description,\n          className: classes.groupImage,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 41\n          }\n        })\n      }, a11yProps(i), {\n        value: \"\".concat(i),\n        key: i,\n        style: {\n          backgroundColor: index % 2 ? theme.palette.primary.main : theme.palette.secondary.main\n        },\n        classes: {\n          root: classes.tabRoot,\n          wrapper: classes.tabWrapper,\n          textColorInherit: classes.tabTextColorInherit,\n          labelIcon: classes.tabLabelIcon\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 29\n        }\n      }));\n    })), __jsx(SwipeableViews, {\n      axis: theme.direction === 'rtl' ? 'x-reverse' : 'x',\n      index: Number(surveyGroup),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }\n    }, options.map(function (option, i) {\n      return __jsx(TabPanel, {\n        value: surveyGroup,\n        index: String(i),\n        key: i,\n        dir: theme.direction,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 29\n        }\n      }, option.children ? __jsx(GroupPerPageSurvey, {\n        options: option.children,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 52\n        }\n      }) : __jsx(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 103\n        }\n      }));\n    })));\n  } else if (displayType === SURVEY_DISPLAY_TYPE_QUESTION) {\n    return __jsx(React.Fragment, null, __jsx(Tabs, {\n      value: surveyGroup,\n      onChange: handleChange,\n      variant: 'scrollable',\n      scrollButtons: 'auto',\n      classes: {\n        root: classes.tabsRoot,\n        indicator: classes.tabsIndicator,\n        flexContainer: classes.tabsFlexContainer,\n        scrollButtons: classes.tabsScrollButtons\n      },\n      TabScrollButtonProps: {\n        classes: {\n          root: classes.tabScrollRoot,\n          disabled: classes.tabScrollDisabled\n        }\n      },\n      \"aria-label\": \"menu tabs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }\n    }, options.map(function (option, i) {\n      return __jsx(Tab, _extends({\n        label: __jsx(SurveyTooltip, {\n          title: option && option.note || '',\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 37\n          }\n        }, __jsx(\"span\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 41\n          }\n        }, option.langwordtxt || option.description)),\n        icon: option.imageurl && __jsx(\"img\", {\n          src: GENERAL_SETTINGS.STATIC_URL + option.imageurl,\n          alt: option.langwordtxt || option.description,\n          className: classes.groupImage,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 41\n          }\n        })\n      }, a11yProps(i), {\n        value: \"\".concat(i),\n        key: i,\n        style: {\n          backgroundColor: index % 2 ? theme.palette.primary.main : theme.palette.secondary.main\n        },\n        classes: {\n          root: classes.tabRoot,\n          wrapper: classes.tabWrapper,\n          textColorInherit: classes.tabTextColorInherit,\n          labelIcon: classes.tabLabelIcon\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 29\n        }\n      }));\n    })), __jsx(SwipeableViews, {\n      axis: theme.direction === 'rtl' ? 'x-reverse' : 'x',\n      index: Number(surveyGroup),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }\n    }, options.map(function (option, i) {\n      return __jsx(TabPanel, {\n        value: surveyGroup,\n        index: String(i),\n        key: i,\n        dir: theme.direction,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 29\n        }\n      }, option.children && option.children.length > 0 ? option.children.map(function (optionChild, j) {\n        counter++;\n        groupLimits.push(i);\n\n        if (counter === Number(surveyPage) + 1) {\n          return __jsx(QuestionOption, {\n            option: optionChild,\n            optionTyp: 'QUESTION',\n            index: counter,\n            key: j,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 49\n            }\n          });\n        }\n      }) : __jsx(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 37\n        }\n      }));\n    })));\n  } else {\n    return __jsx(Accordion, {\n      defaultExpanded: defaultExpanded,\n      className: classes.expansionPanel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 13\n      }\n    }, __jsx(AccordionSummary, {\n      expandIcon: __jsx(ExpandMoreIcon, {\n        className: classes.expandMoreIcon,\n        style: {\n          color: index % 2 ? theme.palette.primary.contrastText : theme.palette.secondary.contrastText\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 33\n        }\n      }),\n      \"aria-controls\": option.id + '-content',\n      id: option.id + '-header',\n      style: {\n        backgroundColor: index % 2 ? theme.palette.primary.main : theme.palette.secondary.main,\n        opacity: surveyIsValid ? 0.7 : 1\n      },\n      className: classes.expansionPanelSummary,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 17\n      }\n    }, option.imageurl && __jsx(\"img\", {\n      src: GENERAL_SETTINGS.STATIC_URL + option.imageurl,\n      alt: option.langwordtxt || option.description,\n      className: classes.groupImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 25\n      }\n    }), __jsx(\"h3\", {\n      style: {\n        color: index % 2 ? theme.palette.primary.contrastText : theme.palette.secondary.contrastText\n      },\n      className: classes.groupTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 21\n      }\n    }, option.langwordtxt || option.description)), __jsx(AccordionDetails, {\n      className: classes.expansionPanelDetails,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 17\n      }\n    }, option.children && __jsx(OnePageSurvey, {\n      options: option.children,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 41\n      }\n    })));\n  }\n}\n\n_s2(GroupOption, \"+p3wMP13Nx9Dr2BoUIHnZmjZ2n0=\", false, function () {\n  return [useStyles, useTheme, useSurveyAction, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c2 = GroupOption;\nexport default GroupOption;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"GroupOption\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/survey/surveytree/options/Group.js"],"names":["React","useContext","useEffect","useSelector","OnePageSurvey","ExpandMoreIcon","Accordion","AccordionSummary","AccordionDetails","makeStyles","useTheme","styles","Tab","GroupPerPageSurvey","Tabs","Typography","useSurveyAction","SwipeableViews","SURVEY_DISPLAY_TYPE_GROUP","SURVEY_DISPLAY_TYPE_QUESTION","SURVEY_DISPLAY_TYPE_ONE_PAGE","QuestionOption","WebCmsGlobal","SurveyTooltip","useStyles","backgroundColors","a11yProps","index","id","TabPanel","props","children","value","other","classes","tabPanel","GroupOption","option","options","optionTyp","GENERAL_SETTINGS","theme","setSurveyPage","setSurveyLastPage","setSurveyGroup","setSurveyLastGroup","surveyIsValid","state","survey","isValid","displayType","surveyPage","String","page","surveyGroup","group","defaultExpanded","Number","counter","groupLimits","length","undefined","handleChange","event","newValue","indexOfFirstQuestionOfGroup","indexOf","firstQuestionOfGroup","root","tabsRoot","indicator","tabsIndicator","flexContainer","tabsFlexContainer","scrollButtons","tabsScrollButtons","tabScrollRoot","disabled","tabScrollDisabled","map","i","note","langwordtxt","description","imageurl","STATIC_URL","groupImage","backgroundColor","palette","primary","main","secondary","tabRoot","wrapper","tabWrapper","textColorInherit","tabTextColorInherit","labelIcon","tabLabelIcon","direction","optionChild","j","push","expansionPanel","expandMoreIcon","color","contrastText","opacity","expansionPanelSummary","groupTitle","expansionPanelDetails"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport OnePageSurvey from '../render-types/OnePageSurvey'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport Accordion from '@material-ui/core/Accordion'\nimport AccordionSummary from '@material-ui/core/AccordionSummary'\nimport AccordionDetails from '@material-ui/core/AccordionDetails'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport styles from '../../style/SurveyOptions.style'\nimport Tab from '@material-ui/core/Tab'\nimport GroupPerPageSurvey from '../render-types/GroupPerPageSurvey'\nimport Tabs from '@material-ui/core/Tabs'\nimport Typography from '@material-ui/core/Typography'\nimport useSurveyAction from '../../../../model/survey/useSurveyAction'\nimport SwipeableViews from 'react-swipeable-views'\nimport { SURVEY_DISPLAY_TYPE_GROUP, SURVEY_DISPLAY_TYPE_QUESTION, SURVEY_DISPLAY_TYPE_ONE_PAGE } from '../../../../model/survey/constants'\nimport QuestionOption from './Question'\nimport WebCmsGlobal from '../../../webcms-global'\nimport SurveyTooltip from 'components/survey/helper/SurveyTooltip'\n\nconst useStyles = makeStyles(styles)\n\nconst backgroundColors = [\n    '#FCB655',\n    '#2697D4',\n    '#18BA7A',\n    '#4666B0',\n    '#F16A4B',\n    '#67B548',\n    '#122D31',\n    '#ED323B',\n    '#00A79E',\n]\n\nfunction a11yProps(index) {\n    return {\n        id: `scrollable-auto-tab-${index}`,\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    }\n}\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props\n    const classes = useStyles()\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`scrollable-auto-tabpanel-${index}`}\n            aria-labelledby={`scrollable-auto-tab-${index}`}\n            className={classes.tabPanel}\n            {...other}\n        >\n            {value === index && <React.Fragment>{children}</React.Fragment>}\n        </Typography>\n    )\n}\n\nfunction GroupOption(props) {\n    const { option, options, optionTyp, index } = props\n    const { GENERAL_SETTINGS } = useContext(WebCmsGlobal)\n\n    //style\n    const classes = useStyles()\n    const theme = useTheme()\n\n    //redux\n    const { setSurveyPage, setSurveyLastPage, setSurveyGroup, setSurveyLastGroup } = useSurveyAction()\n    const surveyIsValid = useSelector((state) => state.survey.isValid)\n    const displayType = useSelector((state) => state.survey.displayType)\n    const surveyPage = String(useSelector((state) => state.survey.page))\n    const surveyGroup = String(useSelector((state) => state.survey.group))\n    const defaultExpanded = Number(index) === 1 && (displayType === SURVEY_DISPLAY_TYPE_ONE_PAGE) ? true : false\n\n    //state\n    let counter = 0\n    const groupLimits = []\n\n    useEffect(() => {\n        if (displayType === SURVEY_DISPLAY_TYPE_GROUP) {\n            setSurveyLastGroup(options.length)\n        } else if (displayType === SURVEY_DISPLAY_TYPE_QUESTION) {\n            setSurveyLastGroup(options.length)\n        }\n    }, [])\n\n    useEffect(() => {\n        if (displayType === SURVEY_DISPLAY_TYPE_QUESTION) {\n            if (groupLimits && groupLimits[surveyPage] !== undefined) {\n                if (Number(surveyGroup) !== setSurveyGroup(groupLimits[surveyPage])) {\n                    setSurveyGroup(groupLimits[surveyPage])\n                }\n            }\n        }\n    }, [surveyPage])\n\n    useEffect(() => {\n        if (displayType === SURVEY_DISPLAY_TYPE_QUESTION) {\n            setSurveyLastPage(counter)\n        }\n    }, [counter])\n\n    const handleChange = (event, newValue) => {\n        const value = Number(newValue)\n\n        if (Number(surveyGroup) !== value) {\n            setSurveyGroup(value)\n        }\n\n        if (displayType === SURVEY_DISPLAY_TYPE_QUESTION) {\n            const indexOfFirstQuestionOfGroup = groupLimits.indexOf(value)\n            const firstQuestionOfGroup = groupLimits[indexOfFirstQuestionOfGroup]\n\n            setSurveyPage(indexOfFirstQuestionOfGroup)\n            if (firstQuestionOfGroup) {\n                setSurveyGroup(firstQuestionOfGroup)\n            }\n        }\n    }\n\n    if (displayType === SURVEY_DISPLAY_TYPE_GROUP) {\n        return (\n            <>\n                <Tabs\n                    value={surveyGroup}\n                    onChange={handleChange}\n                    variant={'scrollable'}\n                    scrollButtons={'auto'}\n                    classes={{\n                        root: classes.tabsRoot,\n                        indicator: classes.tabsIndicator,\n                        flexContainer: classes.tabsFlexContainer,\n                        scrollButtons: classes.tabsScrollButtons,\n                    }}\n                    TabScrollButtonProps={{\n                        classes: {\n                            root: classes.tabScrollRoot,\n                            disabled: classes.tabScrollDisabled,\n                        },\n                    }}\n                    aria-label=\"menu tabs\"\n                >\n                    {options.map((option, i) => {\n                        return (\n                            <Tab\n                                label={\n                                    <SurveyTooltip title={option && option.note || ''}>\n                                        <span>{option.langwordtxt || option.description}</span>\n                                    </SurveyTooltip>\n                                }\n                                icon={\n                                    option.imageurl && (\n                                        <img\n                                            src={GENERAL_SETTINGS.STATIC_URL + option.imageurl}\n                                            alt={option.langwordtxt || option.description}\n                                            className={classes.groupImage}\n                                        />\n                                    )\n                                }\n                                {...a11yProps(i)}\n                                value={`${i}`}\n                                key={i}\n                                style={{ backgroundColor: (index % 2 ? theme.palette.primary.main : theme.palette.secondary.main) }}\n                                classes={{\n                                    root: classes.tabRoot,\n                                    wrapper: classes.tabWrapper,\n                                    textColorInherit: classes.tabTextColorInherit,\n                                    labelIcon: classes.tabLabelIcon,\n                                }}\n                            />\n                        )\n                    })}\n                </Tabs>\n                <SwipeableViews axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'} index={Number(surveyGroup)}>\n                    {options.map((option, i) => {\n                        return (\n                            <TabPanel value={surveyGroup} index={String(i)} key={i} dir={theme.direction}>\n                                {option.children ? <GroupPerPageSurvey options={option.children} /> : <div />}\n                            </TabPanel>\n                        )\n                    })}\n                </SwipeableViews>\n            </>\n        )\n    } else if (displayType === SURVEY_DISPLAY_TYPE_QUESTION) {\n        return (\n            <>\n                <Tabs\n                    value={surveyGroup}\n                    onChange={handleChange}\n                    variant={'scrollable'}\n                    scrollButtons={'auto'}\n                    classes={{\n                        root: classes.tabsRoot,\n                        indicator: classes.tabsIndicator,\n                        flexContainer: classes.tabsFlexContainer,\n                        scrollButtons: classes.tabsScrollButtons,\n                    }}\n                    TabScrollButtonProps={{\n                        classes: {\n                            root: classes.tabScrollRoot,\n                            disabled: classes.tabScrollDisabled,\n                        },\n                    }}\n                    aria-label=\"menu tabs\"\n                >\n                    {options.map((option, i) => {\n                        return (\n                            <Tab\n                                label={\n                                    <SurveyTooltip title={option && option.note || ''}>\n                                        <span>{option.langwordtxt || option.description}</span>\n                                    </SurveyTooltip>\n                                }\n                                icon={\n                                    option.imageurl && (\n                                        <img\n                                            src={GENERAL_SETTINGS.STATIC_URL + option.imageurl}\n                                            alt={option.langwordtxt || option.description}\n                                            className={classes.groupImage}\n                                        />\n                                    )\n                                }\n                                {...a11yProps(i)}\n                                value={`${i}`}\n                                key={i}\n                                style={{ backgroundColor: (index % 2 ? theme.palette.primary.main : theme.palette.secondary.main) }}\n                                classes={{\n                                    root: classes.tabRoot,\n                                    wrapper: classes.tabWrapper,\n                                    textColorInherit: classes.tabTextColorInherit,\n                                    labelIcon: classes.tabLabelIcon,\n                                }}\n                            />\n                        )\n                    })}\n                </Tabs>\n                <SwipeableViews axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'} index={Number(surveyGroup)}>\n                    {options.map((option, i) => {\n                        return (\n                            <TabPanel value={surveyGroup} index={String(i)} key={i} dir={theme.direction}>\n                                {option.children && option.children.length > 0 ? (\n                                    option.children.map((optionChild, j) => {\n                                        counter++\n                                        groupLimits.push(i)\n                                        if (counter === Number(surveyPage) + 1) {\n                                            return (\n                                                <QuestionOption\n                                                    option={optionChild}\n                                                    optionTyp={'QUESTION'}\n                                                    index={counter}\n                                                    key={j}\n                                                />\n                                            )\n                                        }\n                                    })\n                                ) : (\n                                    <div />\n                                )}\n                            </TabPanel>\n                        )\n                    })}\n                </SwipeableViews>\n            </>\n        )\n    } else {\n        return (\n            <Accordion defaultExpanded={defaultExpanded} className={classes.expansionPanel}>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon className={classes.expandMoreIcon}  style={{color: (index % 2 ? theme.palette.primary.contrastText : theme.palette.secondary.contrastText)}} />}\n                    aria-controls={option.id + '-content'}\n                    id={option.id + '-header'}\n                    style={{\n                        backgroundColor: (index % 2 ? theme.palette.primary.main : theme.palette.secondary.main),\n                        opacity: surveyIsValid ? 0.7 : 1,\n                    }}\n                    className={classes.expansionPanelSummary}\n                >\n                    {option.imageurl && (\n                        <img\n                            src={GENERAL_SETTINGS.STATIC_URL + option.imageurl}\n                            alt={option.langwordtxt || option.description}\n                            className={classes.groupImage}\n                        />\n                    )}\n                    <h3 style={{color: (index % 2 ? theme.palette.primary.contrastText : theme.palette.secondary.contrastText)}} className={classes.groupTitle}>{option.langwordtxt || option.description}</h3>\n                </AccordionSummary>\n                <AccordionDetails className={classes.expansionPanelDetails}>\n                    {option.children && <OnePageSurvey options={option.children} />}\n                </AccordionDetails>\n            </Accordion>\n        )\n    }\n}\n\nexport default GroupOption\n"]},"metadata":{},"sourceType":"module"}