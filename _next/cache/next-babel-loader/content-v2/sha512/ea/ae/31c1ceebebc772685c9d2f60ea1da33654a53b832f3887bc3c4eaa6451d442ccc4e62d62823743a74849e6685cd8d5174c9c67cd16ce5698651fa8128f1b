{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/components/website/header/EditHeader.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useContext } from 'react'; //material imports\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Grid from \"@material-ui/core/Grid\";\nimport CreateIcon from '@material-ui/icons/Create';\nimport StepConnector from '@material-ui/core/StepConnector';\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Container from \"@material-ui/core/Container\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport validator from \"validator\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport Slider from '@material-ui/core/Slider';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport clsx from \"clsx\";\nimport { COLORS } from \"../../../constants\";\nimport WebCmsGlobal from \"../../../../../webcms-global\";\nimport { ViewList } from \"@webcms/orest\";\nimport { OREST_ENDPOINT } from \"../../../../../../model/orest/constants\";\nimport { useRouter } from \"next/router\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: 200\n    },\n    disabledDiv: {\n      pointerEvents: \"none\",\n      opacity: 0.5\n    }\n  },\n  actionButtons: {\n    display: 'flex',\n    justifyContent: 'flex-start',\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2)\n  },\n  actionButton: {\n    marginLeft: theme.spacing(1),\n    borderRadius: 20\n  },\n  disabledEvent: {\n    pointerEvents: \"none\",\n    opacity: 0.5\n  },\n  icon: {\n    cursor: 'pointer',\n    width: '100%',\n    height: '100%',\n    opacity: 0.3\n  },\n  columnCard: {\n    height: 400,\n    overflow: 'auto',\n    border: `3px solid ${COLORS.secondary}`\n  }\n}));\nconst useColorStepIconStyle = makeStyles(() => ({\n  root: {\n    backgroundColor: '#ccc',\n    zIndex: 1,\n    color: '#fff',\n    width: 50,\n    height: 50,\n    display: 'flex',\n    borderRadius: '50%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    '& img': {\n      width: 35\n    }\n  },\n  iconSize: {\n    height: 30,\n    width: 30\n  },\n  active: {\n    backgroundColor: COLORS === null || COLORS === void 0 ? void 0 : COLORS.secondary,\n    boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)'\n  },\n  completed: {\n    backgroundColor: COLORS === null || COLORS === void 0 ? void 0 : COLORS.primary,\n    color: '#fff'\n  }\n}));\nconst ColorlibConnector = withStyles({\n  alternativeLabel: {\n    top: 30,\n    left: 'calc(-50% + 10px)',\n    right: 'calc(50% + 10px)'\n  },\n  active: {\n    '& $line': {\n      background: 'transparent linear-gradient(270deg, #269DD4 0%, #0F4571 100%) 0% 0% no-repeat padding-box'\n    }\n  },\n  completed: {\n    '& $line': {\n      backgroundColor: COLORS.primary\n    }\n  },\n  line: {\n    height: 4,\n    border: 0,\n    backgroundColor: '#eaeaf0',\n    borderRadius: 1\n  }\n})(StepConnector);\n\nconst getRowStepsIcons = (itemCount, isActive, isCompleted, step) => {\n  const icon_classes = useColorStepIconStyle();\n  let icons = {};\n\n  switch (itemCount) {\n    case 1:\n      icons = {\n        0: __jsx(ReceiptIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 20\n          }\n        }),\n        1: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 20\n          }\n        })\n      };\n      break;\n\n    case 2:\n      icons = {\n        0: __jsx(ReceiptIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 20\n          }\n        }),\n        1: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 20\n          }\n        }),\n        2: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 20\n          }\n        })\n      };\n      break;\n\n    case 3:\n      icons = {\n        0: __jsx(ReceiptIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 20\n          }\n        }),\n        1: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 20\n          }\n        }),\n        2: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 20\n          }\n        }),\n        3: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 20\n          }\n        })\n      };\n      break;\n\n    default:\n      icons = {\n        0: __jsx(ReceiptIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 20\n          }\n        }),\n        1: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 20\n          }\n        }),\n        2: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 20\n          }\n        }),\n        3: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 20\n          }\n        })\n      };\n      break;\n  }\n\n  return __jsx(\"div\", {\n    className: clsx(icon_classes.root, {\n      [icon_classes.active]: isActive,\n      [icon_classes.completed]: isCompleted\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }, icons[step]);\n};\n\nconst getColumnStepsIcons = (itemCount, isActive, isCompleted, step) => {\n  const icon_classes = useColorStepIconStyle();\n  let icons = {};\n\n  switch (itemCount) {\n    case 1:\n      icons = {\n        0: __jsx(ReceiptIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 20\n          }\n        }),\n        1: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 20\n          }\n        })\n      };\n      break;\n\n    case 2:\n      icons = {\n        0: __jsx(ReceiptIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 20\n          }\n        }),\n        1: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 20\n          }\n        }),\n        2: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 20\n          }\n        })\n      };\n      break;\n\n    case 3:\n      icons = {\n        0: __jsx(ReceiptIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 20\n          }\n        }),\n        1: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 20\n          }\n        }),\n        2: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 20\n          }\n        }),\n        3: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 20\n          }\n        })\n      };\n      break;\n\n    case 4:\n      icons = {\n        0: __jsx(ReceiptIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 20\n          }\n        }),\n        1: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 20\n          }\n        }),\n        2: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 20\n          }\n        }),\n        3: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 20\n          }\n        }),\n        4: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 20\n          }\n        })\n      };\n      break;\n\n    case 5:\n      icons = {\n        0: __jsx(ReceiptIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 20\n          }\n        }),\n        1: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 20\n          }\n        }),\n        2: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 20\n          }\n        }),\n        3: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 20\n          }\n        }),\n        4: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 20\n          }\n        }),\n        5: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 20\n          }\n        })\n      };\n      break;\n\n    default:\n      icons = {\n        0: __jsx(ReceiptIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 20\n          }\n        }),\n        1: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 20\n          }\n        }),\n        2: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 20\n          }\n        }),\n        3: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 20\n          }\n        }),\n        4: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 20\n          }\n        }),\n        5: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 20\n          }\n        })\n      };\n      break;\n  }\n\n  return __jsx(\"div\", {\n    className: clsx(icon_classes.root, {\n      [icon_classes.active]: isActive,\n      [icon_classes.completed]: isCompleted\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }\n  }, icons[step]);\n};\n\nconst marks = [{\n  value: 0,\n  label: '0'\n}, {\n  value: 10,\n  label: '10%'\n}, {\n  value: 20,\n  label: '20%'\n}, {\n  value: 30,\n  label: '30%'\n}, {\n  value: 40,\n  label: '40%'\n}, {\n  value: 50,\n  label: '50%'\n}, {\n  value: 60,\n  label: '60'\n}, {\n  value: 70,\n  label: '70%'\n}, {\n  value: 80,\n  label: '80%'\n}, {\n  value: 90,\n  label: '90%'\n}, {\n  value: 100,\n  label: '100%'\n}];\nconst iOSBoxShadow = '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.13),0 0 0 1px rgba(0,0,0,0.02)';\nconst CustomSlider = withStyles({\n  root: {\n    // color: COLORS.primary,\n    height: 2,\n    padding: '15px 0'\n  },\n  thumb: {\n    height: 28,\n    width: 28,\n    backgroundColor: '#fff',\n    boxShadow: iOSBoxShadow,\n    marginTop: -14,\n    marginLeft: -14,\n    '&:focus, &:hover, &$active': {\n      boxShadow: '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.3),0 0 0 1px rgba(0,0,0,0.02)',\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        boxShadow: iOSBoxShadow\n      }\n    }\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50% + 11px)',\n    top: -22,\n    '& *': {\n      background: 'transparent',\n      color: '#000'\n    }\n  },\n  track: {\n    height: 2\n  },\n  rail: {\n    height: 2,\n    opacity: 0.5,\n    backgroundColor: '#bfbfbf'\n  },\n  mark: {\n    backgroundColor: '#bfbfbf',\n    height: 8,\n    width: 1,\n    marginTop: -3\n  },\n  markActive: {\n    opacity: 1,\n    backgroundColor: 'currentColor'\n  }\n})(Slider);\n\nconst EditHeader = props => {\n  const {\n    state,\n    onEditHeader\n  } = props;\n  const classes = useStyles(); //local states\n\n  const {\n    0: rowNumber,\n    1: setRowNumber\n  } = useState(state.website.header.items.length);\n  const {\n    0: colNumber,\n    1: setColNumber\n  } = useState(0);\n  const {\n    0: rowSteps,\n    1: setRowSteps\n  } = useState([]);\n  const {\n    0: columnSteps,\n    1: setColumnSteps\n  } = useState([]);\n  const {\n    0: activeRowStep,\n    1: setActiveRowStep\n  } = useState(0);\n  const {\n    0: activeColumnStep,\n    1: setActiveColumnStep\n  } = useState(0);\n  const {\n    0: headerItems,\n    1: setHeaderItems\n  } = useState([...state.website.header.items]);\n  const {\n    0: otherLangHeaderItems,\n    1: setOtherLangHeaderItems\n  } = useState([]);\n  const {\n    0: webPages,\n    1: setWebPages\n  } = useState([]);\n  const {\n    0: consumeWidth,\n    1: setConsumeWidth\n  } = useState(0);\n  const {\n    0: sliderWidth,\n    1: setSliderWidth\n  } = useState(0);\n  const {\n    0: activeColumnWidth,\n    1: setActiveColumnWidth\n  } = useState(0);\n  const options = [{\n    id: 'option-1',\n    code: 'external-link',\n    description: 'External Link'\n  }, {\n    id: 'option-2',\n    code: 'internal-link',\n    description: 'Internal Link'\n  }, {\n    id: 'option-3',\n    code: 'social-link',\n    description: 'Social Link'\n  }, {\n    id: 'option-4',\n    code: 'logo',\n    description: 'Logo'\n  }, {\n    id: 'option-5',\n    code: 'address',\n    description: 'Address'\n  }, {\n    id: 'option-6',\n    code: 'phone',\n    description: 'Phone'\n  }, {\n    id: 'option-7',\n    code: 'email',\n    description: 'Email'\n  }, {\n    id: 'option-8',\n    code: 'button',\n    description: 'Button'\n  }];\n  const {\n    GENERAL_SETTINGS,\n    token\n  } = useContext(WebCmsGlobal);\n  const router = useRouter();\n  const companyId = router.query.companyID;\n  const authToken = token || router.query.authToken;\n  useEffect(() => {\n    //getting web page from rafile\n    ViewList({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.RAFILE,\n      token: authToken,\n      params: {\n        hotelrefno: Number(companyId),\n        query: `filetype:WEBPAGE`\n      }\n    }).then(res => {\n      if (res.status === 200 && res.data && res.data.data) {\n        let updatedWebPages = [];\n\n        if (state.website.pages.length > 0) {\n          state.website.pages.map(page => {\n            const webPage = res.data.data.find(x => x.gid === page.gid);\n\n            if (webPage) {\n              updatedWebPages.push(webPage);\n            }\n          });\n        }\n\n        setWebPages(updatedWebPages);\n      }\n    }); //set header items for other languages\n\n    if (Object.keys(state.langsFile).length > 0 && state.langsFile.header && state.langsFile.header[state.langCode]) {\n      setOtherLangHeaderItems([...state.langsFile.header[state.langCode].items]);\n    }\n  }, []);\n  useEffect(() => {\n    let updatedRowsSteps = [];\n\n    for (let i = 0; i <= rowNumber; i++) {\n      if (i === 0) {\n        updatedRowsSteps.push('No of Rows');\n      } else {\n        updatedRowsSteps.push('Row ' + i);\n      }\n    }\n\n    setRowSteps(updatedRowsSteps);\n\n    if (rowNumber < headerItems.length) {\n      const updatedHeaderItems = [...headerItems];\n      updatedHeaderItems.length = rowNumber;\n      setHeaderItems(updatedHeaderItems);\n    }\n\n    if (rowNumber > headerItems.length) {\n      const updatedItems = headerItems;\n\n      for (let i = 0; i < rowNumber; i++) {\n        if (!updatedItems[i]) {\n          updatedItems.push({\n            id: `row-${headerItems.length + 1}`,\n            items: [{\n              id: 'item-1',\n              alignment: 'left',\n              value: [{\n                id: 'value-1',\n                type: 'external-link',\n                value: {\n                  title: '',\n                  value: ''\n                }\n              }]\n            }]\n          });\n          setHeaderItems(updatedItems);\n        }\n      }\n    }\n  }, [rowNumber]);\n  useEffect(() => {\n    let updatedColSteps = [];\n\n    for (let i = 0; i <= colNumber; i++) {\n      if (i === 0) {\n        updatedColSteps.push('No of Columns');\n      } else {\n        updatedColSteps.push('Column ' + i); // + '(' + headerItems[activeRowStep - 1]?.items[i - 1]?.width + '%)'\n      }\n    }\n\n    setColumnSteps(updatedColSteps);\n\n    if (activeRowStep !== 0) {\n      if (colNumber < headerItems[activeRowStep - 1].items.length) {\n        const updatedHeaderItems = [...headerItems];\n        updatedHeaderItems[activeRowStep - 1].items.length = colNumber;\n        setHeaderItems(updatedHeaderItems);\n      }\n\n      if (colNumber > headerItems[activeRowStep - 1].items.length) {\n        const updatedItems = [...headerItems];\n\n        for (let i = 0; i < colNumber; i++) {\n          if (!updatedItems[activeRowStep - 1].items[i]) {\n            updatedItems[activeRowStep - 1].items.push({\n              id: 'item-' + i + 1,\n              alignment: 'left',\n              width: 10,\n              value: [{\n                id: 'value-1',\n                type: 'external-link',\n                value: {\n                  title: '',\n                  value: ''\n                }\n              }]\n            });\n            setHeaderItems(updatedItems);\n          }\n        }\n      }\n    }\n  }, [colNumber]);\n  useEffect(() => {\n    if (activeRowStep === rowSteps.length - 1) {\n      if (state.langCode === state.defaultLang) {\n        onEditHeader({\n          tpl: state.website.header.tpl,\n          items: headerItems\n        });\n      } else {\n        onEditHeader({\n          items: otherLangHeaderItems\n        });\n      }\n    }\n  }, [activeRowStep, headerItems]);\n\n  const handleNextRow = () => {\n    setActiveRowStep(previousStep => previousStep + 1);\n    setActiveColumnStep(0);\n    setColNumber(headerItems[activeRowStep].items.length);\n    setConsumeWidth(0);\n  };\n\n  const handleBackRow = () => {\n    setActiveRowStep(previousStep => previousStep - 1);\n    activeRowStep > 1 && setColNumber(state.website.header.items[activeRowStep - 2].items.length);\n    setConsumeWidth(0);\n  };\n\n  const handleNextColumn = () => {\n    var _updatedHeaderItems, _updatedHeaderItems$i;\n\n    const updatedHeaderItems = [...headerItems];\n    setActiveColumnStep(previousStep => previousStep + 1);\n    if ((_updatedHeaderItems = updatedHeaderItems[activeRowStep - 1]) !== null && _updatedHeaderItems !== void 0 && (_updatedHeaderItems$i = _updatedHeaderItems.items[activeColumnStep - 1]) !== null && _updatedHeaderItems$i !== void 0 && _updatedHeaderItems$i.width) updatedHeaderItems[activeRowStep - 1].items[activeColumnStep - 1].width = activeColumnWidth;\n\n    if (colNumber === activeColumnStep + 1) {\n      let lastColWidth = 0;\n\n      for (let j = 0; j < ((_updatedHeaderItems2 = updatedHeaderItems[activeRowStep - 1]) === null || _updatedHeaderItems2 === void 0 ? void 0 : (_updatedHeaderItems2$ = _updatedHeaderItems2.items) === null || _updatedHeaderItems2$ === void 0 ? void 0 : _updatedHeaderItems2$.length) - 1; j++) {\n        var _updatedHeaderItems2, _updatedHeaderItems2$, _updatedHeaderItems3, _updatedHeaderItems3$;\n\n        lastColWidth = lastColWidth + ((_updatedHeaderItems3 = updatedHeaderItems[activeRowStep - 1]) === null || _updatedHeaderItems3 === void 0 ? void 0 : (_updatedHeaderItems3$ = _updatedHeaderItems3.items[j]) === null || _updatedHeaderItems3$ === void 0 ? void 0 : _updatedHeaderItems3$.width);\n      }\n\n      setActiveColumnWidth(100 - lastColWidth);\n      updatedHeaderItems[activeRowStep - 1].items[activeColumnStep].width = 100 - lastColWidth;\n      setSliderWidth(100);\n    } else {\n      var _updatedHeaderItems5, _updatedHeaderItems5$, _updatedHeaderItems6, _updatedHeaderItems6$;\n\n      let tmpWidth = 0;\n\n      for (let i = 0; i < ((_headerItems = headerItems[activeRowStep - 1]) === null || _headerItems === void 0 ? void 0 : (_headerItems$items = _headerItems.items) === null || _headerItems$items === void 0 ? void 0 : _headerItems$items.length); i++) {\n        var _headerItems, _headerItems$items;\n\n        if (i <= activeColumnStep - 1) {\n          var _updatedHeaderItems4, _updatedHeaderItems4$;\n\n          tmpWidth = tmpWidth + ((_updatedHeaderItems4 = updatedHeaderItems[activeRowStep - 1]) === null || _updatedHeaderItems4 === void 0 ? void 0 : (_updatedHeaderItems4$ = _updatedHeaderItems4.items[i]) === null || _updatedHeaderItems4$ === void 0 ? void 0 : _updatedHeaderItems4$.width);\n        }\n      }\n\n      const totalWidth = tmpWidth + ((_updatedHeaderItems5 = updatedHeaderItems[activeRowStep - 1]) === null || _updatedHeaderItems5 === void 0 ? void 0 : (_updatedHeaderItems5$ = _updatedHeaderItems5.items[activeColumnStep]) === null || _updatedHeaderItems5$ === void 0 ? void 0 : _updatedHeaderItems5$.width);\n      setActiveColumnWidth((_updatedHeaderItems6 = updatedHeaderItems[activeRowStep - 1]) === null || _updatedHeaderItems6 === void 0 ? void 0 : (_updatedHeaderItems6$ = _updatedHeaderItems6.items[activeColumnStep]) === null || _updatedHeaderItems6$ === void 0 ? void 0 : _updatedHeaderItems6$.width);\n      setSliderWidth(totalWidth);\n      setConsumeWidth(tmpWidth);\n    }\n\n    setHeaderItems(updatedHeaderItems);\n  };\n\n  const handleBackColumn = () => {\n    var _headerItems4, _headerItems4$items, _headerItems5, _headerItems5$items;\n\n    setActiveColumnStep(previousStep => previousStep - 1);\n    let tmpWidth = 0;\n\n    for (let i = 0; i < ((_headerItems2 = headerItems[activeRowStep - 1]) === null || _headerItems2 === void 0 ? void 0 : (_headerItems2$items = _headerItems2.items) === null || _headerItems2$items === void 0 ? void 0 : _headerItems2$items.length); i++) {\n      var _headerItems2, _headerItems2$items;\n\n      if (i < activeColumnStep - 2) {\n        var _headerItems3, _headerItems3$items;\n\n        tmpWidth = tmpWidth + ((_headerItems3 = headerItems[activeRowStep - 1]) === null || _headerItems3 === void 0 ? void 0 : (_headerItems3$items = _headerItems3.items[activeColumnStep - 2]) === null || _headerItems3$items === void 0 ? void 0 : _headerItems3$items.width);\n      }\n    }\n\n    const totalWidth = tmpWidth + ((_headerItems4 = headerItems[activeRowStep - 1]) === null || _headerItems4 === void 0 ? void 0 : (_headerItems4$items = _headerItems4.items[activeColumnStep - 2]) === null || _headerItems4$items === void 0 ? void 0 : _headerItems4$items.width);\n    setSliderWidth(totalWidth);\n    setConsumeWidth(tmpWidth);\n    setActiveColumnWidth((_headerItems5 = headerItems[activeRowStep - 1]) === null || _headerItems5 === void 0 ? void 0 : (_headerItems5$items = _headerItems5.items[activeColumnStep - 2]) === null || _headerItems5$items === void 0 ? void 0 : _headerItems5$items.width);\n  };\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 553,\n      columnNumber: 13\n    }\n  }, __jsx(IconButton, {\n    \"aria-label\": \"Back\",\n    color: \"primary\",\n    disabled: activeRowStep === 0,\n    onClick: handleBackRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 17\n    }\n  }, __jsx(ArrowBackIosIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 21\n    }\n  })), __jsx(Stepper, {\n    style: {\n      width: '100%'\n    },\n    activeStep: activeRowStep,\n    connector: __jsx(ColorlibConnector, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 88\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 17\n    }\n  }, rowSteps.map((label, index) => {\n    return __jsx(Step, {\n      key: label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 33\n      }\n    }, __jsx(StepLabel, {\n      color: \"secondary\",\n      StepIconComponent: () => getRowStepsIcons(rowSteps, activeRowStep === index, activeRowStep > index, index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 37\n      }\n    }, label));\n  })), __jsx(IconButton, {\n    \"aria-label\": \"Back\",\n    color: \"primary\",\n    disabled: activeRowStep === rowSteps.length - 1,\n    onClick: handleNextRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 17\n    }\n  }, __jsx(ArrowForwardIosIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 21\n    }\n  }))), activeRowStep === 0 && __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 17\n    }\n  }, __jsx(TextField, {\n    label: 'Number of Rows',\n    value: rowNumber,\n    onChange: e => setRowNumber(parseInt(e.target.value)),\n    variant: \"outlined\",\n    type: \"number\",\n    inputProps: {\n      min: \"1\",\n      max: \"3\",\n      step: \"1\"\n    },\n    style: {\n      minWidth: 200,\n      marginLeft: 32\n    },\n    disabled: state.langCode !== state.defaultLang,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 21\n    }\n  })), activeRowStep !== 0 && __jsx(Paper, {\n    className: classes.columnCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 17\n    }\n  }, __jsx(Stepper, {\n    activeStep: activeColumnStep,\n    connector: __jsx(ColorlibConnector, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 71\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 21\n    }\n  }, columnSteps.map((label, index) => {\n    return __jsx(Step, {\n      key: label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 37\n      }\n    }, __jsx(StepLabel, {\n      color: \"secondary\",\n      StepIconComponent: () => getColumnStepsIcons(columnSteps, activeColumnStep === index, activeColumnStep > index, index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 41\n      }\n    }, \" \", label, \" \"));\n  })), activeColumnStep === 0 && __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 631,\n      columnNumber: 25\n    }\n  }, __jsx(TextField, {\n    label: 'Number of Columns',\n    value: colNumber,\n    onChange: e => setColNumber(parseInt(e.target.value)),\n    variant: \"outlined\",\n    type: \"number\",\n    inputProps: {\n      min: \"1\",\n      max: \"3\",\n      step: \"1\"\n    },\n    style: {\n      minWidth: 200,\n      marginLeft: 32\n    },\n    disabled: state.langCode !== state.defaultLang,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 632,\n      columnNumber: 29\n    }\n  })), activeColumnStep > 0 && state.langCode !== state.defaultLang && otherLangHeaderItems.length > 0 && otherLangHeaderItems[activeRowStep - 1].items.map((item, index) => {\n    return activeColumnStep - 1 === index ? __jsx(Container, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 33\n      }\n    }, __jsx(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 650,\n        columnNumber: 37\n      }\n    }, __jsx(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 651,\n        columnNumber: 41\n      }\n    }, __jsx(Button, {\n      variant: \"contained\",\n      size: \"small\",\n      color: \"primary\",\n      \"aria-label\": \"add\",\n      className: classes.actionButton,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 652,\n        columnNumber: 45\n      }\n    }, __jsx(AddCircleIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 49\n      }\n    }), \" ADD\")), __jsx(Grid, {\n      item: true,\n      xs: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 41\n      }\n    }, __jsx(FormControl, {\n      component: \"fieldset\",\n      style: {\n        float: \"right\"\n      },\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 664,\n        columnNumber: 45\n      }\n    }, __jsx(RadioGroup, {\n      \"aria-label\": \"footeritem\",\n      row: true,\n      name: \"footer-item\",\n      value: headerItems[activeRowStep - 1].items[index].alignment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 669,\n        columnNumber: 49\n      }\n    }, __jsx(FormControlLabel, {\n      value: 'left',\n      control: __jsx(Radio, {\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 677,\n          columnNumber: 66\n        }\n      }),\n      label: \"Align Left\",\n      labelPlacement: \"start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 675,\n        columnNumber: 53\n      }\n    }), __jsx(FormControlLabel, {\n      value: 'center',\n      control: __jsx(Radio, {\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 683,\n          columnNumber: 66\n        }\n      }),\n      label: \"Alight Center\",\n      labelPlacement: \"start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 53\n      }\n    }), __jsx(FormControlLabel, {\n      value: 'right',\n      control: __jsx(Radio, {\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 689,\n          columnNumber: 66\n        }\n      }),\n      label: \"Alight Right\",\n      labelPlacement: \"start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 687,\n        columnNumber: 53\n      }\n    }))))), item.value.length > 0 && item.value.map((val, i) => {\n      return __jsx(Grid, {\n        container: true,\n        key: i,\n        style: {\n          marginTop: 8\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 700,\n          columnNumber: 49\n        }\n      }, __jsx(Grid, {\n        item: true,\n        xs: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 701,\n          columnNumber: 53\n        }\n      }, __jsx(FormControl, {\n        disabled: state.langCode !== state.defaultLang,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 57\n        }\n      }, __jsx(InputLabel, {\n        htmlFor: \"age-native-simple\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 703,\n          columnNumber: 61\n        }\n      }, \"Sub Item\"), __jsx(Select, {\n        native: true,\n        name: \"type\",\n        variant: 'outlined',\n        value: headerItems[activeRowStep - 1].items[index].value[i].type,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 704,\n          columnNumber: 61\n        }\n      }, __jsx(\"option\", {\n        style: {\n          display: 'none'\n        },\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 710,\n          columnNumber: 65\n        }\n      }), options.length > 0 && options.map(option => {\n        return __jsx(\"option\", {\n          key: option.id,\n          value: option.code,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 714,\n            columnNumber: 77\n          }\n        }, option.description);\n      })))), __jsx(Grid, {\n        item: true,\n        xs: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 723,\n          columnNumber: 53\n        }\n      }, headerItems[activeRowStep - 1].items[index].value[i].type === 'logo' && __jsx(Paper, {\n        style: {\n          border: `2px solid ${COLORS.secondary}`\n        },\n        className: state.langCode !== state.defaultLang ? classes.disabledEvent : '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 726,\n          columnNumber: 61\n        }\n      }, __jsx(Grid, {\n        container: true,\n        justify: 'center',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 729,\n          columnNumber: 65\n        }\n      }, __jsx(Grid, {\n        item: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 730,\n          columnNumber: 69\n        }\n      }, __jsx(\"div\", {\n        style: {\n          backgroundImage: `url(${GENERAL_SETTINGS.STATIC_URL + state.logoUrl})`,\n          backgroundSize: 'contain',\n          backgroundRepeat: 'no-repeat',\n          backgroundPosition: \"center\",\n          height: 200,\n          width: 200,\n          marginTop: 16\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 731,\n          columnNumber: 73\n        }\n      })))), headerItems[activeRowStep - 1].items[index].value[i].type === 'external-link' && __jsx(Grid, {\n        container: true,\n        justify: 'flex-start',\n        spacing: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 750,\n          columnNumber: 61\n        }\n      }, __jsx(Grid, {\n        item: true,\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 751,\n          columnNumber: 65\n        }\n      }, __jsx(TextField, {\n        label: 'Title',\n        variant: \"outlined\",\n        fullWidth: true,\n        value: val.value,\n        onChange: e => {\n          console.log(e.target.value);\n          const updatedHeaderItems = [...otherLangHeaderItems];\n          updatedHeaderItems[activeRowStep - 1].items[index].value[i].link = e.target.value;\n          setOtherLangHeaderItems(updatedHeaderItems);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 752,\n          columnNumber: 69\n        }\n      })), __jsx(Grid, {\n        item: true,\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 765,\n          columnNumber: 65\n        }\n      }, __jsx(TextField, {\n        label: 'Link',\n        variant: \"outlined\",\n        fullWidth: true,\n        value: val.link || headerItems[activeRowStep - 1].items[index].value[i].value.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 766,\n          columnNumber: 69\n        }\n      }))), (headerItems[activeRowStep - 1].items[index].value[i].type === 'social-link' || headerItems[activeRowStep - 1].items[index].value[i].type === 'button' || headerItems[activeRowStep - 1].items[index].value[i].type === 'address') && __jsx(Grid, {\n        container: true,\n        justify: 'flex-start',\n        spacing: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 778,\n          columnNumber: 141\n        }\n      }, __jsx(Grid, {\n        item: true,\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 782,\n          columnNumber: 65\n        }\n      }, __jsx(TextField, {\n        label: 'Title',\n        variant: \"outlined\",\n        fullWidth: true,\n        value: val.value,\n        onChange: e => {\n          const updatedHeaderItems = [...otherLangHeaderItems];\n          updatedHeaderItems[activeRowStep - 1].items[index].value[i].value = e.target.value;\n          setOtherLangHeaderItems(updatedHeaderItems);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 783,\n          columnNumber: 69\n        }\n      })), __jsx(Grid, {\n        item: true,\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 795,\n          columnNumber: 65\n        }\n      }, __jsx(TextField, {\n        label: 'Link',\n        variant: \"outlined\",\n        fullWidth: true,\n        value: headerItems[activeRowStep - 1].items[index].value[i].value.value,\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 796,\n          columnNumber: 69\n        }\n      }))), headerItems[activeRowStep - 1].items[index].value[i].type === 'internal-link' && __jsx(Grid, {\n        container: true,\n        justify: 'flex-start',\n        spacing: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 807,\n          columnNumber: 142\n        }\n      }, __jsx(Grid, {\n        item: true,\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 811,\n          columnNumber: 65\n        }\n      }, __jsx(TextField, {\n        label: 'Title',\n        variant: \"outlined\",\n        fullWidth: true,\n        value: val.value,\n        onChange: e => {\n          const updatedHeaderItems = [...otherLangHeaderItems];\n          updatedHeaderItems[activeRowStep - 1].items[index].value[i].value = e.target.value;\n          setOtherLangHeaderItems(updatedHeaderItems);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 812,\n          columnNumber: 69\n        }\n      })), __jsx(Grid, {\n        item: true,\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 824,\n          columnNumber: 65\n        }\n      }, __jsx(FormControl, {\n        fullWidth: true,\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 825,\n          columnNumber: 69\n        }\n      }, __jsx(InputLabel, {\n        shrink: headerItems[activeRowStep - 1].items[index].value[i].value.value ? true : false,\n        style: {\n          marginLeft: 16\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 826,\n          columnNumber: 73\n        }\n      }, \"Web Page\"), __jsx(Select, {\n        native: true,\n        value: headerItems[activeRowStep - 1].items[index].value[i].value.value,\n        variant: \"outlined\",\n        onChange: e => {\n          const updatedHeaderItems = [...headerItems];\n          updatedHeaderItems[activeRowStep - 1].items[index].value[i].value['value'] = e.target.value;\n          setHeaderItems(updatedHeaderItems);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 832,\n          columnNumber: 73\n        }\n      }, __jsx(\"option\", {\n        style: {\n          display: 'none'\n        },\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 842,\n          columnNumber: 77\n        }\n      }), webPages.length > 0 && webPages.map((page, index) => {\n        return __jsx(\"option\", {\n          value: page.gid,\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 846,\n            columnNumber: 89\n          }\n        }, \" \", page.code, \" \");\n      }))))), headerItems[activeRowStep - 1].items[index].value[i].type === 'email' && __jsx(TextField, {\n        label: 'Value',\n        variant: \"outlined\",\n        fullWidth: true,\n        value: headerItems[activeRowStep - 1].items[index].value[i].value,\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 856,\n          columnNumber: 134\n        }\n      }), headerItems[activeRowStep - 1].items[index].value[i].type === 'phone' && __jsx(TextField, {\n        label: 'Value',\n        variant: \"outlined\",\n        fullWidth: true,\n        value: val.value,\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 865,\n          columnNumber: 134\n        }\n      })));\n    })) : null;\n  }), activeColumnStep > 0 && state.langCode === state.defaultLang && headerItems.length > 0 && headerItems[activeRowStep - 1].items.map((item, index) => {\n    var _headerItems$items2;\n\n    return activeColumnStep - 1 === index ? __jsx(Container, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 884,\n        columnNumber: 71\n      }\n    }, __jsx(CustomSlider, {\n      marks: marks,\n      value: sliderWidth,\n      className: ((_headerItems$items2 = headerItems[activeRowStep - 1].items) === null || _headerItems$items2 === void 0 ? void 0 : _headerItems$items2.length) - 1 === index ? classes.disabledEvent : '',\n      onChange: (e, value) => {\n        if (value > consumeWidth) {\n          setActiveColumnWidth(value - consumeWidth);\n          setSliderWidth(value);\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 885,\n        columnNumber: 33\n      }\n    }), __jsx(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 896,\n        columnNumber: 33\n      }\n    }, __jsx(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 897,\n        columnNumber: 37\n      }\n    }, __jsx(Button, {\n      onClick: () => {\n        const updatedHeaderItems = [...headerItems];\n        const updatedOtherHeaderItems = [...otherLangHeaderItems];\n        updatedHeaderItems[activeRowStep - 1].items[index].value.push({\n          id: `value-${index + 1}`,\n          type: 'external-link',\n          value: {\n            title: '',\n            value: ''\n          }\n        });\n        setHeaderItems(updatedHeaderItems);\n\n        if (updatedOtherHeaderItems && updatedOtherHeaderItems.length > 0 && updatedOtherHeaderItems[activeRowStep - 1] && updatedOtherHeaderItems[activeRowStep - 1].items && updatedOtherHeaderItems[activeRowStep - 1].items.length > 0 && updatedOtherHeaderItems[activeRowStep - 1].items[index] && updatedOtherHeaderItems[activeRowStep - 1].items[index].value) {\n          updatedOtherHeaderItems[activeRowStep - 1].items[index].value.push({\n            value: ''\n          });\n          setOtherLangHeaderItems(updatedOtherHeaderItems);\n        }\n      },\n      variant: \"contained\",\n      size: \"small\",\n      color: \"primary\",\n      \"aria-label\": \"add\",\n      className: classes.actionButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 898,\n        columnNumber: 41\n      }\n    }, __jsx(AddCircleIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 929,\n        columnNumber: 45\n      }\n    }), \" ADD\")), __jsx(Grid, {\n      item: true,\n      xs: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 932,\n        columnNumber: 37\n      }\n    }, __jsx(FormControl, {\n      component: \"fieldset\",\n      style: {\n        float: \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 933,\n        columnNumber: 41\n      }\n    }, __jsx(RadioGroup, {\n      \"aria-label\": \"footeritem\",\n      row: true,\n      name: \"footer-item\",\n      value: item.alignment,\n      onChange: e => {\n        const updatedHeaderItems = [...headerItems];\n        updatedHeaderItems[activeRowStep - 1].items[index].alignment = e.target.value;\n        setHeaderItems(updatedHeaderItems);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 937,\n        columnNumber: 45\n      }\n    }, __jsx(FormControlLabel, {\n      value: 'left',\n      control: __jsx(Radio, {\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 950,\n          columnNumber: 62\n        }\n      }),\n      label: \"Align Left\",\n      labelPlacement: \"start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 948,\n        columnNumber: 49\n      }\n    }), __jsx(FormControlLabel, {\n      value: 'center',\n      control: __jsx(Radio, {\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 956,\n          columnNumber: 62\n        }\n      }),\n      label: \"Alight Center\",\n      labelPlacement: \"start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 954,\n        columnNumber: 49\n      }\n    }), __jsx(FormControlLabel, {\n      value: 'right',\n      control: __jsx(Radio, {\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 962,\n          columnNumber: 62\n        }\n      }),\n      label: \"Alight Right\",\n      labelPlacement: \"start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 960,\n        columnNumber: 49\n      }\n    }))))), item.value.length > 0 && item.value.map((val, i) => {\n      return __jsx(Grid, {\n        container: true,\n        key: i,\n        style: {\n          marginTop: 8\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 973,\n          columnNumber: 45\n        }\n      }, __jsx(Grid, {\n        item: true,\n        xs: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 974,\n          columnNumber: 49\n        }\n      }, __jsx(IconButton, {\n        \"aria-label\": \"Delete item\",\n        color: \"primary\",\n        onClick: () => {\n          const updatedHeaderItems = [...headerItems];\n          const tmp = updatedHeaderItems[activeRowStep - 1].items[index].value[i + 1];\n          updatedHeaderItems[activeRowStep - 1].items[index].value[i + 1] = updatedHeaderItems[activeRowStep - 1].items[index].value[i];\n          updatedHeaderItems[activeRowStep - 1].items[index].value[i] = tmp;\n          setHeaderItems(updatedHeaderItems);\n        },\n        disabled: item.value.length === 1 || i === item.value.length - 1,\n        style: {\n          outline: 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 975,\n          columnNumber: 53\n        }\n      }, __jsx(ArrowDownwardIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 988,\n          columnNumber: 57\n        }\n      })), __jsx(IconButton, {\n        \"aria-label\": \"Delete item\",\n        color: \"primary\",\n        onClick: () => {\n          const updatedHeaderItems = [...headerItems];\n          const tmp = updatedHeaderItems[activeRowStep - 1].items[index].value[i - 1];\n          updatedHeaderItems[activeRowStep - 1].items[index].value[i - 1] = updatedHeaderItems[activeRowStep - 1].items[index].value[i];\n          updatedHeaderItems[activeRowStep - 1].items[index].value[i] = tmp;\n          setHeaderItems(updatedHeaderItems);\n        },\n        disabled: item.value.length === 1 || i === 0,\n        style: {\n          outline: 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 990,\n          columnNumber: 53\n        }\n      }, __jsx(ArrowUpwardIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1003,\n          columnNumber: 57\n        }\n      })), __jsx(FormControl, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1005,\n          columnNumber: 53\n        }\n      }, __jsx(InputLabel, {\n        htmlFor: \"age-native-simple\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1006,\n          columnNumber: 57\n        }\n      }, \"Sub Item\"), __jsx(Select, {\n        native: true,\n        name: \"type\",\n        variant: 'outlined',\n        value: val.type,\n        onChange: e => {\n          const updatedHeaderItems = [...headerItems];\n\n          if (e.target.value === 'social-link' || e.target.value === 'external-link' || e.target.value === 'internal-link' || e.target.value === 'button' || e.target.value === 'address') {\n            updatedHeaderItems[activeRowStep - 1].items[index].value[i] = {\n              id: val.id,\n              type: e.target.value,\n              value: {\n                title: '',\n                value: ''\n              }\n            };\n          }\n\n          if (e.target.value === 'phone' || e.target.value === 'email') {\n            updatedHeaderItems[activeRowStep - 1].items[index].value[i] = {\n              id: val.id,\n              type: e.target.value,\n              value: ''\n            };\n          }\n\n          if (e.target.value === 'logo') {\n            updatedHeaderItems[activeRowStep - 1].items[index].value[i] = {\n              id: val.id,\n              type: e.target.value,\n              value: state.logoUrl\n            };\n          }\n\n          setHeaderItems(updatedHeaderItems);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1007,\n          columnNumber: 57\n        }\n      }, __jsx(\"option\", {\n        style: {\n          display: 'none'\n        },\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1045,\n          columnNumber: 61\n        }\n      }), options.length > 0 && options.map(option => {\n        return __jsx(\"option\", {\n          key: option.id,\n          value: option.code,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1049,\n            columnNumber: 73\n          }\n        }, option.description);\n      })))), __jsx(Grid, {\n        item: true,\n        xs: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1058,\n          columnNumber: 49\n        }\n      }, val.type === 'logo' && __jsx(Paper, {\n        style: {\n          border: `2px solid ${COLORS.secondary}`\n        },\n        className: state.langCode !== state.defaultLang ? classes.disabledEvent : '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1061,\n          columnNumber: 57\n        }\n      }, __jsx(Grid, {\n        container: true,\n        justify: 'center',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1064,\n          columnNumber: 61\n        }\n      }, __jsx(Grid, {\n        item: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1065,\n          columnNumber: 65\n        }\n      }, __jsx(\"div\", {\n        style: {\n          backgroundImage: `url(${GENERAL_SETTINGS.STATIC_URL + state.logoUrl})`,\n          backgroundSize: 'contain',\n          backgroundRepeat: 'no-repeat',\n          backgroundPosition: \"center\",\n          height: 200,\n          width: 200,\n          marginTop: 16\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1066,\n          columnNumber: 69\n        }\n      })))), (val.type === 'social-link' || val.type === 'external-link' || val.type === 'button' || val.type === 'address') && __jsx(Grid, {\n        container: true,\n        justify: 'flex-start',\n        spacing: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1085,\n          columnNumber: 113\n        }\n      }, __jsx(Grid, {\n        item: true,\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1089,\n          columnNumber: 61\n        }\n      }, __jsx(TextField, {\n        label: 'Title',\n        variant: \"outlined\",\n        fullWidth: true,\n        value: val.value.title,\n        onChange: e => {\n          const updatedHeaderItems = [...headerItems];\n          updatedHeaderItems[activeRowStep - 1].items[index].value[i].value['title'] = e.target.value;\n          setHeaderItems(updatedHeaderItems);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1090,\n          columnNumber: 65\n        }\n      })), __jsx(Grid, {\n        item: true,\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1102,\n          columnNumber: 61\n        }\n      }, __jsx(TextField, {\n        label: 'Link',\n        variant: \"outlined\",\n        fullWidth: true,\n        value: val.value.value,\n        error: !validator.isURL(val.value.value) && val.value.value ? true : false,\n        onChange: e => {\n          const updatedHeaderItems = [...headerItems];\n          updatedHeaderItems[activeRowStep - 1].items[index].value[i].value['value'] = e.target.value;\n          setHeaderItems(updatedHeaderItems);\n        },\n        disabled: state.langCode !== state.defaultLang,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1103,\n          columnNumber: 65\n        }\n      }))), val.type === 'internal-link' && __jsx(Grid, {\n        container: true,\n        justify: 'flex-start',\n        spacing: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1120,\n          columnNumber: 89\n        }\n      }, __jsx(Grid, {\n        item: true,\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1124,\n          columnNumber: 61\n        }\n      }, __jsx(TextField, {\n        label: 'Title',\n        variant: \"outlined\",\n        fullWidth: true,\n        value: val.value.title,\n        onChange: e => {\n          const updatedHeaderItems = [...headerItems];\n          updatedHeaderItems[activeRowStep - 1].items[index].value[i].value['title'] = e.target.value;\n          setHeaderItems(updatedHeaderItems);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1125,\n          columnNumber: 65\n        }\n      })), __jsx(Grid, {\n        item: true,\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1137,\n          columnNumber: 61\n        }\n      }, __jsx(FormControl, {\n        fullWidth: true,\n        disabled: state.langCode !== state.defaultLang,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1138,\n          columnNumber: 65\n        }\n      }, __jsx(InputLabel, {\n        shrink: val.value.value ? true : false,\n        style: {\n          marginLeft: 16\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1139,\n          columnNumber: 69\n        }\n      }, \"Web Page\"), __jsx(Select, {\n        native: true,\n        value: val.value.value,\n        variant: \"outlined\",\n        onChange: e => {\n          const updatedHeaderItems = [...headerItems];\n          updatedHeaderItems[activeRowStep - 1].items[index].value[i].value['value'] = e.target.value;\n          setHeaderItems(updatedHeaderItems);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1145,\n          columnNumber: 69\n        }\n      }, __jsx(\"option\", {\n        style: {\n          display: 'none'\n        },\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1155,\n          columnNumber: 73\n        }\n      }), webPages.length > 0 && webPages.map((page, index) => {\n        return __jsx(\"option\", {\n          value: page.gid,\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1159,\n            columnNumber: 85\n          }\n        }, \" \", page.code, \" \");\n      }))))), val.type === 'email' && __jsx(TextField, {\n        label: 'Value',\n        variant: \"outlined\",\n        fullWidth: true,\n        value: val.value,\n        disabled: state.langCode !== state.defaultLang,\n        onChange: e => {\n          const updatedHeaderItems = [...headerItems];\n          updatedHeaderItems[activeRowStep - 1].items[index].value[i].value = e.target.value;\n          setHeaderItems(updatedHeaderItems);\n        },\n        error: val.value && validator.isEmail(val.value) === false ? true : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1169,\n          columnNumber: 81\n        }\n      }), val.type === 'phone' && __jsx(TextField, {\n        label: 'Value',\n        variant: \"outlined\",\n        fullWidth: true,\n        value: val.value,\n        disabled: state.langCode !== state.defaultLang,\n        onChange: e => {\n          const updatedHeaderItems = [...headerItems];\n          updatedHeaderItems[activeRowStep - 1].items[index].value[i].value = e.target.value;\n          setHeaderItems(updatedHeaderItems);\n        },\n        error: val.value && validator.isMobilePhone(val.value) === false ? true : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1184,\n          columnNumber: 81\n        }\n      })), __jsx(Grid, {\n        item: true,\n        xs: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1199,\n          columnNumber: 49\n        }\n      }, __jsx(IconButton, {\n        \"aria-label\": \"Delete item\",\n        color: \"primary\",\n        onClick: () => {\n          const updatedHeaderItems = [...headerItems];\n          updatedHeaderItems[activeRowStep - 1].items[index].value.splice(i, 1);\n          setHeaderItems(updatedHeaderItems);\n        },\n        disabled: item.value.length === 1,\n        className: state.langCode !== state.defaultLang ? classes.disabledEvent : '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1200,\n          columnNumber: 53\n        }\n      }, __jsx(CancelIcon, {\n        style: {\n          color: item.value.length === 1 ? 'grey' : 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1211,\n          columnNumber: 57\n        }\n      }))));\n    })) : null;\n  }), __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"flex-start\",\n    alignItems: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1221,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: classes.actionButtons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1222,\n      columnNumber: 25\n    }\n  }, activeColumnStep !== 0 && __jsx(Button, {\n    onClick: handleBackColumn,\n    variant: \"contained\",\n    size: \"small\",\n    \"aria-label\": \"add\",\n    className: classes.actionButton,\n    style: {\n      marginRight: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1225,\n      columnNumber: 33\n    }\n  }, \"BACK\"), activeColumnStep !== columnSteps.length - 1 && __jsx(Button, {\n    onClick: handleNextColumn,\n    variant: \"contained\",\n    size: \"small\",\n    color: \"primary\",\n    \"aria-label\": \"add\",\n    className: classes.actionButton,\n    style: {\n      marginRight: 24\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1237,\n      columnNumber: 80\n    }\n  }, \"NEXT\")))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    state: state.formReducer.pageBuilder\n  };\n};\n\nexport default connect(mapStateToProps)(EditHeader);","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/components/website/header/EditHeader.js"],"names":["React","useState","useEffect","useContext","makeStyles","TextField","Button","Stepper","Step","StepLabel","Grid","CreateIcon","StepConnector","ReceiptIcon","Paper","Container","AddCircleIcon","FormControl","RadioGroup","FormControlLabel","Radio","InputLabel","Select","validator","IconButton","CancelIcon","ArrowBackIosIcon","ArrowForwardIosIcon","ArrowUpwardIcon","ArrowDownwardIcon","Slider","withStyles","connect","clsx","COLORS","WebCmsGlobal","ViewList","OREST_ENDPOINT","useRouter","useStyles","theme","root","margin","spacing","width","disabledDiv","pointerEvents","opacity","actionButtons","display","justifyContent","marginTop","marginBottom","actionButton","marginLeft","borderRadius","disabledEvent","icon","cursor","height","columnCard","overflow","border","secondary","useColorStepIconStyle","backgroundColor","zIndex","color","alignItems","iconSize","active","boxShadow","completed","primary","ColorlibConnector","alternativeLabel","top","left","right","background","line","getRowStepsIcons","itemCount","isActive","isCompleted","step","icon_classes","icons","getColumnStepsIcons","marks","value","label","iOSBoxShadow","CustomSlider","padding","thumb","valueLabel","track","rail","mark","markActive","EditHeader","props","state","onEditHeader","classes","rowNumber","setRowNumber","website","header","items","length","colNumber","setColNumber","rowSteps","setRowSteps","columnSteps","setColumnSteps","activeRowStep","setActiveRowStep","activeColumnStep","setActiveColumnStep","headerItems","setHeaderItems","otherLangHeaderItems","setOtherLangHeaderItems","webPages","setWebPages","consumeWidth","setConsumeWidth","sliderWidth","setSliderWidth","activeColumnWidth","setActiveColumnWidth","options","id","code","description","GENERAL_SETTINGS","token","router","companyId","query","companyID","authToken","apiUrl","OREST_URL","endpoint","RAFILE","params","hotelrefno","Number","then","res","status","data","updatedWebPages","pages","map","page","webPage","find","x","gid","push","Object","keys","langsFile","langCode","updatedRowsSteps","i","updatedHeaderItems","updatedItems","alignment","type","title","updatedColSteps","defaultLang","tpl","handleNextRow","previousStep","handleBackRow","handleNextColumn","lastColWidth","j","tmpWidth","totalWidth","handleBackColumn","index","e","parseInt","target","min","max","minWidth","item","float","val","option","backgroundImage","STATIC_URL","logoUrl","backgroundSize","backgroundRepeat","backgroundPosition","console","log","link","updatedOtherHeaderItems","tmp","outline","isURL","isEmail","isMobilePhone","splice","marginRight","mapStateToProps","formReducer","pageBuilder"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext} from 'react';\n//material imports\nimport {makeStyles} from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Grid from \"@material-ui/core/Grid\";\nimport CreateIcon from '@material-ui/icons/Create';\nimport StepConnector from '@material-ui/core/StepConnector';\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Container from \"@material-ui/core/Container\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport validator from \"validator\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport Slider from '@material-ui/core/Slider';\nimport { withStyles } from '@material-ui/core/styles'\n\nimport { connect } from 'react-redux';\nimport clsx from \"clsx\";\nimport {COLORS} from \"../../../constants\";\nimport WebCmsGlobal from \"../../../../../webcms-global\";\nimport {ViewList} from \"@webcms/orest\";\nimport {OREST_ENDPOINT} from \"../../../../../../model/orest/constants\";\nimport {useRouter} from \"next/router\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n            width: 200,\n        },\n        disabledDiv: {\n            pointerEvents: \"none\",\n            opacity: 0.5\n        }\n    },\n    actionButtons: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2)\n    },\n    actionButton: {\n        marginLeft: theme.spacing(1),\n        borderRadius: 20,\n    },\n    disabledEvent: {\n        pointerEvents: \"none\",\n        opacity: 0.5\n    },\n    icon: {\n        cursor: 'pointer',\n        width: '100%',\n        height: '100%',\n        opacity: 0.3,\n    },\n    columnCard: {\n        height: 400,\n        overflow: 'auto',\n        border: `3px solid ${COLORS.secondary}`\n    }\n}));\n\nconst useColorStepIconStyle = makeStyles(() => ({\n    root: {\n        backgroundColor: '#ccc',\n        zIndex: 1,\n        color: '#fff',\n        width: 50,\n        height: 50,\n        display: 'flex',\n        borderRadius: '50%',\n        justifyContent: 'center',\n        alignItems: 'center',\n        '& img': {\n            width: 35,\n        },\n    },\n    iconSize: {\n        height: 30,\n        width: 30,\n    },\n    active: {\n        backgroundColor: COLORS?.secondary,\n        boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)',\n    },\n    completed: {\n        backgroundColor: COLORS?.primary,\n        color: '#fff',\n    },\n}));\n\nconst ColorlibConnector = withStyles({\n    alternativeLabel: {\n        top: 30,\n        left: 'calc(-50% + 10px)',\n        right: 'calc(50% + 10px)',\n    },\n    active: {\n        '& $line': {\n            background: 'transparent linear-gradient(270deg, #269DD4 0%, #0F4571 100%) 0% 0% no-repeat padding-box',\n        },\n    },\n    completed: {\n        '& $line': {\n            backgroundColor: COLORS.primary,\n        },\n    },\n    line: {\n        height: 4,\n        border: 0,\n        backgroundColor: '#eaeaf0',\n        borderRadius: 1,\n    },\n})(StepConnector)\n\nconst getRowStepsIcons = (itemCount, isActive, isCompleted, step) => {\n    const icon_classes = useColorStepIconStyle()\n    let icons = {}\n    switch (itemCount) {\n        case 1:\n            icons = {\n                0: <ReceiptIcon className={icon_classes.iconSize} />,\n                1: <CreateIcon className={icon_classes.iconSize} />,\n            }\n            break\n        case 2:\n            icons = {\n                0: <ReceiptIcon className={icon_classes.iconSize} />,\n                1: <CreateIcon className={icon_classes.iconSize} />,\n                2: <CreateIcon className={icon_classes.iconSize} />,\n            }\n            break\n        case 3:\n            icons = {\n                0: <ReceiptIcon className={icon_classes.iconSize} />,\n                1: <CreateIcon className={icon_classes.iconSize} />,\n                2: <CreateIcon className={icon_classes.iconSize} />,\n                3: <CreateIcon className={icon_classes.iconSize} />,\n            }\n            break\n        default:\n            icons = {\n                0: <ReceiptIcon className={icon_classes.iconSize} />,\n                1: <CreateIcon className={icon_classes.iconSize} />,\n                2: <CreateIcon className={icon_classes.iconSize} />,\n                3: <CreateIcon className={icon_classes.iconSize} />,\n            }\n            break\n    }\n\n    return (\n        <div\n            className={clsx(icon_classes.root, {\n                [icon_classes.active]: isActive,\n                [icon_classes.completed]: isCompleted,\n            })}\n        >\n            {icons[step]}\n        </div>\n    )\n}\n\nconst getColumnStepsIcons = (itemCount, isActive, isCompleted, step) => {\n    const icon_classes = useColorStepIconStyle()\n    let icons = {}\n    switch (itemCount) {\n        case 1:\n            icons = {\n                0: <ReceiptIcon className={icon_classes.iconSize} />,\n                1: <CreateIcon className={icon_classes.iconSize} />,\n            }\n            break\n        case 2:\n            icons = {\n                0: <ReceiptIcon className={icon_classes.iconSize} />,\n                1: <CreateIcon className={icon_classes.iconSize} />,\n                2: <CreateIcon className={icon_classes.iconSize} />,\n            }\n            break\n        case 3:\n            icons = {\n                0: <ReceiptIcon className={icon_classes.iconSize} />,\n                1: <CreateIcon className={icon_classes.iconSize} />,\n                2: <CreateIcon className={icon_classes.iconSize} />,\n                3: <CreateIcon className={icon_classes.iconSize} />,\n            }\n            break\n        case 4:\n            icons = {\n                0: <ReceiptIcon className={icon_classes.iconSize} />,\n                1: <CreateIcon className={icon_classes.iconSize} />,\n                2: <CreateIcon className={icon_classes.iconSize} />,\n                3: <CreateIcon className={icon_classes.iconSize} />,\n                4: <CreateIcon className={icon_classes.iconSize} />,\n            }\n            break\n        case 5:\n            icons = {\n                0: <ReceiptIcon className={icon_classes.iconSize} />,\n                1: <CreateIcon className={icon_classes.iconSize} />,\n                2: <CreateIcon className={icon_classes.iconSize} />,\n                3: <CreateIcon className={icon_classes.iconSize} />,\n                4: <CreateIcon className={icon_classes.iconSize} />,\n                5: <CreateIcon className={icon_classes.iconSize} />,\n            }\n            break\n        default:\n            icons = {\n                0: <ReceiptIcon className={icon_classes.iconSize} />,\n                1: <CreateIcon className={icon_classes.iconSize} />,\n                2: <CreateIcon className={icon_classes.iconSize} />,\n                3: <CreateIcon className={icon_classes.iconSize} />,\n                4: <CreateIcon className={icon_classes.iconSize} />,\n                5: <CreateIcon className={icon_classes.iconSize} />,\n            }\n            break\n    }\n\n    return (\n        <div\n            className={clsx(icon_classes.root, {\n                [icon_classes.active]: isActive,\n                [icon_classes.completed]: isCompleted,\n            })}\n        >\n            {icons[step]}\n        </div>\n    )\n}\n\nconst marks = [{value: 0, label: '0'}, {value: 10, label: '10%'}, {value: 20, label: '20%'}, { value: 30, label: '30%'},\n    {value: 40, label: '40%'}, {value: 50, label: '50%'}, {value: 60, label: '60'}, {value: 70, label: '70%'},\n    {value: 80, label: '80%'}, { value: 90, label: '90%'}, {value: 100, label: '100%'},];\n\nconst iOSBoxShadow =\n    '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.13),0 0 0 1px rgba(0,0,0,0.02)';\n\nconst CustomSlider = withStyles({\n    root: {\n        // color: COLORS.primary,\n        height: 2,\n        padding: '15px 0',\n    },\n    thumb: {\n        height: 28,\n        width: 28,\n        backgroundColor: '#fff',\n        boxShadow: iOSBoxShadow,\n        marginTop: -14,\n        marginLeft: -14,\n        '&:focus, &:hover, &$active': {\n            boxShadow: '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.3),0 0 0 1px rgba(0,0,0,0.02)',\n            // Reset on touch devices, it doesn't add specificity\n            '@media (hover: none)': {\n                boxShadow: iOSBoxShadow,\n            },\n        },\n    },\n    active: {},\n    valueLabel: {\n        left: 'calc(-50% + 11px)',\n        top: -22,\n        '& *': {\n            background: 'transparent',\n            color: '#000',\n        },\n    },\n    track: {\n        height: 2,\n    },\n    rail: {\n        height: 2,\n        opacity: 0.5,\n        backgroundColor: '#bfbfbf',\n    },\n    mark: {\n        backgroundColor: '#bfbfbf',\n        height: 8,\n        width: 1,\n        marginTop: -3,\n    },\n    markActive: {\n        opacity: 1,\n        backgroundColor: 'currentColor',\n    },\n})(Slider)\n\nconst EditHeader = (props) => {\n\n    const { state, onEditHeader } = props;\n    const classes = useStyles();\n    //local states\n    const [rowNumber, setRowNumber] = useState(state.website.header.items.length);\n    const [colNumber, setColNumber] = useState(0);\n    const [rowSteps, setRowSteps] = useState([]);\n    const [columnSteps, setColumnSteps] = useState([]);\n    const [activeRowStep, setActiveRowStep] = useState(0);\n    const [activeColumnStep, setActiveColumnStep] = useState(0);\n    const [headerItems, setHeaderItems] = useState([...state.website.header.items]);\n    const [otherLangHeaderItems, setOtherLangHeaderItems] = useState([]);\n    const [webPages, setWebPages] = useState([]);\n    const [consumeWidth, setConsumeWidth] = useState(0);\n    const [sliderWidth, setSliderWidth] = useState(0);\n    const [activeColumnWidth, setActiveColumnWidth] = useState(0);\n    const options = [\n        {\n            id: 'option-1',\n            code: 'external-link',\n            description: 'External Link'\n        },\n        {\n            id: 'option-2',\n            code: 'internal-link',\n            description: 'Internal Link'\n        },\n        {\n            id: 'option-3',\n            code: 'social-link',\n            description: 'Social Link'\n        },\n        {\n            id: 'option-4',\n            code: 'logo',\n            description: 'Logo'\n        },\n        {\n            id: 'option-5',\n            code: 'address',\n            description: 'Address'\n        },\n        {\n            id: 'option-6',\n            code: 'phone',\n            description: 'Phone'\n        },\n        {\n            id: 'option-7',\n            code: 'email',\n            description: 'Email'\n        },\n        {\n            id: 'option-8',\n            code: 'button',\n            description: 'Button'\n        },\n    ]\n\n    const { GENERAL_SETTINGS, token } = useContext(WebCmsGlobal);\n    const router = useRouter();\n    const companyId = router.query.companyID;\n    const authToken = token || router.query.authToken;\n\n    useEffect(() => {\n        //getting web page from rafile\n        ViewList({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.RAFILE,\n            token: authToken,\n            params: {\n                hotelrefno: Number(companyId),\n                query: `filetype:WEBPAGE`,\n            }\n        }).then(res => {\n            if (res.status === 200 && res.data && res.data.data) {\n                let updatedWebPages = [];\n                if (state.website.pages.length > 0) {\n                    state.website.pages.map(page => {\n                        const webPage = res.data.data.find(x => x.gid === page.gid);\n                        if (webPage) {\n                            updatedWebPages.push(webPage);\n                        }\n                    });\n                }\n                setWebPages(updatedWebPages);\n            }\n        })\n        //set header items for other languages\n        if (Object.keys(state.langsFile).length > 0 && state.langsFile.header && state.langsFile.header[state.langCode]) {\n            setOtherLangHeaderItems([...state.langsFile.header[state.langCode].items]);\n        }\n    }, []);\n\n    useEffect(() => {\n        let updatedRowsSteps = [];\n        for (let i = 0; i <= rowNumber; i ++) {\n            if (i === 0) {\n                updatedRowsSteps.push('No of Rows');\n            } else {\n                updatedRowsSteps.push('Row ' + i);\n            }\n        }\n        setRowSteps(updatedRowsSteps);\n        if (rowNumber < headerItems.length) {\n            const updatedHeaderItems = [...headerItems];\n            updatedHeaderItems.length = rowNumber;\n            setHeaderItems(updatedHeaderItems);\n        }\n        if (rowNumber > headerItems.length) {\n            const updatedItems = headerItems;\n            for (let i = 0; i < rowNumber; i++) {\n                if (!updatedItems[i]) {\n                    updatedItems.push({\n                        id: `row-${headerItems.length + 1}`,\n                        items: [{\n                            id: 'item-1',\n                            alignment: 'left',\n                            value: [{\n                                id: 'value-1',\n                                type: 'external-link',\n                                value: {\n                                    title: '',\n                                    value: ''\n                                }\n                            }]\n                        }]\n                    });\n                    setHeaderItems(updatedItems);\n                }\n            }\n        }\n    }, [rowNumber]);\n\n    useEffect(() => {\n        let updatedColSteps = [];\n        for (let i = 0; i <= colNumber; i ++) {\n            if (i === 0) {\n                updatedColSteps.push('No of Columns');\n            } else {\n                updatedColSteps.push('Column ' + i);\n                // + '(' + headerItems[activeRowStep - 1]?.items[i - 1]?.width + '%)'\n            }\n        }\n        setColumnSteps(updatedColSteps);\n        if (activeRowStep !== 0) {\n            if (colNumber < headerItems[activeRowStep - 1].items.length) {\n                const updatedHeaderItems = [...headerItems];\n                updatedHeaderItems[activeRowStep - 1].items.length = colNumber;\n                setHeaderItems(updatedHeaderItems);\n            }\n            if (colNumber > headerItems[activeRowStep - 1].items.length) {\n                const updatedItems = [...headerItems];\n                for (let i = 0; i < colNumber; i++) {\n                    if (!updatedItems[activeRowStep - 1].items[i]) {\n                        updatedItems[activeRowStep - 1].items.push({\n                            id: 'item-' + i+1,\n                            alignment: 'left',\n                            width: 10,\n                            value: [\n                                {\n                                    id: 'value-1',\n                                    type: 'external-link',\n                                    value: {\n                                        title: '',\n                                        value: ''\n                                    }\n                                }\n                            ]\n                        });\n                        setHeaderItems(updatedItems);\n                    }\n                }\n            }\n        }\n    }, [colNumber]);\n\n    useEffect(() => {\n        if (activeRowStep === rowSteps.length - 1) {\n            if (state.langCode === state.defaultLang) {\n                onEditHeader({\n                    tpl: state.website.header.tpl,\n                    items: headerItems\n                });\n            } else {\n                onEditHeader({\n                    items: otherLangHeaderItems\n                });\n            }\n        }\n    }, [activeRowStep, headerItems])\n\n    const handleNextRow = () => {\n        setActiveRowStep(previousStep => previousStep + 1);\n        setActiveColumnStep(0);\n        setColNumber(headerItems[activeRowStep].items.length);\n        setConsumeWidth(0);\n    }\n\n    const handleBackRow = () => {\n        setActiveRowStep(previousStep => previousStep - 1);\n        activeRowStep > 1 && setColNumber(state.website.header.items[activeRowStep - 2].items.length);\n        setConsumeWidth(0);\n    }\n\n    const handleNextColumn = () => {\n        const updatedHeaderItems = [...headerItems];\n        setActiveColumnStep(previousStep => previousStep + 1);\n        if (updatedHeaderItems[activeRowStep - 1]?.items[activeColumnStep - 1]?.width)\n            updatedHeaderItems[activeRowStep - 1].items[activeColumnStep - 1].width = activeColumnWidth;\n        if (colNumber === activeColumnStep + 1) {\n            let lastColWidth = 0;\n            for (let j = 0; j < updatedHeaderItems[activeRowStep - 1]?.items?.length - 1; j++) {\n                lastColWidth = lastColWidth + updatedHeaderItems[activeRowStep - 1]?.items[j]?.width;\n            }\n            setActiveColumnWidth(100 - lastColWidth);\n            updatedHeaderItems[activeRowStep - 1].items[activeColumnStep].width = 100 - lastColWidth;\n            setSliderWidth(100);\n        } else {\n            let tmpWidth = 0;\n            for (let i = 0; i < headerItems[activeRowStep - 1]?.items?.length; i++) {\n                if (i <= activeColumnStep - 1) {\n                    tmpWidth = tmpWidth + updatedHeaderItems[activeRowStep - 1]?.items[i]?.width;\n                }\n            }\n            const totalWidth = tmpWidth + updatedHeaderItems[activeRowStep - 1]?.items[activeColumnStep]?.width;\n            setActiveColumnWidth(updatedHeaderItems[activeRowStep - 1]?.items[activeColumnStep]?.width)\n            setSliderWidth(totalWidth);\n            setConsumeWidth(tmpWidth);\n        }\n        setHeaderItems(updatedHeaderItems);\n    }\n\n    const handleBackColumn = () => {\n        setActiveColumnStep(previousStep => previousStep - 1);\n        let tmpWidth = 0;\n        for (let i = 0; i < headerItems[activeRowStep - 1]?.items?.length; i++) {\n            if (i < activeColumnStep - 2) {\n                tmpWidth = tmpWidth + headerItems[activeRowStep - 1]?.items[activeColumnStep - 2]?.width;\n            }\n        }\n        const totalWidth = tmpWidth + headerItems[activeRowStep - 1]?.items[activeColumnStep - 2]?.width;\n        setSliderWidth(totalWidth);\n        setConsumeWidth(tmpWidth);\n        setActiveColumnWidth(headerItems[activeRowStep - 1]?.items[activeColumnStep - 2]?.width)\n    }\n\n    return (\n        <React.Fragment>\n            <div style={{display: 'flex', alignItems: 'center'}}>\n                <IconButton\n                    aria-label=\"Back\"\n                    color=\"primary\"\n                    disabled={activeRowStep === 0}\n                    onClick={handleBackRow}\n                >\n                    <ArrowBackIosIcon  />\n                </IconButton>\n                <Stepper style={{width: '100%'}} activeStep={activeRowStep} connector={<ColorlibConnector />}>\n                    {\n                        rowSteps.map((label, index) => {\n                            return (\n                                <Step key={label} >\n                                    <StepLabel\n                                        color=\"secondary\"\n                                        StepIconComponent={() =>\n                                            getRowStepsIcons(rowSteps,\n                                                activeRowStep === index, activeRowStep > index,\n                                                index\n                                            )\n                                        }\n                                    >\n                                        {label}\n                                    </StepLabel>\n                                </Step>\n                            )\n                        })\n                    }\n                </Stepper>\n                <IconButton\n                    aria-label=\"Back\"\n                    color=\"primary\"\n                    disabled={activeRowStep === rowSteps.length - 1 }\n                    onClick={handleNextRow}\n                >\n                    <ArrowForwardIosIcon  />\n                </IconButton>\n            </div>\n            {\n                activeRowStep === 0 &&\n                <Grid container={true}>\n                    <TextField\n                        label={'Number of Rows'}\n                        value={rowNumber}\n                        onChange={(e) => setRowNumber(parseInt(e.target.value))}\n                        variant={\"outlined\"}\n                        type=\"number\"\n                        inputProps={{min: \"1\", max: \"3\", step: \"1\"}}\n                        style={{minWidth: 200, marginLeft: 32}}\n                        disabled={state.langCode !== state.defaultLang}\n                    />\n                </Grid>\n            }\n            {\n                activeRowStep !== 0 &&\n                <Paper className={classes.columnCard}>\n                    <Stepper activeStep={activeColumnStep} connector={<ColorlibConnector />}>\n                        {\n                            columnSteps.map((label, index) => {\n                                return (\n                                    <Step key={label} >\n                                        <StepLabel\n                                            color=\"secondary\"\n                                            StepIconComponent={() =>\n                                                getColumnStepsIcons(columnSteps,\n                                                    activeColumnStep === index, activeColumnStep > index,\n                                                    index\n                                                )\n                                            }\n                                        > {label} </StepLabel>\n                                    </Step>\n                                )\n                            })\n                        }\n                    </Stepper>\n                    {\n                        activeColumnStep === 0 &&\n                        <Grid container={true}>\n                            <TextField\n                                label={'Number of Columns'}\n                                value={colNumber}\n                                onChange={(e) => setColNumber(parseInt(e.target.value))}\n                                variant={\"outlined\"}\n                                type=\"number\"\n                                inputProps={{min: \"1\", max: \"3\", step: \"1\"}}\n                                style={{minWidth: 200, marginLeft: 32}}\n                                disabled={state.langCode !== state.defaultLang}\n                            />\n                        </Grid>\n                    }\n                    {\n                        activeColumnStep > 0 && state.langCode !== state.defaultLang &&\n                        otherLangHeaderItems.length > 0 &&\n                        otherLangHeaderItems[activeRowStep - 1].items.map((item, index) => {\n                            return (activeColumnStep - 1 === index) ?\n                                <Container key={index}>\n                                    <Grid container={true}>\n                                        <Grid item={true} xs={4}>\n                                            <Button\n                                                variant=\"contained\"\n                                                size=\"small\"\n                                                color=\"primary\"\n                                                aria-label=\"add\"\n                                                className={classes.actionButton}\n                                                disabled={true}\n                                            >\n                                                <AddCircleIcon /> ADD\n                                            </Button>\n                                        </Grid>\n                                        <Grid item xs={8}>\n                                            <FormControl\n                                                component=\"fieldset\"\n                                                style={{float: \"right\"}}\n                                                disabled={true}\n                                            >\n                                                <RadioGroup\n                                                    aria-label=\"footeritem\"\n                                                    row\n                                                    name=\"footer-item\"\n                                                    value={headerItems[activeRowStep - 1].items[index].alignment}\n                                                >\n                                                    <FormControlLabel\n                                                        value={'left'}\n                                                        control={<Radio color=\"primary\"/>}\n                                                        label=\"Align Left\"\n                                                        labelPlacement=\"start\"\n                                                    />\n                                                    <FormControlLabel\n                                                        value={'center'}\n                                                        control={<Radio color=\"primary\"/>}\n                                                        label=\"Alight Center\"\n                                                        labelPlacement=\"start\"\n                                                    />\n                                                    <FormControlLabel\n                                                        value={'right'}\n                                                        control={<Radio color=\"primary\"/>}\n                                                        label=\"Alight Right\"\n                                                        labelPlacement=\"start\"\n                                                    />\n                                                </RadioGroup>\n                                            </FormControl>\n                                        </Grid>\n                                    </Grid>\n                                    {\n                                        item.value.length > 0 && item.value.map((val, i) => {\n                                            return(\n                                                <Grid container={true} key={i} style={{marginTop: 8}}>\n                                                    <Grid item xs={2}>\n                                                        <FormControl disabled={state.langCode !== state.defaultLang}>\n                                                            <InputLabel htmlFor=\"age-native-simple\">Sub Item</InputLabel>\n                                                            <Select\n                                                                native\n                                                                name='type'\n                                                                variant={'outlined'}\n                                                                value={headerItems[activeRowStep - 1].items[index].value[i].type}\n                                                            >\n                                                                <option style={{ display: 'none' }} value=''></option>\n                                                                {\n                                                                    options.length > 0 && options.map(option => {\n                                                                        return(\n                                                                            <option key={option.id} value={option.code} >\n                                                                                {option.description}\n                                                                            </option>\n                                                                        )\n                                                                    })\n                                                                }\n                                                            </Select>\n                                                        </FormControl>\n                                                    </Grid>\n                                                    <Grid item xs={8}>\n                                                        {\n                                                            headerItems[activeRowStep - 1].items[index].value[i].type === 'logo' &&\n                                                            <Paper style={{border: `2px solid ${COLORS.secondary}`}}\n                                                                   className={state.langCode !== state.defaultLang ? classes.disabledEvent : ''}\n                                                            >\n                                                                <Grid container={true} justify={'center'}>\n                                                                    <Grid item={true}>\n                                                                        <div\n                                                                            style={{\n                                                                                backgroundImage: `url(${\n                                                                                    GENERAL_SETTINGS.STATIC_URL + state.logoUrl\n                                                                                })`,\n                                                                                backgroundSize: 'contain',\n                                                                                backgroundRepeat: 'no-repeat',\n                                                                                backgroundPosition: \"center\",\n                                                                                height: 200,\n                                                                                width: 200,\n                                                                                marginTop: 16\n                                                                            }}\n                                                                        ></div>\n                                                                    </Grid>\n                                                                </Grid>\n                                                            </Paper>\n                                                        }\n                                                        {\n                                                            (headerItems[activeRowStep - 1].items[index].value[i].type === 'external-link') &&\n                                                            <Grid container={true} justify={'flex-start'} spacing={3}>\n                                                                <Grid item xs={6}>\n                                                                    <TextField\n                                                                        label={'Title'}\n                                                                        variant=\"outlined\"\n                                                                        fullWidth\n                                                                        value={val.value}\n                                                                        onChange={(e) => {\n                                                                            console.log(e.target.value);\n                                                                            const updatedHeaderItems = [...otherLangHeaderItems];\n                                                                            updatedHeaderItems[activeRowStep - 1].items[index].value[i].link = e.target.value;\n                                                                            setOtherLangHeaderItems(updatedHeaderItems);\n                                                                        }}\n                                                                    />\n                                                                </Grid>\n                                                                <Grid item xs={6}>\n                                                                    <TextField\n                                                                        label={'Link'}\n                                                                        variant=\"outlined\"\n                                                                        fullWidth\n                                                                        value={val.link || headerItems[activeRowStep - 1].items[index].value[i].value.value}\n                                                                    />\n                                                                </Grid>\n                                                            </Grid>\n                                                        }\n                                                        {\n                                                            (headerItems[activeRowStep - 1].items[index].value[i].type === 'social-link' ||\n                                                                headerItems[activeRowStep - 1].items[index].value[i].type === 'button' ||\n                                                                headerItems[activeRowStep - 1].items[index].value[i].type === 'address') && <Grid container={true}\n                                                                                                                                                  justify={'flex-start'}\n                                                                                                                                                  spacing={3}\n                                                            >\n                                                                <Grid item xs={6}>\n                                                                    <TextField\n                                                                        label={'Title'}\n                                                                        variant=\"outlined\"\n                                                                        fullWidth\n                                                                        value={val.value}\n                                                                        onChange={(e) => {\n                                                                            const updatedHeaderItems = [...otherLangHeaderItems];\n                                                                            updatedHeaderItems[activeRowStep - 1].items[index].value[i].value = e.target.value;\n                                                                            setOtherLangHeaderItems(updatedHeaderItems);\n                                                                        }}\n                                                                    />\n                                                                </Grid>\n                                                                <Grid item xs={6}>\n                                                                    <TextField\n                                                                        label={'Link'}\n                                                                        variant=\"outlined\"\n                                                                        fullWidth\n                                                                        value={headerItems[activeRowStep - 1].items[index].value[i].value.value}\n                                                                        disabled={true}\n                                                                    />\n                                                                </Grid>\n                                                            </Grid>\n                                                        }\n                                                        {\n                                                            headerItems[activeRowStep - 1].items[index].value[i].type === 'internal-link' && <Grid container={true}\n                                                                                                                                                   justify={'flex-start'}\n                                                                                                                                                   spacing={3}\n                                                            >\n                                                                <Grid item xs={6}>\n                                                                    <TextField\n                                                                        label={'Title'}\n                                                                        variant=\"outlined\"\n                                                                        fullWidth\n                                                                        value={val.value}\n                                                                        onChange={(e) => {\n                                                                            const updatedHeaderItems = [...otherLangHeaderItems];\n                                                                            updatedHeaderItems[activeRowStep - 1].items[index].value[i].value = e.target.value;\n                                                                            setOtherLangHeaderItems(updatedHeaderItems);\n                                                                        }}\n                                                                    />\n                                                                </Grid>\n                                                                <Grid item xs={6}>\n                                                                    <FormControl fullWidth disabled>\n                                                                        <InputLabel\n                                                                            shrink={headerItems[activeRowStep - 1].items[index].value[i].value.value ? true : false}\n                                                                            style={{marginLeft: 16}}\n                                                                        >\n                                                                            Web Page\n                                                                        </InputLabel>\n                                                                        <Select\n                                                                            native\n                                                                            value={headerItems[activeRowStep - 1].items[index].value[i].value.value}\n                                                                            variant={\"outlined\"}\n                                                                            onChange={(e) => {\n                                                                                const updatedHeaderItems = [...headerItems];\n                                                                                updatedHeaderItems[activeRowStep - 1].items[index].value[i].value['value'] = e.target.value;\n                                                                                setHeaderItems(updatedHeaderItems);\n                                                                            }}\n                                                                        >\n                                                                            <option style={{ display: 'none' }} value=''></option>\n                                                                            {\n                                                                                webPages.length > 0 && webPages.map((page, index) => {\n                                                                                    return (\n                                                                                        <option value={page.gid} key={index}> { page.code } </option>\n                                                                                    )\n                                                                                })\n                                                                            }\n                                                                        </Select>\n                                                                    </FormControl>\n                                                                </Grid>\n                                                            </Grid>\n                                                        }\n                                                        {\n                                                            headerItems[activeRowStep - 1].items[index].value[i].type === 'email' && <TextField\n                                                                label={'Value'}\n                                                                variant=\"outlined\"\n                                                                fullWidth\n                                                                value={headerItems[activeRowStep - 1].items[index].value[i].value}\n                                                                disabled={true}\n                                                            />\n                                                        }\n                                                        {\n                                                            headerItems[activeRowStep - 1].items[index].value[i].type === 'phone' && <TextField\n                                                                label={'Value'}\n                                                                variant=\"outlined\"\n                                                                fullWidth\n                                                                value={val.value}\n                                                                disabled={true}\n                                                            />\n                                                        }\n                                                    </Grid>\n                                                </Grid>\n                                            )\n                                        })\n                                    }\n                                </Container> : null\n                        })\n                    }\n                    {\n                        activeColumnStep > 0 && state.langCode === state.defaultLang &&\n                        headerItems.length > 0 && headerItems[activeRowStep - 1].items.map((item, index) => {\n                            return (activeColumnStep - 1 === index) ? <Container key={index}>\n                                <CustomSlider\n                                    marks={marks}\n                                    value={sliderWidth}\n                                    className={headerItems[activeRowStep - 1].items?.length - 1 === index ? classes.disabledEvent : ''}\n                                    onChange={(e, value) => {\n                                        if (value > consumeWidth) {\n                                            setActiveColumnWidth(value - consumeWidth);\n                                            setSliderWidth(value);\n                                        }\n                                    }}\n                                />\n                                <Grid container={true}>\n                                    <Grid item={true} xs={4}>\n                                        <Button\n                                            onClick={() => {\n                                                const updatedHeaderItems = [...headerItems];\n                                                const updatedOtherHeaderItems = [...otherLangHeaderItems];\n                                                updatedHeaderItems[activeRowStep - 1].items[index].value.push({\n                                                    id: `value-${index + 1}`,\n                                                    type: 'external-link',\n                                                    value: {\n                                                        title: '',\n                                                        value: ''\n                                                    }\n                                                });\n                                                setHeaderItems(updatedHeaderItems);\n                                                if (updatedOtherHeaderItems && updatedOtherHeaderItems.length > 0 &&\n                                                    updatedOtherHeaderItems[activeRowStep - 1] &&\n                                                    updatedOtherHeaderItems[activeRowStep - 1].items &&\n                                                    updatedOtherHeaderItems[activeRowStep - 1].items.length > 0 &&\n                                                    updatedOtherHeaderItems[activeRowStep - 1].items[index] &&\n                                                    updatedOtherHeaderItems[activeRowStep - 1].items[index].value) {\n                                                    updatedOtherHeaderItems[activeRowStep - 1].items[index].value.push({\n                                                        value: ''\n                                                    })\n                                                    setOtherLangHeaderItems(updatedOtherHeaderItems);\n                                                }\n                                            }}\n                                            variant=\"contained\"\n                                            size=\"small\"\n                                            color=\"primary\"\n                                            aria-label=\"add\"\n                                            className={classes.actionButton}\n                                        >\n                                            <AddCircleIcon /> ADD\n                                        </Button>\n                                    </Grid>\n                                    <Grid item xs={8}>\n                                        <FormControl\n                                            component=\"fieldset\"\n                                            style={{float: \"right\"}}\n                                        >\n                                            <RadioGroup\n                                                aria-label=\"footeritem\"\n                                                row\n                                                name=\"footer-item\"\n                                                value={item.alignment}\n                                                onChange={(e) => {\n                                                    const updatedHeaderItems = [...headerItems];\n                                                    updatedHeaderItems[activeRowStep - 1].items[index].alignment = e.target.value;\n                                                    setHeaderItems(updatedHeaderItems);\n                                                }}\n                                            >\n                                                <FormControlLabel\n                                                    value={'left'}\n                                                    control={<Radio color=\"primary\"/>}\n                                                    label=\"Align Left\"\n                                                    labelPlacement=\"start\"\n                                                />\n                                                <FormControlLabel\n                                                    value={'center'}\n                                                    control={<Radio color=\"primary\"/>}\n                                                    label=\"Alight Center\"\n                                                    labelPlacement=\"start\"\n                                                />\n                                                <FormControlLabel\n                                                    value={'right'}\n                                                    control={<Radio color=\"primary\"/>}\n                                                    label=\"Alight Right\"\n                                                    labelPlacement=\"start\"\n                                                />\n                                            </RadioGroup>\n                                        </FormControl>\n                                    </Grid>\n                                </Grid>\n                                {\n                                    item.value.length > 0 && item.value.map((val, i) => {\n                                        return(\n                                            <Grid container={true} key={i} style={{marginTop: 8}}>\n                                                <Grid item xs={3}>\n                                                    <IconButton\n                                                        aria-label=\"Delete item\"\n                                                        color=\"primary\"\n                                                        onClick={() => {\n                                                            const updatedHeaderItems = [...headerItems];\n                                                            const tmp = updatedHeaderItems[activeRowStep - 1].items[index].value[i+1]\n                                                            updatedHeaderItems[activeRowStep - 1].items[index].value[i+1] = updatedHeaderItems[activeRowStep - 1].items[index].value[i]\n                                                            updatedHeaderItems[activeRowStep - 1].items[index].value[i] = tmp;\n                                                            setHeaderItems(updatedHeaderItems);\n                                                        }}\n                                                        disabled={item.value.length === 1 || i === item.value.length - 1}\n                                                        style={{outline: 'none'}}\n                                                    >\n                                                        <ArrowDownwardIcon />\n                                                    </IconButton>\n                                                    <IconButton\n                                                        aria-label=\"Delete item\"\n                                                        color=\"primary\"\n                                                        onClick={() => {\n                                                            const updatedHeaderItems = [...headerItems];\n                                                            const tmp = updatedHeaderItems[activeRowStep - 1].items[index].value[i-1]\n                                                            updatedHeaderItems[activeRowStep - 1].items[index].value[i-1] = updatedHeaderItems[activeRowStep - 1].items[index].value[i]\n                                                            updatedHeaderItems[activeRowStep - 1].items[index].value[i] = tmp;\n                                                            setHeaderItems(updatedHeaderItems);\n                                                        }}\n                                                        disabled={item.value.length === 1 || i === 0}\n                                                        style={{outline: 'none'}}\n                                                    >\n                                                        <ArrowUpwardIcon />\n                                                    </IconButton>\n                                                    <FormControl>\n                                                        <InputLabel htmlFor=\"age-native-simple\">Sub Item</InputLabel>\n                                                        <Select\n                                                            native\n                                                            name='type'\n                                                            variant={'outlined'}\n                                                            value={val.type}\n                                                            onChange={(e) => {\n                                                                const updatedHeaderItems = [...headerItems];\n                                                                if (e.target.value === 'social-link' ||\n                                                                    e.target.value === 'external-link' ||\n                                                                    e.target.value === 'internal-link' ||\n                                                                    e.target.value === 'button' ||\n                                                                    e.target.value === 'address') {\n                                                                    updatedHeaderItems[activeRowStep - 1].items[index].value[i] = {\n                                                                        id: val.id,\n                                                                        type: e.target.value,\n                                                                        value: {\n                                                                            title: '',\n                                                                            value: ''\n                                                                        }\n                                                                    }\n                                                                }\n                                                                if (e.target.value === 'phone' || e.target.value === 'email') {\n                                                                    updatedHeaderItems[activeRowStep - 1].items[index].value[i] = {\n                                                                        id: val.id,\n                                                                        type: e.target.value,\n                                                                        value: ''\n                                                                    }\n                                                                }\n                                                                if (e.target.value === 'logo') {\n                                                                    updatedHeaderItems[activeRowStep - 1].items[index].value[i] = {\n                                                                        id: val.id,\n                                                                        type: e.target.value,\n                                                                        value: state.logoUrl\n                                                                    }\n                                                                }\n                                                                setHeaderItems(updatedHeaderItems);\n                                                            }}\n                                                        >\n                                                            <option style={{ display: 'none' }} value=''></option>\n                                                            {\n                                                                options.length > 0 && options.map(option => {\n                                                                    return(\n                                                                        <option key={option.id} value={option.code} >\n                                                                            {option.description}\n                                                                        </option>\n                                                                    )\n                                                                })\n                                                            }\n                                                        </Select>\n                                                    </FormControl>\n                                                </Grid>\n                                                <Grid item xs={8}>\n                                                    {\n                                                        val.type === 'logo' &&\n                                                        <Paper style={{border: `2px solid ${COLORS.secondary}`}}\n                                                               className={state.langCode !== state.defaultLang ? classes.disabledEvent : ''}\n                                                        >\n                                                            <Grid container={true} justify={'center'}>\n                                                                <Grid item={true}>\n                                                                    <div\n                                                                        style={{\n                                                                            backgroundImage: `url(${\n                                                                                GENERAL_SETTINGS.STATIC_URL + state.logoUrl\n                                                                            })`,\n                                                                            backgroundSize: 'contain',\n                                                                            backgroundRepeat: 'no-repeat',\n                                                                            backgroundPosition: \"center\",\n                                                                            height: 200,\n                                                                            width: 200,\n                                                                            marginTop: 16\n                                                                        }}\n                                                                    ></div>\n                                                                </Grid>\n                                                            </Grid>\n                                                        </Paper>\n                                                    }\n                                                    {\n                                                        (val.type === 'social-link' || val.type === 'external-link' ||\n                                                            val.type === 'button' || val.type === 'address') && <Grid container={true}\n                                                                                                                      justify={'flex-start'}\n                                                                                                                      spacing={3}\n                                                        >\n                                                            <Grid item xs={6}>\n                                                                <TextField\n                                                                    label={'Title'}\n                                                                    variant=\"outlined\"\n                                                                    fullWidth\n                                                                    value={val.value.title}\n                                                                    onChange={(e) => {\n                                                                        const updatedHeaderItems = [...headerItems];\n                                                                        updatedHeaderItems[activeRowStep - 1].items[index].value[i].value['title'] = e.target.value;\n                                                                        setHeaderItems(updatedHeaderItems);\n                                                                    }}\n                                                                />\n                                                            </Grid>\n                                                            <Grid item xs={6}>\n                                                                <TextField\n                                                                    label={'Link'}\n                                                                    variant=\"outlined\"\n                                                                    fullWidth\n                                                                    value={val.value.value}\n                                                                    error={(!validator.isURL(val.value.value) && val.value.value) ? true : false}\n                                                                    onChange={(e) => {\n                                                                        const updatedHeaderItems = [...headerItems];\n                                                                        updatedHeaderItems[activeRowStep - 1].items[index].value[i].value['value'] = e.target.value;\n                                                                        setHeaderItems(updatedHeaderItems);\n                                                                    }}\n                                                                    disabled={state.langCode !== state.defaultLang}\n                                                                />\n                                                            </Grid>\n                                                        </Grid>\n                                                    }\n                                                    {\n                                                        val.type === 'internal-link' && <Grid container={true}\n                                                                                              justify={'flex-start'}\n                                                                                              spacing={3}\n                                                        >\n                                                            <Grid item xs={6}>\n                                                                <TextField\n                                                                    label={'Title'}\n                                                                    variant=\"outlined\"\n                                                                    fullWidth\n                                                                    value={val.value.title}\n                                                                    onChange={(e) => {\n                                                                        const updatedHeaderItems = [...headerItems];\n                                                                        updatedHeaderItems[activeRowStep - 1].items[index].value[i].value['title'] = e.target.value;\n                                                                        setHeaderItems(updatedHeaderItems);\n                                                                    }}\n                                                                />\n                                                            </Grid>\n                                                            <Grid item xs={6}>\n                                                                <FormControl fullWidth disabled={state.langCode !== state.defaultLang}>\n                                                                    <InputLabel\n                                                                        shrink={val.value.value ? true : false}\n                                                                        style={{marginLeft: 16}}\n                                                                    >\n                                                                        Web Page\n                                                                    </InputLabel>\n                                                                    <Select\n                                                                        native\n                                                                        value={val.value.value}\n                                                                        variant={\"outlined\"}\n                                                                        onChange={(e) => {\n                                                                            const updatedHeaderItems = [...headerItems];\n                                                                            updatedHeaderItems[activeRowStep - 1].items[index].value[i].value['value'] = e.target.value;\n                                                                            setHeaderItems(updatedHeaderItems);\n                                                                        }}\n                                                                    >\n                                                                        <option style={{ display: 'none' }} value=''></option>\n                                                                        {\n                                                                            webPages.length > 0 && webPages.map((page, index) => {\n                                                                                return (\n                                                                                    <option value={page.gid} key={index}> { page.code } </option>\n                                                                                )\n                                                                            })\n                                                                        }\n                                                                    </Select>\n                                                                </FormControl>\n                                                            </Grid>\n                                                        </Grid>\n                                                    }\n                                                    {\n                                                        val.type === 'email' && <TextField\n                                                            label={'Value'}\n                                                            variant=\"outlined\"\n                                                            fullWidth\n                                                            value={val.value}\n                                                            disabled={state.langCode !== state.defaultLang}\n                                                            onChange={(e) => {\n                                                                const updatedHeaderItems = [...headerItems];\n                                                                updatedHeaderItems[activeRowStep - 1].items[index].value[i].value = e.target.value;\n                                                                setHeaderItems(updatedHeaderItems);\n                                                            }}\n                                                            error={(val.value && validator.isEmail(val.value) === false) ? true : false}\n                                                        />\n                                                    }\n                                                    {\n                                                        val.type === 'phone' && <TextField\n                                                            label={'Value'}\n                                                            variant=\"outlined\"\n                                                            fullWidth\n                                                            value={val.value}\n                                                            disabled={state.langCode !== state.defaultLang}\n                                                            onChange={(e) => {\n                                                                const updatedHeaderItems = [...headerItems];\n                                                                updatedHeaderItems[activeRowStep - 1].items[index].value[i].value = e.target.value;\n                                                                setHeaderItems(updatedHeaderItems);\n                                                            }}\n                                                            error={(val.value && validator.isMobilePhone(val.value) === false) ? true : false}\n                                                        />\n                                                    }\n                                                </Grid>\n                                                <Grid item xs={1}>\n                                                    <IconButton\n                                                        aria-label=\"Delete item\"\n                                                        color=\"primary\"\n                                                        onClick={() => {\n                                                            const updatedHeaderItems = [...headerItems];\n                                                            updatedHeaderItems[activeRowStep - 1].items[index].value.splice(i, 1);\n                                                            setHeaderItems(updatedHeaderItems);\n                                                        }}\n                                                        disabled={item.value.length === 1}\n                                                        className={state.langCode !== state.defaultLang ? classes.disabledEvent : ''}\n                                                    >\n                                                        <CancelIcon style={{color: item.value.length === 1 ? 'grey' : 'red'}} />\n                                                    </IconButton>\n                                                </Grid>\n                                            </Grid>\n                                        )\n                                    })\n                                }\n                            </Container> : null\n                        })\n                    }\n                    <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\n                        <div className={classes.actionButtons}>\n                            {\n                                activeColumnStep !== 0 &&\n                                <Button\n                                    onClick={handleBackColumn}\n                                    variant=\"contained\"\n                                    size=\"small\"\n                                    aria-label=\"add\"\n                                    className={classes.actionButton}\n                                    style={{marginRight: 8}}\n                                >\n                                    BACK\n                                </Button>\n                            }\n                            {\n                                activeColumnStep !== columnSteps.length - 1 && <Button\n                                    onClick={handleNextColumn}\n                                    variant=\"contained\"\n                                    size=\"small\"\n                                    color=\"primary\"\n                                    aria-label=\"add\"\n                                    className={classes.actionButton}\n                                    style={{marginRight: 24}}\n                                >\n                                    NEXT\n                                </Button>\n                            }\n                        </div>\n                    </Grid>\n                </Paper>\n            }\n\n        </React.Fragment>\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        state: state.formReducer.pageBuilder\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n)(EditHeader)\n"]},"metadata":{},"sourceType":"module"}