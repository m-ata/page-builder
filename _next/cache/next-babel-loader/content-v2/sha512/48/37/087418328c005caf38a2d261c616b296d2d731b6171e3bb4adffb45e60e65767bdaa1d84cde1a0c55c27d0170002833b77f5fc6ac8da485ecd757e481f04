{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/steps/webpage/Preview.js\";\nvar __jsx = React.createElement;\n//react imports\nimport React from 'react'; //redux imports\n\nimport { connect } from 'react-redux'; //material imports\n\nimport { Container, Typography, Grid } from '@material-ui/core'; //custom imports\n\nimport Slider from '../../components/page/sections/slider/Slider';\nimport Image from '../../components/page/sections/image/Image';\nimport Paragraph from '../../components/page/sections/paragraph/Paragraph';\nimport WidgetBooking from 'components/ibe/widget/booking';\nimport ContactForm from '../../components/page/sections/contact-form/ContactForm';\nimport WrappedMap from '../../components/page/sections/map/Map';\nimport SliderOnlyPreview from '../../components/page/sections/slider-only/Slider';\nimport SliderGallery from '../../components/page/sections/slider-gallery/SliderGallery';\nimport CardSlider from '../../components/page/sections/card-type-slider/CardSlider';\nimport Video from '../../components/page/sections/video/Video';\n\nconst Preview = props => {\n  const {\n    state\n  } = props;\n\n  const getColumnWidth = width => {\n    return Math.floor(width / 100 * 12);\n  };\n\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, state.langCode !== state.defaultLang && state.langsFile[state.langCode] && state.langsFile[state.langCode].items.length > 0 && state.langsFile[state.langCode].items.map((item, index) => {\n    let sectionImages = [];\n    return __jsx(Typography, {\n      key: index,\n      component: 'div',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }\n    }, (item === null || item === void 0 ? void 0 : item.title) && __jsx(Grid, {\n      container: true,\n      spacing: 1,\n      justify: 'flex-start',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 33\n      }\n    }, __jsx(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 37\n      }\n    }, __jsx(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: item.title\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 41\n      }\n    }))), __jsx(Grid, {\n      container: true,\n      spacing: 1,\n      justify: 'flex-start',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 29\n      }\n    }, item.subItems.length > 0 && item.subItems.map((subItem, i) => {\n      var _state$page$sections$, _state$page$sections$2, _state$page$sections$3, _state$page$sections$4, _state$page$sections$5, _state$page$sections$6, _state$page$sections$7, _state$page$sections$8, _state$page$sections$9, _state$page, _state$page$sections$10, _state$page$sections$11, _state$page2, _state$page2$sections, _state$page2$sections2, _state$page3, _state$page3$sections, _state$page4, _state$page4$sections, _state$page4$sections2, _state$assets, _state$assets$colors, _state$assets$colors$, _state$page5, _state$page5$sections, _state$page5$sections2, _state$assets2, _state$assets2$colors, _state$assets2$colors2;\n\n      const isModal = ((_state$page$sections$ = state.page.sections[index].items[0]) === null || _state$page$sections$ === void 0 ? void 0 : _state$page$sections$.type) === 'image' && (((_state$page$sections$2 = state.page.sections[index].items[1]) === null || _state$page$sections$2 === void 0 ? void 0 : _state$page$sections$2.type) === 'image' || ((_state$page$sections$3 = state.page.sections[index].items[2]) === null || _state$page$sections$3 === void 0 ? void 0 : _state$page$sections$3.type) === 'image') || ((_state$page$sections$4 = state.page.sections[index].items[1]) === null || _state$page$sections$4 === void 0 ? void 0 : _state$page$sections$4.type) === 'image' && (((_state$page$sections$5 = state.page.sections[index].items[0]) === null || _state$page$sections$5 === void 0 ? void 0 : _state$page$sections$5.type) === 'image' || ((_state$page$sections$6 = state.page.sections[index].items[2]) === null || _state$page$sections$6 === void 0 ? void 0 : _state$page$sections$6.type) === 'image') || ((_state$page$sections$7 = state.page.sections[index].items[2]) === null || _state$page$sections$7 === void 0 ? void 0 : _state$page$sections$7.type) === 'image' && (((_state$page$sections$8 = state.page.sections[index].items[0]) === null || _state$page$sections$8 === void 0 ? void 0 : _state$page$sections$8.type) === 'image' || ((_state$page$sections$9 = state.page.sections[index].items[1]) === null || _state$page$sections$9 === void 0 ? void 0 : _state$page$sections$9.type) === 'image');\n\n      if (isModal) {\n        state.page.sections[index].items[i].type === 'image' && sectionImages.push(state.page.sections[index].items[i]);\n      }\n\n      return __jsx(Grid, {\n        key: i,\n        item: true,\n        xs: getColumnWidth(state === null || state === void 0 ? void 0 : (_state$page = state.page) === null || _state$page === void 0 ? void 0 : (_state$page$sections$10 = _state$page.sections[index]) === null || _state$page$sections$10 === void 0 ? void 0 : (_state$page$sections$11 = _state$page$sections$10.items[i]) === null || _state$page$sections$11 === void 0 ? void 0 : _state$page$sections$11.width),\n        style: {\n          minWidth: (state === null || state === void 0 ? void 0 : (_state$page2 = state.page) === null || _state$page2 === void 0 ? void 0 : (_state$page2$sections = _state$page2.sections[index]) === null || _state$page2$sections === void 0 ? void 0 : (_state$page2$sections2 = _state$page2$sections.items[i]) === null || _state$page2$sections2 === void 0 ? void 0 : _state$page2$sections2.width) + '%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 45\n        }\n      }, 'image' in subItem && __jsx(Image, {\n        imageComponent: state.page.sections[index].items[i],\n        otherLangsImage: subItem.image,\n        sectionType: state === null || state === void 0 ? void 0 : (_state$page3 = state.page) === null || _state$page3 === void 0 ? void 0 : (_state$page3$sections = _state$page3.sections[index]) === null || _state$page3$sections === void 0 ? void 0 : _state$page3$sections.type,\n        sectionImages: sectionImages,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 53\n        }\n      }), 'text' in subItem && __jsx(\"div\", {\n        style: {\n          backgroundColor: state !== null && state !== void 0 && (_state$page4 = state.page) !== null && _state$page4 !== void 0 && (_state$page4$sections = _state$page4.sections[index]) !== null && _state$page4$sections !== void 0 && (_state$page4$sections2 = _state$page4$sections.items[i]) !== null && _state$page4$sections2 !== void 0 && _state$page4$sections2.useBgColor ? state === null || state === void 0 ? void 0 : (_state$assets = state.assets) === null || _state$assets === void 0 ? void 0 : (_state$assets$colors = _state$assets.colors) === null || _state$assets$colors === void 0 ? void 0 : (_state$assets$colors$ = _state$assets$colors.message) === null || _state$assets$colors$ === void 0 ? void 0 : _state$assets$colors$.main : 'white',\n          height: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 53\n        }\n      }, __jsx(Paragraph, {\n        paragraph: subItem.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 57\n        }\n      })), 'sliderGallery' in subItem && __jsx(SliderGallery, {\n        sliderGallery: state.page.sections[index].items[i],\n        otherLangSliderGallery: subItem.sliderGallery,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 53\n        }\n      }), 'cardSlider' in subItem && __jsx(CardSlider, {\n        cardSlider: state.page.sections[index].items[i],\n        otherLangCardSlider: subItem.cardSlider,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 53\n        }\n      }), 'slider' in subItem && __jsx(Slider, {\n        sliderComponent: state.page.sections[index].items[i],\n        slider: subItem.slider,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 53\n        }\n      }), 'sliderImages' in subItem && __jsx(Slider, {\n        sliderComponent: state.page.sections[index].items[i],\n        otherLangSliderImages: subItem.sliderImages,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 53\n        }\n      }), 'sliderOnly' in subItem && __jsx(SliderOnlyPreview, {\n        masterid: state.page.sections[index].items[i].masterid,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 53\n        }\n      }), 'booking' in subItem && __jsx(WidgetBooking, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 74\n        }\n      }), 'contactForm' in subItem && __jsx(\"div\", {\n        style: {\n          backgroundColor: state !== null && state !== void 0 && (_state$page5 = state.page) !== null && _state$page5 !== void 0 && (_state$page5$sections = _state$page5.sections[index]) !== null && _state$page5$sections !== void 0 && (_state$page5$sections2 = _state$page5$sections.items[i]) !== null && _state$page5$sections2 !== void 0 && _state$page5$sections2.useBgColor ? state === null || state === void 0 ? void 0 : (_state$assets2 = state.assets) === null || _state$assets2 === void 0 ? void 0 : (_state$assets2$colors = _state$assets2.colors) === null || _state$assets2$colors === void 0 ? void 0 : (_state$assets2$colors2 = _state$assets2$colors.message) === null || _state$assets2$colors2 === void 0 ? void 0 : _state$assets2$colors2.main : 'white',\n          height: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 53\n        }\n      }, __jsx(ContactForm, {\n        formData: state.page.sections[index].items[i],\n        otherLangFormData: subItem.contactForm.labels,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 57\n        }\n      })), 'map' in subItem && __jsx(WrappedMap, {\n        googleMapURL: `https://maps.googleapis.com/maps/api/js?key=${process.env.GOOGLE_MAP_API_KEY}`,\n        loadingElement: __jsx(\"div\", {\n          style: {\n            height: `100%`\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 73\n          }\n        }),\n        containerElement: __jsx(\"div\", {\n          style: {\n            height: `350px`,\n            borderRadius: 10\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 61\n          }\n        }),\n        mapElement: __jsx(\"div\", {\n          style: {\n            height: `100%`\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 69\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 53\n        }\n      }));\n    })));\n  }), state.langCode === state.defaultLang && state.page.sections.length > 0 && state.page.sections.map((section, i) => {\n    let sectionImages = [];\n    return __jsx(Typography, {\n      component: 'div',\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 25\n      }\n    }, (section === null || section === void 0 ? void 0 : section.title) && __jsx(Grid, {\n      container: true,\n      spacing: 1,\n      justify: 'flex-start',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 33\n      }\n    }, __jsx(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 37\n      }\n    }, __jsx(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: section.title\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 41\n      }\n    }))), __jsx(Grid, {\n      container: true,\n      spacing: 1,\n      justify: 'flex-start',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 29\n      }\n    }, section.items.map((component, index) => {\n      var _section$items$, _section$items$2, _section$items$3, _section$items$4, _section$items$5, _section$items$6, _section$items$7, _section$items$8, _section$items$9, _state$assets3, _state$assets3$colors, _state$assets3$colors2, _state$assets4, _state$assets4$colors, _state$assets4$colors2;\n\n      const isModal = ((_section$items$ = section.items[0]) === null || _section$items$ === void 0 ? void 0 : _section$items$.type) === 'image' && (((_section$items$2 = section.items[1]) === null || _section$items$2 === void 0 ? void 0 : _section$items$2.type) === 'image' || ((_section$items$3 = section.items[2]) === null || _section$items$3 === void 0 ? void 0 : _section$items$3.type) === 'image') || ((_section$items$4 = section.items[1]) === null || _section$items$4 === void 0 ? void 0 : _section$items$4.type) === 'image' && (((_section$items$5 = section.items[0]) === null || _section$items$5 === void 0 ? void 0 : _section$items$5.type) === 'image' || ((_section$items$6 = section.items[2]) === null || _section$items$6 === void 0 ? void 0 : _section$items$6.type) === 'image') || ((_section$items$7 = section.items[2]) === null || _section$items$7 === void 0 ? void 0 : _section$items$7.type) === 'image' && (((_section$items$8 = section.items[0]) === null || _section$items$8 === void 0 ? void 0 : _section$items$8.type) === 'image' || ((_section$items$9 = section.items[1]) === null || _section$items$9 === void 0 ? void 0 : _section$items$9.type) === 'image');\n\n      if (isModal) {\n        component.type === 'image' && sectionImages.push(component);\n      }\n\n      return __jsx(Grid, {\n        style: {\n          minWidth: component.width + '%'\n        },\n        item: true,\n        xs: getColumnWidth(component.width),\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 41\n        }\n      }, component.type === 'slider' && __jsx(Slider, {\n        sliderComponent: component,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 77\n        }\n      }), (component === null || component === void 0 ? void 0 : component.type) === 'card-slider' && __jsx(CardSlider, {\n        cardSlider: component,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 83\n        }\n      }), component.type === 'sliderOnly' && __jsx(SliderOnlyPreview, {\n        masterid: component.masterid,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 49\n        }\n      }), component.type === 'slider-gallery' && __jsx(SliderGallery, {\n        sliderGallery: component,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 49\n        }\n      }), component.type === 'image' && __jsx(Image, {\n        imageComponent: component,\n        sectionType: section === null || section === void 0 ? void 0 : section.type,\n        sectionImages: sectionImages,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 49\n        }\n      }), component.type === 'paragraph' && __jsx(\"div\", {\n        style: {\n          backgroundColor: component !== null && component !== void 0 && component.useBgColor ? state === null || state === void 0 ? void 0 : (_state$assets3 = state.assets) === null || _state$assets3 === void 0 ? void 0 : (_state$assets3$colors = _state$assets3.colors) === null || _state$assets3$colors === void 0 ? void 0 : (_state$assets3$colors2 = _state$assets3$colors.message) === null || _state$assets3$colors2 === void 0 ? void 0 : _state$assets3$colors2.main : 'white',\n          height: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 49\n        }\n      }, __jsx(Paragraph, {\n        paragraph: component,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 53\n        }\n      })), component.type === 'widgetbooking' && __jsx(Typography, {\n        component: 'div',\n        style: {\n          pointerEvents: 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 49\n        }\n      }, __jsx(WidgetBooking, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 53\n        }\n      })), component.type === 'contactForm' && __jsx(\"div\", {\n        style: {\n          backgroundColor: component !== null && component !== void 0 && component.useBgColor ? state === null || state === void 0 ? void 0 : (_state$assets4 = state.assets) === null || _state$assets4 === void 0 ? void 0 : (_state$assets4$colors = _state$assets4.colors) === null || _state$assets4$colors === void 0 ? void 0 : (_state$assets4$colors2 = _state$assets4$colors.message) === null || _state$assets4$colors2 === void 0 ? void 0 : _state$assets4$colors2.main : 'white',\n          height: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 49\n        }\n      }, __jsx(ContactForm, {\n        formData: component,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 53\n        }\n      })), component.type === 'map' && __jsx(WrappedMap, {\n        googleMapURL: `https://maps.googleapis.com/maps/api/js?key=${process.env.GOOGLE_MAP_API_KEY}`,\n        loadingElement: __jsx(\"div\", {\n          style: {\n            height: `100%`\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 69\n          }\n        }),\n        containerElement: __jsx(\"div\", {\n          style: {\n            height: `350px`,\n            borderRadius: 10\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 57\n          }\n        }),\n        mapElement: __jsx(\"div\", {\n          style: {\n            height: `100%`\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 65\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 49\n        }\n      }), (component === null || component === void 0 ? void 0 : component.type) === 'video' && __jsx(Video, {\n        videoComponent: component,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 77\n        }\n      }));\n    })));\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    state: state.formReducer.pageBuilder\n  };\n};\n\nexport default connect(mapStateToProps)(Preview);","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/steps/webpage/Preview.js"],"names":["React","connect","Container","Typography","Grid","Slider","Image","Paragraph","WidgetBooking","ContactForm","WrappedMap","SliderOnlyPreview","SliderGallery","CardSlider","Video","Preview","props","state","getColumnWidth","width","Math","floor","langCode","defaultLang","langsFile","items","length","map","item","index","sectionImages","title","__html","subItems","subItem","i","isModal","page","sections","type","push","minWidth","image","backgroundColor","useBgColor","assets","colors","message","main","height","text","sliderGallery","cardSlider","slider","sliderImages","masterid","contactForm","labels","process","env","GOOGLE_MAP_API_KEY","borderRadius","section","component","pointerEvents","mapStateToProps","formReducer","pageBuilder"],"mappings":"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","sourcesContent":["//react imports\nimport React from 'react'\n//redux imports\nimport { connect } from 'react-redux'\n//material imports\nimport { Container, Typography, Grid } from '@material-ui/core'\n//custom imports\nimport Slider from '../../components/page/sections/slider/Slider'\nimport Image from '../../components/page/sections/image/Image'\nimport Paragraph from '../../components/page/sections/paragraph/Paragraph'\nimport WidgetBooking from 'components/ibe/widget/booking'\nimport ContactForm from '../../components/page/sections/contact-form/ContactForm'\nimport WrappedMap from '../../components/page/sections/map/Map'\nimport SliderOnlyPreview from '../../components/page/sections/slider-only/Slider'\nimport SliderGallery from '../../components/page/sections/slider-gallery/SliderGallery'\nimport CardSlider from '../../components/page/sections/card-type-slider/CardSlider'\nimport Video from '../../components/page/sections/video/Video'\n\nconst Preview = (props) => {\n    const { state } = props\n\n    const getColumnWidth = (width) => {\n        return Math.floor((width / 100) * 12)\n    }\n\n    return (\n        <Container>\n            {state.langCode !== state.defaultLang &&\n                state.langsFile[state.langCode] &&\n                state.langsFile[state.langCode].items.length > 0 &&\n                state.langsFile[state.langCode].items.map((item, index) => {\n                    let sectionImages = []\n                    return (\n                        <Typography key={index} component={'div'}>\n                            {item?.title && (\n                                <Grid container spacing={1} justify={'flex-start'}>\n                                    <Grid item xs={12}>\n                                        <div dangerouslySetInnerHTML={{ __html: item.title }}></div>\n                                    </Grid>\n                                </Grid>\n                            )}\n                            <Grid container spacing={1} justify={'flex-start'}>\n                                {item.subItems.length > 0 &&\n                                    item.subItems.map((subItem, i) => {\n                                        const isModal =\n                                            (state.page.sections[index].items[0]?.type === 'image' &&\n                                                (state.page.sections[index].items[1]?.type === 'image' ||\n                                                    state.page.sections[index].items[2]?.type === 'image')) ||\n                                            (state.page.sections[index].items[1]?.type === 'image' &&\n                                                (state.page.sections[index].items[0]?.type === 'image' ||\n                                                    state.page.sections[index].items[2]?.type === 'image')) ||\n                                            (state.page.sections[index].items[2]?.type === 'image' &&\n                                                (state.page.sections[index].items[0]?.type === 'image' ||\n                                                    state.page.sections[index].items[1]?.type === 'image'))\n                                        if (isModal) {\n                                            state.page.sections[index].items[i].type === 'image' &&\n                                                sectionImages.push(state.page.sections[index].items[i])\n                                        }\n                                        return (\n                                            <Grid\n                                                key={i}\n                                                item\n                                                xs={getColumnWidth(state?.page?.sections[index]?.items[i]?.width)}\n                                                style={{\n                                                    minWidth: state?.page?.sections[index]?.items[i]?.width + '%',\n                                                }}\n                                            >\n                                                {'image' in subItem && (\n                                                    <Image\n                                                        imageComponent={state.page.sections[index].items[i]}\n                                                        otherLangsImage={subItem.image}\n                                                        sectionType={state?.page?.sections[index]?.type}\n                                                        sectionImages={sectionImages}\n                                                    />\n                                                )}\n                                                {'text' in subItem && (\n                                                    <div\n                                                        style={{\n                                                            backgroundColor: state?.page?.sections[index]?.items[i]\n                                                                ?.useBgColor\n                                                                ? state?.assets?.colors?.message?.main\n                                                                : 'white',\n                                                            height: '100%',\n                                                        }}\n                                                    >\n                                                        <Paragraph paragraph={subItem.text} />\n                                                    </div>\n                                                )}\n                                                {'sliderGallery' in subItem && (\n                                                    <SliderGallery\n                                                        sliderGallery={state.page.sections[index].items[i]}\n                                                        otherLangSliderGallery={subItem.sliderGallery}\n                                                    />\n                                                )}\n                                                {'cardSlider' in subItem && (\n                                                    <CardSlider\n                                                        cardSlider={state.page.sections[index].items[i]}\n                                                        otherLangCardSlider={subItem.cardSlider}\n                                                    />\n                                                )}\n                                                {'slider' in subItem && (\n                                                    <Slider\n                                                        sliderComponent={state.page.sections[index].items[i]}\n                                                        slider={subItem.slider}\n                                                    />\n                                                )}\n                                                {'sliderImages' in subItem && (\n                                                    <Slider\n                                                        sliderComponent={state.page.sections[index].items[i]}\n                                                        otherLangSliderImages={subItem.sliderImages}\n                                                    />\n                                                )}\n                                                {'sliderOnly' in subItem && (\n                                                    <SliderOnlyPreview\n                                                        masterid={state.page.sections[index].items[i].masterid}\n                                                    />\n                                                )}\n                                                {'booking' in subItem && <WidgetBooking />}\n                                                {'contactForm' in subItem && (\n                                                    <div\n                                                        style={{\n                                                            backgroundColor: state?.page?.sections[index]?.items[i]\n                                                                ?.useBgColor\n                                                                ? state?.assets?.colors?.message?.main\n                                                                : 'white',\n                                                            height: '100%',\n                                                        }}\n                                                    >\n                                                        <ContactForm\n                                                            formData={state.page.sections[index].items[i]}\n                                                            otherLangFormData={subItem.contactForm.labels}\n                                                        />\n                                                    </div>\n                                                )}\n                                                {'map' in subItem && (\n                                                    <WrappedMap\n                                                        googleMapURL={`https://maps.googleapis.com/maps/api/js?key=${process.env.GOOGLE_MAP_API_KEY}`}\n                                                        loadingElement={<div style={{ height: `100%` }} />}\n                                                        containerElement={\n                                                            <div style={{ height: `350px`, borderRadius: 10 }} />\n                                                        }\n                                                        mapElement={<div style={{ height: `100%` }} />}\n                                                    />\n                                                )}\n                                            </Grid>\n                                        )\n                                    })}\n                            </Grid>\n                        </Typography>\n                    )\n                })}\n            {state.langCode === state.defaultLang &&\n                state.page.sections.length > 0 &&\n                state.page.sections.map((section, i) => {\n                    let sectionImages = []\n                    return (\n                        <Typography component={'div'} key={i}>\n                            {section?.title && (\n                                <Grid container spacing={1} justify={'flex-start'}>\n                                    <Grid item xs={12}>\n                                        <div dangerouslySetInnerHTML={{ __html: section.title }}></div>\n                                    </Grid>\n                                </Grid>\n                            )}\n                            <Grid container spacing={1} justify={'flex-start'}>\n                                {section.items.map((component, index) => {\n                                    const isModal =\n                                        (section.items[0]?.type === 'image' &&\n                                            (section.items[1]?.type === 'image' ||\n                                                section.items[2]?.type === 'image')) ||\n                                        (section.items[1]?.type === 'image' &&\n                                            (section.items[0]?.type === 'image' ||\n                                                section.items[2]?.type === 'image')) ||\n                                        (section.items[2]?.type === 'image' &&\n                                            (section.items[0]?.type === 'image' || section.items[1]?.type === 'image'))\n                                    if (isModal) {\n                                        component.type === 'image' && sectionImages.push(component)\n                                    }\n                                    return (\n                                        <Grid\n                                            style={{ minWidth: component.width + '%' }}\n                                            item\n                                            xs={getColumnWidth(component.width)}\n                                            key={index}\n                                        >\n                                            {component.type === 'slider' && <Slider sliderComponent={component} />}\n                                            {component?.type === 'card-slider' && <CardSlider cardSlider={component} />}\n                                            {component.type === 'sliderOnly' && (\n                                                <SliderOnlyPreview masterid={component.masterid} />\n                                            )}\n                                            {component.type === 'slider-gallery' && (\n                                                <SliderGallery sliderGallery={component} />\n                                            )}\n                                            {component.type === 'image' && (\n                                                <Image\n                                                    imageComponent={component}\n                                                    sectionType={section?.type}\n                                                    sectionImages={sectionImages}\n                                                />\n                                            )}\n                                            {component.type === 'paragraph' && (\n                                                <div\n                                                    style={{\n                                                        backgroundColor: component?.useBgColor\n                                                            ? state?.assets?.colors?.message?.main\n                                                            : 'white',\n                                                        height: '100%',\n                                                    }}\n                                                >\n                                                    <Paragraph paragraph={component} />\n                                                </div>\n                                            )}\n                                            {component.type === 'widgetbooking' && (\n                                                <Typography component={'div'} style={{ pointerEvents: 'none' }}>\n                                                    <WidgetBooking />\n                                                </Typography>\n                                            )}\n                                            {component.type === 'contactForm' && (\n                                                <div\n                                                    style={{\n                                                        backgroundColor: component?.useBgColor\n                                                            ? state?.assets?.colors?.message?.main\n                                                            : 'white',\n                                                        height: '100%',\n                                                    }}\n                                                >\n                                                    <ContactForm formData={component} />\n                                                </div>\n                                            )}\n                                            {component.type === 'map' && (\n                                                <WrappedMap\n                                                    googleMapURL={`https://maps.googleapis.com/maps/api/js?key=${process.env.GOOGLE_MAP_API_KEY}`}\n                                                    loadingElement={<div style={{ height: `100%` }} />}\n                                                    containerElement={\n                                                        <div style={{ height: `350px`, borderRadius: 10 }} />\n                                                    }\n                                                    mapElement={<div style={{ height: `100%` }} />}\n                                                />\n                                            )}\n                                            {component?.type === 'video' && <Video videoComponent={component} />}\n                                        </Grid>\n                                    )\n                                })}\n                            </Grid>\n                        </Typography>\n                    )\n                })}\n        </Container>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        state: state.formReducer.pageBuilder,\n    }\n}\n\nexport default connect(mapStateToProps)(Preview)\n"]},"metadata":{},"sourceType":"module"}