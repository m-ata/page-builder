{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/user-portal/components/RequestDetail.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport axios from 'axios';\nimport { deleteFromState, pushToState, setToState, updateState } from 'state/actions';\nimport WebCmsGlobal from 'components/webcms-global';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { UseOrest, ViewList, Delete, Upload } from '@webcms/orest';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nimport { DEFAULT_OREST_TOKEN, isErrorMsg, OREST_ENDPOINT, REQUEST_METHOD_CONST } from 'model/orest/constants';\nimport { AppBar, Avatar, Box, Button, Dialog, Grid, IconButton, List, ListItem, ListItemAvatar, ListItemText, Menu, MenuItem, Tab, Tabs, Paper, Typography, Fab } from \"@material-ui/core\";\nimport LoadingSpinner from '../../LoadingSpinner';\nimport MaterialTable, { MTableHeader, MTableToolbar } from 'material-table';\nimport { DropzoneDialog } from 'material-ui-dropzone';\nimport ViewQuiltIcon from '@material-ui/icons/ViewQuilt';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport SubjectIcon from '@material-ui/icons/Subject';\nimport NoteIcon from '@material-ui/icons/Note';\nimport CachedIcon from \"@material-ui/icons/Cached\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\nimport CloudDownloadOutlinedIcon from '@material-ui/icons/CloudDownloadOutlined';\nimport VisibilityOutlinedIcon from '@material-ui/icons/VisibilityOutlined';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport { CustomToolTip } from './CustomToolTip/CustomToolTip';\nimport { useSnackbar } from 'notistack';\nimport moment from 'moment';\nimport MaterialTableLocalization from \"../../MaterialTableLocalization\";\nimport CommonNotes from \"../../CommonNotes\";\nimport { SLASH } from \"../../../model/globals\";\nimport PopupState, { bindTrigger, bindMenu } from \"material-ui-popup-state\";\nimport TableColumnText from \"../../TableColumnText\";\nimport TrackedChangesDialog from \"../../TrackedChangesDialog\";\nimport MaterialTableGeneric from \"../../MaterialTableGeneric\";\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\nimport AddRaTagDialog from \"../../AddRaTagDialog\";\nimport { PreviewFile } from \"../../../model/orest/components/RaFile\";\nimport MediaViewerDialog from \"../../../@webcms-ui/core/media-viewer-dialog\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  listRoot: {\n    width: '100%',\n    maxHeight: 500,\n    minHeight: 500,\n    overflowY: 'scroll',\n    overflowX: 'hidden'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200\n  },\n  field: {\n    marginRight: theme.spacing(1)\n  },\n  tabPanel: {\n    padding: 0\n  },\n  tableTitle: {\n    fontSize: \"24px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: \"14px\",\n      textAlign: \"center\"\n    }\n  },\n  table: {\n    '& .MuiTableCell-root': {\n      padding: '10px'\n    },\n    \"& tbody>.MuiTableRow-root:hover\": {\n      backgroundColor: \"rgb(163, 166, 180,0.1)\"\n    }\n  },\n  dateText: {\n    fontSize: \"13px\"\n  },\n  overFlowDescriptionText: {\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    fontSize: \"13px\",\n    color: \"#4D4F5C\"\n  },\n  descriptionText: {\n    fontSize: \"13px\",\n    color: \"#4D4F5C\"\n  },\n  avatarStyle: {\n    backgroundColor: theme.palette.primary.main\n  },\n  tabsRoot: {\n    \"& .Mui-selected \": {\n      color: \"#4666B0\"\n    },\n    \"& .MuiTabs-indicator\": {\n      backgroundColor: \"#4666B0\"\n    }\n  },\n  iconButton: {\n    padding: 0\n  },\n  iconStyle: {\n    fontSize: 20\n  },\n  standardText: {\n    fontSize: 'inherit',\n    minWidth: '100px',\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n    whiteSpace: 'nowrap'\n  },\n  menuButton: {\n    width: '100%',\n    minWidth: 'unset'\n  },\n  popoverStyle: {\n    width: \"140px\"\n  }\n}));\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index\n  } = props,\n        other = _objectWithoutProperties(props, [\"children\", \"value\", \"index\"]);\n\n  return __jsx(\"div\", _extends({\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `scrollable-force-tabpanel-${index}`,\n    \"aria-labelledby\": `scrollable-force-tab-${index}`\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }), value === index && __jsx(Box, {\n    p: 3,\n    style: {\n      padding: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 17\n    }\n  }, children));\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-force-tab-${index}`,\n    'aria-controls': `scrollable-force-tabpanel-${index}`\n  };\n}\n\nconst RequestDetail = props => {\n  var _state$currentTask, _state$currentTask2, _state$currentTask3, _state$currentTask4, _state$currentTask5, _state$currentTask6, _state$currentTask7, _state$currentTask8, _state$currentTask9, _state$currentTask10, _state$currentTask11;\n\n  const classes = useStyles();\n  const {\n    enqueueSnackbar\n  } = useSnackbar(); //props\n\n  const {\n    state,\n    taskmid,\n    taskHotelRefNo,\n    tableName,\n    gid,\n    setToState\n  } = props; //context\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    GENERAL_SETTINGS\n  } = useContext(WebCmsGlobal); //redux\n\n  const loginfo = useSelector(state => state.orest.currentUser && state.orest.currentUser.loginfo);\n  const token = useSelector(state => state.orest.currentUser !== null ? state.orest.currentUser.auth.access_token : DEFAULT_OREST_TOKEN); //state\n\n  const {\n    0: isInfoLoading,\n    1: setIsInfoLoading\n  } = useState(false);\n  const {\n    0: taskPanelStatus,\n    1: setTaskPanelStatus\n  } = useState(0);\n  const {\n    0: taskTransList,\n    1: setTaskTransList\n  } = useState([]);\n  const {\n    0: taskTransListLoading,\n    1: setTaskTransListLoading\n  } = useState(false);\n  const {\n    0: taskFileList,\n    1: setTaskFileList\n  } = useState([]);\n  const {\n    0: taskFileListLoading,\n    1: setTaskFileListLoading\n  } = useState(false);\n  const {\n    0: taskFileUploadStatus,\n    1: setTaskFileUploadStatus\n  } = useState(false);\n  const {\n    0: hasRightData,\n    1: setHasRightData\n  } = useState();\n  const {\n    0: tabList,\n    1: setTabList\n  } = useState([]);\n  const {\n    0: isFileDownloading,\n    1: setIsFileDownloading\n  } = useState(false);\n  const {\n    0: isFileDeleting,\n    1: setIsFileDeleting\n  } = useState(false);\n  const {\n    0: openTrackedDialog,\n    1: setOpenTrackedDialog\n  } = useState(false);\n  const {\n    0: deleteFileInfo,\n    1: setDeleteFileInfo\n  } = useState(false);\n  const {\n    0: popupState,\n    1: setPopupState\n  } = useState({});\n  const {\n    0: openPreviewDialog,\n    1: setOpenPreviewDialog\n  } = useState(false);\n  const {\n    0: isPreviewLoading,\n    1: setIsPreviewLoading\n  } = useState(false);\n  const {\n    0: mediaUrl,\n    1: setMediaUrl\n  } = useState('');\n  const {\n    0: fileType,\n    1: setFileType\n  } = useState('');\n  const {\n    0: isTagLoading,\n    1: setIsTagLoading\n  } = useState(false);\n  const {\n    0: tagList,\n    1: setTagList\n  } = useState([]);\n  const {\n    0: openAddRaTagDialog,\n    1: setOpenAddRaTagDialog\n  } = useState(false);\n  const tableLocalization = MaterialTableLocalization();\n  const mimeTypes = {\n    image: 'image',\n    audio: 'audio',\n    video: 'video'\n  };\n  const tabKeys = {\n    noteCount: 'notecount',\n    transCount: 'transcount',\n    fileCount: 'filecount'\n  };\n\n  const handleChange = (event, newValue) => {\n    setTaskPanelStatus(newValue);\n  };\n\n  const handleReset = () => {\n    setFileType('');\n    setMediaUrl('');\n  };\n\n  const taskPanels = {\n    noteList: 0,\n    transList: 1,\n    fileList: 2,\n    tagList: 3\n  };\n\n  const getTaskFileList = () => {\n    setTaskFileListLoading(true);\n    ViewList({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.RAFILE,\n      token,\n      params: {\n        query: `masterid:${state.currentTask.mid},isactive:true`,\n        limit: 100,\n        hotelrefno: taskHotelRefNo\n      }\n    }).then(r => {\n      if (r.status === 200 && r.data.data.length > 0) {\n        setTaskFileList(r.data.data);\n        setTaskFileListLoading(false);\n      } else {\n        setTaskFileList([]);\n        setTaskFileListLoading(false);\n      }\n    });\n  };\n\n  const getTagList = () => {\n    setIsTagLoading(true);\n    ViewList({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.RATAG,\n      token,\n      params: {\n        query: `masterid:${state.currentTask.mid}`,\n        limit: 100,\n        hotelrefno: taskHotelRefNo\n      }\n    }).then(r => {\n      setIsTagLoading(false);\n\n      if (r.status === 200) {\n        setTagList(r.data.data.length > 0 ? r.data.data : []);\n      } else {\n        const error = isErrorMsg(r);\n        enqueueSnackbar(error.errMsg, {\n          variant: 'error'\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    let active = true;\n\n    if (active) {\n      setIsInfoLoading(true);\n      UseOrest({\n        apiUrl: GENERAL_SETTINGS.OREST_URL,\n        endpoint: tableName + SLASH + OREST_ENDPOINT.STAT + SLASH + OREST_ENDPOINT.INFO,\n        token,\n        params: {\n          gid: gid,\n          hotelrefno: taskHotelRefNo\n        }\n      }).then(res => {\n        setIsInfoLoading(false);\n\n        if (res.status === 200 && res.data.data) {\n          const info = res.data.data;\n          const tempArray = [];\n          Object.keys(info).forEach(key => {\n            if (key === tabKeys.noteCount || key === tabKeys.transCount || key === tabKeys.fileCount) {\n              tempArray.push({\n                label: key === tabKeys.noteCount ? t('str_notes') : key === tabKeys.transCount ? t('str_trans') : key === tabKeys.fileCount ? t('str_files') : '',\n                renderNumber: key === tabKeys.noteCount ? taskPanels.noteList : key === tabKeys.transCount ? taskPanels.transList : key === tabKeys.fileCount ? taskPanels.fileList : ''\n              });\n            }\n          });\n          tempArray.push({\n            label: t('str_tags'),\n            renderNumber: taskPanels.tagList\n          });\n          setTabList(tempArray);\n        }\n      });\n    }\n\n    return () => {\n      active = false;\n    };\n  }, [taskmid]);\n  useEffect(() => {\n    var _tabList$taskPanelSta, _tabList$taskPanelSta2, _tabList$taskPanelSta3;\n\n    if (((_tabList$taskPanelSta = tabList[taskPanelStatus]) === null || _tabList$taskPanelSta === void 0 ? void 0 : _tabList$taskPanelSta.renderNumber) === taskPanels.transList) {\n      setTaskTransListLoading(true);\n      ViewList({\n        apiUrl: GENERAL_SETTINGS.OREST_URL,\n        endpoint: OREST_ENDPOINT.TSLINE,\n        token,\n        params: {\n          query: `transno::${state.currentTask.transno},isprivate::false`,\n          limit: 100,\n          hotelrefno: taskHotelRefNo\n        }\n      }).then(r => {\n        if (r.status === 200 && r.data.data.length > 0) {\n          setTaskTransList(r.data.data);\n          setTaskTransListLoading(false);\n        } else {\n          setTaskTransList([]);\n          setTaskTransListLoading(false);\n        }\n      });\n    }\n\n    if (((_tabList$taskPanelSta2 = tabList[taskPanelStatus]) === null || _tabList$taskPanelSta2 === void 0 ? void 0 : _tabList$taskPanelSta2.renderNumber) === taskPanels.fileList) {\n      getTaskFileList();\n    }\n\n    if (((_tabList$taskPanelSta3 = tabList[taskPanelStatus]) === null || _tabList$taskPanelSta3 === void 0 ? void 0 : _tabList$taskPanelSta3.renderNumber) === taskPanels.tagList) {\n      getTagList();\n    }\n  }, [taskPanelStatus, taskmid]);\n\n  const endDateHeader = () => {\n    return __jsx(CustomToolTip, {\n      title: t('str_endDateTime'),\n      placement: \"top\",\n      arrow: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 13\n      }\n    }, __jsx(Typography, {\n      style: {\n        fontSize: \"12px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 17\n      }\n    }, t('str_endDT')));\n  };\n\n  const transNoteCell = state => {\n    if (state.note.length > 50) {\n      return __jsx(CustomToolTip, {\n        title: state.note,\n        placement: \"top\",\n        arrow: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 17\n        }\n      }, __jsx(Typography, {\n        className: classes.overFlowDescriptionText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 21\n        }\n      }, state.note));\n    } else {\n      return __jsx(Typography, {\n        key: state.transno,\n        className: classes.descriptionText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 17\n        }\n      }, state.note);\n    }\n  };\n\n  const transTime = state => {\n    const fullEndTime = state.endtime.split(\":\");\n    const endTime = fullEndTime[0] + \":\" + fullEndTime[1];\n    const transTime = state.transdate + \" \" + endTime;\n    return __jsx(Typography, {\n      className: classes.dateText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 13\n      }\n    }, transTime);\n  };\n\n  const taskColumns = [{\n    title: t('str_empCode'),\n    field: 'empcode',\n    cellStyle: {\n      minWidth: 70\n    }\n  }, {\n    title: t('str_workType'),\n    field: 'worktypecode',\n    cellStyle: {\n      minWidth: 120\n    }\n  }, {\n    title: t('str_note'),\n    field: 'note',\n    render: state => transNoteCell(state),\n    cellStyle: {\n      minWidth: 260,\n      maxWidth: 260\n    }\n  }, {\n    title: endDateHeader(),\n    field: 'transdate',\n    render: state => transTime(state),\n    cellStyle: {\n      minWidth: 120\n    }\n  }];\n  const fileColumns = [{\n    title: __jsx(Button, {\n      className: classes.menuButton,\n      style: {\n        padding: 0,\n        margin: 0\n      },\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 17\n      }\n    }, __jsx(MoreVertIcon, {\n      className: classes.iconStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 21\n      }\n    })),\n    field: '',\n    headerStyle: {\n      maxWidth: 64\n    },\n    cellStyle: {\n      whiteSpace: 'nowrap',\n      borderLeft: '1px solid rgba(224, 224, 224, 1)',\n      maxWidth: '64px'\n    },\n    render: props => __jsx(PopupState, {\n      variant: \"popover\",\n      popupId: \"status-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 17\n      }\n    }, popupState => __jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 25\n      }\n    }, __jsx(Button, _extends({\n      className: classes.menuButton,\n      color: 'primary',\n      variant: 'contained'\n    }, bindTrigger(popupState), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 29\n      }\n    }), __jsx(MoreVertIcon, {\n      className: classes.iconStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 33\n      }\n    })), __jsx(Menu, _extends({\n      classes: {\n        paper: classes.popoverStyle\n      },\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"left\"\n      },\n      transformOrigin: {\n        vertical: \"top\",\n        horizontal: \"left\"\n      },\n      getContentAnchorEl: null\n    }, bindMenu(popupState), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 29\n      }\n    }), __jsx(MenuItem, {\n      onClick: () => {\n        setOpenPreviewDialog(true);\n        handlePreviewFile(props === null || props === void 0 ? void 0 : props.gid, props === null || props === void 0 ? void 0 : props.url, popupState);\n      },\n      disabled: isFileDeleting || isFileDownloading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 33\n      }\n    }, __jsx(VisibilityOutlinedIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 37\n      }\n    }), __jsx(Typography, {\n      style: {\n        paddingLeft: '8px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 37\n      }\n    }, t('str_preview'))), (hasRightData === null || hasRightData === void 0 ? void 0 : hasRightData.cand) && __jsx(MenuItem, {\n      onClick: () => {\n        setOpenTrackedDialog(true);\n        setDeleteFileInfo(props);\n        setPopupState(popupState);\n      },\n      disabled: isFileDeleting || isFileDownloading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 41\n      }\n    }, isFileDeleting ? __jsx(LoadingSpinner, {\n      size: 18,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 63\n      }\n    }) : __jsx(DeleteOutlinedIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 93\n      }\n    }), __jsx(Typography, {\n      style: {\n        paddingLeft: '8px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 45\n      }\n    }, t('str_delete'))), __jsx(MenuItem, {\n      onClick: () => handleTaskFileDownload(props.filename, props.gid, props.url, popupState),\n      disabled: isFileDeleting || isFileDownloading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 33\n      }\n    }, isFileDownloading ? __jsx(LoadingSpinner, {\n      size: 18,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 58\n      }\n    }) : __jsx(CloudDownloadOutlinedIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 88\n      }\n    }), __jsx(Typography, {\n      style: {\n        paddingLeft: '8px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 37\n      }\n    }, t('str_download'))))))\n  }, {\n    title: t('str_code'),\n    field: 'code',\n    render: props => __jsx(TableColumnText, {\n      maxWidth: 150,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 30\n      }\n    }, props.code)\n  }, {\n    title: t('str_description'),\n    field: 'description',\n    render: props => __jsx(TableColumnText, {\n      minWidth: 250,\n      maxWidth: 250,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 30\n      }\n    }, props.description)\n  }, {\n    title: t('str_fileType'),\n    field: 'filetype'\n  }, {\n    title: t('str_contentType'),\n    field: 'contentypedesc'\n  }, {\n    title: t('str_fileDesc'),\n    field: 'filename',\n    render: props => __jsx(TableColumnText, {\n      minWidth: 150,\n      maxWidth: 150,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 30\n      }\n    }, props.filename)\n  }, {\n    title: t('str_caption'),\n    field: 'caption',\n    render: props => __jsx(TableColumnText, {\n      minWidth: 150,\n      maxWidth: 150,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 30\n      }\n    }, props.caption)\n  }, {\n    title: t('str_updated'),\n    field: 'insdatetime',\n    render: state => __jsx(TableColumnText, {\n      minWidth: 150,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 30\n      }\n    }, moment(state.insdatetime).format('L  LT'))\n  }, {\n    title: t('str_fileUrl'),\n    field: 'fileurl',\n    render: props => __jsx(TableColumnText, {\n      maxWidth: 150,\n      showToolTip: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 30\n      }\n    }, props.fileurl)\n  }, {\n    title: t('str_masterId'),\n    field: 'masterid',\n    headerStyle: {\n      textAlign: 'right'\n    },\n    render: props => __jsx(TableColumnText, {\n      textAlign: 'right',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 30\n      }\n    }, props.masterid)\n  }, {\n    title: t('str_language'),\n    field: 'langcode'\n  }, {\n    title: t('str_id'),\n    field: 'id',\n    headerStyle: {\n      textAlign: 'right'\n    },\n    render: props => __jsx(TableColumnText, {\n      textAlign: 'right',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 30\n      }\n    }, props.id)\n  }];\n\n  const handleTaskFileUpload = file => {\n    Upload({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      token,\n      params: {\n        masterid: state.currentTask.mid,\n        orsactive: true,\n        hotelrefno: taskHotelRefNo,\n        quality: \"0.1F\"\n      },\n      files: file\n    }).then(r => {\n      setTaskFileUploadStatus(false);\n\n      if (r.status === 200) {\n        getTaskFileList();\n        enqueueSnackbar(t('str_haveBeenUploadedMsg'), {\n          variant: 'success'\n        });\n      } else {\n        const error = isErrorMsg(r);\n        enqueueSnackbar(t(error.errMsg), {\n          variant: 'error'\n        });\n      }\n    });\n  };\n\n  const handleTaskFileDelete = gid => {\n    setIsFileDeleting(true);\n    Delete({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.RAFILE,\n      token,\n      gid: gid,\n      params: {\n        hotelrefno: taskHotelRefNo\n      }\n    }).then(r => {\n      setIsFileDeleting(false);\n\n      if (r.status === 200) {\n        popupState === null || popupState === void 0 ? void 0 : popupState.close();\n        getTaskFileList();\n        enqueueSnackbar(t('str_selectedDeletedMsg'), {\n          variant: 'success'\n        });\n      } else {\n        const error = isErrorMsg(r);\n        enqueueSnackbar(t(error.errMsg), {\n          variant: 'error'\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    axios({\n      url: GENERAL_SETTINGS.OREST_URL + OREST_ENDPOINT.SLASH + OREST_ENDPOINT.TOOLS + OREST_ENDPOINT.SLASH + OREST_ENDPOINT.USER + OREST_ENDPOINT.SLASH + OREST_ENDPOINT.HASRIGHT,\n      method: REQUEST_METHOD_CONST.GET,\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      params: {\n        empid: loginfo.id,\n        submoduleid: 9706\n      }\n    }).then(res => {\n      if (res.status === 200) {\n        setHasRightData(res.data.data);\n      } else if (res.status === 401) {\n        enqueueSnackbar('401 Unauthorized', {\n          variant: 'error'\n        });\n      } else if (res.status === 403) {\n        enqueueSnackbar('403 Forbidden', {\n          variant: 'error'\n        });\n      }\n    });\n  }, []);\n\n  const handlePreviewFile = (gid, fileUrl, popupState) => {\n    setIsPreviewLoading(true);\n    popupState.close();\n    PreviewFile(GENERAL_SETTINGS, token, gid, fileUrl, taskHotelRefNo).then(res => {\n      setIsPreviewLoading(false);\n\n      if (res.success) {\n        setMediaUrl(res === null || res === void 0 ? void 0 : res.url);\n        setFileType(res === null || res === void 0 ? void 0 : res.fileType);\n      } else {\n        enqueueSnackbar(t(res === null || res === void 0 ? void 0 : res.errorText), {\n          variant: (res === null || res === void 0 ? void 0 : res.variant) || 'error'\n        });\n      }\n    });\n  };\n\n  const handleTaskFileDownload = (filename, gid, fileUrl, popupState) => {\n    if (fileUrl.includes('http://') || fileUrl.includes('https://')) {\n      popupState.close();\n      const win = window.open(fileUrl, '_blank');\n\n      if (win != null) {\n        win.focus();\n      }\n    } else {\n      setIsFileDownloading(true);\n      axios({\n        url: GENERAL_SETTINGS.OREST_URL + OREST_ENDPOINT.SLASH + OREST_ENDPOINT.TOOLS + OREST_ENDPOINT.SLASH + OREST_ENDPOINT.FILE + OREST_ENDPOINT.SLASH + OREST_ENDPOINT.DOWNLOAD,\n        method: 'get',\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        params: {\n          gid: gid,\n          hotelrefno: taskHotelRefNo\n        },\n        responseType: 'blob'\n      }).then(response => {\n        setIsFileDownloading(false);\n\n        if (response.status === 200) {\n          const url = window.URL.createObjectURL(new Blob([response.data]));\n          const link = document.createElement('a');\n          link.href = url;\n          link.setAttribute('download', filename.toLowerCase()); //or any other extension\n\n          document.body.appendChild(link);\n          link.click();\n          link.remove();\n          popupState.close();\n          enqueueSnackbar(t('str_selectedDownloadedMsg'), {\n            variant: 'success'\n          });\n        } else {\n          const error = isErrorMsg(response);\n          enqueueSnackbar(t(error.errMsg), {\n            variant: 'error'\n          });\n        }\n      });\n    }\n  };\n\n  const handleBack = () => {\n    setToState('userPortal', ['panelStatus'], state.panels.requestList);\n  };\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 698,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    className: classes.root,\n    style: {\n      minHeight: '50vh'\n    },\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 699,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    style: {\n      alignSelf: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 700,\n      columnNumber: 17\n    }\n  }, __jsx(CustomToolTip, {\n    title: t('str_back'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 701,\n      columnNumber: 21\n    }\n  }, __jsx(Fab, {\n    size: \"medium\",\n    color: \"primary\",\n    \"aria-label\": \"back\",\n    onClick: () => handleBack(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 702,\n      columnNumber: 25\n    }\n  }, __jsx(ArrowBackIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 703,\n      columnNumber: 29\n    }\n  })))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: tableName === OREST_ENDPOINT.TSTRANS ? 4 : 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 707,\n      columnNumber: 17\n    }\n  }, __jsx(Paper, {\n    square: true,\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 708,\n      columnNumber: 21\n    }\n  }, __jsx(List, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 709,\n      columnNumber: 25\n    }\n  }, __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 710,\n      columnNumber: 29\n    }\n  }, __jsx(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 711,\n      columnNumber: 33\n    }\n  }, __jsx(Avatar, {\n    className: classes.avatarStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 712,\n      columnNumber: 37\n    }\n  }, __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 713,\n      columnNumber: 41\n    }\n  }, \"#\"))), __jsx(ListItemText, {\n    primary: t('str_transNo'),\n    secondary: (_state$currentTask = state.currentTask) === null || _state$currentTask === void 0 ? void 0 : _state$currentTask.transno,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 716,\n      columnNumber: 33\n    }\n  })), ((_state$currentTask2 = state.currentTask) === null || _state$currentTask2 === void 0 ? void 0 : _state$currentTask2.roomno) && __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 720,\n      columnNumber: 37\n    }\n  }, __jsx(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 721,\n      columnNumber: 41\n    }\n  }, __jsx(Avatar, {\n    className: classes.avatarStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 722,\n      columnNumber: 45\n    }\n  }, __jsx(ViewQuiltIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 723,\n      columnNumber: 49\n    }\n  }))), __jsx(ListItemText, {\n    primary: t('str_module'),\n    secondary: (_state$currentTask3 = state.currentTask) === null || _state$currentTask3 === void 0 ? void 0 : _state$currentTask3.roomno,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 726,\n      columnNumber: 41\n    }\n  })), ((_state$currentTask4 = state.currentTask) === null || _state$currentTask4 === void 0 ? void 0 : _state$currentTask4.transdate) && __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 732,\n      columnNumber: 37\n    }\n  }, __jsx(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 733,\n      columnNumber: 41\n    }\n  }, __jsx(Avatar, {\n    className: classes.avatarStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 734,\n      columnNumber: 45\n    }\n  }, __jsx(EventNoteIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 735,\n      columnNumber: 49\n    }\n  }))), __jsx(ListItemText, {\n    primary: t('str_transDate'),\n    secondary: (_state$currentTask5 = state.currentTask) === null || _state$currentTask5 === void 0 ? void 0 : _state$currentTask5.transdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 738,\n      columnNumber: 41\n    }\n  })), ((_state$currentTask6 = state.currentTask) === null || _state$currentTask6 === void 0 ? void 0 : _state$currentTask6.callednumber) && __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 744,\n      columnNumber: 37\n    }\n  }, __jsx(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 745,\n      columnNumber: 41\n    }\n  }, __jsx(Avatar, {\n    className: classes.avatarStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 746,\n      columnNumber: 45\n    }\n  }, __jsx(PhoneIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 747,\n      columnNumber: 49\n    }\n  }))), __jsx(ListItemText, {\n    primary: t('str_calledNumber'),\n    secondary: (_state$currentTask7 = state.currentTask) === null || _state$currentTask7 === void 0 ? void 0 : _state$currentTask7.callednumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 750,\n      columnNumber: 41\n    }\n  })), ((_state$currentTask8 = state.currentTask) === null || _state$currentTask8 === void 0 ? void 0 : _state$currentTask8.description) && __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 755,\n      columnNumber: 33\n    }\n  }, __jsx(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 756,\n      columnNumber: 37\n    }\n  }, __jsx(Avatar, {\n    className: classes.avatarStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 757,\n      columnNumber: 41\n    }\n  }, __jsx(SubjectIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 758,\n      columnNumber: 45\n    }\n  }))), __jsx(ListItemText, {\n    primary: t('str_description'),\n    secondary: (_state$currentTask9 = state.currentTask) === null || _state$currentTask9 === void 0 ? void 0 : _state$currentTask9.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 761,\n      columnNumber: 37\n    }\n  })), ((_state$currentTask10 = state.currentTask) === null || _state$currentTask10 === void 0 ? void 0 : _state$currentTask10.note) && __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 766,\n      columnNumber: 33\n    }\n  }, __jsx(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 767,\n      columnNumber: 37\n    }\n  }, __jsx(Avatar, {\n    className: classes.avatarStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 768,\n      columnNumber: 41\n    }\n  }, __jsx(NoteIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 769,\n      columnNumber: 45\n    }\n  }))), __jsx(ListItemText, {\n    primary: t('str_note'),\n    secondary: (_state$currentTask11 = state.currentTask) === null || _state$currentTask11 === void 0 ? void 0 : _state$currentTask11.note,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 772,\n      columnNumber: 37\n    }\n  }))))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: tableName === OREST_ENDPOINT.TSTRANS ? 8 : 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 778,\n      columnNumber: 17\n    }\n  }, isInfoLoading ? __jsx(LoadingSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 781,\n      columnNumber: 29\n    }\n  }) : __jsx(Paper, {\n    square: true,\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 783,\n      columnNumber: 29\n    }\n  }, __jsx(AppBar, {\n    position: \"static\",\n    color: \"default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 784,\n      columnNumber: 33\n    }\n  }, __jsx(Tabs, {\n    color: 'primary',\n    variant: \"fullWidth\",\n    value: taskPanelStatus,\n    onChange: handleChange,\n    scrollButtons: \"on\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 785,\n      columnNumber: 37\n    }\n  }, tabList.sort((a, b) => a.renderNumber - b.renderNumber).map((item, index) => __jsx(Tab, _extends({\n    key: index,\n    label: item.label\n  }, a11yProps(index), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 794,\n      columnNumber: 49\n    }\n  }))))), tabList.sort((a, b) => a.renderNumber - b.renderNumber).map((item, index) => __jsx(TabPanel, {\n    value: taskPanelStatus,\n    index: index,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 801,\n      columnNumber: 41\n    }\n  }, __jsx(\"div\", {\n    style: {\n      paddingTop: '16px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 802,\n      columnNumber: 45\n    }\n  }, item.renderNumber === taskPanels.noteList ? __jsx(CommonNotes, {\n    initialIncDone: false,\n    mid: taskmid,\n    dataHotelRefNo: taskHotelRefNo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 804,\n      columnNumber: 53\n    }\n  }) : item.renderNumber === taskPanels.transList ? __jsx(\"div\", {\n    className: classes.table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 810,\n      columnNumber: 53\n    }\n  }, __jsx(MaterialTable, {\n    title: __jsx(Typography, {\n      className: classes.tableTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 813,\n        columnNumber: 65\n      }\n    }, \"Trans list\"),\n    columns: taskColumns,\n    data: taskTransList,\n    isLoading: taskTransListLoading,\n    localization: MaterialTableLocalization,\n    options: {\n      headerStyle: {\n        fontWeight: \"bold\",\n        fontSize: \"12px\",\n        color: \"#A3A6B4\",\n        textTransform: \"uppercase\",\n        backgroundColor: \"#F5F6FA\"\n      }\n    },\n    components: {\n      Toolbar: props => __jsx(\"div\", {\n        className: classes.tableTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 830,\n          columnNumber: 69\n        }\n      }, __jsx(MTableToolbar, _extends({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 831,\n          columnNumber: 73\n        }\n      })))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 811,\n      columnNumber: 57\n    }\n  })) : item.renderNumber === taskPanels.fileList ? __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 838,\n      columnNumber: 53\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 839,\n      columnNumber: 57\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 840,\n      columnNumber: 61\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 4,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 841,\n      columnNumber: 65\n    }\n  }, __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 842,\n      columnNumber: 69\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 843,\n      columnNumber: 73\n    }\n  }, __jsx(CustomToolTip, {\n    title: t('str_refresh'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 844,\n      columnNumber: 77\n    }\n  }, __jsx(IconButton, {\n    onClick: getTaskFileList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 845,\n      columnNumber: 81\n    }\n  }, __jsx(CachedIcon, {\n    style: {\n      color: \"#F16A4B\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 848,\n      columnNumber: 85\n    }\n  })))), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 852,\n      columnNumber: 73\n    }\n  }, __jsx(CustomToolTip, {\n    title: t('str_add'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 853,\n      columnNumber: 77\n    }\n  }, __jsx(IconButton, {\n    onClick: () => setTaskFileUploadStatus(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 854,\n      columnNumber: 81\n    }\n  }, __jsx(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 857,\n      columnNumber: 85\n    }\n  })))))), __jsx(Grid, {\n    item: true,\n    xs: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 863,\n      columnNumber: 65\n    }\n  }))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 867,\n      columnNumber: 57\n    }\n  }, __jsx(\"div\", {\n    className: classes.table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 868,\n      columnNumber: 61\n    }\n  }, __jsx(MaterialTable, {\n    columns: fileColumns,\n    data: taskFileList,\n    isLoading: taskFileListLoading,\n    options: {\n      headerStyle: {\n        cursor: 'default',\n        fontWeight: \"bold\",\n        fontSize: \"12px\",\n        color: \"#A3A6B4\",\n        textTransform: \"uppercase\",\n        backgroundColor: \"#F5F6FA\",\n        whiteSpace: 'nowrap',\n        borderLeft: '1px solid #FFF'\n      },\n      cellStyle: {\n        whiteSpace: 'nowrap',\n        borderLeft: '1px solid rgba(224, 224, 224, 1)',\n        minWidth: '100px',\n        fontSize: '13px'\n      },\n      toolbar: false,\n      selection: false,\n      sorting: false,\n      search: false,\n      actionsColumnIndex: 1,\n      selectionColumnIndex: 1\n    },\n    localization: tableLocalization,\n    components: {\n      Header: props => {\n        const overrideProps = _objectSpread({}, props);\n\n        overrideProps.draggable = false;\n        return __jsx(MTableHeader, _extends({}, overrideProps, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 903,\n            columnNumber: 81\n          }\n        }));\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 869,\n      columnNumber: 65\n    }\n  })))) : item.renderNumber === taskPanels.tagList ? __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 912,\n      columnNumber: 53\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 913,\n      columnNumber: 57\n    }\n  }, __jsx(MaterialTableGeneric, {\n    isLoading: isTagLoading,\n    hoverFirstColumn: false,\n    showMoreActionButton: false,\n    actionFirstColumn: true,\n    moreActionList: [{\n      title: t('str_edit'),\n      icon: __jsx(EditOutlinedIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 923,\n          columnNumber: 83\n        }\n      }),\n      onClick: data => setOpenAddRaTagDialog(true)\n    }],\n    columns: [{\n      title: t('tagstr'),\n      field: 'tagstr',\n      render: props => __jsx(TableColumnText, {\n        maxWidth: 150,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 933,\n          columnNumber: 96\n        }\n      }, props.tagstr)\n    }, {\n      title: t('masterId'),\n      field: 'masterid',\n      headerStyle: {\n        textAlign: 'right'\n      },\n      render: props => __jsx(TableColumnText, {\n        textAlign: 'right',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 941,\n          columnNumber: 94\n        }\n      }, props.masterid)\n    }, {\n      title: t('str_mid'),\n      field: 'mid',\n      headerStyle: {\n        textAlign: 'right'\n      },\n      render: props => __jsx(TableColumnText, {\n        textAlign: 'right',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 949,\n          columnNumber: 94\n        }\n      }, props.mid)\n    }, {\n      title: t('str_id'),\n      field: 'id',\n      headerStyle: {\n        textAlign: 'right'\n      },\n      render: props => __jsx(TableColumnText, {\n        textAlign: 'right',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 957,\n          columnNumber: 94\n        }\n      }, props.id)\n    }],\n    onRefresh: () => getTagList(),\n    data: tagList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 914,\n      columnNumber: 61\n    }\n  }))) : null))))), __jsx(DropzoneDialog, {\n    open: taskFileUploadStatus,\n    onSave: handleTaskFileUpload,\n    acceptedFiles: ['image/jpeg', 'image/png', 'image/bmp', 'image/gif', 'video/mp4', 'application/zip'],\n    showPreviews: true,\n    filesLimit: 3,\n    maxFileSize: 5000000,\n    onClose: () => setTaskFileUploadStatus(false),\n    submitButtonText: t('str_save'),\n    cancelButtonText: t('str_cancel'),\n    dialogTitle: t('str_uploadAFile'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 977,\n      columnNumber: 17\n    }\n  })), __jsx(TrackedChangesDialog, {\n    open: openTrackedDialog,\n    onPressNo: e => {\n      setOpenTrackedDialog(e);\n    },\n    onPressYes: e => {\n      handleTaskFileDelete(deleteFileInfo === null || deleteFileInfo === void 0 ? void 0 : deleteFileInfo.gid);\n      setOpenTrackedDialog(e);\n    },\n    dialogTitle: t('str_delete'),\n    dialogDesc: __jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1008,\n        columnNumber: 21\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1009,\n        columnNumber: 25\n      }\n    }, t('str_deleteRecordMsg')), __jsx(\"a\", {\n      style: {\n        fontSize: '15px',\n        fontWeight: 'bold'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1010,\n        columnNumber: 25\n      }\n    }, `${t('str_code')}:${deleteFileInfo === null || deleteFileInfo === void 0 ? void 0 : deleteFileInfo.code}`)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 997,\n      columnNumber: 13\n    }\n  }), __jsx(MediaViewerDialog, {\n    open: openPreviewDialog,\n    maxWidth: 'md',\n    fullWidth: true,\n    loading: isPreviewLoading,\n    fileType: fileType,\n    url: mediaUrl,\n    t: t,\n    onClose: () => {\n      setOpenPreviewDialog(false);\n      setTimeout(() => {\n        handleReset();\n      }, 100);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1015,\n      columnNumber: 13\n    }\n  }), __jsx(AddRaTagDialog, {\n    open: openAddRaTagDialog,\n    onClose: () => {\n      handleReset();\n      setOpenAddRaTagDialog(false);\n    },\n    onSuccess: () => {\n      getTagList();\n    },\n    mid: taskmid,\n    token: token,\n    orestUrl: GENERAL_SETTINGS.OREST_URL,\n    hotelRefNo: taskHotelRefNo,\n    raTagLabel: t('str_label'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1030,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    state: state.formReducer.userPortal\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value)),\n  updateState: (stateType, stateName, value) => dispatch(updateState(stateType, stateName, value)),\n  pushToState: (stateType, stateName, value) => dispatch(pushToState(stateType, stateName, value)),\n  deleteFromState: (stateType, stateName, value) => dispatch(deleteFromState(stateType, stateName, value))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RequestDetail);","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/user-portal/components/RequestDetail.js"],"names":["React","useState","useContext","useEffect","connect","useSelector","axios","deleteFromState","pushToState","setToState","updateState","WebCmsGlobal","makeStyles","UseOrest","ViewList","Delete","Upload","useTranslation","DEFAULT_OREST_TOKEN","isErrorMsg","OREST_ENDPOINT","REQUEST_METHOD_CONST","AppBar","Avatar","Box","Button","Dialog","Grid","IconButton","List","ListItem","ListItemAvatar","ListItemText","Menu","MenuItem","Tab","Tabs","Paper","Typography","Fab","LoadingSpinner","MaterialTable","MTableHeader","MTableToolbar","DropzoneDialog","ViewQuiltIcon","EventNoteIcon","SubjectIcon","NoteIcon","CachedIcon","AddIcon","MoreVertIcon","DeleteOutlinedIcon","CloudDownloadOutlinedIcon","VisibilityOutlinedIcon","PhoneIcon","ArrowBackIcon","CustomToolTip","useSnackbar","moment","MaterialTableLocalization","CommonNotes","SLASH","PopupState","bindTrigger","bindMenu","TableColumnText","TrackedChangesDialog","MaterialTableGeneric","EditOutlinedIcon","AddRaTagDialog","PreviewFile","MediaViewerDialog","useStyles","theme","root","width","listRoot","maxHeight","minHeight","overflowY","overflowX","textField","marginLeft","spacing","marginRight","field","tabPanel","padding","tableTitle","fontSize","breakpoints","down","textAlign","table","backgroundColor","dateText","overFlowDescriptionText","textOverflow","whiteSpace","overflow","color","descriptionText","avatarStyle","palette","primary","main","tabsRoot","iconButton","iconStyle","standardText","minWidth","menuButton","popoverStyle","TabPanel","props","children","value","index","other","a11yProps","id","RequestDetail","classes","enqueueSnackbar","state","taskmid","taskHotelRefNo","tableName","gid","t","GENERAL_SETTINGS","loginfo","orest","currentUser","token","auth","access_token","isInfoLoading","setIsInfoLoading","taskPanelStatus","setTaskPanelStatus","taskTransList","setTaskTransList","taskTransListLoading","setTaskTransListLoading","taskFileList","setTaskFileList","taskFileListLoading","setTaskFileListLoading","taskFileUploadStatus","setTaskFileUploadStatus","hasRightData","setHasRightData","tabList","setTabList","isFileDownloading","setIsFileDownloading","isFileDeleting","setIsFileDeleting","openTrackedDialog","setOpenTrackedDialog","deleteFileInfo","setDeleteFileInfo","popupState","setPopupState","openPreviewDialog","setOpenPreviewDialog","isPreviewLoading","setIsPreviewLoading","mediaUrl","setMediaUrl","fileType","setFileType","isTagLoading","setIsTagLoading","tagList","setTagList","openAddRaTagDialog","setOpenAddRaTagDialog","tableLocalization","mimeTypes","image","audio","video","tabKeys","noteCount","transCount","fileCount","handleChange","event","newValue","handleReset","taskPanels","noteList","transList","fileList","getTaskFileList","apiUrl","OREST_URL","endpoint","RAFILE","params","query","currentTask","mid","limit","hotelrefno","then","r","status","data","length","getTagList","RATAG","error","errMsg","variant","active","STAT","INFO","res","info","tempArray","Object","keys","forEach","key","push","label","renderNumber","TSLINE","transno","endDateHeader","transNoteCell","note","transTime","fullEndTime","endtime","split","endTime","transdate","taskColumns","title","cellStyle","render","maxWidth","fileColumns","margin","headerStyle","borderLeft","paper","vertical","horizontal","handlePreviewFile","url","paddingLeft","cand","handleTaskFileDownload","filename","code","description","caption","insdatetime","format","fileurl","masterid","handleTaskFileUpload","file","orsactive","quality","files","handleTaskFileDelete","close","TOOLS","USER","HASRIGHT","method","GET","headers","Authorization","empid","submoduleid","fileUrl","success","errorText","includes","win","window","open","focus","FILE","DOWNLOAD","responseType","response","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","toLowerCase","body","appendChild","click","remove","handleBack","panels","requestList","alignSelf","TSTRANS","roomno","callednumber","sort","a","b","map","item","paddingTop","fontWeight","textTransform","Toolbar","cursor","toolbar","selection","sorting","search","actionsColumnIndex","selectionColumnIndex","Header","overrideProps","draggable","icon","onClick","tagstr","e","setTimeout","mapStateToProps","formReducer","userPortal","mapDispatchToProps","dispatch","stateType","stateName"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,EAA0BC,WAA1B,EAAuCC,UAAvC,EAAmDC,WAAnD,QAAsE,eAAtE;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,QAAT,EAAmBC,QAAnB,EAA6BC,MAA7B,EAAqCC,MAArC,QAAmD,eAAnD;AACA,OAAOC,cAAP,MAA2B,uCAA3B;AACA,SAASC,mBAAT,EAA8BC,UAA9B,EAA0CC,cAA1C,EAA0DC,oBAA1D,QAAsF,uBAAtF;AACA,SACIC,MADJ,EAEIC,MAFJ,EAGIC,GAHJ,EAIIC,MAJJ,EAKIC,MALJ,EAMIC,IANJ,EAOIC,UAPJ,EAQIC,IARJ,EASIC,QATJ,EAUIC,cAVJ,EAWIC,YAXJ,EAYIC,IAZJ,EAaIC,QAbJ,EAcIC,GAdJ,EAeIC,IAfJ,EAgBIC,KAhBJ,EAiBIC,UAjBJ,EAkBIC,GAlBJ,QAmBO,mBAnBP;AAoBA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,aAAP,IAAuBC,YAAvB,EAAqCC,aAArC,QAAyD,gBAAzD;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AACA,OAAOC,yBAAP,MAAsC,0CAAtC;AACA,OAAOC,sBAAP,MAAmC,uCAAnC;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,SAAQC,aAAR,QAA4B,+BAA5B;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,yBAAP,MAAsC,iCAAtC;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,SAAQC,KAAR,QAAoB,wBAApB;AACA,OAAOC,UAAP,IAAqBC,WAArB,EAAkCC,QAAlC,QAAkD,yBAAlD;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AACA,OAAOC,oBAAP,MAAiC,4BAAjC;AACA,OAAOC,oBAAP,MAAiC,4BAAjC;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,SAAQC,WAAR,QAA0B,wCAA1B;AACA,OAAOC,iBAAP,MAA8B,8CAA9B;AAIA,MAAMC,SAAS,GAAG7D,UAAU,CAAE8D,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE;AADL,GAD+B;AAIrCC,EAAAA,QAAQ,EAAE;AACND,IAAAA,KAAK,EAAE,MADD;AAENE,IAAAA,SAAS,EAAE,GAFL;AAGNC,IAAAA,SAAS,EAAE,GAHL;AAINC,IAAAA,SAAS,EAAE,QAJL;AAKNC,IAAAA,SAAS,EAAE;AALL,GAJ2B;AAWrCC,EAAAA,SAAS,EAAE;AACPC,IAAAA,UAAU,EAAET,KAAK,CAACU,OAAN,CAAc,CAAd,CADL;AAEPC,IAAAA,WAAW,EAAEX,KAAK,CAACU,OAAN,CAAc,CAAd,CAFN;AAGPR,IAAAA,KAAK,EAAE;AAHA,GAX0B;AAgBrCU,EAAAA,KAAK,EAAE;AACHD,IAAAA,WAAW,EAAEX,KAAK,CAACU,OAAN,CAAc,CAAd;AADV,GAhB8B;AAmBrCG,EAAAA,QAAQ,EAAE;AACNC,IAAAA,OAAO,EAAE;AADH,GAnB2B;AAsBrCC,EAAAA,UAAU,EAAE;AACRC,IAAAA,QAAQ,EAAC,MADD;AAER,KAAChB,KAAK,CAACiB,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;AAC5BF,MAAAA,QAAQ,EAAC,MADmB;AAE5BG,MAAAA,SAAS,EAAC;AAFkB;AAFxB,GAtByB;AA6BrCC,EAAAA,KAAK,EAAE;AACH,4BAAwB;AACpBN,MAAAA,OAAO,EAAE;AADW,KADrB;AAIH,uCAAmC;AAC/BO,MAAAA,eAAe,EAAE;AADc;AAJhC,GA7B8B;AAqCrCC,EAAAA,QAAQ,EAAE;AACNN,IAAAA,QAAQ,EAAC;AADH,GArC2B;AAwCrCO,EAAAA,uBAAuB,EAAE;AACrBC,IAAAA,YAAY,EAAE,UADO;AAErBC,IAAAA,UAAU,EAAE,QAFS;AAGrBC,IAAAA,QAAQ,EAAE,QAHW;AAIrBV,IAAAA,QAAQ,EAAC,MAJY;AAKrBW,IAAAA,KAAK,EAAC;AALe,GAxCY;AA+CrCC,EAAAA,eAAe,EAAE;AACbZ,IAAAA,QAAQ,EAAC,MADI;AAEbW,IAAAA,KAAK,EAAC;AAFO,GA/CoB;AAmDrCE,EAAAA,WAAW,EAAE;AACTR,IAAAA,eAAe,EAAErB,KAAK,CAAC8B,OAAN,CAAcC,OAAd,CAAsBC;AAD9B,GAnDwB;AAsDrCC,EAAAA,QAAQ,EAAE;AACN,wBAAoB;AAChBN,MAAAA,KAAK,EAAC;AADU,KADd;AAIN,4BAAwB;AACpBN,MAAAA,eAAe,EAAC;AADI;AAJlB,GAtD2B;AA8DrCa,EAAAA,UAAU,EAAE;AACRpB,IAAAA,OAAO,EAAE;AADD,GA9DyB;AAiErCqB,EAAAA,SAAS,EAAE;AACPnB,IAAAA,QAAQ,EAAE;AADH,GAjE0B;AAoErCoB,EAAAA,YAAY,EAAE;AACVpB,IAAAA,QAAQ,EAAE,SADA;AAEVqB,IAAAA,QAAQ,EAAE,OAFA;AAGVb,IAAAA,YAAY,EAAE,UAHJ;AAIVE,IAAAA,QAAQ,EAAE,QAJA;AAKVD,IAAAA,UAAU,EAAE;AALF,GApEuB;AA2ErCa,EAAAA,UAAU,EAAE;AACRpC,IAAAA,KAAK,EAAE,MADC;AAERmC,IAAAA,QAAQ,EAAE;AAFF,GA3EyB;AA+ErCE,EAAAA,YAAY,EAAE;AACVrC,IAAAA,KAAK,EAAC;AADI;AA/EuB,CAAZ,CAAD,CAA5B;;AAoFA,SAASsC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA;AAAnB,MAAuCH,KAA7C;AAAA,QAAmCI,KAAnC,4BAA6CJ,KAA7C;;AAEA,SACI;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,MAAM,EAAEE,KAAK,KAAKC,KAFtB;AAGI,IAAA,EAAE,EAAG,6BAA4BA,KAAM,EAH3C;AAII,uBAAkB,wBAAuBA,KAAM;AAJnD,KAKQC,KALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOKF,KAAK,KAAKC,KAAV,IACG,MAAC,GAAD;AAAK,IAAA,CAAC,EAAE,CAAR;AAAW,IAAA,KAAK,EAAE;AAAE9B,MAAAA,OAAO,EAAE;AAAX,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK4B,QADL,CARR,CADJ;AAeH;;AAED,SAASI,SAAT,CAAmBF,KAAnB,EAA0B;AACtB,SAAO;AACHG,IAAAA,EAAE,EAAG,wBAAuBH,KAAM,EAD/B;AAEH,qBAAkB,6BAA4BA,KAAM;AAFjD,GAAP;AAIH;;AAED,MAAMI,aAAa,GAAIP,KAAD,IAAW;AAAA;;AAC7B,QAAMQ,OAAO,GAAGlD,SAAS,EAAzB;AACA,QAAM;AAAEmD,IAAAA;AAAF,MAAsBlE,WAAW,EAAvC,CAF6B,CAI7B;;AACA,QAAM;AAAEmE,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA,cAAlB;AAAkCC,IAAAA,SAAlC;AAA6CC,IAAAA,GAA7C;AAAkDxH,IAAAA;AAAlD,MAAiE0G,KAAvE,CAL6B,CAO7B;;AACA,QAAM;AAAEe,IAAAA;AAAF,MAAQjH,cAAc,EAA5B;AACA,QAAM;AAAEkH,IAAAA;AAAF,MAAuBjI,UAAU,CAACS,YAAD,CAAvC,CAT6B,CAW7B;;AACA,QAAMyH,OAAO,GAAG/H,WAAW,CAAEwH,KAAD,IAAWA,KAAK,CAACQ,KAAN,CAAYC,WAAZ,IAA2BT,KAAK,CAACQ,KAAN,CAAYC,WAAZ,CAAwBF,OAA/D,CAA3B;AACA,QAAMG,KAAK,GAAGlI,WAAW,CAAEwH,KAAD,IACtBA,KAAK,CAACQ,KAAN,CAAYC,WAAZ,KAA4B,IAA5B,GAAmCT,KAAK,CAACQ,KAAN,CAAYC,WAAZ,CAAwBE,IAAxB,CAA6BC,YAAhE,GAA+EvH,mBAD1D,CAAzB,CAb6B,CAiB7B;;AACA,QAAM;AAAA,OAACwH,aAAD;AAAA,OAAgBC;AAAhB,MAAoC1I,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM;AAAA,OAAC2I,eAAD;AAAA,OAAkBC;AAAlB,MAAwC5I,QAAQ,CAAC,CAAD,CAAtD;AACA,QAAM;AAAA,OAAC6I,aAAD;AAAA,OAAgBC;AAAhB,MAAoC9I,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM;AAAA,OAAC+I,oBAAD;AAAA,OAAuBC;AAAvB,MAAkDhJ,QAAQ,CAAC,KAAD,CAAhE;AACA,QAAM;AAAA,OAACiJ,YAAD;AAAA,OAAeC;AAAf,MAAkClJ,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM;AAAA,OAACmJ,mBAAD;AAAA,OAAsBC;AAAtB,MAAgDpJ,QAAQ,CAAC,KAAD,CAA9D;AACA,QAAM;AAAA,OAACqJ,oBAAD;AAAA,OAAuBC;AAAvB,MAAkDtJ,QAAQ,CAAC,KAAD,CAAhE;AACA,QAAM;AAAA,OAACuJ,YAAD;AAAA,OAAeC;AAAf,MAAkCxJ,QAAQ,EAAhD;AACA,QAAM;AAAA,OAACyJ,OAAD;AAAA,OAAUC;AAAV,MAAwB1J,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAA,OAAC2J,iBAAD;AAAA,OAAoBC;AAApB,MAA4C5J,QAAQ,CAAC,KAAD,CAA1D;AACA,QAAM;AAAA,OAAC6J,cAAD;AAAA,OAAiBC;AAAjB,MAAsC9J,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM;AAAA,OAAC+J,iBAAD;AAAA,OAAoBC;AAApB,MAA4ChK,QAAQ,CAAC,KAAD,CAA1D;AACA,QAAM;AAAA,OAACiK,cAAD;AAAA,OAAiBC;AAAjB,MAAsClK,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM;AAAA,OAACmK,UAAD;AAAA,OAAaC;AAAb,MAA8BpK,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM;AAAA,OAACqK,iBAAD;AAAA,OAAoBC;AAApB,MAA4CtK,QAAQ,CAAC,KAAD,CAA1D;AACA,QAAM;AAAA,OAACuK,gBAAD;AAAA,OAAmBC;AAAnB,MAA0CxK,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAM;AAAA,OAACyK,QAAD;AAAA,OAAWC;AAAX,MAA0B1K,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAA,OAAC2K,QAAD;AAAA,OAAWC;AAAX,MAA0B5K,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAM;AAAA,OAAC6K,YAAD;AAAA,OAAeC;AAAf,MAAkC9K,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM;AAAA,OAAC+K,OAAD;AAAA,OAAUC;AAAV,MAAwBhL,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAA,OAACiL,kBAAD;AAAA,OAAqBC;AAArB,MAA8ClL,QAAQ,CAAC,KAAD,CAA5D;AAEA,QAAMmL,iBAAiB,GAAGxH,yBAAyB,EAAnD;AAEA,QAAMyH,SAAS,GAAG;AACdC,IAAAA,KAAK,EAAE,OADO;AAEdC,IAAAA,KAAK,EAAE,OAFO;AAGdC,IAAAA,KAAK,EAAE;AAHO,GAAlB;AAMA,QAAMC,OAAO,GAAG;AACZC,IAAAA,SAAS,EAAE,WADC;AAEZC,IAAAA,UAAU,EAAE,YAFA;AAGZC,IAAAA,SAAS,EAAE;AAHC,GAAhB;;AAMA,QAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACtClD,IAAAA,kBAAkB,CAACkD,QAAD,CAAlB;AACH,GAFD;;AAIA,QAAMC,WAAW,GAAG,MAAM;AACtBnB,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAF,IAAAA,WAAW,CAAC,EAAD,CAAX;AACH,GAHD;;AAKA,QAAMsB,UAAU,GAAG;AACfC,IAAAA,QAAQ,EAAE,CADK;AAEfC,IAAAA,SAAS,EAAE,CAFI;AAGfC,IAAAA,QAAQ,EAAE,CAHK;AAIfpB,IAAAA,OAAO,EAAE;AAJM,GAAnB;;AAOA,QAAMqB,eAAe,GAAG,MAAM;AAC1BhD,IAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACAvI,IAAAA,QAAQ,CAAC;AACLwL,MAAAA,MAAM,EAAEnE,gBAAgB,CAACoE,SADpB;AAELC,MAAAA,QAAQ,EAAEpL,cAAc,CAACqL,MAFpB;AAGLlE,MAAAA,KAHK;AAILmE,MAAAA,MAAM,EAAE;AACJC,QAAAA,KAAK,EAAG,YAAW9E,KAAK,CAAC+E,WAAN,CAAkBC,GAAI,gBADrC;AAEJC,QAAAA,KAAK,EAAE,GAFH;AAGJC,QAAAA,UAAU,EAAEhF;AAHR;AAJH,KAAD,CAAR,CASGiF,IATH,CASSC,CAAD,IAAO;AACX,UAAIA,CAAC,CAACC,MAAF,KAAa,GAAb,IAAoBD,CAAC,CAACE,IAAF,CAAOA,IAAP,CAAYC,MAAZ,GAAqB,CAA7C,EAAgD;AAC5CjE,QAAAA,eAAe,CAAC8D,CAAC,CAACE,IAAF,CAAOA,IAAR,CAAf;AACA9D,QAAAA,sBAAsB,CAAC,KAAD,CAAtB;AACH,OAHD,MAGO;AACHF,QAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,QAAAA,sBAAsB,CAAC,KAAD,CAAtB;AACH;AACJ,KAjBD;AAkBH,GApBD;;AAsBA,QAAMgE,UAAU,GAAG,MAAM;AACrBtC,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAjK,IAAAA,QAAQ,CAAC;AACLwL,MAAAA,MAAM,EAAEnE,gBAAgB,CAACoE,SADpB;AAELC,MAAAA,QAAQ,EAAEpL,cAAc,CAACkM,KAFpB;AAGL/E,MAAAA,KAHK;AAILmE,MAAAA,MAAM,EAAE;AACJC,QAAAA,KAAK,EAAG,YAAW9E,KAAK,CAAC+E,WAAN,CAAkBC,GAAI,EADrC;AAEJC,QAAAA,KAAK,EAAE,GAFH;AAGJC,QAAAA,UAAU,EAAEhF;AAHR;AAJH,KAAD,CAAR,CASGiF,IATH,CASSC,CAAD,IAAO;AACXlC,MAAAA,eAAe,CAAC,KAAD,CAAf;;AACA,UAAIkC,CAAC,CAACC,MAAF,KAAa,GAAjB,EAAsB;AAClBjC,QAAAA,UAAU,CAACgC,CAAC,CAACE,IAAF,CAAOA,IAAP,CAAYC,MAAZ,GAAqB,CAArB,GAAyBH,CAAC,CAACE,IAAF,CAAOA,IAAhC,GAAuC,EAAxC,CAAV;AACH,OAFD,MAEO;AACH,cAAMI,KAAK,GAAGpM,UAAU,CAAC8L,CAAD,CAAxB;AACArF,QAAAA,eAAe,CAAC2F,KAAK,CAACC,MAAP,EAAe;AAACC,UAAAA,OAAO,EAAE;AAAV,SAAf,CAAf;AAEH;AACJ,KAlBD;AAmBH,GArBD;;AAuBAtN,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIuN,MAAM,GAAG,IAAb;;AACA,QAAIA,MAAJ,EAAY;AACR/E,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACA9H,MAAAA,QAAQ,CAAC;AACLyL,QAAAA,MAAM,EAAEnE,gBAAgB,CAACoE,SADpB;AAELC,QAAAA,QAAQ,EAAExE,SAAS,GAAGlE,KAAZ,GAAoB1C,cAAc,CAACuM,IAAnC,GAA0C7J,KAA1C,GAAkD1C,cAAc,CAACwM,IAFtE;AAGLrF,QAAAA,KAHK;AAILmE,QAAAA,MAAM,EAAE;AACJzE,UAAAA,GAAG,EAAEA,GADD;AAEJ8E,UAAAA,UAAU,EAAEhF;AAFR;AAJH,OAAD,CAAR,CAQGiF,IARH,CAQQa,GAAG,IAAI;AACXlF,QAAAA,gBAAgB,CAAC,KAAD,CAAhB;;AACA,YAAGkF,GAAG,CAACX,MAAJ,KAAe,GAAf,IAAsBW,GAAG,CAACV,IAAJ,CAASA,IAAlC,EAAwC;AACpC,gBAAMW,IAAI,GAAGD,GAAG,CAACV,IAAJ,CAASA,IAAtB;AACA,gBAAMY,SAAS,GAAG,EAAlB;AACAC,UAAAA,MAAM,CAACC,IAAP,CAAYH,IAAZ,EAAkBI,OAAlB,CAA2BC,GAAD,IAAS;AAC/B,gBAAGA,GAAG,KAAK1C,OAAO,CAACC,SAAhB,IAA6ByC,GAAG,KAAK1C,OAAO,CAACE,UAA7C,IAA2DwC,GAAG,KAAK1C,OAAO,CAACG,SAA9E,EAAyF;AACrFmC,cAAAA,SAAS,CAACK,IAAV,CAAe;AACXC,gBAAAA,KAAK,EAAEF,GAAG,KAAK1C,OAAO,CAACC,SAAhB,GAA4BxD,CAAC,CAAC,WAAD,CAA7B,GAA6CiG,GAAG,KAAK1C,OAAO,CAACE,UAAhB,GAA6BzD,CAAC,CAAC,WAAD,CAA9B,GAA8CiG,GAAG,KAAK1C,OAAO,CAACG,SAAhB,GAA4B1D,CAAC,CAAC,WAAD,CAA7B,GAA6C,EADpI;AAEXoG,gBAAAA,YAAY,EAAEH,GAAG,KAAK1C,OAAO,CAACC,SAAhB,GAA4BO,UAAU,CAACC,QAAvC,GAAkDiC,GAAG,KAAK1C,OAAO,CAACE,UAAhB,GAA6BM,UAAU,CAACE,SAAxC,GAAoDgC,GAAG,KAAK1C,OAAO,CAACG,SAAhB,GAA4BK,UAAU,CAACG,QAAvC,GAAkD;AAF3J,eAAf;AAIH;AACJ,WAPD;AAQA2B,UAAAA,SAAS,CAACK,IAAV,CAAe;AACXC,YAAAA,KAAK,EAAEnG,CAAC,CAAC,UAAD,CADG;AAEXoG,YAAAA,YAAY,EAAErC,UAAU,CAACjB;AAFd,WAAf;AAIArB,UAAAA,UAAU,CAACoE,SAAD,CAAV;AAEH;AACJ,OA5BD;AA6BH;;AAED,WAAO,MAAM;AACTL,MAAAA,MAAM,GAAG,KAAT;AACH,KAFD;AAGH,GAtCQ,EAsCN,CAAC5F,OAAD,CAtCM,CAAT;AAwCA3H,EAAAA,SAAS,CAAC,MAAM;AAAA;;AACZ,QAAI,0BAAAuJ,OAAO,CAACd,eAAD,CAAP,gFAA0B0F,YAA1B,MAA2CrC,UAAU,CAACE,SAA1D,EAAqE;AACjElD,MAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACAnI,MAAAA,QAAQ,CAAC;AACLwL,QAAAA,MAAM,EAAEnE,gBAAgB,CAACoE,SADpB;AAELC,QAAAA,QAAQ,EAAEpL,cAAc,CAACmN,MAFpB;AAGLhG,QAAAA,KAHK;AAILmE,QAAAA,MAAM,EAAE;AACJC,UAAAA,KAAK,EAAG,YAAW9E,KAAK,CAAC+E,WAAN,CAAkB4B,OAAQ,mBADzC;AAEJ1B,UAAAA,KAAK,EAAE,GAFH;AAGJC,UAAAA,UAAU,EAAEhF;AAHR;AAJH,OAAD,CAAR,CASGiF,IATH,CASSC,CAAD,IAAO;AACX,YAAIA,CAAC,CAACC,MAAF,KAAa,GAAb,IAAoBD,CAAC,CAACE,IAAF,CAAOA,IAAP,CAAYC,MAAZ,GAAqB,CAA7C,EAAgD;AAC5CrE,UAAAA,gBAAgB,CAACkE,CAAC,CAACE,IAAF,CAAOA,IAAR,CAAhB;AACAlE,UAAAA,uBAAuB,CAAC,KAAD,CAAvB;AACH,SAHD,MAGO;AACHF,UAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACAE,UAAAA,uBAAuB,CAAC,KAAD,CAAvB;AACH;AACJ,OAjBD;AAkBH;;AAED,QAAI,2BAAAS,OAAO,CAACd,eAAD,CAAP,kFAA0B0F,YAA1B,MAA2CrC,UAAU,CAACG,QAA1D,EAAoE;AAChEC,MAAAA,eAAe;AAClB;;AACD,QAAG,2BAAA3C,OAAO,CAACd,eAAD,CAAP,kFAA0B0F,YAA1B,MAA2CrC,UAAU,CAACjB,OAAzD,EAAkE;AAC9DqC,MAAAA,UAAU;AACb;AACJ,GA7BQ,EA6BN,CAACzE,eAAD,EAAkBd,OAAlB,CA7BM,CAAT;;AA+BA,QAAM2G,aAAa,GAAG,MAAM;AACxB,WACI,MAAC,aAAD;AAAe,MAAA,KAAK,EAAEvG,CAAC,CAAC,iBAAD,CAAvB;AAA4C,MAAA,SAAS,EAAE,KAAvD;AAA8D,MAAA,KAAK,MAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,UAAD;AAAY,MAAA,KAAK,EAAE;AAACxC,QAAAA,QAAQ,EAAC;AAAV,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuCwC,CAAC,CAAC,WAAD,CAAxC,CADJ,CADJ;AAKH,GAND;;AAQA,QAAMwG,aAAa,GAAI7G,KAAD,IAAW;AAC7B,QAAGA,KAAK,CAAC8G,IAAN,CAAWvB,MAAX,GAAoB,EAAvB,EAA2B;AACvB,aACI,MAAC,aAAD;AAAe,QAAA,KAAK,EAAEvF,KAAK,CAAC8G,IAA5B;AAAkC,QAAA,SAAS,EAAE,KAA7C;AAAoD,QAAA,KAAK,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,UAAD;AAAY,QAAA,SAAS,EAAEhH,OAAO,CAAC1B,uBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyD4B,KAAK,CAAC8G,IAA/D,CADJ,CADJ;AAKH,KAND,MAMO;AACH,aACI,MAAC,UAAD;AAAY,QAAA,GAAG,EAAE9G,KAAK,CAAC2G,OAAvB;AAAgC,QAAA,SAAS,EAAE7G,OAAO,CAACrB,eAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqEuB,KAAK,CAAC8G,IAA3E,CADJ;AAGH;AACJ,GAZD;;AAcA,QAAMC,SAAS,GAAI/G,KAAD,IAAW;AACzB,UAAMgH,WAAW,GAAIhH,KAAK,CAACiH,OAAN,CAAcC,KAAd,CAAoB,GAApB,CAArB;AACA,UAAMC,OAAO,GAAGH,WAAW,CAAC,CAAD,CAAX,GAAiB,GAAjB,GAAuBA,WAAW,CAAC,CAAD,CAAlD;AACA,UAAMD,SAAS,GAAG/G,KAAK,CAACoH,SAAN,GAAkB,GAAlB,GAAwBD,OAA1C;AACA,WACI,MAAC,UAAD;AAAY,MAAA,SAAS,EAAErH,OAAO,CAAC3B,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK4I,SADL,CADJ;AAKH,GATD;;AAWA,QAAMM,WAAW,GAAG,CAChB;AACIC,IAAAA,KAAK,EAAEjH,CAAC,CAAC,aAAD,CADZ;AAEI5C,IAAAA,KAAK,EAAE,SAFX;AAGI8J,IAAAA,SAAS,EAAE;AACPrI,MAAAA,QAAQ,EAAE;AADH;AAHf,GADgB,EAQhB;AACIoI,IAAAA,KAAK,EAACjH,CAAC,CAAC,cAAD,CADX;AAEI5C,IAAAA,KAAK,EAAE,cAFX;AAGI8J,IAAAA,SAAS,EAAE;AACPrI,MAAAA,QAAQ,EAAE;AADH;AAHf,GARgB,EAehB;AACIoI,IAAAA,KAAK,EAAEjH,CAAC,CAAC,UAAD,CADZ;AAEI5C,IAAAA,KAAK,EAAE,MAFX;AAGI+J,IAAAA,MAAM,EAAExH,KAAK,IAAI6G,aAAa,CAAC7G,KAAD,CAHlC;AAIIuH,IAAAA,SAAS,EAAE;AACPrI,MAAAA,QAAQ,EAAE,GADH;AAEPuI,MAAAA,QAAQ,EAAE;AAFH;AAJf,GAfgB,EAwBhB;AACIH,IAAAA,KAAK,EAAEV,aAAa,EADxB;AAEInJ,IAAAA,KAAK,EAAE,WAFX;AAGI+J,IAAAA,MAAM,EAAExH,KAAK,IAAI+G,SAAS,CAAC/G,KAAD,CAH9B;AAIIuH,IAAAA,SAAS,EAAE;AACPrI,MAAAA,QAAQ,EAAE;AADH;AAJf,GAxBgB,CAApB;AAkCA,QAAMwI,WAAW,GAAG,CAChB;AACIJ,IAAAA,KAAK,EACD,MAAC,MAAD;AAAQ,MAAA,SAAS,EAAExH,OAAO,CAACX,UAA3B;AAAuC,MAAA,KAAK,EAAE;AAACxB,QAAAA,OAAO,EAAE,CAAV;AAAagK,QAAAA,MAAM,EAAE;AAArB,OAA9C;AAAuE,MAAA,QAAQ,MAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,YAAD;AAAc,MAAA,SAAS,EAAE7H,OAAO,CAACd,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFR;AAMIvB,IAAAA,KAAK,EAAE,EANX;AAOImK,IAAAA,WAAW,EAAE;AACTH,MAAAA,QAAQ,EAAE;AADD,KAPjB;AAUIF,IAAAA,SAAS,EAAE;AACPjJ,MAAAA,UAAU,EAAE,QADL;AAEPuJ,MAAAA,UAAU,EAAE,kCAFL;AAGPJ,MAAAA,QAAQ,EAAE;AAHH,KAVf;AAeID,IAAAA,MAAM,EAAElI,KAAK,IACT,MAAC,UAAD;AAAY,MAAA,OAAO,EAAC,SAApB;AAA8B,MAAA,OAAO,EAAC,aAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACMiD,UAAD,IACG,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,MAAD;AAAQ,MAAA,SAAS,EAAEzC,OAAO,CAACX,UAA3B;AAAuC,MAAA,KAAK,EAAE,SAA9C;AAAyD,MAAA,OAAO,EAAE;AAAlE,OAAmFhD,WAAW,CAACoG,UAAD,CAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACI,MAAC,YAAD;AAAc,MAAA,SAAS,EAAEzC,OAAO,CAACd,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAII,MAAC,IAAD;AACI,MAAA,OAAO,EAAE;AACL8I,QAAAA,KAAK,EAAEhI,OAAO,CAACV;AADV,OADb;AAII,MAAA,YAAY,EAAE;AACV2I,QAAAA,QAAQ,EAAE,QADA;AAEVC,QAAAA,UAAU,EAAE;AAFF,OAJlB;AAQI,MAAA,eAAe,EAAE;AACbD,QAAAA,QAAQ,EAAE,KADG;AAEbC,QAAAA,UAAU,EAAE;AAFC,OARrB;AAYI,MAAA,kBAAkB,EAAE;AAZxB,OAaQ5L,QAAQ,CAACmG,UAAD,CAbhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAeI,MAAC,QAAD;AACI,MAAA,OAAO,EAAE,MAAM;AACXG,QAAAA,oBAAoB,CAAC,IAAD,CAApB;AACAuF,QAAAA,iBAAiB,CAAC3I,KAAD,aAACA,KAAD,uBAACA,KAAK,CAAEc,GAAR,EAAad,KAAb,aAAaA,KAAb,uBAAaA,KAAK,CAAE4I,GAApB,EAAyB3F,UAAzB,CAAjB;AACH,OAJL;AAKI,MAAA,QAAQ,EAAEN,cAAc,IAAIF,iBALhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOI,MAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,EAQI,MAAC,UAAD;AAAY,MAAA,KAAK,EAAE;AAACoG,QAAAA,WAAW,EAAE;AAAd,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C9H,CAAC,CAAC,aAAD,CAA3C,CARJ,CAfJ,EA0BQ,CAAAsB,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEyG,IAAd,KACI,MAAC,QAAD;AACI,MAAA,OAAO,EAAE,MAAM;AACXhG,QAAAA,oBAAoB,CAAC,IAAD,CAApB;AACAE,QAAAA,iBAAiB,CAAChD,KAAD,CAAjB;AACAkD,QAAAA,aAAa,CAACD,UAAD,CAAb;AACH,OALL;AAMI,MAAA,QAAQ,EAAEN,cAAc,IAAIF,iBANhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQKE,cAAc,GAAG,MAAC,cAAD;AAAgB,MAAA,IAAI,EAAE,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,GAAiC,MAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARpD,EASI,MAAC,UAAD;AAAY,MAAA,KAAK,EAAE;AAACkG,QAAAA,WAAW,EAAE;AAAd,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C9H,CAAC,CAAC,YAAD,CAA3C,CATJ,CA3BZ,EAwCI,MAAC,QAAD;AACI,MAAA,OAAO,EAAE,MAAMgI,sBAAsB,CAAC/I,KAAK,CAACgJ,QAAP,EAAiBhJ,KAAK,CAACc,GAAvB,EAA4Bd,KAAK,CAAC4I,GAAlC,EAAuC3F,UAAvC,CADzC;AAEI,MAAA,QAAQ,EAAEN,cAAc,IAAIF,iBAFhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIKA,iBAAiB,GAAG,MAAC,cAAD;AAAgB,MAAA,IAAI,EAAE,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,GAAiC,MAAC,yBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJvD,EAKI,MAAC,UAAD;AAAY,MAAA,KAAK,EAAE;AAACoG,QAAAA,WAAW,EAAE;AAAd,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C9H,CAAC,CAAC,cAAD,CAA3C,CALJ,CAxCJ,CAJJ,CAFR;AAhBR,GADgB,EA4EhB;AACIiH,IAAAA,KAAK,EAAEjH,CAAC,CAAC,UAAD,CADZ;AAEI5C,IAAAA,KAAK,EAAE,MAFX;AAGI+J,IAAAA,MAAM,EAAElI,KAAK,IAAI,MAAC,eAAD;AAAiB,MAAA,QAAQ,EAAE,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCA,KAAK,CAACiJ,IAAvC;AAHrB,GA5EgB,EAiFhB;AACIjB,IAAAA,KAAK,EAAEjH,CAAC,CAAC,iBAAD,CADZ;AAEI5C,IAAAA,KAAK,EAAE,aAFX;AAGI+J,IAAAA,MAAM,EAAElI,KAAK,IAAI,MAAC,eAAD;AAAiB,MAAA,QAAQ,EAAE,GAA3B;AAAgC,MAAA,QAAQ,EAAE,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgDA,KAAK,CAACkJ,WAAtD;AAHrB,GAjFgB,EAsFhB;AAAElB,IAAAA,KAAK,EAAEjH,CAAC,CAAC,cAAD,CAAV;AAA4B5C,IAAAA,KAAK,EAAE;AAAnC,GAtFgB,EAuFhB;AAAE6J,IAAAA,KAAK,EAAEjH,CAAC,CAAC,iBAAD,CAAV;AAA+B5C,IAAAA,KAAK,EAAE;AAAtC,GAvFgB,EAwFhB;AACI6J,IAAAA,KAAK,EAAEjH,CAAC,CAAC,cAAD,CADZ;AAEI5C,IAAAA,KAAK,EAAE,UAFX;AAGI+J,IAAAA,MAAM,EAAElI,KAAK,IAAI,MAAC,eAAD;AAAiB,MAAA,QAAQ,EAAE,GAA3B;AAAgC,MAAA,QAAQ,EAAE,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgDA,KAAK,CAACgJ,QAAtD;AAHrB,GAxFgB,EA6FhB;AACIhB,IAAAA,KAAK,EAAEjH,CAAC,CAAC,aAAD,CADZ;AAEI5C,IAAAA,KAAK,EAAE,SAFX;AAGI+J,IAAAA,MAAM,EAAElI,KAAK,IAAI,MAAC,eAAD;AAAiB,MAAA,QAAQ,EAAE,GAA3B;AAAgC,MAAA,QAAQ,EAAE,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgDA,KAAK,CAACmJ,OAAtD;AAHrB,GA7FgB,EAkGhB;AACInB,IAAAA,KAAK,EAAEjH,CAAC,CAAC,aAAD,CADZ;AAEI5C,IAAAA,KAAK,EAAE,aAFX;AAGI+J,IAAAA,MAAM,EAAExH,KAAK,IAAI,MAAC,eAAD;AAAiB,MAAA,QAAQ,EAAE,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiClE,MAAM,CAACkE,KAAK,CAAC0I,WAAP,CAAN,CAA0BC,MAA1B,CAAiC,OAAjC,CAAjC;AAHrB,GAlGgB,EAuGhB;AACIrB,IAAAA,KAAK,EAAEjH,CAAC,CAAC,aAAD,CADZ;AAEI5C,IAAAA,KAAK,EAAE,SAFX;AAGI+J,IAAAA,MAAM,EAAElI,KAAK,IAAI,MAAC,eAAD;AAAiB,MAAA,QAAQ,EAAE,GAA3B;AAAgC,MAAA,WAAW,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6CA,KAAK,CAACsJ,OAAnD;AAHrB,GAvGgB,EA4GhB;AACItB,IAAAA,KAAK,EAAEjH,CAAC,CAAC,cAAD,CADZ;AAEI5C,IAAAA,KAAK,EAAE,UAFX;AAGImK,IAAAA,WAAW,EAAE;AACT5J,MAAAA,SAAS,EAAE;AADF,KAHjB;AAMIwJ,IAAAA,MAAM,EAAElI,KAAK,IAAI,MAAC,eAAD;AAAiB,MAAA,SAAS,EAAE,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsCA,KAAK,CAACuJ,QAA5C;AANrB,GA5GgB,EAoHhB;AAAEvB,IAAAA,KAAK,EAAEjH,CAAC,CAAC,cAAD,CAAV;AAA4B5C,IAAAA,KAAK,EAAE;AAAnC,GApHgB,EAqHhB;AACI6J,IAAAA,KAAK,EAAEjH,CAAC,CAAC,QAAD,CADZ;AAEI5C,IAAAA,KAAK,EAAE,IAFX;AAGImK,IAAAA,WAAW,EAAE;AACT5J,MAAAA,SAAS,EAAE;AADF,KAHjB;AAMIwJ,IAAAA,MAAM,EAAElI,KAAK,IAAI,MAAC,eAAD;AAAiB,MAAA,SAAS,EAAE,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsCA,KAAK,CAACM,EAA5C;AANrB,GArHgB,CAApB;;AAgIA,QAAMkJ,oBAAoB,GAAIC,IAAD,IAAU;AACnC5P,IAAAA,MAAM,CAAC;AACHsL,MAAAA,MAAM,EAAEnE,gBAAgB,CAACoE,SADtB;AAEHhE,MAAAA,KAFG;AAGHmE,MAAAA,MAAM,EAAE;AACJgE,QAAAA,QAAQ,EAAE7I,KAAK,CAAC+E,WAAN,CAAkBC,GADxB;AAEJgE,QAAAA,SAAS,EAAE,IAFP;AAGJ9D,QAAAA,UAAU,EAAEhF,cAHR;AAIJ+I,QAAAA,OAAO,EAAC;AAJJ,OAHL;AASHC,MAAAA,KAAK,EAAEH;AATJ,KAAD,CAAN,CAUG5D,IAVH,CAUSC,CAAD,IAAO;AACX1D,MAAAA,uBAAuB,CAAC,KAAD,CAAvB;;AACA,UAAI0D,CAAC,CAACC,MAAF,KAAa,GAAjB,EAAsB;AAClBb,QAAAA,eAAe;AACfzE,QAAAA,eAAe,CAACM,CAAC,CAAC,yBAAD,CAAF,EAA+B;AAAEuF,UAAAA,OAAO,EAAE;AAAX,SAA/B,CAAf;AACH,OAHD,MAGO;AACH,cAAMF,KAAK,GAAGpM,UAAU,CAAC8L,CAAD,CAAxB;AACArF,QAAAA,eAAe,CAACM,CAAC,CAACqF,KAAK,CAACC,MAAP,CAAF,EAAkB;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAAlB,CAAf;AACH;AACJ,KAnBD;AAoBH,GArBD;;AAuBA,QAAMuD,oBAAoB,GAAI/I,GAAD,IAAS;AAClC8B,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAhJ,IAAAA,MAAM,CAAC;AACHuL,MAAAA,MAAM,EAAEnE,gBAAgB,CAACoE,SADtB;AAEHC,MAAAA,QAAQ,EAAEpL,cAAc,CAACqL,MAFtB;AAGHlE,MAAAA,KAHG;AAIHN,MAAAA,GAAG,EAAEA,GAJF;AAKHyE,MAAAA,MAAM,EAAE;AACJK,QAAAA,UAAU,EAAEhF;AADR;AALL,KAAD,CAAN,CAQGiF,IARH,CAQSC,CAAD,IAAO;AACXlD,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;;AACA,UAAIkD,CAAC,CAACC,MAAF,KAAa,GAAjB,EAAsB;AAClB9C,QAAAA,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAE6G,KAAZ;AACA5E,QAAAA,eAAe;AACfzE,QAAAA,eAAe,CAACM,CAAC,CAAC,wBAAD,CAAF,EAA8B;AAAEuF,UAAAA,OAAO,EAAE;AAAX,SAA9B,CAAf;AACH,OAJD,MAIO;AACH,cAAMF,KAAK,GAAGpM,UAAU,CAAC8L,CAAD,CAAxB;AACArF,QAAAA,eAAe,CAACM,CAAC,CAACqF,KAAK,CAACC,MAAP,CAAF,EAAkB;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAAlB,CAAf;AACH;AACJ,KAlBD;AAmBH,GArBD;;AAuBAtN,EAAAA,SAAS,CAAC,MAAM;AACRG,IAAAA,KAAK,CAAC;AACFyP,MAAAA,GAAG,EACC5H,gBAAgB,CAACoE,SAAjB,GACAnL,cAAc,CAAC0C,KADf,GAEA1C,cAAc,CAAC8P,KAFf,GAGA9P,cAAc,CAAC0C,KAHf,GAIA1C,cAAc,CAAC+P,IAJf,GAKA/P,cAAc,CAAC0C,KALf,GAMA1C,cAAc,CAACgQ,QARjB;AASFC,MAAAA,MAAM,EAAEhQ,oBAAoB,CAACiQ,GAT3B;AAUFC,MAAAA,OAAO,EAAE;AACLC,QAAAA,aAAa,EAAG,UAASjJ,KAAM;AAD1B,OAVP;AAaFmE,MAAAA,MAAM,EAAE;AACJ+E,QAAAA,KAAK,EAAErJ,OAAO,CAACX,EADX;AAEJiK,QAAAA,WAAW,EAAE;AAFT;AAbN,KAAD,CAAL,CAiBG1E,IAjBH,CAiBSa,GAAD,IAAS;AACb,UAAIA,GAAG,CAACX,MAAJ,KAAe,GAAnB,EAAwB;AACnBzD,QAAAA,eAAe,CAACoE,GAAG,CAACV,IAAJ,CAASA,IAAV,CAAf;AACJ,OAFD,MAEO,IAAGU,GAAG,CAACX,MAAJ,KAAe,GAAlB,EAAsB;AACzBtF,QAAAA,eAAe,CAAC,kBAAD,EAAqB;AAAE6F,UAAAA,OAAO,EAAE;AAAX,SAArB,CAAf;AACH,OAFM,MAEA,IAAGI,GAAG,CAACX,MAAJ,KAAe,GAAlB,EAAuB;AAC1BtF,QAAAA,eAAe,CAAC,eAAD,EAAkB;AAAE6F,UAAAA,OAAO,EAAE;AAAX,SAAlB,CAAf;AACH;AACJ,KAzBD;AA0BP,GA3BQ,EA2BN,EA3BM,CAAT;;AA8BA,QAAMqC,iBAAiB,GAAG,CAAC7H,GAAD,EAAM0J,OAAN,EAAevH,UAAf,KAA8B;AACpDK,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACAL,IAAAA,UAAU,CAAC6G,KAAX;AACA1M,IAAAA,WAAW,CAAC4D,gBAAD,EAAmBI,KAAnB,EAA0BN,GAA1B,EAA+B0J,OAA/B,EAAwC5J,cAAxC,CAAX,CAAmEiF,IAAnE,CAAwEa,GAAG,IAAI;AAC3EpD,MAAAA,mBAAmB,CAAC,KAAD,CAAnB;;AACA,UAAGoD,GAAG,CAAC+D,OAAP,EAAgB;AACZjH,QAAAA,WAAW,CAACkD,GAAD,aAACA,GAAD,uBAACA,GAAG,CAAEkC,GAAN,CAAX;AACAlF,QAAAA,WAAW,CAACgD,GAAD,aAACA,GAAD,uBAACA,GAAG,CAAEjD,QAAN,CAAX;AACH,OAHD,MAGO;AACHhD,QAAAA,eAAe,CAACM,CAAC,CAAC2F,GAAD,aAACA,GAAD,uBAACA,GAAG,CAAEgE,SAAN,CAAF,EAAoB;AAAEpE,UAAAA,OAAO,EAAE,CAAAI,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEJ,OAAL,KAAgB;AAA3B,SAApB,CAAf;AACH;AACJ,KARD;AASH,GAZD;;AAcA,QAAMyC,sBAAsB,GAAG,CAACC,QAAD,EAAWlI,GAAX,EAAgB0J,OAAhB,EAAyBvH,UAAzB,KAAwC;AACnE,QAAGuH,OAAO,CAACG,QAAR,CAAiB,SAAjB,KAA+BH,OAAO,CAACG,QAAR,CAAiB,UAAjB,CAAlC,EAAgE;AAC5D1H,MAAAA,UAAU,CAAC6G,KAAX;AACA,YAAMc,GAAG,GAAGC,MAAM,CAACC,IAAP,CAAYN,OAAZ,EAAqB,QAArB,CAAZ;;AACA,UAAII,GAAG,IAAI,IAAX,EAAiB;AACbA,QAAAA,GAAG,CAACG,KAAJ;AACH;AACJ,KAND,MAMO;AACHrI,MAAAA,oBAAoB,CAAC,IAAD,CAApB;AACAvJ,MAAAA,KAAK,CAAC;AACFyP,QAAAA,GAAG,EACC5H,gBAAgB,CAACoE,SAAjB,GACAnL,cAAc,CAAC0C,KADf,GAEA1C,cAAc,CAAC8P,KAFf,GAGA9P,cAAc,CAAC0C,KAHf,GAIA1C,cAAc,CAAC+Q,IAJf,GAKA/Q,cAAc,CAAC0C,KALf,GAMA1C,cAAc,CAACgR,QARjB;AASFf,QAAAA,MAAM,EAAE,KATN;AAUFE,QAAAA,OAAO,EAAE;AACLC,UAAAA,aAAa,EAAG,UAASjJ,KAAM,EAD1B;AAEL,0BAAgB;AAFX,SAVP;AAcFmE,QAAAA,MAAM,EAAE;AACJzE,UAAAA,GAAG,EAAEA,GADD;AAEJ8E,UAAAA,UAAU,EAAEhF;AAFR,SAdN;AAkBFsK,QAAAA,YAAY,EAAE;AAlBZ,OAAD,CAAL,CAmBGrF,IAnBH,CAmBSsF,QAAD,IAAc;AAClBzI,QAAAA,oBAAoB,CAAC,KAAD,CAApB;;AACA,YAAIyI,QAAQ,CAACpF,MAAT,KAAoB,GAAxB,EAA6B;AACzB,gBAAM6C,GAAG,GAAGiC,MAAM,CAACO,GAAP,CAAWC,eAAX,CAA2B,IAAIC,IAAJ,CAAS,CAACH,QAAQ,CAACnF,IAAV,CAAT,CAA3B,CAAZ;AACA,gBAAMuF,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAb;AACAF,UAAAA,IAAI,CAACG,IAAL,GAAY9C,GAAZ;AACA2C,UAAAA,IAAI,CAACI,YAAL,CAAkB,UAAlB,EAA8B3C,QAAQ,CAAC4C,WAAT,EAA9B,EAJyB,CAI6B;;AACtDJ,UAAAA,QAAQ,CAACK,IAAT,CAAcC,WAAd,CAA0BP,IAA1B;AACAA,UAAAA,IAAI,CAACQ,KAAL;AACAR,UAAAA,IAAI,CAACS,MAAL;AACA/I,UAAAA,UAAU,CAAC6G,KAAX;AACArJ,UAAAA,eAAe,CAACM,CAAC,CAAC,2BAAD,CAAF,EAAiC;AAAEuF,YAAAA,OAAO,EAAE;AAAX,WAAjC,CAAf;AACH,SAVD,MAUO;AACH,gBAAMF,KAAK,GAAGpM,UAAU,CAACmR,QAAD,CAAxB;AACA1K,UAAAA,eAAe,CAACM,CAAC,CAACqF,KAAK,CAACC,MAAP,CAAF,EAAkB;AAAEC,YAAAA,OAAO,EAAE;AAAX,WAAlB,CAAf;AACH;AACJ,OAnCD;AAoCH;AACJ,GA9CD;;AAgDA,QAAM2F,UAAU,GAAG,MAAM;AACrB3S,IAAAA,UAAU,CAAC,YAAD,EAAe,CAAC,aAAD,CAAf,EAAgCoH,KAAK,CAACwL,MAAN,CAAaC,WAA7C,CAAV;AACH,GAFD;;AAIA,SACI,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,EAAC,KAA1B;AAAgC,IAAA,SAAS,EAAE3L,OAAO,CAAChD,IAAnD;AAAyD,IAAA,KAAK,EAAE;AAACI,MAAAA,SAAS,EAAE;AAAZ,KAAhE;AAAqF,IAAA,OAAO,EAAE,CAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,KAAK,EAAE;AAACwO,MAAAA,SAAS,EAAE;AAAZ,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,aAAD;AAAe,IAAA,KAAK,EAAErL,CAAC,CAAC,UAAD,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,GAAD;AAAK,IAAA,IAAI,EAAC,QAAV;AAAmB,IAAA,KAAK,EAAC,SAAzB;AAAmC,kBAAW,MAA9C;AAAqD,IAAA,OAAO,EAAE,MAAMkL,UAAU,EAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,CADJ,EAQI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAEpL,SAAS,KAAK5G,cAAc,CAACoS,OAA7B,GAAuC,CAAvC,GAA2C,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD;AAAO,IAAA,MAAM,MAAb;AAAc,IAAA,SAAS,EAAE7L,OAAO,CAAChD,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,SAAS,EAAEgD,OAAO,CAAChD,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAEgD,OAAO,CAACpB,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,CADJ,CADJ,EAMI,MAAC,YAAD;AAAc,IAAA,OAAO,EAAE2B,CAAC,CAAC,aAAD,CAAxB;AAAyC,IAAA,SAAS,wBAAEL,KAAK,CAAC+E,WAAR,uDAAE,mBAAmB4B,OAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADJ,EAUQ,wBAAA3G,KAAK,CAAC+E,WAAN,4EAAmB6G,MAAnB,KACI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAE9L,OAAO,CAACpB,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,EAMI,MAAC,YAAD;AAAc,IAAA,OAAO,EAAE2B,CAAC,CAAC,YAAD,CAAxB;AAAwC,IAAA,SAAS,yBAAEL,KAAK,CAAC+E,WAAR,wDAAE,oBAAmB6G,MAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CAXZ,EAsBQ,wBAAA5L,KAAK,CAAC+E,WAAN,4EAAmBqC,SAAnB,KACI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAEtH,OAAO,CAACpB,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,EAMI,MAAC,YAAD;AAAc,IAAA,OAAO,EAAE2B,CAAC,CAAC,eAAD,CAAxB;AAA2C,IAAA,SAAS,yBAAEL,KAAK,CAAC+E,WAAR,wDAAE,oBAAmBqC,SAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CAvBZ,EAkCQ,wBAAApH,KAAK,CAAC+E,WAAN,4EAAmB8G,YAAnB,KACI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAE/L,OAAO,CAACpB,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,EAMI,MAAC,YAAD;AAAc,IAAA,OAAO,EAAE2B,CAAC,CAAC,kBAAD,CAAxB;AAA8C,IAAA,SAAS,yBAAEL,KAAK,CAAC+E,WAAR,wDAAE,oBAAmB8G,YAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CAnCZ,EA6CK,wBAAA7L,KAAK,CAAC+E,WAAN,4EAAmByD,WAAnB,KACG,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAE1I,OAAO,CAACpB,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,EAMI,MAAC,YAAD;AAAc,IAAA,OAAO,EAAE2B,CAAC,CAAC,iBAAD,CAAxB;AAA6C,IAAA,SAAS,yBAAEL,KAAK,CAAC+E,WAAR,wDAAE,oBAAmByD,WAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CA9CR,EAwDK,yBAAAxI,KAAK,CAAC+E,WAAN,8EAAmB+B,IAAnB,KACG,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAEhH,OAAO,CAACpB,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,EAMI,MAAC,YAAD;AAAc,IAAA,OAAO,EAAE2B,CAAC,CAAC,UAAD,CAAxB;AAAsC,IAAA,SAAS,0BAAEL,KAAK,CAAC+E,WAAR,yDAAE,qBAAmB+B,IAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CAzDR,CADJ,CADJ,CARJ,EA+EI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE3G,SAAS,KAAK5G,cAAc,CAACoS,OAA7B,GAAuC,CAAvC,GAA2C,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQ9K,aAAa,GACT,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADS,GAGT,MAAC,KAAD;AAAO,IAAA,MAAM,MAAb;AAAc,IAAA,SAAS,EAAEf,OAAO,CAAChD,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAQ,IAAA,QAAQ,EAAC,QAAjB;AAA0B,IAAA,KAAK,EAAC,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AACI,IAAA,KAAK,EAAE,SADX;AAEI,IAAA,OAAO,EAAC,WAFZ;AAGI,IAAA,KAAK,EAAEiE,eAHX;AAII,IAAA,QAAQ,EAAEiD,YAJd;AAKI,IAAA,aAAa,EAAC,IALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQQnC,OAAO,CAACiK,IAAR,CAAa,CAACC,CAAD,EAAGC,CAAH,KAASD,CAAC,CAACtF,YAAF,GAAiBuF,CAAC,CAACvF,YAAzC,EAAuDwF,GAAvD,CAA2D,CAACC,IAAD,EAAOzM,KAAP,KACvD,MAAC,GAAD;AAAK,IAAA,GAAG,EAAEA,KAAV;AAAiB,IAAA,KAAK,EAAEyM,IAAI,CAAC1F;AAA7B,KAAwC7G,SAAS,CAACF,KAAD,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,CARR,CADJ,CADJ,EAiBQoC,OAAO,CAACiK,IAAR,CAAa,CAACC,CAAD,EAAGC,CAAH,KAASD,CAAC,CAACtF,YAAF,GAAiBuF,CAAC,CAACvF,YAAzC,EAAuDwF,GAAvD,CAA2D,CAACC,IAAD,EAAOzM,KAAP,KACvD,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEsB,eAAjB;AAAkC,IAAA,KAAK,EAAEtB,KAAzC;AAAgD,IAAA,GAAG,EAAEA,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,KAAK,EAAE;AAAC0M,MAAAA,UAAU,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,IAAI,CAACzF,YAAL,KAAsBrC,UAAU,CAACC,QAAjC,GACG,MAAC,WAAD;AACI,IAAA,cAAc,EAAE,KADpB;AAEI,IAAA,GAAG,EAAEpE,OAFT;AAGI,IAAA,cAAc,EAAEC,cAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,GAMGgM,IAAI,CAACzF,YAAL,KAAsBrC,UAAU,CAACE,SAAjC,GACA;AAAK,IAAA,SAAS,EAAExE,OAAO,CAAC7B,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,aAAD;AACI,IAAA,KAAK,EACD,MAAC,UAAD;AAAY,MAAA,SAAS,EAAE6B,OAAO,CAAClC,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFR;AAII,IAAA,OAAO,EAAEyJ,WAJb;AAKI,IAAA,IAAI,EAAEpG,aALV;AAMI,IAAA,SAAS,EAAEE,oBANf;AAOI,IAAA,YAAY,EAAEpF,yBAPlB;AAQI,IAAA,OAAO,EAAE;AACL6L,MAAAA,WAAW,EAAC;AACRwE,QAAAA,UAAU,EAAC,MADH;AAERvO,QAAAA,QAAQ,EAAC,MAFD;AAGRW,QAAAA,KAAK,EAAC,SAHE;AAIR6N,QAAAA,aAAa,EAAC,WAJN;AAKRnO,QAAAA,eAAe,EAAC;AALR;AADP,KARb;AAiBI,IAAA,UAAU,EAAE;AACRoO,MAAAA,OAAO,EAAEhN,KAAK,IACV;AAAK,QAAA,SAAS,EAAEQ,OAAO,CAAClC,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,aAAD,eAAmB0B,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ;AAFI,KAjBhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADA,GA4BA4M,IAAI,CAACzF,YAAL,KAAsBrC,UAAU,CAACG,QAAjC,GACA,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,EAAE,EAAE,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,EAAE,EAAE,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,aAAD;AAAe,IAAA,KAAK,EAAElE,CAAC,CAAC,aAAD,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AACI,IAAA,OAAO,EAAEmE,eADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,MAAC,UAAD;AAAY,IAAA,KAAK,EAAE;AAAChG,MAAAA,KAAK,EAAC;AAAP,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ,CADJ,CADJ,EAUI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,EAAE,EAAE,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,aAAD;AAAe,IAAA,KAAK,EAAE6B,CAAC,CAAC,SAAD,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AACI,IAAA,OAAO,EAAE,MAAMqB,uBAAuB,CAAC,IAAD,CAD1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ,CADJ,CAVJ,CADJ,CADJ,EAuBI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBJ,CADJ,CADJ,EA6BI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAE5B,OAAO,CAAC7B,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,aAAD;AACI,IAAA,OAAO,EAAEyJ,WADb;AAEI,IAAA,IAAI,EAAErG,YAFV;AAGI,IAAA,SAAS,EAAEE,mBAHf;AAII,IAAA,OAAO,EAAE;AACLqG,MAAAA,WAAW,EAAC;AACR2E,QAAAA,MAAM,EAAE,SADA;AAERH,QAAAA,UAAU,EAAC,MAFH;AAGRvO,QAAAA,QAAQ,EAAC,MAHD;AAIRW,QAAAA,KAAK,EAAC,SAJE;AAKR6N,QAAAA,aAAa,EAAC,WALN;AAMRnO,QAAAA,eAAe,EAAC,SANR;AAORI,QAAAA,UAAU,EAAE,QAPJ;AAQRuJ,QAAAA,UAAU,EAAE;AARJ,OADP;AAWLN,MAAAA,SAAS,EAAE;AACPjJ,QAAAA,UAAU,EAAE,QADL;AAEPuJ,QAAAA,UAAU,EAAE,kCAFL;AAGP3I,QAAAA,QAAQ,EAAE,OAHH;AAIPrB,QAAAA,QAAQ,EAAE;AAJH,OAXN;AAiBL2O,MAAAA,OAAO,EAAE,KAjBJ;AAkBLC,MAAAA,SAAS,EAAE,KAlBN;AAmBLC,MAAAA,OAAO,EAAE,KAnBJ;AAoBLC,MAAAA,MAAM,EAAE,KApBH;AAqBLC,MAAAA,kBAAkB,EAAE,CArBf;AAsBLC,MAAAA,oBAAoB,EAAE;AAtBjB,KAJb;AA4BI,IAAA,YAAY,EAAEtJ,iBA5BlB;AA6BI,IAAA,UAAU,EAAE;AACRuJ,MAAAA,MAAM,EAAGxN,KAAD,IAAW;AACf,cAAMyN,aAAa,qBAAOzN,KAAP,CAAnB;;AACAyN,QAAAA,aAAa,CAACC,SAAd,GAA0B,KAA1B;AACA,eACI,MAAC,YAAD,eAAmBD,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAGH;AAPO,KA7BhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CA7BJ,CADA,GA0EAb,IAAI,CAACzF,YAAL,KAAsBrC,UAAU,CAACjB,OAAjC,GACA,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,oBAAD;AACI,IAAA,SAAS,EAAEF,YADf;AAEI,IAAA,gBAAgB,EAAE,KAFtB;AAGI,IAAA,oBAAoB,EAAE,KAH1B;AAII,IAAA,iBAAiB,MAJrB;AAKI,IAAA,cAAc,EACV,CACI;AACIqE,MAAAA,KAAK,EAAEjH,CAAC,CAAC,UAAD,CADZ;AAEI4M,MAAAA,IAAI,EAAE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFV;AAGIC,MAAAA,OAAO,EAAG5H,IAAD,IAAUhC,qBAAqB,CAAC,IAAD;AAH5C,KADJ,CANR;AAcI,IAAA,OAAO,EACH,CACI;AACIgE,MAAAA,KAAK,EAAEjH,CAAC,CAAC,QAAD,CADZ;AAEI5C,MAAAA,KAAK,EAAE,QAFX;AAGI+J,MAAAA,MAAM,EAAGlI,KAAD,IAAW,MAAC,eAAD;AAAiB,QAAA,QAAQ,EAAE,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiCA,KAAK,CAAC6N,MAAvC;AAHvB,KADJ,EAMI;AACI7F,MAAAA,KAAK,EAAEjH,CAAC,CAAC,UAAD,CADZ;AAEI5C,MAAAA,KAAK,EAAE,UAFX;AAGImK,MAAAA,WAAW,EAAE;AACT5J,QAAAA,SAAS,EAAE;AADF,OAHjB;AAMIwJ,MAAAA,MAAM,EAAElI,KAAK,IAAI,MAAC,eAAD;AAAiB,QAAA,SAAS,EAAE,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsCA,KAAK,CAACuJ,QAA5C;AANrB,KANJ,EAcI;AACIvB,MAAAA,KAAK,EAAEjH,CAAC,CAAC,SAAD,CADZ;AAEI5C,MAAAA,KAAK,EAAE,KAFX;AAGImK,MAAAA,WAAW,EAAE;AACT5J,QAAAA,SAAS,EAAE;AADF,OAHjB;AAMIwJ,MAAAA,MAAM,EAAElI,KAAK,IAAI,MAAC,eAAD;AAAiB,QAAA,SAAS,EAAE,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsCA,KAAK,CAAC0F,GAA5C;AANrB,KAdJ,EAsBI;AACIsC,MAAAA,KAAK,EAAEjH,CAAC,CAAC,QAAD,CADZ;AAEI5C,MAAAA,KAAK,EAAE,IAFX;AAGImK,MAAAA,WAAW,EAAE;AACT5J,QAAAA,SAAS,EAAE;AADF,OAHjB;AAMIwJ,MAAAA,MAAM,EAAElI,KAAK,IAAI,MAAC,eAAD;AAAiB,QAAA,SAAS,EAAE,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsCA,KAAK,CAACM,EAA5C;AANrB,KAtBJ,CAfR;AA+CI,IAAA,SAAS,EAAE,MAAM4F,UAAU,EA/C/B;AAgDI,IAAA,IAAI,EAAErC,OAhDV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADA,GAwDA,IArKR,CADJ,CADJ,CAjBR,CALZ,CA/EJ,EAsRI,MAAC,cAAD;AACI,IAAA,IAAI,EAAE1B,oBADV;AAEI,IAAA,MAAM,EAAEqH,oBAFZ;AAGI,IAAA,aAAa,EAAE,CACX,YADW,EAEX,WAFW,EAGX,WAHW,EAIX,WAJW,EAKX,WALW,EAMX,iBANW,CAHnB;AAWI,IAAA,YAAY,EAAE,IAXlB;AAYI,IAAA,UAAU,EAAE,CAZhB;AAaI,IAAA,WAAW,EAAE,OAbjB;AAcI,IAAA,OAAO,EAAE,MAAMpH,uBAAuB,CAAC,KAAD,CAd1C;AAeI,IAAA,gBAAgB,EAAErB,CAAC,CAAC,UAAD,CAfvB;AAgBI,IAAA,gBAAgB,EAAEA,CAAC,CAAC,YAAD,CAhBvB;AAiBI,IAAA,WAAW,EAAEA,CAAC,CAAC,iBAAD,CAjBlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtRJ,CADJ,EA2SI,MAAC,oBAAD;AACI,IAAA,IAAI,EAAE8B,iBADV;AAEI,IAAA,SAAS,EAAGiL,CAAD,IAAO;AACdhL,MAAAA,oBAAoB,CAACgL,CAAD,CAApB;AACH,KAJL;AAKI,IAAA,UAAU,EAAGA,CAAD,IAAO;AACfjE,MAAAA,oBAAoB,CAAC9G,cAAD,aAACA,cAAD,uBAACA,cAAc,CAAEjC,GAAjB,CAApB;AACAgC,MAAAA,oBAAoB,CAACgL,CAAD,CAApB;AACH,KARL;AASI,IAAA,WAAW,EAAE/M,CAAC,CAAC,YAAD,CATlB;AAUI,IAAA,UAAU,EACN,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,CAAC,CAAC,qBAAD,CAAL,CADJ,EAEI;AAAG,MAAA,KAAK,EAAE;AAACxC,QAAAA,QAAQ,EAAE,MAAX;AAAmBuO,QAAAA,UAAU,EAAE;AAA/B,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoD,GAAE/L,CAAC,CAAC,UAAD,CAAa,IAAGgC,cAApB,aAAoBA,cAApB,uBAAoBA,cAAc,CAAEkG,IAAK,EAA5F,CAFJ,CAXR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3SJ,EA6TI,MAAC,iBAAD;AACI,IAAA,IAAI,EAAE9F,iBADV;AAEI,IAAA,QAAQ,EAAE,IAFd;AAGI,IAAA,SAAS,MAHb;AAII,IAAA,OAAO,EAAEE,gBAJb;AAKI,IAAA,QAAQ,EAAEI,QALd;AAMI,IAAA,GAAG,EAAEF,QANT;AAOI,IAAA,CAAC,EAAExC,CAPP;AAQI,IAAA,OAAO,EAAE,MAAM;AACXqC,MAAAA,oBAAoB,CAAC,KAAD,CAApB;AACA2K,MAAAA,UAAU,CAAC,MAAM;AACblJ,QAAAA,WAAW;AACd,OAFS,EAEP,GAFO,CAAV;AAGH,KAbL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7TJ,EA4UI,MAAC,cAAD;AACI,IAAA,IAAI,EAAEd,kBADV;AAEI,IAAA,OAAO,EAAE,MAAM;AACXc,MAAAA,WAAW;AACXb,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACH,KALL;AAMI,IAAA,SAAS,EAAE,MAAM;AACbkC,MAAAA,UAAU;AACb,KARL;AASI,IAAA,GAAG,EAAEvF,OATT;AAUI,IAAA,KAAK,EAAES,KAVX;AAWI,IAAA,QAAQ,EAAEJ,gBAAgB,CAACoE,SAX/B;AAYI,IAAA,UAAU,EAAExE,cAZhB;AAaI,IAAA,UAAU,EAAEG,CAAC,CAAC,WAAD,CAbjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5UJ,CADJ;AA8VH,CA12BD;;AA42BA,MAAMiN,eAAe,GAAItN,KAAD,IAAW;AAC/B,SAAO;AACHA,IAAAA,KAAK,EAAEA,KAAK,CAACuN,WAAN,CAAkBC;AADtB,GAAP;AAGH,CAJD;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACtC9U,EAAAA,UAAU,EAAE,CAAC+U,SAAD,EAAYC,SAAZ,EAAuBpO,KAAvB,KAAiCkO,QAAQ,CAAC9U,UAAU,CAAC+U,SAAD,EAAYC,SAAZ,EAAuBpO,KAAvB,CAAX,CADf;AAEtC3G,EAAAA,WAAW,EAAE,CAAC8U,SAAD,EAAYC,SAAZ,EAAuBpO,KAAvB,KAAiCkO,QAAQ,CAAC7U,WAAW,CAAC8U,SAAD,EAAYC,SAAZ,EAAuBpO,KAAvB,CAAZ,CAFhB;AAGtC7G,EAAAA,WAAW,EAAE,CAACgV,SAAD,EAAYC,SAAZ,EAAuBpO,KAAvB,KAAiCkO,QAAQ,CAAC/U,WAAW,CAACgV,SAAD,EAAYC,SAAZ,EAAuBpO,KAAvB,CAAZ,CAHhB;AAItC9G,EAAAA,eAAe,EAAE,CAACiV,SAAD,EAAYC,SAAZ,EAAuBpO,KAAvB,KAAiCkO,QAAQ,CAAChV,eAAe,CAACiV,SAAD,EAAYC,SAAZ,EAAuBpO,KAAvB,CAAhB;AAJpB,CAAf,CAA3B;;AAOA,eAAejH,OAAO,CAAC+U,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C5N,aAA7C,CAAf","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\nimport { connect, useSelector } from 'react-redux'\nimport axios from 'axios'\nimport { deleteFromState, pushToState, setToState, updateState } from 'state/actions'\nimport WebCmsGlobal from 'components/webcms-global'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { UseOrest, ViewList, Delete, Upload } from '@webcms/orest'\nimport useTranslation from 'lib/translations/hooks/useTranslation'\nimport { DEFAULT_OREST_TOKEN, isErrorMsg, OREST_ENDPOINT, REQUEST_METHOD_CONST } from 'model/orest/constants'\nimport {\n    AppBar,\n    Avatar,\n    Box,\n    Button,\n    Dialog,\n    Grid,\n    IconButton,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n    Menu,\n    MenuItem,\n    Tab,\n    Tabs,\n    Paper,\n    Typography,\n    Fab\n} from \"@material-ui/core\";\nimport LoadingSpinner from '../../LoadingSpinner'\nimport MaterialTable, {MTableHeader, MTableToolbar} from 'material-table';\nimport { DropzoneDialog } from 'material-ui-dropzone'\nimport ViewQuiltIcon from '@material-ui/icons/ViewQuilt'\nimport EventNoteIcon from '@material-ui/icons/EventNote'\nimport SubjectIcon from '@material-ui/icons/Subject'\nimport NoteIcon from '@material-ui/icons/Note'\nimport CachedIcon from \"@material-ui/icons/Cached\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\nimport CloudDownloadOutlinedIcon from '@material-ui/icons/CloudDownloadOutlined';\nimport VisibilityOutlinedIcon from '@material-ui/icons/VisibilityOutlined';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport {CustomToolTip} from './CustomToolTip/CustomToolTip';\nimport { useSnackbar } from 'notistack';\nimport moment from 'moment'\nimport MaterialTableLocalization from \"../../MaterialTableLocalization\";\nimport CommonNotes from \"../../CommonNotes\";\nimport {SLASH} from \"../../../model/globals\";\nimport PopupState, { bindTrigger, bindMenu } from \"material-ui-popup-state\";\nimport TableColumnText from \"../../TableColumnText\";\nimport TrackedChangesDialog from \"../../TrackedChangesDialog\";\nimport MaterialTableGeneric from \"../../MaterialTableGeneric\";\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\nimport AddRaTagDialog from \"../../AddRaTagDialog\";\nimport {PreviewFile} from \"../../../model/orest/components/RaFile\";\nimport MediaViewerDialog from \"../../../@webcms-ui/core/media-viewer-dialog\";\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    listRoot: {\n        width: '100%',\n        maxHeight: 500,\n        minHeight: 500,\n        overflowY: 'scroll',\n        overflowX: 'hidden',\n    },\n    textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: 200,\n    },\n    field: {\n        marginRight: theme.spacing(1),\n    },\n    tabPanel: {\n        padding: 0,\n    },\n    tableTitle: {\n        fontSize:\"24px\",\n        [theme.breakpoints.down(\"sm\")]: {\n            fontSize:\"14px\",\n            textAlign:\"center\"\n        },\n    },\n    table: {\n        '& .MuiTableCell-root': {\n            padding: '10px'\n        },\n        \"& tbody>.MuiTableRow-root:hover\": {\n            backgroundColor: \"rgb(163, 166, 180,0.1)\"\n        },\n    },\n    dateText: {\n        fontSize:\"13px\"\n    },\n    overFlowDescriptionText: {\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        fontSize:\"13px\",\n        color:\"#4D4F5C\"\n    },\n    descriptionText: {\n        fontSize:\"13px\",\n        color:\"#4D4F5C\"\n    },\n    avatarStyle: {\n        backgroundColor: theme.palette.primary.main\n    },\n    tabsRoot: {\n        \"& .Mui-selected \": {\n            color:\"#4666B0\",\n        },\n        \"& .MuiTabs-indicator\": {\n            backgroundColor:\"#4666B0\"\n        }\n    },\n    iconButton: {\n        padding: 0,\n    },\n    iconStyle: {\n        fontSize: 20\n    },\n    standardText: {\n        fontSize: 'inherit',\n        minWidth: '100px',\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        whiteSpace: 'nowrap'\n    },\n    menuButton: {\n        width: '100%',\n        minWidth: 'unset'\n    },\n    popoverStyle: {\n        width:\"140px\",\n    },\n}))\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`scrollable-force-tabpanel-${index}`}\n            aria-labelledby={`scrollable-force-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3} style={{ padding: 0 }}>\n                    {children}\n                </Box>\n            )}\n        </div>\n    )\n}\n\nfunction a11yProps(index) {\n    return {\n        id: `scrollable-force-tab-${index}`,\n        'aria-controls': `scrollable-force-tabpanel-${index}`,\n    }\n}\n\nconst RequestDetail = (props) => {\n    const classes = useStyles()\n    const { enqueueSnackbar } = useSnackbar();\n\n    //props\n    const { state, taskmid, taskHotelRefNo, tableName, gid, setToState } = props\n\n    //context\n    const { t } = useTranslation()\n    const { GENERAL_SETTINGS } = useContext(WebCmsGlobal)\n\n    //redux\n    const loginfo = useSelector((state) => state.orest.currentUser && state.orest.currentUser.loginfo)\n    const token = useSelector((state) =>\n        state.orest.currentUser !== null ? state.orest.currentUser.auth.access_token : DEFAULT_OREST_TOKEN\n    )\n\n    //state\n    const [isInfoLoading, setIsInfoLoading] = useState(false);\n    const [taskPanelStatus, setTaskPanelStatus] = useState(0)\n    const [taskTransList, setTaskTransList] = useState([])\n    const [taskTransListLoading, setTaskTransListLoading] = useState(false)\n    const [taskFileList, setTaskFileList] = useState([])\n    const [taskFileListLoading, setTaskFileListLoading] = useState(false)\n    const [taskFileUploadStatus, setTaskFileUploadStatus] = useState(false)\n    const [hasRightData, setHasRightData] = useState()\n    const [tabList, setTabList] = useState([]);\n    const [isFileDownloading, setIsFileDownloading] = useState(false);\n    const [isFileDeleting, setIsFileDeleting] = useState(false);\n    const [openTrackedDialog, setOpenTrackedDialog] = useState(false);\n    const [deleteFileInfo, setDeleteFileInfo] = useState(false);\n    const [popupState, setPopupState] = useState({});\n    const [openPreviewDialog, setOpenPreviewDialog] = useState(false);\n    const [isPreviewLoading, setIsPreviewLoading] = useState(false);\n    const [mediaUrl, setMediaUrl] = useState('');\n    const [fileType, setFileType] = useState('');\n\n    const [isTagLoading, setIsTagLoading] = useState(false);\n    const [tagList, setTagList] = useState([]);\n    const [openAddRaTagDialog, setOpenAddRaTagDialog] = useState(false);\n\n    const tableLocalization = MaterialTableLocalization();\n\n    const mimeTypes = {\n        image: 'image',\n        audio: 'audio',\n        video: 'video'\n    }\n\n    const tabKeys = {\n        noteCount: 'notecount',\n        transCount: 'transcount',\n        fileCount: 'filecount'\n    }\n\n    const handleChange = (event, newValue) => {\n        setTaskPanelStatus(newValue)\n    }\n\n    const handleReset = () => {\n        setFileType('');\n        setMediaUrl('');\n    }\n\n    const taskPanels = {\n        noteList: 0,\n        transList: 1,\n        fileList: 2,\n        tagList: 3\n    }\n\n    const getTaskFileList = () => {\n        setTaskFileListLoading(true)\n        ViewList({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.RAFILE,\n            token,\n            params: {\n                query: `masterid:${state.currentTask.mid},isactive:true`,\n                limit: 100,\n                hotelrefno: taskHotelRefNo,\n            },\n        }).then((r) => {\n            if (r.status === 200 && r.data.data.length > 0) {\n                setTaskFileList(r.data.data)\n                setTaskFileListLoading(false)\n            } else {\n                setTaskFileList([])\n                setTaskFileListLoading(false)\n            }\n        })\n    }\n\n    const getTagList = () => {\n        setIsTagLoading(true)\n        ViewList({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.RATAG,\n            token,\n            params: {\n                query: `masterid:${state.currentTask.mid}`,\n                limit: 100,\n                hotelrefno: taskHotelRefNo,\n            },\n        }).then((r) => {\n            setIsTagLoading(false);\n            if (r.status === 200) {\n                setTagList(r.data.data.length > 0 ? r.data.data : [])\n            } else {\n                const error = isErrorMsg(r)\n                enqueueSnackbar(error.errMsg, {variant: 'error'})\n\n            }\n        })\n    }\n\n    useEffect(() => {\n        let active = true\n        if (active) {\n            setIsInfoLoading(true);\n            UseOrest({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: tableName + SLASH + OREST_ENDPOINT.STAT + SLASH + OREST_ENDPOINT.INFO,\n                token,\n                params: {\n                    gid: gid,\n                    hotelrefno: taskHotelRefNo\n                }\n            }).then(res => {\n                setIsInfoLoading(false);\n                if(res.status === 200 && res.data.data) {\n                    const info = res.data.data\n                    const tempArray = [];\n                    Object.keys(info).forEach((key) => {\n                        if(key === tabKeys.noteCount || key === tabKeys.transCount || key === tabKeys.fileCount) {\n                            tempArray.push({\n                                label: key === tabKeys.noteCount ? t('str_notes') : key === tabKeys.transCount ? t('str_trans') : key === tabKeys.fileCount ? t('str_files') : '',\n                                renderNumber: key === tabKeys.noteCount ? taskPanels.noteList : key === tabKeys.transCount ? taskPanels.transList : key === tabKeys.fileCount ? taskPanels.fileList : '',\n                            })\n                        }\n                    })\n                    tempArray.push({\n                        label: t('str_tags'),\n                        renderNumber: taskPanels.tagList,\n                    })\n                    setTabList(tempArray)\n\n                }\n            })\n        }\n\n        return () => {\n            active = false\n        }\n    }, [taskmid])\n\n    useEffect(() => {\n        if (tabList[taskPanelStatus]?.renderNumber === taskPanels.transList) {\n            setTaskTransListLoading(true)\n            ViewList({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: OREST_ENDPOINT.TSLINE,\n                token,\n                params: {\n                    query: `transno::${state.currentTask.transno},isprivate::false`,\n                    limit: 100,\n                    hotelrefno: taskHotelRefNo,\n                },\n            }).then((r) => {\n                if (r.status === 200 && r.data.data.length > 0) {\n                    setTaskTransList(r.data.data)\n                    setTaskTransListLoading(false)\n                } else {\n                    setTaskTransList([])\n                    setTaskTransListLoading(false)\n                }\n            })\n        }\n\n        if (tabList[taskPanelStatus]?.renderNumber === taskPanels.fileList) {\n            getTaskFileList()\n        }\n        if(tabList[taskPanelStatus]?.renderNumber === taskPanels.tagList) {\n            getTagList();\n        }\n    }, [taskPanelStatus, taskmid])\n    \n    const endDateHeader = () => {\n        return(\n            <CustomToolTip title={t('str_endDateTime')} placement={\"top\"} arrow>\n                <Typography style={{fontSize:\"12px\"}}>{t('str_endDT')}</Typography>\n            </CustomToolTip>\n        );\n    }\n    \n    const transNoteCell = (state) => {\n        if(state.note.length > 50) {\n            return(\n                <CustomToolTip title={state.note} placement={\"top\"} arrow>\n                    <Typography className={classes.overFlowDescriptionText}>{state.note}</Typography>\n                </CustomToolTip>\n            );\n        } else {\n            return(\n                <Typography key={state.transno} className={classes.descriptionText}>{state.note}</Typography>\n            );\n        }\n    }\n    \n    const transTime = (state) => {\n        const fullEndTime =  state.endtime.split(\":\");\n        const endTime = fullEndTime[0] + \":\" + fullEndTime[1];\n        const transTime = state.transdate + \" \" + endTime;\n        return(\n            <Typography className={classes.dateText}>\n                {transTime}\n            </Typography>\n        );\n    }\n\n    const taskColumns = [\n        {\n            title: t('str_empCode'),\n            field: 'empcode',\n            cellStyle: {\n                minWidth: 70,\n            },\n        },\n        {\n            title:t('str_workType'),\n            field: 'worktypecode',\n            cellStyle: {\n                minWidth: 120,\n            },\n        },\n        {\n            title: t('str_note'),\n            field: 'note',\n            render: state => transNoteCell(state),\n            cellStyle: {\n                minWidth: 260,\n                maxWidth: 260,\n            },\n        },\n        {\n            title: endDateHeader(),\n            field: 'transdate',\n            render: state => transTime(state),\n            cellStyle: {\n                minWidth: 120,\n            },\n        },\n    ]\n\n    const fileColumns = [\n        {\n            title: (\n                <Button className={classes.menuButton} style={{padding: 0, margin: 0}} disabled>\n                    <MoreVertIcon className={classes.iconStyle} />\n                </Button>\n            ),\n            field: '',\n            headerStyle: {\n                maxWidth: 64\n            },\n            cellStyle: {\n                whiteSpace: 'nowrap',\n                borderLeft: '1px solid rgba(224, 224, 224, 1)',\n                maxWidth: '64px'\n            },\n            render: props => (\n                <PopupState variant=\"popover\" popupId=\"status-menu\">\n                    {(popupState) => (\n                        <React.Fragment>\n                            <Button className={classes.menuButton} color={'primary'} variant={'contained'} {...bindTrigger(popupState)}>\n                                <MoreVertIcon className={classes.iconStyle} />\n                            </Button>\n                            <Menu\n                                classes={{\n                                    paper: classes.popoverStyle,\n                                }}\n                                anchorOrigin={{\n                                    vertical: \"bottom\",\n                                    horizontal: \"left\"\n                                }}\n                                transformOrigin={{\n                                    vertical: \"top\",\n                                    horizontal: \"left\"\n                                }}\n                                getContentAnchorEl={null}\n                                {...bindMenu(popupState)}\n                            >\n                                <MenuItem\n                                    onClick={() => {\n                                        setOpenPreviewDialog(true);\n                                        handlePreviewFile(props?.gid, props?.url, popupState)\n                                    }}\n                                    disabled={isFileDeleting || isFileDownloading}\n                                >\n                                    <VisibilityOutlinedIcon />\n                                    <Typography style={{paddingLeft: '8px'}}>{t('str_preview')}</Typography>\n                                </MenuItem>\n                                {\n                                    hasRightData?.cand && (\n                                        <MenuItem\n                                            onClick={() => {\n                                                setOpenTrackedDialog(true)\n                                                setDeleteFileInfo(props);\n                                                setPopupState(popupState);\n                                            }}\n                                            disabled={isFileDeleting || isFileDownloading}\n                                        >\n                                            {isFileDeleting ? <LoadingSpinner size={18}/> : <DeleteOutlinedIcon />}\n                                            <Typography style={{paddingLeft: '8px'}}>{t('str_delete')}</Typography>\n                                        </MenuItem>\n                                    )\n                                }\n                                <MenuItem\n                                    onClick={() => handleTaskFileDownload(props.filename, props.gid, props.url, popupState)}\n                                    disabled={isFileDeleting || isFileDownloading}\n                                >\n                                    {isFileDownloading ? <LoadingSpinner size={18}/> : <CloudDownloadOutlinedIcon/>}\n                                    <Typography style={{paddingLeft: '8px'}}>{t('str_download')}</Typography>\n                                </MenuItem>\n                            </Menu>\n                        </React.Fragment>\n                    )}\n                </PopupState>\n            )\n        },\n        {\n            title: t('str_code'),\n            field: 'code',\n            render: props => <TableColumnText maxWidth={150}>{props.code}</TableColumnText>\n        },\n        {\n            title: t('str_description'),\n            field: 'description',\n            render: props => <TableColumnText minWidth={250} maxWidth={250}>{props.description}</TableColumnText>\n        },\n        { title: t('str_fileType'), field: 'filetype' },\n        { title: t('str_contentType'), field: 'contentypedesc' },\n        {\n            title: t('str_fileDesc'),\n            field: 'filename',\n            render: props => <TableColumnText minWidth={150} maxWidth={150}>{props.filename}</TableColumnText>\n        },\n        {\n            title: t('str_caption'),\n            field: 'caption',\n            render: props => <TableColumnText minWidth={150} maxWidth={150}>{props.caption}</TableColumnText>\n        },\n        {\n            title: t('str_updated'),\n            field: 'insdatetime',\n            render: state => <TableColumnText minWidth={150}>{moment(state.insdatetime).format('L  LT')}</TableColumnText>\n        },\n        {\n            title: t('str_fileUrl'),\n            field: 'fileurl',\n            render: props => <TableColumnText maxWidth={150} showToolTip>{props.fileurl}</TableColumnText>\n        },\n        {\n            title: t('str_masterId'),\n            field: 'masterid',\n            headerStyle: {\n                textAlign: 'right'\n            },\n            render: props => <TableColumnText textAlign={'right'}>{props.masterid}</TableColumnText>\n        },\n        { title: t('str_language'), field: 'langcode' },\n        {\n            title: t('str_id'),\n            field: 'id',\n            headerStyle: {\n                textAlign: 'right'\n            },\n            render: props => <TableColumnText textAlign={'right'}>{props.id}</TableColumnText>\n        },\n\n    ]\n\n    const handleTaskFileUpload = (file) => {\n        Upload({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            token,\n            params: {\n                masterid: state.currentTask.mid,\n                orsactive: true,\n                hotelrefno: taskHotelRefNo,\n                quality:\"0.1F\"\n            },\n            files: file,\n        }).then((r) => {\n            setTaskFileUploadStatus(false)\n            if (r.status === 200) {\n                getTaskFileList()\n                enqueueSnackbar(t('str_haveBeenUploadedMsg'), { variant: 'success' })\n            } else {\n                const error = isErrorMsg(r);\n                enqueueSnackbar(t(error.errMsg), { variant: 'error' })\n            }\n        })\n    }\n\n    const handleTaskFileDelete = (gid) => {\n        setIsFileDeleting(true);\n        Delete({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.RAFILE,\n            token,\n            gid: gid,\n            params: {\n                hotelrefno: taskHotelRefNo,\n            },\n        }).then((r) => {\n            setIsFileDeleting(false);\n            if (r.status === 200) {\n                popupState?.close();\n                getTaskFileList();\n                enqueueSnackbar(t('str_selectedDeletedMsg'), { variant: 'success' });\n            } else {\n                const error = isErrorMsg(r);\n                enqueueSnackbar(t(error.errMsg), { variant: 'error' });\n            }\n        })\n    }\n\n    useEffect(() => {\n            axios({\n                url:\n                    GENERAL_SETTINGS.OREST_URL +\n                    OREST_ENDPOINT.SLASH +\n                    OREST_ENDPOINT.TOOLS +\n                    OREST_ENDPOINT.SLASH +\n                    OREST_ENDPOINT.USER +\n                    OREST_ENDPOINT.SLASH +\n                    OREST_ENDPOINT.HASRIGHT,\n                method: REQUEST_METHOD_CONST.GET,\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                },\n                params: {\n                    empid: loginfo.id,\n                    submoduleid: 9706,\n                },\n            }).then((res) => {\n                if (res.status === 200) {\n                     setHasRightData(res.data.data)\n                } else if(res.status === 401){\n                    enqueueSnackbar('401 Unauthorized', { variant: 'error' })\n                } else if(res.status === 403) {\n                    enqueueSnackbar('403 Forbidden', { variant: 'error' })\n                }\n            })\n    }, [])\n\n\n    const handlePreviewFile = (gid, fileUrl, popupState) => {\n        setIsPreviewLoading(true);\n        popupState.close();\n        PreviewFile(GENERAL_SETTINGS, token, gid, fileUrl, taskHotelRefNo).then(res => {\n            setIsPreviewLoading(false);\n            if(res.success) {\n                setMediaUrl(res?.url);\n                setFileType(res?.fileType)\n            } else {\n                enqueueSnackbar(t(res?.errorText), { variant: res?.variant || 'error' })\n            }\n        })\n    }\n\n    const handleTaskFileDownload = (filename, gid, fileUrl, popupState) => {\n        if(fileUrl.includes('http://') || fileUrl.includes('https://')) {\n            popupState.close();\n            const win = window.open(fileUrl, '_blank');\n            if (win != null) {\n                win.focus();\n            }\n        } else {\n            setIsFileDownloading(true);\n            axios({\n                url:\n                    GENERAL_SETTINGS.OREST_URL +\n                    OREST_ENDPOINT.SLASH +\n                    OREST_ENDPOINT.TOOLS +\n                    OREST_ENDPOINT.SLASH +\n                    OREST_ENDPOINT.FILE +\n                    OREST_ENDPOINT.SLASH +\n                    OREST_ENDPOINT.DOWNLOAD,\n                method: 'get',\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                },\n                params: {\n                    gid: gid,\n                    hotelrefno: taskHotelRefNo,\n                },\n                responseType: 'blob',\n            }).then((response) => {\n                setIsFileDownloading(false);\n                if (response.status === 200) {\n                    const url = window.URL.createObjectURL(new Blob([response.data]))\n                    const link = document.createElement('a')\n                    link.href = url\n                    link.setAttribute('download', filename.toLowerCase()) //or any other extension\n                    document.body.appendChild(link)\n                    link.click()\n                    link.remove()\n                    popupState.close();\n                    enqueueSnackbar(t('str_selectedDownloadedMsg'), { variant: 'success' })\n                } else {\n                    const error = isErrorMsg(response)\n                    enqueueSnackbar(t(error.errMsg), { variant: 'error' })\n                }\n            })\n        }\n    }\n\n    const handleBack = () => {\n        setToState('userPortal', ['panelStatus'], state.panels.requestList)\n    }\n\n    return (\n        <React.Fragment>\n            <Grid container direction=\"row\" className={classes.root} style={{minHeight: '50vh'}} spacing={3}>\n                <Grid item xs={12} style={{alignSelf: 'center'}}>\n                    <CustomToolTip title={t('str_back')}>\n                        <Fab size=\"medium\" color=\"primary\" aria-label=\"back\" onClick={() => handleBack()}>\n                            <ArrowBackIcon />\n                        </Fab>\n                    </CustomToolTip>\n                </Grid>\n                <Grid item xs={12} sm={tableName === OREST_ENDPOINT.TSTRANS ? 4 : 3} >\n                    <Paper square className={classes.root}>\n                        <List className={classes.root}>\n                            <ListItem>\n                                <ListItemAvatar>\n                                    <Avatar className={classes.avatarStyle} >\n                                        <b>#</b>\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary={t('str_transNo')} secondary={state.currentTask?.transno} />\n                            </ListItem>\n                            {\n                                state.currentTask?.roomno && (\n                                    <ListItem>\n                                        <ListItemAvatar>\n                                            <Avatar className={classes.avatarStyle}>\n                                                <ViewQuiltIcon />\n                                            </Avatar>\n                                        </ListItemAvatar>\n                                        <ListItemText primary={t('str_module')} secondary={state.currentTask?.roomno} />\n                                    </ListItem>\n                                )\n                            }\n                            {\n                                state.currentTask?.transdate && (\n                                    <ListItem>\n                                        <ListItemAvatar>\n                                            <Avatar className={classes.avatarStyle}>\n                                                <EventNoteIcon />\n                                            </Avatar>\n                                        </ListItemAvatar>\n                                        <ListItemText primary={t('str_transDate')} secondary={state.currentTask?.transdate} />\n                                    </ListItem>\n                                )\n                            }\n                            {\n                                state.currentTask?.callednumber && (\n                                    <ListItem>\n                                        <ListItemAvatar>\n                                            <Avatar className={classes.avatarStyle}>\n                                                <PhoneIcon />\n                                            </Avatar>\n                                        </ListItemAvatar>\n                                        <ListItemText primary={t('str_calledNumber')} secondary={state.currentTask?.callednumber} />\n                                    </ListItem>\n                                )\n                            }\n                            {state.currentTask?.description && (\n                                <ListItem>\n                                    <ListItemAvatar>\n                                        <Avatar className={classes.avatarStyle}>\n                                            <SubjectIcon />\n                                        </Avatar>\n                                    </ListItemAvatar>\n                                    <ListItemText primary={t('str_description')} secondary={state.currentTask?.description} />\n                                </ListItem>\n                                )\n                            }\n                            {state.currentTask?.note && (\n                                <ListItem>\n                                    <ListItemAvatar>\n                                        <Avatar className={classes.avatarStyle}>\n                                            <NoteIcon />\n                                        </Avatar>\n                                    </ListItemAvatar>\n                                    <ListItemText primary={t('str_note')} secondary={state.currentTask?.note} />\n                                </ListItem>\n                            )}\n                        </List>\n                    </Paper>\n                </Grid>\n                <Grid item xs={12} sm={tableName === OREST_ENDPOINT.TSTRANS ? 8 : 9} >\n                    {\n                        isInfoLoading ? (\n                            <LoadingSpinner />\n                        ) : (\n                            <Paper square className={classes.root}>\n                                <AppBar position=\"static\" color=\"default\">\n                                    <Tabs\n                                        color={'primary'}\n                                        variant=\"fullWidth\"\n                                        value={taskPanelStatus}\n                                        onChange={handleChange}\n                                        scrollButtons=\"on\"\n                                    >\n                                        {\n                                            tabList.sort((a,b) => a.renderNumber - b.renderNumber).map((item, index) => (\n                                                <Tab key={index} label={item.label} {...a11yProps(index)} />\n                                            ))\n                                        }\n                                    </Tabs>\n                                </AppBar>\n                                {\n                                    tabList.sort((a,b) => a.renderNumber - b.renderNumber).map((item, index) => (\n                                        <TabPanel value={taskPanelStatus} index={index} key={index}>\n                                            <div style={{paddingTop: '16px'}}>\n                                                {item.renderNumber === taskPanels.noteList ? (\n                                                    <CommonNotes\n                                                        initialIncDone={false}\n                                                        mid={taskmid}\n                                                        dataHotelRefNo={taskHotelRefNo}\n                                                    />\n                                                ) : item.renderNumber === taskPanels.transList ? (\n                                                    <div className={classes.table}>\n                                                        <MaterialTable\n                                                            title={\n                                                                <Typography className={classes.tableTitle}>Trans list</Typography>\n                                                            }\n                                                            columns={taskColumns}\n                                                            data={taskTransList}\n                                                            isLoading={taskTransListLoading}\n                                                            localization={MaterialTableLocalization}\n                                                            options={{\n                                                                headerStyle:{\n                                                                    fontWeight:\"bold\",\n                                                                    fontSize:\"12px\",\n                                                                    color:\"#A3A6B4\",\n                                                                    textTransform:\"uppercase\",\n                                                                    backgroundColor:\"#F5F6FA\",\n                                                                }\n                                                            }}\n                                                            components={{\n                                                                Toolbar: props => (\n                                                                    <div className={classes.tableTitle}>\n                                                                        <MTableToolbar {...props} />\n                                                                    </div>\n                                                                )\n                                                            }}\n                                                        />\n                                                    </div>\n                                                ) : item.renderNumber === taskPanels.fileList ? (\n                                                    <Grid container>\n                                                        <Grid item xs={12}>\n                                                            <Grid container spacing={3}>\n                                                                <Grid item xs={4} sm={3}>\n                                                                    <Grid container>\n                                                                        <Grid item xs={6} sm={3}>\n                                                                            <CustomToolTip title={t('str_refresh')}>\n                                                                                <IconButton\n                                                                                    onClick={getTaskFileList}\n                                                                                >\n                                                                                    <CachedIcon style={{color:\"#F16A4B\"}}/>\n                                                                                </IconButton>\n                                                                            </CustomToolTip>\n                                                                        </Grid>\n                                                                        <Grid item xs={6} sm={3}>\n                                                                            <CustomToolTip title={t('str_add')}>\n                                                                                <IconButton\n                                                                                    onClick={() => setTaskFileUploadStatus(true)}\n                                                                                >\n                                                                                    <AddIcon/>\n                                                                                </IconButton>\n                                                                            </CustomToolTip>\n                                                                        </Grid>\n                                                                    </Grid>\n                                                                </Grid>\n                                                                <Grid item xs={8}>\n                                                                </Grid>\n                                                            </Grid>\n                                                        </Grid>\n                                                        <Grid item xs={12}>\n                                                            <div className={classes.table}>\n                                                                <MaterialTable\n                                                                    columns={fileColumns}\n                                                                    data={taskFileList}\n                                                                    isLoading={taskFileListLoading}\n                                                                    options={{\n                                                                        headerStyle:{\n                                                                            cursor: 'default',\n                                                                            fontWeight:\"bold\",\n                                                                            fontSize:\"12px\",\n                                                                            color:\"#A3A6B4\",\n                                                                            textTransform:\"uppercase\",\n                                                                            backgroundColor:\"#F5F6FA\",\n                                                                            whiteSpace: 'nowrap',\n                                                                            borderLeft: '1px solid #FFF',\n                                                                        },\n                                                                        cellStyle: {\n                                                                            whiteSpace: 'nowrap',\n                                                                            borderLeft: '1px solid rgba(224, 224, 224, 1)',\n                                                                            minWidth: '100px',\n                                                                            fontSize: '13px',\n                                                                        },\n                                                                        toolbar: false,\n                                                                        selection: false,\n                                                                        sorting: false,\n                                                                        search: false,\n                                                                        actionsColumnIndex: 1,\n                                                                        selectionColumnIndex: 1\n                                                                    }}\n                                                                    localization={tableLocalization}\n                                                                    components={{\n                                                                        Header: (props) => {\n                                                                            const overrideProps = {...props}\n                                                                            overrideProps.draggable = false\n                                                                            return(\n                                                                                <MTableHeader  {...overrideProps}/>\n                                                                            )\n                                                                        },\n                                                                    }}\n                                                                />\n                                                            </div>\n                                                        </Grid>\n                                                    </Grid>\n                                                ) : item.renderNumber === taskPanels.tagList ? (\n                                                    <Grid container>\n                                                        <Grid item xs={12}>\n                                                            <MaterialTableGeneric\n                                                                isLoading={isTagLoading}\n                                                                hoverFirstColumn={false}\n                                                                showMoreActionButton={false}\n                                                                actionFirstColumn\n                                                                moreActionList={\n                                                                    [\n                                                                        {\n                                                                            title: t('str_edit'),\n                                                                            icon: <EditOutlinedIcon />,\n                                                                            onClick: (data) => setOpenAddRaTagDialog(true)\n                                                                        },\n                                                                    ]\n                                                                }\n                                                                columns={\n                                                                    [\n                                                                        {\n                                                                            title: t('tagstr'),\n                                                                            field: 'tagstr',\n                                                                            render: (props) => <TableColumnText maxWidth={150}>{props.tagstr}</TableColumnText>\n                                                                        },\n                                                                        {\n                                                                            title: t('masterId'),\n                                                                            field: 'masterid',\n                                                                            headerStyle: {\n                                                                                textAlign: 'right'\n                                                                            },\n                                                                            render: props => <TableColumnText textAlign={'right'}>{props.masterid}</TableColumnText>\n                                                                        },\n                                                                        {\n                                                                            title: t('str_mid'),\n                                                                            field: 'mid',\n                                                                            headerStyle: {\n                                                                                textAlign: 'right'\n                                                                            },\n                                                                            render: props => <TableColumnText textAlign={'right'}>{props.mid}</TableColumnText>\n                                                                        },\n                                                                        {\n                                                                            title: t('str_id'),\n                                                                            field: 'id',\n                                                                            headerStyle: {\n                                                                                textAlign: 'right'\n                                                                            },\n                                                                            render: props => <TableColumnText textAlign={'right'}>{props.id}</TableColumnText>\n                                                                        },\n                                                                    ]\n                                                                }\n                                                                onRefresh={() => getTagList()}\n                                                                data={tagList}\n\n                                                            />\n                                                        </Grid>\n                                                    </Grid>\n                                                ) : null\n                                                }\n                                            </div>\n                                        </TabPanel>\n                                    ))\n                                }\n                            </Paper>\n                        )\n                    }\n                </Grid>\n                <DropzoneDialog\n                    open={taskFileUploadStatus}\n                    onSave={handleTaskFileUpload}\n                    acceptedFiles={[\n                        'image/jpeg',\n                        'image/png',\n                        'image/bmp',\n                        'image/gif',\n                        'video/mp4',\n                        'application/zip',\n                    ]}\n                    showPreviews={true}\n                    filesLimit={3}\n                    maxFileSize={5000000}\n                    onClose={() => setTaskFileUploadStatus(false)}\n                    submitButtonText={t('str_save')}\n                    cancelButtonText={t('str_cancel')}\n                    dialogTitle={t('str_uploadAFile')}\n                />\n            </Grid>\n            <TrackedChangesDialog\n                open={openTrackedDialog}\n                onPressNo={(e) => {\n                    setOpenTrackedDialog(e);\n                }}\n                onPressYes={(e) => {\n                    handleTaskFileDelete(deleteFileInfo?.gid);\n                    setOpenTrackedDialog(e);\n                }}\n                dialogTitle={t('str_delete')}\n                dialogDesc={\n                    <React.Fragment>\n                        <a>{t('str_deleteRecordMsg')}</a>\n                        <a style={{fontSize: '15px', fontWeight: 'bold'}}>{`${t('str_code')}:${deleteFileInfo?.code}`}</a>\n                    </React.Fragment>\n\n                }\n            />\n            <MediaViewerDialog\n                open={openPreviewDialog}\n                maxWidth={'md'}\n                fullWidth\n                loading={isPreviewLoading}\n                fileType={fileType}\n                url={mediaUrl}\n                t={t}\n                onClose={() => {\n                    setOpenPreviewDialog(false);\n                    setTimeout(() => {\n                        handleReset();\n                    }, 100)\n                }}\n            />\n            <AddRaTagDialog\n                open={openAddRaTagDialog}\n                onClose={() => {\n                    handleReset();\n                    setOpenAddRaTagDialog(false);\n                }}\n                onSuccess={() => {\n                    getTagList();\n                }}\n                mid={taskmid}\n                token={token}\n                orestUrl={GENERAL_SETTINGS.OREST_URL}\n                hotelRefNo={taskHotelRefNo}\n                raTagLabel={t('str_label')}\n            />\n        </React.Fragment>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        state: state.formReducer.userPortal,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value)),\n    updateState: (stateType, stateName, value) => dispatch(updateState(stateType, stateName, value)),\n    pushToState: (stateType, stateName, value) => dispatch(pushToState(stateType, stateName, value)),\n    deleteFromState: (stateType, stateName, value) => dispatch(deleteFromState(stateType, stateName, value)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RequestDetail)\n"]},"metadata":{},"sourceType":"module"}