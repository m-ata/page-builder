{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/steps/email/EmailDesign.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//react imports\nimport React, { useContext, useEffect, useState } from 'react'; //material ui imports\n\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\"; //custom imports\n\nimport EmailGenericDialog from \"../../components/email/generic/EmailGenericDialog\";\nimport EmailHeader from \"../../components/email/header/EmailHeader\";\nimport EmailFooter from \"../../components/email/footer/EmailFooter\";\nimport EditEmailSection from \"../../components/email/body/EditEmailSection\";\nimport Image from \"../../components/page/sections/image/Image\";\nimport Paragraph from \"../../components/page/sections/paragraph/Paragraph\";\nimport LoadingSpinner from \"../../../../LoadingSpinner\";\nimport { AlertDialog } from \"../../components/alert\"; //redux imports\n\nimport { connect } from 'react-redux';\nimport { setToState, pushToState, deleteFromState, updateState } from \"../../../../../state/actions\"; //toast import\n\nimport { toast } from \"react-toastify\"; //constants and config imports\n\nimport { DELETE_SUCCESS, emailWidth } from \"../../constants\";\nimport { useRouter } from \"next/router\";\nimport WebCmsGlobal from \"../../../../webcms-global\";\nimport axios from \"axios\";\nimport { FIELDTYPE, isErrorMsg, OREST_ENDPOINT, OREST_UPLOAD, REQUEST_METHOD_CONST } from \"../../../../../model/orest/constants\";\nimport { Insert, ViewList } from \"@webcms/orest\";\nimport LanguageDropdown from \"../../components/language/LanguageDropdown\";\nimport { now } from \"moment\";\nconst defaultProps = {\n  bgcolor: 'background.paper',\n  border: 1,\n  borderColor: 'silver'\n};\nconst useStyles = makeStyles(() => ({\n  centreContent: {\n    display: 'flex',\n    justifyContent: 'center',\n    marginTop: 8\n  },\n  cursorPointer: {\n    cursor: 'pointer',\n    color: 'silver'\n  },\n  disabledEvent: {\n    pointerEvents: 'none',\n    opacity: 0.5\n  },\n  centerSection: {\n    display: \"block\",\n    marginTop: 8,\n    textAlign: \"center\"\n  }\n}));\n\nconst EmailDesign = props => {\n  var _state$email10, _state$email10$body, _state$assets, _state$assets$colors, _state$assets$colors$, _state$langsFile7, _state$langsFile7$hea, _state$langsFile7$hea2, _state$langsFile8, _state$langsFile8$hea, _state$langsFile8$hea2, _state$langsFile9, _state$langsFile9$bod, _state$langsFile9$bod2, _state$langsFile9$bod3, _state$email15, _state$email15$body, _state$email16, _state$email16$body, _state$email17, _state$email17$body, _state$email18, _state$email18$body, _state$langsFile10, _state$langsFile10$fo, _state$langsFile10$fo2;\n\n  const {\n    state,\n    setToState,\n    pushToState,\n    deleteFromState,\n    updateState\n  } = props;\n  const classes = useStyles(); //local states\n\n  const {\n    0: isRenderDialog,\n    1: setRenderDialog\n  } = useState(false);\n  const {\n    0: dialogType,\n    1: setDialogType\n  } = useState('');\n  const {\n    0: dialogTitle,\n    1: setDialogTitle\n  } = useState('');\n  const {\n    0: editSectionDialog,\n    1: setEditSectionDialog\n  } = useState('');\n  const [isAlert, setAlert] = React.useState(false);\n  const {\n    0: alertDialogType,\n    1: setAlertDialogType\n  } = useState('');\n  const {\n    0: deletedIndex,\n    1: setDeletedIndex\n  } = useState('');\n  const {\n    0: isDeleting,\n    1: setIsDeleting\n  } = useState(false);\n  const {\n    0: isLoaded,\n    1: setIsLoaded\n  } = useState(true);\n  const router = useRouter();\n  const companyId = router.query.companyID;\n  const {\n    GENERAL_SETTINGS,\n    token\n  } = useContext(WebCmsGlobal);\n  const authToken = token || router.query.authToken;\n  useEffect(() => {\n    if (state !== null && state !== void 0 && state.isTemplate) {\n      (state === null || state === void 0 ? void 0 : state.previousStep) === 0 ? handleGenerateNewTemplate(`code::${state.code},filetype::PB-EMAIL`) : null;\n    } else {\n      if (router.query.emailOnly) {\n        if (router.query.masterid) {\n          var _state$email, _state$email2, _state$email3, _state$email3$body;\n\n          if (!Object.keys(state === null || state === void 0 ? void 0 : (_state$email = state.email) === null || _state$email === void 0 ? void 0 : _state$email.header).length && !Object.keys(state === null || state === void 0 ? void 0 : (_state$email2 = state.email) === null || _state$email2 === void 0 ? void 0 : _state$email2.footer).length && !(state !== null && state !== void 0 && (_state$email3 = state.email) !== null && _state$email3 !== void 0 && (_state$email3$body = _state$email3.body) !== null && _state$email3$body !== void 0 && _state$email3$body.length)) {\n            setIsLoaded(false);\n            ViewList({\n              apiUrl: GENERAL_SETTINGS.OREST_URL,\n              endpoint: OREST_ENDPOINT.RAFILE,\n              token: authToken,\n              params: {\n                hotelrefno: Number(companyId),\n                query: `masterid::${router.query.masterid},filetype::PB-EMAIL`\n              }\n            }).then(res => {\n              if (res.status === 200) {\n                var _res$data, _res$data$data;\n\n                if ((res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : (_res$data$data = _res$data.data) === null || _res$data$data === void 0 ? void 0 : _res$data$data.length) > 0) {\n                  // setTimeout(() => {\n                  //     console.log(res.data.data[0].langcode.toLowerCase())\n                  //     updateState('pageBuilder', 'langId', res.data.data[0].langid);\n                  //     updateState('pageBuilder', 'langCode', res.data.data[0].langcode.toLowerCase());\n                  //     updateState('pageBuilder', 'defaultLangId', res.data.data[0].langid);\n                  //     updateState('pageBuilder', 'defaultLang', res.data.data[0].langcode.toLowerCase());\n                  //     setIsLoaded(true);\n                  // }, 300);\n                  setIsLoaded(true);\n                  const email = JSON.parse(Buffer.from(res.data.data[0].filedata, 'base64').toString('utf-8'));\n                  updateState('pageBuilder', 'email', email);\n                  updateState('pageBuilder', 'code', res.data.data[0].code);\n                  ViewList({\n                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                    endpoint: OREST_ENDPOINT.RAFILE,\n                    token: authToken,\n                    params: {\n                      hotelrefno: Number(companyId),\n                      query: `filetype:LANG.EMAIL,masterid::${router.query.masterid}`\n                    }\n                  }).then(res => {\n                    if (res.status === 200 && res.data && res.data.data.length > 0) {\n                      const langFile = JSON.parse(Buffer.from(res.data.data[0].filedata, 'base64').toString('utf-8'));\n                      updateState('pageBuilder', 'langsFile', langFile);\n                    }\n                  });\n                } else {\n                  setIsLoaded(true);\n                }\n              } else {\n                setIsLoaded(true);\n                const retErr = isErrorMsg(res);\n                toast.error(retErr.errorMsg, {\n                  position: toast.POSITION.TOP_RIGHT\n                });\n              }\n            });\n          }\n        }\n      }\n    }\n  }, []);\n\n  const handleGenerateNewTemplate = async query => {\n    setIsLoaded(false);\n    ViewList({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.RAFILE,\n      token: authToken,\n      params: {\n        hotelrefno: Number(companyId),\n        query: query\n      }\n    }).then(res => {\n      if ((res === null || res === void 0 ? void 0 : res.status) === 200) {\n        var _res$data2, _res$data2$data;\n\n        if ((res === null || res === void 0 ? void 0 : (_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : (_res$data2$data = _res$data2.data) === null || _res$data2$data === void 0 ? void 0 : _res$data2$data.length) > 0) {\n          const emailData = JSON.parse(Buffer.from(res.data.data[0].filedata, 'base64').toString('utf-8'));\n          setToState('pageBuilder', ['email', 'header'], emailData === null || emailData === void 0 ? void 0 : emailData.header);\n          setToState('pageBuilder', ['email', 'footer'], emailData === null || emailData === void 0 ? void 0 : emailData.footer);\n          const body = emailData === null || emailData === void 0 ? void 0 : emailData.body;\n          Promise.all(body.map((b, i) => {\n            Promise.all(b.items.map(async (item, j) => {\n              if (item.type === 'image') {\n                const HCMITEMIMG_OPTION = {\n                  url: GENERAL_SETTINGS.OREST_URL + OREST_ENDPOINT.SLASH + OREST_ENDPOINT.HCMITEMIMG + OREST_ENDPOINT.SLASH + 'view/list',\n                  method: REQUEST_METHOD_CONST.GET,\n                  headers: {\n                    Authorization: `Bearer ${authToken}`,\n                    'Content-Type': 'application/json'\n                  },\n                  params: {\n                    hotelrefno: Number(companyId),\n                    query: `gid::${item.gid}`\n                  }\n                };\n                const image = await getData(HCMITEMIMG_OPTION);\n\n                if ((image === null || image === void 0 ? void 0 : image.length) > 0) {\n                  const FILEGET_OPTION = {\n                    url: GENERAL_SETTINGS.OREST_URL + OREST_ENDPOINT.SLASH + OREST_ENDPOINT.RAFILE + OREST_ENDPOINT.SLASH + 'view/list',\n                    method: REQUEST_METHOD_CONST.GET,\n                    headers: {\n                      Authorization: `Bearer ${authToken}`,\n                      'Content-Type': '0000510'\n                    },\n                    params: {\n                      hotelrefno: Number(companyId),\n                      query: `masterid::${image[0].mid}`\n                    }\n                  };\n                  const file = await getData(FILEGET_OPTION);\n\n                  if (file.length > 0) {\n                    var _file$, _downloadedFile$data, _file$2, _image$, _image$2, _image$3;\n\n                    const downloadedFile = await fileDownload({\n                      url: `${GENERAL_SETTINGS.OREST_URL}/tools/file/download`,\n                      headers: {\n                        \"Authorization\": `Bearer ${authToken}`\n                      },\n                      method: 'get',\n                      responseType: 'arraybuffer',\n                      params: {\n                        gid: (_file$ = file[0]) === null || _file$ === void 0 ? void 0 : _file$.gid,\n                        hotelrefno: companyId\n                      }\n                    });\n                    let blob = new Blob([downloadedFile === null || downloadedFile === void 0 ? void 0 : downloadedFile.data], {\n                      type: downloadedFile === null || downloadedFile === void 0 ? void 0 : (_downloadedFile$data = downloadedFile.data) === null || _downloadedFile$data === void 0 ? void 0 : _downloadedFile$data.type\n                    });\n                    const imageUrl = GENERAL_SETTINGS.STATIC_URL + ((_file$2 = file[0]) === null || _file$2 === void 0 ? void 0 : _file$2.url.replace('/var/otello', '').replace('/public', ''));\n                    const m = imageUrl.replace(/^.*[\\\\\\/]/, '');\n                    const imageType = m.split('.')[1];\n                    const fileObject = new File([blob], m, {\n                      lastModified: new Date(now()),\n                      type: 'image/' + imageType\n                    });\n                    const HCMITEMINS = {\n                      url: GENERAL_SETTINGS.OREST_URL + OREST_ENDPOINT.SLASH + OREST_ENDPOINT.HCMITEMIMG + OREST_ENDPOINT.SLASH + 'ins',\n                      method: REQUEST_METHOD_CONST.POST,\n                      headers: {\n                        Authorization: `Bearer ${authToken}`,\n                        'Content-Type': 'application/json'\n                      },\n                      data: {\n                        itemid: state.hcmItemId,\n                        imgtype: FIELDTYPE.IMG,\n                        title: (_image$ = image[0]) === null || _image$ === void 0 ? void 0 : _image$.title,\n                        description: (_image$2 = image[0]) === null || _image$2 === void 0 ? void 0 : _image$2.description,\n                        cta: (_image$3 = image[0]) === null || _image$3 === void 0 ? void 0 : _image$3.cta,\n                        orderno: 1,\n                        hotelrefno: Number(companyId)\n                      }\n                    };\n                    const imageInsert = await handleInsertData(HCMITEMINS);\n\n                    if (imageInsert) {\n                      let binaryData = [];\n                      binaryData.push(fileObject);\n                      let formData = new FormData();\n                      formData.append('file', new Blob(binaryData, {\n                        type: fileObject.type\n                      }), fileObject.name);\n                      const uploadOptions = {\n                        url: GENERAL_SETTINGS.OREST_URL + OREST_ENDPOINT.SLASH + OREST_ENDPOINT.RAFILE + OREST_UPLOAD,\n                        method: 'post',\n                        headers: {\n                          \"Authorization\": `Bearer ${authToken}`,\n                          'Content-Type': 'multipart/form-data'\n                        },\n                        params: {\n                          orsactive: true,\n                          masterid: imageInsert === null || imageInsert === void 0 ? void 0 : imageInsert.mid,\n                          hotelrefno: companyId\n                        },\n                        data: formData\n                      };\n                      const uploadedFile = await handleInsertData(uploadOptions);\n                      if (i === body.length - 1) setIsLoaded(true);\n\n                      if (uploadedFile !== null && uploadedFile !== void 0 && uploadedFile.url) {\n                        b.items[j] = {\n                          service: \"hcmitemimg\",\n                          type: \"image\",\n                          gid: imageInsert === null || imageInsert === void 0 ? void 0 : imageInsert.gid,\n                          width: item === null || item === void 0 ? void 0 : item.width,\n                          id: item === null || item === void 0 ? void 0 : item.id\n                        };\n                      } else {\n                        toast.error('Upload failed', {\n                          position: toast.POSITION.TOP_RIGHT\n                        });\n                      }\n                    }\n                  }\n                }\n              }\n\n              if (item.type === 'paragraph') {\n                const HCMITEMTXTPAR_OPTION = {\n                  url: GENERAL_SETTINGS.OREST_URL + OREST_ENDPOINT.SLASH + OREST_ENDPOINT.HCMITEMTXTPAR + OREST_ENDPOINT.SLASH + 'view/list',\n                  method: REQUEST_METHOD_CONST.GET,\n                  headers: {\n                    Authorization: `Bearer ${authToken}`,\n                    'Content-Type': 'application/json'\n                  },\n                  params: {\n                    hotelrefno: Number(companyId),\n                    query: `gid::${item.gid}`\n                  }\n                };\n                const paragraph = await getData(HCMITEMTXTPAR_OPTION);\n\n                if ((paragraph === null || paragraph === void 0 ? void 0 : paragraph.length) > 0) {\n                  var _paragraph$;\n\n                  const HCMITEM_OPTION = {\n                    url: GENERAL_SETTINGS.OREST_URL + OREST_ENDPOINT.SLASH + OREST_ENDPOINT.HCMITEMTXT + OREST_ENDPOINT.SLASH + 'ins',\n                    method: REQUEST_METHOD_CONST.POST,\n                    headers: {\n                      Authorization: `Bearer ${authToken}`,\n                      'Content-Type': 'application/json'\n                    },\n                    data: {\n                      itemid: state === null || state === void 0 ? void 0 : state.hcmItemId,\n                      hotelrefno: Number(companyId)\n                    }\n                  };\n                  const hcmitem = await handleInsertData(HCMITEM_OPTION);\n                  const HCMITEMTXTPAR_OPTION = {\n                    url: GENERAL_SETTINGS.OREST_URL + OREST_ENDPOINT.SLASH + OREST_ENDPOINT.HCMITEMTXTPAR + OREST_ENDPOINT.SLASH + 'ins',\n                    method: REQUEST_METHOD_CONST.POST,\n                    headers: {\n                      Authorization: `Bearer ${authToken}`,\n                      'Content-Type': 'application/json'\n                    },\n                    data: {\n                      itemid: hcmitem === null || hcmitem === void 0 ? void 0 : hcmitem.id,\n                      itemtext: (_paragraph$ = paragraph[0]) === null || _paragraph$ === void 0 ? void 0 : _paragraph$.itemtext,\n                      hotelrefno: Number(companyId)\n                    }\n                  };\n                  const hcmItemTxtPar = await handleInsertData(HCMITEMTXTPAR_OPTION);\n                  if (i === body.length - 1) setIsLoaded(true);\n\n                  if (hcmItemTxtPar) {\n                    b.items[j] = {\n                      service: \"hcmitemtxtpar\",\n                      type: \"paragraph\",\n                      gid: hcmItemTxtPar === null || hcmItemTxtPar === void 0 ? void 0 : hcmItemTxtPar.gid,\n                      width: item === null || item === void 0 ? void 0 : item.width,\n                      id: item === null || item === void 0 ? void 0 : item.id\n                    };\n                  }\n                }\n              }\n            }));\n          }));\n          setToState('pageBuilder', ['email', 'body'], body);\n          ViewList({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.RAFILE,\n            token: authToken,\n            params: {\n              hotelrefno: Number(companyId),\n              query: `filetype:LANG.EMAIL,refid::${res.data.data[0].id}`\n            }\n          }).then(res2 => {\n            var _res2$data, _res2$data$data;\n\n            if (res2.status === 200 && (res2 === null || res2 === void 0 ? void 0 : (_res2$data = res2.data) === null || _res2$data === void 0 ? void 0 : (_res2$data$data = _res2$data.data) === null || _res2$data$data === void 0 ? void 0 : _res2$data$data.length) > 0) {\n              const langFile = JSON.parse(Buffer.from(res2.data.data[0].filedata, 'base64').toString('utf-8'));\n              updateState('pageBuilder', 'langsFile', langFile);\n            }\n          });\n        }\n      } else {\n        const retErr = isErrorMsg(res);\n        toast.error(retErr.errorMsg, {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      }\n    });\n  };\n\n  const fileDownload = option => {\n    return new Promise(async resv => {\n      return await axios(option).then(async response => {\n        if (response.status === 200) {\n          resv(response);\n        } else {\n          const retErr = isErrorMsg(response);\n          toast.error(retErr.errorMsg, {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n        resv(error.response || {\n          status: 0\n        });\n      });\n    });\n  };\n\n  const getData = option => {\n    return new Promise(async resv => {\n      return await axios(option).then(async response => {\n        if (response.status === 200) {\n          var _response$data, _response$data$data;\n\n          if ((response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$data = _response$data.data) === null || _response$data$data === void 0 ? void 0 : _response$data$data.length) > 0) resv(response.data.data);\n        } else {\n          const retErr = isErrorMsg(response);\n          toast.error(retErr.errorMsg, {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n        resv(error.response || {\n          status: 0\n        });\n      });\n    });\n  };\n\n  const handleInsertData = option => {\n    return new Promise(async resv => {\n      return await axios(option).then(async response => {\n        if (response.status === 200) {\n          var _response$data2;\n\n          if (response !== null && response !== void 0 && (_response$data2 = response.data) !== null && _response$data2 !== void 0 && _response$data2.data) resv(response.data.data);\n        } else {\n          const retErr = isErrorMsg(response);\n          toast.error(retErr.errorMsg, {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n        resv(error.response || {\n          status: 0\n        });\n      });\n    });\n  };\n\n  useEffect(() => {\n    var _state$languages;\n\n    (state === null || state === void 0 ? void 0 : (_state$languages = state.languages) === null || _state$languages === void 0 ? void 0 : _state$languages.length) > 0 && state.languages.forEach(lang => {\n      var _state$langsFile, _state$langsFile$head, _lang$code, _state$langsFile2, _state$langsFile2$bod, _lang$code2, _state$langsFile3, _state$langsFile3$foo, _lang$code3;\n\n      if (state !== null && state !== void 0 && (_state$langsFile = state.langsFile) !== null && _state$langsFile !== void 0 && (_state$langsFile$head = _state$langsFile.header) !== null && _state$langsFile$head !== void 0 && _state$langsFile$head[lang === null || lang === void 0 ? void 0 : (_lang$code = lang.code) === null || _lang$code === void 0 ? void 0 : _lang$code.toLowerCase()] && state !== null && state !== void 0 && (_state$langsFile2 = state.langsFile) !== null && _state$langsFile2 !== void 0 && (_state$langsFile2$bod = _state$langsFile2.body) !== null && _state$langsFile2$bod !== void 0 && _state$langsFile2$bod[lang === null || lang === void 0 ? void 0 : (_lang$code2 = lang.code) === null || _lang$code2 === void 0 ? void 0 : _lang$code2.toLowerCase()] && state !== null && state !== void 0 && (_state$langsFile3 = state.langsFile) !== null && _state$langsFile3 !== void 0 && (_state$langsFile3$foo = _state$langsFile3.footer) !== null && _state$langsFile3$foo !== void 0 && _state$langsFile3$foo[lang === null || lang === void 0 ? void 0 : (_lang$code3 = lang.code) === null || _lang$code3 === void 0 ? void 0 : _lang$code3.toLowerCase()]) {\n        var _state$translatedLang;\n\n        const isExist = state === null || state === void 0 ? void 0 : (_state$translatedLang = state.translatedLanguages) === null || _state$translatedLang === void 0 ? void 0 : _state$translatedLang.find(x => x.id === lang.id);\n        !isExist ? pushToState('pageBuilder', ['translatedLanguages'], [lang]) : null;\n      }\n    });\n  }, [state.langsFile]);\n\n  const resetRenderDialog = () => {\n    setRenderDialog(false);\n  };\n\n  const handleSelectedHeader = header => {\n    // saving header into redux\n    if (state.langCode === state.defaultLang) {\n      setToState('pageBuilder', ['email', 'header'], header);\n    } else {\n      const updatedlangsFile = _objectSpread({}, state.langsFile);\n\n      if (updatedlangsFile.header[state.langCode]) {\n        setToState('pageBuilder', ['langsFile', 'header', state.langCode], header);\n      }\n    }\n  };\n\n  const handleSelectedFooter = footer => {\n    // saving footer into redux\n    if (state.langCode === state.defaultLang) {\n      setToState('pageBuilder', ['email', 'footer'], footer);\n    } else {\n      const updatedlangsFile = _objectSpread({}, state.langsFile);\n\n      if (updatedlangsFile.footer[state.langCode]) {\n        setToState('pageBuilder', ['langsFile', 'footer', state.langCode], footer);\n      }\n    }\n  };\n\n  const handleAddEmailSection = (body, order) => {\n    if (body && body.items && body.items.length > 0) {\n      if (body.items[body.items.length - 1].type === 'paragraph') {\n        Insert({\n          // insert paragraph into hcmitemtxt\n          apiUrl: GENERAL_SETTINGS.OREST_URL,\n          endpoint: OREST_ENDPOINT.HCMITEMTXT,\n          token: authToken,\n          data: {\n            itemid: state.hcmItemId,\n            hotelrefno: Number(companyId)\n          }\n        }).then(res => {\n          if (res.status === 200 && res.data.data) {\n            Insert({\n              // insert textpar\n              apiUrl: GENERAL_SETTINGS.OREST_URL,\n              endpoint: OREST_ENDPOINT.HCMITEMTXTPAR,\n              token: authToken,\n              data: {\n                itemid: res.data.data.id,\n                itemtext: body.items[body.items.length - 1].service,\n                hotelrefno: Number(companyId)\n              }\n            }).then(res1 => {\n              var _res1$data;\n\n              if ((res1 === null || res1 === void 0 ? void 0 : res1.status) === 200 && res1 !== null && res1 !== void 0 && (_res1$data = res1.data) !== null && _res1$data !== void 0 && _res1$data.data) {\n                var _body$items, _body$items2, _body$items3, _updatedEmailObj$body;\n\n                body.items[body.items.length - 1] = {\n                  service: \"hcmitemtxtpar\",\n                  type: \"paragraph\",\n                  gid: res1.data.data.gid,\n                  width: body === null || body === void 0 ? void 0 : (_body$items = body.items[body.items.length - 1]) === null || _body$items === void 0 ? void 0 : _body$items.width,\n                  id: `item-${body === null || body === void 0 ? void 0 : (_body$items2 = body.items) === null || _body$items2 === void 0 ? void 0 : _body$items2.length}`,\n                  useBgColor: body === null || body === void 0 ? void 0 : (_body$items3 = body.items[body.items.length - 1]) === null || _body$items3 === void 0 ? void 0 : _body$items3.useBgColor\n                };\n\n                const updatedEmailObj = _objectSpread({}, state === null || state === void 0 ? void 0 : state.email);\n\n                updatedEmailObj === null || updatedEmailObj === void 0 ? void 0 : (_updatedEmailObj$body = updatedEmailObj.body) === null || _updatedEmailObj$body === void 0 ? void 0 : _updatedEmailObj$body.splice(order - 1, 0, body);\n                updateState('pageBuilder', 'email', updatedEmailObj);\n              }\n            });\n          }\n        });\n      } else {\n        var _updatedEmailObj$body2;\n\n        const updatedEmailObj = _objectSpread({}, state === null || state === void 0 ? void 0 : state.email);\n\n        updatedEmailObj === null || updatedEmailObj === void 0 ? void 0 : (_updatedEmailObj$body2 = updatedEmailObj.body) === null || _updatedEmailObj$body2 === void 0 ? void 0 : _updatedEmailObj$body2.splice(order - 1, 0, body);\n        updateState('pageBuilder', 'email', updatedEmailObj);\n      }\n    }\n  };\n\n  const handleDeleteHeader = () => {\n    // deleting header from redux\n    setToState('pageBuilder', ['email', 'header'], {});\n    setToState('pageBuilder', ['langsFile', 'header'], {});\n    toast.success(DELETE_SUCCESS, {\n      position: toast.POSITION.TOP_RIGHT\n    });\n  };\n\n  const handleDeleteFooter = () => {\n    // deleting footer from redux\n    setToState('pageBuilder', ['email', 'footer'], {});\n    setToState('pageBuilder', ['langsFile', 'footer'], {});\n    toast.success(DELETE_SUCCESS, {\n      position: toast.POSITION.TOP_RIGHT\n    });\n  };\n\n  const handleDeleteEmailSection = async index => {\n    // deleting body from redux\n    setIsDeleting(true);\n    const body = state.email.body[index];\n    let req = [];\n\n    for (let component of body.items) {\n      if (component.type === 'image') {\n        const REQUEST_OPTIONS_DELETE_HCMITEMIMG = {\n          url: GENERAL_SETTINGS.OREST_URL + OREST_ENDPOINT.SLASH + OREST_ENDPOINT.HCMITEMIMG + OREST_ENDPOINT.SLASH + 'del/' + component.gid,\n          method: REQUEST_METHOD_CONST.DELETE,\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n            'Content-Type': 'application/json'\n          },\n          params: {\n            hotelrefno: Number(companyId)\n          }\n        };\n        const image = await deleteImage(REQUEST_OPTIONS_DELETE_HCMITEMIMG);\n        req.push(image);\n      }\n\n      if (component.type === 'paragraph') {\n        const REQUEST_OPTIONS_DELETE_HCMITEMTXTPAR = {\n          url: GENERAL_SETTINGS.OREST_URL + OREST_ENDPOINT.SLASH + OREST_ENDPOINT.HCMITEMTXTPAR + OREST_ENDPOINT.SLASH + 'del/' + component.gid,\n          method: REQUEST_METHOD_CONST.DELETE,\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n            'Content-Type': 'application/json'\n          },\n          params: {\n            hotelrefno: Number(companyId)\n          }\n        };\n        const paragrapgh = await deleteParagraph(REQUEST_OPTIONS_DELETE_HCMITEMTXTPAR);\n        req.push(paragrapgh);\n      }\n    }\n\n    await Promise.all(req).then(async res => {\n      let isSuccess = true;\n      await res.map(r => {\n        if (r.status !== 200) {\n          isSuccess = false;\n        }\n      });\n      setIsDeleting(false);\n\n      if (isSuccess) {\n        deleteFromState('pageBuilder', ['email', 'body'], [index, 1]);\n\n        const updatedOtherLangs = _objectSpread({}, state.langsFile.body);\n\n        for (const lang in updatedOtherLangs) {\n          if (updatedOtherLangs[lang].items && updatedOtherLangs[lang].items.length > 0) {\n            updatedOtherLangs[lang].items.splice(index, 1);\n          }\n        }\n\n        setToState('pageBuilder', ['langsFile', 'body'], updatedOtherLangs);\n        toast.success(DELETE_SUCCESS, {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      } else {\n        toast.error('Something went wrong', {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      }\n    });\n  };\n\n  const deleteImage = async header => {\n    //delete image from hcmitem img\n    return new Promise(async resv => {\n      return await axios(header).then(async response => {\n        if (response.status === 200 && response.data && response.data.success) {\n          resv(response);\n        } else {\n          const retErr = isErrorMsg(response);\n          toast.error(retErr.errorMsg, {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n        resv(error.response || {\n          status: 0\n        });\n      });\n    });\n  };\n\n  const deleteParagraph = async header => {\n    // delete text from hcmitemtxtpar\n    return new Promise(async resv => {\n      return await axios(header).then(async response => {\n        if (response.status === 200 && response.data && response.data.success) {\n          resv(response);\n        } else {\n          const retErr = isErrorMsg(response);\n          toast.error(retErr.errorMsg, {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n        resv(error.response || {\n          status: 0\n        });\n      });\n    });\n  };\n\n  const onEditSection = (newSection, index, order) => {\n    if (state.langCode === state.defaultLang) {\n      let updatedBody = [...state.email.body];\n      updatedBody.splice(index, 1);\n      updatedBody.splice(order - 1, 0, newSection);\n      setToState('pageBuilder', ['email', 'body'], updatedBody);\n    } else {\n      if (Object.keys(state.langsFile.body[state.langCode]).length > 0) {\n        const updatedLangs = _objectSpread({}, state.langsFile);\n\n        const updatedItems = state.langsFile.body[state.langCode].items;\n        const items = {\n          items: newSection.items\n        };\n        updatedItems[index] = items;\n        updatedLangs.body[state.langCode].items = updatedItems;\n        updateState('pageBuilder', 'langsFile', updatedLangs);\n      }\n    }\n  };\n\n  const handleEditSectionDialog = (section, otherLangSection) => {\n    setEditSectionDialog(__jsx(EditEmailSection, {\n      section: section,\n      onEditSection: onEditSection,\n      dialogTitle: \"Edit Section\",\n      isDialogOpen: true,\n      resetRender: () => setEditSectionDialog(''),\n      otherLangSection: otherLangSection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 700,\n        columnNumber: 13\n      }\n    }));\n  };\n\n  const handleDelete = (type, isDelete) => {\n    if (isDelete) {\n      switch (type) {\n        case 'header':\n          handleDeleteHeader();\n          break;\n\n        case 'footer':\n          handleDeleteFooter();\n          break;\n\n        case 'section':\n          handleDeleteEmailSection(deletedIndex);\n          break;\n      }\n    }\n\n    setAlert(false);\n  };\n\n  const handleLanguageChange = async lang => {\n    const code = lang === null || lang === void 0 ? void 0 : lang.code.toLowerCase();\n    updateState('pageBuilder', 'langCode', code);\n    updateState('pageBuilder', 'langId', lang === null || lang === void 0 ? void 0 : lang.id);\n\n    const updatedlangsFile = _objectSpread({}, state.langsFile);\n\n    if (code !== state.defaultLang) {\n      var _state$langsFile4, _state$langsFile5, _state$langsFile6;\n\n      !(state !== null && state !== void 0 && (_state$langsFile4 = state.langsFile) !== null && _state$langsFile4 !== void 0 && _state$langsFile4.header) ? updatedlangsFile['header'] = {} : null;\n      !(state !== null && state !== void 0 && (_state$langsFile5 = state.langsFile) !== null && _state$langsFile5 !== void 0 && _state$langsFile5.footer) ? updatedlangsFile['footer'] = {} : null;\n      !(state !== null && state !== void 0 && (_state$langsFile6 = state.langsFile) !== null && _state$langsFile6 !== void 0 && _state$langsFile6.body) ? updatedlangsFile['body'] = {} : null;\n\n      if (!updatedlangsFile.header[code]) {\n        var _state$email4, _state$email4$header, _state$email4$header$;\n\n        if ((state === null || state === void 0 ? void 0 : (_state$email4 = state.email) === null || _state$email4 === void 0 ? void 0 : (_state$email4$header = _state$email4.header) === null || _state$email4$header === void 0 ? void 0 : (_state$email4$header$ = _state$email4$header.items) === null || _state$email4$header$ === void 0 ? void 0 : _state$email4$header$.length) > 0) {\n          updatedlangsFile.header[code] = {\n            items: []\n          };\n          Promise.all(state.email.header.items.map((rowItem, rowIndex) => {\n            if (rowItem.type === 'logo') {\n              updatedlangsFile.header[code].items[rowIndex] = {\n                value: rowItem.value.link\n              };\n            }\n\n            if (rowItem.type === 'link') {\n              updatedlangsFile.header[code].items[rowIndex] = {\n                value: []\n              };\n              rowItem.value.map(colItem => {\n                updatedlangsFile.header[code].items[rowIndex].value.push({\n                  value: colItem.title\n                });\n              });\n            }\n\n            if (rowItem.type === 'social-link') {\n              updatedlangsFile.header[code].items[rowIndex] = {\n                value: []\n              };\n              rowItem.value.map(colItem => {\n                updatedlangsFile.header[code].items[rowIndex].value.push({\n                  value: colItem.title\n                });\n              });\n            }\n          }));\n          updateState('pageBuilder', 'langsFile', updatedlangsFile);\n        }\n      } else {\n        var _state$email5, _state$email5$header, _state$email5$header$;\n\n        if ((state === null || state === void 0 ? void 0 : (_state$email5 = state.email) === null || _state$email5 === void 0 ? void 0 : (_state$email5$header = _state$email5.header) === null || _state$email5$header === void 0 ? void 0 : (_state$email5$header$ = _state$email5$header.items) === null || _state$email5$header$ === void 0 ? void 0 : _state$email5$header$.length) > 0) {\n          var _state$email6, _state$email6$header, _state$email6$header$, _updatedlangsFile$hea, _updatedlangsFile$hea2, _state$email7, _state$email7$header, _state$email7$header$, _updatedlangsFile$hea3, _updatedlangsFile$hea4;\n\n          if ((state === null || state === void 0 ? void 0 : (_state$email6 = state.email) === null || _state$email6 === void 0 ? void 0 : (_state$email6$header = _state$email6.header) === null || _state$email6$header === void 0 ? void 0 : (_state$email6$header$ = _state$email6$header.items) === null || _state$email6$header$ === void 0 ? void 0 : _state$email6$header$.length) > (updatedlangsFile === null || updatedlangsFile === void 0 ? void 0 : (_updatedlangsFile$hea = updatedlangsFile.header[code]) === null || _updatedlangsFile$hea === void 0 ? void 0 : (_updatedlangsFile$hea2 = _updatedlangsFile$hea.items) === null || _updatedlangsFile$hea2 === void 0 ? void 0 : _updatedlangsFile$hea2.length)) {\n            for (let i = updatedlangsFile.header[code].items.length; i < state.email.header.items.length; i++) {\n              if (state.email.header.items[i].type === 'social-link' || state.email.header.items[i].type === 'link') {\n                updatedlangsFile.header[code].items.push({\n                  value: []\n                });\n\n                for (let value of state.email.header.items[i].value) {\n                  updatedlangsFile.header[code].items[i].value.push({\n                    value: value.title\n                  });\n                }\n              }\n\n              if (state.email.header.items[i].type === 'logo') {\n                updatedlangsFile.header[code].items.push({\n                  value: state.email.header.items[i].value.value\n                });\n              }\n            }\n          }\n\n          if ((state === null || state === void 0 ? void 0 : (_state$email7 = state.email) === null || _state$email7 === void 0 ? void 0 : (_state$email7$header = _state$email7.header) === null || _state$email7$header === void 0 ? void 0 : (_state$email7$header$ = _state$email7$header.items) === null || _state$email7$header$ === void 0 ? void 0 : _state$email7$header$.length) < (updatedlangsFile === null || updatedlangsFile === void 0 ? void 0 : (_updatedlangsFile$hea3 = updatedlangsFile.header[code]) === null || _updatedlangsFile$hea3 === void 0 ? void 0 : (_updatedlangsFile$hea4 = _updatedlangsFile$hea3.items) === null || _updatedlangsFile$hea4 === void 0 ? void 0 : _updatedlangsFile$hea4.length)) {\n            updatedlangsFile.header[code].items.length = state.email.header.items.length;\n          }\n\n          Promise.all(state.email.header.items.map((item, index) => {\n            if (item.type === 'social-link' || item.type === 'link') {\n              if (item.value.length > updatedlangsFile.header[code].items[index].value.length) {\n                for (let i = updatedlangsFile.header[code].items[index].value.length; i < item.value.length; i++) {\n                  updatedlangsFile.header[code].items[index].value.push({\n                    value: item.value[i].title\n                  });\n                }\n              }\n\n              if (item.value.length < updatedlangsFile.header[code].items[index].value.length) {\n                updatedlangsFile.header[code].items[index].value.length = item.value.length;\n              }\n            }\n          }));\n          updateState('pageBuilder', 'langsFile', updatedlangsFile);\n        }\n      } // footer related conditions\n\n\n      if (!updatedlangsFile.footer[code]) {\n        var _state$email8, _state$email8$footer, _state$email8$footer$;\n\n        if ((state === null || state === void 0 ? void 0 : (_state$email8 = state.email) === null || _state$email8 === void 0 ? void 0 : (_state$email8$footer = _state$email8.footer) === null || _state$email8$footer === void 0 ? void 0 : (_state$email8$footer$ = _state$email8$footer.items) === null || _state$email8$footer$ === void 0 ? void 0 : _state$email8$footer$.length) > 0) {\n          updatedlangsFile.footer[code] = {\n            items: []\n          };\n          Promise.all(state.email.footer.items.map((rowItem, rowIndex) => {\n            updatedlangsFile.footer[code].items[rowIndex] = {\n              items: []\n            };\n            rowItem.items.map((colItem, colIndex) => {\n              if (colItem.type === 'social-link' || colItem.type === 'link') {\n                updatedlangsFile.footer[code].items[rowIndex].items[colIndex] = {\n                  value: colItem.value.title\n                };\n              }\n\n              if (colItem.type === 'image') {\n                updatedlangsFile.footer[code].items[rowIndex].items[colIndex] = {\n                  value: colItem.value.image\n                };\n              }\n\n              if (colItem.type === 'heading' || colItem.type === 'paragraph') {\n                updatedlangsFile.footer[code].items[rowIndex].items[colIndex] = {\n                  value: colItem.value\n                };\n              }\n\n              if (colItem.type === 'address') {\n                updatedlangsFile.footer[code].items[rowIndex].items[colIndex] = {\n                  value: []\n                };\n                colItem.value.map((val, i) => {\n                  updatedlangsFile.footer[code].items[rowIndex].items[colIndex].value[i] = {\n                    value: val.title\n                  };\n                });\n              }\n            });\n          }));\n          updateState('pageBuilder', 'langsFile', updatedlangsFile);\n        }\n      } else {\n        var _state$email9, _state$email9$footer;\n\n        if ((state === null || state === void 0 ? void 0 : (_state$email9 = state.email) === null || _state$email9 === void 0 ? void 0 : (_state$email9$footer = _state$email9.footer) === null || _state$email9$footer === void 0 ? void 0 : _state$email9$footer.length) > 0) {\n          if (state.email.footer.items.length > updatedlangsFile.footer[code].items.length) {\n            for (let i = updatedlangsFile.footer[code].items.length; i < state.email.footer.items.length; i++) {\n              updatedlangsFile.footer[code].items.push({\n                items: []\n              });\n\n              for (let item of state.email.footer.items[i].items) {\n                const index = state.email.footer.items[i].items.indexOf(item);\n\n                if (item.type === 'social-link' || item.type === 'link') {\n                  updatedlangsFile.footer[code].items[i].items[index] = {\n                    value: item.value.title\n                  };\n                }\n\n                if (item.type === 'heading' || item.type === 'paragraph') {\n                  updatedlangsFile.footer[code].items[i].items[index] = {\n                    value: item.value\n                  };\n                }\n\n                if (item.type === 'address') {\n                  updatedlangsFile.footer[code].items[i].items[index] = {\n                    value: []\n                  };\n                  item.value.map((val, j) => {\n                    updatedlangsFile.footer[code].items[i].items[index].value[j] = {\n                      value: val.title\n                    };\n                  });\n                }\n              }\n            }\n          }\n\n          if (state.email.footer.items.length < updatedlangsFile.footer[code].items.length) {\n            updatedlangsFile.footer[code].items.length = state.email.footer.items.length;\n          }\n\n          if (state.email.footer.items.length === updatedlangsFile.footer[code].items.length) {\n            Promise.all(state.email.footer.items.map((item, index) => {\n              if (item.items.length > updatedlangsFile.footer[code].items[index].items.length) {\n                for (let i = updatedlangsFile.footer[code].items[index].items.length; i < state.email.footer.items[index].items.length; i++) {\n                  if (item.items[i].type === 'social-link' || item.items[i].type === 'link') {\n                    updatedlangsFile.footer[code].items[index].items[i] = {\n                      value: item.items[i].value.title\n                    };\n                  }\n\n                  if (item.items[i].type === 'heading' || item.items[i].type === 'paragraph') {\n                    updatedlangsFile.footer[code].items[index].items[i] = {\n                      value: item.items[i].value\n                    };\n                  }\n\n                  if (item.items[i].type === 'address') {\n                    updatedlangsFile.footer[code].items[index].items[i] = {\n                      value: []\n                    };\n                    item.items[i].value.map((val, j) => {\n                      updatedlangsFile.footer[code].items[index].items[i].value[j] = {\n                        value: val.title\n                      };\n                    });\n                  }\n                }\n              }\n\n              if (item.items.length < updatedlangsFile.footer[code].items[index].items.length) {\n                updatedlangsFile.footer[code].items[index].items.length = item.items.length;\n              }\n            }));\n          }\n\n          Promise.all(state.email.footer.items.map((item, index) => {\n            item.items.length > 0 && item.items.map((subItem, i) => {\n              if (subItem.type === 'address') {\n                if (subItem.value.length > updatedlangsFile.footer[code].items[index].items[i].value.length) {\n                  for (let j = updatedlangsFile.footer[code].items[index].items[i].value.length; j < subItem.value.length; j++) {\n                    updatedlangsFile.footer[code].items[index].items[i].value[j] = {\n                      value: subItem.value[j].title\n                    };\n                  }\n                }\n\n                if (subItem.value.length < updatedlangsFile.footer[code].items[index].items[i].value.length) {\n                  updatedlangsFile.footer[code].items[index].items[i].value.length = subItem.value.length;\n                }\n              }\n            });\n          }));\n          updateState('pageBuilder', 'langsFile', updatedlangsFile);\n        }\n      } //body related condition\n\n\n      if (!updatedlangsFile.body[code]) {\n        if (state.email.body.length > 0) {\n          updatedlangsFile.body[code] = {\n            items: []\n          };\n\n          for (let section of state.email.body) {\n            const sectionIndex = state.email.body.indexOf(section);\n            updatedlangsFile.body[code].items.push({\n              items: []\n            });\n\n            for (let item of section.items) {\n              const itemIndex = section.items.indexOf(item);\n\n              if (item.type === 'image') {\n                const REQUEST_OPTION_GET_IMAGE = {\n                  url: GENERAL_SETTINGS.OREST_URL + '/' + OREST_ENDPOINT.HCMITEMIMG + '/view/list',\n                  method: 'get',\n                  headers: {\n                    Authorization: `Bearer ${authToken}`,\n                    'Content-Type': 'application/json'\n                  },\n                  params: {\n                    hotelrefno: Number(companyId),\n                    query: `gid:${item.gid}`\n                  }\n                };\n                const img = await getImageData(REQUEST_OPTION_GET_IMAGE);\n                updatedlangsFile.body[code].items[sectionIndex].items[itemIndex] = {\n                  image: {\n                    title: img.title,\n                    description: img.description\n                  }\n                };\n              }\n\n              if (item.type === 'paragraph') {\n                const REQUEST_OPTION_GET_TEXT = {\n                  url: GENERAL_SETTINGS.OREST_URL + '/' + OREST_ENDPOINT.HCMITEMTXTPAR + '/view/list',\n                  method: 'get',\n                  headers: {\n                    Authorization: `Bearer ${authToken}`,\n                    'Content-Type': 'application/json'\n                  },\n                  params: {\n                    hotelrefno: Number(companyId),\n                    query: `gid:${item.gid}`\n                  }\n                };\n                const text = await getTextData(REQUEST_OPTION_GET_TEXT);\n                updatedlangsFile.body[code].items[sectionIndex].items[itemIndex] = {\n                  text: text\n                };\n              }\n            }\n          }\n        }\n\n        updateState('pageBuilder', 'langsFile', updatedlangsFile);\n      } else {\n        if (updatedlangsFile.body[code].items.length < state.email.body.length) {\n          for (let i = updatedlangsFile.body[code].items.length; i < state.email.body.length; i++) {\n            updatedlangsFile.body[code].items.push({\n              items: []\n            });\n\n            for (let item of state.email.body[i].items) {\n              const itemIndex = state.email.body[i].items.indexOf(item);\n\n              if (item.type === 'image') {\n                const REQUEST_OPTION_GET_IMAGE = {\n                  url: GENERAL_SETTINGS.OREST_URL + '/' + OREST_ENDPOINT.HCMITEMIMG + '/view/list',\n                  method: 'get',\n                  headers: {\n                    Authorization: `Bearer ${authToken}`,\n                    'Content-Type': 'application/json'\n                  },\n                  params: {\n                    hotelrefno: Number(companyId),\n                    query: `gid:${item.gid}`\n                  }\n                };\n                const img = await getImageData(REQUEST_OPTION_GET_IMAGE);\n                updatedlangsFile.body[code].items[i].items[itemIndex] = {\n                  image: {\n                    title: img.title,\n                    description: img.description\n                  }\n                };\n              }\n\n              if (item.type === 'paragraph') {\n                const REQUEST_OPTION_GET_TEXT = {\n                  url: GENERAL_SETTINGS.OREST_URL + '/' + OREST_ENDPOINT.HCMITEMTXTPAR + '/view/list',\n                  method: 'get',\n                  headers: {\n                    Authorization: `Bearer ${authToken}`,\n                    'Content-Type': 'application/json'\n                  },\n                  params: {\n                    hotelrefno: Number(companyId),\n                    query: `gid:${item.gid}`\n                  }\n                };\n                const text = await getTextData(REQUEST_OPTION_GET_TEXT);\n                updatedlangsFile.body[code].items[i].items[itemIndex] = {\n                  text: text\n                };\n              }\n            }\n          }\n\n          updateState('pageBuilder', 'langsFile', updatedlangsFile);\n        }\n      }\n    }\n  };\n\n  const getImageData = async header => {\n    return new Promise(async resv => {\n      return await axios(header).then(async response => {\n        if (response.status === 200 && response.data && response.data.data.length > 0) {\n          resv({\n            title: response.data.data[0].title,\n            description: response.data.data[0].description\n          });\n        } else {\n          const retErr = isErrorMsg(response);\n          toast.error(retErr.errorMsg, {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n        resv(error.response || {\n          status: 0\n        });\n      });\n    });\n  };\n\n  const getTextData = async header => {\n    return new Promise(async resv => {\n      return await axios(header).then(async response => {\n        if (response.status === 200 && response.data && response.data.data.length > 0) {\n          resv(response.data.data[0].itemtext);\n        } else {\n          const retErr = isErrorMsg(response);\n          toast.error(retErr.errorMsg, {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n        resv(error.response || {\n          status: 0\n        });\n      });\n    });\n  };\n\n  return __jsx(Container, {\n    className: isDeleting ? classes.disabledEvent : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1094,\n      columnNumber: 9\n    }\n  }, !isLoaded ? __jsx(LoadingSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1096,\n      columnNumber: 29\n    }\n  }) : __jsx(React.Fragment, null, __jsx(Typography, {\n    style: {\n      display: \"flex\",\n      justifyContent: 'flex-end'\n    },\n    component: 'div',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1098,\n      columnNumber: 21\n    }\n  }, __jsx(FormControl, {\n    variant: \"outlined\",\n    style: {\n      marginRight: 8\n    },\n    size: 'small',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1105,\n      columnNumber: 25\n    }\n  }, __jsx(InputLabel, {\n    style: {\n      fontSize: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1110,\n      columnNumber: 29\n    }\n  }, \"Width\"), __jsx(Select, {\n    value: state === null || state === void 0 ? void 0 : state.emailWidth,\n    onChange: e => {\n      updateState('pageBuilder', 'emailWidth', e.target.value);\n    },\n    label: \"Width\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1111,\n      columnNumber: 29\n    }\n  }, emailWidth.map((width, index) => {\n    return __jsx(MenuItem, {\n      value: width,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1120,\n        columnNumber: 41\n      }\n    }, width);\n  }))), __jsx(Typography, {\n    component: 'div',\n    className: (state === null || state === void 0 ? void 0 : (_state$email10 = state.email) === null || _state$email10 === void 0 ? void 0 : (_state$email10$body = _state$email10.body) === null || _state$email10$body === void 0 ? void 0 : _state$email10$body.length) === 0 ? classes.disabledEvent : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1127,\n      columnNumber: 25\n    }\n  }, __jsx(LanguageDropdown, {\n    handleChange: handleLanguageChange,\n    langID: state === null || state === void 0 ? void 0 : state.langId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1129,\n      columnNumber: 29\n    }\n  }))), __jsx(Box, _extends({}, defaultProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1132,\n      columnNumber: 25\n    }\n  }), __jsx(Typography, {\n    component: 'div',\n    style: {\n      height: 'auto',\n      overflow: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1133,\n      columnNumber: 29\n    }\n  }, Object.keys(state.email.header).length > 0 ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1135,\n      columnNumber: 82\n    }\n  }, __jsx(IconButton, {\n    \"aria-label\": \"Delete item\",\n    color: \"primary\",\n    onClick: () => {\n      setDialogType('edit-header');\n      setDialogTitle('Edit Header');\n      setRenderDialog(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1136,\n      columnNumber: 45\n    }\n  }, __jsx(EditIcon, {\n    color: 'primary',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1145,\n      columnNumber: 49\n    }\n  })), state.langCode === state.defaultLang && __jsx(IconButton, {\n    \"aria-label\": \"Delete item\",\n    color: \"primary\",\n    onClick: () => {\n      setAlert(true);\n      setAlertDialogType('header');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1148,\n      columnNumber: 89\n    }\n  }, __jsx(DeleteIcon, {\n    color: 'primary',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1156,\n      columnNumber: 53\n    }\n  })), __jsx(\"div\", {\n    style: {\n      pointerEvents: \"none\",\n      backgroundColor: state === null || state === void 0 ? void 0 : (_state$assets = state.assets) === null || _state$assets === void 0 ? void 0 : (_state$assets$colors = _state$assets.colors) === null || _state$assets$colors === void 0 ? void 0 : (_state$assets$colors$ = _state$assets$colors.primary) === null || _state$assets$colors$ === void 0 ? void 0 : _state$assets$colors$.main\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1159,\n      columnNumber: 45\n    }\n  }, state.langCode === state.defaultLang && __jsx(EmailHeader, {\n    tpl: state.email.header.tpl,\n    items: state.email.header.items,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1165,\n      columnNumber: 53\n    }\n  }), (state === null || state === void 0 ? void 0 : state.langCode) !== (state === null || state === void 0 ? void 0 : state.defaultLang) && (state === null || state === void 0 ? void 0 : (_state$langsFile7 = state.langsFile) === null || _state$langsFile7 === void 0 ? void 0 : (_state$langsFile7$hea = _state$langsFile7.header) === null || _state$langsFile7$hea === void 0 ? void 0 : (_state$langsFile7$hea2 = _state$langsFile7$hea[state.langCode]) === null || _state$langsFile7$hea2 === void 0 ? void 0 : _state$langsFile7$hea2.items) && __jsx(EmailHeader, {\n    tpl: state.email.header.tpl,\n    items: (_state$langsFile8 = state.langsFile) === null || _state$langsFile8 === void 0 ? void 0 : (_state$langsFile8$hea = _state$langsFile8.header) === null || _state$langsFile8$hea === void 0 ? void 0 : (_state$langsFile8$hea2 = _state$langsFile8$hea[state.langCode]) === null || _state$langsFile8$hea2 === void 0 ? void 0 : _state$langsFile8$hea2.items,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1173,\n      columnNumber: 53\n    }\n  }))) : __jsx(\"h3\", {\n    className: classes.centreContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1180,\n      columnNumber: 41\n    }\n  }, __jsx(\"span\", {\n    className: classes.cursorPointer,\n    onClick: () => {\n      setDialogType('add-header');\n      setDialogTitle('Add Header');\n      setRenderDialog(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1181,\n      columnNumber: 45\n    }\n  }, \"Click to define Header\"))), __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1193,\n      columnNumber: 29\n    }\n  }), __jsx(Typography, {\n    component: 'div',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1194,\n      columnNumber: 29\n    }\n  }, (state === null || state === void 0 ? void 0 : state.langCode) !== (state === null || state === void 0 ? void 0 : state.defaultLang) && (state === null || state === void 0 ? void 0 : (_state$langsFile9 = state.langsFile) === null || _state$langsFile9 === void 0 ? void 0 : (_state$langsFile9$bod = _state$langsFile9.body) === null || _state$langsFile9$bod === void 0 ? void 0 : (_state$langsFile9$bod2 = _state$langsFile9$bod[state.langCode]) === null || _state$langsFile9$bod2 === void 0 ? void 0 : (_state$langsFile9$bod3 = _state$langsFile9$bod2.items) === null || _state$langsFile9$bod3 === void 0 ? void 0 : _state$langsFile9$bod3.length) > 0 && state.langsFile.body[state.langCode].items.map((item, index) => {\n    var _item$items;\n\n    return __jsx(Typography, {\n      component: 'div',\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1200,\n        columnNumber: 45\n      }\n    }, __jsx(IconButton, {\n      color: \"primary\",\n      onClick: () => {\n        handleEditSectionDialog(state.email.body[index], item.items);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1201,\n        columnNumber: 49\n      }\n    }, __jsx(EditIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1208,\n        columnNumber: 53\n      }\n    })), __jsx(Container, {\n      style: {\n        pointerEvents: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1210,\n        columnNumber: 49\n      }\n    }, __jsx(Grid, {\n      container: true,\n      spacing: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1211,\n        columnNumber: 53\n      }\n    }, (item === null || item === void 0 ? void 0 : (_item$items = item.items) === null || _item$items === void 0 ? void 0 : _item$items.length) > 0 && item.items.map((subItem, i) => {\n      var _state$email11, _state$email11$body$i, _state$email11$body$i2, _state$email12, _state$email12$body$i, _state$email13, _state$email13$body$i, _state$email14, _state$email14$body$i, _state$email14$body$i2, _state$assets2, _state$assets2$colors, _state$assets2$colors2;\n\n      return __jsx(Grid, {\n        item: true,\n        style: {\n          width: (state === null || state === void 0 ? void 0 : (_state$email11 = state.email) === null || _state$email11 === void 0 ? void 0 : (_state$email11$body$i = _state$email11.body[index]) === null || _state$email11$body$i === void 0 ? void 0 : (_state$email11$body$i2 = _state$email11$body$i.items[i]) === null || _state$email11$body$i2 === void 0 ? void 0 : _state$email11$body$i2.width) + '%'\n        },\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1215,\n          columnNumber: 69\n        }\n      }, 'image' in subItem && __jsx(Image, {\n        imageComponent: state === null || state === void 0 ? void 0 : (_state$email12 = state.email) === null || _state$email12 === void 0 ? void 0 : (_state$email12$body$i = _state$email12.body[index]) === null || _state$email12$body$i === void 0 ? void 0 : _state$email12$body$i.items[i],\n        otherLangsImage: subItem.image,\n        sectionType: state === null || state === void 0 ? void 0 : (_state$email13 = state.email) === null || _state$email13 === void 0 ? void 0 : (_state$email13$body$i = _state$email13.body[index]) === null || _state$email13$body$i === void 0 ? void 0 : _state$email13$body$i.type,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1221,\n          columnNumber: 81\n        }\n      }), 'text' in subItem && __jsx(\"div\", {\n        style: {\n          backgroundColor: state !== null && state !== void 0 && (_state$email14 = state.email) !== null && _state$email14 !== void 0 && (_state$email14$body$i = _state$email14.body[index]) !== null && _state$email14$body$i !== void 0 && (_state$email14$body$i2 = _state$email14$body$i.items[i]) !== null && _state$email14$body$i2 !== void 0 && _state$email14$body$i2.useBgColor ? state === null || state === void 0 ? void 0 : (_state$assets2 = state.assets) === null || _state$assets2 === void 0 ? void 0 : (_state$assets2$colors = _state$assets2.colors) === null || _state$assets2$colors === void 0 ? void 0 : (_state$assets2$colors2 = _state$assets2$colors.message) === null || _state$assets2$colors2 === void 0 ? void 0 : _state$assets2$colors2.main : 'white',\n          height: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1229,\n          columnNumber: 77\n        }\n      }, __jsx(Paragraph, {\n        paragraph: subItem.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1232,\n          columnNumber: 81\n        }\n      })));\n    }))));\n  }), (state === null || state === void 0 ? void 0 : state.langCode) === (state === null || state === void 0 ? void 0 : state.defaultLang) && (state === null || state === void 0 ? void 0 : (_state$email15 = state.email) === null || _state$email15 === void 0 ? void 0 : (_state$email15$body = _state$email15.body) === null || _state$email15$body === void 0 ? void 0 : _state$email15$body.length) > 0 && state.email.body.map((body, index) => {\n    var _body$items4;\n\n    return __jsx(Typography, {\n      component: 'div',\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1251,\n        columnNumber: 45\n      }\n    }, __jsx(IconButton, {\n      color: \"primary\",\n      onClick: () => {\n        handleEditSectionDialog(body);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1252,\n        columnNumber: 49\n      }\n    }, __jsx(EditIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1258,\n        columnNumber: 53\n      }\n    })), state.langCode === state.defaultLang && __jsx(IconButton, {\n      \"aria-label\": \"Delete item\",\n      color: \"primary\",\n      onClick: () => {\n        setDeletedIndex(index);\n        setAlert(true);\n        setAlertDialogType('section');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1261,\n        columnNumber: 93\n      }\n    }, __jsx(DeleteIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1270,\n        columnNumber: 57\n      }\n    })), __jsx(Container, {\n      style: {\n        pointerEvents: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1273,\n        columnNumber: 49\n      }\n    }, __jsx(Grid, {\n      container: true,\n      spacing: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1274,\n        columnNumber: 53\n      }\n    }, (body === null || body === void 0 ? void 0 : (_body$items4 = body.items) === null || _body$items4 === void 0 ? void 0 : _body$items4.length) > 0 && body.items.map((item, i) => {\n      var _state$assets3, _state$assets3$colors, _state$assets3$colors2;\n\n      return __jsx(Grid, {\n        item: true,\n        style: {\n          width: item.width + '%'\n        },\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1278,\n          columnNumber: 69\n        }\n      }, (item === null || item === void 0 ? void 0 : item.type) === 'image' && __jsx(Image, {\n        imageComponent: item,\n        sectionType: body === null || body === void 0 ? void 0 : body.type,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1284,\n          columnNumber: 77\n        }\n      }), (item === null || item === void 0 ? void 0 : item.type) === 'paragraph' && __jsx(\"div\", {\n        style: {\n          backgroundColor: item !== null && item !== void 0 && item.useBgColor ? state === null || state === void 0 ? void 0 : (_state$assets3 = state.assets) === null || _state$assets3 === void 0 ? void 0 : (_state$assets3$colors = _state$assets3.colors) === null || _state$assets3$colors === void 0 ? void 0 : (_state$assets3$colors2 = _state$assets3$colors.message) === null || _state$assets3$colors2 === void 0 ? void 0 : _state$assets3$colors2.main : 'white',\n          height: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1291,\n          columnNumber: 77\n        }\n      }, __jsx(Paragraph, {\n        paragraph: item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1294,\n          columnNumber: 81\n        }\n      })));\n    }))));\n  })), (state === null || state === void 0 ? void 0 : (_state$email16 = state.email) === null || _state$email16 === void 0 ? void 0 : (_state$email16$body = _state$email16.body) === null || _state$email16$body === void 0 ? void 0 : _state$email16$body.length) > 0 && __jsx(Divider, {\n    style: {\n      marginTop: 16\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1309,\n      columnNumber: 67\n    }\n  }), __jsx(Typography, {\n    component: 'div',\n    style: {\n      minHeight: state.email.body.length === 0 ? 500 : 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1311,\n      columnNumber: 29\n    }\n  }, __jsx(\"h3\", {\n    className: (state === null || state === void 0 ? void 0 : (_state$email17 = state.email) === null || _state$email17 === void 0 ? void 0 : (_state$email17$body = _state$email17.body) === null || _state$email17$body === void 0 ? void 0 : _state$email17$body.length) === 0 ? classes.centreContent : classes.centerSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1317,\n      columnNumber: 33\n    }\n  }, __jsx(\"span\", {\n    className: classes.cursorPointer,\n    onClick: () => {\n      setDialogType('add-section');\n      setDialogTitle('Add Section');\n      setRenderDialog(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1318,\n      columnNumber: 37\n    }\n  }, \"Click to define Section\")), (state === null || state === void 0 ? void 0 : (_state$email18 = state.email) === null || _state$email18 === void 0 ? void 0 : (_state$email18$body = _state$email18.body) === null || _state$email18$body === void 0 ? void 0 : _state$email18$body.length) === 0 && __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1329,\n      columnNumber: 73\n    }\n  })), __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1332,\n      columnNumber: 29\n    }\n  }), __jsx(Typography, {\n    component: 'div',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1333,\n      columnNumber: 29\n    }\n  }, Object.keys(state.email.footer).length > 0 ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1335,\n      columnNumber: 82\n    }\n  }, __jsx(IconButton, {\n    \"aria-label\": \"Delete item\",\n    color: \"primary\",\n    onClick: () => {\n      setDialogType('edit-footer');\n      setDialogTitle('Edit Footer');\n      setRenderDialog(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1336,\n      columnNumber: 45\n    }\n  }, __jsx(EditIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1345,\n      columnNumber: 49\n    }\n  })), state.langCode === state.defaultLang && __jsx(IconButton, {\n    \"aria-label\": \"Delete item\",\n    color: \"primary\",\n    onClick: () => {\n      setAlert(true);\n      setAlertDialogType('footer');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1349,\n      columnNumber: 49\n    }\n  }, __jsx(DeleteIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1357,\n      columnNumber: 53\n    }\n  })), __jsx(\"div\", {\n    style: {\n      pointerEvents: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1360,\n      columnNumber: 45\n    }\n  }, state.langCode === state.defaultLang && __jsx(EmailFooter, {\n    items: state.email.footer.items,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1363,\n      columnNumber: 53\n    }\n  }), state.langCode && state.langCode !== state.defaultLang && (state === null || state === void 0 ? void 0 : (_state$langsFile10 = state.langsFile) === null || _state$langsFile10 === void 0 ? void 0 : (_state$langsFile10$fo = _state$langsFile10.footer) === null || _state$langsFile10$fo === void 0 ? void 0 : (_state$langsFile10$fo2 = _state$langsFile10$fo[state.langCode]) === null || _state$langsFile10$fo2 === void 0 ? void 0 : _state$langsFile10$fo2.items) && __jsx(EmailFooter, {\n    items: state.langsFile.footer[state.langCode].items,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1368,\n      columnNumber: 53\n    }\n  }))) : __jsx(\"h3\", {\n    className: classes.centreContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1372,\n      columnNumber: 41\n    }\n  }, __jsx(\"span\", {\n    className: classes.cursorPointer,\n    onClick: () => {\n      setDialogType('add-footer');\n      setDialogTitle('Add Footer');\n      setRenderDialog(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1373,\n      columnNumber: 45\n    }\n  }, \"Click to define Footer\"))))), isRenderDialog && __jsx(EmailGenericDialog, {\n    type: dialogType,\n    title: dialogTitle,\n    resetRenderDialog: resetRenderDialog,\n    onSelectHeader: handleSelectedHeader,\n    onSelectFooter: handleSelectedFooter,\n    onAddEmailSection: handleAddEmailSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1389,\n      columnNumber: 35\n    }\n  }), editSectionDialog, isAlert && __jsx(AlertDialog, {\n    handleDelete: handleDelete,\n    alertDialogType: alertDialogType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1402,\n      columnNumber: 28\n    }\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    state: state.formReducer.pageBuilder\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value)),\n  pushToState: (stateType, stateName, value) => dispatch(pushToState(stateType, stateName, value)),\n  deleteFromState: (stateType, stateName, value) => dispatch(deleteFromState(stateType, stateName, value)),\n  updateState: (stateType, stateName, value) => dispatch(updateState(stateType, stateName, value))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmailDesign);","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/steps/email/EmailDesign.js"],"names":["React","useContext","useEffect","useState","Container","Grid","Box","Typography","Divider","makeStyles","DeleteIcon","IconButton","EditIcon","Select","MenuItem","FormControl","InputLabel","EmailGenericDialog","EmailHeader","EmailFooter","EditEmailSection","Image","Paragraph","LoadingSpinner","AlertDialog","connect","setToState","pushToState","deleteFromState","updateState","toast","DELETE_SUCCESS","emailWidth","useRouter","WebCmsGlobal","axios","FIELDTYPE","isErrorMsg","OREST_ENDPOINT","OREST_UPLOAD","REQUEST_METHOD_CONST","Insert","ViewList","LanguageDropdown","now","defaultProps","bgcolor","border","borderColor","useStyles","centreContent","display","justifyContent","marginTop","cursorPointer","cursor","color","disabledEvent","pointerEvents","opacity","centerSection","textAlign","EmailDesign","props","state","classes","isRenderDialog","setRenderDialog","dialogType","setDialogType","dialogTitle","setDialogTitle","editSectionDialog","setEditSectionDialog","isAlert","setAlert","alertDialogType","setAlertDialogType","deletedIndex","setDeletedIndex","isDeleting","setIsDeleting","isLoaded","setIsLoaded","router","companyId","query","companyID","GENERAL_SETTINGS","token","authToken","isTemplate","previousStep","handleGenerateNewTemplate","code","emailOnly","masterid","Object","keys","email","header","length","footer","body","apiUrl","OREST_URL","endpoint","RAFILE","params","hotelrefno","Number","then","res","status","data","JSON","parse","Buffer","from","filedata","toString","langFile","retErr","error","errorMsg","position","POSITION","TOP_RIGHT","emailData","Promise","all","map","b","i","items","item","j","type","HCMITEMIMG_OPTION","url","SLASH","HCMITEMIMG","method","GET","headers","Authorization","gid","image","getData","FILEGET_OPTION","mid","file","downloadedFile","fileDownload","responseType","blob","Blob","imageUrl","STATIC_URL","replace","m","imageType","split","fileObject","File","lastModified","Date","HCMITEMINS","POST","itemid","hcmItemId","imgtype","IMG","title","description","cta","orderno","imageInsert","handleInsertData","binaryData","push","formData","FormData","append","name","uploadOptions","orsactive","uploadedFile","service","width","id","HCMITEMTXTPAR_OPTION","HCMITEMTXTPAR","paragraph","HCMITEM_OPTION","HCMITEMTXT","hcmitem","itemtext","hcmItemTxtPar","res2","option","resv","response","catch","console","log","languages","forEach","lang","langsFile","toLowerCase","isExist","translatedLanguages","find","x","resetRenderDialog","handleSelectedHeader","langCode","defaultLang","updatedlangsFile","handleSelectedFooter","handleAddEmailSection","order","res1","useBgColor","updatedEmailObj","splice","handleDeleteHeader","success","handleDeleteFooter","handleDeleteEmailSection","index","req","component","REQUEST_OPTIONS_DELETE_HCMITEMIMG","DELETE","deleteImage","REQUEST_OPTIONS_DELETE_HCMITEMTXTPAR","paragrapgh","deleteParagraph","isSuccess","r","updatedOtherLangs","onEditSection","newSection","updatedBody","updatedLangs","updatedItems","handleEditSectionDialog","section","otherLangSection","handleDelete","isDelete","handleLanguageChange","rowItem","rowIndex","value","link","colItem","colIndex","val","indexOf","subItem","sectionIndex","itemIndex","REQUEST_OPTION_GET_IMAGE","img","getImageData","REQUEST_OPTION_GET_TEXT","text","getTextData","marginRight","fontSize","e","target","langId","height","overflow","backgroundColor","assets","colors","primary","main","tpl","message","minHeight","mapStateToProps","formReducer","pageBuilder","mapDispatchToProps","dispatch","stateType","stateName"],"mappings":"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","sourcesContent":["//react imports\nimport React, {useContext, useEffect, useState} from 'react';\n//material ui imports\nimport Container  from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\n//custom imports\nimport EmailGenericDialog from \"../../components/email/generic/EmailGenericDialog\";\nimport EmailHeader from \"../../components/email/header/EmailHeader\";\nimport EmailFooter from \"../../components/email/footer/EmailFooter\";\nimport EditEmailSection from \"../../components/email/body/EditEmailSection\";\nimport Image from \"../../components/page/sections/image/Image\";\nimport Paragraph from \"../../components/page/sections/paragraph/Paragraph\";\nimport LoadingSpinner from \"../../../../LoadingSpinner\";\nimport {AlertDialog} from \"../../components/alert\";\n//redux imports\nimport { connect } from 'react-redux';\nimport {setToState, pushToState, deleteFromState, updateState} from \"../../../../../state/actions\";\n//toast import\nimport {toast} from \"react-toastify\";\n//constants and config imports\nimport {DELETE_SUCCESS, emailWidth} from \"../../constants\";\nimport {useRouter} from \"next/router\";\nimport WebCmsGlobal from \"../../../../webcms-global\";\nimport axios from \"axios\";\nimport {\n    FIELDTYPE,\n    isErrorMsg,\n    OREST_ENDPOINT,\n    OREST_UPLOAD,\n    REQUEST_METHOD_CONST\n} from \"../../../../../model/orest/constants\";\nimport {Insert, ViewList} from \"@webcms/orest\";\nimport LanguageDropdown from \"../../components/language/LanguageDropdown\";\nimport {now} from \"moment\";\n\n\nconst defaultProps = {\n    bgcolor: 'background.paper',\n    border: 1,\n    borderColor: 'silver',\n};\n\nconst useStyles = makeStyles(() => ({\n    centreContent: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginTop: 8\n    },\n    cursorPointer: {\n        cursor: 'pointer',\n        color: 'silver'\n    },\n    disabledEvent: {\n        pointerEvents: 'none',\n        opacity: 0.5,\n    },\n    centerSection: {\n        display: \"block\",\n        marginTop: 8,\n        textAlign: \"center\"\n    }\n}));\n\nconst EmailDesign = (props) => {\n\n    const {\n        state,\n        setToState,\n        pushToState,\n        deleteFromState,\n        updateState\n    } = props;\n\n    const classes = useStyles();\n    //local states\n    const [isRenderDialog, setRenderDialog] = useState(false);\n    const [dialogType, setDialogType] = useState('');\n    const [dialogTitle, setDialogTitle] = useState('');\n    const [editSectionDialog, setEditSectionDialog] = useState('');\n    const [isAlert, setAlert] = React.useState(false);\n    const [alertDialogType, setAlertDialogType] = useState('');\n    const [deletedIndex, setDeletedIndex] = useState('');\n    const [isDeleting, setIsDeleting] = useState(false);\n    const [isLoaded, setIsLoaded] = useState(true);\n\n    const router = useRouter();\n    const companyId = router.query.companyID\n    const { GENERAL_SETTINGS, token } = useContext(WebCmsGlobal);\n    const authToken = token || router.query.authToken;\n\n    useEffect(() => {\n        if (state?.isTemplate) {\n            state?.previousStep === 0 ?\n                handleGenerateNewTemplate(`code::${state.code},filetype::PB-EMAIL`) : null\n        } else {\n            if (router.query.emailOnly) {\n                if (router.query.masterid) {\n                    if (!Object.keys(state?.email?.header).length  && !Object.keys(state?.email?.footer).length && !state?.email?.body?.length) {\n                        setIsLoaded(false);\n                        ViewList({\n                            apiUrl: GENERAL_SETTINGS.OREST_URL,\n                            endpoint: OREST_ENDPOINT.RAFILE,\n                            token: authToken,\n                            params: {\n                                hotelrefno: Number(companyId),\n                                query: `masterid::${router.query.masterid},filetype::PB-EMAIL`,\n                            }\n                        }).then(res => {\n                            if (res.status === 200) {\n                                if (res?.data?.data?.length > 0) {\n                                    // setTimeout(() => {\n                                    //     console.log(res.data.data[0].langcode.toLowerCase())\n                                    //     updateState('pageBuilder', 'langId', res.data.data[0].langid);\n                                    //     updateState('pageBuilder', 'langCode', res.data.data[0].langcode.toLowerCase());\n                                    //     updateState('pageBuilder', 'defaultLangId', res.data.data[0].langid);\n                                    //     updateState('pageBuilder', 'defaultLang', res.data.data[0].langcode.toLowerCase());\n                                    //     setIsLoaded(true);\n                                    // }, 300);\n                                    setIsLoaded(true);\n                                    const email = JSON.parse(Buffer.from(res.data.data[0].filedata, 'base64').toString('utf-8'));\n                                    updateState('pageBuilder', 'email', email);\n                                    updateState('pageBuilder', 'code', res.data.data[0].code);\n                                    ViewList({\n                                        apiUrl: GENERAL_SETTINGS.OREST_URL,\n                                        endpoint: OREST_ENDPOINT.RAFILE,\n                                        token: authToken,\n                                        params: {\n                                            hotelrefno: Number(companyId),\n                                            query: `filetype:LANG.EMAIL,masterid::${router.query.masterid}`,\n                                        }\n                                    }).then(res => {\n                                        if (res.status === 200 && res.data && res.data.data.length > 0) {\n                                            const langFile = JSON.parse(Buffer.from(res.data.data[0].filedata, 'base64').toString('utf-8'));\n                                            updateState('pageBuilder', 'langsFile', langFile);\n                                        }\n                                    })\n                                } else {\n                                    setIsLoaded(true);\n                                }\n                            } else {\n                                setIsLoaded(true);\n                                const retErr = isErrorMsg(res);\n                                toast.error(retErr.errorMsg, {\n                                    position: toast.POSITION.TOP_RIGHT\n                                });\n                            }\n                        })\n                    }\n                }\n            }\n        }\n    }, []);\n\n    const handleGenerateNewTemplate = async (query) => {\n        setIsLoaded(false);\n        ViewList({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.RAFILE,\n            token: authToken,\n            params: {\n                hotelrefno: Number(companyId),\n                query: query,\n            }\n        }).then(res => {\n            if (res?.status === 200) {\n                if (res?.data?.data?.length > 0) {\n                    const emailData = JSON.parse(Buffer.from(res.data.data[0].filedata, 'base64').toString('utf-8'));\n                    setToState('pageBuilder', ['email', 'header'], emailData?.header);\n                    setToState('pageBuilder', ['email', 'footer'], emailData?.footer);\n                    const body = emailData?.body;\n                    Promise.all(body.map((b, i) => {\n                        Promise.all(b.items.map(async (item, j) => {\n                            if (item.type === 'image') {\n                                const HCMITEMIMG_OPTION = {\n                                    url:\n                                        GENERAL_SETTINGS.OREST_URL +\n                                        OREST_ENDPOINT.SLASH +\n                                        OREST_ENDPOINT.HCMITEMIMG +\n                                        OREST_ENDPOINT.SLASH +\n                                        'view/list',\n                                    method: REQUEST_METHOD_CONST.GET,\n                                    headers: {\n                                        Authorization: `Bearer ${authToken}`,\n                                        'Content-Type': 'application/json',\n                                    },\n                                    params: {\n                                        hotelrefno: Number(companyId),\n                                        query: `gid::${item.gid}`\n                                    },\n                                }\n                                const image = await getData(HCMITEMIMG_OPTION);\n                                if (image?.length > 0) {\n                                    const FILEGET_OPTION = {\n                                        url:\n                                            GENERAL_SETTINGS.OREST_URL +\n                                            OREST_ENDPOINT.SLASH +\n                                            OREST_ENDPOINT.RAFILE +\n                                            OREST_ENDPOINT.SLASH +\n                                            'view/list',\n                                        method: REQUEST_METHOD_CONST.GET,\n                                        headers: {\n                                            Authorization: `Bearer ${authToken}`,\n                                            'Content-Type': '0000510',\n                                        },\n                                        params: {\n                                            hotelrefno: Number(companyId),\n                                            query: `masterid::${image[0].mid}`\n                                        },\n                                    }\n                                    const file = await getData(FILEGET_OPTION);\n                                    if (file.length > 0) {\n                                        const downloadedFile = await fileDownload({\n                                            url: `${GENERAL_SETTINGS.OREST_URL}/tools/file/download`,\n                                            headers: {\n                                                \"Authorization\": `Bearer ${authToken}`\n                                            },\n                                            method: 'get',\n                                            responseType: 'arraybuffer',\n                                            params: {\n                                                gid: file[0]?.gid,\n                                                hotelrefno: companyId\n                                            },\n                                        });\n                                        let blob = new Blob([downloadedFile?.data], { type: downloadedFile?.data?.type });\n                                        const imageUrl = GENERAL_SETTINGS.STATIC_URL + file[0]?.url.replace('/var/otello', '').replace('/public', '');\n                                        const m = imageUrl.replace(/^.*[\\\\\\/]/, '')\n                                        const imageType = m.split('.')[1];\n                                        const fileObject = new File([blob], m, {\n                                            lastModified: new Date(now()),\n                                            type: 'image/' + imageType\n                                        });\n                                        const HCMITEMINS = {\n                                            url:\n                                                GENERAL_SETTINGS.OREST_URL +\n                                                OREST_ENDPOINT.SLASH +\n                                                OREST_ENDPOINT.HCMITEMIMG +\n                                                OREST_ENDPOINT.SLASH +\n                                                'ins',\n                                            method: REQUEST_METHOD_CONST.POST,\n                                            headers: {\n                                                Authorization: `Bearer ${authToken}`,\n                                                'Content-Type': 'application/json',\n                                            },\n                                            data: {\n                                                itemid: state.hcmItemId,\n                                                imgtype: FIELDTYPE.IMG,\n                                                title: image[0]?.title,\n                                                description: image[0]?.description,\n                                                cta: image[0]?.cta,\n                                                orderno: 1,\n                                                hotelrefno: Number(companyId)\n                                            },\n                                        }\n                                        const imageInsert = await handleInsertData(HCMITEMINS);\n                                        if (imageInsert) {\n                                            let binaryData = [];\n                                            binaryData.push(fileObject);\n                                            let formData = new FormData();\n                                            formData.append('file', new Blob(binaryData, {type: fileObject.type}), fileObject.name);\n                                            const uploadOptions = {\n                                                url: GENERAL_SETTINGS.OREST_URL + OREST_ENDPOINT.SLASH + OREST_ENDPOINT.RAFILE + OREST_UPLOAD,\n                                                method: 'post',\n                                                headers: {\n                                                    \"Authorization\": `Bearer ${authToken}`,\n                                                    'Content-Type': 'multipart/form-data',\n                                                },\n                                                params: {\n                                                    orsactive: true,\n                                                    masterid: imageInsert?.mid,\n                                                    hotelrefno: companyId\n                                                },\n                                                data: formData,\n                                            }\n                                            const uploadedFile = await handleInsertData(uploadOptions);\n                                            if (i === body.length - 1)\n                                                setIsLoaded(true)\n                                            if (uploadedFile?.url) {\n                                                b.items[j] = {\n                                                    service: \"hcmitemimg\",\n                                                    type: \"image\",\n                                                    gid: imageInsert?.gid,\n                                                    width: item?.width,\n                                                    id: item?.id\n                                                }\n                                            } else {\n                                                toast.error('Upload failed', {position: toast.POSITION.TOP_RIGHT})\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            if (item.type === 'paragraph') {\n                                const HCMITEMTXTPAR_OPTION = {\n                                    url:\n                                        GENERAL_SETTINGS.OREST_URL +\n                                        OREST_ENDPOINT.SLASH +\n                                        OREST_ENDPOINT.HCMITEMTXTPAR +\n                                        OREST_ENDPOINT.SLASH +\n                                        'view/list',\n                                    method: REQUEST_METHOD_CONST.GET,\n                                    headers: {\n                                        Authorization: `Bearer ${authToken}`,\n                                        'Content-Type': 'application/json',\n                                    },\n                                    params: {\n                                        hotelrefno: Number(companyId),\n                                        query: `gid::${item.gid}`\n                                    },\n                                }\n                                const paragraph = await getData(HCMITEMTXTPAR_OPTION);\n                                if (paragraph?.length > 0) {\n                                    const HCMITEM_OPTION = {\n                                        url:\n                                            GENERAL_SETTINGS.OREST_URL +\n                                            OREST_ENDPOINT.SLASH +\n                                            OREST_ENDPOINT.HCMITEMTXT +\n                                            OREST_ENDPOINT.SLASH +\n                                            'ins',\n                                        method: REQUEST_METHOD_CONST.POST,\n                                        headers: {\n                                            Authorization: `Bearer ${authToken}`,\n                                            'Content-Type': 'application/json',\n                                        },\n                                        data: {\n                                            itemid: state?.hcmItemId,\n                                            hotelrefno: Number(companyId)\n                                        },\n                                    }\n                                    const hcmitem = await handleInsertData(HCMITEM_OPTION);\n                                    const HCMITEMTXTPAR_OPTION = {\n                                        url:\n                                            GENERAL_SETTINGS.OREST_URL +\n                                            OREST_ENDPOINT.SLASH +\n                                            OREST_ENDPOINT.HCMITEMTXTPAR +\n                                            OREST_ENDPOINT.SLASH +\n                                            'ins',\n                                        method: REQUEST_METHOD_CONST.POST,\n                                        headers: {\n                                            Authorization: `Bearer ${authToken}`,\n                                            'Content-Type': 'application/json',\n                                        },\n                                        data: {\n                                            itemid: hcmitem?.id,\n                                            itemtext: paragraph[0]?.itemtext,\n                                            hotelrefno: Number(companyId)\n                                        },\n                                    }\n                                    const hcmItemTxtPar = await handleInsertData(HCMITEMTXTPAR_OPTION);\n                                    if (i === body.length - 1)\n                                        setIsLoaded(true)\n                                    if (hcmItemTxtPar) {\n                                        b.items[j] = {\n                                            service: \"hcmitemtxtpar\",\n                                            type: \"paragraph\",\n                                            gid: hcmItemTxtPar?.gid,\n                                            width: item?.width,\n                                            id: item?.id\n                                        }\n                                    }\n                                }\n                            }\n                        }));\n                    }));\n                    setToState('pageBuilder', ['email', 'body'], body);\n                    ViewList({\n                        apiUrl: GENERAL_SETTINGS.OREST_URL,\n                        endpoint: OREST_ENDPOINT.RAFILE,\n                        token: authToken,\n                        params: {\n                            hotelrefno: Number(companyId),\n                            query: `filetype:LANG.EMAIL,refid::${res.data.data[0].id}`,\n                        }\n                    }).then(res2 => {\n                        if (res2.status === 200 && res2?.data?.data?.length > 0) {\n                            const langFile = JSON.parse(Buffer.from(res2.data.data[0].filedata, 'base64').toString('utf-8'));\n                            updateState('pageBuilder', 'langsFile', langFile);\n                        }\n                    })\n                }\n            } else {\n                const retErr = isErrorMsg(res);\n                toast.error(retErr.errorMsg, {\n                    position: toast.POSITION.TOP_RIGHT\n                });\n            }\n        });\n    }\n\n    const fileDownload = (option) => {\n        return new Promise(async (resv) => {\n            return await axios(option)\n                .then(async (response) => {\n                    if (response.status === 200) {\n                        resv(response);\n                    } else {\n                        const retErr = isErrorMsg(response);\n                        toast.error(retErr.errorMsg, {\n                            position: toast.POSITION.TOP_RIGHT\n                        });\n                    }\n                })\n                .catch((error) => {\n                    console.log(error)\n                    resv(error.response || { status: 0 })\n                })\n        })\n    }\n\n    const getData = (option) => {\n        return new Promise(async (resv) => {\n            return await axios(option)\n                .then(async (response) => {\n                    if (response.status === 200) {\n                        if (response?.data?.data?.length > 0)\n                            resv(response.data.data)\n                    } else {\n                        const retErr = isErrorMsg(response);\n                        toast.error(retErr.errorMsg, {\n                            position: toast.POSITION.TOP_RIGHT\n                        });\n                    }\n                })\n                .catch((error) => {\n                    console.log(error)\n                    resv(error.response || { status: 0 })\n                })\n        })\n    }\n\n    const handleInsertData = (option) => {\n        return new Promise(async (resv) => {\n            return await axios(option)\n                .then(async (response) => {\n                    if (response.status === 200) {\n                        if (response?.data?.data)\n                            resv(response.data.data)\n                    } else {\n                        const retErr = isErrorMsg(response);\n                        toast.error(retErr.errorMsg, {\n                            position: toast.POSITION.TOP_RIGHT\n                        });\n                    }\n                })\n                .catch((error) => {\n                    console.log(error)\n                    resv(error.response || { status: 0 })\n                })\n        })\n    }\n\n    useEffect(() => {\n        state?.languages?.length > 0 && state.languages.forEach(lang => {\n            if (state?.langsFile?.header?.[lang?.code?.toLowerCase()] &&\n                state?.langsFile?.body?.[lang?.code?.toLowerCase()] &&\n                state?.langsFile?.footer?.[lang?.code?.toLowerCase()]) {\n                const isExist = state?.translatedLanguages?.find(x => x.id === lang.id);\n                !isExist ?  pushToState('pageBuilder', ['translatedLanguages'], [lang]) : null\n            }\n        })\n    }, [state.langsFile]);\n\n    const resetRenderDialog = () => {\n        setRenderDialog(false);\n    }\n\n    const handleSelectedHeader = (header) => { // saving header into redux\n        if (state.langCode === state.defaultLang) {\n            setToState('pageBuilder', ['email', 'header'], header);\n        } else {\n            const updatedlangsFile = {...state.langsFile};\n            if (updatedlangsFile.header[state.langCode]) {\n                setToState('pageBuilder', ['langsFile', 'header', state.langCode], header);\n            }\n        }\n    }\n\n    const handleSelectedFooter = (footer) => { // saving footer into redux\n        if (state.langCode === state.defaultLang) {\n            setToState('pageBuilder', ['email', 'footer'], footer);\n        } else {\n            const updatedlangsFile = {...state.langsFile};\n            if (updatedlangsFile.footer[state.langCode]) {\n                setToState('pageBuilder', ['langsFile', 'footer', state.langCode], footer);\n            }\n        }\n    }\n\n    const handleAddEmailSection = (body, order) => {\n        if (body && body.items && body.items.length > 0) {\n            if (body.items[body.items.length - 1].type === 'paragraph') {\n                Insert({ // insert paragraph into hcmitemtxt\n                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                    endpoint: OREST_ENDPOINT.HCMITEMTXT,\n                    token: authToken,\n                    data: {\n                        itemid: state.hcmItemId,\n                        hotelrefno: Number(companyId)\n                    },\n                }).then(res => {\n                    if(res.status === 200 && res.data.data) {\n                        Insert({ // insert textpar\n                            apiUrl: GENERAL_SETTINGS.OREST_URL,\n                            endpoint: OREST_ENDPOINT.HCMITEMTXTPAR,\n                            token: authToken,\n                            data: {\n                                itemid: res.data.data.id,\n                                itemtext: body.items[body.items.length - 1].service,\n                                hotelrefno: Number(companyId)\n                            },\n                        }).then(res1 => {\n                            if (res1?.status === 200 && res1?.data?.data) {\n                                body.items[body.items.length - 1] = {\n                                    service: \"hcmitemtxtpar\",\n                                    type: \"paragraph\",\n                                    gid: res1.data.data.gid,\n                                    width: body?.items[body.items.length - 1]?.width,\n                                    id: `item-${body?.items?.length}`,\n                                    useBgColor: body?.items[body.items.length - 1]?.useBgColor\n                                }\n                                const updatedEmailObj = {...state?.email};\n                                updatedEmailObj?.body?.splice(order - 1, 0, body);\n                                updateState('pageBuilder', 'email', updatedEmailObj);\n                            }\n                        })\n                    }\n                });\n            } else {\n                const updatedEmailObj = {...state?.email};\n                updatedEmailObj?.body?.splice(order - 1, 0, body);\n                updateState('pageBuilder', 'email', updatedEmailObj);\n            }\n        }\n    }\n\n    const handleDeleteHeader = () => { // deleting header from redux\n        setToState('pageBuilder', ['email', 'header'], {});\n        setToState('pageBuilder', ['langsFile', 'header'], {});\n        toast.success(DELETE_SUCCESS, {\n            position: toast.POSITION.TOP_RIGHT\n        });\n    }\n\n    const handleDeleteFooter = () => { // deleting footer from redux\n        setToState('pageBuilder', ['email', 'footer'], {});\n        setToState('pageBuilder', ['langsFile', 'footer'], {});\n        toast.success(DELETE_SUCCESS, {\n            position: toast.POSITION.TOP_RIGHT\n        });\n    }\n\n    const handleDeleteEmailSection = async (index) => { // deleting body from redux\n        setIsDeleting(true);\n        const body = state.email.body[index];\n        let req = []\n        for (let component of body.items) {\n            if (component.type === 'image') {\n                const REQUEST_OPTIONS_DELETE_HCMITEMIMG = {\n                    url:\n                        GENERAL_SETTINGS.OREST_URL +\n                        OREST_ENDPOINT.SLASH +\n                        OREST_ENDPOINT.HCMITEMIMG +\n                        OREST_ENDPOINT.SLASH +\n                        'del/' +\n                        component.gid,\n                    method: REQUEST_METHOD_CONST.DELETE,\n                    headers: {\n                        Authorization: `Bearer ${authToken}`,\n                        'Content-Type': 'application/json',\n                    },\n                    params: {\n                        hotelrefno: Number(companyId),\n                    },\n                }\n                const image = await deleteImage(REQUEST_OPTIONS_DELETE_HCMITEMIMG)\n                req.push(image)\n            }\n            if (component.type === 'paragraph') {\n                const REQUEST_OPTIONS_DELETE_HCMITEMTXTPAR = {\n                    url:\n                        GENERAL_SETTINGS.OREST_URL +\n                        OREST_ENDPOINT.SLASH +\n                        OREST_ENDPOINT.HCMITEMTXTPAR +\n                        OREST_ENDPOINT.SLASH +\n                        'del/' +\n                        component.gid,\n                    method: REQUEST_METHOD_CONST.DELETE,\n                    headers: {\n                        Authorization: `Bearer ${authToken}`,\n                        'Content-Type': 'application/json',\n                    },\n                    params: {\n                        hotelrefno: Number(companyId),\n                    },\n                }\n                const paragrapgh = await deleteParagraph(REQUEST_OPTIONS_DELETE_HCMITEMTXTPAR)\n                req.push(paragrapgh)\n            }\n        }\n        await Promise.all(req).then(async (res) => {\n            let isSuccess = true\n            await res.map((r) => {\n                if (r.status !== 200) {\n                    isSuccess = false\n                }\n            });\n            setIsDeleting(false);\n            if (isSuccess) {\n                deleteFromState('pageBuilder', ['email', 'body'], [index, 1]);\n                const updatedOtherLangs = {...state.langsFile.body};\n                for (const lang in updatedOtherLangs ) {\n                    if (updatedOtherLangs[lang].items && updatedOtherLangs[lang].items.length > 0) {\n                        updatedOtherLangs[lang].items.splice(index, 1);\n                    }\n                }\n                setToState('pageBuilder', ['langsFile', 'body'], updatedOtherLangs);\n                toast.success(DELETE_SUCCESS, {\n                    position: toast.POSITION.TOP_RIGHT,\n                })\n            } else {\n                toast.error('Something went wrong', {\n                    position: toast.POSITION.TOP_RIGHT,\n                })\n            }\n        })\n    }\n\n    const deleteImage = async (header) => { //delete image from hcmitem img\n        return new Promise(async (resv) => {\n            return await axios(header)\n                .then(async (response) => {\n                    if (response.status === 200 && response.data && response.data.success) {\n                        resv(response)\n                    } else {\n                        const retErr = isErrorMsg(response);\n                        toast.error(retErr.errorMsg, {\n                            position: toast.POSITION.TOP_RIGHT\n                        });\n                    }\n                })\n                .catch((error) => {\n                    console.log(error)\n                    resv(error.response || { status: 0 })\n                })\n        })\n    }\n\n    const deleteParagraph = async (header) => { // delete text from hcmitemtxtpar\n        return new Promise(async (resv) => {\n            return await axios(header)\n                .then(async (response) => {\n                    if (response.status === 200 && response.data && response.data.success) {\n                        resv(response)\n                    } else {\n                        const retErr = isErrorMsg(response);\n                        toast.error(retErr.errorMsg, {\n                            position: toast.POSITION.TOP_RIGHT\n                        });\n                    }\n                })\n                .catch((error) => {\n                    console.log(error)\n                    resv(error.response || { status: 0 })\n                })\n        })\n    }\n\n    const onEditSection = (newSection, index, order) => {\n        if (state.langCode === state.defaultLang) {\n            let updatedBody = [...state.email.body];\n            updatedBody.splice(index, 1);\n            updatedBody.splice(order - 1, 0, newSection);\n            setToState('pageBuilder', ['email', 'body'], updatedBody);\n        } else {\n            if (Object.keys(state.langsFile.body[state.langCode]).length > 0) {\n                const updatedLangs = {...state.langsFile};\n                const updatedItems = state.langsFile.body[state.langCode].items;\n                const items = {\n                    items: newSection.items\n                };\n                updatedItems[index] = items;\n                updatedLangs.body[state.langCode].items = updatedItems;\n                updateState('pageBuilder', 'langsFile', updatedLangs);\n            }\n        }\n    }\n\n    const handleEditSectionDialog = (section, otherLangSection) => {\n        setEditSectionDialog(\n            <EditEmailSection\n                section={section}\n                onEditSection={onEditSection}\n                dialogTitle=\"Edit Section\"\n                isDialogOpen={true}\n                resetRender={() => setEditSectionDialog('')}\n                otherLangSection={otherLangSection}\n            />\n        )\n    }\n\n    const handleDelete = (type, isDelete) => {\n        if (isDelete) {\n            switch (type) {\n                case 'header':\n                    handleDeleteHeader();\n                    break;\n                case 'footer':\n                    handleDeleteFooter();\n                    break;\n                case 'section':\n                    handleDeleteEmailSection(deletedIndex);\n                    break;\n            }\n        }\n        setAlert(false);\n    }\n\n    const handleLanguageChange = async (lang) => {\n        const code = lang?.code.toLowerCase();\n        updateState('pageBuilder', 'langCode', code);\n        updateState('pageBuilder', 'langId', lang?.id);\n        const updatedlangsFile = {...state.langsFile};\n        if (code !== state.defaultLang) {\n            !state?.langsFile?.header ? updatedlangsFile['header'] = {} : null;\n            !state?.langsFile?.footer ? updatedlangsFile['footer'] = {} : null;\n            !state?.langsFile?.body ? updatedlangsFile['body'] = {} : null\n\n            if (!updatedlangsFile.header[code]) {\n                if (state?.email?.header?.items?.length > 0) {\n                    updatedlangsFile.header[code] = {\n                        items: []\n                    }\n                    Promise.all(state.email.header.items.map((rowItem, rowIndex) => {\n                        if (rowItem.type === 'logo') {\n                            updatedlangsFile.header[code].items[rowIndex] = {\n                                value: rowItem.value.link\n                            }\n                        }\n                        if (rowItem.type === 'link') {\n                            updatedlangsFile.header[code].items[rowIndex] = {\n                                value: []\n                            }\n                            rowItem.value.map((colItem) => {\n                                updatedlangsFile.header[code].items[rowIndex].value.push({\n                                    value: colItem.title\n                                });\n                            });\n                        }\n                        if (rowItem.type === 'social-link') {\n                            updatedlangsFile.header[code].items[rowIndex] = {\n                                value: []\n                            }\n                            rowItem.value.map((colItem) => {\n                                updatedlangsFile.header[code].items[rowIndex].value.push({\n                                    value: colItem.title\n                                });\n                            });\n                        }\n                    }))\n                    updateState('pageBuilder', 'langsFile', updatedlangsFile);\n                }\n            } else {\n                if (state?.email?.header?.items?.length > 0) {\n                    if (state?.email?.header?.items?.length > updatedlangsFile?.header[code]?.items?.length) {\n                        for (let i = updatedlangsFile.header[code].items.length; i < state.email.header.items.length; i++) {\n                            if (state.email.header.items[i].type === 'social-link' ||\n                                state.email.header.items[i].type === 'link') {\n                                updatedlangsFile.header[code].items.push({\n                                    value: []\n                                });\n                                for (let value of state.email.header.items[i].value) {\n                                    updatedlangsFile.header[code].items[i].value.push({\n                                        value: value.title\n                                    });\n                                }\n                            }\n                            if (state.email.header.items[i].type === 'logo') {\n                                updatedlangsFile.header[code].items.push({\n                                    value: state.email.header.items[i].value.value\n                                });\n                            }\n                        }\n                    }\n                    if (state?.email?.header?.items?.length < updatedlangsFile?.header[code]?.items?.length) {\n                        updatedlangsFile.header[code].items.length = state.email.header.items.length\n                    }\n                    Promise.all(state.email.header.items.map((item, index) => {\n                        if (item.type === 'social-link' || item.type === 'link') {\n                            if (item.value.length > updatedlangsFile.header[code].items[index].value.length) {\n                                for (let i = updatedlangsFile.header[code].items[index].value.length; i < item.value.length; i++) {\n                                    updatedlangsFile.header[code].items[index].value.push({\n                                        value: item.value[i].title\n                                    })\n                                }\n                            }\n                            if (item.value.length < updatedlangsFile.header[code].items[index].value.length) {\n                                updatedlangsFile.header[code].items[index].value.length = item.value.length\n                            }\n                        }\n                    }));\n                    updateState('pageBuilder', 'langsFile', updatedlangsFile);\n                }\n            }\n            // footer related conditions\n            if (!updatedlangsFile.footer[code]) {\n                if (state?.email?.footer?.items?.length > 0) {\n                    updatedlangsFile.footer[code] = {\n                        items: []\n                    }\n                    Promise.all(state.email.footer.items.map((rowItem, rowIndex) => {\n                        updatedlangsFile.footer[code].items[rowIndex] = {\n                            items: []\n                        }\n                        rowItem.items.map((colItem, colIndex) => {\n                            if (colItem.type === 'social-link' || colItem.type === 'link') {\n                                updatedlangsFile.footer[code].items[rowIndex].items[colIndex] = {\n                                    value: colItem.value.title\n                                }\n                            }\n                            if (colItem.type === 'image') {\n                                updatedlangsFile.footer[code].items[rowIndex].items[colIndex] = {\n                                    value: colItem.value.image\n                                }\n                            }\n                            if (colItem.type === 'heading' || colItem.type === 'paragraph') {\n                                updatedlangsFile.footer[code].items[rowIndex].items[colIndex] = {\n                                    value: colItem.value\n                                }\n                            }\n                            if (colItem.type === 'address') {\n                                updatedlangsFile.footer[code].items[rowIndex].items[colIndex] = {\n                                    value: []\n                                }\n                                colItem.value.map((val, i) => {\n                                    updatedlangsFile.footer[code].items[rowIndex].items[colIndex].value[i] = {\n                                        value: val.title\n                                    }\n                                })\n                            }\n                        })\n                    }))\n                    updateState('pageBuilder', 'langsFile', updatedlangsFile);\n                }\n            } else {\n                if (state?.email?.footer?.length > 0) {\n                    if (state.email.footer.items.length > updatedlangsFile.footer[code].items.length) {\n                        for (let i = updatedlangsFile.footer[code].items.length; i < state.email.footer.items.length; i++) {\n                            updatedlangsFile.footer[code].items.push({\n                                items: []\n                            });\n                            for (let item of state.email.footer.items[i].items) {\n                                const index = state.email.footer.items[i].items.indexOf(item);\n                                if (item.type === 'social-link' || item.type === 'link') {\n                                    updatedlangsFile.footer[code].items[i].items[index] = {\n                                        value: item.value.title\n                                    }\n                                }\n                                if (item.type === 'heading' || item.type === 'paragraph') {\n                                    updatedlangsFile.footer[code].items[i].items[index] = {\n                                        value: item.value\n                                    }\n                                }\n                                if (item.type === 'address') {\n                                    updatedlangsFile.footer[code].items[i].items[index] = {\n                                        value: []\n                                    }\n                                    item.value.map((val, j) => {\n                                        updatedlangsFile.footer[code].items[i].items[index].value[j] = {\n                                            value: val.title\n                                        }\n                                    })\n                                }\n                            }\n                        }\n                    }\n                    if (state.email.footer.items.length < updatedlangsFile.footer[code].items.length) {\n                        updatedlangsFile.footer[code].items.length = state.email.footer.items.length\n                    }\n                    if (state.email.footer.items.length === updatedlangsFile.footer[code].items.length) {\n                        Promise.all(state.email.footer.items.map((item, index) => {\n                            if (item.items.length > updatedlangsFile.footer[code].items[index].items.length) {\n                                for (let i = updatedlangsFile.footer[code].items[index].items.length; i < state.email.footer.items[index].items.length; i++) {\n                                    if (item.items[i].type === 'social-link' || item.items[i].type === 'link') {\n                                        updatedlangsFile.footer[code].items[index].items[i] = {\n                                            value: item.items[i].value.title\n                                        }\n                                    }\n                                    if (item.items[i].type === 'heading' || item.items[i].type === 'paragraph') {\n                                        updatedlangsFile.footer[code].items[index].items[i] = {\n                                            value: item.items[i].value\n                                        }\n                                    }\n                                    if (item.items[i].type === 'address') {\n                                        updatedlangsFile.footer[code].items[index].items[i] = {\n                                            value: []\n                                        }\n                                        item.items[i].value.map((val, j) => {\n                                            updatedlangsFile.footer[code].items[index].items[i].value[j] = {\n                                                value: val.title\n                                            }\n                                        })\n                                    }\n                                }\n                            }\n                            if (item.items.length < updatedlangsFile.footer[code].items[index].items.length) {\n                                updatedlangsFile.footer[code].items[index].items.length = item.items.length\n                            }\n                        }))\n                    }\n                    Promise.all(state.email.footer.items.map((item, index) => {\n                        item.items.length > 0 && item.items.map((subItem, i) => {\n                            if (subItem.type === 'address') {\n                                if (subItem.value.length > updatedlangsFile.footer[code].items[index].items[i].value.length) {\n                                    for (let j = updatedlangsFile.footer[code].items[index].items[i].value.length; j < subItem.value.length; j ++) {\n                                        updatedlangsFile.footer[code].items[index].items[i].value[j] = {\n                                            value: subItem.value[j].title\n                                        }\n                                    }\n                                }\n                                if (subItem.value.length < updatedlangsFile.footer[code].items[index].items[i].value.length) {\n                                    updatedlangsFile.footer[code].items[index].items[i].value.length = subItem.value.length;\n                                }\n                            }\n                        })\n                    }))\n                    updateState('pageBuilder', 'langsFile', updatedlangsFile);\n                }\n            }\n            //body related condition\n            if (!updatedlangsFile.body[code]) {\n                if (state.email.body.length > 0) {\n                    updatedlangsFile.body[code] = {\n                        items: []\n                    };\n                    for (let section of state.email.body) {\n                        const sectionIndex = state.email.body.indexOf(section);\n                        updatedlangsFile.body[code].items.push({\n                            items: []\n                        });\n                        for (let item of section.items) {\n                            const itemIndex = section.items.indexOf(item);\n                            if (item.type === 'image') {\n                                const REQUEST_OPTION_GET_IMAGE = {\n                                    url: GENERAL_SETTINGS.OREST_URL + '/' + OREST_ENDPOINT.HCMITEMIMG + '/view/list',\n                                    method: 'get',\n                                    headers: {\n                                        Authorization: `Bearer ${authToken}`,\n                                        'Content-Type': 'application/json',\n                                    },\n                                    params: {\n                                        hotelrefno: Number(companyId),\n                                        query: `gid:${item.gid}`,\n                                    },\n                                }\n                                const img = await getImageData(REQUEST_OPTION_GET_IMAGE);\n                                updatedlangsFile.body[code].items[sectionIndex].items[itemIndex] = {\n                                    image: {\n                                        title: img.title,\n                                        description: img.description\n                                    }\n                                }\n                            }\n                            if (item.type === 'paragraph') {\n                                const REQUEST_OPTION_GET_TEXT = {\n                                    url: GENERAL_SETTINGS.OREST_URL + '/' + OREST_ENDPOINT.HCMITEMTXTPAR + '/view/list',\n                                    method: 'get',\n                                    headers: {\n                                        Authorization: `Bearer ${authToken}`,\n                                        'Content-Type': 'application/json',\n                                    },\n                                    params: {\n                                        hotelrefno: Number(companyId),\n                                        query: `gid:${item.gid}`,\n                                    },\n                                }\n                                const text = await getTextData(REQUEST_OPTION_GET_TEXT);\n                                updatedlangsFile.body[code].items[sectionIndex].items[itemIndex] = {\n                                    text: text\n                                }\n                            }\n                        }\n                    }\n                }\n                updateState('pageBuilder', 'langsFile', updatedlangsFile);\n            } else {\n                if (updatedlangsFile.body[code].items.length < state.email.body.length) {\n                    for (let i = updatedlangsFile.body[code].items.length; i < state.email.body.length; i++) {\n                        updatedlangsFile.body[code].items.push({\n                            items: []\n                        });\n                        for (let item of state.email.body[i].items) {\n                            const itemIndex = state.email.body[i].items.indexOf(item);\n                            if (item.type === 'image') {\n                                const REQUEST_OPTION_GET_IMAGE = {\n                                    url: GENERAL_SETTINGS.OREST_URL + '/' + OREST_ENDPOINT.HCMITEMIMG + '/view/list',\n                                    method: 'get',\n                                    headers: {\n                                        Authorization: `Bearer ${authToken}`,\n                                        'Content-Type': 'application/json',\n                                    },\n                                    params: {\n                                        hotelrefno: Number(companyId),\n                                        query: `gid:${item.gid}`,\n                                    },\n                                }\n                                const img = await getImageData(REQUEST_OPTION_GET_IMAGE);\n                                updatedlangsFile.body[code].items[i].items[itemIndex] = {\n                                    image: {\n                                        title: img.title,\n                                        description: img.description\n                                    }\n                                }\n                            }\n                            if (item.type === 'paragraph') {\n                                const REQUEST_OPTION_GET_TEXT = {\n                                    url: GENERAL_SETTINGS.OREST_URL + '/' + OREST_ENDPOINT.HCMITEMTXTPAR + '/view/list',\n                                    method: 'get',\n                                    headers: {\n                                        Authorization: `Bearer ${authToken}`,\n                                        'Content-Type': 'application/json',\n                                    },\n                                    params: {\n                                        hotelrefno: Number(companyId),\n                                        query: `gid:${item.gid}`,\n                                    },\n                                }\n                                const text = await getTextData(REQUEST_OPTION_GET_TEXT);\n                                updatedlangsFile.body[code].items[i].items[itemIndex] = {\n                                    text: text\n                                }\n                            }\n                        }\n                    }\n                    updateState('pageBuilder', 'langsFile', updatedlangsFile);\n                }\n            }\n        }\n    }\n\n    const getImageData = async (header) => {\n        return new Promise(async (resv) => {\n            return await axios(header)\n                .then(async (response) => {\n                    if (response.status === 200 && response.data && response.data.data.length > 0) {\n                        resv({\n                            title: response.data.data[0].title,\n                            description: response.data.data[0].description\n                        })\n                    } else {\n                        const retErr = isErrorMsg(response);\n                        toast.error(retErr.errorMsg, {\n                            position: toast.POSITION.TOP_RIGHT\n                        });\n                    }\n                })\n                .catch((error) => {\n                    console.log(error)\n                    resv(error.response || { status: 0 })\n                })\n        })\n    }\n\n    const getTextData = async (header) => {\n        return new Promise(async (resv) => {\n            return await axios(header)\n                .then(async (response) => {\n                    if (response.status === 200 && response.data && response.data.data.length > 0) {\n                        resv(response.data.data[0].itemtext)\n                    } else {\n                        const retErr = isErrorMsg(response);\n                        toast.error(retErr.errorMsg, {\n                            position: toast.POSITION.TOP_RIGHT\n                        });\n                    }\n                })\n                .catch((error) => {\n                    console.log(error)\n                    resv(error.response || { status: 0 })\n                })\n        })\n    }\n\n    return (\n        <Container className={isDeleting ? classes.disabledEvent : ''}>\n            {\n                !isLoaded ? <LoadingSpinner /> :\n                    <>\n                    <Typography\n                        style={{\n                            display: \"flex\",\n                            justifyContent: 'flex-end',\n                        }}\n                        component={'div'}\n                    >\n                        <FormControl\n                            variant=\"outlined\"\n                            style={{ marginRight: 8}}\n                            size={'small'}\n                        >\n                            <InputLabel style={{fontSize: 15}} >Width</InputLabel>\n                            <Select\n                                value={state?.emailWidth}\n                                onChange={(e) => {\n                                    updateState('pageBuilder', 'emailWidth', e.target.value);\n                                }}\n                                label=\"Width\"\n                            >\n                                {emailWidth.map((width, index) => {\n                                    return (\n                                        <MenuItem value={width} key={index}>\n                                            {width}\n                                        </MenuItem>\n                                    )\n                                })}\n                            </Select>\n                        </FormControl>\n                        <Typography component={'div'}\n                                    className={state?.email?.body?.length === 0 ? classes.disabledEvent : ''} >\n                            <LanguageDropdown handleChange={handleLanguageChange} langID={state?.langId} />\n                        </Typography>\n                    </Typography>\n                        <Box {...defaultProps} >\n                            <Typography component={'div'} style={{height: 'auto', overflow: 'auto'}}>\n                                {\n                                    Object.keys(state.email.header).length > 0 ? <div>\n                                            <IconButton\n                                                aria-label=\"Delete item\"\n                                                color=\"primary\"\n                                                onClick={() => {\n                                                    setDialogType('edit-header');\n                                                    setDialogTitle('Edit Header');\n                                                    setRenderDialog(true);\n                                                }}\n                                            >\n                                                <EditIcon color={'primary'}/>\n                                            </IconButton>\n                                            {\n                                                state.langCode === state.defaultLang && <IconButton\n                                                    aria-label=\"Delete item\"\n                                                    color=\"primary\"\n                                                    onClick={() => {\n                                                        setAlert(true);\n                                                        setAlertDialogType('header');\n                                                    }}\n                                                >\n                                                    <DeleteIcon color={'primary'}/>\n                                                </IconButton>\n                                            }\n                                            <div style={{\n                                                pointerEvents: \"none\",\n                                                backgroundColor: state?.assets?.colors?.primary?.main,\n                                            }}>\n                                                {\n                                                    state.langCode === state.defaultLang &&\n                                                    <EmailHeader\n                                                        tpl={state.email.header.tpl}\n                                                        items={state.email.header.items}\n                                                    />\n                                                }\n                                                {\n                                                    state?.langCode !== state?.defaultLang &&\n                                                    state?.langsFile?.header?.[state.langCode]?.items &&\n                                                    <EmailHeader\n                                                        tpl={state.email.header.tpl}\n                                                        items={state.langsFile?.header?.[state.langCode]?.items}\n                                                    />\n                                                }\n                                            </div>\n                                        </div> :\n                                        <h3 className={classes.centreContent}>\n                                            <span className={classes.cursorPointer}\n                                                  onClick={() => {\n                                                      setDialogType('add-header');\n                                                      setDialogTitle('Add Header')\n                                                      setRenderDialog(true);\n                                                  }}\n                                            >\n                                                Click to define Header\n                                            </span>\n                                        </h3>\n                                }\n                            </Typography>\n                            <Divider/>\n                            <Typography component={'div'} >\n                                {\n                                    state?.langCode !== state?.defaultLang &&\n                                    state?.langsFile?.body?.[state.langCode]?.items?.length > 0 &&\n                                    state.langsFile.body[state.langCode].items.map((item, index) => {\n                                        return (\n                                            <Typography component={'div'} key={index}>\n                                                <IconButton\n                                                    color=\"primary\"\n                                                    onClick={() => {\n                                                        handleEditSectionDialog(state.email.body[index],\n                                                            item.items);\n                                                    }}\n                                                >\n                                                    <EditIcon/>\n                                                </IconButton>\n                                                <Container style={{pointerEvents: \"none\"}}>\n                                                    <Grid container spacing={3} >\n                                                        {\n                                                            item?.items?.length > 0 && item.items.map((subItem, i) => {\n                                                                return (\n                                                                    <Grid item\n                                                                          style={{width: state?.email?.body[index]?.items[i]?.width + '%'}}\n                                                                          key={i}\n                                                                    >\n                                                                        {\n                                                                            ('image' in subItem) &&\n                                                                                <Image\n                                                                                    imageComponent={state?.email?.body[index]?.items[i]}\n                                                                                    otherLangsImage={subItem.image}\n                                                                                    sectionType={state?.email?.body[index]?.type}\n                                                                                />\n                                                                        }\n                                                                        {\n                                                                            ('text' in subItem) &&\n                                                                            <div\n                                                                                style={{backgroundColor: state?.email?.body[index]?.items[i]?.useBgColor ? state?.assets?.colors?.message?.main : 'white', height: '100%'}}\n                                                                            >\n                                                                                <Paragraph\n                                                                                    paragraph={subItem.text}\n                                                                                />\n                                                                            </div>\n                                                                        }\n                                                                    </Grid>\n                                                                )\n                                                            })\n                                                        }\n                                                    </Grid>\n                                                </Container>\n                                            </Typography>\n                                        )\n                                    })\n                                }\n                                {\n                                    state?.langCode === state?.defaultLang && state?.email?.body?.length > 0 &&\n                                    state.email.body.map((body, index) => {\n                                        return (\n                                            <Typography component={'div'} key={index}>\n                                                <IconButton\n                                                    color=\"primary\"\n                                                    onClick={() => {\n                                                        handleEditSectionDialog(body)\n                                                    }}\n                                                >\n                                                    <EditIcon/>\n                                                </IconButton>\n                                                {\n                                                    state.langCode === state.defaultLang && <IconButton\n                                                        aria-label=\"Delete item\"\n                                                        color=\"primary\"\n                                                        onClick={() => {\n                                                            setDeletedIndex(index);\n                                                            setAlert(true);\n                                                            setAlertDialogType('section');\n                                                        }}\n                                                    >\n                                                        <DeleteIcon/>\n                                                    </IconButton>\n                                                }\n                                                <Container style={{pointerEvents: \"none\"}}>\n                                                    <Grid container spacing={3} >\n                                                        {\n                                                            body?.items?.length > 0 && body.items.map((item, i) => {\n                                                                return (\n                                                                    <Grid\n                                                                        item\n                                                                        style={{width: item.width + '%'}} key={i}\n                                                                    >\n                                                                        {\n                                                                            item?.type === 'image' &&\n                                                                            <Image\n                                                                                imageComponent={item}\n                                                                                sectionType={body?.type}\n                                                                            />\n                                                                        }\n                                                                        {\n                                                                            item?.type === 'paragraph' &&\n                                                                            <div\n                                                                                style={{backgroundColor: item?.useBgColor ? state?.assets?.colors?.message?.main : 'white', height: '100%'}}\n                                                                            >\n                                                                                <Paragraph paragraph={item} />\n                                                                            </div>\n                                                                        }\n                                                                    </Grid>\n                                                                )\n                                                            })\n                                                        }\n                                                    </Grid>\n                                                </Container>\n                                            </Typography>\n                                        )\n                                    })\n                                }\n                            </Typography>\n                            {\n                                state?.email?.body?.length > 0 && <Divider style={{marginTop: 16}} />\n                            }\n                            <Typography component={'div'}\n                                        style={{\n                                            minHeight: state.email.body.length === 0 ?\n                                                500 : 0\n                                        }}\n                            >\n                                <h3 className={state?.email?.body?.length === 0 ? classes.centreContent : classes.centerSection}>\n                                    <span className={classes.cursorPointer}\n                                          onClick={() => {\n                                              setDialogType('add-section');\n                                              setDialogTitle('Add Section')\n                                              setRenderDialog(true);\n                                          }}\n                                    >\n                                        Click to define Section\n                                    </span>\n                                </h3>\n                                {\n                                    state?.email?.body?.length === 0 && <Divider />\n                                }\n                            </Typography>\n                            <Divider/>\n                            <Typography component={'div'}>\n                                {\n                                    Object.keys(state.email.footer).length > 0 ? <div>\n                                            <IconButton\n                                                aria-label=\"Delete item\"\n                                                color=\"primary\"\n                                                onClick={() => {\n                                                    setDialogType('edit-footer');\n                                                    setDialogTitle('Edit Footer');\n                                                    setRenderDialog(true);\n                                                }}\n                                            >\n                                                <EditIcon/>\n                                            </IconButton>\n                                            {\n                                                state.langCode === state.defaultLang &&\n                                                <IconButton\n                                                    aria-label=\"Delete item\"\n                                                    color=\"primary\"\n                                                    onClick={() => {\n                                                        setAlert(true);\n                                                        setAlertDialogType('footer');\n                                                    }}\n                                                >\n                                                    <DeleteIcon/>\n                                                </IconButton>\n                                            }\n                                            <div style={{pointerEvents: \"none\"}}>\n                                                {\n                                                    state.langCode === state.defaultLang &&\n                                                    <EmailFooter items={state.email.footer.items}/>\n                                                }\n                                                {\n                                                    state.langCode && state.langCode !== state.defaultLang &&\n                                                    state?.langsFile?.footer?.[state.langCode]?.items &&\n                                                    <EmailFooter items={state.langsFile.footer[state.langCode].items}/>\n                                                }\n                                            </div>\n                                        </div> :\n                                        <h3 className={classes.centreContent}>\n                                            <span className={classes.cursorPointer}\n                                                  onClick={() => {\n                                                      setDialogType('add-footer');\n                                                      setDialogTitle('Add Footer')\n                                                      setRenderDialog(true);\n                                                  }}\n                                            >\n                                                Click to define Footer\n                                            </span>\n                                        </h3>\n                                }\n                            </Typography>\n                        </Box>\n                    </>\n            }\n            {\n                isRenderDialog && <EmailGenericDialog\n                    type={dialogType}\n                    title={dialogTitle}\n                    resetRenderDialog={resetRenderDialog}\n                    onSelectHeader={handleSelectedHeader}\n                    onSelectFooter={handleSelectedFooter}\n                    onAddEmailSection={handleAddEmailSection}\n                />\n            }\n            {\n                editSectionDialog\n            }\n            {\n                isAlert && <AlertDialog\n                    handleDelete={handleDelete}\n                    alertDialogType={alertDialogType}\n                />\n            }\n        </Container>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        state: state.formReducer.pageBuilder\n    }\n};\n\nconst mapDispatchToProps = dispatch => ({\n    setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value)),\n    pushToState: (stateType, stateName, value) => dispatch(pushToState(stateType, stateName, value)),\n    deleteFromState: (stateType, stateName, value) => dispatch(deleteFromState(stateType, stateName, value)),\n    updateState: (stateType, stateName, value) => dispatch(updateState(stateType, stateName, value)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EmailDesign);"]},"metadata":{},"sourceType":"module"}