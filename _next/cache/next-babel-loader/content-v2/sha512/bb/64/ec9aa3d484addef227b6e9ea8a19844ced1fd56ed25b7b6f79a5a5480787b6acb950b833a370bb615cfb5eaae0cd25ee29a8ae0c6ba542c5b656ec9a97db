{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/survey/surveytree/options/Counter.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { SURVEY_INPUT_VARIANT } from '../../../../assets/const';\nimport useSurveyAction from '../../../../model/survey/useSurveyAction';\nimport { useSelector } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport styles from '../../style/SurveyOptions.style';\nimport SurveyTooltip from 'components/survey/helper/SurveyTooltip';\nvar useStyles = makeStyles(styles); //TODO - ask what is this for and improve component\n\nexport default function CounterOption(props) {\n  _s();\n\n  var option = props.option,\n      optionTyp = props.optionTyp; //style\n\n  var classes = useStyles(); //redux\n\n  var _useSurveyAction = useSurveyAction(),\n      setSurveyAnswerMulti = _useSurveyAction.setSurveyAnswerMulti,\n      deleteSurveyAnswer = _useSurveyAction.deleteSurveyAnswer;\n\n  var surveyTrans = useSelector(function (state) {\n    return state.survey.trans;\n  });\n  var surveyIsValid = useSelector(function (state) {\n    return state.survey.isValid;\n  });\n  var oldAnswer = useSelector(function (state) {\n    return state.survey.answers[surveyTrans] && state.survey.answers[surveyTrans][option.parentid] && state.survey.answers[surveyTrans][option.parentid][option.id];\n  }); //state\n\n  var _useState = useState(oldAnswer ? oldAnswer.valueint : ''),\n      optionValue = _useState[0],\n      setOptionValue = _useState[1];\n\n  var handleChangeTextField = function handleChangeTextField(e) {\n    var value = e.target.value;\n    setOptionValue(value);\n\n    if (value !== '') {\n      setSurveyAnswerMulti(surveyTrans, option.parentid, option.id, {\n        typ: optionTyp,\n        parentid: option.parentid,\n        valueint: value\n      });\n    } else {\n      deleteSurveyAnswer(surveyTrans, option.parentid, option.id);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: classes.optionContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, __jsx(SurveyTooltip, {\n    title: option && option.note || '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, __jsx(TextField, {\n    onChange: handleChangeTextField,\n    type: 'number',\n    label: option.langwordtxt || option.description,\n    value: optionValue,\n    variant: SURVEY_INPUT_VARIANT,\n    fullWidth: true,\n    disabled: surveyIsValid,\n    className: classes.textField,\n    InputProps: {\n      classes: {\n        input: classes.textFieldInput\n      }\n    },\n    InputLabelProps: {\n      className: classes.textFieldLabel\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  })));\n}\n\n_s(CounterOption, \"GYJ1r63GGMLb8C8k9j3KgRga2PU=\", false, function () {\n  return [useStyles, useSurveyAction, useSelector, useSelector, useSelector];\n});\n\n_c = CounterOption;\n\nvar _c;\n\n$RefreshReg$(_c, \"CounterOption\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/survey/surveytree/options/Counter.js"],"names":["React","useState","TextField","SURVEY_INPUT_VARIANT","useSurveyAction","useSelector","makeStyles","styles","SurveyTooltip","useStyles","CounterOption","props","option","optionTyp","classes","setSurveyAnswerMulti","deleteSurveyAnswer","surveyTrans","state","survey","trans","surveyIsValid","isValid","oldAnswer","answers","parentid","id","valueint","optionValue","setOptionValue","handleChangeTextField","e","value","target","typ","optionContainer","note","langwordtxt","description","textField","input","textFieldInput","className","textFieldLabel"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport { SURVEY_INPUT_VARIANT } from '../../../../assets/const'\nimport useSurveyAction from '../../../../model/survey/useSurveyAction'\nimport { useSelector } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\nimport styles from '../../style/SurveyOptions.style'\nimport SurveyTooltip from 'components/survey/helper/SurveyTooltip'\n\nconst useStyles = makeStyles(styles)\n\n//TODO - ask what is this for and improve component\nexport default function CounterOption(props) {\n    const { option, optionTyp } = props\n\n    //style\n    const classes = useStyles()\n\n    //redux\n    const { setSurveyAnswerMulti, deleteSurveyAnswer } = useSurveyAction()\n    const surveyTrans = useSelector((state) => state.survey.trans)\n    const surveyIsValid = useSelector((state) => state.survey.isValid)\n    const oldAnswer = useSelector(\n        (state) =>\n            state.survey.answers[surveyTrans] &&\n            state.survey.answers[surveyTrans][option.parentid] &&\n            state.survey.answers[surveyTrans][option.parentid][option.id],\n    )\n\n    //state\n    const [optionValue, setOptionValue] = useState(oldAnswer ? oldAnswer.valueint : '')\n\n    const handleChangeTextField = (e) => {\n        const value = e.target.value\n        setOptionValue(value)\n\n        if (value !== '') {\n            setSurveyAnswerMulti(surveyTrans, option.parentid, option.id, {\n                typ: optionTyp,\n                parentid: option.parentid,\n                valueint: value,\n            })\n        } else {\n            deleteSurveyAnswer(surveyTrans, option.parentid, option.id)\n        }\n    }\n\n    return (\n        <div className={classes.optionContainer}>\n            <SurveyTooltip title={option && option.note || ''}>\n                <TextField\n                    onChange={handleChangeTextField}\n                    type={'number'}\n                    label={option.langwordtxt || option.description}\n                    value={optionValue}\n                    variant={SURVEY_INPUT_VARIANT}\n                    fullWidth\n                    disabled={surveyIsValid}\n                    className={classes.textField}\n                    InputProps={{ classes: { input: classes.textFieldInput } }}\n                    InputLabelProps={{ className: classes.textFieldLabel }}\n                />\n            </SurveyTooltip>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}