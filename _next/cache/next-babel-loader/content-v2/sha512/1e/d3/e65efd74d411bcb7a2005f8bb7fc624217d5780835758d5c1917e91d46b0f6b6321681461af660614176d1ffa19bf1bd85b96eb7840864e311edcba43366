{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/components/page/sections/slider/Slider.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport Carousel from 'react-bootstrap/Carousel';\nimport { ViewList } from \"@webcms/orest\";\nimport { isErrorMsg, OREST_ENDPOINT } from '../../../../../../../model/orest/constants';\nimport WebCmsGlobal from \"components/webcms-global\";\nimport { useRouter } from \"next/router\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { connect, useSelector } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport PrevIcon from '@material-ui/icons/KeyboardArrowLeft';\nimport NextIcon from '@material-ui/icons/KeyboardArrowRight';\nimport { Typography } from \"@material-ui/core\";\nimport LoadingSpinner from \"../../../../../../LoadingSpinner\";\nimport { toast } from \"react-toastify\";\nimport { COLORS } from \"../../../../constants\";\nimport { getSliderImages } from \"../../../../helpers/slider\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    box: {\n      position: \"relative\",\n      textAlign: \"center\",\n      color: \"white\"\n    },\n    title: {\n      \"-webkit-text-fill-color\": function webkitTextFillColor(props) {\n        return props !== null && props !== void 0 && props.textColor ? props.textColor : \"#ffffff\";\n      },\n      \"-webkit-text-stroke-width\": \"0.8px\",\n      \"-webkit-text-stroke-color\": \"#000000\"\n    },\n    description: {\n      \"-webkit-text-fill-color\": function webkitTextFillColor(props) {\n        return props !== null && props !== void 0 && props.textColor ? props.textColor : \"#ffffff\";\n      },\n      \"-webkit-text-stroke-width\": \"0.8px\",\n      \"-webkit-text-stroke-color\": \"#000000\"\n    },\n    image: {\n      width: '100%',\n      backgroundSize: \"cover\"\n    },\n    ctaButton: {\n      marginRight: theme.spacing(1),\n      marginTop: theme.spacing(1),\n      borderRadius: 20,\n      backgroundColor: function backgroundColor(props) {\n        return props !== null && props !== void 0 && props.buttonColor ? props.buttonColor : \"#ffffff\";\n      },\n      '& a': {\n        color: function color(props) {\n          return props !== null && props !== void 0 && props.textColor ? props.textColor : \"#ffffff\";\n        }\n      }\n    },\n    sliderArrow: {\n      color: \"#000000\",\n      fontSize: 40\n    },\n    sliderBg: {\n      border: '1px solid white',\n      backgroundColor: '#FFFFFF',\n      borderRadius: '50%'\n    }\n  };\n});\n\nvar Slider = function Slider(props) {\n  _s();\n\n  var sliderComponent = props.sliderComponent,\n      slider = props.slider,\n      otherLangSliderImages = props.otherLangSliderImages,\n      state = props.state;\n\n  var _useContext = useContext(WebCmsGlobal),\n      GENERAL_SETTINGS = _useContext.GENERAL_SETTINGS,\n      token = _useContext.token; //local variable\n\n\n  var _useState = useState([]),\n      sliderImages = _useState[0],\n      setSliderImages = _useState[1];\n\n  var _useState2 = useState({}),\n      sliderObj = _useState2[0],\n      setSliderObj = _useState2[1];\n\n  var _useState3 = useState(false),\n      isImageCta = _useState3[0],\n      setImageCta = _useState3[1];\n\n  var _useState4 = useState(false),\n      isImageTitleDesc = _useState4[0],\n      setImageTitleDesc = _useState4[1];\n\n  var _useState5 = useState(false),\n      isRequestSend = _useState5[0],\n      setRequestSend = _useState5[1];\n\n  var classes = useStyles(sliderComponent);\n  var router = useRouter();\n  var clientToken = useSelector(function (state) {\n    return state.orest.currentUser !== null ? state.orest.currentUser.auth.access_token : router.query.authToken;\n  });\n  var companyId = router.query.companyID || GENERAL_SETTINGS.HOTELREFNO;\n  var authToken = token || clientToken || router.query.authToken;\n  useEffect(function () {\n    if (sliderComponent !== null && sliderComponent !== void 0 && sliderComponent.gid) {\n      setImageCta(false);\n      setImageTitleDesc(false);\n      setRequestSend(true);\n      ViewList({\n        apiUrl: GENERAL_SETTINGS.OREST_URL,\n        endpoint: OREST_ENDPOINT.HCMITEMSLD,\n        token: authToken,\n        params: {\n          query: \"gid:\".concat(sliderComponent.gid),\n          chkselfish: false,\n          hotelrefno: Number(companyId)\n        }\n      }).then( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(res) {\n          var _res$data, _res$data$data, _res$data2, _res$data$data$, sldImages, _iterator, _step, img, _otherLangSliderImage, _otherLangSliderImage2, _otherLangSliderImage3, index, retErr;\n\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (!(res.status === 200)) {\n                    _context.next = 16;\n                    break;\n                  }\n\n                  if (!(res !== null && res !== void 0 && (_res$data = res.data) !== null && _res$data !== void 0 && (_res$data$data = _res$data.data) !== null && _res$data$data !== void 0 && _res$data$data.length)) {\n                    _context.next = 12;\n                    break;\n                  }\n\n                  setSliderObj((_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.data[0]);\n\n                  if (state.langCode !== state.defaultLang) {\n                    slider && setSliderObj(slider);\n                  }\n\n                  _context.next = 6;\n                  return getSliderImages(GENERAL_SETTINGS.OREST_URL, authToken, companyId, (_res$data$data$ = res.data.data[0]) === null || _res$data$data$ === void 0 ? void 0 : _res$data$data$.id);\n\n                case 6:\n                  sldImages = _context.sent;\n                  sldImages && sldImages.sort(function (a, b) {\n                    return a.orderno > b.orderno ? 1 : -1;\n                  });\n                  setRequestSend(false);\n\n                  if (sldImages) {\n                    _iterator = _createForOfIteratorHelper(sldImages);\n\n                    try {\n                      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                        img = _step.value;\n                        if (img.cta) setImageCta(true);\n\n                        if (img.title || img.description) {\n                          setImageTitleDesc(true);\n                        }\n\n                        if (state.langCode !== state.defaultLang && otherLangSliderImages && otherLangSliderImages.length > 0) {\n                          index = sldImages.indexOf(img);\n                          img.title = (_otherLangSliderImage = otherLangSliderImages[index]) === null || _otherLangSliderImage === void 0 ? void 0 : _otherLangSliderImage.title;\n                          img.description = (_otherLangSliderImage2 = otherLangSliderImages[index]) === null || _otherLangSliderImage2 === void 0 ? void 0 : _otherLangSliderImage2.description;\n                          img.cta = (_otherLangSliderImage3 = otherLangSliderImages[index]) === null || _otherLangSliderImage3 === void 0 ? void 0 : _otherLangSliderImage3.cta;\n                        }\n                      }\n                    } catch (err) {\n                      _iterator.e(err);\n                    } finally {\n                      _iterator.f();\n                    }\n\n                    setSliderImages(sldImages);\n                  } else {\n                    toast.warn('Something went wrong while fetching slider images. Please check network tab.', {\n                      position: toast.POSITION.TOP_RIGHT\n                    });\n                  }\n\n                  _context.next = 14;\n                  break;\n\n                case 12:\n                  setRequestSend(false);\n                  toast.warn('No image found in slider. Please add images.', {\n                    position: toast.POSITION.TOP_RIGHT\n                  });\n\n                case 14:\n                  _context.next = 19;\n                  break;\n\n                case 16:\n                  setRequestSend(false);\n                  retErr = isErrorMsg(res);\n                  toast.error(retErr.errorMsg, {\n                    position: toast.POSITION.TOP_RIGHT\n                  });\n\n                case 19:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    }\n  }, [sliderComponent, otherLangSliderImages, slider]);\n\n  if (isRequestSend) {\n    return __jsx(LoadingSpinner, {\n      size: 40,\n      style: {\n        color: COLORS.secondary\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, (sliderImages === null || sliderImages === void 0 ? void 0 : sliderImages.length) > 0 && __jsx(Carousel, {\n    slide: true,\n    nextIcon: __jsx(Typography, {\n      component: 'div',\n      className: classes.sliderBg,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 37\n      }\n    }, __jsx(NextIcon, {\n      className: classes.sliderArrow,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 96\n      }\n    })),\n    prevIcon: __jsx(Typography, {\n      component: 'div',\n      className: classes.sliderBg,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 37\n      }\n    }, __jsx(PrevIcon, {\n      className: classes.sliderArrow,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 96\n      }\n    })),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 45\n    }\n  }, sliderImages.map(function (image, index) {\n    return __jsx(Carousel.Item, {\n      key: \"crousel-item-\".concat(index),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 33\n      }\n    }, __jsx(\"div\", {\n      style: {\n        backgroundImage: \"url(\".concat(GENERAL_SETTINGS.STATIC_URL + (image === null || image === void 0 ? void 0 : image.fileurl), \")\"),\n        height: 'calc(100vh - 25vh)',\n        width: '100%',\n        backgroundSize: 'cover'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 37\n      }\n    }), __jsx(Carousel.Caption, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 37\n      }\n    }, isImageTitleDesc ? __jsx(React.Fragment, null, __jsx(\"span\", {\n      className: classes.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 53\n      }\n    }, __jsx(\"div\", {\n      className: classes.title,\n      dangerouslySetInnerHTML: {\n        __html: image === null || image === void 0 ? void 0 : image.title\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 57\n      }\n    })), __jsx(\"div\", {\n      className: classes.description,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 53\n      }\n    }, __jsx(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: image === null || image === void 0 ? void 0 : image.description\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 57\n      }\n    }))) : __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: classes.title,\n      dangerouslySetInnerHTML: {\n        __html: sliderObj === null || sliderObj === void 0 ? void 0 : sliderObj.title\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 49\n      }\n    }), __jsx(\"div\", {\n      className: classes.description,\n      dangerouslySetInnerHTML: {\n        __html: sliderObj === null || sliderObj === void 0 ? void 0 : sliderObj.description\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 49\n      }\n    })), isImageCta ? __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 55\n      }\n    }, (image === null || image === void 0 ? void 0 : image.cta) && __jsx(Button, {\n      variant: \"contained\",\n      size: \"small\",\n      color: \"primary\",\n      \"aria-label\": \"add\",\n      className: classes.ctaButton,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 67\n      }\n    }, __jsx(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: image === null || image === void 0 ? void 0 : image.cta\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 57\n      }\n    }))) : __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 54\n      }\n    }, (sliderObj === null || sliderObj === void 0 ? void 0 : sliderObj.cta) && __jsx(Button, {\n      variant: \"contained\",\n      size: \"small\",\n      \"aria-label\": \"add\",\n      className: classes.ctaButton,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 71\n      }\n    }, __jsx(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: sliderObj === null || sliderObj === void 0 ? void 0 : sliderObj.cta\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 57\n      }\n    })))));\n  })));\n};\n\n_s(Slider, \"OkJ95X6eCAAANQY2yWJAaco+jAw=\", false, function () {\n  return [useStyles, useRouter, useSelector];\n});\n\n_c = Slider;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    state: state.formReducer.pageBuilder\n  };\n};\n\nexport default connect(mapStateToProps)(Slider);\n\nvar _c;\n\n$RefreshReg$(_c, \"Slider\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/components/page/sections/slider/Slider.js"],"names":["React","useContext","useEffect","useState","Carousel","ViewList","isErrorMsg","OREST_ENDPOINT","WebCmsGlobal","useRouter","makeStyles","connect","useSelector","Button","PrevIcon","NextIcon","Typography","LoadingSpinner","toast","COLORS","getSliderImages","useStyles","theme","box","position","textAlign","color","title","props","textColor","description","image","width","backgroundSize","ctaButton","marginRight","spacing","marginTop","borderRadius","backgroundColor","buttonColor","sliderArrow","fontSize","sliderBg","border","Slider","sliderComponent","slider","otherLangSliderImages","state","GENERAL_SETTINGS","token","sliderImages","setSliderImages","sliderObj","setSliderObj","isImageCta","setImageCta","isImageTitleDesc","setImageTitleDesc","isRequestSend","setRequestSend","classes","router","clientToken","orest","currentUser","auth","access_token","query","authToken","companyId","companyID","HOTELREFNO","gid","apiUrl","OREST_URL","endpoint","HCMITEMSLD","params","chkselfish","hotelrefno","Number","then","res","status","data","length","langCode","defaultLang","id","sldImages","sort","a","b","orderno","img","cta","index","indexOf","warn","POSITION","TOP_RIGHT","retErr","error","errorMsg","secondary","map","backgroundImage","STATIC_URL","fileurl","height","__html","mapStateToProps","formReducer","pageBuilder"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\nimport Carousel from 'react-bootstrap/Carousel'\nimport {ViewList} from \"@webcms/orest\";\nimport { isErrorMsg, OREST_ENDPOINT } from '../../../../../../../model/orest/constants'\nimport WebCmsGlobal from \"components/webcms-global\";\nimport {useRouter} from \"next/router\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {connect, useSelector} from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport PrevIcon from '@material-ui/icons/KeyboardArrowLeft'\nimport NextIcon from '@material-ui/icons/KeyboardArrowRight'\nimport {Typography} from \"@material-ui/core\";\nimport LoadingSpinner from \"../../../../../../LoadingSpinner\";\nimport {toast} from \"react-toastify\";\nimport {COLORS} from \"../../../../constants\";\nimport {getSliderImages} from \"../../../../helpers/slider\";\n\nconst useStyles = makeStyles(theme => ({\n    box: {\n        position: \"relative\",\n        textAlign: \"center\",\n        color: \"white\"\n    },\n    title: {\n        \"-webkit-text-fill-color\": props => props?.textColor ? props.textColor : \"#ffffff\",\n        \"-webkit-text-stroke-width\": \"0.8px\",\n        \"-webkit-text-stroke-color\": \"#000000\"\n    },\n    description: {\n        \"-webkit-text-fill-color\": props => props?.textColor ? props.textColor : \"#ffffff\",\n        \"-webkit-text-stroke-width\": \"0.8px\",\n        \"-webkit-text-stroke-color\": \"#000000\"\n    },\n    image: {\n        width: '100%',\n        backgroundSize: \"cover\"\n    },\n    ctaButton: {\n        marginRight: theme.spacing(1),\n        marginTop: theme.spacing(1),\n        borderRadius: 20,\n        backgroundColor: props => props?.buttonColor ? props.buttonColor : \"#ffffff\",\n        '& a': {\n            color: props => props?.textColor ? props.textColor : \"#ffffff\"\n        }\n    },\n    sliderArrow: {\n        color: \"#000000\",\n        fontSize: 40,\n    },\n    sliderBg: {\n        border: '1px solid white',\n        backgroundColor: '#FFFFFF',\n        borderRadius: '50%'\n    },\n}))\n\nconst Slider = (props) => {\n\n    const {\n        sliderComponent,\n        slider,\n        otherLangSliderImages,\n        state\n    } = props;\n    const {GENERAL_SETTINGS, token} = useContext(WebCmsGlobal);\n\n    //local variable\n    const [sliderImages, setSliderImages] = useState([]);\n    const [sliderObj, setSliderObj] = useState({});\n    const [isImageCta, setImageCta] = useState(false);\n    const [isImageTitleDesc, setImageTitleDesc] = useState(false);\n    const [isRequestSend, setRequestSend] = useState(false);\n\n    const classes = useStyles(sliderComponent);\n    const router = useRouter();\n    const clientToken = useSelector((state) => state.orest.currentUser !== null ? state.orest.currentUser.auth.access_token : router.query.authToken)\n    const companyId = router.query.companyID || GENERAL_SETTINGS.HOTELREFNO;\n    const authToken = token || clientToken || router.query.authToken;\n\n    useEffect(() => {\n        if(sliderComponent?.gid) {\n            setImageCta(false);\n            setImageTitleDesc(false);\n            setRequestSend(true);\n            ViewList({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: OREST_ENDPOINT.HCMITEMSLD,\n                token: authToken,\n                params: {\n                    query: `gid:${sliderComponent.gid}`,\n                    chkselfish: false,\n                    hotelrefno:  Number(companyId)\n                }\n            }).then(async res => {\n                if (res.status === 200) {\n                    if (res?.data?.data?.length) {\n                        setSliderObj(res.data?.data[0]);\n                        if (state.langCode !== state.defaultLang) {\n                            slider && setSliderObj(slider);\n                        }\n                        const sldImages = await getSliderImages(GENERAL_SETTINGS.OREST_URL, authToken, companyId, res.data.data[0]?.id);\n                        sldImages && sldImages.sort((a, b) => (a.orderno > b.orderno) ? 1 : -1);\n                        setRequestSend(false);\n                        if (sldImages) {\n                            for (const img of sldImages) {\n                                if (img.cta) setImageCta(true);\n                                if (img.title || img.description) {\n                                    setImageTitleDesc(true);\n                                }\n                                if (state.langCode !== state.defaultLang && otherLangSliderImages && otherLangSliderImages.length > 0) {\n                                    const index = sldImages.indexOf(img);\n                                    img.title = otherLangSliderImages[index]?.title;\n                                    img.description = otherLangSliderImages[index]?.description;\n                                    img.cta = otherLangSliderImages[index]?.cta;\n                                }\n                            }\n                            setSliderImages(sldImages);\n                        } else {\n                            toast.warn('Something went wrong while fetching slider images. Please check network tab.', {\n                                position: toast.POSITION.TOP_RIGHT\n                            });\n                        }\n                    } else {\n                        setRequestSend(false);\n                        toast.warn('No image found in slider. Please add images.', {\n                            position: toast.POSITION.TOP_RIGHT\n                        });\n                    }\n                } else {\n                    setRequestSend(false);\n                    const retErr = isErrorMsg(res);\n                    toast.error(retErr.errorMsg, {\n                        position: toast.POSITION.TOP_RIGHT\n                    });\n                }\n            });\n        }\n    }, [sliderComponent, otherLangSliderImages, slider]);\n\n    if (isRequestSend) {\n        return <LoadingSpinner size={40} style={{color: COLORS.secondary}} />\n    }\n\n    return(\n        <React.Fragment>\n            {\n                sliderImages?.length > 0 && <Carousel slide={true}\n                          nextIcon={<Typography component={'div'} className={classes.sliderBg}><NextIcon\n                              className={classes.sliderArrow}/></Typography>}\n                          prevIcon={<Typography component={'div'} className={classes.sliderBg}><PrevIcon\n                              className={classes.sliderArrow}/></Typography>}\n                >\n                    {\n                        sliderImages.map((image, index) => {\n                            return (\n                                <Carousel.Item key={`crousel-item-${index}`}>\n                                    <div style={{ backgroundImage: `url(${GENERAL_SETTINGS.STATIC_URL + image?.fileurl})`, height: 'calc(100vh - 25vh)', width: '100%', backgroundSize: 'cover', }}/>\n                                    <Carousel.Caption>\n                                        {isImageTitleDesc ? <>\n                                                    <span className={classes.title}>\n                                                        <div className={classes.title} dangerouslySetInnerHTML={{ __html: image?.title }}/>\n                                                    </span>\n                                                    <div className={classes.description}>\n                                                        <div dangerouslySetInnerHTML={{ __html: image?.description }}/>\n                                                    </div>\n                                                </> : <>\n                                                <div className={classes.title} dangerouslySetInnerHTML={{ __html: sliderObj?.title }}/>\n                                                <div className={classes.description} dangerouslySetInnerHTML={{ __html: sliderObj?.description }}/>\n                                            </>\n                                        }\n                                        {isImageCta ? <div>\n                                                {\n                                                    image?.cta && <Button\n                                                        variant=\"contained\"\n                                                        size=\"small\"\n                                                        color=\"primary\"\n                                                        aria-label=\"add\"\n                                                        className={classes.ctaButton}\n                                                    >\n                                                        <div dangerouslySetInnerHTML={{ __html: image?.cta }}/>\n                                                    </Button>\n                                                }\n                                            </div> : <div>\n                                                {\n                                                    sliderObj?.cta && <Button\n                                                        variant=\"contained\"\n                                                        size=\"small\"\n                                                        aria-label=\"add\"\n                                                        className={classes.ctaButton}\n                                                    >\n                                                        <div dangerouslySetInnerHTML={{ __html: sliderObj?.cta }}/>\n                                                    </Button>\n                                                }\n                                            </div>\n                                        }\n                                    </Carousel.Caption>\n                                </Carousel.Item>\n                            )\n                        })\n                    }\n                </Carousel>\n            }\n        </React.Fragment>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        state: state.formReducer.pageBuilder\n    }\n};\n\nexport default connect(\n    mapStateToProps,\n)(Slider);\n"]},"metadata":{},"sourceType":"module"}