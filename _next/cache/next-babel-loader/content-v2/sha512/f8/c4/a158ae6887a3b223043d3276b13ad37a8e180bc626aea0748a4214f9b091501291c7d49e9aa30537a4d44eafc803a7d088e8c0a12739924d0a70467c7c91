{"ast":null,"code":"import _extends from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\n\nvar _jsxFileName = \"/Users/mata/app-cloudweb/components/payment/ThreeDPayDialog.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { AppBar, Typography, Dialog, Toolbar, Slide, Box } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nimport LoadingSpinner from 'components/LoadingSpinner';\nvar useThreeDPayDialogStyles = makeStyles(function (theme) {\n  return {\n    appBar: {\n      position: 'relative'\n    },\n    title: {\n      marginLeft: theme.spacing(2),\n      flex: 1\n    },\n    payFrameLoadWrapper: {\n      margin: '18% 0 auto',\n      display: 'block',\n      textAlign: 'center',\n      padding: 20\n    },\n    payFrameLoadTitle: {\n      background: '#f0f0f0',\n      display: 'inline-flex',\n      padding: 10,\n      position: 'relative',\n      top: 20,\n      borderRadius: 20\n    }\n  };\n});\nvar Transition = /*#__PURE__*/React.forwardRef(_c = function Transition(props, ref) {\n  return __jsx(Slide, _extends({\n    direction: \"up\",\n    ref: ref\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }\n  }));\n});\n_c2 = Transition;\n\nvar ThreeDPayDialog = function ThreeDPayDialog(props) {\n  _s();\n\n  var classes = useThreeDPayDialogStyles();\n  var open = props.open,\n      _onClose = props.onClose,\n      iframeUrl = props.iframeUrl,\n      isPayFrameLoad = props.isPayFrameLoad,\n      setIsPayFrameLoad = props.setIsPayFrameLoad,\n      isPaySave = props.isPaySave;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  return __jsx(Dialog, {\n    fullScreen: true,\n    open: Boolean(open),\n    onClose: function onClose() {\n      return _onClose(false);\n    },\n    TransitionComponent: Transition,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, __jsx(AppBar, {\n    className: classes.appBar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, __jsx(Toolbar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    className: classes.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, t('str_threeDPaySmsVerification')))), __jsx(Box, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    style: {\n      height: '100vh',\n      position: 'relative'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, !isPayFrameLoad ? __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: classes.payFrameLoadWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 29\n    }\n  }, __jsx(LoadingSpinner, {\n    size: 40,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 33\n    }\n  }), __jsx(Typography, {\n    variant: \"body2\",\n    gutterBottom: true,\n    className: classes.payFrameLoadTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 33\n    }\n  }, t('str_youAreBeignRedirectedForThreeDSmsVerificationPleaseWait')))) : isPaySave ? __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: classes.payFrameLoadWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 29\n    }\n  }, __jsx(LoadingSpinner, {\n    size: 40,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 33\n    }\n  }), __jsx(Typography, {\n    variant: \"body2\",\n    gutterBottom: true,\n    className: classes.payFrameLoadTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 33\n    }\n  }, t('str_paymentTransactionVerifyingPleaseWait')))) : null, __jsx(\"iframe\", {\n    onLoad: function onLoad() {\n      return setIsPayFrameLoad(true);\n    },\n    allowpaymentrequest: \"true\",\n    target: \"self\",\n    src: iframeUrl,\n    style: {\n      width: '100%',\n      minHeight: '400px',\n      height: '100%',\n      border: '0px',\n      display: isPaySave ? 'none' : 'block'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }))));\n};\n\n_s(ThreeDPayDialog, \"tz0WILVHRPkgsrWLaKEJuC7vjOw=\", false, function () {\n  return [useThreeDPayDialogStyles, useTranslation];\n});\n\n_c3 = ThreeDPayDialog;\nexport default ThreeDPayDialog;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Transition$React.forwardRef\");\n$RefreshReg$(_c2, \"Transition\");\n$RefreshReg$(_c3, \"ThreeDPayDialog\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/payment/ThreeDPayDialog.js"],"names":["React","AppBar","Typography","Dialog","Toolbar","Slide","Box","makeStyles","useTranslation","LoadingSpinner","useThreeDPayDialogStyles","theme","appBar","position","title","marginLeft","spacing","flex","payFrameLoadWrapper","margin","display","textAlign","padding","payFrameLoadTitle","background","top","borderRadius","Transition","forwardRef","props","ref","ThreeDPayDialog","classes","open","onClose","iframeUrl","isPayFrameLoad","setIsPayFrameLoad","isPaySave","t","Boolean","height","width","minHeight","border"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { AppBar, Typography, Dialog, Toolbar, Slide, Box } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport useTranslation from 'lib/translations/hooks/useTranslation'\nimport LoadingSpinner from 'components/LoadingSpinner'\n\nconst useThreeDPayDialogStyles = makeStyles((theme) => ({\n    appBar: {\n        position: 'relative',\n    },\n    title: {\n        marginLeft: theme.spacing(2),\n        flex: 1,\n    },\n    payFrameLoadWrapper: {\n        margin: '18% 0 auto',\n        display: 'block',\n        textAlign: 'center',\n        padding: 20\n    },\n    payFrameLoadTitle: {\n        background: '#f0f0f0',\n        display: 'inline-flex',\n        padding: 10,\n        position: 'relative',\n        top: 20,\n        borderRadius: 20,\n    }\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />\n})\n\nconst ThreeDPayDialog = (props) => {\n    const classes = useThreeDPayDialogStyles()\n    const { open, onClose, iframeUrl, isPayFrameLoad, setIsPayFrameLoad, isPaySave } = props\n    const { t } = useTranslation()\n\n    return (\n        <Dialog fullScreen open={Boolean(open)} onClose={() => onClose(false)} TransitionComponent={Transition}>\n            <AppBar className={classes.appBar}>\n                <Toolbar>\n                    <Typography variant='h6' className={classes.title}>\n                        {t('str_threeDPaySmsVerification')}\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <Box>\n                <div style={{ height: '100vh', position: 'relative' }}>\n                    {!isPayFrameLoad ? (\n                        <React.Fragment>\n                            <div className={classes.payFrameLoadWrapper}>\n                                <LoadingSpinner size={40} />\n                                <Typography variant=\"body2\" gutterBottom className={classes.payFrameLoadTitle}>\n                                    {t('str_youAreBeignRedirectedForThreeDSmsVerificationPleaseWait')}\n                                </Typography>\n                            </div>\n                        </React.Fragment>\n                    ): isPaySave ? (\n                        <React.Fragment>\n                            <div className={classes.payFrameLoadWrapper}>\n                                <LoadingSpinner size={40} />\n                                <Typography variant=\"body2\" gutterBottom className={classes.payFrameLoadTitle}>\n                                    {t('str_paymentTransactionVerifyingPleaseWait')}\n                                </Typography>\n                            </div>\n                        </React.Fragment>\n                    ): null}\n                    <iframe\n                        onLoad={() => setIsPayFrameLoad(true)}\n                        allowpaymentrequest=\"true\"\n                        target=\"self\"\n                        src={iframeUrl}\n                        style={{\n                            width: '100%',\n                            minHeight: '400px',\n                            height: '100%',\n                            border: '0px',\n                            display: isPaySave ? 'none': 'block',\n                        }}\n                    />\n                </div>\n            </Box>\n        </Dialog>\n    )\n}\n\nexport default ThreeDPayDialog"]},"metadata":{},"sourceType":"module"}