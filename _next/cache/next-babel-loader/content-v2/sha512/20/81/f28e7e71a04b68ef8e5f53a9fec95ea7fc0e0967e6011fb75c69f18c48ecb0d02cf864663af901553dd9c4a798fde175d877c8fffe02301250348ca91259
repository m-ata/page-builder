{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/@webcms-ui/core/signer-pad/index.js\";\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, InputAdornment, TextField } from '@material-ui/core';\nimport { Edit, Visibility } from '@material-ui/icons';\nimport SignatureCanvas from 'react-signature-canvas';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nimport WebCmsGlobal from 'components/webcms-global';\nimport { useSnackbar } from 'notistack';\nimport { Delete, Upload, ViewList } from '@webcms/orest';\nimport { dataURLtoFile, OREST_ENDPOINT } from 'model/orest/constants';\n\nconst FileViewer = ({\n  label,\n  open,\n  handleClose,\n  fileUrl,\n  closeButtonText\n}) => {\n  return __jsx(Dialog, {\n    fullWidth: true,\n    maxWidth: \"xs\",\n    open: open,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, __jsx(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, label), __jsx(DialogContent, {\n    dividers: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, fileUrl ? __jsx(\"img\", {\n    src: fileUrl,\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 28\n    }\n  }) : 'Not file'), __jsx(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, closeButtonText)));\n};\n\nconst SignerPadDialog = ({\n  disabled,\n  label,\n  open,\n  handleClose,\n  onCallback,\n  saveButtonText,\n  closeButtonText\n}) => {\n  const {\n    t\n  } = useTranslation();\n  const {\n    0: trimmedDataURL,\n    1: setTrimmedDataURL\n  } = useState(null);\n  const {\n    0: sigPad,\n    1: setSigPad\n  } = useState(false);\n  useEffect(() => {\n    if (typeof onCallback === \"function\") {\n      onCallback(trimmedDataURL);\n    }\n  }, [trimmedDataURL]);\n\n  const handleSave = () => {\n    setTrimmedDataURL(sigPad.getTrimmedCanvas().toDataURL('image/png'));\n  };\n\n  const handleClear = () => {\n    sigPad.clear();\n  };\n\n  return __jsx(Dialog, {\n    fullWidth: true,\n    maxWidth: \"xs\",\n    open: open,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, __jsx(DialogTitle, {\n    id: \"max-width-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, label), __jsx(DialogContent, {\n    dividers: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, __jsx(SignatureCanvas, {\n    ref: ref => setSigPad(ref),\n    penColor: \"black\",\n    canvasProps: {\n      width: 350,\n      height: 200,\n      style: {\n        border: '1px dashed #2196F3',\n        margin: '0 auto',\n        display: 'block'\n      },\n      className: 'sigCanvas'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    disabled: disabled,\n    style: {\n      position: 'relative',\n      top: 5,\n      left: 22\n    },\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => handleClear(),\n    disableElevation: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, t('str_clear'))), __jsx(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    disabled: disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, closeButtonText), __jsx(Button, {\n    onClick: () => handleSave(),\n    color: \"primary\",\n    disabled: disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, saveButtonText)));\n};\n\nconst SignerPad = ({\n  id,\n  name,\n  label,\n  required,\n  disabled,\n  fullWidth,\n  size,\n  variant,\n  error,\n  helperText,\n  optionLabel,\n  optionKey,\n  defValue,\n  trgQueryKey,\n  onUpdateCallBack\n}) => {\n  const {\n    t\n  } = useTranslation();\n  const {\n    GENERAL_SETTINGS\n  } = useContext(WebCmsGlobal);\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const useToken = useSelector(state => {\n    var _state$orest, _state$orest$currentU;\n\n    return (state === null || state === void 0 ? void 0 : (_state$orest = state.orest) === null || _state$orest === void 0 ? void 0 : (_state$orest$currentU = _state$orest.currentUser) === null || _state$orest$currentU === void 0 ? void 0 : _state$orest$currentU.auth.access_token) || false;\n  });\n  const {\n    0: openSignerPadDialog,\n    1: setOpenSignerPadDialog\n  } = useState(false);\n  const {\n    0: openViewerDialog,\n    1: setOpenViewerDialog\n  } = useState(false);\n  const {\n    0: fileUrl,\n    1: setFileUrl\n  } = useState(false);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n\n  const getIsFileExists = (code, mid) => {\n    return ViewList({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.RAFILE,\n      token: useToken,\n      params: {\n        query: `code::${code},masterid::${mid}`,\n        limit: 1,\n        allhotels: true\n      }\n    }).then(rafileViewListResponse => {\n      var _rafileViewListRespon;\n\n      if (rafileViewListResponse.status === 200 && (rafileViewListResponse === null || rafileViewListResponse === void 0 ? void 0 : (_rafileViewListRespon = rafileViewListResponse.data) === null || _rafileViewListRespon === void 0 ? void 0 : _rafileViewListRespon.data.length) > 0) {\n        return rafileViewListResponse.data.data[0];\n      } else {\n        return false;\n      }\n    }).catch(() => {\n      return false;\n    });\n  };\n\n  const handleFileUpload = async useFile => {\n    const fileUpload = (code, mid, trgQueryKey, file) => {\n      const signFile = dataURLtoFile(file, `${optionLabel}-${mid}.png`);\n      return Upload({\n        apiUrl: GENERAL_SETTINGS.OREST_URL,\n        token: useToken,\n        params: {\n          code: code,\n          masterid: mid,\n          orsactive: true,\n          hotelrefno: trgQueryKey\n        },\n        files: [signFile]\n      }).then(fileUploadResponse => {\n        if (fileUploadResponse.status === 200 && fileUploadResponse.data.count > 0) {\n          return fileUploadResponse.data.data.url.replace('/var/otello', '').replace('/public', '');\n        } else {\n          return false;\n        }\n      }).catch(() => {\n        return false;\n      });\n    };\n\n    const fileDelete = (gid, hotelrefno) => {\n      return Delete({\n        apiUrl: GENERAL_SETTINGS.OREST_URL,\n        endpoint: OREST_ENDPOINT.RAFILE,\n        token: useToken,\n        gid: gid,\n        params: {\n          hotelrefno: hotelrefno\n        }\n      }).then(rafileDeleteResponse => {\n        return rafileDeleteResponse.status === 200;\n      }).catch(() => {\n        return false;\n      });\n    };\n\n    setIsLoading(true);\n    const fileIsExists = await getIsFileExists(optionKey, defValue);\n\n    if (fileIsExists) {\n      await fileDelete(fileIsExists.gid, fileIsExists.hotelrefno);\n    }\n\n    const fileIsUpload = await fileUpload(optionKey, defValue, trgQueryKey, useFile);\n\n    if (fileIsUpload) {\n      onUpdateCallBack();\n      enqueueSnackbar(t('str_fileSuccessfullyUploaded'), {\n        variant: 'info'\n      });\n      setOpenSignerPadDialog(false);\n    } else {\n      onUpdateCallBack();\n      enqueueSnackbar(t('str_unexpectedProblem'), {\n        variant: 'info'\n      });\n    }\n\n    setIsLoading(false);\n  };\n\n  const handleOpenFile = async () => {\n    const fileIsExists = await getIsFileExists(optionKey, defValue);\n\n    if (fileIsExists) {\n      setFileUrl(GENERAL_SETTINGS.STATIC_URL + fileIsExists.url.replace('/var/otello', '').replace('/public', ''));\n      setOpenViewerDialog(true);\n    } else {\n      enqueueSnackbar(t('str_fileDoesntExist'), {\n        variant: 'info'\n      });\n    }\n  };\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }\n  }, __jsx(TextField, {\n    id: id,\n    name: name,\n    label: label,\n    required: required,\n    disabled: disabled,\n    fullWidth: fullWidth,\n    size: size,\n    variant: variant,\n    error: error,\n    helperText: helperText,\n    InputLabelProps: {\n      shrink: false\n    },\n    InputProps: {\n      readOnly: true,\n      endAdornment: __jsx(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 25\n        }\n      }, __jsx(IconButton, {\n        title: t('str_upload'),\n        disabled: disabled,\n        onClick: () => setOpenSignerPadDialog(true),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 29\n        }\n      }, __jsx(Edit, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 33\n        }\n      })), __jsx(IconButton, {\n        title: t('str_view'),\n        disabled: disabled,\n        onClick: () => handleOpenFile(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 29\n        }\n      }, __jsx(Visibility, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 33\n        }\n      })))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }), __jsx(SignerPadDialog, {\n    disabled: isLoading,\n    label: label,\n    saveButtonText: t('str_save'),\n    closeButtonText: t('str_close'),\n    open: openSignerPadDialog,\n    handleClose: () => setOpenSignerPadDialog(false),\n    onCallback: useFile => useFile && handleFileUpload(useFile),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }\n  }), __jsx(FileViewer, {\n    label: label,\n    closeButtonText: t('str_close'),\n    open: openViewerDialog,\n    fileUrl: fileUrl,\n    handleClose: () => setOpenViewerDialog(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default SignerPad;","map":{"version":3,"sources":["/Users/mata/app-cloudweb/@webcms-ui/core/signer-pad/index.js"],"names":["React","useContext","useEffect","useState","useSelector","Button","Dialog","DialogActions","DialogContent","DialogTitle","IconButton","InputAdornment","TextField","Edit","Visibility","SignatureCanvas","useTranslation","WebCmsGlobal","useSnackbar","Delete","Upload","ViewList","dataURLtoFile","OREST_ENDPOINT","FileViewer","label","open","handleClose","fileUrl","closeButtonText","width","SignerPadDialog","disabled","onCallback","saveButtonText","t","trimmedDataURL","setTrimmedDataURL","sigPad","setSigPad","handleSave","getTrimmedCanvas","toDataURL","handleClear","clear","ref","height","style","border","margin","display","className","position","top","left","SignerPad","id","name","required","fullWidth","size","variant","error","helperText","optionLabel","optionKey","defValue","trgQueryKey","onUpdateCallBack","GENERAL_SETTINGS","enqueueSnackbar","useToken","state","orest","currentUser","auth","access_token","openSignerPadDialog","setOpenSignerPadDialog","openViewerDialog","setOpenViewerDialog","setFileUrl","isLoading","setIsLoading","getIsFileExists","code","mid","apiUrl","OREST_URL","endpoint","RAFILE","token","params","query","limit","allhotels","then","rafileViewListResponse","status","data","length","catch","handleFileUpload","useFile","fileUpload","file","signFile","masterid","orsactive","hotelrefno","files","fileUploadResponse","count","url","replace","fileDelete","gid","rafileDeleteResponse","fileIsExists","fileIsUpload","handleOpenFile","STATIC_URL","shrink","readOnly","endAdornment"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    IconButton,\n    InputAdornment,\n    TextField,\n} from '@material-ui/core'\nimport { Edit, Visibility } from '@material-ui/icons'\nimport SignatureCanvas from 'react-signature-canvas'\nimport useTranslation from 'lib/translations/hooks/useTranslation'\nimport WebCmsGlobal from 'components/webcms-global'\nimport { useSnackbar } from 'notistack'\nimport { Delete, Upload, ViewList } from '@webcms/orest'\nimport { dataURLtoFile, OREST_ENDPOINT } from 'model/orest/constants'\n\nconst FileViewer = ({label, open, handleClose, fileUrl, closeButtonText}) => {\n    return (\n        <Dialog fullWidth={true} maxWidth=\"xs\" open={open} onClose={handleClose}>\n            <DialogTitle>{label}</DialogTitle>\n            <DialogContent dividers>\n                {fileUrl ? <img src={fileUrl} style={{ width:'100%' }} />: 'Not file'}\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose} color=\"primary\">\n                    {closeButtonText}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nconst SignerPadDialog = ({disabled, label, open, handleClose, onCallback, saveButtonText, closeButtonText}) => {\n    const { t } = useTranslation()\n    const [trimmedDataURL, setTrimmedDataURL] = useState(null)\n    const [sigPad, setSigPad] = useState(false)\n\n    useEffect(() => {\n        if(typeof onCallback === \"function\"){\n            onCallback(trimmedDataURL)\n        }\n    }, [trimmedDataURL])\n\n    const handleSave = () => {\n        setTrimmedDataURL(sigPad.getTrimmedCanvas().toDataURL('image/png'))\n    }\n\n    const handleClear = () => {\n        sigPad.clear()\n    }\n\n    return (\n        <Dialog fullWidth={true} maxWidth=\"xs\" open={open} onClose={handleClose}>\n            <DialogTitle id=\"max-width-dialog-title\">{label}</DialogTitle>\n            <DialogContent dividers>\n                <SignatureCanvas\n                    ref={(ref) => setSigPad(ref)}\n                    penColor='black'\n                    canvasProps={{\n                        width: 350,\n                        height: 200,\n                        style: {\n                            border: '1px dashed #2196F3',\n                            margin: '0 auto',\n                            display: 'block',\n                        }, className: 'sigCanvas',\n                    }} />\n                <Button disabled={disabled} style={{ position: 'relative', top: 5, left: 22 }} variant=\"contained\" color=\"primary\" onClick={()=> handleClear()} disableElevation>\n                    {t('str_clear')}\n                </Button>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose} color=\"primary\" disabled={disabled}>\n                    {closeButtonText}\n                </Button>\n                <Button onClick={() => handleSave()} color=\"primary\" disabled={disabled}>\n                    {saveButtonText}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nconst SignerPad = ({ id, name, label, required, disabled, fullWidth, size, variant, error, helperText, optionLabel, optionKey, defValue, trgQueryKey, onUpdateCallBack }) => {\n    const { t } = useTranslation()\n    const { GENERAL_SETTINGS } = useContext(WebCmsGlobal)\n    const { enqueueSnackbar } = useSnackbar()\n    const useToken = useSelector((state) => state?.orest?.currentUser?.auth.access_token || false)\n    const [ openSignerPadDialog, setOpenSignerPadDialog ] = useState(false)\n    const [ openViewerDialog, setOpenViewerDialog ] = useState(false)\n    const [ fileUrl, setFileUrl ] = useState(false)\n    const [ isLoading, setIsLoading ] = useState(false)\n\n    const getIsFileExists = (code, mid) => {\n        return ViewList({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.RAFILE,\n            token: useToken,\n            params: {\n                query: `code::${code},masterid::${mid}`,\n                limit: 1,\n                allhotels: true,\n            },\n        }).then((rafileViewListResponse) => {\n            if (rafileViewListResponse.status === 200 && rafileViewListResponse?.data?.data.length > 0) {\n                return rafileViewListResponse.data.data[0]\n            } else {\n                return false\n            }\n        }).catch(() => {\n            return false\n        })\n    }\n\n    const handleFileUpload = async (useFile) => {\n        const fileUpload = (code, mid, trgQueryKey, file) => {\n            const signFile = dataURLtoFile(file, `${optionLabel}-${mid}.png`)\n            return Upload({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                token: useToken,\n                params: {\n                    code: code,\n                    masterid: mid,\n                    orsactive: true,\n                    hotelrefno: trgQueryKey\n                },\n                files: [signFile],\n            }).then((fileUploadResponse) => {\n                if (fileUploadResponse.status === 200 && fileUploadResponse.data.count > 0) {\n                    return fileUploadResponse.data.data.url.replace('/var/otello', '').replace('/public', '')\n                } else {\n                    return false\n                }\n            }).catch(() => {\n                return false\n            })\n        }\n\n        const fileDelete = (gid, hotelrefno) => {\n            return Delete({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: OREST_ENDPOINT.RAFILE,\n                token: useToken,\n                gid: gid,\n                params: {\n                    hotelrefno: hotelrefno,\n                },\n            }).then((rafileDeleteResponse) => {\n                return rafileDeleteResponse.status === 200\n            }).catch(() => {\n                return false\n            })\n        }\n\n        setIsLoading(true)\n        const fileIsExists = await getIsFileExists(optionKey, defValue)\n        if(fileIsExists){\n            await fileDelete(fileIsExists.gid, fileIsExists.hotelrefno)\n        }\n\n        const fileIsUpload = await fileUpload(optionKey, defValue, trgQueryKey, useFile)\n        if(fileIsUpload){\n            onUpdateCallBack()\n            enqueueSnackbar(t('str_fileSuccessfullyUploaded'), { variant: 'info' })\n            setOpenSignerPadDialog(false)\n        }else{\n            onUpdateCallBack()\n            enqueueSnackbar(t('str_unexpectedProblem'), { variant: 'info' })\n        }\n        setIsLoading(false)\n    }\n\n    const handleOpenFile = async () => {\n        const fileIsExists = await getIsFileExists(optionKey, defValue)\n        if(fileIsExists){\n            setFileUrl(GENERAL_SETTINGS.STATIC_URL + fileIsExists.url.replace('/var/otello', '').replace('/public', ''))\n            setOpenViewerDialog(true)\n        }else {\n            enqueueSnackbar(t('str_fileDoesntExist'), { variant: 'info' })\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <TextField\n                id={id}\n                name={name}\n                label={label}\n                required={required}\n                disabled={disabled}\n                fullWidth={fullWidth}\n                size={size}\n                variant={variant}\n                error={error}\n                helperText={helperText}\n                InputLabelProps={{\n                    shrink: false,\n                }}\n                InputProps={{\n                    readOnly: true,\n                    endAdornment: (\n                        <InputAdornment position=\"end\">\n                            <IconButton title={t('str_upload')} disabled={disabled} onClick={()=> setOpenSignerPadDialog(true)}>\n                                <Edit />\n                            </IconButton>\n                            <IconButton title={t('str_view')} disabled={disabled} onClick={() => handleOpenFile()}>\n                                <Visibility />\n                            </IconButton>\n                        </InputAdornment>\n                    ),\n                }}\n            />\n            <SignerPadDialog\n                disabled={isLoading}\n                label={label}\n                saveButtonText={t('str_save')}\n                closeButtonText={t('str_close')}\n                open={openSignerPadDialog}\n                handleClose={()=> setOpenSignerPadDialog(false)}\n                onCallback={(useFile) => useFile && handleFileUpload(useFile)}\n            />\n            <FileViewer\n                label={label}\n                closeButtonText={t('str_close')}\n                open={openViewerDialog}\n                fileUrl={fileUrl}\n                handleClose={()=> setOpenViewerDialog(false)}\n            />\n        </React.Fragment>\n    )\n}\n\nexport default SignerPad"]},"metadata":{},"sourceType":"module"}