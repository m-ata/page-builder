{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/guest/public/SelectHotel.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { UseOrest } from '@webcms/orest';\nimport { setToState as _setToState, updateState as _updateState } from 'state/actions';\nimport { useSelector } from 'react-redux';\nimport { Container } from '@material-ui/core';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nimport WebCmsGlobal from 'components/webcms-global';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport { jsonGroupBy, LOCAL_STORAGE_OREST_TOKEN_TEXT } from 'model/orest/constants';\nimport Grid from '@material-ui/core/Grid';\nimport withWidth from '@material-ui/core/withWidth';\nimport { useSnackbar } from 'notistack';\nimport { useRouter } from 'next/router';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflowX: 'hidden',\n      backgroundColor: theme.palette.background.paper,\n      minHeight: 600,\n      height: '100vh',\n      borderRadius: 2\n    },\n    gridList: {\n      width: '100%',\n      marginBottom: '25px!important'\n    },\n    gridListTitle: {\n      height: 55,\n      background: '#e3eaea',\n      borderBottom: '1px solid rgb(224 224 224)',\n      color: '#79756d'\n    },\n    icon: {\n      color: 'rgb(255 255 255 / 83%)'\n    }\n  };\n});\n\nvar HotelCard = function HotelCard(_ref) {\n  var title = _ref.title,\n      imgUrl = _ref.imgUrl,\n      _onClick = _ref.onClick;\n  return __jsx(Card, {\n    onClick: function onClick() {\n      return _onClick();\n    },\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, __jsx(CardActionArea, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, __jsx(CardMedia, {\n    component: \"img\",\n    height: \"190\",\n    image: imgUrl,\n    alt: title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }), __jsx(CardContent, {\n    style: {\n      padding: '0 10px 0 10px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    alignItems: \"center\",\n    justify: 'space-between',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }, __jsx(Typography, {\n    variant: \"button\",\n    component: \"div\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 29\n    }\n  }, title)), __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }, __jsx(IconButton, {\n    style: {\n      position: 'relative',\n      left: 10\n    },\n    onClick: function onClick() {\n      return _onClick();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 29\n    }\n  }, __jsx(ArrowForwardIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 33\n    }\n  })))))));\n};\n\n_c = HotelCard;\n\nvar SelectHotel = function SelectHotel(props) {\n  _s();\n\n  var setToState = props.setToState,\n      onClose = props.onClose;\n  var classes = useStyles();\n  var router = useRouter();\n  var currentUser = useSelector(function (state) {\n    return state.orest.currentUser && state.orest.currentUser;\n  });\n  var token = useSelector(function (state) {\n    var _state$orest, _state$orest$currentU, _state$orest$currentU2;\n\n    return (state === null || state === void 0 ? void 0 : (_state$orest = state.orest) === null || _state$orest === void 0 ? void 0 : (_state$orest$currentU = _state$orest.currentUser) === null || _state$orest$currentU === void 0 ? void 0 : (_state$orest$currentU2 = _state$orest$currentU.auth) === null || _state$orest$currentU2 === void 0 ? void 0 : _state$orest$currentU2.access_token) || false;\n  });\n  var hotelRefNo = Number(router.query.hotelrefno);\n\n  var _useSnackbar = useSnackbar(),\n      enqueueSnackbar = _useSnackbar.enqueueSnackbar;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useContext = useContext(WebCmsGlobal),\n      GENERAL_SETTINGS = _useContext.GENERAL_SETTINGS;\n\n  useEffect(function () {\n    var active = true;\n\n    if (active && hotelRefNo) {\n      var _GENERAL_SETTINGS$HOT;\n\n      var useHotelRefno = (GENERAL_SETTINGS === null || GENERAL_SETTINGS === void 0 ? void 0 : (_GENERAL_SETTINGS$HOT = GENERAL_SETTINGS.HOTEL_CHAIN_LIST) === null || _GENERAL_SETTINGS$HOT === void 0 ? void 0 : _GENERAL_SETTINGS$HOT.find(function (item) {\n        return item.id === hotelRefNo;\n      })) || false;\n\n      if (useHotelRefno) {\n        handleHotelSelect(useHotelRefno.id, useHotelRefno.code);\n      }\n    }\n\n    return function () {\n      active = false;\n    };\n  }, [hotelRefNo]);\n\n  var handleHotelSelect = function handleHotelSelect(id, code) {\n    if (id) {\n      if (currentUser) {\n        UseOrest({\n          apiUrl: GENERAL_SETTINGS.OREST_URL,\n          endpoint: 'tools/changehotel',\n          method: 'PUT',\n          token: token,\n          params: {\n            hotelrefno: id\n          }\n        }).then(function (respose) {\n          if (respose.data && respose.data.data && respose.data.data.res) {\n            setToState('guest', ['changeHotelRefno'], respose.data.data.res);\n            setToState('guest', ['changeHotelName'], code);\n            enqueueSnackbar(t('str_hotelChangedSuccessfully'), {\n              variant: 'success'\n            });\n          } else {\n            enqueueSnackbar(t('str_unexpectedProblem'), {\n              variant: 'warning'\n            });\n          }\n        })[\"catch\"](function () {\n          enqueueSnackbar(t('str_unexpectedProblem'), {\n            variant: 'warning'\n          });\n        });\n      } else {\n        setToState('guest', ['changeHotelRefno'], id);\n        setToState('guest', ['changeHotelName'], code);\n      }\n\n      if (typeof onClose === 'function') {\n        setToState('guest', ['infoListOneGroup', 'id'], false);\n        setToState('guest', ['infoListOneGroup', 'groupName'], false);\n        setToState('guest', ['infoListOneGroup', 'data'], false);\n        setToState('guest', ['infoListOneGroup', 'langcode'], false);\n        setToState('guest', ['infoListOneGroup', 'chainid'], false);\n        onClose();\n      }\n    }\n  };\n\n  var newHotelList = jsonGroupBy(GENERAL_SETTINGS.HOTEL_CHAIN_LIST, 'countryAndCity');\n  return __jsx(Container, {\n    maxWidth: \"md\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, newHotelList && Object.keys(newHotelList).sort().reverse().map(function (groupName, index) {\n    return __jsx(\"div\", {\n      className: classes.gridList,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 25\n      }\n    }, __jsx(\"div\", {\n      className: classes.gridListTitle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 29\n      }\n    }, __jsx(Typography, {\n      variant: \"h6\",\n      component: \"div\",\n      style: {\n        padding: 10\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 33\n      }\n    }, groupName)), __jsx(Grid, {\n      container: true,\n      justify: 'space-between',\n      alignItems: 'center',\n      spacing: 2,\n      style: {\n        padding: '12px 10px 10px 15px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 29\n      }\n    }, newHotelList && newHotelList[groupName].sort(function (a, b) {\n      return a.code - b.code;\n    }).map(function (hotel) {\n      return __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 37\n        }\n      }, __jsx(HotelCard, {\n        key: hotel.code,\n        title: hotel.code,\n        imgUrl: hotel.thumbnail && GENERAL_SETTINGS.STATIC_URL + hotel.thumbnail,\n        onClick: function onClick() {\n          return handleHotelSelect(hotel.id, hotel.code);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 41\n        }\n      }));\n    })));\n  })));\n};\n\n_s(SelectHotel, \"cksiMlRzwa3SDCZUxG/WrTKzesQ=\", false, function () {\n  return [useStyles, useRouter, useSelector, useSelector, useSnackbar, useTranslation];\n});\n\n_c2 = SelectHotel;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    state: state.formReducer.guest\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateState: function updateState(stateType, stateName, value) {\n      return dispatch(_updateState(stateType, stateName, value));\n    },\n    setToState: function setToState(stateType, stateName, value) {\n      return dispatch(_setToState(stateType, stateName, value));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withWidth()(SelectHotel));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"HotelCard\");\n$RefreshReg$(_c2, \"SelectHotel\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/guest/public/SelectHotel.js"],"names":["React","useEffect","useContext","connect","UseOrest","setToState","updateState","useSelector","Container","useTranslation","WebCmsGlobal","makeStyles","Card","CardActionArea","CardContent","CardMedia","Typography","jsonGroupBy","LOCAL_STORAGE_OREST_TOKEN_TEXT","Grid","withWidth","useSnackbar","useRouter","IconButton","ArrowForwardIcon","useStyles","theme","root","display","flexWrap","justifyContent","overflowX","backgroundColor","palette","background","paper","minHeight","height","borderRadius","gridList","width","marginBottom","gridListTitle","borderBottom","color","icon","HotelCard","title","imgUrl","onClick","padding","position","left","SelectHotel","props","onClose","classes","router","currentUser","state","orest","token","auth","access_token","hotelRefNo","Number","query","hotelrefno","enqueueSnackbar","t","GENERAL_SETTINGS","active","useHotelRefno","HOTEL_CHAIN_LIST","find","item","id","handleHotelSelect","code","apiUrl","OREST_URL","endpoint","method","params","then","respose","data","res","variant","newHotelList","Object","keys","sort","reverse","map","groupName","index","a","b","hotel","thumbnail","STATIC_URL","mapStateToProps","formReducer","guest","mapDispatchToProps","dispatch","stateType","stateName","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext } from 'react'\nimport { connect } from 'react-redux'\nimport { UseOrest } from '@webcms/orest'\nimport { setToState, updateState } from 'state/actions'\nimport { useSelector } from 'react-redux'\nimport { Container } from '@material-ui/core'\nimport useTranslation from 'lib/translations/hooks/useTranslation'\nimport WebCmsGlobal from 'components/webcms-global'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardActionArea from '@material-ui/core/CardActionArea'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport Typography from '@material-ui/core/Typography'\nimport { jsonGroupBy, LOCAL_STORAGE_OREST_TOKEN_TEXT } from 'model/orest/constants'\nimport Grid from '@material-ui/core/Grid'\nimport withWidth from '@material-ui/core/withWidth'\nimport { useSnackbar } from 'notistack'\nimport { useRouter } from 'next/router'\nimport IconButton from '@material-ui/core/IconButton'\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflowX: 'hidden',\n        backgroundColor: theme.palette.background.paper,\n        minHeight: 600,\n        height:'100vh',\n        borderRadius: 2,\n    },\n    gridList: {\n        width: '100%',\n        marginBottom: '25px!important'\n    },\n    gridListTitle: {\n        height: 55,\n        background: '#e3eaea',\n        borderBottom: '1px solid rgb(224 224 224)',\n        color: '#79756d'\n    },\n    icon: {\n        color: 'rgb(255 255 255 / 83%)',\n    },\n}))\n\nconst HotelCard = ({title, imgUrl, onClick}) => {\n    return (\n        <Card onClick={() => onClick()} variant=\"outlined\">\n            <CardActionArea>\n                <CardMedia\n                    component=\"img\"\n                    height=\"190\"\n                    image={imgUrl}\n                    alt={title}\n                />\n                <CardContent style={{padding: '0 10px 0 10px'}}>\n                    <Grid container direction=\"row\" alignItems=\"center\" justify={'space-between'}>\n                        <Grid item>\n                            <Typography variant=\"button\" component=\"div\">\n                                {title}\n                            </Typography>\n                        </Grid>\n                        <Grid item>\n                            <IconButton style={{ position: 'relative', left: 10 }} onClick={() => onClick()}>\n                                <ArrowForwardIcon/>\n                            </IconButton>\n                        </Grid>\n                    </Grid>\n                </CardContent>\n            </CardActionArea>\n        </Card>\n    )\n}\n\nconst SelectHotel = (props) => {\n    const { setToState, onClose } = props\n    const classes = useStyles()\n    const router = useRouter()\n\n    let currentUser = useSelector((state) => state.orest.currentUser && state.orest.currentUser)\n    const token = useSelector((state) => state?.orest?.currentUser?.auth?.access_token || false)\n    const hotelRefNo = Number(router.query.hotelrefno)\n\n    const { enqueueSnackbar } = useSnackbar()\n    const { t } = useTranslation()\n    const { GENERAL_SETTINGS } = useContext(WebCmsGlobal)\n\n    useEffect(() => {\n        let active = true\n\n        if(active && hotelRefNo){\n            const useHotelRefno = GENERAL_SETTINGS?.HOTEL_CHAIN_LIST?.find(item => item.id === hotelRefNo) || false\n            if(useHotelRefno){\n                handleHotelSelect(useHotelRefno.id, useHotelRefno.code)\n            }\n        }\n\n        return () => {\n            active = false\n        }\n    }, [hotelRefNo])\n\n    const handleHotelSelect = (id, code) => {\n        if (id) {\n            if(currentUser){\n                UseOrest({\n                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                    endpoint: 'tools/changehotel',\n                    method: 'PUT',\n                    token,\n                    params: {\n                        hotelrefno: id\n                    },\n                }).then((respose) => {\n                    if(respose.data && respose.data.data && respose.data.data.res){\n                        setToState('guest', ['changeHotelRefno'], respose.data.data.res)\n                        setToState('guest', ['changeHotelName'], code)\n                        enqueueSnackbar(t('str_hotelChangedSuccessfully'), { variant: 'success' })\n                    }else{\n                        enqueueSnackbar(t('str_unexpectedProblem'), { variant: 'warning' })\n                    }\n\n                }).catch(()=>{\n                    enqueueSnackbar(t('str_unexpectedProblem'), { variant: 'warning' })\n                })\n            }else {\n                setToState('guest', ['changeHotelRefno'], id)\n                setToState('guest', ['changeHotelName'], code)\n            }\n\n            if(typeof onClose === 'function'){\n                setToState('guest', ['infoListOneGroup', 'id'], false)\n                setToState('guest', ['infoListOneGroup', 'groupName'], false)\n                setToState('guest', ['infoListOneGroup', 'data'], false)\n                setToState('guest', ['infoListOneGroup', 'langcode'], false)\n                setToState('guest', ['infoListOneGroup', 'chainid'], false)\n                onClose()\n            }\n        }\n    }\n\n    let newHotelList = jsonGroupBy(GENERAL_SETTINGS.HOTEL_CHAIN_LIST, 'countryAndCity')\n\n    return (\n        <Container maxWidth=\"md\">\n            <div className={classes.root}>\n                {newHotelList &&\n                Object.keys(newHotelList).sort().reverse().map((groupName, index) => {\n                    return (\n                        <div className={classes.gridList} key={index}>\n                            <div className={classes.gridListTitle}>\n                                <Typography variant=\"h6\" component=\"div\" style={{padding: 10}}>\n                                    {groupName}\n                                </Typography>\n                            </div>\n                            <Grid container justify={'space-between'} alignItems={'center'} spacing={2} style={{padding: '12px 10px 10px 15px'}}>\n                                {newHotelList && newHotelList[groupName].sort((a, b) => { return a.code - b.code}).map((hotel) => (\n                                    <Grid item xs={12} sm={6}>\n                                        <HotelCard\n                                            key={hotel.code}\n                                            title={hotel.code}\n                                            imgUrl={hotel.thumbnail && GENERAL_SETTINGS.STATIC_URL + hotel.thumbnail}\n                                            onClick={()=> handleHotelSelect(hotel.id, hotel.code)}\n                                        />\n                                    </Grid>\n                                ))}\n                            </Grid>\n                        </div>\n                    )\n                })}\n            </div>\n        </Container>\n\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        state: state.formReducer.guest,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    updateState: (stateType, stateName, value) => dispatch(updateState(stateType, stateName, value)),\n    setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withWidth()(SelectHotel))\n"]},"metadata":{},"sourceType":"module"}