{"ast":null,"code":"const helpers = {\n  microName: mircoName => {\n    return '/api/' + mircoName;\n  },\n  getUrl: (res, endPoint, gid) => {\n    if (gid) {\n      return res.GENERAL_SETTINGS.OREST_URL + endPoint + '/' + gid;\n    }\n\n    return res.GENERAL_SETTINGS.OREST_URL + endPoint;\n  },\n  getHeaders: (req, res, token = false, isClientToken = false) => {\n    if (token) {\n      if (isClientToken) {\n        return {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json',\n          'User-Agent': `WebCMS/${req.currentVersion || \"\"} (WebCMS MS)`\n        };\n      } else {\n        return {\n          Authorization: `Bearer ${token || res.OREST_CACHE_TOKEN}`,\n          ReqType: 'Company',\n          'Content-Type': 'application/json',\n          'User-Agent': `WebCMS/${req.currentVersion || \"\"} (WebCMS MS)`\n        };\n      }\n    } else {\n      return {\n        Authorization: `Bearer ${req.query.hoteltoken && req.query.hoteltoken || token || res.OREST_CACHE_TOKEN}`,\n        ReqType: 'Company',\n        'Content-Type': 'application/json',\n        'User-Agent': `WebCMS/${req.currentVersion || \"\"} (WebCMS MS)`\n      };\n    }\n  },\n  getSettings: (req, res, key) => {\n    return req.query.hotelrefno || res.GENERAL_SETTINGS[key.toUpperCase()];\n  },\n  isHotech: res => {\n    return res && res.GENERAL_SETTINGS && res.GENERAL_SETTINGS.isHotech || false;\n  },\n  isEmpty: val => {\n    return val === \"\" || val === null;\n  },\n  strIsJson: str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  },\n  creditCardMask: num => {\n    return `${'*'.repeat(num.length - 4)}${num.substr(num.length - 4)}`;\n  },\n  generatePassword: () => {\n    let length = 8,\n        charset = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\",\n        retVal = \"\";\n\n    for (let i = 0, n = charset.length; i < length; ++i) {\n      retVal += charset.charAt(Math.floor(Math.random() * n));\n    }\n\n    return retVal.toLowerCase();\n  },\n  formatMoney: (amount, decimalCount = 2, decimal = '.', thousands = ',') => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n      const negativeSign = amount < 0 ? '-' : '';\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = i.length > 3 ? i.length % 3 : 0;\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, '$1' + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : '');\n    } catch (e) {\n      console.log(e);\n    }\n  },\n  mobileTelNoFormat: telno => {\n    String.prototype.replaceAll = function (search, replacement) {\n      var target = this;\n      return target.split(search).join(replacement);\n    };\n\n    return (telno === null || telno === void 0 ? void 0 : telno.replaceAll(' ', '').replaceAll('-', '').replaceAll('(', '').replaceAll(')', '').replaceAll('+', '00')) || '';\n  }\n};\nmodule.exports = helpers;","map":{"version":3,"sources":["/Users/mata/app-cloudweb/@api/core/helpers.js"],"names":["helpers","microName","mircoName","getUrl","res","endPoint","gid","GENERAL_SETTINGS","OREST_URL","getHeaders","req","token","isClientToken","Authorization","currentVersion","OREST_CACHE_TOKEN","ReqType","query","hoteltoken","getSettings","key","hotelrefno","toUpperCase","isHotech","isEmpty","val","strIsJson","str","JSON","parse","e","creditCardMask","num","repeat","length","substr","generatePassword","charset","retVal","i","n","charAt","Math","floor","random","toLowerCase","formatMoney","amount","decimalCount","decimal","thousands","abs","isNaN","negativeSign","parseInt","Number","toFixed","toString","j","replace","slice","console","log","mobileTelNoFormat","telno","String","prototype","replaceAll","search","replacement","target","split","join","module","exports"],"mappings":"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","sourcesContent":["const helpers = {\n    microName: (mircoName) => {\n        return '/api/' + mircoName\n    },\n    getUrl: (res, endPoint, gid) =>{\n        if(gid){\n            return res.GENERAL_SETTINGS.OREST_URL + endPoint + '/' + gid\n        }\n\n        return res.GENERAL_SETTINGS.OREST_URL + endPoint\n    },\n    getHeaders: (req, res, token = false, isClientToken = false) =>{\n        if(token){\n            if(isClientToken){\n                return {\n                    Authorization: `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                    'User-Agent': `WebCMS/${req.currentVersion || \"\"} (WebCMS MS)`\n                }\n            }else {\n                return {\n                    Authorization: `Bearer ${token || res.OREST_CACHE_TOKEN}`,\n                    ReqType: 'Company',\n                    'Content-Type': 'application/json',\n                    'User-Agent': `WebCMS/${req.currentVersion || \"\"} (WebCMS MS)`\n                }\n            }\n        }else{\n            return {\n                Authorization: `Bearer ${req.query.hoteltoken && req.query.hoteltoken || token || res.OREST_CACHE_TOKEN}`,\n                ReqType: 'Company',\n                'Content-Type': 'application/json',\n                'User-Agent': `WebCMS/${req.currentVersion || \"\"} (WebCMS MS)`\n            }\n        }\n    },\n    getSettings: (req, res, key) =>{\n        return req.query.hotelrefno || res.GENERAL_SETTINGS[key.toUpperCase()]\n    },\n    isHotech: (res) =>{\n       return res && res.GENERAL_SETTINGS && res.GENERAL_SETTINGS.isHotech || false\n    },\n    isEmpty:(val)=> {\n        return val === \"\" || val === null\n    },\n    strIsJson:(str) => {\n        try {\n            JSON.parse(str);\n        } catch (e) {\n            return false;\n        }\n        return true;\n    },\n    creditCardMask: (num) => {\n        return `${'*'.repeat(num.length - 4)}${num.substr(num.length - 4)}`\n    },\n    generatePassword: () => {\n        let length = 8,\n            charset = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\",\n            retVal = \"\";\n        for (let i = 0, n = charset.length; i < length; ++i) {\n            retVal += charset.charAt(Math.floor(Math.random() * n));\n        }\n        return retVal.toLowerCase()\n    },\n    formatMoney: (amount, decimalCount = 2, decimal = '.', thousands = ',') => {\n        try {\n            decimalCount = Math.abs(decimalCount)\n            decimalCount = isNaN(decimalCount) ? 2 : decimalCount\n\n            const negativeSign = amount < 0 ? '-' : ''\n\n            let i = parseInt((amount = Math.abs(Number(amount) || 0).toFixed(decimalCount))).toString()\n            let j = i.length > 3 ? i.length % 3 : 0\n\n            return (\n                negativeSign +\n                (j ? i.substr(0, j) + thousands : '') +\n                i.substr(j).replace(/(\\d{3})(?=\\d)/g, '$1' + thousands) +\n                (decimalCount\n                    ? decimal +\n                    Math.abs(amount - i)\n                        .toFixed(decimalCount)\n                        .slice(2)\n                    : '')\n            )\n        } catch (e) {\n            console.log(e)\n        }\n    },\n    mobileTelNoFormat: (telno) => {\n        String.prototype.replaceAll = function(search, replacement) {\n            var target = this;\n            return target.split(search).join(replacement);\n        }\n\n        return telno?.replaceAll(' ', '').replaceAll('-', '').replaceAll('(', '').replaceAll(')', '').replaceAll('+', '00') || ''\n    }\n};\n\nmodule.exports = helpers;"]},"metadata":{},"sourceType":"script"}