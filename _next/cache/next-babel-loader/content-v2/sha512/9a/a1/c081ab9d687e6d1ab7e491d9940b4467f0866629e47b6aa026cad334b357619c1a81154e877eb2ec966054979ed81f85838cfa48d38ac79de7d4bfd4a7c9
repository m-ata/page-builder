{"ast":null,"code":"var _regeneratorRuntime = require(\"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/regenerator\");\n\nvar _toConsumableArray = require(\"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _asyncToGenerator = require(\"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar axios = require('axios');\n\nvar helpers = require('./helpers');\n\nvar orestEndpoint = require('../constants/orest-endpoints.json');\n\nvar getHotelAppLang = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(req, res, langCode) {\n    var hotelLanguageList, targetMergeData;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (langCode) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", []);\n\n          case 2:\n            _context.next = 4;\n            return axios({\n              url: helpers.getUrl(res, orestEndpoint.api.rafileViewList),\n              method: orestEndpoint.methods.get,\n              headers: helpers.getHeaders(req, res),\n              params: {\n                query: \"langcode:\".concat(langCode, \",filetype:HCMLANG.TARGET\")\n              }\n            }).then(function (response) {\n              var _response$data;\n\n              if (response.status === 200 && response !== null && response !== void 0 && (_response$data = response.data) !== null && _response$data !== void 0 && _response$data.data) {\n                return response.data.data;\n              } else {\n                return false;\n              }\n            })[\"catch\"](function () {\n              return false;\n            });\n\n          case 4:\n            hotelLanguageList = _context.sent;\n            targetMergeData = [];\n\n            if (hotelLanguageList) {\n              hotelLanguageList.map(function (trgFile) {\n                var _targetMergeData;\n\n                var mergeData = (trgFile === null || trgFile === void 0 ? void 0 : trgFile.filedata) && JSON.parse(Buffer.from(trgFile.filedata, 'base64').toString('utf-8')) || [];\n                targetMergeData = (_targetMergeData = targetMergeData).concat.apply(_targetMergeData, _toConsumableArray(mergeData));\n              });\n            }\n\n            return _context.abrupt(\"return\", targetMergeData);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getHotelAppLang(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmodule.exports = getHotelAppLang;","map":{"version":3,"sources":["/Users/mata/app-cloudweb/@api/core/get-hotel-app-lang.js"],"names":["axios","require","helpers","orestEndpoint","getHotelAppLang","req","res","langCode","url","getUrl","api","rafileViewList","method","methods","get","headers","getHeaders","params","query","then","response","status","data","hotelLanguageList","targetMergeData","map","trgFile","mergeData","filedata","JSON","parse","Buffer","from","toString","concat","module","exports"],"mappings":";;;;;;AAAA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAMC,OAAO,GAAGD,OAAO,CAAC,WAAD,CAAvB;;AACA,IAAME,aAAa,GAAGF,OAAO,CAAC,mCAAD,CAA7B;;AAEA,IAAMG,eAAe;AAAA,sEAAG,iBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAChBA,QADgB;AAAA;AAAA;AAAA;;AAAA,6CAET,EAFS;;AAAA;AAAA;AAAA,mBAKYP,KAAK,CAAC;AAClCQ,cAAAA,GAAG,EAAEN,OAAO,CAACO,MAAR,CAAeH,GAAf,EAAoBH,aAAa,CAACO,GAAd,CAAkBC,cAAtC,CAD6B;AAElCC,cAAAA,MAAM,EAAET,aAAa,CAACU,OAAd,CAAsBC,GAFI;AAGlCC,cAAAA,OAAO,EAAEb,OAAO,CAACc,UAAR,CAAmBX,GAAnB,EAAwBC,GAAxB,CAHyB;AAIlCW,cAAAA,MAAM,EAAE;AACJC,gBAAAA,KAAK,qBAAcX,QAAd;AADD;AAJ0B,aAAD,CAAL,CAO7BY,IAP6B,CAOxB,UAACC,QAAD,EAAc;AAAA;;AAClB,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAApB,IAA2BD,QAA3B,aAA2BA,QAA3B,iCAA2BA,QAAQ,CAAEE,IAArC,2CAA2B,eAAgBA,IAA/C,EAAqD;AACjD,uBAAOF,QAAQ,CAACE,IAAT,CAAcA,IAArB;AACH,eAFD,MAEK;AACD,uBAAO,KAAP;AACH;AACJ,aAb+B,WAavB,YAAM;AACX,qBAAO,KAAP;AACH,aAf+B,CALZ;;AAAA;AAKdC,YAAAA,iBALc;AAsBhBC,YAAAA,eAtBgB,GAsBE,EAtBF;;AAuBpB,gBAAGD,iBAAH,EAAqB;AACjBA,cAAAA,iBAAiB,CAACE,GAAlB,CAAsB,UAAAC,OAAO,EAAI;AAAA;;AAC7B,oBAAMC,SAAS,GAAG,CAAAD,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEE,QAAT,KAAqBC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,IAAP,CAAYN,OAAO,CAACE,QAApB,EAA8B,QAA9B,EAAwCK,QAAxC,CAAiD,OAAjD,CAAX,CAArB,IAA8F,EAAhH;AACAT,gBAAAA,eAAe,GAAG,oBAAAA,eAAe,EAACU,MAAhB,4CAA0BP,SAA1B,EAAlB;AACH,eAHD;AAIH;;AA5BmB,6CA8BbH,eA9Ba;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAfpB,eAAe;AAAA;AAAA;AAAA,GAArB;;AAiCA+B,MAAM,CAACC,OAAP,GAAiBhC,eAAjB","sourcesContent":["const axios = require('axios')\nconst helpers = require('./helpers')\nconst orestEndpoint = require('../constants/orest-endpoints.json')\n\nconst getHotelAppLang = async (req, res, langCode) => {\n    if(!langCode){\n        return []\n    }\n\n    const hotelLanguageList = await axios({\n        url: helpers.getUrl(res, orestEndpoint.api.rafileViewList),\n        method: orestEndpoint.methods.get,\n        headers: helpers.getHeaders(req, res),\n        params: {\n            query: `langcode:${langCode},filetype:HCMLANG.TARGET`,\n        }\n    }).then((response) => {\n        if (response.status === 200 && response?.data?.data) {\n            return response.data.data\n        }else{\n            return false\n        }\n    }).catch(() => {\n        return false\n    })\n\n    let targetMergeData = []\n    if(hotelLanguageList){\n        hotelLanguageList.map(trgFile => {\n            const mergeData = trgFile?.filedata && JSON.parse(Buffer.from(trgFile.filedata, 'base64').toString('utf-8')) || []\n            targetMergeData = targetMergeData.concat(...mergeData)\n        })\n    }\n\n    return targetMergeData\n}\n\nmodule.exports = getHotelAppLang"]},"metadata":{},"sourceType":"script"}