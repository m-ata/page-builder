{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/pages/portal/index.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect, useContext, useRef } from 'react';\nimport axios from 'axios';\nimport Carousel from 'react-bootstrap/Carousel';\nimport { NextSeo } from 'next-seo';\nimport { useRouter } from 'next/router';\nimport { connect } from 'react-redux';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { Typography, Container, Paper, Box, Card, CardContent, Button, Grid, FormControl, TextField } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport Slider from 'react-slick';\nimport { convertUrlStandard, getHyperlinkParser, jsonGroupBy, OREST_ENDPOINT, REQUEST_METHOD_CONST } from '../../model/orest/constants';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nimport WebCmsGlobal from \"../../components/webcms-global\";\nimport LoadingSpinner from \"../../components/LoadingSpinner\";\nimport { deleteFromState, pushToState, setToState, updateState } from \"../../state/actions\";\nimport DestinationPortalWrapper from \"../../components/destination-portal/components/DestinationPortalWrapper\";\nimport { DetailCardPlaceHolder } from \"../../assets/svg/destination-portal/DetailCardPlaceHolder\";\nimport CategoryItemFullCard from \"../../components/destination-portal/components/CategoryItemFullCard\";\nimport CategoryItemCard from \"../../components/destination-portal/components/CategoryItemCard\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  mainPaper: {\n    padding: \"20px\",\n    marginBottom: 50,\n    [theme.breakpoints.down('sm')]: {\n      padding: \"8px\"\n    }\n  },\n  mainSelectPaper: {\n    background: '#ffffff00'\n  },\n  mainContainter: {\n    paddingLeft: \"64px\",\n    paddingRight: \"64px\",\n    [theme.breakpoints.down('sm')]: {\n      paddingLeft: \"24px\",\n      paddingRight: \"24px\"\n    }\n  },\n  hotelListTitle: {\n    paddingLeft: \"34px\",\n    fontWeight: 'bold',\n    paddingTop: 5,\n    [theme.breakpoints.down('xs')]: {\n      paddingLeft: \"24px\"\n    }\n  },\n  hotelListTitleWithoutPadding: {\n    fontWeight: 'bold',\n    paddingTop: 5,\n    paddingBottom: \"16px\"\n  },\n  seeMore: {\n    textAlign: 'right',\n    float: \"right\",\n    paddingRight: \"34px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      paddingRight: \"31px\"\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      paddingRight: \"24px\"\n    }\n  },\n  seeMoreWithoutPadding: {\n    textAlign: 'right',\n    paddingBottom: \"16px\"\n  },\n  seeMoreButton: {\n    fontSize: \"18px\",\n    fontWeight: \"bold\",\n    textTransform: \"none\",\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: \"16px\"\n    }\n  },\n  searchBackground: {\n    width: \"100%\",\n    position: \"relative\",\n    height: \"650px\",\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n    backgroundRepeat: \"no-repeat\",\n    [theme.breakpoints.down(\"sm\")]: {\n      height: \"386px\"\n    }\n  },\n  searchCard: {\n    position: \"absolute\",\n    width: \"100%\",\n    top: \"96px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      top: \"32px\"\n    },\n    \"& .MuiCardContent-root:last-child\": {\n      paddingBottom: \"16px\"\n    },\n    zIndex: \"2\"\n  },\n  textFieldStyle: {\n    borderRadius: \"5px\",\n    textTransform: \"capitalize\",\n    \"& .MuiInputLabel-root\": {\n      fontSize: \"14px\",\n      fontWeight: \"600\"\n    },\n    \"& input\": {\n      fontSize: \"14px\"\n    },\n    \"& .MuiFormHelperText-root\": {\n      display: \"none\"\n    }\n  },\n  mainTitle: {\n    paddingBottom: \"24px\",\n    fontSize: \"50px\",\n    fontWeight: \"bold\",\n    maxWidth: \"510px\",\n    letterSpacing: \"0\",\n    color: \"#FFFFFF\",\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: \"24px\"\n    }\n  },\n  subTitle: {\n    fontSize: \"30px\",\n    fontWeight: \"bold\",\n    letterSpacing: \"0\",\n    color: \"#FFFFFF\",\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: \"16px\"\n    }\n  },\n  firstGridItemInCard: {\n    display: \"flex\",\n    [theme.breakpoints.down(\"xs\")]: {\n      display: \"grid\"\n    }\n  },\n  dialogContent: {\n    padding: \"24px\",\n    color: \"#122D31\",\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: \"16px\"\n    }\n  },\n  cardRoot: {\n    marginLeft: 10,\n    marginRight: 10,\n    background: '#FFFFFF 0% 0% no-repeat padding-box',\n    borderRadius: 10,\n    opacity: 1\n  }\n}));\n\nfunction DestinationPortal(props) {\n  const classes = useStyles();\n  const {\n    setToState,\n    state\n  } = props;\n  const {\n    GENERAL_SETTINGS,\n    WEBCMS_DATA,\n    locale\n  } = useContext(WebCmsGlobal);\n  const {\n    t\n  } = useTranslation();\n  const router = useRouter();\n  const {\n    0: isLoaded,\n    1: setIsLoaded\n  } = useState(false);\n  const {\n    0: detailCardsIsLoaded,\n    1: setDetailCardsIsLoaded\n  } = useState(false);\n  const {\n    0: screenWidth,\n    1: setScreenWidth\n  } = useState(0);\n  const {\n    0: isHomeSliderLoaded,\n    1: setIsHomeSliderLoaded\n  } = useState(false);\n  const {\n    0: topNFactor,\n    1: setTopNFactor\n  } = useState(1);\n  const topN = 6;\n  const ref = useRef(null);\n\n  const getListData = (catid, topn) => {\n    let options = {\n      url: GENERAL_SETTINGS.BASE_URL + 'api/hotel/app/portal/list',\n      method: REQUEST_METHOD_CONST.POST,\n      params: {}\n    };\n\n    if (catid) {\n      options.params.catid = catid;\n    }\n\n    if (topn) {\n      options.params.topn = topn;\n    }\n\n    axios(options).then(res => {\n      if (res.status === 200) {\n        if (res.data.success) {\n          let array = [];\n\n          if (res.data.data.length > 0) {\n            res.data.data.map(item => {\n              if (item.title !== null) {\n                if (item.catid !== null) {\n                  array.push(item);\n                }\n              }\n            });\n          }\n\n          if (!catid && !topn) {\n            let data;\n            data = jsonGroupBy(array, \"catdesc\");\n            setToState(\"destinationPortal\", [\"notGroupedPortalList\"], array);\n            setToState(\"destinationPortal\", [\"portalList\"], data);\n            setIsLoaded(true);\n          } else {\n            if (router.query.catid) {\n              setToState(\"destinationPortal\", [\"selectedCategory\"], array[0].catdesc);\n              setToState(\"destinationPortal\", [\"catId\"], array[0].catid);\n            }\n\n            setToState(\"destinationPortal\", [\"selectedCategoryList\"], array);\n            setDetailCardsIsLoaded(true);\n          }\n        } else {\n          if (!catid && !topn) {\n            setIsLoaded(true);\n          } else {\n            setDetailCardsIsLoaded(true);\n          }\n        }\n      } else {\n        if (!catid && !topn) {\n          setIsLoaded(true);\n        } else {\n          setDetailCardsIsLoaded(true);\n        }\n      }\n    });\n  };\n\n  const getSliderSetting = (length, slidesToShow) => {\n    return {\n      dots: true,\n      lazyLoad: true,\n      speed: 500,\n      slidesToShow: slidesToShow,\n      infinite: length > slidesToShow,\n      slidesToScroll: 1,\n      centerMode: false,\n      swipeToSlide: true,\n      touchMove: true,\n      responsive: [{\n        breakpoint: 600,\n        settings: {\n          slidesToShow: 1,\n          centerMode: false\n        }\n      }, {\n        breakpoint: 900,\n        settings: {\n          infinite: length > 2,\n          slidesToShow: 2,\n          centerMode: false\n        }\n      }, {\n        breakpoint: 1200,\n        settings: {\n          infinite: length > 3,\n          slidesToShow: 3,\n          centerMode: false\n        }\n      }]\n    };\n  };\n\n  const placeHolderSlideSetting = (length, slideToShow) => {\n    return {\n      dots: true,\n      lazyLoad: true,\n      speed: 500,\n      slidesToShow: slideToShow,\n      infinite: length > 2,\n      slidesToScroll: 1,\n      centerMode: false,\n      swipeToSlide: true,\n      touchMove: true,\n      responsive: [{\n        breakpoint: 600,\n        settings: {\n          slidesToShow: 1,\n          centerMode: false\n        }\n      }, {\n        breakpoint: 960,\n        settings: {\n          slidesToShow: 2,\n          centerMode: false\n        }\n      }, {\n        breakpoint: 1280,\n        settings: {\n          slidesToShow: 3,\n          centerMode: false\n        }\n      }]\n    };\n  };\n\n  const findDestination = (event, newValue) => {\n    const data = newValue;\n\n    if (data !== null) {\n      setToState(\"destinationPortal\", [\"selectedHotel\"], data);\n      router.push({\n        pathname: `guest/detail/${convertUrlStandard(data.title)}`,\n        query: {\n          lang: locale,\n          gid: data.gid\n        }\n      });\n    } else {\n      setToState(\"destinationPortal\", [\"selectedHotel\"], null);\n    }\n  };\n\n  const handleSelectedCategoryList = categoryName => {\n    const catId = state.portalList[categoryName][0].catid;\n    setToState(\"destinationPortal\", [\"selectedCategory\"], categoryName);\n    setToState(\"destinationPortal\", [\"catId\"], catId);\n\n    if (catId) {\n      const routerQuery = {\n        lang: router.query.lang || locale,\n        catid: catId\n      };\n      router.push({\n        query: routerQuery\n      }, undefined, {\n        scroll: false\n      });\n      setDetailCardsIsLoaded(false);\n      getListData(catId, topN * topNFactor);\n\n      if (ref) {\n        ref.current.scrollIntoView();\n        window.scrollTo({\n          top: ref.current.offsetTop,\n          behavior: 'smooth'\n        });\n      }\n    }\n  };\n\n  const handleGetScreenWidth = () => {\n    setScreenWidth(window.innerWidth);\n  };\n\n  const handleGetScroll = () => {\n    setToState(\"destinationPortal\", [\"scrollIndex\"], window.scrollY);\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleGetScroll);\n    return () => window.removeEventListener(\"scroll\", handleGetScroll);\n  }, []);\n  useEffect(() => {\n    setScreenWidth(window.innerWidth);\n    window.addEventListener(\"resize\", handleGetScreenWidth);\n    return () => window.removeEventListener(\"resize\", handleGetScreenWidth);\n  }, []);\n  useEffect(() => {\n    if (topNFactor > 1) {\n      getListData(state.catId, topN * topNFactor);\n    }\n  }, [topNFactor]);\n  useEffect(() => {\n    let routerQuery = router.query;\n    routerQuery.lang = router.query.lang || locale;\n    router.push({\n      query: routerQuery\n    });\n    setToState(\"destinationPortal\", [\"selectedHotel\"], null);\n\n    if (router.query.catid) {\n      getListData(router.query.catid, topN * topNFactor);\n\n      if (ref) {\n        if (isHomeSliderLoaded) {\n          window.scrollTo({\n            top: ref.current.offsetTop,\n            behavior: 'smooth'\n          });\n        }\n      }\n    }\n\n    if (state.notGroupedPortalList.length <= 0) {\n      getListData();\n    } else {\n      setIsLoaded(true);\n    }\n\n    if (state.homeSlider.length <= 0) {\n      axios({\n        url: GENERAL_SETTINGS.BASE_URL + 'api/guestweb/home-slider',\n        method: REQUEST_METHOD_CONST.POST\n      }).then(res => {\n        if (res.status === 200) {\n          if (res.data.success) {\n            if (res.data.data.length > 0) {\n              let array = [];\n              res.data.data.map(item => {\n                if (item.url) {\n                  array.push(item);\n                }\n              });\n              setToState(\"destinationPortal\", [\"homeSlider\"], array);\n            }\n\n            setIsHomeSliderLoaded(true);\n          }\n        } else {\n          setIsHomeSliderLoaded(true);\n        }\n      });\n    } else {\n      setIsHomeSliderLoaded(true);\n    }\n\n    if (state.catId && state.catId !== \"\") {\n      setDetailCardsIsLoaded(true);\n    }\n  }, []);\n  useEffect(() => {\n    if (state.lastScrollIndex > 0 && state.scrollIndex === 0) {\n      window.scrollTo(0, state.lastScrollIndex);\n      setTimeout(() => {\n        setToState(\"destinationPortal\", [\"lastScrollIndex\"], 0);\n      }, 500);\n    }\n  });\n\n  const renderCtaButton = cta => {\n    if (cta) {\n      let link = getHyperlinkParser(cta);\n\n      if (link === false) {\n        return;\n      }\n\n      let href = link.href;\n      let text = (link === null || link === void 0 ? void 0 : link.text) || '';\n      let host = window.location.host;\n      let isExternalLink = false;\n\n      if (href.includes('http') && !href.includes(host)) {\n        isExternalLink = true;\n      }\n\n      if (isExternalLink) {\n        return __jsx(Button, {\n          style: {\n            color: \"#FFFF\"\n          },\n          variant: \"contained\",\n          color: \"primary\",\n          target: \"_blank\",\n          href: href,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 21\n          }\n        }, t(text));\n      } else {\n        return __jsx(Button, {\n          style: {\n            color: \"#FFFF\"\n          },\n          variant: \"contained\",\n          color: \"primary\",\n          href: href,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 21\n          }\n        }, t(text));\n      }\n    }\n  };\n\n  return __jsx(DestinationPortalWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 9\n    }\n  }, __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 13\n    }\n  }, __jsx(NextSeo, {\n    title: WEBCMS_DATA.assets.meta.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    style: {\n      position: \"relative\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 17\n    }\n  }, __jsx(Container, {\n    maxWidth: \"xl\",\n    className: classes.mainContainter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    style: {\n      position: \"relative\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 25\n    }\n  }, __jsx(Card, {\n    className: classes.searchCard,\n    elevation: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 29\n    }\n  }, __jsx(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 33\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 37\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    md: 3 > 5 ? 5 : 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 41\n    }\n  }, __jsx(\"div\", {\n    className: classes.firstGridItemInCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 45\n    }\n  }, __jsx(FormControl, {\n    fullWidth: true,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 49\n    }\n  }, __jsx(Autocomplete, {\n    disabled: !isLoaded,\n    value: state.selectedHotel,\n    onChange: (e, newValue) => findDestination(e, newValue),\n    fullWidth: true,\n    options: state.notGroupedPortalList,\n    getOptionSelected: (option, value) => option.id === value.id,\n    getOptionLabel: option => `${option.title}${option.city ? \",\" + option.city : \"\"}`,\n    renderInput: params => __jsx(TextField, _extends({\n      className: classes.textFieldStyle,\n      color: \"primary\"\n    }, params, {\n      InputProps: _objectSpread(_objectSpread({}, params.InputProps), {}, {\n        endAdornment: __jsx(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 73\n          }\n        }, !isLoaded ? __jsx(LoadingSpinner, {\n          size: 18,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 90\n          }\n        }) : null, params.InputProps.endAdornment)\n      }),\n      label: t(\"str_location\"),\n      placeholder: t(\"str_whereAreYouGoing\"),\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 61\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 53\n    }\n  }))))))))), __jsx(Carousel, {\n    className: \"home-slider\",\n    pause: \"hover\",\n    indicators: !!(state.homeSlider && state.homeSlider.length > 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 21\n    }\n  }, isHomeSliderLoaded && state.homeSlider.length > 0 ? state.homeSlider && state.homeSlider.map((item, ind) => {\n    return __jsx(Carousel.Item, {\n      key: ind,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 41\n      }\n    }, __jsx(\"div\", {\n      className: classes.searchBackground,\n      style: {\n        backgroundImage: `url(${GENERAL_SETTINGS.STATIC_URL}${item.url})`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 45\n      }\n    }), __jsx(Carousel.Caption, {\n      className: \"carousel-description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 45\n      }\n    }, __jsx(Container, {\n      maxWidth: \"xl\",\n      className: classes.mainContainter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 49\n      }\n    }, __jsx(Typography, {\n      className: classes.mainTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 53\n      }\n    }, item.title), __jsx(Typography, {\n      className: classes.subTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 53\n      }\n    }, item.description), item.cta && __jsx(\"div\", {\n      style: {\n        paddingTop: \"24px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 61\n      }\n    }, renderCtaButton(item.cta)))));\n  }) : __jsx(\"img\", {\n    className: classes.searchBackground,\n    style: {\n      maxHeight: \"650px\"\n    },\n    src: \"/imgs/no-image available-placeholder.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 33\n    }\n  }))), __jsx(Container, {\n    maxWidth: \"xl\",\n    className: classes.mainContainter,\n    style: {\n      marginTop: \"30px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    id: \"category\",\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 21\n    }\n  }, router.query.catid ? __jsx(Paper, {\n    elevation: 0,\n    className: classes.mainSelectPaper,\n    key: state.selectedCategory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 597,\n      columnNumber: 33\n    }\n  }, __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"space-between\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 37\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 41\n    }\n  }, __jsx(Typography, {\n    color: \"primary\",\n    variant: \"h6\",\n    gutterBottom: true,\n    className: classes.hotelListTitleWithoutPadding,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 45\n    }\n  }, state.selectedCategory)), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    className: classes.seeMoreWithoutPadding,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 604,\n      columnNumber: 41\n    }\n  }, __jsx(Button, {\n    startIcon: __jsx(ArrowBackIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 60\n      }\n    }),\n    className: classes.seeMoreButton,\n    color: \"primary\",\n    onClick: () => {\n      setToState(\"destinationPortal\", [\"selectedCategory\"], null);\n      router.push({\n        query: {\n          lang: router.query.lang || locale\n        }\n      }, undefined, {\n        scroll: false\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 605,\n      columnNumber: 45\n    }\n  }, t(\"str_back\")))), __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 37\n    }\n  }, detailCardsIsLoaded ? __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 623,\n      columnNumber: 45\n    }\n  }, state.selectedCategoryList && state.selectedCategoryList.map((item, itemKey) => {\n    return __jsx(Grid, {\n      item: true,\n      xs: 12,\n      key: itemKey,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 627,\n        columnNumber: 61\n      }\n    }, __jsx(CategoryItemFullCard, {\n      imageUrl: item.url,\n      hotelName: item.title,\n      location: item.location,\n      point: item.point,\n      isguestapp: item.hasgapp,\n      description: item.description,\n      country: item.country,\n      city: item.city,\n      town: item.town,\n      price: item.price,\n      hotelData: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 628,\n        columnNumber: 65\n      }\n    }));\n  }), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 645,\n      columnNumber: 49\n    }\n  }, state.selectedCategoryList.length > topN * topNFactor ? __jsx(\"div\", {\n    style: {\n      textAlign: \"center\",\n      paddingBottom: \"16px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 648,\n      columnNumber: 61\n    }\n  }, __jsx(Button, {\n    onClick: () => setTopNFactor(topNFactor + 1),\n    color: \"primary\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 649,\n      columnNumber: 65\n    }\n  }, t(\"str_showMore\"))) : null)) : [...Array(3)].map(index => __jsx(Grid, {\n    item: true,\n    xs: 12,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 656,\n      columnNumber: 53\n    }\n  }, __jsx(DetailCardPlaceHolder, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 657,\n      columnNumber: 57\n    }\n  }))))) : isLoaded ? state.portalList && Object.keys(state.portalList).map((category, categoryKey) => {\n    return __jsx(Paper, {\n      elevation: 3,\n      className: classes.mainPaper,\n      key: categoryKey,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 668,\n        columnNumber: 45\n      }\n    }, __jsx(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"space-between\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 669,\n        columnNumber: 49\n      }\n    }, __jsx(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 53\n      }\n    }, __jsx(Typography, {\n      className: classes.hotelListTitle,\n      color: \"primary\",\n      variant: \"h6\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 57\n      }\n    }, category)), __jsx(Grid, {\n      item: true,\n      xs: 6,\n      className: classes.seeMore,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 680,\n        columnNumber: 53\n      }\n    }, __jsx(Button, {\n      className: classes.seeMoreButton,\n      endIcon: __jsx(ArrowForwardIosIcon, {\n        color: \"inherit\",\n        style: {\n          fontSize: \"18px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 683,\n          columnNumber: 70\n        }\n      }),\n      color: \"primary\",\n      onClick: () => handleSelectedCategoryList(category),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 57\n      }\n    }, t(\"str_list\")))), __jsx(Box, {\n      p: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 691,\n        columnNumber: 49\n      }\n    }, __jsx(Slider, _extends({\n      className: state.portalList[category].length === 1 || state.portalList[category].length <= 3 && screenWidth > 900 ? \"portal-slick\" : \"\"\n    }, getSliderSetting(state.portalList[category].length, screenWidth <= 1366 ? 4 : 5), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 53\n      }\n    }), state.portalList && state.portalList[category].map((item, itemKey) => {\n      return __jsx(CategoryItemCard, {\n        key: itemKey,\n        imageUrl: item.url,\n        hotelName: item.title,\n        location: item.location,\n        point: item.point,\n        description: item.description,\n        isPrice: category.isPrice,\n        country: item.country,\n        city: item.city,\n        town: item.town,\n        price: item.price,\n        hotelData: item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 65\n        }\n      });\n    }))));\n  }) : __jsx(Paper, {\n    elevation: 3,\n    className: classes.mainPaper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 715,\n      columnNumber: 41\n    }\n  }, __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"space-between\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 716,\n      columnNumber: 45\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 717,\n      columnNumber: 49\n    }\n  }, __jsx(Typography, {\n    className: classes.hotelListTitle,\n    variant: \"h6\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 718,\n      columnNumber: 53\n    }\n  }, __jsx(Skeleton, {\n    width: 100,\n    height: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 723,\n      columnNumber: 57\n    }\n  }))), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    className: classes.seeMore,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 726,\n      columnNumber: 49\n    }\n  }, __jsx(Skeleton, {\n    width: 100,\n    height: 60,\n    style: {\n      float: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 727,\n      columnNumber: 53\n    }\n  }))), __jsx(Box, {\n    p: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 730,\n      columnNumber: 45\n    }\n  }, __jsx(Slider, _extends({}, placeHolderSlideSetting(screenWidth >= 1920 ? 5 : 4, screenWidth >= 1920 ? 5 : 4), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 731,\n      columnNumber: 49\n    }\n  }), [...Array(screenWidth >= 1920 ? 5 : 4)].map(index => __jsx(\"div\", {\n    className: classes.cardRoot,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 734,\n      columnNumber: 61\n    }\n  }, __jsx(\"svg\", {\n    style: {\n      maxWidth: \"100%\"\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: \"393\",\n    height: \"489\",\n    viewBox: \"0 0 393 489\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 735,\n      columnNumber: 65\n    }\n  }, __jsx(\"defs\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 736,\n      columnNumber: 69\n    }\n  }, __jsx(\"filter\", {\n    id: \"Rectangle_25490\",\n    x: \"0\",\n    y: \"0\",\n    width: \"393\",\n    height: \"489\",\n    filterUnits: \"userSpaceOnUse\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 737,\n      columnNumber: 73\n    }\n  }, __jsx(\"feOffset\", {\n    dy: \"3\",\n    input: \"SourceAlpha\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 738,\n      columnNumber: 77\n    }\n  }), __jsx(\"feGaussianBlur\", {\n    stdDeviation: \"3\",\n    result: \"blur\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 739,\n      columnNumber: 77\n    }\n  }), __jsx(\"feFlood\", {\n    floodOpacity: \"0.161\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 740,\n      columnNumber: 77\n    }\n  }), __jsx(\"feComposite\", {\n    operator: \"in\",\n    in2: \"blur\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 741,\n      columnNumber: 77\n    }\n  }), __jsx(\"feComposite\", {\n    in: \"SourceGraphic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 742,\n      columnNumber: 77\n    }\n  }))), __jsx(\"g\", {\n    id: \"Group_17244\",\n    \"data-name\": \"Group 17244\",\n    transform: \"translate(-51 -433)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 745,\n      columnNumber: 69\n    }\n  }, __jsx(\"g\", {\n    id: \"Group_17179\",\n    \"data-name\": \"Group 17179\",\n    transform: \"translate(-29 -406)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 746,\n      columnNumber: 73\n    }\n  }, __jsx(\"g\", {\n    transform: \"matrix(1, 0, 0, 1, 80, 839)\",\n    filter: \"url(#Rectangle_25490)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 747,\n      columnNumber: 77\n    }\n  }, __jsx(\"rect\", {\n    id: \"Rectangle_25490-2\",\n    \"data-name\": \"Rectangle 25490\",\n    width: \"375\",\n    height: \"471\",\n    rx: \"7\",\n    transform: \"translate(9 6)\",\n    fill: \"#fff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 748,\n      columnNumber: 81\n    }\n  })), __jsx(\"path\", {\n    id: \"Path_9059\",\n    \"data-name\": \"Path 9059\",\n    d: \"M7,0H368a7,7,0,0,1,7,7V207a7,7,0,0,1-7,7H7a7,7,0,0,1-7-7V7A7,7,0,0,1,7,0Z\",\n    transform: \"translate(89 845)\",\n    fill: \"#c2d8da\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 750,\n      columnNumber: 77\n    }\n  }), __jsx(\"rect\", {\n    id: \"Rectangle_25494\",\n    \"data-name\": \"Rectangle 25494\",\n    width: \"145\",\n    height: \"18\",\n    rx: \"9\",\n    transform: \"translate(116 1089)\",\n    fill: \"#c2d8da\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 751,\n      columnNumber: 77\n    }\n  }), __jsx(\"rect\", {\n    id: \"Rectangle_25495\",\n    \"data-name\": \"Rectangle 25495\",\n    width: \"322\",\n    height: \"13\",\n    rx: \"6.5\",\n    transform: \"translate(116 1137)\",\n    fill: \"#c2d8da\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 752,\n      columnNumber: 77\n    }\n  }), __jsx(\"rect\", {\n    id: \"Rectangle_25496\",\n    \"data-name\": \"Rectangle 25496\",\n    width: \"140\",\n    height: \"13\",\n    rx: \"6.5\",\n    transform: \"translate(116 1163)\",\n    fill: \"#c2d8da\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 753,\n      columnNumber: 77\n    }\n  }), __jsx(\"rect\", {\n    id: \"Rectangle_25497\",\n    \"data-name\": \"Rectangle 25497\",\n    width: \"150\",\n    height: \"36\",\n    rx: \"5\",\n    transform: \"translate(115 1254)\",\n    fill: \"#c2d8da\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 754,\n      columnNumber: 77\n    }\n  }), __jsx(\"rect\", {\n    id: \"Rectangle_25498\",\n    \"data-name\": \"Rectangle 25498\",\n    width: \"150\",\n    height: \"36\",\n    rx: \"5\",\n    transform: \"translate(288 1254)\",\n    fill: \"#c2d8da\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 755,\n      columnNumber: 77\n    }\n  })))))))))))));\n}\n\nconst mapStateToProps = state => {\n  return {\n    state: state.formReducer.destinationPortal\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value)),\n  updateState: (stateType, stateName, value) => dispatch(updateState(stateType, stateName, value)),\n  pushToState: (stateType, stateName, value) => dispatch(pushToState(stateType, stateName, value)),\n  deleteFromState: (stateType, stateName, value) => dispatch(deleteFromState(stateType, stateName, value))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DestinationPortal);","map":{"version":3,"sources":["/Users/mata/app-cloudweb/pages/portal/index.js"],"names":["React","useState","useEffect","useContext","useRef","axios","Carousel","NextSeo","useRouter","connect","fade","makeStyles","ArrowForwardIosIcon","ArrowBackIcon","Typography","Container","Paper","Box","Card","CardContent","Button","Grid","FormControl","TextField","Autocomplete","Skeleton","Slider","convertUrlStandard","getHyperlinkParser","jsonGroupBy","OREST_ENDPOINT","REQUEST_METHOD_CONST","useTranslation","WebCmsGlobal","LoadingSpinner","deleteFromState","pushToState","setToState","updateState","DestinationPortalWrapper","DetailCardPlaceHolder","CategoryItemFullCard","CategoryItemCard","useStyles","theme","root","flexGrow","mainPaper","padding","marginBottom","breakpoints","down","mainSelectPaper","background","mainContainter","paddingLeft","paddingRight","hotelListTitle","fontWeight","paddingTop","hotelListTitleWithoutPadding","paddingBottom","seeMore","textAlign","float","seeMoreWithoutPadding","seeMoreButton","fontSize","textTransform","searchBackground","width","position","height","backgroundSize","backgroundPosition","backgroundRepeat","searchCard","top","zIndex","textFieldStyle","borderRadius","display","mainTitle","maxWidth","letterSpacing","color","subTitle","firstGridItemInCard","dialogContent","cardRoot","marginLeft","marginRight","opacity","DestinationPortal","props","classes","state","GENERAL_SETTINGS","WEBCMS_DATA","locale","t","router","isLoaded","setIsLoaded","detailCardsIsLoaded","setDetailCardsIsLoaded","screenWidth","setScreenWidth","isHomeSliderLoaded","setIsHomeSliderLoaded","topNFactor","setTopNFactor","topN","ref","getListData","catid","topn","options","url","BASE_URL","method","POST","params","then","res","status","data","success","array","length","map","item","title","push","query","catdesc","getSliderSetting","slidesToShow","dots","lazyLoad","speed","infinite","slidesToScroll","centerMode","swipeToSlide","touchMove","responsive","breakpoint","settings","placeHolderSlideSetting","slideToShow","findDestination","event","newValue","pathname","lang","gid","handleSelectedCategoryList","categoryName","catId","portalList","routerQuery","undefined","scroll","current","scrollIntoView","window","scrollTo","offsetTop","behavior","handleGetScreenWidth","innerWidth","handleGetScroll","scrollY","addEventListener","removeEventListener","notGroupedPortalList","homeSlider","lastScrollIndex","scrollIndex","setTimeout","renderCtaButton","cta","link","href","text","host","location","isExternalLink","includes","assets","meta","selectedHotel","e","option","value","id","city","InputProps","endAdornment","ind","backgroundImage","STATIC_URL","description","maxHeight","marginTop","selectedCategory","selectedCategoryList","itemKey","point","hasgapp","country","town","price","Array","index","Object","keys","category","categoryKey","isPrice","mapStateToProps","formReducer","destinationPortal","mapDispatchToProps","dispatch","stateType","stateName"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, useRef } from 'react'\nimport axios from 'axios';\nimport Carousel from 'react-bootstrap/Carousel';\nimport { NextSeo } from 'next-seo'\nimport { useRouter } from 'next/router';\nimport { connect } from 'react-redux'\nimport { fade, makeStyles } from '@material-ui/core/styles'\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport {\n    Typography,\n    Container,\n    Paper,\n    Box,\n    Card,\n    CardContent,\n    Button,\n    Grid,\n    FormControl,\n    TextField,\n} from '@material-ui/core'\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport Slider from 'react-slick'\nimport {\n    convertUrlStandard,\n    getHyperlinkParser,\n    jsonGroupBy,\n    OREST_ENDPOINT,\n    REQUEST_METHOD_CONST\n} from '../../model/orest/constants'\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nimport WebCmsGlobal from \"../../components/webcms-global\";\nimport LoadingSpinner from \"../../components/LoadingSpinner\";\nimport {deleteFromState, pushToState, setToState, updateState} from \"../../state/actions\";\nimport DestinationPortalWrapper from \"../../components/destination-portal/components/DestinationPortalWrapper\";\nimport {DetailCardPlaceHolder} from \"../../assets/svg/destination-portal/DetailCardPlaceHolder\";\nimport CategoryItemFullCard from \"../../components/destination-portal/components/CategoryItemFullCard\";\nimport CategoryItemCard from \"../../components/destination-portal/components/CategoryItemCard\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    mainPaper: {\n        padding: \"20px\",\n        marginBottom: 50,\n        [theme.breakpoints.down('sm')]: {\n            padding: \"8px\",\n        },\n\n    },\n    mainSelectPaper: {\n        background: '#ffffff00',\n    },\n    mainContainter: {\n        paddingLeft: \"64px\",\n        paddingRight: \"64px\",\n        [theme.breakpoints.down('sm')]: {\n            paddingLeft: \"24px\",\n            paddingRight: \"24px\",\n        },\n    },\n    hotelListTitle: {\n        paddingLeft: \"34px\",\n        fontWeight: 'bold',\n        paddingTop: 5,\n        [theme.breakpoints.down('xs')]: {\n            paddingLeft: \"24px\"\n        },\n    },\n    hotelListTitleWithoutPadding: {\n        fontWeight: 'bold',\n        paddingTop: 5,\n        paddingBottom: \"16px\"\n    },\n    seeMore: {\n        textAlign: 'right',\n        float: \"right\",\n        paddingRight: \"34px\",\n        [theme.breakpoints.down(\"sm\")]: {\n            paddingRight: \"31px\",\n        },\n        [theme.breakpoints.down(\"sm\")]: {\n            paddingRight: \"24px\",\n        },\n    },\n    seeMoreWithoutPadding: {\n        textAlign: 'right',\n        paddingBottom: \"16px\"\n    },\n    seeMoreButton: {\n        fontSize: \"18px\",\n        fontWeight: \"bold\",\n        textTransform: \"none\",\n        [theme.breakpoints.down(\"sm\")]: {\n            fontSize: \"16px\"\n        },\n    },\n    searchBackground: {\n        width: \"100%\",\n        position: \"relative\",\n        height: \"650px\",\n        backgroundSize:\"cover\",\n        backgroundPosition:\"center\",\n        backgroundRepeat:\"no-repeat\",\n        [theme.breakpoints.down(\"sm\")]: {\n            height: \"386px\",\n        },\n    },\n    searchCard: {\n        position: \"absolute\",\n        width: \"100%\",\n        top: \"96px\",\n        [theme.breakpoints.down(\"sm\")]: {\n            top: \"32px\",\n        },\n        \"& .MuiCardContent-root:last-child\": {\n            paddingBottom: \"16px\"\n        },\n        zIndex: \"2\"\n    },\n    textFieldStyle: {\n        borderRadius: \"5px\",\n        textTransform: \"capitalize\",\n        \"& .MuiInputLabel-root\": {\n            fontSize: \"14px\",\n            fontWeight: \"600\",\n        },\n        \"& input\": {\n            fontSize: \"14px\",\n        },\n        \"& .MuiFormHelperText-root\": {\n            display: \"none\"\n        }\n    },\n    mainTitle: {\n        paddingBottom: \"24px\",\n        fontSize: \"50px\",\n        fontWeight: \"bold\",\n        maxWidth: \"510px\",\n        letterSpacing: \"0\",\n        color:\"#FFFFFF\",\n        [theme.breakpoints.down(\"sm\")]: {\n            fontSize: \"24px\",\n        },\n\n    },\n    subTitle: {\n        fontSize: \"30px\",\n        fontWeight: \"bold\",\n        letterSpacing: \"0\",\n        color:\"#FFFFFF\",\n        [theme.breakpoints.down(\"sm\")]: {\n            fontSize: \"16px\",\n        },\n    },\n    firstGridItemInCard: {\n        display: \"flex\",\n        [theme.breakpoints.down(\"xs\")]: {\n            display: \"grid\",\n        },\n    },\n    dialogContent: {\n        padding: \"24px\",\n        color: \"#122D31\",\n        [theme.breakpoints.down(\"sm\")]: {\n            padding: \"16px\",\n        },\n\n    },\n    cardRoot: {\n        marginLeft: 10,\n        marginRight: 10,\n        background: '#FFFFFF 0% 0% no-repeat padding-box',\n        borderRadius: 10,\n        opacity: 1,\n    },\n}))\n\n\nfunction DestinationPortal(props) {\n    const classes = useStyles()\n\n    const { setToState, state } = props\n\n    const { GENERAL_SETTINGS, WEBCMS_DATA, locale} = useContext(WebCmsGlobal)\n    const { t } = useTranslation();\n    const router = useRouter();\n\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [detailCardsIsLoaded, setDetailCardsIsLoaded] = useState(false);\n    const [screenWidth, setScreenWidth] = useState(0);\n    const [isHomeSliderLoaded, setIsHomeSliderLoaded] = useState(false);\n    const [topNFactor, setTopNFactor] = useState(1);\n    const topN = 6;\n    const ref = useRef(null);\n\n    const getListData = (catid, topn) => {\n        let options = {\n            url: GENERAL_SETTINGS.BASE_URL + 'api/hotel/app/portal/list',\n            method: REQUEST_METHOD_CONST.POST,\n            params: {}\n        }\n        if(catid) {\n            options.params.catid = catid;\n        }\n        if(topn) {\n            options.params.topn = topn;\n        }\n        axios(options).then(res => {\n            if(res.status === 200) {\n                if(res.data.success) {\n                    let array = [];\n                    if(res.data.data.length > 0) {\n                        res.data.data.map((item) => {\n                            if(item.title !== null) {\n                                if(item.catid !== null) {\n                                    array.push(item);\n                                }\n                            }\n                        })\n                    }\n                    if(!catid && !topn) {\n                        let data;\n                        data = jsonGroupBy(array, \"catdesc\");\n                        setToState(\"destinationPortal\", [\"notGroupedPortalList\"], array);\n                        setToState(\"destinationPortal\", [\"portalList\"], data);\n                        setIsLoaded(true);\n                    } else {\n                        if(router.query.catid) {\n                            setToState(\"destinationPortal\", [\"selectedCategory\"], array[0].catdesc);\n                            setToState(\"destinationPortal\", [\"catId\"], array[0].catid);\n                        }\n                        setToState(\"destinationPortal\", [\"selectedCategoryList\"], array);\n                        setDetailCardsIsLoaded(true)\n                    }\n\n                } else {\n                    if(!catid && !topn) {\n                        setIsLoaded(true);\n                    } else {\n                        setDetailCardsIsLoaded(true)\n                    }\n\n                }\n            } else {\n                if(!catid && !topn) {\n                    setIsLoaded(true);\n                } else {\n                    setDetailCardsIsLoaded(true)\n                }\n            }\n        })\n    }\n\n    const getSliderSetting = (length, slidesToShow) => {\n        return {\n            dots: true,\n            lazyLoad: true,\n            speed: 500,\n            slidesToShow: slidesToShow,\n            infinite: length > slidesToShow ,\n            slidesToScroll: 1,\n            centerMode: false,\n            swipeToSlide: true,\n            touchMove: true,\n            responsive: [\n                {\n                    breakpoint: 600,\n                    settings: {\n                        slidesToShow: 1,\n                        centerMode: false,\n                    },\n                },\n                {\n                    breakpoint: 900,\n                    settings: {\n                        infinite: length > 2,\n                        slidesToShow: 2,\n                        centerMode: false,\n                    },\n                },\n                {\n                    breakpoint: 1200,\n                    settings: {\n                        infinite: length > 3,\n                        slidesToShow: 3,\n                        centerMode: false,\n                    },\n                },\n\n            ],\n        }\n    }\n\n    const placeHolderSlideSetting = (length, slideToShow) => {\n        return {\n            dots: true,\n            lazyLoad: true,\n            speed: 500,\n            slidesToShow: slideToShow,\n            infinite: length > 2 ,\n            slidesToScroll: 1,\n            centerMode: false,\n            swipeToSlide: true,\n            touchMove: true,\n            responsive: [\n                {\n                    breakpoint: 600,\n                    settings: {\n                        slidesToShow: 1,\n                        centerMode: false,\n                    },\n                },\n                {\n                    breakpoint: 960,\n                    settings: {\n                        slidesToShow: 2,\n                        centerMode: false,\n                    },\n                },\n                {\n                    breakpoint: 1280,\n                    settings: {\n                        slidesToShow: 3,\n                        centerMode: false,\n                    },\n                },\n\n            ],\n\n        }\n    }\n\n    const findDestination = (event, newValue) => {\n        const data = newValue;\n        if(data !== null) {\n            setToState(\"destinationPortal\", [\"selectedHotel\"], data)\n            router.push({\n                pathname: `guest/detail/${convertUrlStandard(data.title)}`,\n                query: {lang: locale, gid: data.gid}\n            });\n        } else {\n            setToState(\"destinationPortal\", [\"selectedHotel\"], null)\n        }\n\n    }\n\n    const handleSelectedCategoryList = (categoryName) => {\n        const catId = state.portalList[categoryName][0].catid;\n        setToState(\"destinationPortal\", [\"selectedCategory\"], categoryName)\n        setToState(\"destinationPortal\", [\"catId\"], catId);\n        if(catId) {\n            const routerQuery = {\n                lang: router.query.lang || locale,\n                catid: catId\n            };\n            router.push({\n                query: routerQuery},\n                undefined,\n                {scroll: false});\n            setDetailCardsIsLoaded(false);\n            getListData(catId, (topN * topNFactor))\n            if(ref) {\n                ref.current.scrollIntoView();\n                window.scrollTo({\n                    top: ref.current.offsetTop,\n                    behavior: 'smooth'\n                })\n            }\n\n        }\n\n    }\n\n    const handleGetScreenWidth = () => {\n        setScreenWidth(window.innerWidth);\n    }\n\n    const handleGetScroll = () => {\n        setToState(\"destinationPortal\", [\"scrollIndex\"], window.scrollY);\n    }\n\n    useEffect(() => {\n        window.addEventListener(\"scroll\", handleGetScroll);\n\n        return () => window.removeEventListener(\"scroll\", handleGetScroll)\n    }, [])\n\n    useEffect(() => {\n        setScreenWidth(window.innerWidth);\n        window.addEventListener(\"resize\", handleGetScreenWidth);\n\n        return () => window.removeEventListener(\"resize\", handleGetScreenWidth)\n    }, [])\n\n    useEffect(() => {\n        if(topNFactor > 1) {\n            getListData(state.catId, (topN * topNFactor))\n        }\n    }, [topNFactor])\n\n\n    useEffect(() => {\n        let routerQuery = router.query;\n        routerQuery.lang = router.query.lang || locale\n        router.push({query: routerQuery})\n        setToState(\"destinationPortal\", [\"selectedHotel\"], null);\n        if(router.query.catid) {\n            getListData(router.query.catid, (topN * topNFactor))\n            if(ref) {\n                if(isHomeSliderLoaded) {\n                    window.scrollTo({\n                        top: ref.current.offsetTop,\n                        behavior: 'smooth'\n                    })\n                }\n            }\n        }\n        if(state.notGroupedPortalList.length <= 0) {\n           getListData();\n        } else {\n            setIsLoaded(true);\n        }\n        if(state.homeSlider.length <= 0) {\n            axios({\n                url: GENERAL_SETTINGS.BASE_URL + 'api/guestweb/home-slider',\n                method: REQUEST_METHOD_CONST.POST,\n            }).then(res => {\n                if(res.status === 200) {\n                    if(res.data.success) {\n                        if(res.data.data.length > 0) {\n                            let array = [];\n                            res.data.data.map((item) => {\n                                if(item.url) {\n                                    array.push(item);\n                                }\n                            })\n                            setToState(\"destinationPortal\", [\"homeSlider\"], array)\n                        }\n                        setIsHomeSliderLoaded(true);\n                    }\n\n                } else {\n                    setIsHomeSliderLoaded(true);\n                }\n            })\n        } else {\n            setIsHomeSliderLoaded(true)\n        }\n        if(state.catId && state.catId !== \"\") {\n            setDetailCardsIsLoaded(true);\n        }\n    }, [])\n\n    useEffect(() => {\n        if(state.lastScrollIndex > 0 && state.scrollIndex === 0) {\n            window.scrollTo(0, state.lastScrollIndex);\n            setTimeout(() => {\n                setToState(\"destinationPortal\", [\"lastScrollIndex\"], 0)\n            }, 500)\n        }\n    })\n\n    const renderCtaButton = (cta) => {\n        if(cta) {\n            let link = getHyperlinkParser(cta)\n\n            if(link === false){\n                return\n            }\n\n            let href = link.href\n            let text = link?.text || ''\n            let host = window.location.host\n\n            let isExternalLink = false\n            if(href.includes('http') && !href.includes(host)){\n                isExternalLink = true\n            }\n\n            if(isExternalLink) {\n                return (\n                    <Button\n                        style={{color: \"#FFFF\"}}\n                        variant=\"contained\"\n                        color=\"primary\"\n                        target={\"_blank\"}\n                        href={href}\n                    >\n                        {t(text)}\n                    </Button>\n                )\n            } else {\n                return (\n                    <Button\n                        style={{color: \"#FFFF\"}}\n                        variant=\"contained\"\n                        color=\"primary\"\n                        href={href}\n                    >\n                        {t(text)}\n                    </Button>\n                )\n            }\n        }\n    }\n\n    return (\n        <DestinationPortalWrapper>\n            <React.Fragment>\n                <NextSeo title={WEBCMS_DATA.assets.meta.title} />\n                <div style={{position: \"relative\"}}>\n                    <Container maxWidth=\"xl\" className={classes.mainContainter}>\n                        <div style={{position: \"relative\"}}>\n                            <Card className={classes.searchCard} elevation={8}>\n                                <CardContent>\n                                    <Grid container spacing={4}>\n                                        <Grid item xs={12} sm={12} md={3 > 5 ?  5 : 12}>\n                                            <div className={classes.firstGridItemInCard}>\n                                                <FormControl fullWidth color={\"primary\"}>\n                                                    <Autocomplete\n                                                        disabled={!isLoaded}\n                                                        value={state.selectedHotel}\n                                                        onChange={(e, newValue) => findDestination(e, newValue)}\n                                                        fullWidth\n                                                        options={state.notGroupedPortalList}\n                                                        getOptionSelected={(option, value) => option.id === value.id}\n                                                        getOptionLabel={(option) =>\n                                                            `${option.title}${option.city ? \",\" + option.city : \"\"}`\n                                                        }\n                                                        renderInput={(params) =>\n                                                            <TextField\n                                                                className={classes.textFieldStyle}\n                                                                color=\"primary\"\n                                                                {...params}\n                                                                InputProps={{\n                                                                    ...params.InputProps,\n                                                                    endAdornment: (\n                                                                        <React.Fragment>\n                                                                            {!isLoaded ? <LoadingSpinner size={18} /> : null}\n                                                                            {params.InputProps.endAdornment}\n                                                                        </React.Fragment>\n                                                                    ),\n                                                                }}\n                                                                label={t(\"str_location\")}\n                                                                placeholder={t(\"str_whereAreYouGoing\")}\n                                                                variant={\"outlined\"}\n                                                            />\n                                                        }\n                                                    />\n                                                </FormControl>\n                                            </div>\n                                        </Grid>\n                                    </Grid>\n                                </CardContent>\n                            </Card>\n                        </div>\n                    </Container>\n                    <Carousel\n                        className={\"home-slider\"}\n                        pause={\"hover\"}\n                        indicators={!!(state.homeSlider && state.homeSlider.length > 1)}\n                    >\n                        {\n                            isHomeSliderLoaded && state.homeSlider.length > 0 ?\n                               state.homeSlider && state.homeSlider.map((item, ind) => {\n                                    return(\n                                        <Carousel.Item key={ind}>\n                                            <div className={classes.searchBackground} style={{backgroundImage: `url(${GENERAL_SETTINGS.STATIC_URL}${item.url})`}}/>\n                                            <Carousel.Caption className={\"carousel-description\"}>\n                                                <Container maxWidth=\"xl\" className={classes.mainContainter}>\n                                                    <Typography className={classes.mainTitle}>{item.title}</Typography>\n                                                    <Typography className={classes.subTitle}>{item.description}</Typography>\n                                                    {\n                                                        item.cta && (\n                                                            <div style={{paddingTop: \"24px\"}}>\n                                                                {renderCtaButton(item.cta)}\n                                                            </div>\n                                                        )\n                                                    }\n                                                </Container>\n                                            </Carousel.Caption>\n                                        </Carousel.Item>\n                                    )\n                            }) :\n                                <img className={classes.searchBackground} style={{maxHeight: \"650px\"}} src={\"/imgs/no-image available-placeholder.png\"} />\n                        }\n                    </Carousel>\n                </div>\n                <Container maxWidth=\"xl\" className={classes.mainContainter} style={{marginTop: \"30px\"}}>\n                    <div id={\"category\"} ref={ref}>\n                        {\n                             router.query.catid ? (\n\n                                <Paper elevation={0} className={classes.mainSelectPaper} key={state.selectedCategory}>\n                                    <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\n                                        <Grid item xs={6}>\n                                            <Typography color={\"primary\"} variant=\"h6\" gutterBottom className={classes.hotelListTitleWithoutPadding}>\n                                                {state.selectedCategory}\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item xs={6} className={classes.seeMoreWithoutPadding}>\n                                            <Button\n                                                startIcon={<ArrowBackIcon />}\n                                                className={classes.seeMoreButton}\n                                                color=\"primary\"\n                                                onClick={() => {\n                                                    setToState(\"destinationPortal\", [\"selectedCategory\"], null)\n                                                    router.push({\n                                                            query: {lang: router.query.lang || locale}},\n                                                        undefined,\n                                                        {scroll: false});\n                                                }}\n                                            >\n                                                {t(\"str_back\")}\n                                            </Button>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid container direction=\"row\" spacing={2}>\n                                        {detailCardsIsLoaded ? (\n                                            <React.Fragment>\n                                                {\n                                                    state.selectedCategoryList && state.selectedCategoryList.map((item, itemKey) => {\n                                                        return (\n                                                            <Grid item xs={12} key={itemKey}>\n                                                                <CategoryItemFullCard\n                                                                    imageUrl={item.url}\n                                                                    hotelName={item.title}\n                                                                    location={item.location}\n                                                                    point={item.point}\n                                                                    isguestapp={item.hasgapp}\n                                                                    description={item.description}\n                                                                    country={item.country}\n                                                                    city={item.city}\n                                                                    town={item.town}\n                                                                    price={item.price}\n                                                                    hotelData={item}\n                                                                />\n                                                            </Grid>\n                                                        )\n                                                    })\n                                                }\n                                                <Grid item xs={12}>\n                                                    {\n                                                        state.selectedCategoryList.length > (topN * topNFactor) ?\n                                                            <div style={{textAlign: \"center\", paddingBottom: \"16px\"}}>\n                                                                <Button onClick={() => setTopNFactor(topNFactor + 1)} color={\"primary\"} variant={\"contained\"}>{t(\"str_showMore\")}</Button>\n                                                            </div> : null\n                                                    }\n                                                </Grid>\n                                            </React.Fragment>\n                                            ) : (\n                                                [...Array(3)].map((index) => (\n                                                    <Grid item xs={12} key={index}>\n                                                        <DetailCardPlaceHolder />\n                                                    </Grid>\n\n                                                ))\n                                            )\n                                        }\n                                    </Grid>\n                                </Paper>\n                            ) : (isLoaded ?\n                                    state.portalList && Object.keys(state.portalList).map((category, categoryKey) => {\n                                        return (\n                                            <Paper elevation={3} className={classes.mainPaper} key={categoryKey}>\n                                                <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\n                                                    <Grid item xs={6}>\n                                                        <Typography\n                                                            className={classes.hotelListTitle}\n                                                            color={\"primary\"}\n                                                            variant=\"h6\"\n                                                            gutterBottom\n                                                        >\n                                                            {category}\n                                                        </Typography>\n                                                    </Grid>\n                                                    <Grid item xs={6} className={classes.seeMore}>\n                                                        <Button\n                                                            className={classes.seeMoreButton}\n                                                            endIcon={<ArrowForwardIosIcon color={\"inherit\"} style={{fontSize:\"18px\"}}/>}\n                                                            color=\"primary\"\n                                                            onClick={() => handleSelectedCategoryList(category)}\n                                                        >\n                                                            {t(\"str_list\")}\n                                                        </Button>\n                                                    </Grid>\n                                                </Grid>\n                                                <Box p={3}>\n                                                    <Slider className={state.portalList[category].length === 1 || (state.portalList[category].length <= 3 && screenWidth > 900) ? \"portal-slick\" : \"\"} {...getSliderSetting(state.portalList[category].length,  screenWidth <= 1366 ? 4 : 5)}>\n                                                        {state.portalList && state.portalList[category].map((item, itemKey) => {\n                                                            return (\n                                                                <CategoryItemCard\n                                                                    key={itemKey}\n                                                                    imageUrl={item.url}\n                                                                    hotelName={item.title}\n                                                                    location={item.location}\n                                                                    point={item.point}\n                                                                    description={item.description}\n                                                                    isPrice={category.isPrice}\n                                                                    country={item.country}\n                                                                    city={item.city}\n                                                                    town={item.town}\n                                                                    price={item.price}\n                                                                    hotelData={item}\n                                                                />\n                                                            )\n                                                        })}\n                                                    </Slider>\n                                                </Box>\n                                            </Paper>\n                                        )}): (\n                                        <Paper elevation={3} className={classes.mainPaper}>\n                                            <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\n                                                <Grid item xs={6}>\n                                                    <Typography\n                                                        className={classes.hotelListTitle}\n                                                        variant=\"h6\"\n                                                        gutterBottom\n                                                    >\n                                                        <Skeleton width={100} height={40} />\n                                                    </Typography>\n                                                </Grid>\n                                                <Grid item xs={6} className={classes.seeMore}>\n                                                    <Skeleton width={100} height={60} style={{float: \"right\"}} />\n                                                </Grid>\n                                            </Grid>\n                                            <Box p={3}>\n                                                <Slider {...placeHolderSlideSetting(screenWidth >= 1920 ? 5 : 4, screenWidth >= 1920 ? 5 : 4)}>\n                                                    {\n                                                        [...Array(screenWidth >= 1920 ? 5 : 4)].map((index) => (\n                                                            <div className={classes.cardRoot} key={index}>\n                                                                <svg style={{maxWidth: \"100%\"}} xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" width=\"393\" height=\"489\" viewBox=\"0 0 393 489\">\n                                                                    <defs>\n                                                                        <filter id=\"Rectangle_25490\" x=\"0\" y=\"0\" width=\"393\" height=\"489\" filterUnits=\"userSpaceOnUse\">\n                                                                            <feOffset dy=\"3\" input=\"SourceAlpha\"/>\n                                                                            <feGaussianBlur stdDeviation=\"3\" result=\"blur\"/>\n                                                                            <feFlood floodOpacity={\"0.161\"} />\n                                                                            <feComposite operator=\"in\" in2=\"blur\"/>\n                                                                            <feComposite in=\"SourceGraphic\"/>\n                                                                        </filter>\n                                                                    </defs>\n                                                                    <g id=\"Group_17244\" data-name=\"Group 17244\" transform=\"translate(-51 -433)\">\n                                                                        <g id=\"Group_17179\" data-name=\"Group 17179\" transform=\"translate(-29 -406)\">\n                                                                            <g transform=\"matrix(1, 0, 0, 1, 80, 839)\" filter=\"url(#Rectangle_25490)\">\n                                                                                <rect id=\"Rectangle_25490-2\" data-name=\"Rectangle 25490\" width=\"375\" height=\"471\" rx=\"7\" transform=\"translate(9 6)\" fill=\"#fff\"/>\n                                                                            </g>\n                                                                            <path id=\"Path_9059\" data-name=\"Path 9059\" d=\"M7,0H368a7,7,0,0,1,7,7V207a7,7,0,0,1-7,7H7a7,7,0,0,1-7-7V7A7,7,0,0,1,7,0Z\" transform=\"translate(89 845)\" fill=\"#c2d8da\"/>\n                                                                            <rect id=\"Rectangle_25494\" data-name=\"Rectangle 25494\" width=\"145\" height=\"18\" rx=\"9\" transform=\"translate(116 1089)\" fill=\"#c2d8da\"/>\n                                                                            <rect id=\"Rectangle_25495\" data-name=\"Rectangle 25495\" width=\"322\" height=\"13\" rx=\"6.5\" transform=\"translate(116 1137)\" fill=\"#c2d8da\"/>\n                                                                            <rect id=\"Rectangle_25496\" data-name=\"Rectangle 25496\" width=\"140\" height=\"13\" rx=\"6.5\" transform=\"translate(116 1163)\" fill=\"#c2d8da\"/>\n                                                                            <rect id=\"Rectangle_25497\" data-name=\"Rectangle 25497\" width=\"150\" height=\"36\" rx=\"5\" transform=\"translate(115 1254)\" fill=\"#c2d8da\"/>\n                                                                            <rect id=\"Rectangle_25498\" data-name=\"Rectangle 25498\" width=\"150\" height=\"36\" rx=\"5\" transform=\"translate(288 1254)\" fill=\"#c2d8da\"/>\n                                                                        </g>\n                                                                    </g>\n                                                                </svg>\n                                                            </div>\n                                                        ))\n                                                    }\n                                                </Slider>\n                                            </Box>\n                                        </Paper>\n                                    )\n                            )\n                        }\n                    </div>\n                </Container>\n            </React.Fragment>\n        </DestinationPortalWrapper>\n\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        state: state.formReducer.destinationPortal,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value)),\n    updateState: (stateType, stateName, value) => dispatch(updateState(stateType, stateName, value)),\n    pushToState: (stateType, stateName, value) => dispatch(pushToState(stateType, stateName, value)),\n    deleteFromState: (stateType, stateName, value) => dispatch(deleteFromState(stateType, stateName, value)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DestinationPortal)"]},"metadata":{},"sourceType":"module"}