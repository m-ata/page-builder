{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/guest/public/components/info/event-reservation/event-menu-list.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { connect, useSelector } from 'react-redux';\nimport { setToState as _setToState, updateState as _updateState } from 'state/actions';\nimport Box from '@material-ui/core/Box';\nimport { DEFAULT_OREST_TOKEN, jsonGroupBy } from 'model/orest/constants';\nimport { FALSE, NULL } from 'model/globals';\nimport WebCmsGlobal from 'components/webcms-global';\nimport ProductMenuList from './product-menu-list';\nimport LoadingSpinner from 'components/LoadingSpinner';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport BackIcon from \"@material-ui/icons/KeyboardBackspace\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    boxRoot: {\n      maxHeight: '60vh',\n      overflowY: 'auto',\n      '&::-webkit-scrollbar': {\n        width: '4px',\n        height: 4,\n        background: '#0000000a'\n      },\n      '&::-webkit-scrollbar-track': {\n        boxShadow: 'inset 0 0 6px rgba(0,0,0,0.00)',\n        webkitBoxShadow: 'inset 0 0 6px rgba(0,0,0,0.00)'\n      },\n      '&::-webkit-scrollbar-thumb': {\n        backgroundColor: 'rgba(12, 12, 12, 0.17)',\n        outline: '1px solid #29609747'\n      }\n    },\n    backButtonContainer: {\n      zIndex: 1,\n      position: 'static',\n      paddingLeft: '16px',\n      backgroundColor: '#FFF',\n      width: '100%'\n    }\n  };\n});\n\nvar EventMenuList = function EventMenuList(props) {\n  _s();\n\n  var classes = useStyles();\n  var state = props.state,\n      updateState = props.updateState,\n      departId = props.departId,\n      isAddActive = props.isAddActive,\n      isSpaRes = props.isSpaRes;\n\n  var _useContext = useContext(WebCmsGlobal),\n      GENERAL_SETTINGS = _useContext.GENERAL_SETTINGS;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var isLogin = useSelector(function (state) {\n    return state.orest.currentUser && state.orest.currentUser.auth;\n  }) ? true : false;\n  var loginfo = useSelector(function (state) {\n    return state.orest.currentUser && state.orest.currentUser.loginfo;\n  });\n  var token = useSelector(function (state) {\n    return state.orest.currentUser !== null ? state.orest.currentUser.auth.access_token : DEFAULT_OREST_TOKEN;\n  });\n\n  var _useState = useState(false),\n      isLoading = _useState[0],\n      setIsLoading = _useState[1];\n\n  var _useState2 = useState(null),\n      sPGroupName = _useState2[0],\n      setSPGroupName = _useState2[1];\n\n  var clientParams = {};\n  clientParams.hotelrefno = loginfo && loginfo.hotelrefno || GENERAL_SETTINGS.HOTELREFNO;\n\n  if (loginfo && loginfo.hotelgidstr) {\n    clientParams.hoteltoken = loginfo && loginfo.hotelgidstr;\n  }\n\n  clientParams.departid = departId;\n\n  if (isLogin) {\n    clientParams.clienttoken = token;\n  }\n\n  useEffect(function () {\n    var isChainHotelChange = false;\n\n    if (GENERAL_SETTINGS.ISCHAIN && state.changeHotelRefno !== false) {\n      clientParams.ischain = true;\n      clientParams.chainid = state.changeHotelRefno;\n      clientParams.hotelrefno = GENERAL_SETTINGS.HOTELREFNO;\n\n      if (clientParams.chainid !== state.infoList.chainid) {\n        isChainHotelChange = true;\n      }\n    } else {\n      clientParams.ischain = false;\n      clientParams.chainid = false;\n    }\n\n    if ((state.menuGroupAndProductList === FALSE || isChainHotelChange) && !isLoading) {\n      setIsLoading(true);\n      axios({\n        url: GENERAL_SETTINGS.BASE_URL + 'api/products/product-list',\n        method: 'post',\n        params: clientParams\n      }).then(function (productListResponse) {\n        var productListData = productListResponse.data;\n\n        if (productListData.success && productListData.data.length > 0) {\n          updateState('guest', 'menuGroupAndProductList', jsonGroupBy(productListData.data, 'spgroupdesc'));\n          setIsLoading(false);\n        } else {\n          updateState('guest', 'menuGroupAndProductList', null);\n          setIsLoading(false);\n        }\n      })[\"catch\"](function () {\n        updateState('guest', 'menuGroupAndProductList', null);\n        setIsLoading(false);\n      });\n    }\n  }, [state.changeHotelRefno, departId]);\n\n  if (state.menuGroupAndProductList === FALSE || isLoading) {\n    return __jsx(Box, {\n      p: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, __jsx(LoadingSpinner, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  if (state.menuGroupAndProductList === NULL) {\n    return __jsx(Box, {\n      p: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 16\n      }\n    }, t('str_noMenusAvailable'));\n  }\n\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, sPGroupName && __jsx(\"div\", {\n    style: {\n      position: 'relative'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: classes.backButtonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 25\n    }\n  }, __jsx(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: function onClick() {\n      setSPGroupName(null);\n    },\n    startIcon: __jsx(BackIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 44\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 29\n    }\n  }, t('str_menu')))), __jsx(Box, {\n    className: classes.boxRoot,\n    p: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, __jsx(ProductMenuList, {\n    isAddActive: isAddActive,\n    menuGroupAndProductList: state.menuGroupAndProductList,\n    isSpaRes: isSpaRes,\n    sPGroupName: sPGroupName,\n    setSPGroupName: setSPGroupName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  })));\n};\n\n_s(EventMenuList, \"GQ//PiTXRH9/i5on9jX4ehyct7Y=\", false, function () {\n  return [useStyles, useTranslation, useSelector, useSelector, useSelector];\n});\n\n_c = EventMenuList;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    state: state.formReducer.guest\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setToState: function setToState(stateType, stateName, value) {\n      return dispatch(_setToState(stateType, stateName, value));\n    },\n    updateState: function updateState(stateType, stateName, value) {\n      return dispatch(_updateState(stateType, stateName, value));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EventMenuList);\n\nvar _c;\n\n$RefreshReg$(_c, \"EventMenuList\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/guest/public/components/info/event-reservation/event-menu-list.js"],"names":["React","useContext","useEffect","useState","axios","connect","useSelector","setToState","updateState","Box","DEFAULT_OREST_TOKEN","jsonGroupBy","FALSE","NULL","WebCmsGlobal","ProductMenuList","LoadingSpinner","useTranslation","makeStyles","Button","BackIcon","useStyles","theme","boxRoot","maxHeight","overflowY","width","height","background","boxShadow","webkitBoxShadow","backgroundColor","outline","backButtonContainer","zIndex","position","paddingLeft","EventMenuList","props","classes","state","departId","isAddActive","isSpaRes","GENERAL_SETTINGS","t","isLogin","orest","currentUser","auth","loginfo","token","access_token","isLoading","setIsLoading","sPGroupName","setSPGroupName","clientParams","hotelrefno","HOTELREFNO","hotelgidstr","hoteltoken","departid","clienttoken","isChainHotelChange","ISCHAIN","changeHotelRefno","ischain","chainid","infoList","menuGroupAndProductList","url","BASE_URL","method","params","then","productListResponse","productListData","data","success","length","mapStateToProps","formReducer","guest","mapDispatchToProps","dispatch","stateType","stateName","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AACA,SAASC,UAAU,IAAVA,WAAT,EAAqBC,WAAW,IAAXA,YAArB,QAAwC,eAAxC;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,SAASC,mBAAT,EAA8BC,WAA9B,QAAiD,uBAAjD;AACA,SAASC,KAAT,EAAgBC,IAAhB,QAA4B,eAA5B;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,eAAP,MAA4B,qBAA5B;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,cAAP,MAA2B,uCAA3B;AACA,SAAQC,UAAR,QAAyB,0BAAzB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,sCAArB;AAEA,IAAMC,SAAS,GAAGH,UAAU,CAAC,UAACI,KAAD;AAAA,SAAY;AACrCC,IAAAA,OAAO,EAAE;AACLC,MAAAA,SAAS,EAAE,MADN;AAELC,MAAAA,SAAS,EAAE,MAFN;AAGL,8BAAwB;AACpBC,QAAAA,KAAK,EAAE,KADa;AAEpBC,QAAAA,MAAM,EAAE,CAFY;AAGpBC,QAAAA,UAAU,EAAE;AAHQ,OAHnB;AAQL,oCAA8B;AAC1BC,QAAAA,SAAS,EAAE,gCADe;AAE1BC,QAAAA,eAAe,EAAE;AAFS,OARzB;AAYL,oCAA8B;AAC1BC,QAAAA,eAAe,EAAE,wBADS;AAE1BC,QAAAA,OAAO,EAAE;AAFiB;AAZzB,KAD4B;AAkBrCC,IAAAA,mBAAmB,EAAE;AACjBC,MAAAA,MAAM,EAAE,CADS;AAEjBC,MAAAA,QAAQ,EAAE,QAFO;AAGjBC,MAAAA,WAAW,EAAE,MAHI;AAIjBL,MAAAA,eAAe,EAAE,MAJA;AAKjBL,MAAAA,KAAK,EAAE;AALU;AAlBgB,GAAZ;AAAA,CAAD,CAA5B;;AA2BA,IAAMW,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAAA;;AAC7B,MAAMC,OAAO,GAAGlB,SAAS,EAAzB;AAD6B,MAErBmB,KAFqB,GAEmCF,KAFnC,CAErBE,KAFqB;AAAA,MAEdhC,WAFc,GAEmC8B,KAFnC,CAEd9B,WAFc;AAAA,MAEDiC,QAFC,GAEmCH,KAFnC,CAEDG,QAFC;AAAA,MAESC,WAFT,GAEmCJ,KAFnC,CAESI,WAFT;AAAA,MAEsBC,QAFtB,GAEmCL,KAFnC,CAEsBK,QAFtB;;AAAA,oBAGA1C,UAAU,CAACa,YAAD,CAHV;AAAA,MAGrB8B,gBAHqB,eAGrBA,gBAHqB;;AAAA,wBAIf3B,cAAc,EAJC;AAAA,MAIrB4B,CAJqB,mBAIrBA,CAJqB;;AAM7B,MAAMC,OAAO,GAAGxC,WAAW,CAAC,UAACkC,KAAD;AAAA,WAAWA,KAAK,CAACO,KAAN,CAAYC,WAAZ,IAA2BR,KAAK,CAACO,KAAN,CAAYC,WAAZ,CAAwBC,IAA9D;AAAA,GAAD,CAAX,GAAkF,IAAlF,GAAyF,KAAzG;AACA,MAAMC,OAAO,GAAG5C,WAAW,CAAC,UAACkC,KAAD;AAAA,WAAWA,KAAK,CAACO,KAAN,CAAYC,WAAZ,IAA2BR,KAAK,CAACO,KAAN,CAAYC,WAAZ,CAAwBE,OAA9D;AAAA,GAAD,CAA3B;AACA,MAAMC,KAAK,GAAG7C,WAAW,CAAC,UAACkC,KAAD;AAAA,WAAWA,KAAK,CAACO,KAAN,CAAYC,WAAZ,KAA4B,IAA5B,GAAmCR,KAAK,CAACO,KAAN,CAAYC,WAAZ,CAAwBC,IAAxB,CAA6BG,YAAhE,GAA+E1C,mBAA1F;AAAA,GAAD,CAAzB;;AAR6B,kBASKP,QAAQ,CAAC,KAAD,CATb;AAAA,MAStBkD,SATsB;AAAA,MASXC,YATW;;AAAA,mBAUSnD,QAAQ,CAAC,IAAD,CAVjB;AAAA,MAUtBoD,WAVsB;AAAA,MAUTC,cAVS;;AAY7B,MAAIC,YAAY,GAAG,EAAnB;AACAA,EAAAA,YAAY,CAACC,UAAb,GAA0BR,OAAO,IAAIA,OAAO,CAACQ,UAAnB,IAAiCd,gBAAgB,CAACe,UAA5E;;AAEA,MAAGT,OAAO,IAAIA,OAAO,CAACU,WAAtB,EAAkC;AAC9BH,IAAAA,YAAY,CAACI,UAAb,GAA0BX,OAAO,IAAIA,OAAO,CAACU,WAA7C;AACH;;AAEDH,EAAAA,YAAY,CAACK,QAAb,GAAwBrB,QAAxB;;AACA,MAAGK,OAAH,EAAW;AACPW,IAAAA,YAAY,CAACM,WAAb,GAA2BZ,KAA3B;AACH;;AAEDjD,EAAAA,SAAS,CAAC,YAAM;AAEZ,QAAI8D,kBAAkB,GAAG,KAAzB;;AACA,QAAIpB,gBAAgB,CAACqB,OAAjB,IAA4BzB,KAAK,CAAC0B,gBAAN,KAA2B,KAA3D,EAAkE;AAC9DT,MAAAA,YAAY,CAACU,OAAb,GAAuB,IAAvB;AACAV,MAAAA,YAAY,CAACW,OAAb,GAAuB5B,KAAK,CAAC0B,gBAA7B;AACAT,MAAAA,YAAY,CAACC,UAAb,GAA0Bd,gBAAgB,CAACe,UAA3C;;AAEA,UAAGF,YAAY,CAACW,OAAb,KAAyB5B,KAAK,CAAC6B,QAAN,CAAeD,OAA3C,EAAmD;AAC/CJ,QAAAA,kBAAkB,GAAG,IAArB;AACH;AAEJ,KATD,MASO;AACHP,MAAAA,YAAY,CAACU,OAAb,GAAuB,KAAvB;AACAV,MAAAA,YAAY,CAACW,OAAb,GAAuB,KAAvB;AACH;;AAED,QAAI,CAAC5B,KAAK,CAAC8B,uBAAN,KAAkC1D,KAAlC,IAA2CoD,kBAA5C,KAAmE,CAACX,SAAxE,EAAmF;AAC/EC,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAlD,MAAAA,KAAK,CAAC;AACFmE,QAAAA,GAAG,EAAE3B,gBAAgB,CAAC4B,QAAjB,GAA4B,2BAD/B;AAEFC,QAAAA,MAAM,EAAE,MAFN;AAGFC,QAAAA,MAAM,EAAEjB;AAHN,OAAD,CAAL,CAIGkB,IAJH,CAIQ,UAACC,mBAAD,EAAyB;AAC7B,YAAMC,eAAe,GAAGD,mBAAmB,CAACE,IAA5C;;AACA,YAAID,eAAe,CAACE,OAAhB,IAA2BF,eAAe,CAACC,IAAhB,CAAqBE,MAArB,GAA8B,CAA7D,EAAgE;AAC5DxE,UAAAA,WAAW,CAAC,OAAD,EAAU,yBAAV,EAAqCG,WAAW,CAACkE,eAAe,CAACC,IAAjB,EAAuB,aAAvB,CAAhD,CAAX;AACAxB,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,SAHD,MAGO;AACH9C,UAAAA,WAAW,CAAC,OAAD,EAAU,yBAAV,EAAqC,IAArC,CAAX;AACA8C,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AACJ,OAbD,WAaS,YAAK;AACV9C,QAAAA,WAAW,CAAC,OAAD,EAAU,yBAAV,EAAqC,IAArC,CAAX;AACA8C,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,OAhBD;AAiBH;AACJ,GArCQ,EAqCN,CAACd,KAAK,CAAC0B,gBAAP,EAAyBzB,QAAzB,CArCM,CAAT;;AAuCA,MAAID,KAAK,CAAC8B,uBAAN,KAAkC1D,KAAlC,IAA2CyC,SAA/C,EAA0D;AACtD,WACI,MAAC,GAAD;AAAK,MAAA,CAAC,EAAE,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AAED,MAAIb,KAAK,CAAC8B,uBAAN,KAAkCzD,IAAtC,EAA4C;AACxC,WAAO,MAAC,GAAD;AAAK,MAAA,CAAC,EAAE,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAYgC,CAAC,CAAC,sBAAD,CAAb,CAAP;AACH;;AAED,SACI,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQU,WAAW,IACP;AAAK,IAAA,KAAK,EAAE;AAACpB,MAAAA,QAAQ,EAAE;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAEI,OAAO,CAACN,mBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AACI,IAAA,OAAO,EAAC,UADZ;AAEI,IAAA,KAAK,EAAC,SAFV;AAGI,IAAA,OAAO,EAAE,mBAAK;AACVuB,MAAAA,cAAc,CAAC,IAAD,CAAd;AACH,KALL;AAMI,IAAA,SAAS,EAAE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQKX,CAAC,CAAC,UAAD,CARN,CADJ,CADJ,CAHZ,EAmBI,MAAC,GAAD;AAAK,IAAA,SAAS,EAAEN,OAAO,CAAChB,OAAxB;AAAiC,IAAA,CAAC,EAAE,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,eAAD;AACI,IAAA,WAAW,EAAEmB,WADjB;AAEI,IAAA,uBAAuB,EAAEF,KAAK,CAAC8B,uBAFnC;AAGI,IAAA,QAAQ,EAAE3B,QAHd;AAII,IAAA,WAAW,EAAEY,WAJjB;AAKI,IAAA,cAAc,EAAEC,cALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAnBJ,CADJ;AA+BH,CA1GD;;GAAMnB,a;UACchB,S,EAGFJ,c,EAEEX,W,EACAA,W,EACFA,W;;;KARZ+B,a;;AA4GN,IAAM4C,eAAe,GAAG,SAAlBA,eAAkB,CAACzC,KAAD,EAAW;AAC/B,SAAO;AACHA,IAAAA,KAAK,EAAEA,KAAK,CAAC0C,WAAN,CAAkBC;AADtB,GAAP;AAGH,CAJD;;AAMA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD;AAAA,SAAe;AACtC9E,IAAAA,UAAU,EAAE,oBAAC+E,SAAD,EAAYC,SAAZ,EAAuBC,KAAvB;AAAA,aAAiCH,QAAQ,CAAC9E,WAAU,CAAC+E,SAAD,EAAYC,SAAZ,EAAuBC,KAAvB,CAAX,CAAzC;AAAA,KAD0B;AAEtChF,IAAAA,WAAW,EAAE,qBAAC8E,SAAD,EAAYC,SAAZ,EAAuBC,KAAvB;AAAA,aAAiCH,QAAQ,CAAC7E,YAAW,CAAC8E,SAAD,EAAYC,SAAZ,EAAuBC,KAAvB,CAAZ,CAAzC;AAAA;AAFyB,GAAf;AAAA,CAA3B;;AAKA,eAAenF,OAAO,CAAC4E,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C/C,aAA7C,CAAf","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { connect, useSelector } from 'react-redux'\nimport { setToState, updateState } from 'state/actions'\nimport Box from '@material-ui/core/Box'\nimport { DEFAULT_OREST_TOKEN, jsonGroupBy } from 'model/orest/constants'\nimport { FALSE, NULL } from 'model/globals'\nimport WebCmsGlobal from 'components/webcms-global'\nimport ProductMenuList from './product-menu-list'\nimport LoadingSpinner from 'components/LoadingSpinner'\nimport useTranslation from 'lib/translations/hooks/useTranslation'\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport BackIcon from \"@material-ui/icons/KeyboardBackspace\";\n\nconst useStyles = makeStyles((theme) => ({\n    boxRoot: {\n        maxHeight: '60vh',\n        overflowY: 'auto',\n        '&::-webkit-scrollbar': {\n            width: '4px',\n            height: 4,\n            background: '#0000000a',\n        },\n        '&::-webkit-scrollbar-track': {\n            boxShadow: 'inset 0 0 6px rgba(0,0,0,0.00)',\n            webkitBoxShadow: 'inset 0 0 6px rgba(0,0,0,0.00)',\n        },\n        '&::-webkit-scrollbar-thumb': {\n            backgroundColor: 'rgba(12, 12, 12, 0.17)',\n            outline: '1px solid #29609747',\n        },\n    },\n    backButtonContainer: {\n        zIndex: 1,\n        position: 'static',\n        paddingLeft: '16px',\n        backgroundColor: '#FFF',\n        width: '100%'\n    }\n}))\n\nconst EventMenuList = (props) => {\n    const classes = useStyles()\n    const { state, updateState, departId, isAddActive, isSpaRes } = props\n    const { GENERAL_SETTINGS } = useContext(WebCmsGlobal)\n    const { t } = useTranslation()\n\n    const isLogin = useSelector((state) => state.orest.currentUser && state.orest.currentUser.auth) ? true : false\n    const loginfo = useSelector((state) => state.orest.currentUser && state.orest.currentUser.loginfo)\n    const token = useSelector((state) => state.orest.currentUser !== null ? state.orest.currentUser.auth.access_token : DEFAULT_OREST_TOKEN)\n    const [isLoading, setIsLoading] = useState(false)\n    const [sPGroupName, setSPGroupName] = useState(null)\n\n    let clientParams = {}\n    clientParams.hotelrefno = loginfo && loginfo.hotelrefno || GENERAL_SETTINGS.HOTELREFNO\n\n    if(loginfo && loginfo.hotelgidstr){\n        clientParams.hoteltoken = loginfo && loginfo.hotelgidstr\n    }\n\n    clientParams.departid = departId\n    if(isLogin){\n        clientParams.clienttoken = token\n    }\n\n    useEffect(() => {\n\n        let isChainHotelChange = false\n        if (GENERAL_SETTINGS.ISCHAIN && state.changeHotelRefno !== false) {\n            clientParams.ischain = true\n            clientParams.chainid = state.changeHotelRefno\n            clientParams.hotelrefno = GENERAL_SETTINGS.HOTELREFNO\n\n            if(clientParams.chainid !== state.infoList.chainid){\n                isChainHotelChange = true\n            }\n\n        } else {\n            clientParams.ischain = false\n            clientParams.chainid = false\n        }\n\n        if ((state.menuGroupAndProductList === FALSE || isChainHotelChange) && !isLoading) {\n            setIsLoading(true)\n            axios({\n                url: GENERAL_SETTINGS.BASE_URL + 'api/products/product-list',\n                method: 'post',\n                params: clientParams\n            }).then((productListResponse) => {\n                const productListData = productListResponse.data\n                if (productListData.success && productListData.data.length > 0) {\n                    updateState('guest', 'menuGroupAndProductList', jsonGroupBy(productListData.data, 'spgroupdesc'))\n                    setIsLoading(false)\n                } else {\n                    updateState('guest', 'menuGroupAndProductList', null)\n                    setIsLoading(false)\n                }\n            }).catch(()=> {\n                updateState('guest', 'menuGroupAndProductList', null)\n                setIsLoading(false)\n            })\n        }\n    }, [state.changeHotelRefno, departId])\n\n    if (state.menuGroupAndProductList === FALSE || isLoading) {\n        return (\n            <Box p={2}>\n                <LoadingSpinner />\n            </Box>\n        )\n    }\n\n    if (state.menuGroupAndProductList === NULL) {\n        return <Box p={2}>{t('str_noMenusAvailable')}</Box>\n    }\n\n    return (\n        <React.Fragment>\n            {\n                sPGroupName && (\n                    <div style={{position: 'relative'}}>\n                        <div className={classes.backButtonContainer}>\n                            <Button\n                                variant=\"outlined\"\n                                color=\"primary\"\n                                onClick={()=> {\n                                    setSPGroupName(null)\n                                }}\n                                startIcon={<BackIcon />}\n                            >\n                                {t('str_menu')}\n                            </Button>\n                        </div>\n                    </div>\n                )\n            }\n            <Box className={classes.boxRoot} p={2}>\n                <ProductMenuList\n                    isAddActive={isAddActive}\n                    menuGroupAndProductList={state.menuGroupAndProductList}\n                    isSpaRes={isSpaRes}\n                    sPGroupName={sPGroupName}\n                    setSPGroupName={setSPGroupName}\n                />\n            </Box>\n        </React.Fragment>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        state: state.formReducer.guest,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value)),\n    updateState: (stateType, stateName, value) => dispatch(updateState(stateType, stateName, value)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EventMenuList)\n"]},"metadata":{},"sourceType":"module"}