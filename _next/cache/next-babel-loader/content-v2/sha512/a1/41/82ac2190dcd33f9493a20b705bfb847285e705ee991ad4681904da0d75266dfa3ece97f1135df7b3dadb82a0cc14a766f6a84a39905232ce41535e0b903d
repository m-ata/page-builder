{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/guest/account/Preferences/RemarkGroup.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport styles from './style/RemarkGroup.style';\nimport PopupState, { bindTrigger, bindMenu } from 'material-ui-popup-state';\nimport LoadingSpinner from '../../../LoadingSpinner';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport Typography from '@material-ui/core/Typography';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport { ViewList, List, Insert, UseOrest } from '@webcms/orest';\nimport { DEFAULT_OREST_TOKEN, isErrorMsg, OREST_ENDPOINT } from '../../../../model/orest/constants';\nimport WebCmsGlobal from '../../../webcms-global';\nimport { connect, useSelector } from 'react-redux';\nimport RemarkRadio from './RemarkRadio';\nimport RemarkCheckbox from './RemarkCheckbox';\nimport CheckIcon from '@material-ui/icons/Check';\nimport { makeStyles } from '@material-ui/core/styles';\nimport stylesTabPanel from '../style/TabPanel.style';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { CustomToolTip } from \"../../../user-portal/components/CustomToolTip/CustomToolTip\";\nimport AddIcon from '@material-ui/icons/Add';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { useSnackbar } from 'notistack';\nimport RemarkChild from \"./RemarkChild\";\nimport { setToState, updateState } from \"../../../../state/actions\";\nimport { SLASH } from \"../../../../model/globals\";\nimport TrackedChangesDialog from \"../../../TrackedChangesDialog\";\nconst useStyles = makeStyles(styles);\nconst useStylesTabPanel = makeStyles(stylesTabPanel);\n\nfunction RemarkGroup(props) {\n  const {\n    t\n  } = useTranslation();\n  const {\n    state,\n    setToState,\n    updateState,\n    remarkGroup,\n    index,\n    isDisabled,\n    isSuperUser\n  } = props;\n  const classes = useStyles();\n  const classesTabPanel = useStylesTabPanel();\n  const {\n    GENERAL_SETTINGS\n  } = useContext(WebCmsGlobal);\n  const {\n    enqueueSnackbar\n  } = useSnackbar(); //redux\n\n  const token = useSelector(state => {\n    var _state$orest, _state$orest$currentU, _state$orest$currentU2;\n\n    return (state === null || state === void 0 ? void 0 : (_state$orest = state.orest) === null || _state$orest === void 0 ? void 0 : (_state$orest$currentU = _state$orest.currentUser) === null || _state$orest$currentU === void 0 ? void 0 : (_state$orest$currentU2 = _state$orest$currentU.auth) === null || _state$orest$currentU2 === void 0 ? void 0 : _state$orest$currentU2.access_token) || false;\n  });\n  const loginfo = useSelector(state => state.orest.currentUser && state.orest.currentUser.loginfo);\n  const isClient = loginfo.roletype === '6500310';\n  const hotelRefNo = useSelector(state => {\n    var _state$hotelinfo;\n\n    return (state === null || state === void 0 ? void 0 : (_state$hotelinfo = state.hotelinfo) === null || _state$hotelinfo === void 0 ? void 0 : _state$hotelinfo.currentHotelRefNo) || null;\n  }); //state\n\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    0: isInitialized,\n    1: setIsInitialized\n  } = useState(false);\n  const {\n    0: remarks,\n    1: setRemarks\n  } = useState(null);\n  const {\n    0: radioGroupValue,\n    1: setRadioGroupValue\n  } = useState('');\n  const {\n    0: isRadioGroupLoading,\n    1: setIsRadioGroupLoading\n  } = useState(false);\n  const {\n    0: expanded,\n    1: setExpanded\n  } = useState(index === 0 ? \"panel1\" : false);\n  const {\n    0: openToolTip,\n    1: setOpenToolTip\n  } = useState(false);\n  const {\n    0: openAddRemarkDialog,\n    1: setOpenAddRemarkDialog\n  } = useState(false);\n  const {\n    0: openTrackedDialog,\n    1: setOpenTrackedDialog\n  } = useState(false);\n  const {\n    0: remarkData,\n    1: setRemarkData\n  } = useState(null);\n  const {\n    0: isRemarkSaving,\n    1: setIsRemarkSaving\n  } = useState(false);\n  const {\n    0: remarkGroupId,\n    1: setRemarkGroupId\n  } = useState(-1);\n  const {\n    0: remarkDesc,\n    1: setRemarkDesc\n  } = useState({\n    value: '',\n    isError: false,\n    errorType: ''\n  });\n  useEffect(() => {\n    let active = true;\n\n    if (active) {\n      if (isLoading) {\n        return undefined;\n      }\n\n      getRemarkList(active);\n    }\n\n    return () => {\n      active = false;\n    };\n  }, []);\n  useEffect(() => {\n    if (remarkDesc.value.length > 0 && remarkDesc.value.length < 2) {\n      setRemarkDesc(_objectSpread(_objectSpread({}, remarkDesc), {}, {\n        value: remarkDesc.value,\n        isError: true,\n        errorType: 'lengthError'\n      }));\n    } else {\n      setRemarkDesc(_objectSpread(_objectSpread({}, remarkDesc), {}, {\n        value: remarkDesc.value,\n        isError: false,\n        errorType: ''\n      }));\n    }\n\n    if (remarkDesc.value.length > 0) {\n      const timer = setTimeout(() => {\n        var _remarkDesc$value;\n\n        List({\n          apiUrl: GENERAL_SETTINGS.OREST_URL,\n          endpoint: OREST_ENDPOINT.REMARK,\n          token,\n          params: {\n            query: `code::${(_remarkDesc$value = remarkDesc.value) === null || _remarkDesc$value === void 0 ? void 0 : _remarkDesc$value.toUpperCase()}`,\n            hotelrefno: remarkGroup.hotelrefno || hotelRefNo\n          }\n        }).then(res => {\n          if (res.status === 200) {\n            if (res.data.count > 0) {\n              setRemarkDesc(_objectSpread(_objectSpread({}, remarkDesc), {}, {\n                value: remarkDesc.value,\n                isError: true,\n                errorType: 'invalidCode'\n              }));\n            }\n          }\n        });\n      }, 700);\n      return () => clearTimeout(timer);\n    }\n  }, [remarkDesc.value]);\n\n  if (!remarkGroup) {\n    return __jsx(LoadingSpinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 16\n      }\n    });\n  }\n\n  const getRemarkList = active => {\n    setIsLoading(true);\n\n    if (remarkGroup) {\n      ViewList({\n        apiUrl: GENERAL_SETTINGS.OREST_URL,\n        endpoint: OREST_ENDPOINT.REMARK,\n        token: token,\n        params: {\n          query: `isactive:true,remarkgrid:${remarkGroup.id}`,\n          sort: 'orderno',\n          allhotels: true\n        }\n      }).then(r => {\n        if (active) {\n          if (r.status === 200) {\n            setRemarks(r.data.data);\n            setIsInitialized(true);\n            setIsLoading(false);\n          } else {\n            setIsInitialized(true);\n            setIsLoading(false);\n          }\n        }\n      });\n    } else {\n      setIsInitialized(true);\n      setIsLoading(false);\n    }\n  };\n\n  const handleChange = panel => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  const handleOpenToolTip = () => {\n    if (remarkDesc.value.length <= 0 || remarkDesc.isError) {\n      setOpenToolTip(true);\n    }\n  };\n\n  const handleCloseToolTip = () => {\n    setOpenToolTip(false);\n  };\n\n  const handleRemarkDef = () => {\n    UseOrest({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.REMARK + SLASH + OREST_ENDPOINT.DEF,\n      token,\n      params: {\n        hotelrefno: hotelRefNo || GENERAL_SETTINGS.HOTELREFNO\n      }\n    }).then(res => {\n      if (res.status === 200) {\n        setRemarkData(res.data.data);\n      } else {\n        const err = isErrorMsg(res);\n        enqueueSnackbar(t(err.errorMsg), {\n          variant: 'error'\n        });\n      }\n    });\n  };\n\n  const handleRemarkSave = () => {\n    setIsRemarkSaving(true);\n\n    if (remarkGroupId !== -1) {\n      if (remarkDesc !== '') {\n        var _remarkDesc$value2, _remarkDesc$value3, _remarkDesc$value4;\n\n        const data = remarkData;\n        data.code = ((_remarkDesc$value2 = remarkDesc.value) === null || _remarkDesc$value2 === void 0 ? void 0 : _remarkDesc$value2.length) > 50 ? (_remarkDesc$value3 = remarkDesc.value) === null || _remarkDesc$value3 === void 0 ? void 0 : _remarkDesc$value3.toUpperCase().substring(0, 50) : (_remarkDesc$value4 = remarkDesc.value) === null || _remarkDesc$value4 === void 0 ? void 0 : _remarkDesc$value4.toUpperCase();\n        data.description = remarkDesc.value;\n        data.remarkgrid = remarkGroupId;\n        data.isorsactive = true;\n        Insert({\n          apiUrl: GENERAL_SETTINGS.OREST_URL,\n          endpoint: OREST_ENDPOINT.REMARK,\n          token,\n          params: {\n            hotelrefno: remarkGroup.hotelrefno || hotelRefNo\n          },\n          data: data\n        }).then(res => {\n          setIsRemarkSaving(false);\n\n          if (res.status === 200) {\n            enqueueSnackbar(t('str_processCompletedSuccessfully'), {\n              variant: 'success'\n            });\n            setOpenAddRemarkDialog(false);\n            getRemarkList(true);\n            handleReset();\n          } else {\n            const error = isErrorMsg(res);\n            enqueueSnackbar(error.errorMsg, {\n              variant: 'error'\n            });\n          }\n        });\n      }\n    }\n  };\n\n  const handleCloseAddRemarkDialog = () => {\n    if (remarkDesc.value !== '') {\n      setOpenTrackedDialog(true);\n    } else {\n      setOpenAddRemarkDialog(false);\n      handleReset();\n    }\n  };\n\n  const handleReset = () => {\n    setRemarkDesc({\n      value: '',\n      isError: false,\n      errorType: ''\n    });\n  };\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 13\n    }\n  }, isClient ? __jsx(FormControl, {\n    component: \"fieldset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 25\n    }\n  }, __jsx(FormLabel, {\n    component: \"legend\",\n    focused: false,\n    className: classes.formLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 29\n    }\n  }, __jsx(\"span\", {\n    className: classes.number,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 33\n    }\n  }, index + 1, \".\"), t(remarkGroup === null || remarkGroup === void 0 ? void 0 : remarkGroup.description)), isInitialized ? remarks && remarks.length > 0 ? __jsx(RemarkChild, {\n    remarkGroup: remarkGroup,\n    isClient: isClient,\n    isHorizontal: (remarkGroup === null || remarkGroup === void 0 ? void 0 : remarkGroup.ishoriz) || false,\n    isDisabled: isDisabled,\n    remarks: remarks,\n    radioGroupValue: radioGroupValue,\n    setRadioGroupValue: setRadioGroupValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 37\n    }\n  }) : __jsx(Typography, {\n    component: \"h3\",\n    className: classesTabPanel.nothingToShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 37\n    }\n  }, t('No option to show.')) : __jsx(LoadingSpinner, {\n    size: 30,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 33\n    }\n  })) : __jsx(Accordion, {\n    className: classes.accordionSummaryStyle,\n    expanded: expanded === \"panel1\",\n    onChange: handleChange(\"panel1\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 25\n    }\n  }, __jsx(AccordionSummary, {\n    expandIcon: __jsx(ExpandMoreIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 45\n      }\n    }),\n    \"aria-controls\": \"panel1a-content\",\n    id: \"panel1a-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 29\n    }\n  }, __jsx(\"div\", {\n    className: classes.summaryContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 33\n    }\n  }, __jsx(Typography, {\n    className: classes.formLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 37\n    }\n  }, __jsx(\"span\", {\n    className: classes.number,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 41\n    }\n  }, index + 1, \".\"), t(remarkGroup === null || remarkGroup === void 0 ? void 0 : remarkGroup.description)), __jsx(\"div\", {\n    className: classes.addRemarkDiv,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 37\n    }\n  }, __jsx(CustomToolTip, {\n    title: t('str_addNewRemark'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 41\n    }\n  }, __jsx(IconButton, {\n    onClick: e => {\n      e.stopPropagation();\n      setOpenAddRemarkDialog(true);\n      setRemarkGroupId(remarkGroup.id);\n      handleRemarkDef();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 45\n    }\n  }, __jsx(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 49\n    }\n  })))))), __jsx(AccordionDetails, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 29\n    }\n  }, __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 33\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 37\n    }\n  }, isInitialized ? remarks && remarks.length > 0 ? __jsx(RemarkChild, {\n    remarkGroup: remarkGroup,\n    isClient: isClient,\n    isHorizontal: (remarkGroup === null || remarkGroup === void 0 ? void 0 : remarkGroup.ishoriz) || false,\n    isDisabled: isDisabled,\n    remarks: remarks,\n    radioGroupValue: radioGroupValue,\n    setRadioGroupValue: setRadioGroupValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 49\n    }\n  }) : __jsx(Typography, {\n    component: \"h3\",\n    className: classesTabPanel.nothingToShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 49\n    }\n  }, t('No option to show.')) : __jsx(LoadingSpinner, {\n    size: 30,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 45\n    }\n  })))))), __jsx(Dialog, {\n    open: openAddRemarkDialog,\n    maxWidth: \"sm\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    style: {\n      padding: \"24px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 21\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 25\n    }\n  }, __jsx(Typography, {\n    style: {\n      fontSize: '24px',\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 29\n    }\n  }, t('str_newRemark'))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 25\n    }\n  }, __jsx(TextField, {\n    error: remarkDesc.isError,\n    id: \"remark-desc\",\n    name: \"remark-desc\",\n    variant: \"outlined\",\n    fullWidth: true,\n    label: t(\"str_description\"),\n    required: true,\n    FormHelperTextProps: {\n      style: {\n        opacity: remarkDesc.isError ? '1' : '0'\n      }\n    },\n    helperText: remarkDesc.isError ? remarkDesc.errorType === 'lengthError' ? 'Length must be between 2 and 50' : remarkDesc.errorType === 'required' ? t('str_mandatory') : remarkDesc.errorType === 'invalidCode' ? t('str_thereIsAlreadyExistUniqueValue') + remarkDesc.value : '' : 'null',\n    onChange: e => {\n      setRemarkDesc(_objectSpread(_objectSpread({}, remarkDesc), {}, {\n        value: e.target.value,\n        isError: e.target.value === '' ? true : remarkDesc.isError,\n        errorType: e.target.value === '' ? 'required' : remarkDesc.errorType\n      }));\n    },\n    onBlur: () => {\n      setRemarkDesc(_objectSpread(_objectSpread({}, remarkDesc), {}, {\n        value: remarkDesc.value,\n        isError: remarkDesc.value === '' ? true : remarkDesc.isError,\n        errorType: remarkDesc.value === '' ? 'required' : remarkDesc.errorType\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 29\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    style: {\n      textAlign: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 29\n    }\n  }, __jsx(Button, {\n    disabled: isRemarkSaving,\n    color: 'primary',\n    variant: 'outlined',\n    startIcon: __jsx(ClearIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 48\n      }\n    }),\n    onClick: handleCloseAddRemarkDialog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 33\n    }\n  }, t(\"str_cancel\")), __jsx(CustomToolTip, {\n    open: openToolTip,\n    onOpen: handleOpenToolTip,\n    onClose: handleCloseToolTip,\n    title: __jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 41\n      }\n    }, remarkDesc.value.length <= 0 || remarkDesc.isError ? __jsx(Typography, {\n      style: {\n        fontSize: \"inherit\",\n        fontWeight: \"bold\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 53\n      }\n    }, t(\"str_invalidFields\"), \":\") : null, remarkDesc.value.length <= 0 || remarkDesc.isError ? __jsx(Typography, {\n      style: {\n        fontSize: \"inherit\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 53\n      }\n    }, t(\"str_description\")) : null),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 33\n    }\n  }, __jsx(\"div\", {\n    style: {\n      display: \"inline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 37\n    }\n  }, __jsx(Button, {\n    style: {\n      marginLeft: '8px'\n    },\n    startIcon: isRemarkSaving ? __jsx(LoadingSpinner, {\n      size: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 73\n      }\n    }) : __jsx(CheckIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 103\n      }\n    }),\n    disabled: isRemarkSaving || remarkDesc.value.length <= 0 || remarkDesc.isError,\n    color: \"primary\",\n    variant: \"contained\",\n    onClick: () => handleRemarkSave(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 41\n    }\n  }, t(\"str_save\"))))))))), __jsx(TrackedChangesDialog, {\n    open: openTrackedDialog,\n    onPressNo: e => setOpenTrackedDialog(e),\n    onPressYes: e => {\n      setOpenTrackedDialog(e);\n      setOpenAddRemarkDialog(false);\n      setTimeout(() => {\n        handleReset();\n      }, 50);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 13\n    }\n  }));\n}\n\nconst mapStateToProps = state => {\n  return {\n    state: state.formReducer.guest\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value)),\n  updateState: (stateType, stateName, value) => dispatch(updateState(stateType, stateName, value))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RemarkGroup);","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/guest/account/Preferences/RemarkGroup.js"],"names":["React","useContext","useEffect","useState","styles","PopupState","bindTrigger","bindMenu","LoadingSpinner","Grid","FormControl","FormLabel","FormGroup","TextField","Dialog","Typography","Menu","MenuItem","Button","IconButton","RadioGroup","ViewList","List","Insert","UseOrest","DEFAULT_OREST_TOKEN","isErrorMsg","OREST_ENDPOINT","WebCmsGlobal","connect","useSelector","RemarkRadio","RemarkCheckbox","CheckIcon","makeStyles","stylesTabPanel","useTranslation","Accordion","AccordionSummary","AccordionDetails","ExpandMoreIcon","CustomToolTip","AddIcon","ClearIcon","MoreVertIcon","useSnackbar","RemarkChild","setToState","updateState","SLASH","TrackedChangesDialog","useStyles","useStylesTabPanel","RemarkGroup","props","t","state","remarkGroup","index","isDisabled","isSuperUser","classes","classesTabPanel","GENERAL_SETTINGS","enqueueSnackbar","token","orest","currentUser","auth","access_token","loginfo","isClient","roletype","hotelRefNo","hotelinfo","currentHotelRefNo","isLoading","setIsLoading","isInitialized","setIsInitialized","remarks","setRemarks","radioGroupValue","setRadioGroupValue","isRadioGroupLoading","setIsRadioGroupLoading","expanded","setExpanded","openToolTip","setOpenToolTip","openAddRemarkDialog","setOpenAddRemarkDialog","openTrackedDialog","setOpenTrackedDialog","remarkData","setRemarkData","isRemarkSaving","setIsRemarkSaving","remarkGroupId","setRemarkGroupId","remarkDesc","setRemarkDesc","value","isError","errorType","active","undefined","getRemarkList","length","timer","setTimeout","apiUrl","OREST_URL","endpoint","REMARK","params","query","toUpperCase","hotelrefno","then","res","status","data","count","clearTimeout","id","sort","allhotels","r","handleChange","panel","event","isExpanded","handleOpenToolTip","handleCloseToolTip","handleRemarkDef","DEF","HOTELREFNO","err","errorMsg","variant","handleRemarkSave","code","substring","description","remarkgrid","isorsactive","handleReset","error","handleCloseAddRemarkDialog","formLabel","number","ishoriz","nothingToShow","accordionSummaryStyle","summaryContainer","addRemarkDiv","e","stopPropagation","padding","fontSize","fontWeight","style","opacity","target","textAlign","display","marginLeft","mapStateToProps","formReducer","guest","mapDispatchToProps","dispatch","stateType","stateName"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport styles from './style/RemarkGroup.style'\nimport PopupState, { bindTrigger, bindMenu } from 'material-ui-popup-state'\nimport LoadingSpinner from '../../../LoadingSpinner'\nimport Grid from '@material-ui/core/Grid'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport TextField from '@material-ui/core/TextField'\nimport Dialog from '@material-ui/core/Dialog'\nimport Typography from '@material-ui/core/Typography'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Button from '@material-ui/core/Button'\nimport IconButton from '@material-ui/core/IconButton'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport { ViewList, List, Insert, UseOrest } from '@webcms/orest'\nimport { DEFAULT_OREST_TOKEN, isErrorMsg, OREST_ENDPOINT } from '../../../../model/orest/constants'\nimport WebCmsGlobal from '../../../webcms-global'\nimport { connect, useSelector } from 'react-redux'\nimport RemarkRadio from './RemarkRadio'\nimport RemarkCheckbox from './RemarkCheckbox'\nimport CheckIcon from '@material-ui/icons/Check';\nimport { makeStyles } from '@material-ui/core/styles'\nimport stylesTabPanel from '../style/TabPanel.style'\nimport useTranslation from 'lib/translations/hooks/useTranslation'\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport {CustomToolTip} from \"../../../user-portal/components/CustomToolTip/CustomToolTip\";\nimport AddIcon from '@material-ui/icons/Add'\nimport ClearIcon from '@material-ui/icons/Clear';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport {useSnackbar} from 'notistack'\nimport RemarkChild from \"./RemarkChild\";\nimport {setToState, updateState} from \"../../../../state/actions\";\nimport {SLASH} from \"../../../../model/globals\";\nimport TrackedChangesDialog from \"../../../TrackedChangesDialog\";\n\nconst useStyles = makeStyles(styles)\nconst useStylesTabPanel = makeStyles(stylesTabPanel)\n\nfunction RemarkGroup(props) {\n    const { t } = useTranslation()\n    const { state, setToState, updateState, remarkGroup, index, isDisabled, isSuperUser } = props\n    const classes = useStyles()\n    const classesTabPanel = useStylesTabPanel()\n    const { GENERAL_SETTINGS } = useContext(WebCmsGlobal)\n    const { enqueueSnackbar } = useSnackbar()\n\n    //redux\n    const token = useSelector((state) => state?.orest?.currentUser?.auth?.access_token || false)\n    const loginfo = useSelector((state) => state.orest.currentUser && state.orest.currentUser.loginfo)\n    const isClient = loginfo.roletype === '6500310'\n    const hotelRefNo = useSelector(state => state?.hotelinfo?.currentHotelRefNo || null);\n\n\n    //state\n    const [isLoading, setIsLoading] = useState(false)\n    const [isInitialized, setIsInitialized] = useState(false)\n    const [remarks, setRemarks] = useState(null)\n    const [radioGroupValue, setRadioGroupValue] = useState('')\n    const [isRadioGroupLoading, setIsRadioGroupLoading] = useState(false)\n    const [expanded, setExpanded] = useState(index === 0 ? \"panel1\" : false);\n    const [openToolTip, setOpenToolTip] = useState(false);\n    const [openAddRemarkDialog, setOpenAddRemarkDialog] = useState(false);\n    const [openTrackedDialog, setOpenTrackedDialog] = useState(false);\n\n\n\n    const [remarkData, setRemarkData] = useState(null);\n    const [isRemarkSaving, setIsRemarkSaving] = useState(false);\n    const [remarkGroupId, setRemarkGroupId] = useState(-1);\n    const [remarkDesc, setRemarkDesc] = useState({\n        value: '',\n        isError: false,\n        errorType: ''\n    });\n\n\n\n    useEffect(() => {\n        let active = true\n        if (active) {\n            if (isLoading) {\n                return undefined\n            }\n\n            getRemarkList(active)\n\n        }\n\n        return () => {\n            active = false\n        }\n    }, [])\n\n    useEffect(() => {\n        if(remarkDesc.value.length > 0 && remarkDesc.value.length < 2) {\n            setRemarkDesc({\n                ...remarkDesc,\n                value: remarkDesc.value,\n                isError: true,\n                errorType: 'lengthError'\n            })\n        } else {\n            setRemarkDesc({\n                ...remarkDesc,\n                value: remarkDesc.value,\n                isError: false,\n                errorType: ''\n            })\n        }\n\n        if(remarkDesc.value.length > 0){\n            const timer = setTimeout(() => {\n                List({\n                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                    endpoint: OREST_ENDPOINT.REMARK,\n                    token,\n                    params: {\n                        query: `code::${remarkDesc.value?.toUpperCase()}`,\n                        hotelrefno: remarkGroup.hotelrefno || hotelRefNo\n                    }\n                }).then(res => {\n                    if(res.status === 200) {\n                        if(res.data.count > 0) {\n                            setRemarkDesc({\n                                ...remarkDesc,\n                                value: remarkDesc.value,\n                                isError: true,\n                                errorType: 'invalidCode'\n                            })\n                        }\n                    }\n                })\n            }, 700)\n            return () =>  clearTimeout(timer)\n        }\n\n    },[remarkDesc.value])\n\n    if (!remarkGroup) {\n        return <LoadingSpinner />\n    }\n\n    const getRemarkList = (active) => {\n        setIsLoading(true)\n        if (remarkGroup) {\n            ViewList({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: OREST_ENDPOINT.REMARK,\n                token: token,\n                params: {\n                    query: `isactive:true,remarkgrid:${remarkGroup.id}`,\n                    sort: 'orderno',\n                    allhotels: true\n                },\n            }).then((r) => {\n                if (active) {\n                    if (r.status === 200) {\n                        setRemarks(r.data.data)\n                        setIsInitialized(true)\n                        setIsLoading(false)\n                    } else {\n                        setIsInitialized(true)\n                        setIsLoading(false)\n                    }\n                }\n            })\n        } else {\n            setIsInitialized(true)\n            setIsLoading(false)\n        }\n    }\n\n    const handleChange = (panel) => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n\n    const handleOpenToolTip = () => {\n        if(remarkDesc.value.length <= 0 || remarkDesc.isError) {\n            setOpenToolTip(true)\n        }\n\n    }\n\n    const handleCloseToolTip = () => {\n        setOpenToolTip(false);\n    }\n\n    const handleRemarkDef = () => {\n        UseOrest({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.REMARK + SLASH + OREST_ENDPOINT.DEF,\n            token,\n            params: {\n                hotelrefno: hotelRefNo || GENERAL_SETTINGS.HOTELREFNO\n            }\n        }).then(res => {\n            if(res.status === 200) {\n                setRemarkData(res.data.data)\n            } else {\n                const err = isErrorMsg(res);\n                enqueueSnackbar(t(err.errorMsg), {variant: 'error'})\n            }\n\n        })\n    }\n\n\n\n    const handleRemarkSave = () => {\n        setIsRemarkSaving(true);\n        if(remarkGroupId !== -1) {\n            if(remarkDesc !== '') {\n                const data = remarkData\n                data.code = remarkDesc.value?.length > 50 ? remarkDesc.value?.toUpperCase().substring(0, 50) : remarkDesc.value?.toUpperCase();\n                data.description = remarkDesc.value;\n                data.remarkgrid = remarkGroupId;\n                data.isorsactive = true;\n                Insert({\n                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                    endpoint: OREST_ENDPOINT.REMARK,\n                    token,\n                    params: {\n                        hotelrefno: remarkGroup.hotelrefno || hotelRefNo\n                    },\n                    data: data\n                }).then(res => {\n                    setIsRemarkSaving(false);\n                    if(res.status === 200){\n                        enqueueSnackbar(t('str_processCompletedSuccessfully'), {variant: 'success'})\n                        setOpenAddRemarkDialog(false);\n                        getRemarkList(true)\n                        handleReset()\n                    } else {\n                        const error = isErrorMsg(res)\n                        enqueueSnackbar(error.errorMsg, {variant: 'error'})\n                    }\n                })\n            }\n        }\n    }\n\n    const handleCloseAddRemarkDialog = () => {\n        if(remarkDesc.value !== '') {\n            setOpenTrackedDialog(true);\n        } else {\n            setOpenAddRemarkDialog(false);\n            handleReset();\n        }\n\n    }\n\n    const handleReset = () => {\n        setRemarkDesc({\n            value: '',\n            isError: false,\n            errorType: ''\n        })\n    }\n\n\n    return (\n        <React.Fragment>\n            <Grid item xs={12}>\n                {\n                    isClient ? (\n                        <FormControl component=\"fieldset\">\n                            <FormLabel component=\"legend\" focused={false} className={classes.formLabel}>\n                                <span className={classes.number}>{index + 1}.</span>\n                                {t(remarkGroup?.description)}\n                            </FormLabel>\n                            {isInitialized  ? (\n                                remarks && remarks.length > 0 ? (\n                                    <RemarkChild\n                                        remarkGroup={remarkGroup}\n                                        isClient={isClient}\n                                        isHorizontal={remarkGroup?.ishoriz || false}\n                                        isDisabled={isDisabled}\n                                        remarks={remarks}\n                                        radioGroupValue={radioGroupValue}\n                                        setRadioGroupValue={setRadioGroupValue}\n                                    />\n                                ) : (\n                                    <Typography component=\"h3\" className={classesTabPanel.nothingToShow}>\n                                        {t('No option to show.')}\n                                    </Typography>\n                                )\n                            ) : (\n                                <LoadingSpinner size={30} />\n                            )}\n                        </FormControl>\n                    ) : (\n                        <Accordion\n                            className={classes.accordionSummaryStyle}\n                            expanded={expanded === \"panel1\"}\n                            onChange={handleChange(\"panel1\")}\n                        >\n                            <AccordionSummary\n                                expandIcon={<ExpandMoreIcon />}\n                                aria-controls=\"panel1a-content\"\n                                id=\"panel1a-header\"\n                            >\n                                <div className={classes.summaryContainer}>\n                                    <Typography className={classes.formLabel}>\n                                        <span className={classes.number}>{index + 1}.</span>\n                                        {t(remarkGroup?.description)}\n                                    </Typography>\n                                    <div className={classes.addRemarkDiv}>\n                                        <CustomToolTip title={t('str_addNewRemark')}>\n                                            <IconButton\n                                                onClick={(e) => {\n                                                    e.stopPropagation()\n                                                    setOpenAddRemarkDialog(true)\n                                                    setRemarkGroupId(remarkGroup.id)\n                                                    handleRemarkDef();\n                                                }}\n                                            >\n                                                <AddIcon />\n                                            </IconButton>\n                                        </CustomToolTip>\n                                    </div>\n                                </div>\n                            </AccordionSummary>\n                            <AccordionDetails>\n                                <Grid container>\n                                    <Grid item xs>\n                                        {isInitialized  ? (\n                                            remarks && remarks.length > 0 ? (\n                                                <RemarkChild\n                                                    remarkGroup={remarkGroup}\n                                                    isClient={isClient}\n                                                    isHorizontal={remarkGroup?.ishoriz || false}\n                                                    isDisabled={isDisabled}\n                                                    remarks={remarks}\n                                                    radioGroupValue={radioGroupValue}\n                                                    setRadioGroupValue={setRadioGroupValue}\n                                                />\n                                            ) : (\n                                                <Typography component=\"h3\" className={classesTabPanel.nothingToShow}>\n                                                    {t('No option to show.')}\n                                                </Typography>\n                                            )\n                                        ) : (\n                                            <LoadingSpinner size={30} />\n                                        )}\n                                    </Grid>\n                                </Grid>\n                            </AccordionDetails>\n                        </Accordion>\n                    )\n                }\n            </Grid>\n            <Dialog\n                open={openAddRemarkDialog}\n                maxWidth={\"sm\"}\n                fullWidth\n            >\n                <div style={{padding: \"24px\"}}>\n                    <Grid container spacing={3}>\n                        <Grid item xs={12}>\n                            <Typography style={{fontSize: '24px', fontWeight: 'bold'}}>{t('str_newRemark')}</Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                error={remarkDesc.isError}\n                                id={\"remark-desc\"}\n                                name={\"remark-desc\"}\n                                variant={\"outlined\"}\n                                fullWidth\n                                label={t(\"str_description\")}\n                                required\n                                FormHelperTextProps={{\n                                    style:  {opacity: remarkDesc.isError  ? '1' : '0'}\n                                }}\n                                helperText={remarkDesc.isError ? remarkDesc.errorType === 'lengthError' ? 'Length must be between 2 and 50' : remarkDesc.errorType === 'required' ? t('str_mandatory') : remarkDesc.errorType === 'invalidCode' ? t('str_thereIsAlreadyExistUniqueValue') + remarkDesc.value : '' : 'null'}\n                                onChange={(e) => {\n                                    setRemarkDesc({\n                                        ...remarkDesc,\n                                        value: e.target.value,\n                                        isError: e.target.value === '' ? true : remarkDesc.isError,\n                                        errorType: e.target.value === '' ? 'required' : remarkDesc.errorType\n                                    })\n                                }}\n                                onBlur={() => {\n                                    setRemarkDesc({\n                                        ...remarkDesc,\n                                        value: remarkDesc.value,\n                                        isError: remarkDesc.value === '' ? true : remarkDesc.isError,\n                                        errorType: remarkDesc.value === '' ? 'required' : remarkDesc.errorType\n                                    })\n                                }}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <div style={{textAlign: \"right\"}}>\n                                <Button\n                                    disabled={isRemarkSaving}\n                                    color={'primary'}\n                                    variant={'outlined'}\n                                    startIcon={<ClearIcon />}\n                                    onClick={handleCloseAddRemarkDialog}\n                                >\n                                    {t(\"str_cancel\")}\n                                </Button>\n                                <CustomToolTip\n                                    open={openToolTip}\n                                    onOpen={handleOpenToolTip}\n                                    onClose={handleCloseToolTip}\n                                    title={\n                                        <React.Fragment>\n                                            {\n                                                remarkDesc.value.length <= 0 || remarkDesc.isError ? (\n                                                    <Typography style={{fontSize: \"inherit\", fontWeight: \"bold\"}}>{t(\"str_invalidFields\")}:</Typography>\n                                                ) : null\n                                            }\n                                            {\n                                                remarkDesc.value.length <= 0 || remarkDesc.isError ?  (\n                                                    <Typography style={{fontSize: \"inherit\"}}>{t(\"str_description\")}</Typography>\n                                                ) : null\n                                            }\n                                        </React.Fragment>\n                                    }\n                                >\n                                    <div style={{display: \"inline\"}}>\n                                        <Button\n                                            style={{marginLeft: '8px'}}\n                                            startIcon={isRemarkSaving ? <LoadingSpinner size={24}/> : <CheckIcon />}\n                                            disabled={isRemarkSaving || remarkDesc.value.length <= 0 || remarkDesc.isError}\n                                            color={\"primary\"}\n                                            variant={\"contained\"}\n                                            onClick={() => handleRemarkSave()}\n                                        >\n                                            {t(\"str_save\")}\n                                        </Button>\n                                    </div>\n                                </CustomToolTip>\n                            </div>\n                        </Grid>\n                    </Grid>\n                </div>\n            </Dialog>\n            <TrackedChangesDialog\n                open={openTrackedDialog}\n                onPressNo={(e) => setOpenTrackedDialog(e)}\n                onPressYes={(e) => {\n                    setOpenTrackedDialog(e);\n                    setOpenAddRemarkDialog(false);\n                    setTimeout(() => {\n                        handleReset();\n                    }, 50)\n                }}\n            />\n        </React.Fragment>\n\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        state: state.formReducer.guest,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value)),\n    updateState: (stateType, stateName, value) => dispatch(updateState(stateType, stateName, value)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RemarkGroup)\n"]},"metadata":{},"sourceType":"module"}