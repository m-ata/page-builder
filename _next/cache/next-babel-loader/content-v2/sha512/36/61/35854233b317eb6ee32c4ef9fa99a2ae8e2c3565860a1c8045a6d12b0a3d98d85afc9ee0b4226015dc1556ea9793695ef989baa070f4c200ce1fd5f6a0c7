{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/components/page/sections/slider/Slider.js\";\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect, useState } from 'react';\nimport Carousel from 'react-bootstrap/Carousel';\nimport { ViewList } from \"@webcms/orest\";\nimport { isErrorMsg, OREST_ENDPOINT } from '../../../../../../../model/orest/constants';\nimport WebCmsGlobal from \"components/webcms-global\";\nimport { useRouter } from \"next/router\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { connect, useSelector } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport PrevIcon from '@material-ui/icons/KeyboardArrowLeft';\nimport NextIcon from '@material-ui/icons/KeyboardArrowRight';\nimport { Typography } from \"@material-ui/core\";\nimport LoadingSpinner from \"../../../../../../LoadingSpinner\";\nimport { toast } from \"react-toastify\";\nimport { COLORS } from \"../../../../constants\";\nimport { getSliderImages } from \"../../../../helpers/slider\";\nconst useStyles = makeStyles(theme => ({\n  box: {\n    position: \"relative\",\n    textAlign: \"center\",\n    color: \"white\"\n  },\n  title: {\n    \"-webkit-text-fill-color\": props => props !== null && props !== void 0 && props.textColor ? props.textColor : \"#ffffff\",\n    \"-webkit-text-stroke-width\": \"0.8px\",\n    \"-webkit-text-stroke-color\": \"#000000\"\n  },\n  description: {\n    \"-webkit-text-fill-color\": props => props !== null && props !== void 0 && props.textColor ? props.textColor : \"#ffffff\",\n    \"-webkit-text-stroke-width\": \"0.8px\",\n    \"-webkit-text-stroke-color\": \"#000000\"\n  },\n  image: {\n    width: '100%',\n    backgroundSize: \"cover\"\n  },\n  ctaButton: {\n    marginRight: theme.spacing(1),\n    marginTop: theme.spacing(1),\n    borderRadius: 20,\n    backgroundColor: props => props !== null && props !== void 0 && props.buttonColor ? props.buttonColor : \"#ffffff\",\n    '& a': {\n      color: props => props !== null && props !== void 0 && props.textColor ? props.textColor : \"#ffffff\"\n    }\n  },\n  sliderArrow: {\n    color: \"#000000\",\n    fontSize: 40\n  },\n  sliderBg: {\n    border: '1px solid white',\n    backgroundColor: '#FFFFFF',\n    borderRadius: '50%'\n  }\n}));\n\nconst Slider = props => {\n  const {\n    sliderComponent,\n    slider,\n    otherLangSliderImages,\n    state\n  } = props;\n  const {\n    GENERAL_SETTINGS,\n    token\n  } = useContext(WebCmsGlobal); //local variable\n\n  const {\n    0: sliderImages,\n    1: setSliderImages\n  } = useState([]);\n  const {\n    0: sliderObj,\n    1: setSliderObj\n  } = useState({});\n  const {\n    0: isImageCta,\n    1: setImageCta\n  } = useState(false);\n  const {\n    0: isImageTitleDesc,\n    1: setImageTitleDesc\n  } = useState(false);\n  const {\n    0: isRequestSend,\n    1: setRequestSend\n  } = useState(false);\n  const classes = useStyles(sliderComponent);\n  const router = useRouter();\n  const clientToken = useSelector(state => state.orest.currentUser !== null ? state.orest.currentUser.auth.access_token : router.query.authToken);\n  const companyId = router.query.companyID || GENERAL_SETTINGS.HOTELREFNO;\n  const authToken = token || clientToken || router.query.authToken;\n  useEffect(() => {\n    if (sliderComponent !== null && sliderComponent !== void 0 && sliderComponent.gid) {\n      setImageCta(false);\n      setImageTitleDesc(false);\n      setRequestSend(true);\n      ViewList({\n        apiUrl: GENERAL_SETTINGS.OREST_URL,\n        endpoint: OREST_ENDPOINT.HCMITEMSLD,\n        token: authToken,\n        params: {\n          query: `gid:${sliderComponent.gid}`,\n          hotelrefno: Number(companyId)\n        }\n      }).then(async res => {\n        if (res.status === 200) {\n          var _res$data, _res$data$data;\n\n          if (res !== null && res !== void 0 && (_res$data = res.data) !== null && _res$data !== void 0 && (_res$data$data = _res$data.data) !== null && _res$data$data !== void 0 && _res$data$data.length) {\n            var _res$data2, _res$data$data$;\n\n            setSliderObj((_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.data[0]);\n\n            if (state.langCode !== state.defaultLang) {\n              slider && setSliderObj(slider);\n            }\n\n            const sldImages = await getSliderImages(GENERAL_SETTINGS.OREST_URL, authToken, companyId, (_res$data$data$ = res.data.data[0]) === null || _res$data$data$ === void 0 ? void 0 : _res$data$data$.id);\n            sldImages && sldImages.sort((a, b) => a.orderno > b.orderno ? 1 : -1);\n            setRequestSend(false);\n\n            if (sldImages) {\n              for (const img of sldImages) {\n                if (img.cta) setImageCta(true);\n\n                if (img.title || img.description) {\n                  setImageTitleDesc(true);\n                }\n\n                if (state.langCode !== state.defaultLang && otherLangSliderImages && otherLangSliderImages.length > 0) {\n                  var _otherLangSliderImage, _otherLangSliderImage2, _otherLangSliderImage3;\n\n                  const index = sldImages.indexOf(img);\n                  img.title = (_otherLangSliderImage = otherLangSliderImages[index]) === null || _otherLangSliderImage === void 0 ? void 0 : _otherLangSliderImage.title;\n                  img.description = (_otherLangSliderImage2 = otherLangSliderImages[index]) === null || _otherLangSliderImage2 === void 0 ? void 0 : _otherLangSliderImage2.description;\n                  img.cta = (_otherLangSliderImage3 = otherLangSliderImages[index]) === null || _otherLangSliderImage3 === void 0 ? void 0 : _otherLangSliderImage3.cta;\n                }\n              }\n\n              setSliderImages(sldImages);\n            } else {\n              toast.warn('Something went wrong while fetching slider images. Please check network tab.', {\n                position: toast.POSITION.TOP_RIGHT\n              });\n            }\n          } else {\n            setRequestSend(false);\n            toast.warn('No image found in slider. Please add images.', {\n              position: toast.POSITION.TOP_RIGHT\n            });\n          }\n        } else {\n          setRequestSend(false);\n          const retErr = isErrorMsg(res);\n          toast.error(retErr.errorMsg, {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        }\n      });\n    }\n  }, [sliderComponent, otherLangSliderImages, slider]);\n\n  if (isRequestSend) {\n    return __jsx(LoadingSpinner, {\n      size: 40,\n      style: {\n        color: COLORS.secondary\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, (sliderImages === null || sliderImages === void 0 ? void 0 : sliderImages.length) > 0 && __jsx(Carousel, {\n    slide: true,\n    nextIcon: __jsx(Typography, {\n      component: 'div',\n      className: classes.sliderBg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 37\n      }\n    }, __jsx(NextIcon, {\n      className: classes.sliderArrow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 96\n      }\n    })),\n    prevIcon: __jsx(Typography, {\n      component: 'div',\n      className: classes.sliderBg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 37\n      }\n    }, __jsx(PrevIcon, {\n      className: classes.sliderArrow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 96\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 45\n    }\n  }, sliderImages.map((image, index) => {\n    return __jsx(Carousel.Item, {\n      key: `crousel-item-${index}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 33\n      }\n    }, __jsx(\"div\", {\n      style: {\n        backgroundImage: `url(${GENERAL_SETTINGS.STATIC_URL + (image === null || image === void 0 ? void 0 : image.fileurl)})`,\n        height: 'calc(100vh - 25vh)',\n        width: '100%',\n        backgroundSize: 'cover'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 37\n      }\n    }), __jsx(Carousel.Caption, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 37\n      }\n    }, isImageTitleDesc ? __jsx(React.Fragment, null, __jsx(\"span\", {\n      className: classes.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 53\n      }\n    }, __jsx(\"div\", {\n      className: classes.title,\n      dangerouslySetInnerHTML: {\n        __html: image === null || image === void 0 ? void 0 : image.title\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 57\n      }\n    })), __jsx(\"div\", {\n      className: classes.description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 53\n      }\n    }, __jsx(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: image === null || image === void 0 ? void 0 : image.description\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 57\n      }\n    }))) : __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: classes.title,\n      dangerouslySetInnerHTML: {\n        __html: sliderObj === null || sliderObj === void 0 ? void 0 : sliderObj.title\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 49\n      }\n    }), __jsx(\"div\", {\n      className: classes.description,\n      dangerouslySetInnerHTML: {\n        __html: sliderObj === null || sliderObj === void 0 ? void 0 : sliderObj.description\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 49\n      }\n    })), isImageCta ? __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 58\n      }\n    }, (image === null || image === void 0 ? void 0 : image.cta) && __jsx(Button, {\n      variant: \"contained\",\n      size: \"small\",\n      color: \"primary\",\n      \"aria-label\": \"add\",\n      className: classes.ctaButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 67\n      }\n    }, __jsx(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: image === null || image === void 0 ? void 0 : image.cta\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 57\n      }\n    }))) : __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 54\n      }\n    }, (sliderObj === null || sliderObj === void 0 ? void 0 : sliderObj.cta) && __jsx(Button, {\n      variant: \"contained\",\n      size: \"small\",\n      \"aria-label\": \"add\",\n      className: classes.ctaButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 71\n      }\n    }, __jsx(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: sliderObj === null || sliderObj === void 0 ? void 0 : sliderObj.cta\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 57\n      }\n    })))));\n  })));\n};\n\nconst mapStateToProps = state => {\n  return {\n    state: state.formReducer.pageBuilder\n  };\n};\n\nexport default connect(mapStateToProps)(Slider);","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/components/page/sections/slider/Slider.js"],"names":["React","useContext","useEffect","useState","Carousel","ViewList","isErrorMsg","OREST_ENDPOINT","WebCmsGlobal","useRouter","makeStyles","connect","useSelector","Button","PrevIcon","NextIcon","Typography","LoadingSpinner","toast","COLORS","getSliderImages","useStyles","theme","box","position","textAlign","color","title","props","textColor","description","image","width","backgroundSize","ctaButton","marginRight","spacing","marginTop","borderRadius","backgroundColor","buttonColor","sliderArrow","fontSize","sliderBg","border","Slider","sliderComponent","slider","otherLangSliderImages","state","GENERAL_SETTINGS","token","sliderImages","setSliderImages","sliderObj","setSliderObj","isImageCta","setImageCta","isImageTitleDesc","setImageTitleDesc","isRequestSend","setRequestSend","classes","router","clientToken","orest","currentUser","auth","access_token","query","authToken","companyId","companyID","HOTELREFNO","gid","apiUrl","OREST_URL","endpoint","HCMITEMSLD","params","hotelrefno","Number","then","res","status","data","length","langCode","defaultLang","sldImages","id","sort","a","b","orderno","img","cta","index","indexOf","warn","POSITION","TOP_RIGHT","retErr","error","errorMsg","secondary","map","backgroundImage","STATIC_URL","fileurl","height","__html","mapStateToProps","formReducer","pageBuilder"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAqD,OAArD;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,SAAQC,QAAR,QAAuB,eAAvB;AACA,SAASC,UAAT,EAAqBC,cAArB,QAA2C,4CAA3C;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,UAAR,QAAyB,0BAAzB;AACA,SAAQC,OAAR,EAAiBC,WAAjB,QAAmC,aAAnC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,sCAArB;AACA,OAAOC,QAAP,MAAqB,uCAArB;AACA,SAAQC,UAAR,QAAyB,mBAAzB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,SAAQC,KAAR,QAAoB,gBAApB;AACA,SAAQC,MAAR,QAAqB,uBAArB;AACA,SAAQC,eAAR,QAA8B,4BAA9B;AAEA,MAAMC,SAAS,GAAGX,UAAU,CAACY,KAAK,KAAK;AACnCC,EAAAA,GAAG,EAAE;AACDC,IAAAA,QAAQ,EAAE,UADT;AAEDC,IAAAA,SAAS,EAAE,QAFV;AAGDC,IAAAA,KAAK,EAAE;AAHN,GAD8B;AAMnCC,EAAAA,KAAK,EAAE;AACH,+BAA2BC,KAAK,IAAIA,KAAK,SAAL,IAAAA,KAAK,WAAL,IAAAA,KAAK,CAAEC,SAAP,GAAmBD,KAAK,CAACC,SAAzB,GAAqC,SADtE;AAEH,iCAA6B,OAF1B;AAGH,iCAA6B;AAH1B,GAN4B;AAWnCC,EAAAA,WAAW,EAAE;AACT,+BAA2BF,KAAK,IAAIA,KAAK,SAAL,IAAAA,KAAK,WAAL,IAAAA,KAAK,CAAEC,SAAP,GAAmBD,KAAK,CAACC,SAAzB,GAAqC,SADhE;AAET,iCAA6B,OAFpB;AAGT,iCAA6B;AAHpB,GAXsB;AAgBnCE,EAAAA,KAAK,EAAE;AACHC,IAAAA,KAAK,EAAE,MADJ;AAEHC,IAAAA,cAAc,EAAE;AAFb,GAhB4B;AAoBnCC,EAAAA,SAAS,EAAE;AACPC,IAAAA,WAAW,EAAEb,KAAK,CAACc,OAAN,CAAc,CAAd,CADN;AAEPC,IAAAA,SAAS,EAAEf,KAAK,CAACc,OAAN,CAAc,CAAd,CAFJ;AAGPE,IAAAA,YAAY,EAAE,EAHP;AAIPC,IAAAA,eAAe,EAAEX,KAAK,IAAIA,KAAK,SAAL,IAAAA,KAAK,WAAL,IAAAA,KAAK,CAAEY,WAAP,GAAqBZ,KAAK,CAACY,WAA3B,GAAyC,SAJ5D;AAKP,WAAO;AACHd,MAAAA,KAAK,EAAEE,KAAK,IAAIA,KAAK,SAAL,IAAAA,KAAK,WAAL,IAAAA,KAAK,CAAEC,SAAP,GAAmBD,KAAK,CAACC,SAAzB,GAAqC;AADlD;AALA,GApBwB;AA6BnCY,EAAAA,WAAW,EAAE;AACTf,IAAAA,KAAK,EAAE,SADE;AAETgB,IAAAA,QAAQ,EAAE;AAFD,GA7BsB;AAiCnCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,MAAM,EAAE,iBADF;AAENL,IAAAA,eAAe,EAAE,SAFX;AAGND,IAAAA,YAAY,EAAE;AAHR;AAjCyB,CAAL,CAAN,CAA5B;;AAwCA,MAAMO,MAAM,GAAIjB,KAAD,IAAW;AAEtB,QAAM;AACFkB,IAAAA,eADE;AAEFC,IAAAA,MAFE;AAGFC,IAAAA,qBAHE;AAIFC,IAAAA;AAJE,MAKFrB,KALJ;AAMA,QAAM;AAACsB,IAAAA,gBAAD;AAAmBC,IAAAA;AAAnB,MAA4BlD,UAAU,CAACO,YAAD,CAA5C,CARsB,CAUtB;;AACA,QAAM;AAAA,OAAC4C,YAAD;AAAA,OAAeC;AAAf,MAAkClD,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM;AAAA,OAACmD,SAAD;AAAA,OAAYC;AAAZ,MAA4BpD,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM;AAAA,OAACqD,UAAD;AAAA,OAAaC;AAAb,MAA4BtD,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM;AAAA,OAACuD,gBAAD;AAAA,OAAmBC;AAAnB,MAAwCxD,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM;AAAA,OAACyD,aAAD;AAAA,OAAgBC;AAAhB,MAAkC1D,QAAQ,CAAC,KAAD,CAAhD;AAEA,QAAM2D,OAAO,GAAGzC,SAAS,CAACyB,eAAD,CAAzB;AACA,QAAMiB,MAAM,GAAGtD,SAAS,EAAxB;AACA,QAAMuD,WAAW,GAAGpD,WAAW,CAAEqC,KAAD,IAAWA,KAAK,CAACgB,KAAN,CAAYC,WAAZ,KAA4B,IAA5B,GAAmCjB,KAAK,CAACgB,KAAN,CAAYC,WAAZ,CAAwBC,IAAxB,CAA6BC,YAAhE,GAA+EL,MAAM,CAACM,KAAP,CAAaC,SAAxG,CAA/B;AACA,QAAMC,SAAS,GAAGR,MAAM,CAACM,KAAP,CAAaG,SAAb,IAA0BtB,gBAAgB,CAACuB,UAA7D;AACA,QAAMH,SAAS,GAAGnB,KAAK,IAAIa,WAAT,IAAwBD,MAAM,CAACM,KAAP,CAAaC,SAAvD;AAEApE,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAG4C,eAAH,aAAGA,eAAH,eAAGA,eAAe,CAAE4B,GAApB,EAAyB;AACrBjB,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAE,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAE,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAxD,MAAAA,QAAQ,CAAC;AACLsE,QAAAA,MAAM,EAAEzB,gBAAgB,CAAC0B,SADpB;AAELC,QAAAA,QAAQ,EAAEtE,cAAc,CAACuE,UAFpB;AAGL3B,QAAAA,KAAK,EAAEmB,SAHF;AAILS,QAAAA,MAAM,EAAE;AACJV,UAAAA,KAAK,EAAG,OAAMvB,eAAe,CAAC4B,GAAI,EAD9B;AAEJM,UAAAA,UAAU,EAAGC,MAAM,CAACV,SAAD;AAFf;AAJH,OAAD,CAAR,CAQGW,IARH,CAQQ,MAAMC,GAAN,IAAa;AACjB,YAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AAAA;;AACpB,cAAID,GAAJ,aAAIA,GAAJ,4BAAIA,GAAG,CAAEE,IAAT,wDAAI,UAAWA,IAAf,2CAAI,eAAiBC,MAArB,EAA6B;AAAA;;AACzB/B,YAAAA,YAAY,eAAC4B,GAAG,CAACE,IAAL,+CAAC,WAAUA,IAAV,CAAe,CAAf,CAAD,CAAZ;;AACA,gBAAIpC,KAAK,CAACsC,QAAN,KAAmBtC,KAAK,CAACuC,WAA7B,EAA0C;AACtCzC,cAAAA,MAAM,IAAIQ,YAAY,CAACR,MAAD,CAAtB;AACH;;AACD,kBAAM0C,SAAS,GAAG,MAAMrE,eAAe,CAAC8B,gBAAgB,CAAC0B,SAAlB,EAA6BN,SAA7B,EAAwCC,SAAxC,qBAAmDY,GAAG,CAACE,IAAJ,CAASA,IAAT,CAAc,CAAd,CAAnD,oDAAmD,gBAAkBK,EAArE,CAAvC;AACAD,YAAAA,SAAS,IAAIA,SAAS,CAACE,IAAV,CAAe,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACE,OAAF,GAAYD,CAAC,CAACC,OAAf,GAA0B,CAA1B,GAA8B,CAAC,CAAxD,CAAb;AACAjC,YAAAA,cAAc,CAAC,KAAD,CAAd;;AACA,gBAAI4B,SAAJ,EAAe;AACX,mBAAK,MAAMM,GAAX,IAAkBN,SAAlB,EAA6B;AACzB,oBAAIM,GAAG,CAACC,GAAR,EAAavC,WAAW,CAAC,IAAD,CAAX;;AACb,oBAAIsC,GAAG,CAACpE,KAAJ,IAAaoE,GAAG,CAACjE,WAArB,EAAkC;AAC9B6B,kBAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH;;AACD,oBAAIV,KAAK,CAACsC,QAAN,KAAmBtC,KAAK,CAACuC,WAAzB,IAAwCxC,qBAAxC,IAAiEA,qBAAqB,CAACsC,MAAtB,GAA+B,CAApG,EAAuG;AAAA;;AACnG,wBAAMW,KAAK,GAAGR,SAAS,CAACS,OAAV,CAAkBH,GAAlB,CAAd;AACAA,kBAAAA,GAAG,CAACpE,KAAJ,4BAAYqB,qBAAqB,CAACiD,KAAD,CAAjC,0DAAY,sBAA8BtE,KAA1C;AACAoE,kBAAAA,GAAG,CAACjE,WAAJ,6BAAkBkB,qBAAqB,CAACiD,KAAD,CAAvC,2DAAkB,uBAA8BnE,WAAhD;AACAiE,kBAAAA,GAAG,CAACC,GAAJ,6BAAUhD,qBAAqB,CAACiD,KAAD,CAA/B,2DAAU,uBAA8BD,GAAxC;AACH;AACJ;;AACD3C,cAAAA,eAAe,CAACoC,SAAD,CAAf;AACH,aAdD,MAcO;AACHvE,cAAAA,KAAK,CAACiF,IAAN,CAAW,8EAAX,EAA2F;AACvF3E,gBAAAA,QAAQ,EAAEN,KAAK,CAACkF,QAAN,CAAeC;AAD8D,eAA3F;AAGH;AACJ,WA3BD,MA2BO;AACHxC,YAAAA,cAAc,CAAC,KAAD,CAAd;AACA3C,YAAAA,KAAK,CAACiF,IAAN,CAAW,8CAAX,EAA2D;AACvD3E,cAAAA,QAAQ,EAAEN,KAAK,CAACkF,QAAN,CAAeC;AAD8B,aAA3D;AAGH;AACJ,SAlCD,MAkCO;AACHxC,UAAAA,cAAc,CAAC,KAAD,CAAd;AACA,gBAAMyC,MAAM,GAAGhG,UAAU,CAAC6E,GAAD,CAAzB;AACAjE,UAAAA,KAAK,CAACqF,KAAN,CAAYD,MAAM,CAACE,QAAnB,EAA6B;AACzBhF,YAAAA,QAAQ,EAAEN,KAAK,CAACkF,QAAN,CAAeC;AADA,WAA7B;AAGH;AACJ,OAlDD;AAmDH;AACJ,GAzDQ,EAyDN,CAACvD,eAAD,EAAkBE,qBAAlB,EAAyCD,MAAzC,CAzDM,CAAT;;AA2DA,MAAIa,aAAJ,EAAmB;AACf,WAAO,MAAC,cAAD;AAAgB,MAAA,IAAI,EAAE,EAAtB;AAA0B,MAAA,KAAK,EAAE;AAAClC,QAAAA,KAAK,EAAEP,MAAM,CAACsF;AAAf,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAED,SACI,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQ,CAAArD,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEkC,MAAd,IAAuB,CAAvB,IAA4B,MAAC,QAAD;AAAU,IAAA,KAAK,EAAE,IAAjB;AAClB,IAAA,QAAQ,EAAE,MAAC,UAAD;AAAY,MAAA,SAAS,EAAE,KAAvB;AAA8B,MAAA,SAAS,EAAExB,OAAO,CAACnB,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2D,MAAC,QAAD;AACjE,MAAA,SAAS,EAAEmB,OAAO,CAACrB,WAD8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA3D,CADQ;AAGlB,IAAA,QAAQ,EAAE,MAAC,UAAD;AAAY,MAAA,SAAS,EAAE,KAAvB;AAA8B,MAAA,SAAS,EAAEqB,OAAO,CAACnB,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2D,MAAC,QAAD;AACjE,MAAA,SAAS,EAAEmB,OAAO,CAACrB,WAD8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA3D,CAHQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOpBW,YAAY,CAACsD,GAAb,CAAiB,CAAC3E,KAAD,EAAQkE,KAAR,KAAkB;AAC/B,WACI,MAAC,QAAD,CAAU,IAAV;AAAe,MAAA,GAAG,EAAG,gBAAeA,KAAM,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAE;AACRU,QAAAA,eAAe,EAAG,OAAMzD,gBAAgB,CAAC0D,UAAjB,IAA8B7E,KAA9B,aAA8BA,KAA9B,uBAA8BA,KAAK,CAAE8E,OAArC,CAA6C,GAD7D;AAERC,QAAAA,MAAM,EAAE,oBAFA;AAGR9E,QAAAA,KAAK,EAAE,MAHC;AAIRC,QAAAA,cAAc,EAAE;AAJR,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAOI,MAAC,QAAD,CAAU,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQyB,gBAAgB,GAAG,4BACX;AAAM,MAAA,SAAS,EAAEI,OAAO,CAACnC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAEmC,OAAO,CAACnC,KAAxB;AAA+B,MAAA,uBAAuB,EAAE;AAACoF,QAAAA,MAAM,EAAEhF,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEJ;AAAhB,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADW,EAIX;AAAK,MAAA,SAAS,EAAEmC,OAAO,CAAChC,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,uBAAuB,EAAE;AAACiF,QAAAA,MAAM,EAAEhF,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAED;AAAhB,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJW,CAAH,GAON,4BACN;AAAK,MAAA,SAAS,EAAEgC,OAAO,CAACnC,KAAxB;AAA+B,MAAA,uBAAuB,EAAE;AAACoF,QAAAA,MAAM,EAAEzD,SAAF,aAAEA,SAAF,uBAAEA,SAAS,CAAE3B;AAApB,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADM,EAEN;AAAK,MAAA,SAAS,EAAEmC,OAAO,CAAChC,WAAxB;AAAqC,MAAA,uBAAuB,EAAE;AAACiF,QAAAA,MAAM,EAAEzD,SAAF,aAAEA,SAAF,uBAAEA,SAAS,CAAExB;AAApB,OAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFM,CATlB,EAeQ0B,UAAU,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEL,CAAAzB,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEiE,GAAP,KAAc,MAAC,MAAD;AACV,MAAA,OAAO,EAAC,WADE;AAEV,MAAA,IAAI,EAAC,OAFK;AAGV,MAAA,KAAK,EAAC,SAHI;AAIV,oBAAW,KAJD;AAKV,MAAA,SAAS,EAAElC,OAAO,CAAC5B,SALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOV;AAAK,MAAA,uBAAuB,EAAE;AAAC6E,QAAAA,MAAM,EAAEhF,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEiE;AAAhB,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPU,CAFT,CAAH,GAYD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAED,CAAA1C,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAE0C,GAAX,KAAkB,MAAC,MAAD;AACd,MAAA,OAAO,EAAC,WADM;AAEd,MAAA,IAAI,EAAC,OAFS;AAGd,oBAAW,KAHG;AAId,MAAA,SAAS,EAAElC,OAAO,CAAC5B,SAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMd;AAAK,MAAA,uBAAuB,EAAE;AAAC6E,QAAAA,MAAM,EAAEzD,SAAF,aAAEA,SAAF,uBAAEA,SAAS,CAAE0C;AAApB,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANc,CAFjB,CA3BjB,CAPJ,CADJ;AAmDH,GApDD,CAPoB,CAFpC,CADJ;AAoEH,CA1JD;;AA4JA,MAAMgB,eAAe,GAAG/D,KAAK,IAAI;AAC7B,SAAO;AACHA,IAAAA,KAAK,EAAEA,KAAK,CAACgE,WAAN,CAAkBC;AADtB,GAAP;AAGH,CAJD;;AAMA,eAAevG,OAAO,CAClBqG,eADkB,CAAP,CAEbnE,MAFa,CAAf","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\nimport Carousel from 'react-bootstrap/Carousel'\nimport {ViewList} from \"@webcms/orest\";\nimport { isErrorMsg, OREST_ENDPOINT } from '../../../../../../../model/orest/constants'\nimport WebCmsGlobal from \"components/webcms-global\";\nimport {useRouter} from \"next/router\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {connect, useSelector} from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport PrevIcon from '@material-ui/icons/KeyboardArrowLeft'\nimport NextIcon from '@material-ui/icons/KeyboardArrowRight'\nimport {Typography} from \"@material-ui/core\";\nimport LoadingSpinner from \"../../../../../../LoadingSpinner\";\nimport {toast} from \"react-toastify\";\nimport {COLORS} from \"../../../../constants\";\nimport {getSliderImages} from \"../../../../helpers/slider\";\n\nconst useStyles = makeStyles(theme => ({\n    box: {\n        position: \"relative\",\n        textAlign: \"center\",\n        color: \"white\"\n    },\n    title: {\n        \"-webkit-text-fill-color\": props => props?.textColor ? props.textColor : \"#ffffff\",\n        \"-webkit-text-stroke-width\": \"0.8px\",\n        \"-webkit-text-stroke-color\": \"#000000\"\n    },\n    description: {\n        \"-webkit-text-fill-color\": props => props?.textColor ? props.textColor : \"#ffffff\",\n        \"-webkit-text-stroke-width\": \"0.8px\",\n        \"-webkit-text-stroke-color\": \"#000000\"\n    },\n    image: {\n        width: '100%',\n        backgroundSize: \"cover\"\n    },\n    ctaButton: {\n        marginRight: theme.spacing(1),\n        marginTop: theme.spacing(1),\n        borderRadius: 20,\n        backgroundColor: props => props?.buttonColor ? props.buttonColor : \"#ffffff\",\n        '& a': {\n            color: props => props?.textColor ? props.textColor : \"#ffffff\"\n        }\n    },\n    sliderArrow: {\n        color: \"#000000\",\n        fontSize: 40,\n    },\n    sliderBg: {\n        border: '1px solid white',\n        backgroundColor: '#FFFFFF',\n        borderRadius: '50%'\n    },\n}))\n\nconst Slider = (props) => {\n\n    const {\n        sliderComponent,\n        slider,\n        otherLangSliderImages,\n        state\n    } = props;\n    const {GENERAL_SETTINGS, token} = useContext(WebCmsGlobal);\n\n    //local variable\n    const [sliderImages, setSliderImages] = useState([]);\n    const [sliderObj, setSliderObj] = useState({});\n    const [isImageCta, setImageCta] = useState(false);\n    const [isImageTitleDesc, setImageTitleDesc] = useState(false);\n    const [isRequestSend, setRequestSend] = useState(false);\n\n    const classes = useStyles(sliderComponent);\n    const router = useRouter();\n    const clientToken = useSelector((state) => state.orest.currentUser !== null ? state.orest.currentUser.auth.access_token : router.query.authToken)\n    const companyId = router.query.companyID || GENERAL_SETTINGS.HOTELREFNO;\n    const authToken = token || clientToken || router.query.authToken;\n\n    useEffect(() => {\n        if(sliderComponent?.gid) {\n            setImageCta(false);\n            setImageTitleDesc(false);\n            setRequestSend(true);\n            ViewList({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: OREST_ENDPOINT.HCMITEMSLD,\n                token: authToken,\n                params: {\n                    query: `gid:${sliderComponent.gid}`,\n                    hotelrefno:  Number(companyId)\n                }\n            }).then(async res => {\n                if (res.status === 200) {\n                    if (res?.data?.data?.length) {\n                        setSliderObj(res.data?.data[0]);\n                        if (state.langCode !== state.defaultLang) {\n                            slider && setSliderObj(slider);\n                        }\n                        const sldImages = await getSliderImages(GENERAL_SETTINGS.OREST_URL, authToken, companyId, res.data.data[0]?.id);\n                        sldImages && sldImages.sort((a, b) => (a.orderno > b.orderno) ? 1 : -1);\n                        setRequestSend(false);\n                        if (sldImages) {\n                            for (const img of sldImages) {\n                                if (img.cta) setImageCta(true);\n                                if (img.title || img.description) {\n                                    setImageTitleDesc(true);\n                                }\n                                if (state.langCode !== state.defaultLang && otherLangSliderImages && otherLangSliderImages.length > 0) {\n                                    const index = sldImages.indexOf(img);\n                                    img.title = otherLangSliderImages[index]?.title;\n                                    img.description = otherLangSliderImages[index]?.description;\n                                    img.cta = otherLangSliderImages[index]?.cta;\n                                }\n                            }\n                            setSliderImages(sldImages);\n                        } else {\n                            toast.warn('Something went wrong while fetching slider images. Please check network tab.', {\n                                position: toast.POSITION.TOP_RIGHT\n                            });\n                        }\n                    } else {\n                        setRequestSend(false);\n                        toast.warn('No image found in slider. Please add images.', {\n                            position: toast.POSITION.TOP_RIGHT\n                        });\n                    }\n                } else {\n                    setRequestSend(false);\n                    const retErr = isErrorMsg(res);\n                    toast.error(retErr.errorMsg, {\n                        position: toast.POSITION.TOP_RIGHT\n                    });\n                }\n            });\n        }\n    }, [sliderComponent, otherLangSliderImages, slider]);\n\n    if (isRequestSend) {\n        return <LoadingSpinner size={40} style={{color: COLORS.secondary}} />\n    }\n\n    return(\n        <React.Fragment>\n            {\n                sliderImages?.length > 0 && <Carousel slide={true}\n                          nextIcon={<Typography component={'div'} className={classes.sliderBg}><NextIcon\n                              className={classes.sliderArrow}/></Typography>}\n                          prevIcon={<Typography component={'div'} className={classes.sliderBg}><PrevIcon\n                              className={classes.sliderArrow}/></Typography>}\n                >\n                    {\n                        sliderImages.map((image, index) => {\n                            return (\n                                <Carousel.Item key={`crousel-item-${index}`}>\n                                    <div style={{\n                                        backgroundImage: `url(${GENERAL_SETTINGS.STATIC_URL + image?.fileurl})`,\n                                        height: 'calc(100vh - 25vh)',\n                                        width: '100%',\n                                        backgroundSize: 'cover'\n                                    }}></div>\n                                    <Carousel.Caption>\n                                        {\n                                            isImageTitleDesc ? <>\n                                                    <span className={classes.title}>\n                                                        <div className={classes.title} dangerouslySetInnerHTML={{__html: image?.title}}></div>\n                                                    </span>\n                                                    <div className={classes.description}>\n                                                        <div dangerouslySetInnerHTML={{__html: image?.description}}></div>\n                                                    </div>\n                                                </> : <>\n                                                <div className={classes.title} dangerouslySetInnerHTML={{__html: sliderObj?.title}}></div>\n                                                <div className={classes.description} dangerouslySetInnerHTML={{__html: sliderObj?.description}}></div>\n                                            </>\n                                        }\n                                        {\n                                            isImageCta ? <div>\n                                                {\n                                                    image?.cta && <Button\n                                                        variant=\"contained\"\n                                                        size=\"small\"\n                                                        color=\"primary\"\n                                                        aria-label=\"add\"\n                                                        className={classes.ctaButton}\n                                                    >\n                                                        <div dangerouslySetInnerHTML={{__html: image?.cta}}></div>\n                                                    </Button>\n                                                }\n                                            </div> : <div>\n                                                {\n                                                    sliderObj?.cta && <Button\n                                                        variant=\"contained\"\n                                                        size=\"small\"\n                                                        aria-label=\"add\"\n                                                        className={classes.ctaButton}\n                                                    >\n                                                        <div dangerouslySetInnerHTML={{__html: sliderObj?.cta}}></div>\n                                                    </Button>\n                                                }\n                                            </div>\n                                        }\n                                    </Carousel.Caption>\n                                </Carousel.Item>\n                            )\n                        })\n                    }\n                </Carousel>\n            }\n        </React.Fragment>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        state: state.formReducer.pageBuilder\n    }\n};\n\nexport default connect(\n    mapStateToProps,\n)(Slider);\n"]},"metadata":{},"sourceType":"module"}