{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/emp-portal/tabs/References/index.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Insert, UseOrest, ViewList, Patch, Delete } from \"@webcms/orest\";\nimport WebCmsGlobal from \"../../../webcms-global\";\nimport { useSelector } from \"react-redux\";\nimport { isErrorMsg, mobileTelNoFormat, OREST_ENDPOINT } from \"../../../../model/orest/constants\";\nimport { Grid, Typography, Dialog, Checkbox, FormControlLabel, Button, Menu, MenuItem, IconButton } from \"@material-ui/core\";\nimport { useSnackbar } from \"notistack\";\nimport MaterialTableGeneric from \"../../../MaterialTableGeneric\";\nimport { SLASH } from \"../../../../model/globals\";\nimport useTranslation from \"../../../../lib/translations/hooks/useTranslation\";\nimport renderFormElements, { ELEMENT_TYPES } from \"../../../render-form-elements\";\nimport { required } from \"../../../../state/utils/form\";\nimport AddDialogActions from \"../../../AddDialogActions\";\nimport { LocaleContext } from \"../../../../lib/translations/context/LocaleContext\";\nimport LoadingSpinner from \"../../../LoadingSpinner\";\nimport { helper } from \"../../../../@webcms-globals\";\nimport TrackedChangesDialog from \"../../../TrackedChangesDialog\";\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\nimport MaterialTable, { MTableHeader } from \"material-table\";\nimport MaterialTableLocalization from \"../../../MaterialTableLocalization\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport TableColumnText from \"../../../TableColumnText\";\nimport PopupState, { bindMenu, bindTrigger } from \"material-ui-popup-state\";\nimport { CustomToolTip } from \"../../../user-portal/components/CustomToolTip/CustomToolTip\";\nimport CachedIcon from \"@material-ui/icons/Cached\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nconst VARIANT = 'outlined';\n\nfunction References(props) {\n  var _referenceData$reftyp, _referenceData$reftyp2, _referenceData$reftyp3, _referenceData$reftyp4, _referenceData$refnam, _referenceData$refnam2, _referenceData$refnam3, _referenceData$refnam4, _referenceData$tel, _referenceData$email, _referenceData$email2, _referenceData$email3, _referenceData$email4, _referenceData$note, _referenceData$note2, _referenceData$note3, _referenceData$note4;\n\n  //props\n  const {\n    empId\n  } = props; //snackbar\n\n  const {\n    enqueueSnackbar\n  } = useSnackbar(); //context\n\n  const {\n    GENERAL_SETTINGS\n  } = useContext(WebCmsGlobal);\n  const {\n    locale\n  } = useContext(LocaleContext);\n  const {\n    t\n  } = useTranslation();\n  const tableLocalization = MaterialTableLocalization(); //redux state\n\n  const token = useSelector(state => {\n    var _state$orest, _state$orest$currentU, _state$orest$currentU2;\n\n    return (state === null || state === void 0 ? void 0 : (_state$orest = state.orest) === null || _state$orest === void 0 ? void 0 : (_state$orest$currentU = _state$orest.currentUser) === null || _state$orest$currentU === void 0 ? void 0 : (_state$orest$currentU2 = _state$orest$currentU.auth) === null || _state$orest$currentU2 === void 0 ? void 0 : _state$orest$currentU2.access_token) || false;\n  });\n  const hotelRefNo = useSelector(state => {\n    var _state$hotelinfo;\n\n    return (state === null || state === void 0 ? void 0 : (_state$hotelinfo = state.hotelinfo) === null || _state$hotelinfo === void 0 ? void 0 : _state$hotelinfo.currentHotelRefNo) || GENERAL_SETTINGS.HOTELREFNO || false;\n  }); //locale state\n\n  const initialState = {\n    reftypeid: {\n      value: '',\n      isError: false,\n      required: true,\n      helperText: ''\n    },\n    refname: {\n      value: '',\n      isError: false,\n      required: false,\n      helperText: ''\n    },\n    tel: {\n      value: '',\n      isError: false,\n      required: true,\n      helperText: ''\n    },\n    email: {\n      value: '',\n      isError: false,\n      required: true,\n      helperText: ''\n    },\n    note: {\n      value: '',\n      isError: false,\n      required: false,\n      helperText: ''\n    }\n  };\n  const {\n    0: isLoadingList,\n    1: setIsLoadingList\n  } = useState(false);\n  const {\n    0: allHotels,\n    1: setAllHotels\n  } = useState(false);\n  const {\n    0: referenceList,\n    1: setReferenceList\n  } = useState([]);\n  const {\n    0: openAddDialog,\n    1: setOpenAddDialog\n  } = useState(false);\n  const {\n    0: selectedReferenceData,\n    1: setSelectedReferenceData\n  } = useState(null);\n  const {\n    0: selectedGid,\n    1: setSelectedGid\n  } = useState(false);\n  const {\n    0: getData,\n    1: setGetData\n  } = useState(null);\n  const {\n    0: openTrackedDialog,\n    1: setOpenTrackedDialog\n  } = useState(false);\n  const {\n    0: isDef,\n    1: setIsDef\n  } = useState(false);\n  const {\n    0: isSaving,\n    1: setIsSaving\n  } = useState(false);\n  const {\n    0: referenceData,\n    1: setReferenceData\n  } = useState(initialState);\n  const {\n    0: referenceDataBase,\n    1: setReferenceDataBase\n  } = useState(initialState);\n  const {\n    0: isInitialStateLoad,\n    1: setIsInitialStateLoad\n  } = useState(false);\n  const {\n    0: isDeleting,\n    1: setIsDeleting\n  } = useState(false);\n  const formElements = [{\n    type: ELEMENT_TYPES.autoComplete,\n    id: 'reftypeid',\n    name: 'reftypeid',\n    value: ((_referenceData$reftyp = referenceData.reftypeid) === null || _referenceData$reftyp === void 0 ? void 0 : _referenceData$reftyp.value) || null,\n    disabled: isSaving,\n    label: t('str_references'),\n    variant: VARIANT,\n    required: (_referenceData$reftyp2 = referenceData.reftypeid) === null || _referenceData$reftyp2 === void 0 ? void 0 : _referenceData$reftyp2.isRequired,\n    error: (_referenceData$reftyp3 = referenceData.reftypeid) === null || _referenceData$reftyp3 === void 0 ? void 0 : _referenceData$reftyp3.isError,\n    helperText: (_referenceData$reftyp4 = referenceData.reftypeid) === null || _referenceData$reftyp4 === void 0 ? void 0 : _referenceData$reftyp4.helperText,\n    onChange: (newValue, name) => handleOnChangeFormElements(newValue, name),\n    onBlur: (e, name) => handleOnBlurFormElements(e, name),\n    onLoad: (initialValue, name) => {\n      const data = _objectSpread({}, referenceData);\n\n      data[name].value = initialValue ? initialValue : null;\n      setReferenceData(data);\n    },\n    endpoint: 'empreftype/view/list',\n    params: {\n      text: '',\n      limit: 25,\n      field: 'code'\n    },\n    initialId: isInitialStateLoad && (selectedReferenceData === null || selectedReferenceData === void 0 ? void 0 : selectedReferenceData.reftypeid) || false,\n    showOptionLabel: 'description',\n    showOption: 'description',\n    searchParam: 'description',\n    fullWidth: true,\n    gridProps: {\n      xs: 12,\n      sm: 6\n    }\n  }, {\n    type: ELEMENT_TYPES.textField,\n    id: 'refname',\n    name: 'refname',\n    value: (_referenceData$refnam = referenceData.refname) === null || _referenceData$refnam === void 0 ? void 0 : _referenceData$refnam.value,\n    error: (_referenceData$refnam2 = referenceData.refname) === null || _referenceData$refnam2 === void 0 ? void 0 : _referenceData$refnam2.isError,\n    required: (_referenceData$refnam3 = referenceData.refname) === null || _referenceData$refnam3 === void 0 ? void 0 : _referenceData$refnam3.isRequired,\n    disabled: isSaving,\n    label: t('str_referenceName'),\n    helperText: (_referenceData$refnam4 = referenceData.refname) === null || _referenceData$refnam4 === void 0 ? void 0 : _referenceData$refnam4.helperText,\n    onChange: e => handleOnChangeFormElements(e),\n    onBlur: e => handleOnBlurFormElements(e),\n    variant: VARIANT,\n    fullWidth: true,\n    gridProps: {\n      xs: 12,\n      sm: 6\n    }\n  }, {\n    type: ELEMENT_TYPES.phoneInput,\n    id: 'tel',\n    name: 'tel',\n    value: (_referenceData$tel = referenceData.tel) === null || _referenceData$tel === void 0 ? void 0 : _referenceData$tel.value,\n    required: referenceData.tel.isRequired,\n    disabled: isSaving,\n    error: referenceData.tel.isError,\n    label: t('str_tel'),\n    helperText: referenceData.tel.helperText,\n    onChange: (e, name) => handleOnChangeFormElements(e, name),\n    onBlur: (e, name) => handleOnBlurFormElements(e, name),\n    defaultCountry: locale === 'en' ? 'us' : locale,\n    fullWidth: true,\n    gridProps: {\n      xs: 12,\n      sm: 6\n    }\n  }, {\n    type: ELEMENT_TYPES.textField,\n    id: 'email',\n    name: 'email',\n    value: (_referenceData$email = referenceData.email) === null || _referenceData$email === void 0 ? void 0 : _referenceData$email.value,\n    error: (_referenceData$email2 = referenceData.email) === null || _referenceData$email2 === void 0 ? void 0 : _referenceData$email2.isError,\n    required: (_referenceData$email3 = referenceData.email) === null || _referenceData$email3 === void 0 ? void 0 : _referenceData$email3.isRequired,\n    disabled: isSaving,\n    label: t('str_email'),\n    helperText: (_referenceData$email4 = referenceData.email) === null || _referenceData$email4 === void 0 ? void 0 : _referenceData$email4.helperText,\n    onChange: e => handleOnChangeFormElements(e),\n    onBlur: e => handleOnBlurFormElements(e),\n    variant: VARIANT,\n    fullWidth: true,\n    gridProps: {\n      xs: 12,\n      sm: 6\n    }\n  }, {\n    type: ELEMENT_TYPES.textField,\n    id: 'note',\n    name: 'note',\n    value: (_referenceData$note = referenceData.note) === null || _referenceData$note === void 0 ? void 0 : _referenceData$note.value,\n    error: (_referenceData$note2 = referenceData.note) === null || _referenceData$note2 === void 0 ? void 0 : _referenceData$note2.isError,\n    required: (_referenceData$note3 = referenceData.note) === null || _referenceData$note3 === void 0 ? void 0 : _referenceData$note3.isRequired,\n    disabled: isSaving,\n    label: t('str_note'),\n    helperText: (_referenceData$note4 = referenceData.note) === null || _referenceData$note4 === void 0 ? void 0 : _referenceData$note4.helperText,\n    onChange: e => handleOnChangeFormElements(e),\n    onBlur: e => handleOnBlurFormElements(e),\n    variant: VARIANT,\n    fullWidth: true,\n    gridProps: {\n      xs: 12,\n      sm: 12\n    }\n  }];\n  const referenceColumns = [{\n    title: __jsx(Button, {\n      style: {\n        padding: 0,\n        maxWidth: 25,\n        minWidth: 25\n      },\n      disabled: true,\n      color: 'primary',\n      variant: 'text',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }\n    }, __jsx(MoreVertIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 21\n      }\n    })),\n    render: props => __jsx(TableColumnText, {\n      minWidth: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }\n    }, __jsx(PopupState, {\n      variant: \"popover\",\n      popupId: \"material-table-action-column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 21\n      }\n    }, popupState => __jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 29\n      }\n    }, __jsx(Button, _extends({\n      style: {\n        padding: 0,\n        maxWidth: 25,\n        minWidth: 25\n      },\n      color: 'primary',\n      variant: 'contained'\n    }, bindTrigger(popupState), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 33\n      }\n    }), __jsx(MoreVertIcon, {\n      size: 'small',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 37\n      }\n    })), __jsx(Menu, _extends({\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"left\"\n      },\n      transformOrigin: {\n        vertical: \"top\",\n        horizontal: \"left\"\n      },\n      getContentAnchorEl: null\n    }, bindMenu(popupState), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 33\n      }\n    }), __jsx(MenuItem, {\n      onClick: () => {\n        setSelectedReferenceData(props);\n        setSelectedGid((props === null || props === void 0 ? void 0 : props.gid) || false);\n        handleOpenAddDialog(props);\n        popupState.close();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 37\n      }\n    }, __jsx(EditOutlinedIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 42\n      }\n    }), __jsx(Typography, {\n      style: {\n        paddingLeft: '8px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 41\n      }\n    }, t('str_edit'))), __jsx(MenuItem, {\n      onClick: () => handleDeleteItem(props.gid),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 37\n      }\n    }, __jsx(DeleteIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 41\n      }\n    }), __jsx(Typography, {\n      style: {\n        paddingLeft: '8px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 41\n      }\n    }, t('str_delete')))))))\n  }, {\n    title: t('str_references'),\n    field: 'reftypeid',\n    render: props => __jsx(TableColumnText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 32\n      }\n    }, props === null || props === void 0 ? void 0 : props.reftype)\n  }, {\n    title: t('str_fullName'),\n    field: 'refname',\n    render: props => __jsx(TableColumnText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 32\n      }\n    }, props === null || props === void 0 ? void 0 : props.refname)\n  }, {\n    title: t('str_tel'),\n    field: 'tel',\n    render: props => __jsx(TableColumnText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 32\n      }\n    }, props === null || props === void 0 ? void 0 : props.tel)\n  }, {\n    title: t('str_email'),\n    field: 'email',\n    render: props => __jsx(TableColumnText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 32\n      }\n    }, props === null || props === void 0 ? void 0 : props.email)\n  }, {\n    title: t('str_note'),\n    field: 'note',\n    render: props => __jsx(TableColumnText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 32\n      }\n    }, props === null || props === void 0 ? void 0 : props.note)\n  }];\n  useEffect(() => {\n    if (token && empId) {\n      getReferenceList();\n    }\n  }, []);\n  useEffect(() => {\n    let isEffect = true;\n\n    if (isEffect && referenceData && getData) {\n      const newClientInitialState = helper.objectMapper(referenceData, getData, ['reftypeid']);\n      setReferenceData(newClientInitialState);\n      setReferenceDataBase(newClientInitialState);\n      setIsInitialStateLoad(true);\n    }\n\n    return () => {\n      isEffect = false;\n    };\n  }, [getData]);\n\n  const handleDeleteItem = gid => {\n    setIsDeleting(true);\n    Delete({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.EMPREF,\n      token,\n      gid: gid,\n      params: {\n        hotelrefno: GENERAL_SETTINGS.HOTELREFNO\n      }\n    }).then(res => {\n      if (res.status === 200) {\n        getReferenceList();\n      } else {\n        var _error$errorMsg, _error$errorMsg2;\n\n        const error = isErrorMsg(res);\n        enqueueSnackbar(((_error$errorMsg = error.errorMsg) === null || _error$errorMsg === void 0 ? void 0 : _error$errorMsg.length) > 50 ? (_error$errorMsg2 = error.errorMsg) === null || _error$errorMsg2 === void 0 ? void 0 : _error$errorMsg2.substring(0, 50) : error.errorMsg, {\n          variant: 'error'\n        });\n        setIsDeleting(false);\n      }\n    });\n  };\n\n  const getReferenceList = () => {\n    setIsLoadingList(true);\n    ViewList({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.EMPREF,\n      token,\n      params: {\n        query: `empid:${empId}`,\n        allhotels: allHotels,\n        hotelrefno: hotelRefNo\n      }\n    }).then(res => {\n      setIsLoadingList(false);\n\n      if (res.status === 200) {\n        if (res.data.count > 0) {\n          setReferenceList(res.data.data);\n        }\n      } else {\n        var _error$errorMsg3, _error$errorMsg4;\n\n        const error = isErrorMsg(res);\n        enqueueSnackbar(((_error$errorMsg3 = error.errorMsg) === null || _error$errorMsg3 === void 0 ? void 0 : _error$errorMsg3.length) > 50 ? (_error$errorMsg4 = error.errorMsg) === null || _error$errorMsg4 === void 0 ? void 0 : _error$errorMsg4.substring(0, 50) : error.errorMsg, {\n          variant: 'error'\n        });\n      }\n    });\n  };\n\n  const handleGetselectedReference = selectedReference => {\n    if (selectedReference) {\n      setIsDef(true);\n      UseOrest({\n        apiUrl: GENERAL_SETTINGS.OREST_URL,\n        endpoint: OREST_ENDPOINT.EMPREF + SLASH + OREST_ENDPOINT.VIEW + SLASH + 'get' + SLASH + selectedReference.gid,\n        token\n      }).then(res => {\n        setIsDef(false);\n\n        if (res.status === 200 && res.data.data) {\n          const data = res.data.data;\n          setGetData(data);\n        }\n      });\n    }\n  };\n\n  const handleDefRecord = () => {\n    setIsDef(true);\n    UseOrest({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.EMPREF + SLASH + OREST_ENDPOINT.DEF,\n      token,\n      params: {\n        hotelrefno: hotelRefNo\n      }\n    }).then(res => {\n      if (res.status === 200 && res.data.count > 0) {\n        const data = Object.assign({}, res.data.data, referenceData);\n        setReferenceData(data);\n        setReferenceDataBase(data);\n      }\n\n      setIsDef(false);\n    });\n  };\n\n  const handleSave = () => {\n    const data = _objectSpread({}, referenceData);\n\n    Object.keys(initialState).map(key => {\n      data[key] = typeof data[key].value === 'object' ? data[key].value ? data[key].value.id : null : data[key].value;\n    });\n\n    if (empId) {\n      setIsSaving(true);\n\n      if (selectedGid) {\n        Patch({\n          apiUrl: GENERAL_SETTINGS.OREST_URL,\n          endpoint: OREST_ENDPOINT.EMPREF,\n          gid: selectedGid,\n          data: data,\n          token\n        }).then(res => {\n          if (res.status === 200) {\n            enqueueSnackbar(t('str_processCompletedSuccessfully'), {\n              variant: 'success'\n            });\n            setOpenAddDialog(false);\n            getReferenceList();\n            handleReset();\n          } else {\n            const error = isErrorMsg(res);\n            enqueueSnackbar(error.errorMsg, {\n              variant: 'error'\n            });\n          }\n\n          setIsSaving(false);\n        });\n      } else {\n        data.empid = empId;\n        data.hotelrefno = hotelRefNo;\n        Insert({\n          apiUrl: GENERAL_SETTINGS.OREST_URL,\n          endpoint: OREST_ENDPOINT.EMPREF,\n          token,\n          data: data\n        }).then(res => {\n          if (res.status === 200) {\n            enqueueSnackbar(t('str_processCompletedSuccessfully'), {\n              variant: 'success'\n            });\n            setOpenAddDialog(false);\n            getReferenceList();\n            handleReset();\n          } else {\n            const error = isErrorMsg(res);\n            enqueueSnackbar(error.errorMsg, {\n              variant: 'error'\n            });\n          }\n\n          setIsSaving(false);\n        });\n      }\n    }\n  };\n\n  const handleOnChangeFormElements = (event, key, isOnBlur) => {\n    const name = key ? key : event.target.name;\n    const value = event !== null && event !== void 0 && event.target ? event.target.value : event;\n\n    if (isOnBlur) {\n      var _referenceData$name, _referenceData$name2;\n\n      setReferenceData(_objectSpread(_objectSpread({}, referenceData), {}, {\n        [name]: _objectSpread(_objectSpread({}, referenceData[name]), {}, {\n          isError: ((_referenceData$name = referenceData[name]) === null || _referenceData$name === void 0 ? void 0 : _referenceData$name.isRequired) && !!required(value),\n          helperText: ((_referenceData$name2 = referenceData[name]) === null || _referenceData$name2 === void 0 ? void 0 : _referenceData$name2.isRequired) && !!required(value) && t('str_mandatory')\n        })\n      }));\n    } else {\n      var _referenceData$name3, _referenceData$name4;\n\n      setReferenceData(_objectSpread(_objectSpread({}, referenceData), {}, {\n        [name]: _objectSpread(_objectSpread({}, referenceData[name]), {}, {\n          value: value,\n          isError: ((_referenceData$name3 = referenceData[name]) === null || _referenceData$name3 === void 0 ? void 0 : _referenceData$name3.isRequired) && !!required(value),\n          helperText: ((_referenceData$name4 = referenceData[name]) === null || _referenceData$name4 === void 0 ? void 0 : _referenceData$name4.isRequired) && !!required(value) && t('str_mandatory')\n        })\n      }));\n    }\n  };\n\n  const handleOnBlurFormElements = (event, key) => {\n    handleOnChangeFormElements(event, key, true);\n  };\n\n  const handleOpenAddDialog = (selectedReference = false) => {\n    if (selectedReference) {\n      handleGetselectedReference(selectedReference);\n    } else {\n      handleDefRecord();\n    }\n\n    setOpenAddDialog(true);\n  };\n\n  const handleCloseDialog = () => {\n    if (JSON.stringify(referenceData) !== JSON.stringify(referenceDataBase)) {\n      setOpenTrackedDialog(true);\n    } else {\n      setOpenAddDialog(false);\n      handleReset();\n    }\n  };\n\n  const handleReset = () => {\n    setTimeout(() => {\n      setIsInitialStateLoad(false);\n      setGetData(null);\n      setReferenceData(initialState);\n      setReferenceDataBase(initialState);\n      setSelectedReferenceData(null);\n    }, 100);\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 9\n    }\n  }, __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 4,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 21\n    }\n  }, __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 25\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 29\n    }\n  }, __jsx(CustomToolTip, {\n    title: t('str_refresh'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 33\n    }\n  }, __jsx(IconButton, {\n    onClick: () => getReferenceList(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 37\n    }\n  }, __jsx(CachedIcon, {\n    style: {\n      color: \"#F16A4B\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 41\n    }\n  })))), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 29\n    }\n  }, __jsx(CustomToolTip, {\n    title: t('str_add'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 33\n    }\n  }, __jsx(IconButton, {\n    onClick: () => handleOpenAddDialog(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 37\n    }\n  }, __jsx(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 41\n    }\n  })))))), __jsx(Grid, {\n    item: true,\n    xs: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 21\n    }\n  }), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 21\n    }\n  }, __jsx(MaterialTable, {\n    isLoading: isLoadingList,\n    columns: referenceColumns,\n    data: referenceList,\n    localization: tableLocalization,\n    options: {\n      headerStyle: {\n        cursor: 'default',\n        fontWeight: \"bold\",\n        fontSize: \"12px\",\n        color: \"#A3A6B4\",\n        textTransform: \"uppercase\",\n        backgroundColor: \"#F5F6FA\",\n        whiteSpace: 'nowrap',\n        borderLeft: '1px solid #FFF'\n      },\n      cellStyle: {\n        whiteSpace: 'nowrap',\n        borderLeft: '1px solid rgba(224, 224, 224, 1)',\n        fontSize: '13px'\n      },\n      toolbar: false,\n      selection: false,\n      sorting: false,\n      search: false,\n      actionsColumnIndex: 1,\n      selectionColumnIndex: 1\n    },\n    components: {\n      Header: props => {\n        const overrideProps = _objectSpread({}, props);\n\n        overrideProps.draggable = false;\n        return __jsx(MTableHeader, _extends({}, overrideProps, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 41\n          }\n        }));\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 25\n    }\n  }))), __jsx(Dialog, {\n    open: openAddDialog,\n    maxWidth: 'sm',\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    style: {\n      padding: 24\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 21\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 25\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 29\n    }\n  }, __jsx(Typography, {\n    style: {\n      fontWeight: '600',\n      fontSize: '18px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 33\n    }\n  }, selectedReferenceData ? t('str_editReference') : t('str_addReference'))), isDef ? __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 37\n    }\n  }, __jsx(LoadingSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 41\n    }\n  })) : __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 37\n    }\n  }, formElements.map((item, index) => __jsx(Grid, _extends({\n    key: index,\n    item: true\n  }, item.gridProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 49\n    }\n  }), renderFormElements(item))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 41\n    }\n  }, __jsx(AddDialogActions, {\n    disabled: isSaving,\n    loading: isSaving,\n    disabledSave: referenceData.reftypeid.value.length <= 0,\n    toolTipTitle: __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 53\n      }\n    }, __jsx(Typography, {\n      style: {\n        fontWeight: '600',\n        fontSize: 'inherit'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 57\n      }\n    }, t('str_invalidFields')), referenceData.reftypeid.isError || required(referenceData.reftypeid.value) && __jsx(Typography, {\n      style: {\n        fontSize: 'inherit'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 65\n      }\n    }, t('str_reference'))),\n    onCancelClick: handleCloseDialog,\n    onSaveClick: handleSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 45\n    }\n  })))))), __jsx(TrackedChangesDialog, {\n    open: openTrackedDialog,\n    onPressNo: e => {\n      setOpenTrackedDialog(e);\n    },\n    onPressYes: e => {\n      setOpenTrackedDialog(e);\n      setOpenAddDialog(false);\n      handleReset();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 17\n    }\n  })));\n}\n\nexport default References;","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/emp-portal/tabs/References/index.js"],"names":["React","useState","useEffect","useContext","Insert","UseOrest","ViewList","Patch","Delete","WebCmsGlobal","useSelector","isErrorMsg","mobileTelNoFormat","OREST_ENDPOINT","Grid","Typography","Dialog","Checkbox","FormControlLabel","Button","Menu","MenuItem","IconButton","useSnackbar","MaterialTableGeneric","SLASH","useTranslation","renderFormElements","ELEMENT_TYPES","required","AddDialogActions","LocaleContext","LoadingSpinner","helper","TrackedChangesDialog","EditOutlinedIcon","MaterialTable","MTableHeader","MaterialTableLocalization","MoreVertIcon","TableColumnText","PopupState","bindMenu","bindTrigger","CustomToolTip","CachedIcon","AddIcon","DeleteIcon","VARIANT","References","props","empId","enqueueSnackbar","GENERAL_SETTINGS","locale","t","tableLocalization","token","state","orest","currentUser","auth","access_token","hotelRefNo","hotelinfo","currentHotelRefNo","HOTELREFNO","initialState","reftypeid","value","isError","helperText","refname","tel","email","note","isLoadingList","setIsLoadingList","allHotels","setAllHotels","referenceList","setReferenceList","openAddDialog","setOpenAddDialog","selectedReferenceData","setSelectedReferenceData","selectedGid","setSelectedGid","getData","setGetData","openTrackedDialog","setOpenTrackedDialog","isDef","setIsDef","isSaving","setIsSaving","referenceData","setReferenceData","referenceDataBase","setReferenceDataBase","isInitialStateLoad","setIsInitialStateLoad","isDeleting","setIsDeleting","formElements","type","autoComplete","id","name","disabled","label","variant","isRequired","error","onChange","newValue","handleOnChangeFormElements","onBlur","e","handleOnBlurFormElements","onLoad","initialValue","data","endpoint","params","text","limit","field","initialId","showOptionLabel","showOption","searchParam","fullWidth","gridProps","xs","sm","textField","phoneInput","defaultCountry","referenceColumns","title","padding","maxWidth","minWidth","render","popupState","vertical","horizontal","gid","handleOpenAddDialog","close","paddingLeft","handleDeleteItem","reftype","getReferenceList","isEffect","newClientInitialState","objectMapper","apiUrl","OREST_URL","EMPREF","hotelrefno","then","res","status","errorMsg","length","substring","query","allhotels","count","handleGetselectedReference","selectedReference","VIEW","handleDefRecord","DEF","Object","assign","handleSave","keys","map","key","handleReset","empid","event","isOnBlur","target","handleCloseDialog","JSON","stringify","setTimeout","color","headerStyle","cursor","fontWeight","fontSize","textTransform","backgroundColor","whiteSpace","borderLeft","cellStyle","toolbar","selection","sorting","search","actionsColumnIndex","selectionColumnIndex","Header","overrideProps","draggable","item","index"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext} from 'react';\nimport {Insert, UseOrest, ViewList, Patch, Delete} from \"@webcms/orest\";\nimport WebCmsGlobal from \"../../../webcms-global\";\nimport {useSelector} from \"react-redux\";\nimport {isErrorMsg, mobileTelNoFormat, OREST_ENDPOINT} from \"../../../../model/orest/constants\";\nimport {\n    Grid,\n    Typography,\n    Dialog,\n    Checkbox, FormControlLabel, Button, Menu, MenuItem, IconButton\n} from \"@material-ui/core\";\nimport {useSnackbar} from \"notistack\";\nimport MaterialTableGeneric from \"../../../MaterialTableGeneric\";\nimport {SLASH} from \"../../../../model/globals\";\nimport useTranslation from \"../../../../lib/translations/hooks/useTranslation\";\nimport renderFormElements, {ELEMENT_TYPES} from \"../../../render-form-elements\";\nimport {required} from \"../../../../state/utils/form\";\nimport AddDialogActions from \"../../../AddDialogActions\";\nimport {LocaleContext} from \"../../../../lib/translations/context/LocaleContext\";\nimport LoadingSpinner from \"../../../LoadingSpinner\";\nimport {helper} from \"../../../../@webcms-globals\";\nimport TrackedChangesDialog from \"../../../TrackedChangesDialog\";\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\nimport MaterialTable, {MTableHeader} from \"material-table\";\nimport MaterialTableLocalization from \"../../../MaterialTableLocalization\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport TableColumnText from \"../../../TableColumnText\";\nimport PopupState, {bindMenu, bindTrigger} from \"material-ui-popup-state\";\nimport {CustomToolTip} from \"../../../user-portal/components/CustomToolTip/CustomToolTip\";\nimport CachedIcon from \"@material-ui/icons/Cached\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\n\nconst VARIANT = 'outlined'\n\nfunction References(props) {\n\n    //props\n    const {empId} = props\n\n    //snackbar\n    const {enqueueSnackbar} = useSnackbar();\n\n    //context\n    const {GENERAL_SETTINGS} = useContext(WebCmsGlobal)\n    const {locale} = useContext(LocaleContext)\n    const {t} = useTranslation()\n\n    const tableLocalization = MaterialTableLocalization();\n\n    //redux state\n    const token = useSelector((state) => state?.orest?.currentUser?.auth?.access_token || false)\n    const hotelRefNo = useSelector((state) => state?.hotelinfo?.currentHotelRefNo || GENERAL_SETTINGS.HOTELREFNO || false)\n\n    //locale state\n    const initialState = {\n        reftypeid: {value: '', isError: false, required: true, helperText: ''},\n        refname: {value: '', isError: false, required: false, helperText: ''},\n        tel: {value: '', isError: false, required: true, helperText: ''},\n        email: {value: '', isError: false, required: true, helperText: ''},\n        note: {value: '', isError: false, required: false, helperText: ''},\n    }\n\n    const [isLoadingList, setIsLoadingList] = useState(false)\n    const [allHotels, setAllHotels] = useState(false)\n    const [referenceList, setReferenceList] = useState([])\n    const [openAddDialog, setOpenAddDialog] = useState(false);\n\n    const [selectedReferenceData, setSelectedReferenceData] = useState(null)\n    const [selectedGid, setSelectedGid] = useState(false)\n    const [getData, setGetData] = useState(null)\n    const [openTrackedDialog, setOpenTrackedDialog] = useState(false);\n    const [isDef, setIsDef] = useState(false)\n    const [isSaving, setIsSaving] = useState(false)\n    const [referenceData, setReferenceData] = useState(initialState)\n    const [referenceDataBase, setReferenceDataBase] = useState(initialState)\n    const [isInitialStateLoad, setIsInitialStateLoad] = useState(false)\n    const [isDeleting, setIsDeleting] = useState(false)\n\n    const formElements = [\n        {\n            type: ELEMENT_TYPES.autoComplete,\n            id: 'reftypeid',\n            name: 'reftypeid',\n            value: referenceData.reftypeid?.value || null,\n            disabled: isSaving,\n            label: t('str_references'),\n            variant: VARIANT,\n            required: referenceData.reftypeid?.isRequired,\n            error: referenceData.reftypeid?.isError,\n            helperText: referenceData.reftypeid?.helperText,\n            onChange: (newValue, name) => handleOnChangeFormElements(newValue, name),\n            onBlur: (e, name) => handleOnBlurFormElements(e, name),\n            onLoad: (initialValue, name) => {\n                const data = {...referenceData}\n                data[name].value = initialValue ? initialValue : null\n                setReferenceData(data)\n            },\n            endpoint: 'empreftype/view/list',\n            params: {text: '', limit: 25, field: 'code'},\n            initialId: isInitialStateLoad && selectedReferenceData?.reftypeid || false,\n            showOptionLabel: 'description',\n            showOption: 'description',\n            searchParam: 'description',\n            fullWidth: true,\n            gridProps: {xs: 12, sm: 6}\n        },\n        {\n            type: ELEMENT_TYPES.textField,\n            id: 'refname',\n            name: 'refname',\n            value: referenceData.refname?.value,\n            error: referenceData.refname?.isError,\n            required: referenceData.refname?.isRequired,\n            disabled: isSaving,\n            label: t('str_referenceName'),\n            helperText: referenceData.refname?.helperText,\n            onChange: (e) => handleOnChangeFormElements(e),\n            onBlur: (e) => handleOnBlurFormElements(e),\n            variant: VARIANT,\n            fullWidth: true,\n            gridProps: {xs: 12, sm: 6}\n        },\n        {\n            type: ELEMENT_TYPES.phoneInput,\n            id: 'tel',\n            name: 'tel',\n            value: referenceData.tel?.value,\n            required: referenceData.tel.isRequired,\n            disabled: isSaving,\n            error: referenceData.tel.isError,\n            label: t('str_tel'),\n            helperText: referenceData.tel.helperText,\n            onChange: (e, name) => handleOnChangeFormElements(e, name),\n            onBlur: (e, name) => handleOnBlurFormElements(e, name),\n            defaultCountry: locale === 'en' ? 'us' : locale,\n            fullWidth: true,\n            gridProps: {xs: 12, sm: 6}\n        },\n        {\n            type: ELEMENT_TYPES.textField,\n            id: 'email',\n            name: 'email',\n            value: referenceData.email?.value,\n            error: referenceData.email?.isError,\n            required: referenceData.email?.isRequired,\n            disabled: isSaving,\n            label: t('str_email'),\n            helperText: referenceData.email?.helperText,\n            onChange: (e) => handleOnChangeFormElements(e),\n            onBlur: (e) => handleOnBlurFormElements(e),\n            variant: VARIANT,\n            fullWidth: true,\n            gridProps: {xs: 12, sm: 6}\n        },\n        {\n            type: ELEMENT_TYPES.textField,\n            id: 'note',\n            name: 'note',\n            value: referenceData.note?.value,\n            error: referenceData.note?.isError,\n            required: referenceData.note?.isRequired,\n            disabled: isSaving,\n            label: t('str_note'),\n            helperText: referenceData.note?.helperText,\n            onChange: (e) => handleOnChangeFormElements(e),\n            onBlur: (e) => handleOnBlurFormElements(e),\n            variant: VARIANT,\n            fullWidth: true,\n            gridProps: {xs: 12, sm: 12}\n        }\n    ]\n\n    const referenceColumns = [\n        {\n            title: (\n                <Button\n                    style={{padding: 0, maxWidth: 25, minWidth: 25}}\n                    disabled\n                    color={'primary'}\n                    variant={'text'}\n                >\n                    <MoreVertIcon/>\n                </Button>\n            ),\n            render: props => (\n                <TableColumnText minWidth={10}>\n                    <PopupState variant=\"popover\" popupId=\"material-table-action-column\">\n                        {(popupState) => (\n                            <React.Fragment>\n                                <Button\n                                    style={{padding: 0, maxWidth: 25, minWidth: 25}}\n                                    color={'primary'}\n                                    variant={'contained'}\n                                    {...bindTrigger(popupState)}\n                                >\n                                    <MoreVertIcon size={'small'}/>\n                                </Button>\n                                <Menu\n                                    anchorOrigin={{\n                                        vertical: \"bottom\",\n                                        horizontal: \"left\"\n                                    }}\n                                    transformOrigin={{\n                                        vertical: \"top\",\n                                        horizontal: \"left\"\n                                    }}\n                                    getContentAnchorEl={null}\n                                    {...bindMenu(popupState)}\n                                >\n                                    <MenuItem\n                                        onClick={() => {\n                                            setSelectedReferenceData(props)\n                                            setSelectedGid(props?.gid || false)\n                                            handleOpenAddDialog(props)\n                                            popupState.close();\n                                        }}\n                                    >\n                                        {<EditOutlinedIcon/>}\n                                        <Typography style={{paddingLeft: '8px'}}>{t('str_edit')}</Typography>\n                                    </MenuItem>\n                                    <MenuItem\n                                        onClick={() => handleDeleteItem(props.gid)}\n                                    >\n                                        <DeleteIcon/>\n                                        <Typography style={{paddingLeft: '8px'}}>{t('str_delete')}</Typography>\n                                    </MenuItem>\n                                </Menu>\n                            </React.Fragment>\n                        )}\n                    </PopupState>\n                </TableColumnText>\n            )\n        },\n        {\n            title: t('str_references'),\n            field: 'reftypeid',\n            render: (props) => <TableColumnText>{props?.reftype}</TableColumnText>\n        },\n        {\n            title: t('str_fullName'),\n            field: 'refname',\n            render: (props) => <TableColumnText>{props?.refname}</TableColumnText>\n        },\n        {\n            title: t('str_tel'),\n            field: 'tel',\n            render: (props) => <TableColumnText>{props?.tel}</TableColumnText>\n        },\n        {\n            title: t('str_email'),\n            field: 'email',\n            render: (props) => <TableColumnText>{props?.email}</TableColumnText>\n        },\n        {\n            title: t('str_note'),\n            field: 'note',\n            render: (props) => <TableColumnText>{props?.note}</TableColumnText>\n        },\n    ]\n\n    useEffect(() => {\n        if (token && empId) {\n            getReferenceList()\n        }\n    }, [])\n\n    useEffect(() => {\n        let isEffect = true\n        if (isEffect && referenceData && getData) {\n            const newClientInitialState = helper.objectMapper(referenceData, getData, ['reftypeid'])\n            setReferenceData(newClientInitialState)\n            setReferenceDataBase(newClientInitialState)\n            setIsInitialStateLoad(true)\n        }\n\n\n        return () => {\n            isEffect = false\n        }\n\n    }, [getData])\n\n    const handleDeleteItem = (gid) => {\n        setIsDeleting(true)\n        Delete({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.EMPREF,\n            token,\n            gid: gid,\n            params: {\n                hotelrefno: GENERAL_SETTINGS.HOTELREFNO,\n            }\n        }).then((res) => {\n            if (res.status === 200) {\n                getReferenceList()\n            } else {\n                const error = isErrorMsg(res)\n                enqueueSnackbar(error.errorMsg?.length > 50 ? error.errorMsg?.substring(0, 50) : error.errorMsg, {variant: 'error'})\n                setIsDeleting(false)\n            }\n        })\n    }\n\n    const getReferenceList = () => {\n        setIsLoadingList(true)\n        ViewList({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.EMPREF,\n            token,\n            params: {\n                query: `empid:${empId}`,\n                allhotels: allHotels,\n                hotelrefno: hotelRefNo\n            }\n        }).then(res => {\n            setIsLoadingList(false)\n            if (res.status === 200) {\n                if (res.data.count > 0) {\n                    setReferenceList(res.data.data)\n                }\n            } else {\n                const error = isErrorMsg(res)\n                enqueueSnackbar(error.errorMsg?.length > 50 ? error.errorMsg?.substring(0, 50) : error.errorMsg, {variant: 'error'})\n            }\n        })\n    }\n\n    const handleGetselectedReference = (selectedReference) => {\n        if (selectedReference) {\n            setIsDef(true)\n            UseOrest({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: OREST_ENDPOINT.EMPREF + SLASH + OREST_ENDPOINT.VIEW + SLASH + 'get' + SLASH + selectedReference.gid,\n                token\n            }).then(res => {\n                setIsDef(false)\n                if (res.status === 200 && res.data.data) {\n                    const data = res.data.data\n                    setGetData(data)\n\n                }\n            })\n        }\n    }\n\n    const handleDefRecord = () => {\n        setIsDef(true)\n        UseOrest({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.EMPREF + SLASH + OREST_ENDPOINT.DEF,\n            token,\n            params: {\n                hotelrefno: hotelRefNo\n            }\n        }).then(res => {\n            if (res.status === 200 && res.data.count > 0) {\n                const data = Object.assign({}, res.data.data, referenceData)\n                setReferenceData(data)\n                setReferenceDataBase(data)\n            }\n            setIsDef(false)\n        })\n    }\n\n    const handleSave = () => {\n        const data = {...referenceData}\n        Object.keys(initialState).map((key) => {\n            data[key] = typeof data[key].value === 'object' ? data[key].value ? data[key].value.id : null : data[key].value\n        })\n        if (empId) {\n            setIsSaving(true)\n            if (selectedGid) {\n                Patch({\n                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                    endpoint: OREST_ENDPOINT.EMPREF,\n                    gid: selectedGid,\n                    data: data,\n                    token\n                }).then(res => {\n                    if (res.status === 200) {\n                        enqueueSnackbar(t('str_processCompletedSuccessfully'), {variant: 'success'})\n                        setOpenAddDialog(false)\n                        getReferenceList()\n                        handleReset()\n                    } else {\n                        const error = isErrorMsg(res)\n                        enqueueSnackbar(error.errorMsg, {variant: 'error'})\n                    }\n                    setIsSaving(false)\n                })\n            } else {\n                data.empid = empId\n                data.hotelrefno = hotelRefNo\n                Insert({\n                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                    endpoint: OREST_ENDPOINT.EMPREF,\n                    token,\n                    data: data\n                }).then(res => {\n                    if (res.status === 200) {\n                        enqueueSnackbar(t('str_processCompletedSuccessfully'), {variant: 'success'})\n                        setOpenAddDialog(false)\n                        getReferenceList()\n                        handleReset()\n                    } else {\n                        const error = isErrorMsg(res)\n                        enqueueSnackbar(error.errorMsg, {variant: 'error'})\n                    }\n                    setIsSaving(false)\n                })\n            }\n        }\n    }\n\n    const handleOnChangeFormElements = (event, key, isOnBlur) => {\n        const name = key ? key : event.target.name\n        const value = event?.target ? event.target.value : event\n\n        if (isOnBlur) {\n            setReferenceData({\n                ...referenceData,\n                [name]: {\n                    ...referenceData[name],\n                    isError: referenceData[name]?.isRequired && !!required(value),\n                    helperText: referenceData[name]?.isRequired && !!required(value) && t('str_mandatory'),\n                }\n            })\n        } else {\n            setReferenceData({\n                ...referenceData,\n                [name]: {\n                    ...referenceData[name],\n                    value: value,\n                    isError: referenceData[name]?.isRequired && !!required(value),\n                    helperText: referenceData[name]?.isRequired && !!required(value) && t('str_mandatory'),\n                }\n            })\n        }\n    }\n\n    const handleOnBlurFormElements = (event, key) => {\n        handleOnChangeFormElements(event, key, true)\n    }\n\n    const handleOpenAddDialog = (selectedReference = false) => {\n        if (selectedReference) {\n            handleGetselectedReference(selectedReference)\n        } else {\n            handleDefRecord()\n        }\n        setOpenAddDialog(true)\n    }\n\n    const handleCloseDialog = () => {\n        if (JSON.stringify(referenceData) !== JSON.stringify(referenceDataBase)) {\n            setOpenTrackedDialog(true)\n        } else {\n            setOpenAddDialog(false)\n            handleReset()\n        }\n    }\n\n\n    const handleReset = () => {\n        setTimeout(() => {\n            setIsInitialStateLoad(false)\n            setGetData(null)\n            setReferenceData(initialState)\n            setReferenceDataBase(initialState)\n            setSelectedReferenceData(null)\n        }, 100)\n    }\n\n    return (\n        <div>\n            <React.Fragment>\n                <Grid container>\n                    <Grid item xs={4} sm={3}>\n                        <Grid container>\n                            <Grid item xs={6} sm={3}>\n                                <CustomToolTip title={t('str_refresh')}>\n                                    <IconButton\n                                        onClick={() => getReferenceList()}\n                                    >\n                                        <CachedIcon style={{color: \"#F16A4B\"}}/>\n                                    </IconButton>\n                                </CustomToolTip>\n                            </Grid>\n                            <Grid item xs={6} sm={3}>\n                                <CustomToolTip title={t('str_add')}>\n                                    <IconButton\n                                        onClick={() => handleOpenAddDialog(false)}\n                                    >\n                                        <AddIcon/>\n                                    </IconButton>\n                                </CustomToolTip>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={8}>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <MaterialTable\n                            isLoading={isLoadingList}\n                            columns={referenceColumns}\n                            data={referenceList}\n                            localization={tableLocalization}\n                            options={{\n                                headerStyle: {\n                                    cursor: 'default',\n                                    fontWeight: \"bold\",\n                                    fontSize: \"12px\",\n                                    color: \"#A3A6B4\",\n                                    textTransform: \"uppercase\",\n                                    backgroundColor: \"#F5F6FA\",\n                                    whiteSpace: 'nowrap',\n                                    borderLeft: '1px solid #FFF',\n                                },\n                                cellStyle: {\n                                    whiteSpace: 'nowrap',\n                                    borderLeft: '1px solid rgba(224, 224, 224, 1)',\n                                    fontSize: '13px',\n                                },\n                                toolbar: false,\n                                selection: false,\n                                sorting: false,\n                                search: false,\n                                actionsColumnIndex: 1,\n                                selectionColumnIndex: 1\n                            }}\n                            components={{\n                                Header: (props) => {\n                                    const overrideProps = {...props}\n                                    overrideProps.draggable = false\n                                    return (\n                                        <MTableHeader  {...overrideProps}/>\n                                    )\n                                },\n                            }}\n                        />\n                    </Grid>\n                </Grid>\n                <Dialog open={openAddDialog} maxWidth={'sm'} fullWidth>\n                    <div style={{padding: 24}}>\n                        <Grid container spacing={3}>\n                            <Grid item xs={12}>\n                                <Typography style={{\n                                    fontWeight: '600',\n                                    fontSize: '18px'\n                                }}>{selectedReferenceData ? t('str_editReference') : t('str_addReference')}</Typography>\n                            </Grid>\n                            {\n                                isDef ? (\n                                    <Grid item xs={12}>\n                                        <LoadingSpinner/>\n                                    </Grid>\n                                ) : (\n                                    <React.Fragment>\n                                        {\n                                            formElements.map((item, index) => (\n                                                <Grid key={index} item {...item.gridProps}>\n                                                    {renderFormElements(item)}\n                                                </Grid>\n                                            ))\n                                        }\n\n                                        <Grid item xs={12}>\n                                            <AddDialogActions\n                                                disabled={isSaving}\n                                                loading={isSaving}\n                                                disabledSave={referenceData.reftypeid.value.length <= 0}\n                                                toolTipTitle={\n                                                    <div>\n                                                        <Typography style={{\n                                                            fontWeight: '600',\n                                                            fontSize: 'inherit'\n                                                        }}>{t('str_invalidFields')}</Typography>\n                                                        {\n                                                            referenceData.reftypeid.isError || required(referenceData.reftypeid.value) && (\n                                                                <Typography\n                                                                    style={{fontSize: 'inherit'}}>{t('str_reference')}</Typography>\n                                                            )\n                                                        }\n                                                    </div>\n                                                }\n                                                onCancelClick={handleCloseDialog}\n                                                onSaveClick={handleSave}\n                                            />\n                                        </Grid>\n\n                                    </React.Fragment>\n                                )\n                            }\n                        </Grid>\n                    </div>\n                </Dialog>\n                <TrackedChangesDialog\n                    open={openTrackedDialog}\n                    onPressNo={(e) => {\n                        setOpenTrackedDialog(e);\n                    }}\n                    onPressYes={(e) => {\n                        setOpenTrackedDialog(e);\n                        setOpenAddDialog(false)\n                        handleReset()\n                    }}\n                />\n            </React.Fragment>\n        </div>\n    )\n}\n\nexport default References"]},"metadata":{},"sourceType":"module"}