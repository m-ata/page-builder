{"ast":null,"code":"import _extends from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\n\nvar _jsxFileName = \"/Users/mata/app-cloudweb/components/survey/surveytree/options/Date.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport MomentAdapter from '@date-io/moment';\nimport { MobileDatePicker, DatePicker, LocalizationProvider } from '@material-ui/pickers';\nimport { SURVEY_INPUT_VARIANT } from '../../../../assets/const';\nimport moment from 'moment';\nimport { OREST_ENDPOINT } from '../../../../model/orest/constants';\nimport useSurveyAction from '../../../../model/survey/useSurveyAction';\nimport { useSelector } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport styles from '../../style/SurveyOptions.style';\nimport SurveyTooltip from 'components/survey/helper/SurveyTooltip';\nimport { useRouter } from 'next/router';\nvar useStyles = makeStyles(styles);\nexport default function DateOption(props) {\n  _s();\n\n  var _this = this;\n\n  var option = props.option,\n      optionTyp = props.optionTyp;\n  var router = useRouter();\n  var isKiosk = router.query.kiosk === 'true' ? true : false; //style\n\n  var classes = useStyles(); //redux\n\n  var _useSurveyAction = useSurveyAction(),\n      setSurveyAnswerMulti = _useSurveyAction.setSurveyAnswerMulti,\n      deleteSurveyAnswer = _useSurveyAction.deleteSurveyAnswer;\n\n  var surveyTrans = useSelector(function (state) {\n    return state.survey.trans;\n  });\n  var surveyIsValid = useSelector(function (state) {\n    return state.survey.isValid;\n  });\n  var oldAnswer = useSelector(function (state) {\n    return state.survey.answers[surveyTrans] && state.survey.answers[surveyTrans][option.parentid] && state.survey.answers[surveyTrans][option.parentid][option.id];\n  }); //state\n\n  var _useState = useState(oldAnswer ? oldAnswer.valuedate : null),\n      optionValue = _useState[0],\n      setOptionValue = _useState[1];\n\n  var handleChangeOption = function handleChangeOption(date) {\n    var dateValue = moment(date).format(OREST_ENDPOINT.DATEFORMAT_LOCALE);\n    setOptionValue(date);\n\n    if (dateValue !== '' && dateValue !== 'Invalid date') {\n      setSurveyAnswerMulti(surveyTrans, option.parentid, option.id, {\n        typ: optionTyp,\n        parentid: option.parentid,\n        valuedate: dateValue\n      });\n    } else {\n      deleteSurveyAnswer(surveyTrans, option.parentid, option.id);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: classes.optionContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, __jsx(SurveyTooltip, {\n    title: option && option.note || '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, __jsx(LocalizationProvider, {\n    dateLibInstance: moment,\n    dateAdapter: MomentAdapter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, isKiosk ? __jsx(MobileDatePicker, {\n    autoOk: true,\n    disableFuture: true,\n    margin: \"dense\",\n    name: String(option.id),\n    label: option.langwordtxt || option.description,\n    showTodayButton: true,\n    openTo: !optionValue ? 'year' : 'date',\n    views: ['year', 'month', 'date'],\n    fullWidth: true,\n    disabled: surveyIsValid,\n    value: optionValue,\n    onChange: handleChangeOption,\n    className: classes.textField,\n    inputFormat: \"DD/MM/YYYY\",\n    InputProps: {\n      classes: {\n        input: classes.textFieldInput\n      }\n    },\n    InputLabelProps: {\n      className: classes.textFieldLabel\n    },\n    renderInput: function renderInput(props) {\n      return __jsx(TextField, _extends({}, props, {\n        variant: SURVEY_INPUT_VARIANT,\n        fullWidth: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 53\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }) : __jsx(DatePicker, {\n    autoOk: true,\n    disableFuture: true,\n    margin: \"dense\",\n    name: String(option.id),\n    label: option.langwordtxt || option.description,\n    showTodayButton: true,\n    openTo: !optionValue ? 'year' : 'date',\n    views: ['year', 'month', 'date'],\n    fullWidth: true,\n    disabled: surveyIsValid,\n    value: optionValue,\n    onChange: handleChangeOption,\n    className: classes.textField,\n    inputFormat: \"DD/MM/YYYY\",\n    InputProps: {\n      classes: {\n        input: classes.textFieldInput\n      }\n    },\n    InputLabelProps: {\n      className: classes.textFieldLabel\n    },\n    renderInput: function renderInput(props) {\n      return __jsx(TextField, _extends({}, props, {\n        variant: SURVEY_INPUT_VARIANT,\n        fullWidth: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 53\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }))));\n}\n\n_s(DateOption, \"uJtxZzwQ7KSZ6evaW1nQ8z6r3ls=\", false, function () {\n  return [useRouter, useStyles, useSurveyAction, useSelector, useSelector, useSelector];\n});\n\n_c = DateOption;\n\nvar _c;\n\n$RefreshReg$(_c, \"DateOption\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/survey/surveytree/options/Date.js"],"names":["React","useState","MomentAdapter","MobileDatePicker","DatePicker","LocalizationProvider","SURVEY_INPUT_VARIANT","moment","OREST_ENDPOINT","useSurveyAction","useSelector","makeStyles","TextField","styles","SurveyTooltip","useRouter","useStyles","DateOption","props","option","optionTyp","router","isKiosk","query","kiosk","classes","setSurveyAnswerMulti","deleteSurveyAnswer","surveyTrans","state","survey","trans","surveyIsValid","isValid","oldAnswer","answers","parentid","id","valuedate","optionValue","setOptionValue","handleChangeOption","date","dateValue","format","DATEFORMAT_LOCALE","typ","optionContainer","note","String","langwordtxt","description","textField","input","textFieldInput","className","textFieldLabel"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport MomentAdapter from '@date-io/moment'\nimport { MobileDatePicker, DatePicker, LocalizationProvider } from '@material-ui/pickers'\nimport { SURVEY_INPUT_VARIANT } from '../../../../assets/const'\nimport moment from 'moment'\nimport { OREST_ENDPOINT } from '../../../../model/orest/constants'\nimport useSurveyAction from '../../../../model/survey/useSurveyAction'\nimport { useSelector } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\nimport styles from '../../style/SurveyOptions.style'\nimport SurveyTooltip from 'components/survey/helper/SurveyTooltip'\nimport { useRouter } from 'next/router'\n\nconst useStyles = makeStyles(styles)\n\nexport default function DateOption(props) {\n    const { option, optionTyp } = props\n    const router = useRouter()\n    const isKiosk = router.query.kiosk === 'true' ? true : false\n    //style\n    const classes = useStyles()\n\n    //redux\n    const { setSurveyAnswerMulti, deleteSurveyAnswer } = useSurveyAction()\n    const surveyTrans = useSelector((state) => state.survey.trans)\n    const surveyIsValid = useSelector((state) => state.survey.isValid)\n    const oldAnswer = useSelector(\n        (state) =>\n            state.survey.answers[surveyTrans] &&\n            state.survey.answers[surveyTrans][option.parentid] &&\n            state.survey.answers[surveyTrans][option.parentid][option.id],\n    )\n\n    //state\n    const [optionValue, setOptionValue] = useState(oldAnswer ? oldAnswer.valuedate : null)\n\n    const handleChangeOption = (date) => {\n        const dateValue = moment(date).format(OREST_ENDPOINT.DATEFORMAT_LOCALE)\n        setOptionValue(date)\n\n        if (dateValue !== '' && dateValue !== 'Invalid date') {\n            setSurveyAnswerMulti(surveyTrans, option.parentid, option.id, {\n                typ: optionTyp,\n                parentid: option.parentid,\n                valuedate: dateValue,\n            })\n        } else {\n            deleteSurveyAnswer(surveyTrans, option.parentid, option.id)\n        }\n    }\n\n    return (\n        <div className={classes.optionContainer}>\n            <SurveyTooltip title={option && option.note || ''}>\n                <LocalizationProvider dateLibInstance={moment} dateAdapter={MomentAdapter}>\n                    {isKiosk ? (\n                        <MobileDatePicker\n                            autoOk\n                            disableFuture\n                            margin=\"dense\"\n                            name={String(option.id)}\n                            label={option.langwordtxt || option.description}\n                            showTodayButton\n                            openTo={!optionValue ? 'year' : 'date'}\n                            views={['year', 'month', 'date']}\n                            fullWidth\n                            disabled={surveyIsValid}\n                            value={optionValue}\n                            onChange={handleChangeOption}\n                            className={classes.textField}\n                            inputFormat=\"DD/MM/YYYY\"\n                            InputProps={{ classes: { input: classes.textFieldInput } }}\n                            InputLabelProps={{ className: classes.textFieldLabel }}\n                            renderInput={(props) => <TextField {...props} variant={SURVEY_INPUT_VARIANT} fullWidth/>}\n                        />\n                    ): (\n                        <DatePicker\n                            autoOk\n                            disableFuture\n                            margin=\"dense\"\n                            name={String(option.id)}\n                            label={option.langwordtxt || option.description}\n                            showTodayButton\n                            openTo={!optionValue ? 'year' : 'date'}\n                            views={['year', 'month', 'date']}\n                            fullWidth\n                            disabled={surveyIsValid}\n                            value={optionValue}\n                            onChange={handleChangeOption}\n                            className={classes.textField}\n                            inputFormat=\"DD/MM/YYYY\"\n                            InputProps={{ classes: { input: classes.textFieldInput } }}\n                            InputLabelProps={{ className: classes.textFieldLabel }}\n                            renderInput={(props) => <TextField {...props} variant={SURVEY_INPUT_VARIANT} fullWidth/>}\n                        />\n                    )}\n                </LocalizationProvider>\n            </SurveyTooltip>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}