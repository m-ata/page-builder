{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/guest/account/MyProfile/MyLoyalty.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport styles from './style/MyLoyalty.style';\nimport stylesTabPanel from '../style/TabPanel.style';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { LinearProgress, makeStyles } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport NumberFormat from 'react-number-format';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nimport { withStyles } from '@material-ui/core/styles';\nimport SeeAdvantages from '../LoyaltyClub/SeeAdvantages';\nvar useStyles = makeStyles(styles);\nvar useStylesTabPanel = makeStyles(stylesTabPanel);\nvar BorderLinearProgress = withStyles({\n  root: {\n    background: '#ccdfe2',\n    height: 8\n  },\n  bar: {\n    borderRadius: 0,\n    background: '#49777f'\n  }\n})(LinearProgress);\n\nvar MyLoyalty = function MyLoyalty(props) {\n  _s();\n\n  var state = props.state;\n  var classes = useStyles();\n  var classesTabPanel = useStylesTabPanel();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var nextCardTypeCode = state.memCardNext && state.memCardNext.nextcardtypecode;\n\n  var _useState = useState(false),\n      openSeeAdvantages = _useState[0],\n      setOpenSeeAdvantages = _useState[1];\n\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    container: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: classes.cardContainerWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, __jsx(Grid, {\n    container: true,\n    alignItems: 'center',\n    className: classes.cardContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }, state.memCardNext && __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 33\n    }\n  }, nextCardTypeCode ? __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 41\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    className: classesTabPanel.gridItem,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 45\n    }\n  }, __jsx(Grid, {\n    container: true,\n    justify: 'center',\n    alignItems: 'center',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 49\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 53\n    }\n  }, __jsx(NumberFormat, {\n    value: state.memCardNext && state.memCardNext.nextbonusreq,\n    displayType: 'text',\n    decimalScale: 2,\n    isNumericString: true,\n    thousandSeparator: true,\n    renderText: function renderText(value) {\n      return __jsx(Typography, {\n        className: classes.left,\n        align: 'center',\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 65\n        }\n      }, t('str_onlyLeftToCard', {\n        currentpts: value || 0,\n        nextcardcode: nextCardTypeCode\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 57\n    }\n  })))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    className: classesTabPanel.gridItem,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 45\n    }\n  }, __jsx(Grid, {\n    container: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 49\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.progress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 53\n    }\n  }, __jsx(BorderLinearProgress, {\n    variant: \"determinate\",\n    value: state.memCardNext && state.memCardNext.totalbonus / state.memCardNext.nextbonustotal * 100 || 0,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 57\n    }\n  }))))) : null, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    className: classesTabPanel.gridItem,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 37\n    }\n  }, __jsx(Grid, {\n    container: true,\n    justify: 'center',\n    alignItems: 'center',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 41\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 45\n    }\n  }, __jsx(Typography, {\n    onClick: function onClick() {\n      return setOpenSeeAdvantages(true);\n    },\n    className: classes.leftLink,\n    align: 'center',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 49\n    }\n  }, t('str_seeTheAdvantages')), openSeeAdvantages && __jsx(SeeAdvantages, {\n    open: openSeeAdvantages,\n    onClose: function onClose(e) {\n      return setOpenSeeAdvantages(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 72\n    }\n  }))))))))));\n};\n\n_s(MyLoyalty, \"LZD7xWSOC3/RX0TWUaRIPJ5yYPE=\", false, function () {\n  return [useStyles, useStylesTabPanel, useTranslation];\n});\n\n_c = MyLoyalty;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    state: state.formReducer.guest\n  };\n};\n\nexport default connect(mapStateToProps, null)(MyLoyalty);\n\nvar _c;\n\n$RefreshReg$(_c, \"MyLoyalty\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/guest/account/MyProfile/MyLoyalty.js"],"names":["React","useState","styles","stylesTabPanel","Typography","Grid","LinearProgress","makeStyles","connect","NumberFormat","useTranslation","withStyles","SeeAdvantages","useStyles","useStylesTabPanel","BorderLinearProgress","root","background","height","bar","borderRadius","MyLoyalty","props","state","classes","classesTabPanel","t","nextCardTypeCode","memCardNext","nextcardtypecode","openSeeAdvantages","setOpenSeeAdvantages","cardContainerWrapper","cardContainer","gridItem","nextbonusreq","value","left","currentpts","nextcardcode","progress","totalbonus","nextbonustotal","leftLink","e","mapStateToProps","formReducer","guest"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport styles from './style/MyLoyalty.style'\nimport stylesTabPanel from '../style/TabPanel.style'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport { LinearProgress, makeStyles } from '@material-ui/core'\nimport { connect } from 'react-redux'\nimport NumberFormat from 'react-number-format'\nimport useTranslation from 'lib/translations/hooks/useTranslation'\nimport { withStyles } from '@material-ui/core/styles'\nimport SeeAdvantages from '../LoyaltyClub/SeeAdvantages'\n\nconst useStyles = makeStyles(styles)\nconst useStylesTabPanel = makeStyles(stylesTabPanel)\n\nconst BorderLinearProgress = withStyles({\n    root: {\n        background: '#ccdfe2',\n        height: 8,\n    },\n    bar: {\n        borderRadius: 0,\n        background: '#49777f',\n    },\n})(LinearProgress)\n\nconst MyLoyalty = (props) => {\n    const { state } = props\n    const classes = useStyles()\n    const classesTabPanel = useStylesTabPanel()\n    const { t } = useTranslation()\n    const nextCardTypeCode = state.memCardNext && state.memCardNext.nextcardtypecode\n    const [openSeeAdvantages, setOpenSeeAdvantages] = useState(false)\n\n    return (\n        <React.Fragment>\n            <Grid container>\n                <Grid item xs={12}>\n                    <div className={classes.cardContainerWrapper}>\n                        <Grid container alignItems={'center'} className={classes.cardContainer}>\n                            {state.memCardNext && (\n                                <React.Fragment>\n                                    {nextCardTypeCode ? (\n                                        <React.Fragment>\n                                            <Grid item xs={12} className={classesTabPanel.gridItem}>\n                                                <Grid container justify={'center'} alignItems={'center'}>\n                                                    <Grid item xs={12}>\n                                                        <NumberFormat\n                                                            value={state.memCardNext && state.memCardNext.nextbonusreq}\n                                                            displayType={'text'}\n                                                            decimalScale={2}\n                                                            isNumericString={true}\n                                                            thousandSeparator={true}\n                                                            renderText={(value) => (\n                                                                <Typography className={classes.left} align={'center'}>\n                                                                    {t('str_onlyLeftToCard', {\n                                                                        currentpts: value || 0,\n                                                                        nextcardcode: nextCardTypeCode,\n                                                                    })}\n                                                                </Typography>\n                                                            )}\n                                                        />\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                            <Grid item xs={12} className={classesTabPanel.gridItem}>\n                                                <Grid container>\n                                                    <Grid item xs={12} className={classes.progress}>\n                                                        <BorderLinearProgress\n                                                            variant='determinate'\n                                                            value={(state.memCardNext && (state.memCardNext.totalbonus / state.memCardNext.nextbonustotal) * 100) || 0}\n                                                        />\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </React.Fragment>\n                                    ): null}\n                                    <Grid item xs={12} className={classesTabPanel.gridItem}>\n                                        <Grid container justify={'center'} alignItems={'center'}>\n                                            <Grid item xs={12}>\n                                                <Typography\n                                                    onClick={()=> setOpenSeeAdvantages(true)}\n                                                    className={classes.leftLink} align={'center'}>\n                                                    {t('str_seeTheAdvantages')}\n                                                </Typography>\n                                                {openSeeAdvantages && (<SeeAdvantages open={openSeeAdvantages} onClose={(e)=> setOpenSeeAdvantages(e)}/>)}\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </React.Fragment>\n                            )}\n                        </Grid>\n                    </div>\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        state: state.formReducer.guest,\n    }\n}\n\nexport default connect(mapStateToProps, null)(MyLoyalty)\n"]},"metadata":{},"sourceType":"module"}