{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/guest/account/Offers/OfferCard.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport styles from './style/OfferCard.style';\nimport LoadingSpinner from 'components/LoadingSpinner';\nimport { Grid, Card, CardContent, CardActionArea, CardActions, Button, Typography, Dialog, DialogActions, DialogContent, DialogTitle, Box } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport WebCmsGlobal from 'components/webcms-global';\nimport stylesTabPanel from '../style/TabPanel.style';\nimport CardImage from '@webcms-ui/core/card-image';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nimport { getHyperlinkParser, stdTimeFormat } from 'model/orest/constants';\nimport { useSelector } from 'react-redux';\nimport LoginDialog from '../../../LoginComponent/LoginDialog';\nimport { useSnackbar } from 'notistack';\nimport Link from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Slider from 'react-slick';\nconst useStyles = makeStyles(styles);\nconst useStylesTabPanel = makeStyles(stylesTabPanel);\n\nconst getDescription = (str, useLength = 100, useShort = 100) => {\n  if (str && str.length >= useLength) {\n    return str.substring(0, useShort) + ' ...';\n  }\n\n  return str;\n};\n\nconst useModalStyles = makeStyles(theme => ({\n  dialogTitle: {\n    '& h2': {\n      [theme.breakpoints.only('md')]: {\n        fontSize: 15\n      },\n      [theme.breakpoints.only('sm')]: {\n        fontSize: 14\n      },\n      [theme.breakpoints.only('xs')]: {\n        fontSize: 13\n      }\n    }\n  },\n  button: {\n    textAlign: 'center',\n    '& a': {\n      background: '#fffbfb',\n      padding: 10,\n      textAlign: 'center',\n      color: theme.palette.primary.main,\n      border: `1px solid ${theme.palette.primary.main}`,\n      fontSize: '0.875rem',\n      minWidth: 64,\n      boxSizing: 'border-box',\n      transition: 'background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\n      fontWeight: 500,\n      lineHeight: 1.75,\n      borderRadius: 4,\n      letterSpacing: '0.02857em',\n      textTransform: 'uppercase'\n    }\n  },\n  sliderImgBox: {\n    width: '100%',\n    height: 340,\n    [theme.breakpoints.only('xs')]: {\n      height: 180\n    },\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: '100% 100%'\n  },\n  deleteIcon: {\n    cursor: 'unset'\n  }\n}));\n\nfunction OfferModal({\n  open,\n  handleCloseDialog,\n  dialogData\n}) {\n  var _dialogData$localtitl, _t, _dialogData$localdesc2;\n\n  const {\n    GENERAL_SETTINGS,\n    locale\n  } = useContext(WebCmsGlobal);\n  const {\n    0: isOpenLoginDialog,\n    1: setIsOpenLoginDialog\n  } = useState(false);\n  const {\n    t\n  } = useTranslation();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const classes = useModalStyles();\n  const {\n    0: itemSlideData,\n    1: setItemSlideData\n  } = useState(false);\n  const loginfo = useSelector(state => state.orest.currentUser && state.orest.currentUser.loginfo);\n  let clientParams = {\n    hotelrefno: loginfo && loginfo.hotelrefno || GENERAL_SETTINGS.HOTELREFNO\n  };\n  useEffect(() => {\n    let active = true;\n\n    if (active && open && dialogData !== null && dialogData !== void 0 && dialogData.sliderid) {\n      axios({\n        url: GENERAL_SETTINGS.BASE_URL + 'api/hotel/content/slider',\n        method: 'post',\n        params: Object.assign({\n          sliderid: dialogData.sliderid\n        }, clientParams)\n      }).then(sliderResponse => {\n        if (active) {\n          const sliderData = sliderResponse.data;\n\n          if (sliderData.success && sliderData.data.length > 0) {\n            setItemSlideData(sliderData.data);\n          } else {\n            setItemSlideData(null);\n          }\n        }\n      });\n    }\n\n    return () => {\n      active = false;\n    };\n  }, [open]);\n  const settings = {\n    dots: true,\n    infinite: true,\n    lazyLoad: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    centerMode: true,\n    swipeToSlide: true,\n    touchMove: true\n  };\n  const {\n    0: mouseX,\n    1: setMouseX\n  } = useState(null);\n  const {\n    0: mouseY,\n    1: setMouseY\n  } = useState(null);\n  const {\n    0: openContextMenu,\n    1: setOpenContextMenu\n  } = useState(false);\n  const {\n    0: contextData,\n    1: setContextData\n  } = useState(null);\n\n  const handleRightClick = (e, item) => {\n    setMouseX(e.clientX - 2);\n    setMouseY(e.clientY - 4);\n    setOpenContextMenu(true);\n    setContextData(item);\n    e.preventDefault();\n  };\n\n  const onHandleCopyText = () => {\n    navigator.clipboard.writeText(contextData).then(() => {\n      enqueueSnackbar(t(\"str_copiedToClipboard\").replace('%s', `\"${contextData.substring(0, 50) + '...'}\"`), {\n        variant: 'success',\n        autoHideDuration: 2000\n      });\n    });\n    setOpenContextMenu(false);\n    setContextData(null);\n  };\n\n  const renderButton = cta => {\n    if (cta) {\n      var _link$text;\n\n      const link = getHyperlinkParser(cta);\n\n      if (link === false) {\n        return;\n      }\n\n      let href = link.href,\n          text = (link === null || link === void 0 ? void 0 : (_link$text = link.text) === null || _link$text === void 0 ? void 0 : _link$text.replace(/ /g, '')) || '',\n          host = window.location.host,\n          isExternalLink = false;\n\n      if (href.includes('http') && !href.includes(host)) {\n        isExternalLink = true;\n      }\n\n      if (!isExternalLink) {\n        return __jsx(Link, {\n          id: \"slick-button\",\n          variant: \"outlined\",\n          color: \"primary\",\n          href: href,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 21\n          }\n        }, t(text));\n      }\n\n      return __jsx(Link, {\n        id: \"slick-button\",\n        variant: \"outlined\",\n        color: \"primary\",\n        target: \"_blank\",\n        href: href,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 17\n        }\n      }, t(text));\n    }\n  };\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }, __jsx(LoginDialog, {\n    open: isOpenLoginDialog,\n    onClose: status => setIsOpenLoginDialog(status),\n    locationName: \"guest\",\n    isLoginWrapper: true,\n    disableRegister: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }), __jsx(Dialog, {\n    maxWidth: \"sm\",\n    open: open,\n    onClose: () => handleCloseDialog(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }\n  }, __jsx(DialogTitle, {\n    className: classes.dialogTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  }, dialogData && t((dialogData === null || dialogData === void 0 ? void 0 : (_dialogData$localtitl = dialogData.localtitle) === null || _dialogData$localtitl === void 0 ? void 0 : _dialogData$localtitl.renderText()) || \"\")), __jsx(DialogContent, {\n    dividers: true,\n    style: {\n      overflow: 'overlay',\n      padding: '16px 40px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }\n  }, dialogData === false ? __jsx(Box, {\n    p: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 25\n    }\n  }, __jsx(LoadingSpinner, {\n    size: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 29\n    }\n  })) : dialogData === null ? __jsx(Box, {\n    p: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 25\n    }\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    align: \"center\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 29\n    }\n  }, t('str_noDefaultRecord'))) : __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 25\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 29\n    }\n  }, __jsx(Slider, _extends({}, settings, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 33\n    }\n  }), itemSlideData && itemSlideData.map((item, i) => {\n    return __jsx(Box, {\n      key: i,\n      p: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 45\n      }\n    }, __jsx(\"div\", {\n      className: classes.sliderImgBox,\n      style: {\n        backgroundImage: `url(${GENERAL_SETTINGS.STATIC_URL + item.fileurl})`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 49\n      }\n    }));\n  })), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 33\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 29\n    }\n  }, __jsx(Typography, {\n    onContextMenu: e => {\n      var _dialogData$localdesc;\n\n      return handleRightClick(e, t(dialogData === null || dialogData === void 0 ? void 0 : (_dialogData$localdesc = dialogData.localdesc) === null || _dialogData$localdesc === void 0 ? void 0 : _dialogData$localdesc.renderText()));\n    },\n    variant: \"body2\",\n    align: \"justify\",\n    style: {\n      whiteSpace: 'pre-line'\n    },\n    dangerouslySetInnerHTML: {\n      __html: (_t = t(dialogData === null || dialogData === void 0 ? void 0 : (_dialogData$localdesc2 = dialogData.localdesc) === null || _dialogData$localdesc2 === void 0 ? void 0 : _dialogData$localdesc2.renderText())) === null || _t === void 0 ? void 0 : _t.replace('\\n', '<br/>')\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 33\n    }\n  }), __jsx(Menu, {\n    open: openContextMenu,\n    onClose: () => setOpenContextMenu(false),\n    anchorReference: \"anchorPosition\",\n    anchorPosition: mouseY !== null && mouseX !== null ? {\n      top: mouseY,\n      left: mouseX\n    } : undefined,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 33\n    }\n  }, __jsx(MenuItem, {\n    onClick: () => onHandleCopyText(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 37\n    }\n  }, t(\"str_copy\")))), dialogData && dialogData.cta ? __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 33\n    }\n  }, __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 37\n    }\n  }), renderButton(dialogData.cta), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 37\n    }\n  })) : null)), __jsx(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    onClick: () => handleCloseDialog(),\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 21\n    }\n  }, t('str_close')))));\n}\n\nexport default function OfferCard(props) {\n  var _offer$localdesc;\n\n  const {\n    offer\n  } = props,\n        {\n    t\n  } = useTranslation(),\n        classes = useStyles(),\n        classesTabPanel = useStylesTabPanel(),\n        {\n    GENERAL_SETTINGS\n  } = useContext(WebCmsGlobal),\n        {\n    0: openDialog,\n    1: setOpenDialog\n  } = useState(false),\n        {\n    enqueueSnackbar\n  } = useSnackbar(),\n        {\n    0: isOpenLoginDialog,\n    1: setIsOpenLoginDialog\n  } = useState(false);\n\n  if (!offer) {\n    return __jsx(LoadingSpinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 16\n      }\n    });\n  }\n\n  let cta = false;\n\n  if (offer.cta) {\n    let link = getHyperlinkParser(offer.cta);\n\n    if (link) {\n      cta = {};\n      cta.href = link.href;\n      cta.text = link.text;\n    }\n  }\n\n  const handleOnClick = cta => {\n    return cta.href.includes(window.location.host) ? window.location.href = cta.href : window.open(cta.href);\n  };\n\n  return __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: 4,\n    className: classesTabPanel.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }\n  }, __jsx(LoginDialog, {\n    open: isOpenLoginDialog,\n    onClose: status => setIsOpenLoginDialog(status),\n    locationName: \"guest\",\n    isLoginWrapper: true,\n    disableRegister: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }\n  }), __jsx(Card, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 13\n    }\n  }, __jsx(CardActionArea, {\n    onClick: () => setOpenDialog(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 17\n    }\n  }, __jsx(CardImage, {\n    className: classes.offerImage,\n    src: offer.url !== null ? GENERAL_SETTINGS.STATIC_URL + offer.url : null,\n    alt: t((offer === null || offer === void 0 ? void 0 : (_offer$localdesc = offer.localdesc) === null || _offer$localdesc === void 0 ? void 0 : _offer$localdesc.renderText()) || \"\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 21\n    }\n  }), offer.saleprice && offer.pricecurr ? __jsx(\"span\", {\n    className: classes.priceBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 25\n    }\n  }, __jsx(Typography, {\n    className: classes.price,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 29\n    }\n  }, offer.saleprice, \" \", offer.pricecurr, \" \", __jsx(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 69\n    }\n  }, \"/\", t(offer.qty)))) : null, __jsx(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 21\n    }\n  }, (offer.localtitle || offer.title) && __jsx(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h2\",\n    align: \"center\",\n    className: classes.nameText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 29\n    }\n  }, t((offer === null || offer === void 0 ? void 0 : offer.localtitle.renderText()) || (offer === null || offer === void 0 ? void 0 : offer.title.renderText()))), (offer.localdesc || offer.description) && __jsx(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    align: \"justify\",\n    className: classes.descText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 29\n    }\n  }, getDescription(t((offer === null || offer === void 0 ? void 0 : offer.localdesc.renderText()) || (offer === null || offer === void 0 ? void 0 : offer.description.renderText())))))), __jsx(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 17\n    }\n  }, cta && cta.text && cta.href ? __jsx(Button, {\n    classes: {\n      root: classes.ctaButton\n    },\n    variant: \"outlined\",\n    color: \"primary\",\n    fullWidth: true,\n    onClick: () => handleOnClick(cta),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 25\n    }\n  }, t(cta.text.renderText())) : null)), __jsx(OfferModal, {\n    open: openDialog,\n    handleCloseDialog: () => setOpenDialog(false),\n    dialogData: offer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/guest/account/Offers/OfferCard.js"],"names":["React","useContext","useState","useEffect","axios","styles","LoadingSpinner","Grid","Card","CardContent","CardActionArea","CardActions","Button","Typography","Dialog","DialogActions","DialogContent","DialogTitle","Box","makeStyles","WebCmsGlobal","stylesTabPanel","CardImage","useTranslation","getHyperlinkParser","stdTimeFormat","useSelector","LoginDialog","useSnackbar","Link","Menu","MenuItem","Slider","useStyles","useStylesTabPanel","getDescription","str","useLength","useShort","length","substring","useModalStyles","theme","dialogTitle","breakpoints","only","fontSize","button","textAlign","background","padding","color","palette","primary","main","border","minWidth","boxSizing","transition","fontWeight","lineHeight","borderRadius","letterSpacing","textTransform","sliderImgBox","width","height","backgroundRepeat","backgroundSize","deleteIcon","cursor","OfferModal","open","handleCloseDialog","dialogData","GENERAL_SETTINGS","locale","isOpenLoginDialog","setIsOpenLoginDialog","t","enqueueSnackbar","classes","itemSlideData","setItemSlideData","loginfo","state","orest","currentUser","clientParams","hotelrefno","HOTELREFNO","active","sliderid","url","BASE_URL","method","params","Object","assign","then","sliderResponse","sliderData","data","success","settings","dots","infinite","lazyLoad","speed","slidesToShow","slidesToScroll","centerMode","swipeToSlide","touchMove","mouseX","setMouseX","mouseY","setMouseY","openContextMenu","setOpenContextMenu","contextData","setContextData","handleRightClick","e","item","clientX","clientY","preventDefault","onHandleCopyText","navigator","clipboard","writeText","replace","variant","autoHideDuration","renderButton","cta","link","href","text","host","window","location","isExternalLink","includes","status","localtitle","renderText","overflow","map","i","backgroundImage","STATIC_URL","fileurl","localdesc","whiteSpace","__html","top","left","undefined","OfferCard","props","offer","classesTabPanel","openDialog","setOpenDialog","handleOnClick","gridItem","root","offerImage","saleprice","pricecurr","priceBox","price","qty","title","nameText","description","descText","ctaButton"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react'\nimport axios from 'axios'\nimport styles from './style/OfferCard.style'\nimport LoadingSpinner from 'components/LoadingSpinner'\nimport {\n    Grid,\n    Card,\n    CardContent,\n    CardActionArea,\n    CardActions,\n    Button,\n    Typography,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Box\n} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport WebCmsGlobal from 'components/webcms-global'\nimport stylesTabPanel from '../style/TabPanel.style'\nimport CardImage from '@webcms-ui/core/card-image'\nimport useTranslation from 'lib/translations/hooks/useTranslation'\nimport { getHyperlinkParser, stdTimeFormat } from 'model/orest/constants'\nimport { useSelector } from 'react-redux'\nimport LoginDialog from '../../../LoginComponent/LoginDialog'\nimport { useSnackbar } from 'notistack'\nimport Link from '@material-ui/core/Button'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Slider from 'react-slick'\nconst useStyles = makeStyles(styles)\nconst useStylesTabPanel = makeStyles(stylesTabPanel)\n\nconst getDescription = (str, useLength = 100, useShort = 100) => {\n    if (str && str.length >= useLength) {\n        return str.substring(0, useShort) + ' ...'\n    }\n    return str\n}\n\nconst useModalStyles = makeStyles((theme) => ({\n    dialogTitle: {\n        '& h2': {\n            [theme.breakpoints.only('md')]: {\n                fontSize: 15,\n            },\n            [theme.breakpoints.only('sm')]: {\n                fontSize: 14,\n            },\n            [theme.breakpoints.only('xs')]: {\n                fontSize: 13,\n            },\n        },\n    },\n    button: {\n        textAlign: 'center',\n        '& a': {\n            background: '#fffbfb',\n            padding: 10,\n            textAlign: 'center',\n            color: theme.palette.primary.main,\n            border: `1px solid ${theme.palette.primary.main}`,\n            fontSize: '0.875rem',\n            minWidth: 64,\n            boxSizing: 'border-box',\n            transition: 'background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\n            fontWeight: 500,\n            lineHeight: 1.75,\n            borderRadius: 4,\n            letterSpacing: '0.02857em',\n            textTransform: 'uppercase'\n        },\n    },\n    sliderImgBox: {\n        width: '100%',\n        height: 340,\n        [theme.breakpoints.only('xs')]: {\n            height: 180,\n        },\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: '100% 100%',\n    },\n    deleteIcon: {\n        cursor: 'unset'\n    }\n}))\n\nfunction OfferModal({ open, handleCloseDialog, dialogData }) {\n    const { GENERAL_SETTINGS, locale } = useContext(WebCmsGlobal)\n    const [isOpenLoginDialog, setIsOpenLoginDialog] = useState(false)\n    const { t } = useTranslation()\n    const {enqueueSnackbar} = useSnackbar();\n\n    const classes = useModalStyles()\n\n    const [itemSlideData, setItemSlideData] = useState(false)\n    const loginfo = useSelector((state) => state.orest.currentUser && state.orest.currentUser.loginfo)\n\n    let clientParams = {\n        hotelrefno:  loginfo && loginfo.hotelrefno || GENERAL_SETTINGS.HOTELREFNO\n    }\n\n    useEffect(() => {\n        let active = true\n        if (active && open && dialogData?.sliderid) {\n            axios({\n                url: GENERAL_SETTINGS.BASE_URL + 'api/hotel/content/slider',\n                method: 'post',\n                params:  Object.assign({\n                    sliderid: dialogData.sliderid\n                }, clientParams),\n            }).then((sliderResponse) => {\n                if (active) {\n                    const sliderData = sliderResponse.data\n                    if (sliderData.success && sliderData.data.length > 0) {\n                        setItemSlideData(sliderData.data)\n                    } else {\n                        setItemSlideData(null)\n                    }\n                }\n            })\n        }\n\n        return () => {\n            active = false\n        }\n    }, [open])\n\n    const settings = {\n        dots: true,\n        infinite: true,\n        lazyLoad: true,\n        speed: 500,\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        centerMode: true,\n        swipeToSlide: true,\n        touchMove: true,\n    }\n\n    const [mouseX, setMouseX] = useState(null)\n    const [mouseY, setMouseY] = useState(null)\n    const [openContextMenu, setOpenContextMenu] = useState(false)\n    const [contextData, setContextData] = useState(null)\n\n    const handleRightClick = (e, item) => {\n        setMouseX(e.clientX - 2)\n        setMouseY(e.clientY - 4)\n        setOpenContextMenu(true)\n        setContextData(item)\n        e.preventDefault()\n    }\n\n    const onHandleCopyText = () => {\n        navigator.clipboard.writeText(contextData).then(() => {\n            enqueueSnackbar(t(\"str_copiedToClipboard\").replace('%s', `\"${contextData.substring(0, 50) + '...'}\"`), { variant: 'success', autoHideDuration: 2000 })\n        })\n        setOpenContextMenu(false)\n        setContextData(null)\n    }\n\n    const renderButton = (cta) => {\n        if (cta) {\n            const link = getHyperlinkParser(cta)\n\n            if (link === false) {\n                return\n            }\n\n            let href = link.href\n                , text = link?.text?.replace(/ /g, '') || ''\n                , host = window.location.host\n                , isExternalLink = false\n\n            if (href.includes('http') && !href.includes(host)) {\n                isExternalLink = true\n            }\n\n            if (!isExternalLink) {\n                return (\n                    <Link id='slick-button' variant='outlined' color='primary' href={href}>\n                        {t(text)}\n                    </Link>\n                )\n            }\n\n            return (\n                <Link id='slick-button' variant='outlined' color='primary' target='_blank' href={href}>\n                    {t(text)}\n                </Link>\n            )\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <LoginDialog open={isOpenLoginDialog} onClose={(status) => setIsOpenLoginDialog(status)} locationName='guest' isLoginWrapper disableRegister/>\n            <Dialog maxWidth=\"sm\" open={open} onClose={() => handleCloseDialog()}>\n                <DialogTitle className={classes.dialogTitle}>{dialogData && t(dialogData?.localtitle?.renderText() || \"\")}</DialogTitle>\n                <DialogContent dividers style={{overflow: 'overlay', padding: '16px 40px'}}>\n                    {dialogData === false ? (\n                        <Box p={3}>\n                            <LoadingSpinner size={40} />\n                        </Box>\n                    ) : dialogData === null ? (\n                        <Box p={3}>\n                            <Typography variant=\"h6\" align=\"center\" gutterBottom>\n                                {t('str_noDefaultRecord')}\n                            </Typography>\n                        </Box>\n                    ) : (\n                        <Grid container spacing={1}>\n                            <Grid item xs={12}>\n                                <Slider {...settings}>\n                                    {itemSlideData && itemSlideData.map((item, i) => {\n                                        return (\n                                            <Box key={i} p={1}>\n                                                <div className={classes.sliderImgBox} style={{ backgroundImage: `url(${GENERAL_SETTINGS.STATIC_URL + item.fileurl})` }} />\n                                            </Box>\n                                        )\n                                    })}\n                                </Slider>\n                                <br />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Typography onContextMenu={(e)=> handleRightClick(e, t(dialogData?.localdesc?.renderText()))} variant=\"body2\" align=\"justify\" style={{whiteSpace: 'pre-line'}} dangerouslySetInnerHTML={{ __html: t(dialogData?.localdesc?.renderText())?.replace('\\n', '<br/>')}} />\n                                <Menu\n                                    open={openContextMenu}\n                                    onClose={() => setOpenContextMenu(false)}\n                                    anchorReference=\"anchorPosition\"\n                                    anchorPosition={mouseY !== null && mouseX !== null ? { top: mouseY, left: mouseX } : undefined}\n                                >\n                                    <MenuItem onClick={()=> onHandleCopyText()}>{t(\"str_copy\")}</MenuItem>\n                                </Menu>\n                            </Grid>\n                            {dialogData && dialogData.cta ? (\n                                <Grid item xs={12}>\n                                    <br/>\n                                      {renderButton(dialogData.cta)}\n                                    <br/>\n                                </Grid>\n                            ): null}\n                        </Grid>\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => handleCloseDialog()} color=\"primary\">\n                        {t('str_close')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </React.Fragment>\n    )\n}\n\nexport default function OfferCard(props) {\n    const { offer } = props\n        , { t } = useTranslation()\n        , classes = useStyles()\n        , classesTabPanel = useStylesTabPanel()\n        , { GENERAL_SETTINGS } = useContext(WebCmsGlobal)\n        , [openDialog, setOpenDialog] = useState(false)\n        , { enqueueSnackbar } = useSnackbar()\n        , [isOpenLoginDialog, setIsOpenLoginDialog] = useState(false)\n\n    if (!offer) {\n        return <LoadingSpinner />\n    }\n\n    let cta = false\n    if (offer.cta) {\n        let link = getHyperlinkParser(offer.cta)\n        if (link) {\n            cta = {}\n            cta.href = link.href\n            cta.text = link.text\n        }\n    }\n\n    const handleOnClick = (cta) => {\n        return cta.href.includes(window.location.host) ? window.location.href = cta.href : window.open(cta.href)\n    }\n\n    return (\n        <Grid item xs={12} sm={6} md={4} className={classesTabPanel.gridItem}>\n            <LoginDialog open={isOpenLoginDialog} onClose={(status) => setIsOpenLoginDialog(status)} locationName='guest' isLoginWrapper disableRegister/>\n            <Card className={classes.root}>\n                <CardActionArea onClick={() => setOpenDialog(true)}>\n                    <CardImage\n                        className={classes.offerImage}\n                        src={offer.url !== null ? GENERAL_SETTINGS.STATIC_URL + offer.url : null}\n                        alt={t(offer?.localdesc?.renderText() || \"\")}\n                    />\n                    {(offer.saleprice && offer.pricecurr) ? (\n                        <span className={classes.priceBox}>\n                            <Typography className={classes.price}>\n                                {offer.saleprice} {offer.pricecurr} <small>/{t(offer.qty)}</small>\n                            </Typography>\n                        </span>\n                    ): null}\n                    <CardContent>\n                        {(offer.localtitle || offer.title) && (\n                            <Typography gutterBottom variant='h5' component='h2' align='center' className={classes.nameText}>\n                                {t(offer?.localtitle.renderText() || offer?.title.renderText())}\n                            </Typography>\n                        )}\n                        {(offer.localdesc || offer.description) && (\n                            <Typography variant='body2' color='textSecondary' component='p' align='justify' className={classes.descText}>\n                                {getDescription(t(offer?.localdesc.renderText() || offer?.description.renderText()))}\n                            </Typography>\n                        )}\n                    </CardContent>\n                </CardActionArea>\n                <CardActions>\n                    {(cta && cta.text && cta.href) ? (\n                        <Button classes={{ root: classes.ctaButton }} variant='outlined' color='primary' fullWidth onClick={() => handleOnClick(cta)}>\n                            {t(cta.text.renderText())}\n                        </Button>\n                    ): null}\n                </CardActions>\n            </Card>\n            <OfferModal open={openDialog} handleCloseDialog={() => setOpenDialog(false)} dialogData={offer}/>\n        </Grid>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}