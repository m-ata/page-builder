{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/layout/components/AccountBanner.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useContext, useEffect, useState, useRef } from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport { updateState } from 'state/actions';\nimport styles from './style/AccountBanner.style';\nimport Typography from '@material-ui/core/Typography';\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport { DropzoneDialog } from 'material-ui-dropzone';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MuiExpansionPanel from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Delete, ViewList, UseOrest, Upload } from '@webcms/orest';\nimport { isErrorMsg, OREST_ENDPOINT, REQUEST_METHOD_CONST, useOrestQuery } from 'model/orest/constants';\nimport WebCmsGlobal from 'components/webcms-global';\nimport useNotifications from 'model/notification/useNotifications';\nimport NumberFormat from 'react-number-format';\nimport { useOrestAction } from 'model/orest';\nimport { withStyles } from '@material-ui/core/styles';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nimport * as global from '@webcms-globals';\nimport Container from '@material-ui/core/Container';\nimport MyLoyalty from 'components/guest/account/MyProfile/MyLoyalty';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Box from '@material-ui/core/Box';\nimport LoadingSpinner from 'components/LoadingSpinner';\nimport { useSnackbar } from 'notistack';\nconst useStyles = makeStyles(styles);\nconst Accordion = withStyles(theme => ({\n  root: {\n    background: `transparent radial-gradient(closest-side at 50% 42%, ${theme.palette.secondary.light} 0%, ${theme.palette.secondary.light} 49%, ${theme.palette.secondary.dark} 200%) 0% 0% no-repeat padding-box`,\n    '&$expanded': {\n      margin: 0\n    }\n  },\n  expanded: {\n    margin: 0\n  }\n}))(MuiExpansionPanel);\nconst useStylesAvatarCircularProgress = makeStyles(theme => ({\n  root: {\n    position: 'relative',\n    zIndex: 3,\n    marginTop: 5,\n    '&:hover': {\n      zIndex: 0\n    }\n  },\n  bottom: {\n    color: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700]\n  },\n  top: {\n    color: '#1a90ff',\n    position: 'absolute',\n    left: 0,\n    animation: 'none'\n  },\n  circle: {\n    strokeLinecap: 'round'\n  }\n}));\n\nfunction AvatarCircularProgress(props) {\n  const classes = useStylesAvatarCircularProgress();\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, __jsx(CircularProgress, _extends({\n    variant: \"determinate\",\n    className: classes.bottom,\n    size: 160,\n    thickness: 4\n  }, props, {\n    value: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  })), __jsx(CircularProgress, _extends({\n    variant: \"determinate\",\n    className: classes.top,\n    classes: {\n      circle: classes.circle\n    },\n    size: 160,\n    thickness: 4\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  })));\n}\n\nconst AccountBanner = props => {\n  const classes = useStyles();\n  const {\n    updateState,\n    state,\n    isKiosk\n  } = props;\n  const {\n    GENERAL_SETTINGS\n  } = useContext(WebCmsGlobal);\n  const {\n    t\n  } = useTranslation();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const txtFileCode = \"0000505\";\n  const useStyleAvatar = makeStyles(theme => ({\n    root: {\n      width: 160,\n      height: 160,\n      '&:hover': {\n        zIndex: 3\n      },\n      '&:hover:before': {\n        content: `\"${t('str_clickToChange')}\"`,\n        background: '#242424ab',\n        color: '#ffffff',\n        width: '100%',\n        height: '100%',\n        position: 'absolute',\n        fontSize: '12px',\n        textAlign: 'center',\n        paddingTop: '75px',\n        cursor: 'pointer'\n      }\n    },\n    img: {\n      padding: 12,\n      borderRadius: 85\n    }\n  }));\n  const classesAvatar = useStyleAvatar(); //redux\n\n  const {\n    showMessage,\n    showError\n  } = useNotifications();\n  const {\n    setOrestState\n  } = useOrestAction();\n  const token = useSelector(state => {\n    var _state$orest, _state$orest$currentU, _state$orest$currentU2;\n\n    return (state === null || state === void 0 ? void 0 : (_state$orest = state.orest) === null || _state$orest === void 0 ? void 0 : (_state$orest$currentU = _state$orest.currentUser) === null || _state$orest$currentU === void 0 ? void 0 : (_state$orest$currentU2 = _state$orest$currentU.auth) === null || _state$orest$currentU2 === void 0 ? void 0 : _state$orest$currentU2.access_token) || false;\n  });\n  const clientBase = useSelector(state => state.orest.state && state.orest.state.client);\n  const infoLogin = useSelector(state => state.orest.currentUser && state.orest.currentUser.loginfo); //state\n\n  const {\n    0: isExpended,\n    1: setIsExpended\n  } = useState(true);\n  const {\n    0: isUpdateLoyaltyPoints,\n    1: setIsUpdateLoyaltyPoints\n  } = useState(false);\n  const {\n    0: bonusTransIsLoading,\n    1: setBonusTransIsLoading\n  } = useState(false);\n  const {\n    0: memcardIsLoading,\n    1: setMemcardTransIsLoading\n  } = useState(false);\n  const {\n    0: isClientLoyaltyCardLoading,\n    1: setIsClientLoyaltyCardLoading\n  } = useState(false);\n  useEffect(() => {\n    let active = true;\n\n    const updateLoyaltyData = async active => {\n      await beforeUpdateLoyaltyData(active);\n    };\n\n    if (active) {\n      if (!clientBase && token && infoLogin !== null && infoLogin !== void 0 && infoLogin.accgid) {\n        UseOrest({\n          apiUrl: GENERAL_SETTINGS.OREST_URL,\n          endpoint: 'client/view/get',\n          token,\n          params: {\n            gid: infoLogin.accgid,\n            allhotels: true\n          }\n        }).then(clientGetResponse => {\n          var _clientGetResponse$da;\n\n          if (clientGetResponse.status === 200 && clientGetResponse !== null && clientGetResponse !== void 0 && (_clientGetResponse$da = clientGetResponse.data) !== null && _clientGetResponse$da !== void 0 && _clientGetResponse$da.data) {\n            const clientGetResponseData = clientGetResponse.data.data;\n            setOrestState(['client'], clientGetResponseData);\n          }\n        });\n      }\n\n      if (clientBase && clientBase !== null && clientBase !== void 0 && clientBase.id) {\n        updateState('guest', 'clientReservIsLoading', true);\n        UseOrest({\n          apiUrl: GENERAL_SETTINGS.OREST_URL,\n          endpoint: 'client/reservno',\n          token,\n          method: REQUEST_METHOD_CONST.GET,\n          params: {\n            clientid: clientBase.id,\n            isgapp: true\n          }\n        }).then(clientReservnoResponse => {\n          if (active) {\n            if (clientReservnoResponse.status === 200 && clientReservnoResponse.data.count > 0) {\n              updateState('guest', 'changeHotelRefno', clientReservnoResponse.data.data.hotelrefno);\n              updateState('guest', 'changeHotelName', clientReservnoResponse.data.data.hotelname);\n              updateState('guest', 'clientReservation', clientReservnoResponse.data.data);\n              updateState('guest', 'totalPax', clientReservnoResponse.data.data.totalpax || 1);\n              updateState('guest', 'totalChd', clientReservnoResponse.data.data.totalchd || 0);\n              updateState('guest', 'clientReservIsLoading', false);\n            } else {\n              updateState('guest', 'clientReservation', null);\n              updateState('guest', 'clientReservIsLoading', false);\n            }\n          } else {\n            updateState('guest', 'clientReservIsLoading', false);\n          }\n        }).catch(() => {\n          updateState('guest', 'clientReservation', null);\n          updateState('guest', 'clientReservIsLoading', false);\n        });\n\n        if (!state.isSelectGift && clientBase && clientBase !== null && clientBase !== void 0 && clientBase.id && !bonusTransIsLoading && !memcardIsLoading) {\n          updateLoyaltyData(active);\n        }\n      }\n    }\n\n    return () => {\n      setIsUpdateLoyaltyPoints(false);\n      setMemcardTransIsLoading(false);\n      setIsClientLoyaltyCardLoading(false);\n      active = false;\n    };\n  }, [clientBase]);\n  useEffect(() => {\n    let active = true;\n\n    if (active && !state.isSelectGift && !bonusTransIsLoading && !memcardIsLoading) {\n      const updateLoyaltyData = async active => {\n        await beforeUpdateLoyaltyData(active);\n      };\n\n      updateLoyaltyData(active);\n    }\n\n    return () => {\n      setIsUpdateLoyaltyPoints(false);\n      setMemcardTransIsLoading(false);\n      setIsClientLoyaltyCardLoading(false);\n      active = false;\n    };\n  }, [state.isSelectGift]);\n  const accountBannerRef = useRef(null);\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll, {\n      passive: true\n    });\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  const handleScroll = () => {\n    const currentOffsetTop = accountBannerRef.current && accountBannerRef.current.getAttribute('lastOffsetTop') || accountBannerRef && accountBannerRef.current && accountBannerRef.current.offsetTop || false;\n\n    if (currentOffsetTop && window.pageYOffset > currentOffsetTop) {\n      if (accountBannerRef.current && !accountBannerRef.current.getAttribute('lastOffsetTop')) {\n        accountBannerRef.current.setAttribute('lastOffsetTop', accountBannerRef.current.offsetTop);\n      }\n\n      setIsExpended(false);\n      accountBannerRef.current.setAttribute('style', `position: fixed; top: 60px; z-index:3; width: 100%;`);\n    } else {\n      if (accountBannerRef.current) {\n        accountBannerRef.current.removeAttribute('lastOffsetTop');\n        accountBannerRef.current.removeAttribute('style');\n      }\n    }\n  };\n\n  const beforeUpdateLoyaltyData = async active => {\n    if (!isUpdateLoyaltyPoints && clientBase && clientBase !== null && clientBase !== void 0 && clientBase.id) {\n      setIsClientLoyaltyCardLoading(true);\n      setIsUpdateLoyaltyPoints(true);\n      setBonusTransIsLoading(true);\n      await UseOrest({\n        apiUrl: GENERAL_SETTINGS.OREST_URL,\n        endpoint: OREST_ENDPOINT.BONUSTRANS + '/' + OREST_ENDPOINT.STAT + '/' + OREST_ENDPOINT.ACC,\n        token,\n        method: REQUEST_METHOD_CONST.GET,\n        params: {\n          limit: 1,\n          accid: clientBase.id\n        }\n      }).then(r => {\n        if (active) {\n          if (r.status === 200) {\n            updateState('guest', 'bonusTransPoints', r.data.data[0]);\n            setIsUpdateLoyaltyPoints(false);\n            setBonusTransIsLoading(false);\n          } else {\n            const retErr = isErrorMsg(r);\n            setIsUpdateLoyaltyPoints(false);\n            enqueueSnackbar(t(retErr.errorMsg), {\n              variant: 'error'\n            });\n            showError(retErr.errorMsg);\n            setBonusTransIsLoading(false);\n          }\n        }\n      });\n\n      if (clientBase && clientBase !== null && clientBase !== void 0 && clientBase.id) {\n        setMemcardTransIsLoading(true);\n        await UseOrest({\n          apiUrl: GENERAL_SETTINGS.OREST_URL,\n          endpoint: OREST_ENDPOINT.MEMCARD + '/' + OREST_ENDPOINT.NEXT + '/' + OREST_ENDPOINT.LIST,\n          token,\n          method: REQUEST_METHOD_CONST.GET,\n          params: {\n            accid: clientBase.id\n          }\n        }).then(r => {\n          if (active) {\n            if (r.status === 200) {\n              updateState('guest', 'memCardNext', r.data.data[0]);\n\n              if (r.data.data[0] && state.clientLoyaltyCard === false) {\n                UseOrest({\n                  apiUrl: GENERAL_SETTINGS.OREST_URL,\n                  endpoint: OREST_ENDPOINT.RAFILE + '/' + OREST_ENDPOINT.LIST,\n                  token,\n                  params: {\n                    query: `code::${r.data.data[0].cardtypecode},filetype:${txtFileCode}`,\n                    limit: 1,\n                    allhotels: true\n                  }\n                }).then(rafileResponse => {\n                  if (rafileResponse.status === 200 && rafileResponse.data.count > 0) {\n                    updateState('guest', 'clientLoyaltyCard', rafileResponse.data.data[0].filedata);\n                    setIsUpdateLoyaltyPoints(false);\n                    setMemcardTransIsLoading(false);\n                    setIsClientLoyaltyCardLoading(false);\n                  } else {\n                    setIsUpdateLoyaltyPoints(false);\n                    setMemcardTransIsLoading(false);\n                    setIsClientLoyaltyCardLoading(false);\n                  }\n                }).catch(() => {\n                  setIsUpdateLoyaltyPoints(false);\n                  setMemcardTransIsLoading(false);\n                  setIsClientLoyaltyCardLoading(false);\n                });\n              } else {\n                setIsUpdateLoyaltyPoints(false);\n                setMemcardTransIsLoading(false);\n                setIsClientLoyaltyCardLoading(false);\n              }\n            } else {\n              const retErr = isErrorMsg(r);\n              setIsUpdateLoyaltyPoints(false);\n              setMemcardTransIsLoading(false);\n              setIsClientLoyaltyCardLoading(false);\n              enqueueSnackbar(t(retErr.errorMsg), {\n                variant: 'error'\n              });\n            }\n          }\n        });\n      }\n    }\n  };\n\n  const handleChange = (event, isExpanded) => {\n    setIsExpended(isExpanded);\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\"\n    });\n  };\n\n  const useStyleLoyaltyCard = makeStyles(() => ({\n    root: {\n      background: '#e4e4e4',\n      borderRadius: 15,\n      backgroundSize: 'cover',\n      backgroundRepeat: 'no-repeat',\n      maxWidth: '374.66px',\n      margin: '0 auto'\n    },\n    image: {\n      backgroundSize: '100% 100%'\n    }\n  }));\n  const classesLoyaltyCard = useStyleLoyaltyCard();\n  const {\n    0: profilePhotoUpload,\n    1: setProfilePhotoUpload\n  } = useState(false);\n\n  const handleProfilePhotoUpload = file => {\n    const uploadPhoto = () => {\n      Upload({\n        apiUrl: GENERAL_SETTINGS.OREST_URL,\n        token,\n        params: {\n          masterid: clientBase.mid,\n          code: 'PHOTO',\n          hotelrefno: GENERAL_SETTINGS.HOTELREFNO\n        },\n        files: file\n      }).then(r => {\n        if (r.status === 200) {\n          let newFile = file[0];\n          let url = URL.createObjectURL(newFile);\n          updateState('guest', 'clientProfilePhoto', url);\n          setProfilePhotoUpload(false);\n          showMessage(t('str_updateIsSuccessfullyDone'));\n        } else {\n          showMessage(t('str_unexpectedProblem'));\n          setProfilePhotoUpload(false);\n        }\n      });\n    };\n\n    ViewList({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.RAFILE,\n      token: token,\n      params: {\n        query: useOrestQuery({\n          masterid: clientBase.mid,\n          code: 'PHOTO'\n        }),\n        hotelrefno: GENERAL_SETTINGS.HOTELREFNO,\n        allhotels: true\n      }\n    }).then(r => {\n      if (r.status === 200 && r.data.count > 0) {\n        Delete({\n          apiUrl: GENERAL_SETTINGS.OREST_URL,\n          endpoint: OREST_ENDPOINT.RAFILE,\n          token,\n          gid: r.data.data[0].gid,\n          params: {\n            hotelrefno: GENERAL_SETTINGS.HOTELREFNO\n          }\n        }).then(res => {\n          if (res.status === 200) {\n            uploadPhoto();\n          } else {\n            enqueueSnackbar(t('str_unexpectedProblem'), {\n              variant: 'error'\n            });\n          }\n        });\n      } else {\n        uploadPhoto();\n      }\n    });\n  };\n\n  const cardPoints = state.memCardNext && Math.abs((state.memCardNext.nextbonustotal - state.memCardNext.totalbonus) / state.memCardNext.totalbonus * 100);\n\n  if (isKiosk) {\n    return null;\n  }\n\n  return __jsx(Accordion, {\n    expanded: isExpended,\n    onChange: handleChange,\n    ref: accountBannerRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 9\n    }\n  }, __jsx(AccordionSummary, {\n    expandIcon: __jsx(ExpandMoreIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 43\n      }\n    }),\n    \"aria-controls\": \"panel1c-content\",\n    id: \"panel1c-header\",\n    classes: {\n      root: classes.rootCls,\n      content: classes.contentCls\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 13\n    }\n  }, !isExpended && __jsx(Grid, {\n    container: true,\n    justify: 'center',\n    alignItems: 'center',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 21\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 25\n    }\n  }, __jsx(Typography, {\n    display: 'block',\n    align: 'center',\n    className: classes.memberFullName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 29\n    }\n  }, clientBase && global.helper.capitalizeWord(clientBase.firstname.toLowerCase()) + ' ' + clientBase.lastname.toUpperCase())))), __jsx(AccordionDetails, {\n    className: classes.details,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 13\n    }\n  }, __jsx(Container, {\n    maxWidth: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    container: true,\n    justify: 'center',\n    alignItems: 'center',\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 21\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 25\n    }\n  }, __jsx(Grid, {\n    container: true,\n    justify: 'center',\n    alignItems: 'center',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 29\n    }\n  }, __jsx(Grid, {\n    item: true,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 33\n    }\n  }, __jsx(Box, {\n    position: \"relative\",\n    display: \"inline-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 37\n    }\n  }, __jsx(AvatarCircularProgress, {\n    value: cardPoints,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 41\n    }\n  }), __jsx(Box, {\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n    position: \"absolute\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 41\n    }\n  }, __jsx(Avatar, {\n    src: state.clientProfilePhoto ? state.clientProfilePhoto : '',\n    classes: classesAvatar,\n    onClick: () => setProfilePhotoUpload(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 45\n    }\n  }))), __jsx(DropzoneDialog, {\n    open: profilePhotoUpload,\n    onSave: handleProfilePhotoUpload,\n    acceptedFiles: ['image/jpeg', 'image/png'],\n    showPreviews: true,\n    maxFileSize: 5000000,\n    filesLimit: 1,\n    onClose: () => setProfilePhotoUpload(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 37\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 33\n    }\n  }, __jsx(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 37\n    }\n  }, clientBase && clientBase.cardtypecode && __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 41\n    }\n  }, __jsx(Typography, {\n    className: classes.memberType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 45\n    }\n  }, (clientBase.cardtypecode + ' ' + t('str_member')).toUpperCase())), __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 41\n    }\n  }, __jsx(Typography, {\n    className: classes.memberFullName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 45\n    }\n  }, clientBase && (clientBase === null || clientBase === void 0 ? void 0 : clientBase.firstname) && (clientBase === null || clientBase === void 0 ? void 0 : clientBase.lastname) && global.helper.capitalizeWord(clientBase.firstname.toLowerCase()) + ' ' + clientBase.lastname.toUpperCase())))))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 25\n    }\n  }, __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 29\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 33\n    }\n  }, isClientLoyaltyCardLoading ? __jsx(LoadingSpinner, {\n    size: 30,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 41\n    }\n  }) : state !== null && state !== void 0 && state.clientLoyaltyCard ? clientBase !== null && clientBase !== void 0 && clientBase.id ? __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: state.clientLoyaltyCard && Buffer.from(state.clientLoyaltyCard, 'base64').toString('utf-8').replaceAll('{fullname}', clientBase && clientBase.firstname + ' ' + clientBase.lastname).replaceAll('{point}', new Intl.NumberFormat('en-IN', {\n        maximumSignificantDigits: 3\n      }).format(state.bonusTransPoints && state.bonusTransPoints.bonusleft || '0')).replaceAll('{pts}', 'pts').replaceAll('{cardno}', clientBase && clientBase.id).replaceAll('{email}', clientBase && clientBase.email).replaceAll('{str_bonusExpired}', t('str_bonusExpired')).replaceAll('{bonusexpired}', new Intl.NumberFormat('en-IN', {\n        maximumSignificantDigits: 3\n      }).format(state.bonusTransPoints && state.bonusTransPoints.bonusexpired || '0')).replaceAll('{str_bonusGained}', t('str_bonusGained')).replaceAll('{bonusgained}', new Intl.NumberFormat('en-IN', {\n        maximumSignificantDigits: 3\n      }).format(state.bonusTransPoints && state.bonusTransPoints.bonusgained || '0')).replaceAll('{str_bonusLeft}', t('str_bonusLeft')).replaceAll('{bonusleft}', new Intl.NumberFormat('en-IN', {\n        maximumSignificantDigits: 3\n      }).format(state.bonusTransPoints && state.bonusTransPoints.bonusleft || '0')).replaceAll('{str_bonusUsed}', t('str_bonusUsed')).replaceAll('{bonusused}', new Intl.NumberFormat('en-IN', {\n        maximumSignificantDigits: 3\n      }).format(state.bonusTransPoints && state.bonusTransPoints.bonusused || '0')).replaceAll('{str_bonusLeftHc}', t('str_bonusLeftHc')).replaceAll('{bonuslefthc}', new Intl.NumberFormat('en-IN', {\n        maximumSignificantDigits: 3\n      }).format(state.bonusTransPoints && state.bonusTransPoints.bonuslefthc || '0'))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 45\n    }\n  }) : null : clientBase !== null && clientBase !== void 0 && clientBase.id ? __jsx(\"div\", {\n    className: classesLoyaltyCard.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 41\n    }\n  }, __jsx(Grid, {\n    container: true,\n    alignItems: 'center',\n    className: classes.cardContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 41\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 45\n    }\n  }, __jsx(Typography, {\n    className: classes.cardBonus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 49\n    }\n  }, __jsx(NumberFormat, {\n    value: state.bonusTransPoints && state.bonusTransPoints.bonusexpired || '0',\n    displayType: 'text',\n    decimalScale: 2,\n    isNumericString: true,\n    thousandSeparator: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 53\n    }\n  }), __jsx(\"span\", {\n    className: classes.cardPts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 53\n    }\n  }, 'pts'))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 45\n    }\n  }, __jsx(Grid, {\n    container: true,\n    justify: 'space-between',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 49\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 53\n    }\n  }, __jsx(Typography, {\n    noWrap: true,\n    className: classes.cardClientName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 57\n    }\n  }, clientBase && clientBase.firstname, \" \", clientBase && clientBase.lastname)), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 53\n    }\n  }, __jsx(Typography, {\n    noWrap: true,\n    className: classes.cardClientId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 57\n    }\n  }, clientBase && clientBase.id)))))) : null))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 25\n    }\n  }, __jsx(MyLoyalty, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 29\n    }\n  }))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    state: state.formReducer.guest\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  updateState: (stateType, stateName, value) => dispatch(updateState(stateType, stateName, value))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountBanner);","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/layout/components/AccountBanner.js"],"names":["React","useContext","useEffect","useState","useRef","connect","useSelector","updateState","styles","Typography","ListItem","List","Grid","Avatar","DropzoneDialog","makeStyles","MuiExpansionPanel","AccordionSummary","AccordionDetails","ExpandMoreIcon","Delete","ViewList","UseOrest","Upload","isErrorMsg","OREST_ENDPOINT","REQUEST_METHOD_CONST","useOrestQuery","WebCmsGlobal","useNotifications","NumberFormat","useOrestAction","withStyles","useTranslation","global","Container","MyLoyalty","CircularProgress","Box","LoadingSpinner","useSnackbar","useStyles","Accordion","theme","root","background","palette","secondary","light","dark","margin","expanded","useStylesAvatarCircularProgress","position","zIndex","marginTop","bottom","color","grey","type","top","left","animation","circle","strokeLinecap","AvatarCircularProgress","props","classes","AccountBanner","state","isKiosk","GENERAL_SETTINGS","t","enqueueSnackbar","txtFileCode","useStyleAvatar","width","height","content","fontSize","textAlign","paddingTop","cursor","img","padding","borderRadius","classesAvatar","showMessage","showError","setOrestState","token","orest","currentUser","auth","access_token","clientBase","client","infoLogin","loginfo","isExpended","setIsExpended","isUpdateLoyaltyPoints","setIsUpdateLoyaltyPoints","bonusTransIsLoading","setBonusTransIsLoading","memcardIsLoading","setMemcardTransIsLoading","isClientLoyaltyCardLoading","setIsClientLoyaltyCardLoading","active","updateLoyaltyData","beforeUpdateLoyaltyData","accgid","apiUrl","OREST_URL","endpoint","params","gid","allhotels","then","clientGetResponse","status","data","clientGetResponseData","id","method","GET","clientid","isgapp","clientReservnoResponse","count","hotelrefno","hotelname","totalpax","totalchd","catch","isSelectGift","accountBannerRef","window","addEventListener","handleScroll","passive","removeEventListener","currentOffsetTop","current","getAttribute","offsetTop","pageYOffset","setAttribute","removeAttribute","BONUSTRANS","STAT","ACC","limit","accid","r","retErr","errorMsg","variant","MEMCARD","NEXT","LIST","clientLoyaltyCard","RAFILE","query","cardtypecode","rafileResponse","filedata","handleChange","event","isExpanded","scrollTo","behavior","useStyleLoyaltyCard","backgroundSize","backgroundRepeat","maxWidth","image","classesLoyaltyCard","profilePhotoUpload","setProfilePhotoUpload","handleProfilePhotoUpload","file","uploadPhoto","masterid","mid","code","HOTELREFNO","files","newFile","url","URL","createObjectURL","res","cardPoints","memCardNext","Math","abs","nextbonustotal","totalbonus","rootCls","contentCls","memberFullName","helper","capitalizeWord","firstname","toLowerCase","lastname","toUpperCase","details","clientProfilePhoto","memberType","__html","Buffer","from","toString","replaceAll","Intl","maximumSignificantDigits","format","bonusTransPoints","bonusleft","email","bonusexpired","bonusgained","bonusused","bonuslefthc","cardContainer","cardBonus","cardPts","cardClientName","cardClientId","mapStateToProps","formReducer","guest","mapDispatchToProps","dispatch","stateType","stateName","value"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState, useRef } from 'react'\nimport { connect, useSelector } from 'react-redux'\nimport { updateState } from 'state/actions'\nimport styles from './style/AccountBanner.style'\nimport Typography from '@material-ui/core/Typography'\nimport ListItem from '@material-ui/core/ListItem'\nimport List from '@material-ui/core/List'\nimport Grid from '@material-ui/core/Grid'\nimport Avatar from '@material-ui/core/Avatar'\nimport { DropzoneDialog } from 'material-ui-dropzone'\nimport { makeStyles } from '@material-ui/core/styles'\nimport MuiExpansionPanel from '@material-ui/core/Accordion'\nimport AccordionSummary from '@material-ui/core/AccordionSummary'\nimport AccordionDetails from '@material-ui/core/AccordionDetails'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport { Delete, ViewList, UseOrest, Upload } from '@webcms/orest'\nimport {\n    isErrorMsg,\n    OREST_ENDPOINT,\n    REQUEST_METHOD_CONST,\n    useOrestQuery,\n} from 'model/orest/constants'\nimport WebCmsGlobal from 'components/webcms-global'\nimport useNotifications from 'model/notification/useNotifications'\nimport NumberFormat from 'react-number-format'\nimport { useOrestAction } from 'model/orest'\nimport { withStyles } from '@material-ui/core/styles'\nimport useTranslation from 'lib/translations/hooks/useTranslation'\nimport * as global from '@webcms-globals'\nimport Container from '@material-ui/core/Container'\nimport MyLoyalty from 'components/guest/account/MyProfile/MyLoyalty'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Box from '@material-ui/core/Box'\nimport LoadingSpinner from 'components/LoadingSpinner'\nimport { useSnackbar } from 'notistack'\n\nconst useStyles = makeStyles(styles)\n\nconst Accordion = withStyles((theme) => ({\n    root: {\n        background: `transparent radial-gradient(closest-side at 50% 42%, ${theme.palette.secondary.light} 0%, ${theme.palette.secondary.light} 49%, ${theme.palette.secondary.dark} 200%) 0% 0% no-repeat padding-box`,\n        '&$expanded': {\n            margin: 0,\n        },\n    },\n    expanded: {\n        margin: 0,\n    },\n}))(MuiExpansionPanel)\n\nconst useStylesAvatarCircularProgress = makeStyles((theme) => ({\n    root: {\n        position: 'relative',\n        zIndex: 3,\n        marginTop: 5,\n        '&:hover': {\n            zIndex: 0,\n        },\n    },\n    bottom: {\n        color: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n    },\n    top: {\n        color: '#1a90ff',\n        position: 'absolute',\n        left: 0,\n        animation: 'none',\n    },\n    circle: {\n        strokeLinecap: 'round',\n    },\n}))\n\nfunction AvatarCircularProgress(props) {\n    const classes = useStylesAvatarCircularProgress()\n\n    return (\n        <div className={classes.root}>\n            <CircularProgress\n                variant=\"determinate\"\n                className={classes.bottom}\n                size={160}\n                thickness={4}\n                {...props}\n                value={100}\n            />\n            <CircularProgress\n                variant=\"determinate\"\n                className={classes.top}\n                classes={{\n                    circle: classes.circle,\n                }}\n                size={160}\n                thickness={4}\n                {...props}\n            />\n        </div>\n    )\n}\n\nconst AccountBanner = (props) => {\n    const classes = useStyles()\n    const { updateState, state, isKiosk } = props\n    const { GENERAL_SETTINGS } = useContext(WebCmsGlobal)\n    const { t } = useTranslation()\n    const { enqueueSnackbar } = useSnackbar()\n    const txtFileCode = \"0000505\"\n\n    const useStyleAvatar = makeStyles((theme) => ({\n        root: {\n            width: 160,\n            height: 160,\n            '&:hover': {\n                zIndex: 3,\n            },\n            '&:hover:before': {\n                content: `\"${t('str_clickToChange')}\"`,\n                background: '#242424ab',\n                color: '#ffffff',\n                width: '100%',\n                height: '100%',\n                position: 'absolute',\n                fontSize: '12px',\n                textAlign: 'center',\n                paddingTop: '75px',\n                cursor: 'pointer',\n            },\n        },\n        img: {\n            padding: 12,\n            borderRadius: 85,\n        },\n    }))\n\n    const classesAvatar = useStyleAvatar()\n\n    //redux\n    const { showMessage, showError } = useNotifications()\n    const { setOrestState } = useOrestAction()\n    const token = useSelector((state) => state?.orest?.currentUser?.auth?.access_token || false)\n    const clientBase = useSelector((state) => state.orest.state && state.orest.state.client)\n    const infoLogin = useSelector((state) => state.orest.currentUser && state.orest.currentUser.loginfo)\n\n    //state\n    const [isExpended, setIsExpended] = useState(true)\n    const [isUpdateLoyaltyPoints, setIsUpdateLoyaltyPoints] = useState(false)\n    const [bonusTransIsLoading, setBonusTransIsLoading] = useState(false)\n    const [memcardIsLoading, setMemcardTransIsLoading] = useState(false)\n    const [isClientLoyaltyCardLoading, setIsClientLoyaltyCardLoading] = useState(false)\n\n    useEffect(() => {\n        let active = true\n\n        const updateLoyaltyData = async (active) => {\n            await beforeUpdateLoyaltyData(active)\n        }\n\n        if (active) {\n            if(!clientBase && token && infoLogin?.accgid){\n                UseOrest({\n                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                    endpoint: 'client/view/get',\n                    token,\n                    params: {\n                        gid: infoLogin.accgid,\n                        allhotels: true\n                    }\n                }).then((clientGetResponse) => {\n                    if (clientGetResponse.status === 200 && clientGetResponse?.data?.data) {\n                        const clientGetResponseData = clientGetResponse.data.data\n                        setOrestState(['client'], clientGetResponseData)\n                    }\n                })\n            }\n\n            if (clientBase && clientBase?.id) {\n                updateState('guest', 'clientReservIsLoading', true)\n                UseOrest({\n                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                    endpoint: 'client/reservno',\n                    token,\n                    method: REQUEST_METHOD_CONST.GET,\n                    params: {\n                        clientid: clientBase.id,\n                        isgapp: true,\n                    },\n                }).then((clientReservnoResponse) => {\n                    if (active) {\n                        if (clientReservnoResponse.status === 200 && clientReservnoResponse.data.count > 0) {\n                            updateState('guest', 'changeHotelRefno', clientReservnoResponse.data.data.hotelrefno)\n                            updateState('guest', 'changeHotelName', clientReservnoResponse.data.data.hotelname)\n                            updateState('guest', 'clientReservation', clientReservnoResponse.data.data)\n                            updateState('guest', 'totalPax', clientReservnoResponse.data.data.totalpax || 1)\n                            updateState('guest', 'totalChd', clientReservnoResponse.data.data.totalchd || 0)\n                            updateState('guest', 'clientReservIsLoading', false)\n                        } else {\n                            updateState('guest', 'clientReservation', null)\n                            updateState('guest', 'clientReservIsLoading', false)\n                        }\n                    } else {\n                        updateState('guest', 'clientReservIsLoading', false)\n                    }\n                }).catch(()=> {\n                    updateState('guest', 'clientReservation', null)\n                    updateState('guest', 'clientReservIsLoading', false)\n                })\n\n                if(!state.isSelectGift && clientBase && clientBase?.id && !bonusTransIsLoading && !memcardIsLoading){\n                    updateLoyaltyData(active)\n                }\n            }\n        }\n\n        return () => {\n            setIsUpdateLoyaltyPoints(false)\n            setMemcardTransIsLoading(false)\n            setIsClientLoyaltyCardLoading(false)\n            active = false\n        }\n\n    }, [clientBase])\n\n    useEffect(() => {\n        let active = true\n        if (active && !state.isSelectGift && !bonusTransIsLoading && !memcardIsLoading) {\n            const updateLoyaltyData = async (active) => {\n                await beforeUpdateLoyaltyData(active)\n            }\n\n            updateLoyaltyData(active)\n        }\n        return () => {\n            setIsUpdateLoyaltyPoints(false)\n            setMemcardTransIsLoading(false)\n            setIsClientLoyaltyCardLoading(false)\n            active = false\n        }\n    }, [state.isSelectGift])\n\n    const accountBannerRef = useRef(null)\n\n    useEffect(() => {\n        window.addEventListener('scroll', handleScroll, { passive: true })\n        return () => {\n            window.removeEventListener('scroll', handleScroll)\n        }\n    }, [])\n\n    const handleScroll = () => {\n        const currentOffsetTop = accountBannerRef.current && accountBannerRef.current.getAttribute('lastOffsetTop') || accountBannerRef && accountBannerRef.current && accountBannerRef.current.offsetTop || false\n        if (currentOffsetTop && window.pageYOffset > currentOffsetTop) {\n            if (accountBannerRef.current && !accountBannerRef.current.getAttribute('lastOffsetTop')) {\n                accountBannerRef.current.setAttribute('lastOffsetTop', accountBannerRef.current.offsetTop)\n            }\n            setIsExpended(false)\n            accountBannerRef.current.setAttribute('style', `position: fixed; top: 60px; z-index:3; width: 100%;`)\n        }else {\n            if(accountBannerRef.current){\n                accountBannerRef.current.removeAttribute('lastOffsetTop')\n                accountBannerRef.current.removeAttribute('style')\n            }\n        }\n    }\n\n    const beforeUpdateLoyaltyData = async (active) => {\n        if(!isUpdateLoyaltyPoints && clientBase && clientBase?.id){\n            setIsClientLoyaltyCardLoading(true)\n            setIsUpdateLoyaltyPoints(true)\n            setBonusTransIsLoading(true)\n            await UseOrest({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: OREST_ENDPOINT.BONUSTRANS + '/' + OREST_ENDPOINT.STAT + '/' + OREST_ENDPOINT.ACC,\n                token,\n                method: REQUEST_METHOD_CONST.GET,\n                params: {\n                    limit: 1,\n                    accid: clientBase.id,\n                },\n            }).then((r) => {\n                if (active) {\n                    if (r.status === 200) {\n                        updateState('guest', 'bonusTransPoints', r.data.data[0])\n                        setIsUpdateLoyaltyPoints(false)\n                        setBonusTransIsLoading(false)\n                    } else {\n                        const retErr = isErrorMsg(r)\n                        setIsUpdateLoyaltyPoints(false)\n                        enqueueSnackbar(t(retErr.errorMsg), { variant: 'error' })\n                        showError(retErr.errorMsg)\n                        setBonusTransIsLoading(false)\n                    }\n                }\n            })\n\n            if(clientBase && clientBase?.id){\n                setMemcardTransIsLoading(true)\n                await UseOrest({\n                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                    endpoint: OREST_ENDPOINT.MEMCARD + '/' + OREST_ENDPOINT.NEXT + '/' + OREST_ENDPOINT.LIST,\n                    token,\n                    method: REQUEST_METHOD_CONST.GET,\n                    params: {\n                        accid: clientBase.id,\n                    },\n                }).then((r) => {\n                    if (active) {\n                        if (r.status === 200) {\n                            updateState('guest', 'memCardNext', r.data.data[0])\n                            if (r.data.data[0] && state.clientLoyaltyCard === false) {\n                                UseOrest({\n                                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                                    endpoint: OREST_ENDPOINT.RAFILE + '/' + OREST_ENDPOINT.LIST,\n                                    token,\n                                    params: {\n                                        query: `code::${r.data.data[0].cardtypecode},filetype:${txtFileCode}`,\n                                        limit: 1,\n                                        allhotels: true,\n                                    },\n                                }).then((rafileResponse) => {\n                                    if (rafileResponse.status === 200 && rafileResponse.data.count > 0) {\n                                        updateState('guest', 'clientLoyaltyCard', rafileResponse.data.data[0].filedata)\n                                        setIsUpdateLoyaltyPoints(false)\n                                        setMemcardTransIsLoading(false)\n                                        setIsClientLoyaltyCardLoading(false)\n                                    } else {\n                                        setIsUpdateLoyaltyPoints(false)\n                                        setMemcardTransIsLoading(false)\n                                        setIsClientLoyaltyCardLoading(false)\n                                    }\n                                }).catch(() => {\n                                    setIsUpdateLoyaltyPoints(false)\n                                    setMemcardTransIsLoading(false)\n                                    setIsClientLoyaltyCardLoading(false)\n                                })\n                            } else {\n                                setIsUpdateLoyaltyPoints(false)\n                                setMemcardTransIsLoading(false)\n                                setIsClientLoyaltyCardLoading(false)\n                            }\n\n                        } else {\n                            const retErr = isErrorMsg(r)\n                            setIsUpdateLoyaltyPoints(false)\n                            setMemcardTransIsLoading(false)\n                            setIsClientLoyaltyCardLoading(false)\n                            enqueueSnackbar(t(retErr.errorMsg), { variant: 'error' })\n                        }\n                    }\n                })\n            }\n        }\n    }\n\n    const handleChange = (event, isExpanded) => {\n        setIsExpended(isExpanded)\n        window.scrollTo({ top: 0, behavior: \"smooth\" })\n    }\n\n    const useStyleLoyaltyCard = makeStyles(() => ({\n        root: {\n            background: '#e4e4e4',\n            borderRadius: 15,\n            backgroundSize: 'cover',\n            backgroundRepeat: 'no-repeat',\n            maxWidth: '374.66px',\n            margin: '0 auto',\n        },\n        image: {\n            backgroundSize: '100% 100%',\n        },\n    }))\n    const classesLoyaltyCard = useStyleLoyaltyCard()\n\n    const [profilePhotoUpload, setProfilePhotoUpload] = useState(false)\n    const handleProfilePhotoUpload = (file) => {\n        const uploadPhoto = () => {\n            Upload({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                token,\n                params: {\n                    masterid: clientBase.mid,\n                    code: 'PHOTO',\n                    hotelrefno: GENERAL_SETTINGS.HOTELREFNO,\n                },\n                files: file,\n            }).then((r) => {\n                if (r.status === 200) {\n                    let newFile = file[0]\n                    let url = URL.createObjectURL(newFile)\n                    updateState('guest', 'clientProfilePhoto', url)\n                    setProfilePhotoUpload(false)\n                    showMessage(t('str_updateIsSuccessfullyDone'))\n                } else {\n                    showMessage(t('str_unexpectedProblem'))\n                    setProfilePhotoUpload(false)\n                }\n            })\n        }\n\n        ViewList({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.RAFILE,\n            token: token,\n            params: {\n                query: useOrestQuery({\n                    masterid: clientBase.mid,\n                    code: 'PHOTO'\n                }),\n                hotelrefno: GENERAL_SETTINGS.HOTELREFNO,\n                allhotels: true\n            },\n        }).then((r) => {\n            if (r.status === 200 && r.data.count > 0) {\n                Delete({\n                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                    endpoint: OREST_ENDPOINT.RAFILE,\n                    token,\n                    gid: r.data.data[0].gid,\n                    params: {\n                        hotelrefno: GENERAL_SETTINGS.HOTELREFNO,\n                    },\n                }).then((res) => {\n                    if (res.status === 200) {\n                        uploadPhoto()\n                    } else {\n                        enqueueSnackbar(t('str_unexpectedProblem'), { variant: 'error' })\n                    }\n                })\n            } else {\n                uploadPhoto()\n            }\n        })\n    }\n\n    const cardPoints = state.memCardNext && Math.abs(((state.memCardNext.nextbonustotal - state.memCardNext.totalbonus) / state.memCardNext.totalbonus) * 100)\n\n    if(isKiosk){\n        return null\n    }\n\n    return (\n        <Accordion expanded={isExpended} onChange={handleChange} ref={accountBannerRef}>\n            <AccordionSummary expandIcon={<ExpandMoreIcon/>} aria-controls=\"panel1c-content\" id=\"panel1c-header\" classes={{ root: classes.rootCls, content: classes.contentCls }}>\n                {!isExpended && (\n                    <Grid container justify={'center'} alignItems={'center'}>\n                        <Grid item xs={12}>\n                            <Typography display={'block'} align={'center'} className={classes.memberFullName}>\n                                {clientBase && (global.helper.capitalizeWord((clientBase.firstname).toLowerCase()) + ' ' + (clientBase.lastname).toUpperCase())}\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                )}\n            </AccordionSummary>\n            <AccordionDetails className={classes.details}>\n                <Container maxWidth=\"lg\">\n                    <Grid container justify={'center'} alignItems={'center'} spacing={3}>\n                        <Grid item xs={12} sm={6} md={4}>\n                            <Grid container justify={'center'} alignItems={'center'}>\n                                <Grid item sm={6}>\n                                    <Box position=\"relative\" display=\"inline-flex\">\n                                        <AvatarCircularProgress value={cardPoints}/>\n                                        <Box\n                                            top={0}\n                                            left={0}\n                                            bottom={0}\n                                            right={0}\n                                            position=\"absolute\"\n                                            display=\"flex\"\n                                            alignItems=\"center\"\n                                            justify=\"center\"\n                                        >\n                                            <Avatar\n                                                src={state.clientProfilePhoto ? state.clientProfilePhoto : ''}\n                                                classes={classesAvatar}\n                                                onClick={() => setProfilePhotoUpload(true)}\n                                            />\n                                        </Box>\n                                    </Box>\n                                    <DropzoneDialog\n                                        open={profilePhotoUpload}\n                                        onSave={handleProfilePhotoUpload}\n                                        acceptedFiles={['image/jpeg', 'image/png']}\n                                        showPreviews={true}\n                                        maxFileSize={5000000}\n                                        filesLimit={1}\n                                        onClose={() => setProfilePhotoUpload(false)}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <List>\n                                        {clientBase && clientBase.cardtypecode &&\n                                        <ListItem>\n                                            <Typography className={classes.memberType}>\n                                                {(clientBase.cardtypecode + ' ' + t('str_member')).toUpperCase()}\n                                            </Typography>\n                                        </ListItem>\n                                        }\n                                        <ListItem>\n                                            <Typography className={classes.memberFullName}>\n                                                {clientBase && clientBase?.firstname && clientBase?.lastname && (global.helper.capitalizeWord((clientBase.firstname).toLowerCase()) + ' ' + (clientBase.lastname).toUpperCase())}\n                                            </Typography>\n                                        </ListItem>\n                                    </List>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                            <Grid container>\n                                <Grid item xs={12}>\n                                    {isClientLoyaltyCardLoading ? (\n                                        <LoadingSpinner size={30}/>\n                                    ) : state?.clientLoyaltyCard ? (\n                                        (clientBase?.id ?\n                                            <div\n                                                dangerouslySetInnerHTML={{\n                                                    __html: state.clientLoyaltyCard && Buffer.from(state.clientLoyaltyCard, 'base64').toString('utf-8')\n                                                        .replaceAll('{fullname}', clientBase && clientBase.firstname + ' ' + clientBase.lastname)\n                                                        .replaceAll('{point}', new Intl.NumberFormat('en-IN', { maximumSignificantDigits: 3 }).format((state.bonusTransPoints && state.bonusTransPoints.bonusleft) || '0'))\n                                                        .replaceAll('{pts}', 'pts')\n                                                        .replaceAll('{cardno}', clientBase && clientBase.id)\n                                                        .replaceAll('{email}', clientBase && clientBase.email)\n                                                        .replaceAll('{str_bonusExpired}', t('str_bonusExpired'))\n                                                        .replaceAll('{bonusexpired}', new Intl.NumberFormat('en-IN', { maximumSignificantDigits: 3 }).format((state.bonusTransPoints && state.bonusTransPoints.bonusexpired) || '0'))\n                                                        .replaceAll('{str_bonusGained}', t('str_bonusGained'))\n                                                        .replaceAll('{bonusgained}', new Intl.NumberFormat('en-IN', { maximumSignificantDigits: 3 }).format((state.bonusTransPoints && state.bonusTransPoints.bonusgained) || '0'))\n                                                        .replaceAll('{str_bonusLeft}', t('str_bonusLeft'))\n                                                        .replaceAll('{bonusleft}', new Intl.NumberFormat('en-IN', { maximumSignificantDigits: 3 }).format((state.bonusTransPoints && state.bonusTransPoints.bonusleft) || '0'))\n                                                        .replaceAll('{str_bonusUsed}', t('str_bonusUsed'))\n                                                        .replaceAll('{bonusused}', new Intl.NumberFormat('en-IN', { maximumSignificantDigits: 3 }).format((state.bonusTransPoints && state.bonusTransPoints.bonusused) || '0'))\n                                                        .replaceAll('{str_bonusLeftHc}', t('str_bonusLeftHc'))\n                                                        .replaceAll('{bonuslefthc}', new Intl.NumberFormat('en-IN', { maximumSignificantDigits: 3 }).format((state.bonusTransPoints && state.bonusTransPoints.bonuslefthc) || '0'))\n                                                }}\n                                            /> : null)\n                                    ) : (clientBase?.id ?\n                                        <div className={classesLoyaltyCard.root}>\n                                        <Grid container alignItems={'center'} className={classes.cardContainer}>\n                                            <Grid item xs={12}>\n                                                <Typography className={classes.cardBonus}>\n                                                    <NumberFormat\n                                                        value={(state.bonusTransPoints && state.bonusTransPoints.bonusexpired) || '0'}\n                                                        displayType={'text'}\n                                                        decimalScale={2}\n                                                        isNumericString={true}\n                                                        thousandSeparator={true}\n                                                    />\n                                                    <span className={classes.cardPts}>{'pts'}</span>\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item xs={12}>\n                                                <Grid container justify={'space-between'}>\n                                                    <Grid item xs={6}>\n                                                        <Typography noWrap className={classes.cardClientName}>\n                                                            {clientBase && clientBase.firstname} {clientBase && clientBase.lastname}\n                                                        </Typography>\n                                                    </Grid>\n                                                    <Grid item xs={6}>\n                                                        <Typography noWrap className={classes.cardClientId}>\n                                                            {clientBase && clientBase.id}\n                                                        </Typography>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </div>: null)}\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                            <MyLoyalty/>\n                        </Grid>\n                    </Grid>\n                </Container>\n            </AccordionDetails>\n        </Accordion>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        state: state.formReducer.guest,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    updateState: (stateType, stateName, value) => dispatch(updateState(stateType, stateName, value)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountBanner)\n"]},"metadata":{},"sourceType":"module"}