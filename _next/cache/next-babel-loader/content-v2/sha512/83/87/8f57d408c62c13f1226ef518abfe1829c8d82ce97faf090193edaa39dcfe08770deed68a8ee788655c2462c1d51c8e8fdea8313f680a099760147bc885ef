{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/guest/public/components/info/event-reservation/confirmation.js\";\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect, useSelector } from 'react-redux';\nimport { setToState, updateState } from 'state/actions';\nimport { Container, Grid, Box, Divider } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport EventReservationCard from 'components/guest/account/Reservations/EventReservationCard';\nimport FrameCheckbox from '@webcms-ui/core/frame-checkbox';\nimport WebCmsGlobal from 'components/webcms-global';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nimport * as global from '@webcms-globals';\nimport getSymbolFromCurrency from 'model/currency-symbol';\nimport { DEFAULT_OREST_TOKEN, OREST_ENDPOINT, REQUEST_METHOD_CONST } from 'model/orest/constants';\nimport { UseOrest } from '@webcms/orest';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n    position: 'relative',\n    overflow: 'auto',\n    maxHeight: 300\n  },\n  listItem: {\n    padding: theme.spacing(1, 0)\n  },\n  total: {\n    fontWeight: 700\n  },\n  title: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nconst Confirmation = props => {\n  var _locPriceData$;\n\n  const classes = useStyles();\n  const {\n    state,\n    event,\n    eventLocData,\n    updateState,\n    isConfirmLoad,\n    setLocPrice,\n    showDetail\n  } = props;\n  const {\n    GENERAL_SETTINGS,\n    locale\n  } = useContext(WebCmsGlobal);\n  const {\n    t\n  } = useTranslation();\n  const loginfo = useSelector(state => state.orest.currentUser && state.orest.currentUser.loginfo);\n  let hotelRefno = loginfo && loginfo.hotelrefno || GENERAL_SETTINGS.HOTELREFNO;\n  const token = useSelector(state => state.orest.currentUser !== null ? state.orest.currentUser.auth.access_token : DEFAULT_OREST_TOKEN);\n  const {\n    0: locPriceData,\n    1: setLocPriceData\n  } = useState(false);\n  const {\n    0: isLocPriceLoading,\n    1: setIsLocPriceLoading\n  } = useState(false);\n  const isPortal = GENERAL_SETTINGS.ISPORTAL;\n  useEffect(() => {\n    let active = true;\n\n    if (active && !isLocPriceLoading) {\n      setIsLocPriceLoading(true);\n      UseOrest({\n        apiUrl: GENERAL_SETTINGS.OREST_URL,\n        endpoint: 'resevent/calc/locprice',\n        method: REQUEST_METHOD_CONST.GET,\n        token: token,\n        params: {\n          locid: eventLocData.locid,\n          clientid: loginfo.accid,\n          totalpax: event.totalpax,\n          listall: true\n        }\n      }).then(locPriceResponse => {\n        if (locPriceResponse.status === 200) {\n          var _locPriceResponse$dat;\n\n          setIsLocPriceLoading(false);\n          setLocPriceData((locPriceResponse === null || locPriceResponse === void 0 ? void 0 : (_locPriceResponse$dat = locPriceResponse.data) === null || _locPriceResponse$dat === void 0 ? void 0 : _locPriceResponse$dat.data) || false);\n          isConfirmLoad(true);\n        } else {\n          var _locPriceResponse$dat2;\n\n          setIsLocPriceLoading(false);\n          setLocPriceData((locPriceResponse === null || locPriceResponse === void 0 ? void 0 : (_locPriceResponse$dat2 = locPriceResponse.data) === null || _locPriceResponse$dat2 === void 0 ? void 0 : _locPriceResponse$dat2.data) || false);\n          isConfirmLoad(true);\n        }\n      }).catch(() => {\n        setIsLocPriceLoading(false);\n        setLocPriceData(null);\n        isConfirmLoad(true);\n      });\n    }\n\n    return () => {\n      active = false;\n    };\n  }, []);\n\n  const handleConfirm = e => {\n    updateState('guest', 'isRestaurantResTermsConfirm', e);\n  };\n\n  const productTotal = productList => {\n    let productTotalPrice = 0,\n        locPriceTotalPrice = 0,\n        curr = '';\n    productList.map(product => {\n      if (GENERAL_SETTINGS.hotelSettings.product_price && product.showprice) {\n        productTotalPrice += product.amount * product.price;\n      }\n\n      if (curr === '') {\n        curr += product.pricecurr;\n      }\n    });\n\n    if (locPriceData) {\n      locPriceData.map(locPrice => {\n        locPriceTotalPrice += locPrice.totalprice;\n      });\n      setLocPrice(locPriceTotalPrice);\n    }\n\n    return {\n      total: productTotalPrice + locPriceTotalPrice,\n      pricecurr: curr\n    };\n  };\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, showDetail ? __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, !eventLocData.isposmain ? __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 29\n    }\n  }, __jsx(EventReservationCard, {\n    event: event,\n    fullWidth: global.base.isTrue,\n    hideStatus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 33\n    }\n  })) : null, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 25\n    }\n  }, __jsx(Box, {\n    p: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 29\n    }\n  }, GENERAL_SETTINGS.hotelSettings.product_price && state.selectGuestProductList && state.selectGuestProductList.length > 0 ? __jsx(Typography, {\n    variant: \"h6\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 37\n    }\n  }, t('str_orderSummary')) : null, __jsx(List, {\n    disablePadding: true,\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 33\n    }\n  }, GENERAL_SETTINGS.hotelSettings.product_price && state.selectGuestProductList ? state.selectGuestProductList.map(product => __jsx(React.Fragment, {\n    key: product.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 41\n    }\n  }, __jsx(ListItem, {\n    className: classes.listItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 45\n    }\n  }, __jsx(ListItemText, {\n    primary: product.title,\n    secondary: `${product.amount} ${t('str_unit')} ${GENERAL_SETTINGS.hotelSettings.product_price && product.showprice ? ' x ' + (product.price > 0 ? global.helper.formatPrice(product.price) : ' - ') + ' ' + getSymbolFromCurrency(product.pricecurr) : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 49\n    }\n  }), __jsx(Typography, {\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 49\n    }\n  }, GENERAL_SETTINGS.hotelSettings.product_price && product.showprice && (product.price > 0 ? global.helper.formatPrice(product.amount * product.price) : ' - ') + ' ' + getSymbolFromCurrency(product.pricecurr))), __jsx(Divider, {\n    variant: \"fullWidth\",\n    component: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 45\n    }\n  }))) : null, locPriceData && locPriceData.length > 0 ? locPriceData.map((locPrice, i) => __jsx(React.Fragment, {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 41\n    }\n  }, __jsx(ListItem, {\n    className: classes.listItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 45\n    }\n  }, __jsx(ListItemText, {\n    primary: locPrice !== null && locPrice !== void 0 && locPrice.ruledesc ? t(locPrice.ruledesc) : t('str_additionalCharge'),\n    secondary: locPrice.ispp ? locPrice.totalpax + ' x ' + global.helper.formatPrice(locPrice.paxprice) + ' ' + getSymbolFromCurrency(locPrice.currcode) : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 49\n    }\n  }), __jsx(Typography, {\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 49\n    }\n  }, locPrice.totalprice > 0 ? global.helper.formatPrice(locPrice.totalprice) : ' - ', \" \", getSymbolFromCurrency(locPrice.currcode))), __jsx(Divider, {\n    variant: \"fullWidth\",\n    component: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 45\n    }\n  }))) : null), GENERAL_SETTINGS.hotelSettings.product_price && productTotal(state.selectGuestProductList).total > 0 ? __jsx(Typography, {\n    variant: \"body1\",\n    align: \"right\",\n    style: {\n      marginTop: 10\n    },\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 37\n    }\n  }, t('str_total'), \": \", productTotal(state.selectGuestProductList).total > 0 ? global.helper.formatPrice(productTotal(state.selectGuestProductList).total) : ' - ', \" \", productTotal(state.selectGuestProductList, locPriceData).pricecurr ? getSymbolFromCurrency(productTotal(state.selectGuestProductList).pricecurr) : (_locPriceData$ = locPriceData[0]) !== null && _locPriceData$ !== void 0 && _locPriceData$.currcode ? getSymbolFromCurrency(locPriceData[0].currcode) : '') : null))) : null, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }\n  }, __jsx(Box, {\n    p: showDetail ? 2 : 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 21\n    }\n  }, __jsx(FrameCheckbox, {\n    value: state.isRestaurantResTermsConfirm,\n    title: \"str_termsAndConditions\",\n    linkText: \"str_iAcceptLinkAndDesc\",\n    linkTextADesc: \"str_termsAndConditions\",\n    ifamePageUrl: GENERAL_SETTINGS.BASE_URL + `info/${locale}/${global.guestWeb.strEventTerms}/${eventLocData.locmid}/${hotelRefno}?iframe=true`,\n    isCheck: e => handleConfirm(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 25\n    }\n  })))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    state: state.formReducer.guest\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value)),\n  updateState: (stateType, stateName, value) => dispatch(updateState(stateType, stateName, value))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Confirmation);","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/guest/public/components/info/event-reservation/confirmation.js"],"names":["React","useContext","useEffect","useState","makeStyles","connect","useSelector","setToState","updateState","Container","Grid","Box","Divider","Typography","List","ListItem","ListItemText","EventReservationCard","FrameCheckbox","WebCmsGlobal","useTranslation","global","getSymbolFromCurrency","DEFAULT_OREST_TOKEN","OREST_ENDPOINT","REQUEST_METHOD_CONST","UseOrest","useStyles","theme","root","width","backgroundColor","palette","background","paper","position","overflow","maxHeight","listItem","padding","spacing","total","fontWeight","title","marginTop","Confirmation","props","classes","state","event","eventLocData","isConfirmLoad","setLocPrice","showDetail","GENERAL_SETTINGS","locale","t","loginfo","orest","currentUser","hotelRefno","hotelrefno","HOTELREFNO","token","auth","access_token","locPriceData","setLocPriceData","isLocPriceLoading","setIsLocPriceLoading","isPortal","ISPORTAL","active","apiUrl","OREST_URL","endpoint","method","GET","params","locid","clientid","accid","totalpax","listall","then","locPriceResponse","status","data","catch","handleConfirm","e","productTotal","productList","productTotalPrice","locPriceTotalPrice","curr","map","product","hotelSettings","product_price","showprice","amount","price","pricecurr","locPrice","totalprice","isposmain","base","isTrue","selectGuestProductList","length","helper","formatPrice","i","ruledesc","ispp","paxprice","currcode","isRestaurantResTermsConfirm","BASE_URL","guestWeb","strEventTerms","locmid","mapStateToProps","formReducer","guest","mapDispatchToProps","dispatch","stateType","stateName","value"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { connect, useSelector } from 'react-redux'\nimport { setToState, updateState } from 'state/actions'\nimport { Container, Grid, Box, Divider } from '@material-ui/core'\nimport Typography from '@material-ui/core/Typography'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport EventReservationCard from 'components/guest/account/Reservations/EventReservationCard'\nimport FrameCheckbox from '@webcms-ui/core/frame-checkbox'\nimport WebCmsGlobal from 'components/webcms-global'\nimport useTranslation from 'lib/translations/hooks/useTranslation'\nimport * as global from '@webcms-globals'\nimport getSymbolFromCurrency from 'model/currency-symbol'\nimport { DEFAULT_OREST_TOKEN, OREST_ENDPOINT, REQUEST_METHOD_CONST } from 'model/orest/constants'\nimport { UseOrest } from '@webcms/orest'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        backgroundColor: theme.palette.background.paper,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 300,\n    },\n    listItem: {\n        padding: theme.spacing(1, 0),\n    },\n    total: {\n        fontWeight: 700,\n    },\n    title: {\n        marginTop: theme.spacing(2),\n    },\n}))\n\nconst Confirmation = (props) => {\n    const classes = useStyles()\n    const { state, event, eventLocData, updateState, isConfirmLoad, setLocPrice, showDetail } = props\n    const { GENERAL_SETTINGS, locale } = useContext(WebCmsGlobal)\n    const { t } = useTranslation()\n    const loginfo = useSelector((state) => state.orest.currentUser && state.orest.currentUser.loginfo)\n    let hotelRefno = loginfo && loginfo.hotelrefno || GENERAL_SETTINGS.HOTELREFNO\n    const token = useSelector((state) => state.orest.currentUser !== null ? state.orest.currentUser.auth.access_token : DEFAULT_OREST_TOKEN)\n    const [locPriceData, setLocPriceData] = useState(false)\n    const [isLocPriceLoading, setIsLocPriceLoading] = useState(false)\n    const isPortal = GENERAL_SETTINGS.ISPORTAL;\n\n    useEffect(() => {\n        let active = true\n        if (active && !isLocPriceLoading) {\n            setIsLocPriceLoading(true)\n            UseOrest({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: 'resevent/calc/locprice',\n                method: REQUEST_METHOD_CONST.GET,\n                token: token,\n                params: {\n                    locid: eventLocData.locid,\n                    clientid: loginfo.accid,\n                    totalpax: event.totalpax,\n                    listall: true\n                }\n            }).then((locPriceResponse)=> {\n                if (locPriceResponse.status === 200) {\n                    setIsLocPriceLoading(false)\n                    setLocPriceData(locPriceResponse?.data?.data|| false)\n                    isConfirmLoad(true)\n                }else{\n                    setIsLocPriceLoading(false)\n                    setLocPriceData(locPriceResponse?.data?.data || false)\n                    isConfirmLoad(true)\n                }\n            }).catch(() =>{\n                setIsLocPriceLoading(false)\n                setLocPriceData(null)\n                isConfirmLoad(true)\n            })\n        }\n\n        return () => {\n            active = false\n        }\n    }, [])\n\n    const handleConfirm = (e) => {\n        updateState('guest', 'isRestaurantResTermsConfirm', e)\n    }\n\n    const productTotal = (productList) => {\n        let productTotalPrice = 0,\n            locPriceTotalPrice = 0,\n            curr = ''\n\n        productList.map((product) => {\n            if(GENERAL_SETTINGS.hotelSettings.product_price && product.showprice){\n                productTotalPrice += product.amount * product.price\n            }\n\n            if (curr === '') {\n                curr += product.pricecurr\n            }\n        })\n\n        if(locPriceData){\n            locPriceData.map((locPrice) => {\n                locPriceTotalPrice += locPrice.totalprice\n            })\n\n            setLocPrice(locPriceTotalPrice)\n        }\n\n        return {\n            total: productTotalPrice + locPriceTotalPrice,\n            pricecurr: curr,\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <Grid container spacing={0}>\n                {showDetail ? (\n                    <React.Fragment>\n                        {!eventLocData.isposmain ? (\n                            <Grid item xs={12}>\n                                <EventReservationCard event={event} fullWidth={global.base.isTrue} hideStatus={true}/>\n                            </Grid>\n                        ): null}\n                        <Grid item xs={12}>\n                            <Box p={0}>\n                                {GENERAL_SETTINGS.hotelSettings.product_price && state.selectGuestProductList && state.selectGuestProductList.length > 0 ? (\n                                    <Typography variant=\"h6\" gutterBottom>\n                                        {t('str_orderSummary')}\n                                    </Typography>\n                                ): null}\n                                <List disablePadding className={classes.root}>\n                                    {GENERAL_SETTINGS.hotelSettings.product_price && state.selectGuestProductList ? state.selectGuestProductList.map((product) => (\n                                        <React.Fragment key={product.title}>\n                                            <ListItem className={classes.listItem}>\n                                                <ListItemText\n                                                    primary={product.title}\n                                                    secondary={`${product.amount} ${t('str_unit')} ${GENERAL_SETTINGS.hotelSettings.product_price && product.showprice ? ' x '+ (product.price > 0 ? global.helper.formatPrice(product.price) : ' - ') + ' ' + getSymbolFromCurrency(product.pricecurr) : ''}`}\n                                                />\n                                                <Typography variant=\"body2\">\n                                                    {GENERAL_SETTINGS.hotelSettings.product_price && product.showprice && ((product.price > 0) ? (global.helper.formatPrice(product.amount * product.price)) : ' - ') + ' ' + getSymbolFromCurrency(product.pricecurr)}\n                                                </Typography>\n                                            </ListItem>\n                                            <Divider variant=\"fullWidth\" component=\"li\" />\n                                        </React.Fragment>\n                                    )): null}\n                                    {locPriceData && locPriceData.length > 0 ? locPriceData.map((locPrice, i) =>\n                                        <React.Fragment key={i}>\n                                            <ListItem className={classes.listItem}>\n                                                <ListItemText\n                                                    primary={locPrice?.ruledesc ? t(locPrice.ruledesc) : t('str_additionalCharge')}\n                                                    secondary={locPrice.ispp ? locPrice.totalpax + ' x ' + global.helper.formatPrice(locPrice.paxprice) + ' ' + getSymbolFromCurrency(locPrice.currcode) : false}\n                                                />\n                                                <Typography variant=\"body2\">\n                                                    {(locPrice.totalprice > 0) ? global.helper.formatPrice(locPrice.totalprice) : ' - '} {getSymbolFromCurrency(locPrice.currcode)}\n                                                </Typography>\n                                            </ListItem>\n                                            <Divider variant=\"fullWidth\" component=\"li\" />\n                                        </React.Fragment>\n                                    ): null}\n                                </List>\n                                {(GENERAL_SETTINGS.hotelSettings.product_price && productTotal(state.selectGuestProductList).total > 0) ? (\n                                    <Typography variant='body1' align='right' style={{ marginTop: 10 }} gutterBottom>\n                                        {t('str_total')}: {(productTotal(state.selectGuestProductList).total > 0) ? global.helper.formatPrice(productTotal(state.selectGuestProductList).total) : ' - '} {productTotal(state.selectGuestProductList, locPriceData).pricecurr ? getSymbolFromCurrency(productTotal(state.selectGuestProductList).pricecurr) : locPriceData[0]?.currcode ? getSymbolFromCurrency(locPriceData[0].currcode) : ''}\n                                    </Typography>\n                                ): null}\n                            </Box>\n                        </Grid>\n                    </React.Fragment>\n                ) : null}\n                <Grid item xs={12}>\n                    <Box p={showDetail ? 2 : 0}>\n                        <FrameCheckbox\n                            value={state.isRestaurantResTermsConfirm}\n                            title=\"str_termsAndConditions\"\n                            linkText=\"str_iAcceptLinkAndDesc\"\n                            linkTextADesc=\"str_termsAndConditions\"\n                            ifamePageUrl={\n                                GENERAL_SETTINGS.BASE_URL +\n                                `info/${locale}/${\n                                    global.guestWeb.strEventTerms\n                                }/${eventLocData.locmid}/${hotelRefno}?iframe=true`\n                            }\n                            isCheck={(e) => handleConfirm(e)}\n                        />\n                    </Box>\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        state: state.formReducer.guest,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value)),\n    updateState: (stateType, stateName, value) => dispatch(updateState(stateType, stateName, value)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Confirmation)\n"]},"metadata":{},"sourceType":"module"}