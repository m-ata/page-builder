{"ast":null,"code":"import _toConsumableArray from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { applyMiddleware, combineReducers, createStore } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport FormReducer from '../reducers/formReducer';\nimport { reducer as notifications } from '../../model/notification';\nimport { reducer as orest } from '../../model/orest';\nimport { reducer as survey } from '../../model/survey';\nimport { reducer as hotelinfo } from '../../model/orest/components/ChangeHotel/redux_store';\nimport { reducer as google } from '../../model/google'; // import { offline } from '@redux-offline/redux-offline';\n// import offlineConfig from '@redux-offline/redux-offline/lib/defaults';\n\nvar bindMiddleware = function bindMiddleware(middleware) {\n  if (process.env.PROJECT_ENV !== 'production') {\n    var _require = require('redux-devtools-extension'),\n        composeWithDevTools = _require.composeWithDevTools;\n\n    return composeWithDevTools(applyMiddleware.apply(void 0, _toConsumableArray(middleware)));\n  }\n\n  return applyMiddleware.apply(void 0, _toConsumableArray(middleware));\n};\n\nvar initStore = function initStore() {\n  return createStore(combineReducers({\n    formReducer: FormReducer,\n    notifications: notifications,\n    orest: orest,\n    hotelinfo: hotelinfo,\n    survey: survey,\n    google: google\n  }), bindMiddleware([thunkMiddleware]) // compose(\n  //     bindMiddleware([thunkMiddleware]),\n  //     offline(offlineConfig)\n  // )\n  );\n};\n\nexport default initStore;","map":{"version":3,"sources":["/Users/mata/app-cloudweb/state/store/index.js"],"names":["applyMiddleware","combineReducers","createStore","thunkMiddleware","FormReducer","reducer","notifications","orest","survey","hotelinfo","google","bindMiddleware","middleware","process","env","PROJECT_ENV","require","composeWithDevTools","initStore","formReducer"],"mappings":";AAAA,SAASA,eAAT,EAA0BC,eAA1B,EAA2CC,WAA3C,QAA8D,OAA9D;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,SAASC,OAAO,IAAIC,aAApB,QAAyC,0BAAzC;AACA,SAASD,OAAO,IAAIE,KAApB,QAAiC,mBAAjC;AACA,SAASF,OAAO,IAAIG,MAApB,QAAkC,oBAAlC;AACA,SAASH,OAAO,IAAII,SAApB,QAAoC,sDAApC;AACA,SAASJ,OAAO,IAAIK,MAApB,QAAiC,oBAAjC,C,CACA;AACA;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,UAAD,EAAgB;AACnC,MAAIC,OAAO,CAACC,GAAR,CAAYC,WAAZ,KAA4B,YAAhC,EAA8C;AAAA,mBACVC,OAAO,CAAC,0BAAD,CADG;AAAA,QAClCC,mBADkC,YAClCA,mBADkC;;AAE1C,WAAOA,mBAAmB,CAACjB,eAAe,MAAf,4BAAmBY,UAAnB,EAAD,CAA1B;AACH;;AACD,SAAOZ,eAAe,MAAf,4BAAmBY,UAAnB,EAAP;AACH,CAND;;AAQA,IAAMM,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpB,SAAOhB,WAAW,CACdD,eAAe,CAAC;AACZkB,IAAAA,WAAW,EAAEf,WADD;AAEZE,IAAAA,aAAa,EAAEA,aAFH;AAGZC,IAAAA,KAAK,EAAEA,KAHK;AAIZE,IAAAA,SAAS,EAACA,SAJE;AAKZD,IAAAA,MAAM,EAAEA,MALI;AAMZE,IAAAA,MAAM,EAAEA;AANI,GAAD,CADD,EASdC,cAAc,CAAC,CAACR,eAAD,CAAD,CATA,CAUd;AACA;AACA;AACA;AAbc,GAAlB;AAeH,CAhBD;;AAkBA,eAAee,SAAf","sourcesContent":["import { applyMiddleware, combineReducers, createStore } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport FormReducer from '../reducers/formReducer'\nimport { reducer as notifications } from '../../model/notification'\nimport { reducer as orest } from '../../model/orest'\nimport { reducer as survey } from '../../model/survey'\nimport { reducer as hotelinfo} from '../../model/orest/components/ChangeHotel/redux_store'\nimport { reducer as google} from '../../model/google'\n// import { offline } from '@redux-offline/redux-offline';\n// import offlineConfig from '@redux-offline/redux-offline/lib/defaults';\n\nconst bindMiddleware = (middleware) => {\n    if (process.env.PROJECT_ENV !== 'production') {\n        const { composeWithDevTools } = require('redux-devtools-extension')\n        return composeWithDevTools(applyMiddleware(...middleware))\n    }\n    return applyMiddleware(...middleware)\n}\n\nconst initStore = () => {\n    return createStore(\n        combineReducers({\n            formReducer: FormReducer,\n            notifications: notifications,\n            orest: orest,\n            hotelinfo:hotelinfo,\n            survey: survey,\n            google: google\n        }),\n        bindMiddleware([thunkMiddleware])\n        // compose(\n        //     bindMiddleware([thunkMiddleware]),\n        //     offline(offlineConfig)\n        // )\n    )\n}\n\nexport default initStore\n"]},"metadata":{},"sourceType":"module"}