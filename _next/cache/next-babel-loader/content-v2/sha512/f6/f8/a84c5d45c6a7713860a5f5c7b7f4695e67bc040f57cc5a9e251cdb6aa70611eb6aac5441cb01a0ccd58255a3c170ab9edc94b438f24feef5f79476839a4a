{"ast":null,"code":"import _toConsumableArray from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nexport default function useWidth() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  var theme = useTheme();\n\n  var keys = _toConsumableArray(theme.breakpoints.keys).reverse();\n\n  return keys.reduce(_s(function (output, key) {\n    _s();\n\n    var matches = useMediaQuery(theme.breakpoints.only(key));\n    return !output && matches ? key : output;\n  }, \"Notg82ym9o1DByeCiLcTemAcsz0=\", false, function () {\n    return [useMediaQuery];\n  }), null) || 'xs';\n}\n\n_s2(useWidth, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});","map":{"version":3,"sources":["/Users/mata/app-cloudweb/@webcms-ui/hooks/use-width/index.js"],"names":["React","useTheme","useMediaQuery","useWidth","theme","keys","breakpoints","reverse","reduce","output","key","matches","only"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAAA;;AAC/B,MAAMC,KAAK,GAAGH,QAAQ,EAAtB;;AACA,MAAMI,IAAI,GAAG,mBAAID,KAAK,CAACE,WAAN,CAAkBD,IAAtB,EAA4BE,OAA5B,EAAb;;AACA,SACIF,IAAI,CAACG,MAAL,IAAY,UAACC,MAAD,EAASC,GAAT,EAAiB;AAAA;;AACzB,QAAMC,OAAO,GAAGT,aAAa,CAACE,KAAK,CAACE,WAAN,CAAkBM,IAAlB,CAAuBF,GAAvB,CAAD,CAA7B;AACA,WAAO,CAACD,MAAD,IAAWE,OAAX,GAAqBD,GAArB,GAA2BD,MAAlC;AACH,GAHD;AAAA,YACoBP,aADpB;AAAA,MAGG,IAHH,KAGY,IAJhB;AAMH;;IATuBC,Q;UACNF,Q","sourcesContent":["import React from 'react'\nimport { useTheme } from '@material-ui/core/styles'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\n\nexport default function useWidth() {\n    const theme = useTheme();\n    const keys = [...theme.breakpoints.keys].reverse();\n    return (\n        keys.reduce((output, key) => {\n            const matches = useMediaQuery(theme.breakpoints.only(key));\n            return !output && matches ? key : output;\n        }, null) || 'xs'\n    );\n}"]},"metadata":{},"sourceType":"module"}