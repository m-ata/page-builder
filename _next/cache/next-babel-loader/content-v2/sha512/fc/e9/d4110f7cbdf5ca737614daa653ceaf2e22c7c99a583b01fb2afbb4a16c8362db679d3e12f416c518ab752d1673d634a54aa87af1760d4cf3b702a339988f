{"ast":null,"code":"const getChildTotals = (childAges, agencyInfo) => {\n  let totalChd1 = 0,\n      totalChd2 = 0,\n      totalBaby = 0;\n\n  if (childAges && childAges.length > 0) {\n    const babyAge = Number(agencyInfo.babyage),\n          chd1Age = Number(agencyInfo.chd1age),\n          chd2Age = Number(agencyInfo.chd2age);\n\n    for (let childAge of childAges) {\n      if (childAge) {\n        const useChild = typeof childAge === 'string' ? JSON.parse(childAge) : childAge,\n              useAge = Number(useChild.age);\n\n        if (useAge > 0 && babyAge > 0 && useAge <= babyAge) {\n          totalBaby++;\n        } else if (useAge > 0 && chd1Age > 0 && useAge <= chd1Age) {\n          totalChd1++;\n        } else if (useAge > 0 && chd2Age > 0 && useAge <= chd2Age) {\n          totalChd2++;\n        }\n      }\n    }\n  }\n\n  return {\n    totalChd1,\n    totalChd2,\n    totalBaby\n  };\n};\n\nmodule.exports = {\n  getChildTotals\n};","map":{"version":3,"sources":["/Users/mata/app-cloudweb/lib/helpers/useFunction.js"],"names":["getChildTotals","childAges","agencyInfo","totalChd1","totalChd2","totalBaby","length","babyAge","Number","babyage","chd1Age","chd1age","chd2Age","chd2age","childAge","useChild","JSON","parse","useAge","age","module","exports"],"mappings":"AAAA,MAAMA,cAAc,GAAG,CAACC,SAAD,EAAYC,UAAZ,KAA2B;AAC9C,MACIC,SAAS,GAAG,CADhB;AAAA,MAEMC,SAAS,GAAG,CAFlB;AAAA,MAGMC,SAAS,GAAG,CAHlB;;AAKA,MAAIJ,SAAS,IAAIA,SAAS,CAACK,MAAV,GAAmB,CAApC,EAAuC;AACnC,UACIC,OAAO,GAAGC,MAAM,CAACN,UAAU,CAACO,OAAZ,CADpB;AAAA,UAEMC,OAAO,GAAGF,MAAM,CAACN,UAAU,CAACS,OAAZ,CAFtB;AAAA,UAGMC,OAAO,GAAGJ,MAAM,CAACN,UAAU,CAACW,OAAZ,CAHtB;;AAKA,SAAK,IAAIC,QAAT,IAAqBb,SAArB,EAAgC;AAC5B,UAAIa,QAAJ,EAAc;AACV,cAAMC,QAAQ,GAAG,OAAOD,QAAP,KAAoB,QAApB,GAA+BE,IAAI,CAACC,KAAL,CAAWH,QAAX,CAA/B,GAAsDA,QAAvE;AAAA,cACMI,MAAM,GAAGV,MAAM,CAACO,QAAQ,CAACI,GAAV,CADrB;;AAEA,YAAID,MAAM,GAAG,CAAT,IAAcX,OAAO,GAAG,CAAxB,IAA6BW,MAAM,IAAIX,OAA3C,EAAoD;AAChDF,UAAAA,SAAS;AACZ,SAFD,MAEO,IAAIa,MAAM,GAAG,CAAT,IAAcR,OAAO,GAAG,CAAxB,IAA6BQ,MAAM,IAAIR,OAA3C,EAAoD;AACvDP,UAAAA,SAAS;AACZ,SAFM,MAEA,IAAIe,MAAM,GAAG,CAAT,IAAcN,OAAO,GAAG,CAAxB,IAA6BM,MAAM,IAAIN,OAA3C,EAAoD;AACvDR,UAAAA,SAAS;AACZ;AACJ;AACJ;AACJ;;AAED,SAAO;AACHD,IAAAA,SADG;AACQC,IAAAA,SADR;AACmBC,IAAAA;AADnB,GAAP;AAGH,CA9BD;;AAgCAe,MAAM,CAACC,OAAP,GAAiB;AAAErB,EAAAA;AAAF,CAAjB","sourcesContent":["const getChildTotals = (childAges, agencyInfo) => {\n    let\n        totalChd1 = 0\n        , totalChd2 = 0\n        , totalBaby = 0\n\n    if (childAges && childAges.length > 0) {\n        const\n            babyAge = Number(agencyInfo.babyage)\n            , chd1Age = Number(agencyInfo.chd1age)\n            , chd2Age = Number(agencyInfo.chd2age)\n\n        for (let childAge of childAges) {\n            if (childAge) {\n                const useChild = typeof childAge === 'string' ? JSON.parse(childAge) : childAge\n                    , useAge = Number(useChild.age)\n                if (useAge > 0 && babyAge > 0 && useAge <= babyAge) {\n                    totalBaby++\n                } else if (useAge > 0 && chd1Age > 0 && useAge <= chd1Age) {\n                    totalChd1++\n                } else if (useAge > 0 && chd2Age > 0 && useAge <= chd2Age) {\n                    totalChd2++\n                }\n            }\n        }\n    }\n\n    return {\n        totalChd1, totalChd2, totalBaby\n    }\n}\n\nmodule.exports = { getChildTotals }"]},"metadata":{},"sourceType":"script"}