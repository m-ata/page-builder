{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/guest/account/Details/GuestSelection/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Radio } from '@material-ui/core';\nimport MaterialTable from 'material-table';\nimport Alert from '@material-ui/lab/Alert';\nimport moment from 'moment';\nimport { useSnackbar } from 'notistack';\nimport { makeStyles } from '@material-ui/core/styles';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nimport { useOrestAction } from 'model/orest';\nvar useStyles = makeStyles(function () {\n  return {\n    infoAlert: {\n      position: 'absolute',\n      padding: '0px 10px',\n      marginLeft: '-6px',\n      top: 10,\n      left: 15\n    }\n  };\n});\n\nvar GuestSelection = function GuestSelection(_ref) {\n  _s();\n\n  var open = _ref.open,\n      isLoading = _ref.isLoading,\n      data = _ref.data,\n      auth = _ref.auth,\n      logInfo = _ref.logInfo,\n      onLoginCallback = _ref.onLoginCallback;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var classes = useStyles();\n\n  var _useSnackbar = useSnackbar(),\n      enqueueSnackbar = _useSnackbar.enqueueSnackbar;\n\n  var _useOrestAction = useOrestAction(),\n      setOrestState = _useOrestAction.setOrestState;\n\n  var _useState = useState(false),\n      selectionGuestId = _useState[0],\n      setSelectionGuestId = _useState[1];\n\n  var handleOnLoginCallback = function handleOnLoginCallback() {\n    if (selectionGuestId) {\n      var getClient = data.find(function (guest) {\n        return guest.clientid === selectionGuestId;\n      }) || false;\n\n      if (getClient) {\n        var isOtherGuest = logInfo.accid !== getClient.clientid;\n        logInfo.refid = getClient.clientid;\n        logInfo.accid = getClient.clientid;\n        logInfo.accgid = getClient.clientgid;\n        setOrestState(['otherGuestResname'], getClient);\n        onLoginCallback(auth, logInfo, isOtherGuest ? getClient : false);\n      } else {\n        enqueueSnackbar(t('str_unexpectedProblem'), {\n          variant: 'info'\n        });\n      }\n    } else {\n      enqueueSnackbar(t('str_pleaseSelectClient'), {\n        variant: 'info'\n      });\n    }\n  };\n\n  return __jsx(Dialog, {\n    fullWidth: true,\n    maxWidth: \"md\",\n    open: open,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, __jsx(DialogTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, t('str_selectGuest')), __jsx(DialogContent, {\n    dividers: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, __jsx(MaterialTable, {\n    isLoading: isLoading,\n    title: __jsx(Alert, {\n      className: classes.infoAlert,\n      variant: \"outlined\",\n      severity: \"info\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }\n    }, t('str_selectTheGuestYouWantToLogin')),\n    columns: [{\n      title: t('str_firstName'),\n      field: 'firstname',\n      render: function render(props) {\n        return __jsx(React.Fragment, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 46\n          }\n        }, props.firstname || '-');\n      }\n    }, {\n      title: t('str_lastName'),\n      field: 'lastname',\n      render: function render(props) {\n        return __jsx(React.Fragment, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 46\n          }\n        }, props.lastname || '-');\n      }\n    }, {\n      title: t('str_birthDate'),\n      field: 'birthdate',\n      type: 'date',\n      render: function render(props) {\n        return __jsx(React.Fragment, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 46\n          }\n        }, props.birthdate && moment(props.birthdate, 'YYYY-MM-DD').format('DD.MM.YYYY') || '-');\n      }\n    }, {\n      title: t('str_resNo'),\n      field: 'reservno',\n      render: function render(props) {\n        return __jsx(React.Fragment, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 46\n          }\n        }, props.refid || props.reservno || '-');\n      }\n    }, {\n      title: t('str_roomNo'),\n      field: 'roomno',\n      render: function render(props) {\n        return __jsx(React.Fragment, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 46\n          }\n        }, props.roomno || '-');\n      }\n    }],\n    data: data,\n    onSelectionChange: function onSelectionChange(rows, row) {\n      return setSelectionGuestId(row.id);\n    },\n    localization: {\n      body: {\n        emptyDataSourceMessage: t('str_noRecords'),\n        addTooltip: t('str_add'),\n        deleteTooltip: t('str_delete'),\n        editTooltip: t('str_edit'),\n        filterRow: {\n          filterTooltip: t('str_filter')\n        },\n        editRow: {\n          deleteText: t('str_confirmDeleteRecord'),\n          cancelTooltip: t('str_cancel'),\n          saveTooltip: t('str_save')\n        }\n      },\n      toolbar: {\n        searchTooltip: t('str_search'),\n        searchPlaceholder: t('str_search')\n      },\n      pagination: {\n        labelRowsSelect: t('str_line'),\n        labelDisplayedRows: t('str_labelDisplayedRows'),\n        firstTooltip: t('str_firstPage'),\n        previousTooltip: t('str_previousPage'),\n        nextTooltip: t('str_nextPage'),\n        lastTooltip: t('str_lastPage')\n      },\n      header: {\n        actions: ''\n      }\n    },\n    actions: [{\n      onClick: function onClick(event, rowData) {\n        return setSelectionGuestId(rowData.data.id);\n      }\n    }],\n    components: {\n      Action: function Action(props) {\n        return __jsx(Radio, {\n          color: \"primary\",\n          checked: selectionGuestId && props.data.clientid === selectionGuestId,\n          onChange: function onChange(event) {\n            return props.action.onClick(event, props);\n          },\n          value: props.data.clientid,\n          name: \"clientid\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 29\n          }\n        });\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  })), __jsx(DialogActions, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    variant: \"contained\",\n    disableElevation: true,\n    onClick: function onClick() {\n      return handleOnLoginCallback();\n    },\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, t('str_loginWithSelectedGuest'))));\n};\n\n_s(GuestSelection, \"rtDz3nWQ3o1a0/OSCbTdBu91EgM=\", false, function () {\n  return [useTranslation, useStyles, useSnackbar, useOrestAction];\n});\n\n_c = GuestSelection;\nexport default GuestSelection;\n\nvar _c;\n\n$RefreshReg$(_c, \"GuestSelection\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/guest/account/Details/GuestSelection/index.js"],"names":["React","useState","Button","Dialog","DialogActions","DialogContent","DialogTitle","Radio","MaterialTable","Alert","moment","useSnackbar","makeStyles","useTranslation","useOrestAction","useStyles","infoAlert","position","padding","marginLeft","top","left","GuestSelection","open","isLoading","data","auth","logInfo","onLoginCallback","t","classes","enqueueSnackbar","setOrestState","selectionGuestId","setSelectionGuestId","handleOnLoginCallback","getClient","find","guest","clientid","isOtherGuest","accid","refid","accgid","clientgid","variant","title","field","render","props","firstname","lastname","type","birthdate","format","reservno","roomno","rows","row","id","body","emptyDataSourceMessage","addTooltip","deleteTooltip","editTooltip","filterRow","filterTooltip","editRow","deleteText","cancelTooltip","saveTooltip","toolbar","searchTooltip","searchPlaceholder","pagination","labelRowsSelect","labelDisplayedRows","firstTooltip","previousTooltip","nextTooltip","lastTooltip","header","actions","onClick","event","rowData","Action","action"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Radio } from '@material-ui/core'\nimport MaterialTable from 'material-table'\nimport Alert from '@material-ui/lab/Alert'\nimport moment from 'moment'\nimport { useSnackbar } from 'notistack'\nimport { makeStyles } from '@material-ui/core/styles'\nimport useTranslation from 'lib/translations/hooks/useTranslation'\nimport { useOrestAction } from 'model/orest'\n\nconst useStyles = makeStyles(() => ({\n    infoAlert: {\n        position: 'absolute',\n        padding: '0px 10px',\n        marginLeft: '-6px',\n        top: 10,\n        left: 15\n    }\n}))\n\nconst GuestSelection = ({open, isLoading, data, auth, logInfo, onLoginCallback}) => {\n    const {t} = useTranslation()\n    const classes = useStyles()\n    const { enqueueSnackbar } = useSnackbar()\n    const { setOrestState } = useOrestAction()\n    const [selectionGuestId, setSelectionGuestId] = useState(false)\n\n    const handleOnLoginCallback = () => {\n        if (selectionGuestId) {\n            const getClient = data.find((guest) => guest.clientid === selectionGuestId) || false\n            if (getClient) {\n                const isOtherGuest =  logInfo.accid !== getClient.clientid\n                logInfo.refid = getClient.clientid\n                logInfo.accid = getClient.clientid\n                logInfo.accgid = getClient.clientgid\n                setOrestState(['otherGuestResname'], getClient)\n                onLoginCallback(auth, logInfo, isOtherGuest ? getClient : false)\n            }else{\n                enqueueSnackbar(t('str_unexpectedProblem'), { variant: 'info' })\n            }\n\n        } else {\n            enqueueSnackbar(t('str_pleaseSelectClient'), { variant: 'info' })\n        }\n    }\n\n    return (\n        <Dialog fullWidth maxWidth=\"md\" open={open}>\n            <DialogTitle>\n                {t('str_selectGuest')}\n            </DialogTitle>\n            <DialogContent dividers>\n                <MaterialTable\n                    isLoading={isLoading}\n                    title={\n                        <Alert className={classes.infoAlert} variant=\"outlined\" severity=\"info\">\n                            {t('str_selectTheGuestYouWantToLogin')}\n                        </Alert>\n                    }\n                    columns={[\n                        {\n                            title: t('str_firstName'),\n                            field: 'firstname',\n                            render: props => <React.Fragment>{props.firstname || '-'}</React.Fragment>\n                        },\n                        {\n                            title: t('str_lastName'),\n                            field: 'lastname',\n                            render: props => <React.Fragment>{props.lastname || '-'}</React.Fragment>\n                        },\n                        {\n                            title: t('str_birthDate'),\n                            field: 'birthdate',\n                            type: 'date',\n                            render: props => <React.Fragment>{props.birthdate && moment(props.birthdate, 'YYYY-MM-DD').format('DD.MM.YYYY') || '-'}</React.Fragment>\n                        },\n                        {\n                            title: t('str_resNo'),\n                            field: 'reservno',\n                            render: props => <React.Fragment>{props.refid || props.reservno || '-'}</React.Fragment>\n                        },\n                        {\n                            title: t('str_roomNo'),\n                            field: 'roomno',\n                            render: props => <React.Fragment>{props.roomno || '-'}</React.Fragment>\n                        },\n                    ]}\n                    data={data}\n                    onSelectionChange={(rows, row) => setSelectionGuestId(row.id)}\n                    localization={{\n                        body: {\n                            emptyDataSourceMessage: t('str_noRecords'),\n                            addTooltip: t('str_add'),\n                            deleteTooltip: t('str_delete'),\n                            editTooltip: t('str_edit'),\n                            filterRow: {\n                                filterTooltip: t('str_filter')\n                            },\n                            editRow: {\n                                deleteText: t('str_confirmDeleteRecord'),\n                                cancelTooltip: t('str_cancel'),\n                                saveTooltip: t('str_save')\n                            }\n                        },\n                        toolbar: {\n                            searchTooltip: t('str_search'),\n                            searchPlaceholder: t('str_search')\n                        },\n                        pagination: {\n                            labelRowsSelect: t('str_line'),\n                            labelDisplayedRows: t('str_labelDisplayedRows'),\n                            firstTooltip: t('str_firstPage'),\n                            previousTooltip: t('str_previousPage'),\n                            nextTooltip: t('str_nextPage'),\n                            lastTooltip: t('str_lastPage')\n                        },\n                        header: {\n                            actions: ''\n                        },\n                    }}\n                    actions={[\n                        {\n                            onClick: (event, rowData) => setSelectionGuestId(rowData.data.id)\n                        }\n                    ]}\n                    components={{\n                        Action: props => (\n                            <Radio\n                                color='primary'\n                                checked={selectionGuestId && props.data.clientid === selectionGuestId}\n                                onChange={(event) => props.action.onClick(event, props)}\n                                value={props.data.clientid}\n                                name='clientid'\n                            />\n                        ),\n                    }}\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button variant=\"contained\" disableElevation onClick={() => handleOnLoginCallback()} color=\"primary\">\n                    {t('str_loginWithSelectedGuest')}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default GuestSelection"]},"metadata":{},"sourceType":"module"}