{"ast":null,"code":"import _extends from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\n\nvar _jsxFileName = \"/Users/mata/app-cloudweb/components/survey/surveytree/dialog.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { forwardRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport SurveyTree from './index';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    appBar: {\n      position: 'relative'\n    },\n    title: {\n      marginLeft: theme.spacing(2),\n      flex: 1\n    }\n  };\n});\nvar Transition = /*#__PURE__*/forwardRef(_c = function Transition(props, ref) {\n  return __jsx(Slide, _extends({\n    direction: \"up\",\n    ref: ref\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }\n  }));\n});\n_c2 = Transition;\nexport default function SurveyTreeDialog(props) {\n  _s();\n\n  var classes = useStyles();\n  var open = props.open,\n      onClose = props.onClose,\n      data = props.data,\n      isAlreadyLoadTree = props.isAlreadyLoadTree;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var handleClose = function handleClose() {\n    onClose(false);\n  };\n\n  return __jsx(Dialog, {\n    fullScreen: true,\n    open: open,\n    onClose: handleClose,\n    TransitionComponent: Transition,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, __jsx(AppBar, {\n    className: classes.appBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, __jsx(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, t('str_fillSurvey')), __jsx(IconButton, {\n    edge: \"end\",\n    color: \"inherit\",\n    onClick: handleClose,\n    \"aria-label\": \"close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, __jsx(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  })))), __jsx(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, __jsx(SurveyTree, {\n    isWidget: true,\n    surveygid: data.surveygid,\n    surveyrefno: data.surveyrefno,\n    clientid: data.clientid,\n    isAlreadyLoadTree: isAlreadyLoadTree,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  })));\n}\n\n_s(SurveyTreeDialog, \"h68XjMarfE1o4WMqifPfj6fvklc=\", false, function () {\n  return [useStyles, useTranslation];\n});\n\n_c3 = SurveyTreeDialog;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Transition$forwardRef\");\n$RefreshReg$(_c2, \"Transition\");\n$RefreshReg$(_c3, \"SurveyTreeDialog\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/survey/surveytree/dialog.js"],"names":["React","forwardRef","makeStyles","Dialog","DialogContent","AppBar","Toolbar","IconButton","Typography","CloseIcon","Slide","SurveyTree","useTranslation","useStyles","theme","appBar","position","title","marginLeft","spacing","flex","Transition","props","ref","SurveyTreeDialog","classes","open","onClose","data","isAlreadyLoadTree","t","handleClose","surveygid","surveyrefno","clientid"],"mappings":"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","sourcesContent":["import React, {forwardRef} from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Slide from '@material-ui/core/Slide'\nimport SurveyTree from './index'\nimport useTranslation from 'lib/translations/hooks/useTranslation'\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        position: 'relative',\n    },\n    title: {\n        marginLeft: theme.spacing(2),\n        flex: 1,\n    },\n}));\n\nconst Transition = forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function SurveyTreeDialog(props) {\n    const classes = useStyles();\n    const { open, onClose, data, isAlreadyLoadTree } = props\n    const { t } = useTranslation()\n\n    const handleClose = () => {\n        onClose(false)\n    }\n\n    return (\n        <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\n            <AppBar className={classes.appBar}>\n                <Toolbar>\n                    <Typography variant='h6' className={classes.title}>\n                        {t('str_fillSurvey')}\n                    </Typography>\n                    <IconButton edge='end' color='inherit' onClick={handleClose} aria-label='close'>\n                        <CloseIcon />\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n            <DialogContent>\n                <SurveyTree isWidget={true} surveygid={data.surveygid} surveyrefno={data.surveyrefno} clientid={data.clientid} isAlreadyLoadTree={isAlreadyLoadTree}/>\n            </DialogContent>\n        </Dialog>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}