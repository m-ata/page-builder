{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/CustomDatePicker/CustomDatePicker.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport moment from 'moment';\nimport MomentAdapter from '@date-io/moment';\nimport { DatePicker, LocalizationProvider } from '@material-ui/pickers';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\n\nfunction CustomDatePicker(props) {\n  const {\n    minDate,\n    value,\n    onChange,\n    onError,\n    label,\n    id,\n    name,\n    disablePast,\n    disableFuture,\n    helperText,\n    fullWidth,\n    required,\n    error\n  } = props,\n        {\n    t\n  } = useTranslation(),\n        inputFormat = \"DD/MM/YYYY\";\n\n  const handleOnChange = (newDate, name) => {\n    if (typeof onChange === \"function\") onChange(newDate, name);\n  };\n\n  const handleOnError = error => {\n    if (typeof onError === \"function\") onError(error);\n  };\n\n  return __jsx(LocalizationProvider, {\n    dateLibInstance: moment,\n    dateAdapter: MomentAdapter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, __jsx(DatePicker, {\n    autoOk: true,\n    id: id,\n    name: name,\n    label: label || t('str_date'),\n    minDate: minDate,\n    value: value,\n    error: error,\n    allowKeyboardControl: true,\n    inputFormat: inputFormat,\n    disableFuture: disableFuture,\n    disablePast: disablePast,\n    openTo: 'date',\n    views: ['year', 'month', 'date'],\n    onError: e => handleOnError(e),\n    onChange: newDate => handleOnChange(newDate, name),\n    renderInput: props => {\n      return __jsx(TextField, _extends({}, props, {\n        id: id,\n        name: name,\n        fullWidth: fullWidth,\n        required: required,\n        variant: \"outlined\",\n        helperText: helperText && `(${helperText})` || inputFormat && `(${inputFormat})` || '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }));\n}\n\nCustomDatePicker.propTypes = {\n  value: PropTypes.object,\n  minDate: PropTypes.object,\n  label: PropTypes.string,\n  onError: PropTypes.func,\n  onChange: PropTypes.func\n};\nexport default CustomDatePicker;","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/CustomDatePicker/CustomDatePicker.js"],"names":["React","PropTypes","TextField","moment","MomentAdapter","DatePicker","LocalizationProvider","useTranslation","CustomDatePicker","props","minDate","value","onChange","onError","label","id","name","disablePast","disableFuture","helperText","fullWidth","required","error","t","inputFormat","handleOnChange","newDate","handleOnError","e","propTypes","object","string","func"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport TextField from '@material-ui/core/TextField'\nimport moment from 'moment'\nimport MomentAdapter from '@date-io/moment'\nimport { DatePicker, LocalizationProvider } from '@material-ui/pickers'\nimport useTranslation from 'lib/translations/hooks/useTranslation'\n\nfunction CustomDatePicker(props) {\n    const { minDate, value, onChange, onError, label, id, name, disablePast, disableFuture, helperText, fullWidth, required, error } = props\n        , { t } = useTranslation()\n        , inputFormat = \"DD/MM/YYYY\"\n\n    const handleOnChange = (newDate, name) => {\n        if(typeof onChange === \"function\") onChange(newDate, name)\n    }\n\n    const handleOnError = (error) => {\n        if(typeof onError === \"function\") onError(error)\n    }\n\n    return (\n        <LocalizationProvider dateLibInstance={moment} dateAdapter={MomentAdapter}>\n            <DatePicker\n                autoOk\n                id={id}\n                name={name}\n                label={label || t('str_date')}\n                minDate={minDate}\n                value={value}\n                error={error}\n                allowKeyboardControl\n                inputFormat={inputFormat}\n                disableFuture={disableFuture}\n                disablePast={disablePast}\n                openTo={'date'}\n                views={['year', 'month', 'date']}\n                onError={(e) => handleOnError(e)}\n                onChange={(newDate) => handleOnChange(newDate, name)}\n                renderInput={(props) => {\n                    return (\n                        <TextField\n                            {...props}\n                            id={id}\n                            name={name}\n                            fullWidth={fullWidth}\n                            required={required}\n                            variant=\"outlined\"\n                            helperText={helperText && `(${helperText})` || inputFormat && `(${inputFormat})` || ''}\n                        />\n                    )\n                }}\n            />\n        </LocalizationProvider>\n    )\n}\n\nCustomDatePicker.propTypes = {\n    value: PropTypes.object,\n    minDate: PropTypes.object,\n    label: PropTypes.string,\n    onError: PropTypes.func,\n    onChange: PropTypes.func,\n}\n\nexport default CustomDatePicker\n"]},"metadata":{},"sourceType":"module"}