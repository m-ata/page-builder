{"ast":null,"code":"import _extends from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\n\nvar _jsxFileName = \"/Users/mata/app-cloudweb/components/LocaleSwitcher/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport { useRouter } from 'next/router';\nimport { languageNames, locales } from 'lib/translations/config';\nimport { LocaleContext } from 'lib/translations/context/LocaleContext';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PopupState, { bindMenu, bindTrigger } from 'material-ui-popup-state';\nimport Avatar from '@material-ui/core/Avatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles } from '@material-ui/core/styles';\nimport WebCmsGlobal from '../webcms-global';\nvar useStyles = makeStyles(function () {\n  return {\n    root: {\n      width: 16,\n      height: 'auto'\n    },\n    listItem: {\n      paddingTop: 3,\n      paddingBottom: 3,\n      borderBottom: '1px solid #00000014'\n    },\n    listItemIcon: {\n      minWidth: 30\n    },\n    listItemText: {\n      paddingTop: 2,\n      fontSize: 16\n    }\n  };\n});\n\nvar LocaleSwitcher = function LocaleSwitcher(props) {\n  _s();\n\n  var Router = useRouter();\n  var isPortal = props.isPortal,\n      className = props.className;\n\n  var _useContext = useContext(LocaleContext),\n      locale = _useContext.locale;\n\n  var _useContext2 = useContext(WebCmsGlobal),\n      GENERAL_SETTINGS = _useContext2.GENERAL_SETTINGS;\n\n  var classes = useStyles();\n\n  var getLocales = function getLocales() {\n    if (GENERAL_SETTINGS.useFilterLangs) {\n      var useLocales = [];\n      Object.keys(GENERAL_SETTINGS.useFilterLangs).forEach(function (keyIndex) {\n        var key = GENERAL_SETTINGS.useFilterLangs[keyIndex];\n\n        if (locales.includes(key)) {\n          useLocales.push(key);\n        }\n      });\n      return useLocales;\n    }\n\n    return locales;\n  };\n\n  var handleLocaleChange = function handleLocaleChange(lang) {\n    var basePath = Router.asPath.split('?')[0] || Router.asPath;\n    var query = Router.query;\n    query.lang = lang || locale;\n    Object.keys(query).map(function (k) {\n      if (Router.pathname.includes(\"[\".concat(k, \"]\"))) {\n        delete query[k];\n      }\n    });\n    var url = {\n      pathname: Router.pathname,\n      query: query\n    };\n    var urlAs = {\n      pathname: basePath,\n      query: query\n    };\n    Router.push(url, urlAs);\n    document.documentElement.lang = lang;\n    document.body.style.direction = lang === 'ar' ? 'rtl' : 'ltr';\n    document.body.style.textAlign = lang === 'ar' ? 'right' : '';\n  };\n\n  return __jsx(PopupState, {\n    variant: \"popover\",\n    popupId: \"lang-popup-menu\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, function (popupState) {\n    return __jsx(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, __jsx(Button, _extends({\n      className: className || \"\",\n      style: isPortal ? {\n        textTransform: \"none\"\n      } : null,\n      startIcon: __jsx(Avatar, {\n        classes: {\n          root: classes.root\n        },\n        variant: \"rounded\",\n        src: \"/imgs/flags/icons/\".concat(locale, \".png\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 36\n        }\n      })\n    }, bindTrigger(popupState), {\n      endIcon: __jsx(ExpandMoreIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 34\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }), languageNames[locale]), __jsx(Menu, _extends({}, bindMenu(popupState), {\n      getContentAnchorEl: null,\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"left\"\n      },\n      transformOrigin: {\n        vertical: \"top\",\n        horizontal: \"left\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }), getLocales().map(function (locale) {\n      return __jsx(MenuItem, {\n        classes: {\n          root: classes.listItem\n        },\n        key: locale,\n        onClick: function onClick() {\n          handleLocaleChange(locale);\n          popupState.close();\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 29\n        }\n      }, __jsx(ListItemIcon, {\n        classes: {\n          root: classes.listItemIcon\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 33\n        }\n      }, __jsx(Avatar, {\n        classes: {\n          root: classes.root\n        },\n        variant: \"rounded\",\n        src: \"/imgs/flags/icons/\".concat(locale, \".png\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 37\n        }\n      })), __jsx(ListItemText, {\n        classes: {\n          root: classes.listItemText\n        },\n        primary: languageNames[locale],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 33\n        }\n      }));\n    })));\n  });\n};\n\n_s(LocaleSwitcher, \"vxQGtOTVuax1vmQ52k0GXSXcRtM=\", false, function () {\n  return [useRouter, useStyles];\n});\n\n_c = LocaleSwitcher;\nexport default LocaleSwitcher;\n\nvar _c;\n\n$RefreshReg$(_c, \"LocaleSwitcher\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/LocaleSwitcher/index.js"],"names":["React","useContext","useRouter","languageNames","locales","LocaleContext","ExpandMoreIcon","Button","Menu","MenuItem","PopupState","bindMenu","bindTrigger","Avatar","ListItemIcon","ListItemText","makeStyles","WebCmsGlobal","useStyles","root","width","height","listItem","paddingTop","paddingBottom","borderBottom","listItemIcon","minWidth","listItemText","fontSize","LocaleSwitcher","props","Router","isPortal","className","locale","GENERAL_SETTINGS","classes","getLocales","useFilterLangs","useLocales","Object","keys","forEach","keyIndex","key","includes","push","handleLocaleChange","lang","basePath","asPath","split","query","map","k","pathname","url","urlAs","document","documentElement","body","style","direction","textAlign","popupState","textTransform","vertical","horizontal","close"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react'\nimport { useRouter } from 'next/router'\nimport { languageNames, locales } from 'lib/translations/config'\nimport { LocaleContext } from 'lib/translations/context/LocaleContext'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport Button from '@material-ui/core/Button'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport PopupState, { bindMenu, bindTrigger } from 'material-ui-popup-state'\nimport Avatar from '@material-ui/core/Avatar'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport { makeStyles } from '@material-ui/core/styles'\nimport WebCmsGlobal from '../webcms-global'\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        width: 16,\n        height: 'auto'\n    },\n    listItem: {\n      paddingTop: 3,\n      paddingBottom: 3,\n      borderBottom: '1px solid #00000014'\n    },\n    listItemIcon: {\n        minWidth: 30,\n    },\n    listItemText: {\n        paddingTop: 2,\n        fontSize: 16\n    }\n}))\n\nconst LocaleSwitcher = (props) => {\n    const Router = useRouter()\n    const { isPortal, className } = props;\n    const { locale } = useContext(LocaleContext)\n    const { GENERAL_SETTINGS } = useContext(WebCmsGlobal)\n    const classes = useStyles()\n\n    const getLocales = () => {\n        if (GENERAL_SETTINGS.useFilterLangs) {\n            let useLocales = []\n            Object.keys(GENERAL_SETTINGS.useFilterLangs).forEach((keyIndex) => {\n                const key = GENERAL_SETTINGS.useFilterLangs[keyIndex]\n                if (locales.includes(key)) {\n                    useLocales.push(key)\n                }\n            })\n            return useLocales\n        }\n\n        return locales\n    }\n\n    const handleLocaleChange = (lang) => {\n        const basePath = Router.asPath.split('?')[0] || Router.asPath\n        const query = Router.query\n        query.lang = lang || locale\n\n        Object.keys(query).map(function(k) {\n            if (Router.pathname.includes(`[${k}]`)) {\n                delete query[k]\n            }\n        })\n\n        const url = { pathname: Router.pathname, query }\n        const urlAs = { pathname: basePath, query }\n\n        Router.push(url, urlAs)\n        document.documentElement.lang = lang\n        document.body.style.direction = lang === 'ar' ? 'rtl' : 'ltr'\n        document.body.style.textAlign = lang === 'ar' ? 'right' : ''\n    }\n\n    return (\n        <PopupState variant=\"popover\" popupId=\"lang-popup-menu\">\n            {(popupState) => (\n                <React.Fragment>\n                    <Button\n                        className={className || \"\"}\n                        style={isPortal ? {textTransform: \"none\"} : null}\n                        startIcon={<Avatar classes={{ root: classes.root }} variant=\"rounded\" src={`/imgs/flags/icons/${locale}.png`} />}\n                        {...bindTrigger(popupState)}\n                        endIcon={<ExpandMoreIcon />}\n                    >\n                        {languageNames[locale]}\n                    </Button>\n                    <Menu\n                        {...bindMenu(popupState)}\n                        getContentAnchorEl={null}\n                        anchorOrigin= {{\n                            vertical: \"bottom\",\n                            horizontal: \"left\"\n                        }}\n                        transformOrigin={{\n                            vertical: \"top\",\n                            horizontal: \"left\"\n                        }}\n                    >\n                        {getLocales().map((locale) => (\n                            <MenuItem\n                                classes={{ root: classes.listItem }}\n                                key={locale}\n                                onClick={() => {\n                                    handleLocaleChange(locale)\n                                    popupState.close()\n                                }}>\n                                <ListItemIcon classes={{ root: classes.listItemIcon }}>\n                                    <Avatar classes={{ root: classes.root }} variant=\"rounded\" src={`/imgs/flags/icons/${locale}.png`} />\n                                </ListItemIcon>\n                                <ListItemText classes={{ root: classes.listItemText }} primary={languageNames[locale]}/>\n                            </MenuItem>\n                        ))}\n                    </Menu>\n                </React.Fragment>\n            )}\n        </PopupState>\n    )\n}\nexport default LocaleSwitcher\n"]},"metadata":{},"sourceType":"module"}