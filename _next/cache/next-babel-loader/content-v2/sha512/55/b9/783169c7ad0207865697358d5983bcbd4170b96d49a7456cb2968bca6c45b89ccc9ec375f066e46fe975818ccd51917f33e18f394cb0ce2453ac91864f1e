{"ast":null,"code":"import _defineProperty from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _extends from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/mata/app-cloudweb/components/LoginComponent/LoginComponent.js\",\n    _s = $RefreshSig$(),\n    _this = this,\n    _s3 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { resetState as _resetState, setToState as _setToState, updateState as _updateState } from 'state/actions';\nimport styles from './style/LoginComponent.style';\nimport { makeStyles } from '@material-ui/core/styles';\nimport WebCmsGlobal from 'components/webcms-global';\nimport { useOrestAction } from 'model/orest';\nimport { AuthLogin, UseOrest } from '@webcms/orest';\nimport moment from 'moment';\nimport { DatePicker, LocalizationProvider, MobileDatePicker } from '@material-ui/pickers';\nimport MomentAdapter from '@date-io/moment';\nimport { Button, Checkbox, CircularProgress, FormControlLabel, Grid, Tab, Tabs, TextField, Typography } from '@material-ui/core';\nimport { Email, Person, Phone, Room, RoomService } from '@material-ui/icons';\nimport { LOCAL_STORAGE_EMAIL, LOCAL_STORAGE_OREST_HOTELNAME_TEXT, LOCAL_STORAGE_OREST_HOTELREFNO_TEXT, LOCAL_STORAGE_OREST_TOKEN_TEXT, LOCAL_STORAGE_PHONE_NUMBER, LOCAL_STORAGE_REMEMBER_ME, mobileTelNoFormat } from 'model/orest/constants';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nimport Router, { useRouter } from 'next/router';\nimport PhoneInput from '../../@webcms-ui/core/phone-input';\nimport Update from 'components/guest/account/Client/Update';\nimport GuestSelection from 'components/guest/account/Details/GuestSelection';\nimport { useHotelInfoAction } from 'model/orest/components/ChangeHotel/redux_store';\nimport { useSnackbar } from 'notistack';\nimport clsx from 'clsx';\nimport Alert from '@material-ui/lab/Alert';\nimport { defaultLocale } from 'lib/translations/config';\nvar useStyles = makeStyles(styles);\n\nfunction TabPanel(props) {\n  _s();\n\n  var children = props.children,\n      value = props.value,\n      index = props.index,\n      other = _objectWithoutProperties(props, [\"children\", \"value\", \"index\"]);\n\n  var classes = useStyles();\n  return __jsx(Typography, _extends({\n    component: \"div\",\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: \"scrollable-auto-tabpanel-\".concat(index),\n    \"aria-labelledby\": \"scrollable-auto-tab-\".concat(index),\n    className: classes.tabPanel\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), value === index && __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 33\n    }\n  }, children));\n}\n\n_s(TabPanel, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = TabPanel;\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: \"scrollable-auto-tab-\".concat(index),\n    'aria-controls': \"scrollable-auto-tabpanel-\".concat(index)\n  };\n}\n\nvar urlFixer = function urlFixer(retUrl, lang, suffix) {\n  var isLang = !!lang;\n\n  if (isLang) {\n    return retUrl + \"\".concat(suffix, \"lang=\").concat(lang);\n  } else {\n    return retUrl;\n  }\n};\n\nvar LoginComponent = function LoginComponent(props) {\n  _s3();\n\n  var _GENERAL_SETTINGS$hot, _GENERAL_SETTINGS$hot2, _GENERAL_SETTINGS$hot3, _GENERAL_SETTINGS$hot4, _GENERAL_SETTINGS$hot5, _GENERAL_SETTINGS$hot6, _loginComponentTypeLi, _clsx6, _GENERAL_SETTINGS$hot7, _GENERAL_SETTINGS$hot8, _GENERAL_SETTINGS$hot9, _GENERAL_SETTINGS$hot10, _GENERAL_SETTINGS$hot11, _GENERAL_SETTINGS$hot12, _GENERAL_SETTINGS$hot13, _GENERAL_SETTINGS$hot14, _clsx9, _clsx10;\n\n  var _useContext = useContext(WebCmsGlobal),\n      GENERAL_SETTINGS = _useContext.GENERAL_SETTINGS,\n      locale = _useContext.locale;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var router = useRouter();\n  var state = props.state,\n      locationName = props.locationName,\n      redirectUrl = props.redirectUrl,\n      isOnlyEmail = props.isOnlyEmail,\n      isUserPortalLogin = props.isUserPortalLogin,\n      isEmpPortal = props.isEmpPortal,\n      updateState = props.updateState,\n      isCloudWikiLogin = props.isCloudWikiLogin,\n      setWikiLoginDialog = props.setWikiLoginDialog,\n      isLoginWrapper = props.isLoginWrapper,\n      noQuery = props.noQuery,\n      setToState = props.setToState,\n      getEmail = props.getEmail;\n  var emailParam = !noQuery && router.query.email || '';\n  var passParam = !noQuery && router.query.pass || '';\n  var refUrlParam = router.query.refurl;\n  var isKiosk = router.query.kiosk === 'true';\n\n  var _useSnackbar = useSnackbar(),\n      enqueueSnackbar = _useSnackbar.enqueueSnackbar; //redux\n\n\n  var _useOrestAction = useOrestAction(),\n      setOrestState = _useOrestAction.setOrestState,\n      setOrestUserInfo = _useOrestAction.setOrestUserInfo,\n      deleteOrestCurrentUserInfo = _useOrestAction.deleteOrestCurrentUserInfo;\n\n  var _useHotelInfoAction = useHotelInfoAction(),\n      setHotelRefNo = _useHotelInfoAction.setHotelRefNo,\n      setHotelName = _useHotelInfoAction.setHotelName,\n      setHotelRefNoIsInitializing = _useHotelInfoAction.setHotelRefNoIsInitializing,\n      updateLicenceMenuStatus = _useHotelInfoAction.updateLicenceMenuStatus; //state\n\n\n  var _useState = useState(emailParam || ''),\n      username = _useState[0],\n      setUsername = _useState[1];\n\n  var _useState2 = useState(passParam || ''),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useState3 = useState(null),\n      birthDate = _useState3[0],\n      setBirthDate = _useState3[1];\n\n  var _useState4 = useState(false),\n      isLoggingIn = _useState4[0],\n      setIsLoggingIn = _useState4[1];\n\n  var _useState5 = useState(0),\n      tabValue = _useState5[0],\n      setTabValue = _useState5[1];\n\n  var _useState6 = useState(false),\n      isPrevControl = _useState6[0],\n      setIsPrevControl = _useState6[1];\n\n  var _useState7 = useState({}),\n      getAuthInfo = _useState7[0],\n      setAuthInfo = _useState7[1];\n\n  var _useState8 = useState({}),\n      getLoginInfo = _useState8[0],\n      setLoginInfo = _useState8[1];\n\n  var _useState9 = useState(true),\n      isEmail = _useState9[0],\n      setIsEmail = _useState9[1];\n\n  var _useState10 = useState(false),\n      isPhoneNumber = _useState10[0],\n      setIsPhoneNumber = _useState10[1];\n\n  var _useState11 = useState(false),\n      rememberMe = _useState11[0],\n      setRememberMe = _useState11[1];\n\n  var _useState12 = useState({\n    isVisible: false,\n    isLoading: false,\n    data: false\n  }),\n      useGuestSelection = _useState12[0],\n      setUseGuestSelection = _useState12[1]; //settings\n\n\n  var allowedRoles = ['6500315', '6500300', '6500310'];\n  var colorObject = {\n    backgroundColor: isUserPortalLogin ? '#063E8D' : isEmpPortal ? '#064E42' : 'inherit',\n    hoverColor: isUserPortalLogin ? 'rgb(6, 62, 141, 0.8)' : isEmpPortal ? '#4E8179' : 'inherit',\n    borderColor: isUserPortalLogin ? '#063E8D' : isEmpPortal ? '#064E42' : 'inherit',\n    labelColor: isUserPortalLogin ? '#063E8D' : isEmpPortal ? '#064E42' : 'inherit',\n    checkboxColor: isUserPortalLogin ? '#4666B0' : isEmpPortal ? '#4E8179' : 'inherit'\n  };\n  var classes = useStyles(colorObject);\n  useEffect(function () {\n    if (emailParam && passParam) {\n      handleClickLogin();\n    }\n\n    var localRememberMe = localStorage.getItem(LOCAL_STORAGE_REMEMBER_ME) ? localStorage.getItem(LOCAL_STORAGE_REMEMBER_ME) !== 'false' : false;\n    var localUsername = localStorage.getItem(LOCAL_STORAGE_EMAIL) ? localStorage.getItem(LOCAL_STORAGE_EMAIL) : \"\";\n    var localPhoneNumber = localStorage.getItem(LOCAL_STORAGE_PHONE_NUMBER) ? localStorage.getItem(LOCAL_STORAGE_PHONE_NUMBER) : \"\";\n\n    if (localRememberMe && localRememberMe !== false) {\n      if (isEmail) {\n        setUsername(localUsername);\n        setRememberMe(localRememberMe);\n      } else if (isPhoneNumber) {\n        setUsername(localPhoneNumber);\n        setRememberMe(localRememberMe);\n      }\n    }\n\n    deleteOrestCurrentUserInfo();\n  }, [isEmail]);\n  useEffect(function () {\n    typeof getEmail === 'function' && getEmail(username);\n  }, [username]);\n\n  var handleOnChangeCheckBox = function handleOnChangeCheckBox(event) {\n    setRememberMe(event.target.checked);\n  };\n\n  var handleCheckPrv = function handleCheckPrv(client) {\n    if (locationName === \"guest\") {\n      return client && client.hasdatapolicy === true && client.haspref === true;\n    } else if (locationName === \"survey\") {\n      return client && client.hasdatapolicy === true;\n    } else {\n      return true;\n    }\n  };\n\n  var handleUsernameChange = function handleUsernameChange(e, type) {\n    var value;\n\n    if (type === 'phone') {\n      value = e;\n    } else {\n      value = e.target.value;\n    }\n\n    setUsername(value);\n  };\n\n  var handlePasswordChange = function handlePasswordChange(e) {\n    setPassword(e.target.value);\n  };\n\n  var handleBirthChange = function handleBirthChange(e) {\n    setBirthDate(e);\n    setPassword(moment(e).locale(defaultLocale).format('DDMMYYYY'));\n  };\n\n  var checkLicenceMenuStatus = function checkLicenceMenuStatus(infoAuth, infoLogin) {\n    return UseOrest({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: 'info/hotel',\n      token: infoAuth.access_token,\n      params: {\n        keyval: infoLogin.hotelrefno\n      }\n    }).then(function (infoHotelResponse) {\n      if (!infoHotelResponse.data.data.ischain) {\n        updateLicenceMenuStatus(true);\n        localStorage.setItem('licenceMenuStatus', 'true');\n        return true;\n      } else {\n        updateLicenceMenuStatus(false);\n        localStorage.setItem('licenceMenuStatus', 'false');\n        return true;\n      }\n    })[\"catch\"](function () {\n      return false;\n    });\n  };\n\n  var loginOptions = {\n    hasemail: ((_GENERAL_SETTINGS$hot = GENERAL_SETTINGS.hotelSettings) === null || _GENERAL_SETTINGS$hot === void 0 ? void 0 : _GENERAL_SETTINGS$hot.hasemail) || false,\n    hasreserv: ((_GENERAL_SETTINGS$hot2 = GENERAL_SETTINGS.hotelSettings) === null || _GENERAL_SETTINGS$hot2 === void 0 ? void 0 : _GENERAL_SETTINGS$hot2.hasreserv) || false,\n    hastel: ((_GENERAL_SETTINGS$hot3 = GENERAL_SETTINGS.hotelSettings) === null || _GENERAL_SETTINGS$hot3 === void 0 ? void 0 : _GENERAL_SETTINGS$hot3.hastel) || false,\n    hasroom: ((_GENERAL_SETTINGS$hot4 = GENERAL_SETTINGS.hotelSettings) === null || _GENERAL_SETTINGS$hot4 === void 0 ? void 0 : _GENERAL_SETTINGS$hot4.hasroom) || false,\n    haslastname: ((_GENERAL_SETTINGS$hot5 = GENERAL_SETTINGS.hotelSettings) === null || _GENERAL_SETTINGS$hot5 === void 0 ? void 0 : _GENERAL_SETTINGS$hot5.haslastname) || false\n  };\n  var loginTypeCodeList = {\n    room: 'ROOM',\n    reservation: 'RESERVATION',\n    email: 'EMAIL',\n    tel: 'TEL',\n    lastname: 'LASTNAME'\n  };\n  var loginTypeOrderList = {\n    room: 1,\n    reservation: (_GENERAL_SETTINGS$hot6 = GENERAL_SETTINGS.hotelSettings) !== null && _GENERAL_SETTINGS$hot6 !== void 0 && _GENERAL_SETTINGS$hot6.login_withci ? -1 : 2,\n    email: emailParam && -99 || 3,\n    tel: 4,\n    lastname: 5\n  };\n  var loginComponentTypeList = [{\n    label: t('str_room') + '#',\n    icon: __jsx(Room, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 19\n      }\n    }),\n    order: loginTypeOrderList.room,\n    isHide: !loginOptions.hasroom || isUserPortalLogin || isEmpPortal || false,\n    loginType: 'roomno',\n    loginTypeCode: loginTypeCodeList.room\n  }, {\n    label: t('str_reservation') + '#',\n    icon: __jsx(RoomService, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 19\n      }\n    }),\n    order: loginTypeOrderList.reservation,\n    isHide: !loginOptions.hasreserv || isUserPortalLogin || isEmpPortal || false,\n    loginType: 'refcode',\n    loginTypeCode: loginTypeCodeList.reservation\n  }, {\n    label: t('str_email'),\n    icon: __jsx(Email, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 19\n      }\n    }),\n    order: loginTypeOrderList.email,\n    isHide: !loginOptions.hasemail || false,\n    loginType: 'email',\n    loginTypeCode: loginTypeCodeList.email\n  }, {\n    label: t('str_phone'),\n    icon: __jsx(Phone, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 19\n      }\n    }),\n    order: loginTypeOrderList.tel,\n    isHide: !loginOptions.hastel || false,\n    loginType: 'mobile',\n    loginTypeCode: loginTypeCodeList.tel\n  }, {\n    label: t('str_lastName'),\n    icon: __jsx(Person, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 19\n      }\n    }),\n    order: loginTypeOrderList.lastname,\n    isHide: !loginOptions.haslastname || isUserPortalLogin || isEmpPortal || false,\n    loginType: 'refcode',\n    loginTypeCode: loginTypeCodeList.lastname\n  }];\n\n  var _useState13 = useState(emailParam && 'email' || ((_loginComponentTypeLi = loginComponentTypeList.sort(function (a, b) {\n    return a.order - b.order;\n  }).filter(function (item) {\n    return !item.isHide;\n  })[0]) === null || _loginComponentTypeLi === void 0 ? void 0 : _loginComponentTypeLi.loginType) || false),\n      loginTypeSelect = _useState13[0],\n      setLoginTypeSelect = _useState13[1];\n\n  if (!loginTypeSelect) {\n    return __jsx(Alert, {\n      variant: \"outlined\",\n      severity: \"warning\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 13\n      }\n    }, t('str_validLoginTypeDoesNotExist'));\n  }\n\n  var doAuthLogin = function doAuthLogin(authData) {\n    return AuthLogin({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      data: authData\n    }).then(function (authLoginResponse) {\n      if (authLoginResponse !== null && authLoginResponse !== void 0 && authLoginResponse.data) {\n        return authLoginResponse;\n      } else {\n        return authLoginResponse;\n      }\n    })[\"catch\"](function (error) {\n      return error;\n    });\n  };\n\n  var authStatusAllowed = function authStatusAllowed(statusCode) {\n    return statusCode === 200;\n  };\n\n  var showAuthRelatedErrorMessage = function showAuthRelatedErrorMessage(infoAuth) {\n    if (infoAuth.status === 400) {\n      setIsLoggingIn(false);\n      enqueueSnackbar('Username or Password Wrong!', {\n        variant: 'error'\n      });\n    } else if (infoAuth.status === 403) {\n      setIsLoggingIn(false);\n      enqueueSnackbar('You blocked! Try again in ' + infoAuth.data.blockdurationmin + ' minute(s)', {\n        variant: 'error'\n      });\n    } else if (infoAuth.status === 500) {\n      setIsLoggingIn(false);\n      enqueueSnackbar(t('str_checkCredentials'), {\n        variant: 'error'\n      });\n    } else if (infoAuth.status === 0) {\n      setIsLoggingIn(false);\n      enqueueSnackbar('No internet connection!', {\n        variant: 'error'\n      });\n    } else {\n      setIsLoggingIn(false);\n      enqueueSnackbar('Login Error!', {\n        variant: 'error'\n      });\n    }\n  };\n\n  var useLoginInfo = function useLoginInfo(infoAuth) {\n    return UseOrest({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: 'info/login',\n      token: infoAuth.data.access_token\n    }).then(function (infoLoginResponse) {\n      var _infoLoginResponse$da;\n\n      if (infoLoginResponse !== null && infoLoginResponse !== void 0 && (_infoLoginResponse$da = infoLoginResponse.data) !== null && _infoLoginResponse$da !== void 0 && _infoLoginResponse$da.data) {\n        return infoLoginResponse.data.data;\n      } else {\n        return false;\n      }\n    })[\"catch\"](function () {\n      return false;\n    });\n  };\n\n  var useClientLoginId = function useClientLoginId(_ref) {\n    var infoAuth = _ref.infoAuth,\n        refCode = _ref.refCode,\n        birthDate = _ref.birthDate,\n        hotelRefNo = _ref.hotelRefNo;\n    return UseOrest({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: 'client/loginid',\n      method: 'PUT',\n      token: infoAuth.data.access_token,\n      params: {\n        refcode: refCode,\n        birthdate: birthDate,\n        hotelrefno: hotelRefNo\n      }\n    }).then(function (clientLoginIdResponse) {\n      var _clientLoginIdRespons;\n\n      return clientLoginIdResponse.status === 200 && (clientLoginIdResponse === null || clientLoginIdResponse === void 0 ? void 0 : (_clientLoginIdRespons = clientLoginIdResponse.data) === null || _clientLoginIdRespons === void 0 ? void 0 : _clientLoginIdRespons.data);\n    })[\"catch\"](function () {\n      return false;\n    });\n  };\n\n  var useReservatClientList = function useReservatClientList(_ref2) {\n    var infoAuth = _ref2.infoAuth,\n        reservNo = _ref2.reservNo;\n    return UseOrest({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: 'reservat/client/list',\n      token: infoAuth.data.access_token,\n      params: {\n        field: 'reservno',\n        text: reservNo,\n        sort: 'paxno',\n        allhotels: true\n      }\n    }).then(function (reservatClientListResponse) {\n      var _reservatClientListRe, _reservatClientListRe2;\n\n      return reservatClientListResponse.status === 200 && (reservatClientListResponse === null || reservatClientListResponse === void 0 ? void 0 : (_reservatClientListRe = reservatClientListResponse.data) === null || _reservatClientListRe === void 0 ? void 0 : _reservatClientListRe.data.length) > 1 && (reservatClientListResponse === null || reservatClientListResponse === void 0 ? void 0 : (_reservatClientListRe2 = reservatClientListResponse.data) === null || _reservatClientListRe2 === void 0 ? void 0 : _reservatClientListRe2.data);\n    })[\"catch\"](function () {\n      return false;\n    });\n  };\n\n  var getLoginTypeInfo = function getLoginTypeInfo() {\n    return loginComponentTypeList.sort(function (a, b) {\n      return a.order - b.order;\n    }).filter(function (item) {\n      return !item.isHide;\n    })[tabValue];\n  };\n\n  var useAuthData = function useAuthData() {\n    var authData = {\n      grant_type: 'password',\n      client_id: 'orestClient',\n      client_secret: 'top_secret',\n      username: username,\n      password: password,\n      hotelrefno: GENERAL_SETTINGS.useHotelRefno\n    };\n\n    if (state.changeHotelRefno) {\n      authData.hotelrefno = state.changeHotelRefno;\n    }\n\n    if (loginTypeSelect !== 'email') {\n      authData.logintype = loginTypeSelect;\n    }\n\n    if (loginTypeSelect === 'mobile') {\n      authData.username = mobileTelNoFormat(authData.username);\n    }\n\n    if (isOnlyEmail) {\n      delete authData.logintype;\n    }\n\n    return authData;\n  };\n\n  var handleClickLogin = /*#__PURE__*/function () {\n    var _s2 = $RefreshSig$();\n\n    var _ref3 = _asyncToGenerator(_s2( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var authData, infoAuth, infoLogin, infoClientLoginId, infoReservatClientList;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _s2();\n\n              setIsLoggingIn(true);\n              setHotelRefNoIsInitializing(true);\n              authData = useAuthData();\n              _context.next = 6;\n              return doAuthLogin(authData);\n\n            case 6:\n              infoAuth = _context.sent;\n              setAuthInfo(infoAuth.data);\n\n              if (authStatusAllowed(infoAuth.status)) {\n                _context.next = 11;\n                break;\n              }\n\n              showAuthRelatedErrorMessage(infoAuth.status);\n              return _context.abrupt(\"return\", false);\n\n            case 11:\n              _context.next = 13;\n              return useLoginInfo(infoAuth);\n\n            case 13:\n              infoLogin = _context.sent;\n              setLoginInfo(infoLogin);\n\n              if (!(getLoginTypeInfo().loginTypeCode === loginTypeCodeList.lastname)) {\n                _context.next = 26;\n                break;\n              }\n\n              _context.next = 18;\n              return useClientLoginId({\n                infoAuth: infoAuth,\n                refCode: authData.username,\n                birthDate: moment(birthDate).locale(defaultLocale).format('YYYY-MM-DD'),\n                hotelRefNo: authData.hotelrefno\n              });\n\n            case 18:\n              infoClientLoginId = _context.sent;\n\n              if (!(infoClientLoginId.ismulti && infoClientLoginId.reservno)) {\n                _context.next = 26;\n                break;\n              }\n\n              _context.next = 22;\n              return useReservatClientList({\n                infoAuth: infoAuth,\n                reservNo: infoClientLoginId.reservno\n              });\n\n            case 22:\n              infoReservatClientList = _context.sent;\n\n              if (!infoReservatClientList) {\n                _context.next = 26;\n                break;\n              }\n\n              setUseGuestSelection({\n                isVisible: true,\n                data: infoReservatClientList\n              });\n              return _context.abrupt(\"return\", true);\n\n            case 26:\n              setOrestState(['isLoginWithOtherGuest'], false);\n              setIsLoggingIn(false);\n\n              if (!(locationName === 'guest' && !allowedRoles.includes(infoLogin.roletype))) {\n                _context.next = 31;\n                break;\n              }\n\n              enqueueSnackbar(t('str_yourLoggedInUserRoleIsInvalid'), {\n                variant: 'warning'\n              });\n              return _context.abrupt(\"return\", true);\n\n            case 31:\n              if (!state.profile.loadGuest) {\n                setToState('guest', ['profile', 'loadGuest'], true);\n              }\n\n              if (rememberMe) {\n                localStorage.setItem(LOCAL_STORAGE_REMEMBER_ME, rememberMe.toString());\n                localStorage.setItem(LOCAL_STORAGE_EMAIL, username);\n              } else {\n                localStorage.setItem(LOCAL_STORAGE_REMEMBER_ME, rememberMe.toString());\n                localStorage.removeItem(LOCAL_STORAGE_EMAIL);\n              }\n\n              if (!(!isKiosk && !handleCheckPrv(infoLogin) && infoLogin.authorities.find(function (item) {\n                return item.authority === 'CLIENT';\n              }))) {\n                _context.next = 37;\n                break;\n              }\n\n              setIsPrevControl(true);\n              _context.next = 41;\n              break;\n\n            case 37:\n              _context.next = 39;\n              return getClientInfoLoader(infoAuth.data, infoLogin);\n\n            case 39:\n              _context.next = 41;\n              return checkLicenceMenuStatus(infoAuth.data, infoLogin);\n\n            case 41:\n              if (isCloudWikiLogin) {\n                setWikiLoginDialog(false);\n              }\n\n            case 42:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }), \"XlWDRngfMwDt5QlV29jwgyjarVo=\", false, function () {\n      return [useAuthData, useLoginInfo, useClientLoginId, useReservatClientList];\n    }));\n\n    return function handleClickLogin() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var getClientInfoLoader = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(authInfo, loginInfo, otherGuestResname) {\n      var auth, loginfo, allLogInfo, refUrlDec;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              auth = authInfo || getAuthInfo;\n              loginfo = loginInfo || getLoginInfo;\n              allLogInfo = {\n                auth: auth,\n                loginfo: loginfo,\n                otherGuestResname: otherGuestResname\n              };\n              localStorage.setItem(LOCAL_STORAGE_OREST_HOTELREFNO_TEXT, loginfo.hotelrefno);\n              localStorage.setItem(LOCAL_STORAGE_OREST_HOTELNAME_TEXT, loginfo.hotelname);\n              localStorage.setItem(LOCAL_STORAGE_OREST_TOKEN_TEXT, auth && loginfo && \"{\\\"auth\\\": \".concat(JSON.stringify(auth), \",\\\"loginfo\\\": \").concat(JSON.stringify(loginfo), \" \").concat(otherGuestResname ? \",\\\"otherGuestResname\\\": \".concat(JSON.stringify(otherGuestResname), \"}\") : '}') || null);\n              setHotelRefNoIsInitializing(false);\n              setHotelName(loginfo.hotelname);\n              setHotelRefNo(loginfo.hotelrefno);\n\n              if (!(loginfo.roletype === '6500310' && loginfo !== null && loginfo !== void 0 && loginfo.accgid)) {\n                _context2.next = 14;\n                break;\n              }\n\n              _context2.next = 12;\n              return UseOrest({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: 'client/view/get',\n                token: auth.access_token,\n                params: {\n                  gid: loginfo.accgid,\n                  allhotels: true\n                }\n              }).then(function (clientGetResponse) {\n                var _clientGetResponse$da;\n\n                if (clientGetResponse.status === 200 && clientGetResponse !== null && clientGetResponse !== void 0 && (_clientGetResponse$da = clientGetResponse.data) !== null && _clientGetResponse$da !== void 0 && _clientGetResponse$da.data) {\n                  var clientGetResponseData = clientGetResponse.data.data;\n                  setOrestState(['client'], clientGetResponseData);\n                }\n              });\n\n            case 12:\n              _context2.next = 14;\n              return UseOrest({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: 'client/reservno',\n                token: auth.access_token,\n                params: {\n                  clientid: loginfo.accid,\n                  isgapp: true\n                }\n              }).then(function (clientReservnoResponse) {\n                var _clientReservnoRespon;\n\n                if (clientReservnoResponse !== null && clientReservnoResponse !== void 0 && (_clientReservnoRespon = clientReservnoResponse.data) !== null && _clientReservnoRespon !== void 0 && _clientReservnoRespon.data) {\n                  if (!GENERAL_SETTINGS.ISPORTAL) {\n                    updateState('guest', 'changeHotelRefno', clientReservnoResponse.data.data.hotelrefno);\n                    updateState('guest', 'changeHotelName', clientReservnoResponse.data.data.hotelname);\n                  }\n\n                  updateState('guest', 'clientReservation', clientReservnoResponse.data.data);\n                  updateState('guest', 'totalPax', clientReservnoResponse.data.data.totalpax || 1);\n                  updateState('guest', 'totalChd', clientReservnoResponse.data.data.totalchd || 0);\n                } else {\n                  updateState('guest', 'clientReservation', null);\n                }\n              })[\"catch\"](function () {\n                updateState('guest', 'clientReservation', null);\n              });\n\n            case 14:\n              setOrestUserInfo(allLogInfo);\n              enqueueSnackbar(t('str_loggedIn'), {\n                variant: 'success'\n              });\n\n              if (redirectUrl) {\n                if (redirectUrl.includes('/hup')) {\n                  window.location.href = urlFixer(redirectUrl, loginfo.langshort, '?');\n                } else {\n                  if (refUrlParam) {\n                    refUrlDec = decodeURIComponent(refUrlParam);\n\n                    if (refUrlParam.includes('eventlocid')) {\n                      Router.push(urlFixer(refUrlDec, loginfo.langshort, '&'));\n                    } else {\n                      if (!refUrlDec.includes('?lang')) {\n                        if (refUrlDec.includes('&')) {\n                          Router.push(urlFixer(refUrlDec, loginfo.langshort, '&'));\n                        } else {\n                          Router.push(urlFixer(refUrlDec, loginfo.langshort, '&'));\n                        }\n                      } else {\n                        Router.push(refUrlDec);\n                      }\n                    }\n                  } else {\n                    Router.push(urlFixer(redirectUrl, loginfo.langshort, '?'));\n                  }\n                }\n              }\n\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function getClientInfoLoader(_x, _x2, _x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var handleKeyLogin = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(event) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!(event.keyCode === 13)) {\n                _context3.next = 4;\n                break;\n              }\n\n              _context3.next = 3;\n              return handleClickLogin();\n\n            case 3:\n              event.preventDefault();\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function handleKeyLogin(_x4) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  if (isOnlyEmail) {\n    return __jsx(Grid, {\n      container: true,\n      className: classes.gridContainer,\n      spacing: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 13\n      }\n    }, __jsx(Grid, {\n      item: true,\n      xs: 12,\n      className: classes.gridItem,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 17\n      }\n    }, __jsx(TextField, {\n      disabled: isLoggingIn,\n      variant: \"filled\",\n      required: true,\n      fullWidth: true,\n      id: \"username\",\n      name: \"username\",\n      label: t('str_email'),\n      value: username,\n      onChange: handleUsernameChange,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 21\n      }\n    })), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      className: classes.gridItem,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 17\n      }\n    }, __jsx(TextField, {\n      disabled: isLoggingIn,\n      onKeyDown: function onKeyDown(e) {\n        return handleKeyLogin(e);\n      },\n      variant: \"filled\",\n      required: true,\n      fullWidth: true,\n      id: \"userpassword\",\n      name: \"userpassword\",\n      type: \"password\",\n      label: t('str_password'),\n      value: password,\n      onChange: handlePasswordChange,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 21\n      }\n    })), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      className: classes.gridItem,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 607,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: classes.wrapper,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 21\n      }\n    }, __jsx(Button, {\n      onClick: handleClickLogin,\n      disabled: isLoggingIn,\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"large\",\n      disableElevation: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 25\n      }\n    }, t('str_login'), isLoggingIn && __jsx(CircularProgress, {\n      size: 24,\n      className: classes.buttonProgress,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 45\n      }\n    })))));\n  }\n\n  var getTabIndex = function getTabIndex(newValue) {\n    var _getIndex$newValue;\n\n    var getIndex = loginComponentTypeList.filter(function (item) {\n      return !item.isHide;\n    });\n    return ((_getIndex$newValue = getIndex[newValue]) === null || _getIndex$newValue === void 0 ? void 0 : _getIndex$newValue.order) || loginComponentTypeList[0].order;\n  };\n\n  var handleChangeTab = function handleChangeTab(event, newValue) {\n    var _loginComponentTypeLi2;\n\n    var getIndex = getTabIndex(newValue);\n\n    if (getIndex === loginTypeOrderList.email) {\n      setIsEmail(true);\n      setIsPhoneNumber(false);\n    } else if (getIndex === loginTypeOrderList.tel) {\n      setIsEmail(false);\n      setIsPhoneNumber(true);\n    } else {\n      setIsEmail(false);\n      setIsPhoneNumber(false);\n    }\n\n    var getLoginType = ((_loginComponentTypeLi2 = loginComponentTypeList.filter(function (item) {\n      return item.order === getIndex;\n    })[0]) === null || _loginComponentTypeLi2 === void 0 ? void 0 : _loginComponentTypeLi2.loginType) || false;\n    setLoginTypeSelect(getLoginType);\n    setTabValue(newValue);\n  };\n\n  var renderLoginComponent = function renderLoginComponent(loginTypeCode) {\n    var _clsx, _clsx2, _clsx3, _clsx4, _clsx5;\n\n    switch (loginTypeCode) {\n      case loginTypeCodeList.room:\n        return __jsx(TextField, {\n          disabled: isLoggingIn,\n          className: clsx('', (_clsx = {}, _defineProperty(_clsx, classes.textFieldUserPortal, isUserPortalLogin || isEmpPortal), _defineProperty(_clsx, classes.textFieldDestinationPortal, isLoginWrapper), _clsx)),\n          variant: !isUserPortalLogin && !isLoginWrapper && !isEmpPortal ? 'filled' : 'outlined',\n          required: true,\n          fullWidth: true,\n          id: \"username\",\n          name: \"username\",\n          label: t('str_roomNo'),\n          value: username,\n          onKeyUp: handleUsernameChange,\n          onKeyDown: handleUsernameChange,\n          onChange: handleUsernameChange,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 654,\n            columnNumber: 21\n          }\n        });\n\n      case loginTypeCodeList.reservation:\n        return __jsx(TextField, {\n          disabled: isLoggingIn,\n          className: clsx('', (_clsx2 = {}, _defineProperty(_clsx2, classes.textFieldUserPortal, isUserPortalLogin || isEmpPortal), _defineProperty(_clsx2, classes.textFieldDestinationPortal, isLoginWrapper), _clsx2)),\n          color: 'primary',\n          variant: !isUserPortalLogin && !isLoginWrapper && !isEmpPortal ? 'filled' : 'outlined',\n          required: true,\n          fullWidth: true,\n          id: \"username\",\n          name: \"username\",\n          label: t('str_resNo'),\n          value: username,\n          onKeyUp: handleUsernameChange,\n          onKeyDown: handleUsernameChange,\n          onChange: handleUsernameChange,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 674,\n            columnNumber: 21\n          }\n        });\n\n      case loginTypeCodeList.email:\n        return __jsx(TextField, {\n          disabled: isLoggingIn,\n          className: clsx('', (_clsx3 = {}, _defineProperty(_clsx3, classes.textFieldUserPortal, isUserPortalLogin || isEmpPortal), _defineProperty(_clsx3, classes.textFieldDestinationPortal, isLoginWrapper), _clsx3)),\n          color: 'primary',\n          variant: !isUserPortalLogin && !isLoginWrapper && !isEmpPortal ? 'filled' : 'outlined',\n          required: true,\n          fullWidth: true,\n          id: \"username\",\n          name: \"username\",\n          label: t('str_email'),\n          value: username,\n          onKeyUp: handleUsernameChange,\n          onKeyDown: handleUsernameChange,\n          onChange: handleUsernameChange,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 695,\n            columnNumber: 21\n          }\n        });\n\n      case loginTypeCodeList.tel:\n        return __jsx(PhoneInput, {\n          disabled: isLoggingIn,\n          className: clsx('', (_clsx4 = {}, _defineProperty(_clsx4, classes.textFieldUserPortal, isUserPortalLogin), _defineProperty(_clsx4, classes.textFieldDestinationPortal, isLoginWrapper), _clsx4)),\n          defaultCountry: locale === 'en' ? 'us' : locale,\n          preferredCountries: ['it', 'ie', 'de', 'fr', 'es', 'gb'],\n          regions: ['america', 'europe', 'asia', 'oceania', 'africa'],\n          variant: !isUserPortalLogin && !isLoginWrapper && !isEmpPortal ? 'filled' : 'outlined',\n          id: \"username\",\n          name: \"username\",\n          label: t('str_phone'),\n          fullWidth: true,\n          value: username,\n          onChange: function onChange(e) {\n            return handleUsernameChange(e, 'phone');\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 716,\n            columnNumber: 21\n          }\n        });\n\n      case loginTypeCodeList.lastname:\n        return __jsx(TextField, {\n          disabled: isLoggingIn,\n          className: clsx('', (_clsx5 = {}, _defineProperty(_clsx5, classes.textFieldUserPortal, isUserPortalLogin || isEmpPortal), _defineProperty(_clsx5, classes.textFieldDestinationPortal, isLoginWrapper), _clsx5)),\n          color: 'primary',\n          variant: !isUserPortalLogin && !isLoginWrapper && !isEmpPortal ? 'filled' : 'outlined',\n          required: true,\n          fullWidth: true,\n          id: \"lastname\",\n          name: \"lastname\",\n          label: t('str_lastName'),\n          value: username,\n          onKeyUp: handleUsernameChange,\n          onKeyDown: handleUsernameChange,\n          onChange: handleUsernameChange,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 749,\n            columnNumber: 21\n          }\n        });\n    }\n  };\n\n  return __jsx(Grid, {\n    container: true,\n    className: classes.gridContainer,\n    spacing: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 773,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.gridItem,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 774,\n      columnNumber: 13\n    }\n  }, isPrevControl && getAuthInfo && locationName ? __jsx(Update, {\n    open: isPrevControl,\n    auth: getAuthInfo,\n    logInfo: getLoginInfo,\n    locationName: locationName,\n    onCallback: function onCallback(auth, loginInfo) {\n      return getClientInfoLoader(auth, loginInfo, false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 776,\n      columnNumber: 21\n    }\n  }) : null, useGuestSelection.isVisible ? __jsx(GuestSelection, {\n    open: useGuestSelection.isVisible,\n    isLoading: useGuestSelection.isLoading,\n    data: useGuestSelection.data || [],\n    auth: getAuthInfo,\n    logInfo: getLoginInfo,\n    onLoginCallback: function onLoginCallback(auth, loginInfo, otherGuestResname) {\n      return getClientInfoLoader(auth, loginInfo, otherGuestResname);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 785,\n      columnNumber: 21\n    }\n  }) : null, __jsx(Tabs, {\n    classes: {\n      root: isUserPortalLogin || isEmpPortal ? classes.tabsRootUserPortal : \"\",\n      indicator: isUserPortalLogin || isEmpPortal ? classes.tabsIndicatorUserPortal : classes.tabsIndicator\n    },\n    variant: isUserPortalLogin || isEmpPortal ? \"standard\" : \"fullWidth\",\n    value: tabValue,\n    onChange: handleChangeTab,\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 794,\n      columnNumber: 17\n    }\n  }, loginComponentTypeList.sort(function (a, b) {\n    return a.order - b.order;\n  }).filter(function (item) {\n    return !item.isHide;\n  }).map(function (loginCompenent, index) {\n    return __jsx(Tab, _extends({\n      key: index,\n      className: classes.loginTab,\n      label: loginCompenent.label,\n      icon: loginCompenent.icon\n    }, a11yProps(index), {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 807,\n        columnNumber: 29\n      }\n    }));\n  })), loginComponentTypeList.sort(function (a, b) {\n    return a.order - b.order;\n  }).filter(function (item) {\n    return !item.isHide;\n  }).map(function (loginCompenent, index) {\n    return __jsx(TabPanel, {\n      value: tabValue,\n      index: index,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 813,\n        columnNumber: 25\n      }\n    }, isUserPortalLogin || isLoginWrapper || isEmpPortal ? __jsx(\"div\", {\n      style: {\n        paddingTop: '16px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 814,\n        columnNumber: 83\n      }\n    }) : null, renderLoginComponent(loginCompenent.loginTypeCode));\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.gridItem,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 820,\n      columnNumber: 13\n    }\n  }, getTabIndex(tabValue) === loginTypeOrderList.email && __jsx(TextField, {\n    disabled: isLoggingIn,\n    className: clsx(\"\", (_clsx6 = {}, _defineProperty(_clsx6, classes.textFieldUserPortal, isUserPortalLogin || isEmpPortal), _defineProperty(_clsx6, classes.textFieldDestinationPortal, isLoginWrapper), _clsx6)),\n    variant: !isUserPortalLogin && !isLoginWrapper && !isEmpPortal ? \"filled\" : \"outlined\",\n    required: true,\n    fullWidth: true,\n    id: \"password\",\n    name: \"password\",\n    type: \"password\",\n    label: t('str_password'),\n    value: password,\n    inputProps: {\n      autoComplete: 'new-password'\n    },\n    onKeyDown: function onKeyDown(e) {\n      return handleKeyLogin(e);\n    },\n    onChange: handlePasswordChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 822,\n      columnNumber: 21\n    }\n  }), (getTabIndex(tabValue) === loginTypeOrderList.room || getTabIndex(tabValue) === loginTypeOrderList.reservation || getTabIndex(tabValue) === loginTypeOrderList.tel || getTabIndex(tabValue) === loginTypeOrderList.lastname) && __jsx(LocalizationProvider, {\n    dateLibInstance: moment,\n    dateAdapter: MomentAdapter,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 844,\n      columnNumber: 21\n    }\n  }, isKiosk ? __jsx(MobileDatePicker, {\n    allowKeyboardControl: true,\n    disabled: isLoggingIn,\n    autoOk: true,\n    id: \"birthdate\",\n    name: \"birthdate\",\n    label: (getTabIndex(tabValue) === loginTypeOrderList.reservation || getTabIndex(tabValue) === loginTypeOrderList.lastname) && (_GENERAL_SETTINGS$hot7 = GENERAL_SETTINGS.hotelSettings) !== null && _GENERAL_SETTINGS$hot7 !== void 0 && _GENERAL_SETTINGS$hot7.login_withci ? t('str_checkinDate') : t('str_birthDate'),\n    inputFormat: \"DD/MM/YYYY\",\n    disableFuture: !((getTabIndex(tabValue) === loginTypeOrderList.reservation || getTabIndex(tabValue) === loginTypeOrderList.room || getTabIndex(tabValue) === loginTypeOrderList.lastname) && (_GENERAL_SETTINGS$hot8 = GENERAL_SETTINGS.hotelSettings) !== null && _GENERAL_SETTINGS$hot8 !== void 0 && _GENERAL_SETTINGS$hot8.login_withci),\n    openTo: (getTabIndex(tabValue) === loginTypeOrderList.reservation || getTabIndex(tabValue) === loginTypeOrderList.room || getTabIndex(tabValue) === loginTypeOrderList.lastname) && (_GENERAL_SETTINGS$hot9 = GENERAL_SETTINGS.hotelSettings) !== null && _GENERAL_SETTINGS$hot9 !== void 0 && _GENERAL_SETTINGS$hot9.login_withci || birthDate ? 'date' : 'year',\n    views: (getTabIndex(tabValue) === loginTypeOrderList.reservation || getTabIndex(tabValue) === loginTypeOrderList.room || getTabIndex(tabValue) === loginTypeOrderList.lastname) && (_GENERAL_SETTINGS$hot10 = GENERAL_SETTINGS.hotelSettings) !== null && _GENERAL_SETTINGS$hot10 !== void 0 && _GENERAL_SETTINGS$hot10.login_withci ? ['date'] : ['year', 'month', 'date'],\n    value: birthDate,\n    onChange: function onChange(date) {\n      return handleBirthChange(date);\n    },\n    renderInput: function renderInput(props) {\n      var _clsx7;\n\n      return __jsx(TextField, _extends({}, props, {\n        className: clsx(\"\", (_clsx7 = {}, _defineProperty(_clsx7, classes.textFieldUserPortal, isUserPortalLogin || isEmpPortal), _defineProperty(_clsx7, classes.textFieldDestinationPortal, isLoginWrapper), _clsx7)),\n        required: true,\n        fullWidth: true,\n        variant: !isUserPortalLogin && !isLoginWrapper && !isEmpPortal ? \"filled\" : \"outlined\",\n        helperText: 'dd.mm.yyyy',\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 861,\n          columnNumber: 41\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 846,\n      columnNumber: 29\n    }\n  }) : __jsx(DatePicker, {\n    allowKeyboardControl: true,\n    disabled: isLoggingIn,\n    autoOk: true,\n    id: \"birthdate\",\n    name: \"birthdate\",\n    label: (getTabIndex(tabValue) === loginTypeOrderList.reservation || getTabIndex(tabValue) === loginTypeOrderList.room || getTabIndex(tabValue) === loginTypeOrderList.lastname) && (_GENERAL_SETTINGS$hot11 = GENERAL_SETTINGS.hotelSettings) !== null && _GENERAL_SETTINGS$hot11 !== void 0 && _GENERAL_SETTINGS$hot11.login_withci ? t('str_checkinDate') : t('str_birthDate'),\n    inputFormat: \"DD/MM/YYYY\",\n    disableFuture: !((getTabIndex(tabValue) === loginTypeOrderList.reservation || getTabIndex(tabValue) === loginTypeOrderList.room || getTabIndex(tabValue) === loginTypeOrderList.lastname) && (_GENERAL_SETTINGS$hot12 = GENERAL_SETTINGS.hotelSettings) !== null && _GENERAL_SETTINGS$hot12 !== void 0 && _GENERAL_SETTINGS$hot12.login_withci),\n    openTo: (getTabIndex(tabValue) === loginTypeOrderList.reservation || getTabIndex(tabValue) === loginTypeOrderList.room || getTabIndex(tabValue) === loginTypeOrderList.lastname) && (_GENERAL_SETTINGS$hot13 = GENERAL_SETTINGS.hotelSettings) !== null && _GENERAL_SETTINGS$hot13 !== void 0 && _GENERAL_SETTINGS$hot13.login_withci || birthDate ? 'date' : 'year',\n    views: (getTabIndex(tabValue) === loginTypeOrderList.reservation || getTabIndex(tabValue) === loginTypeOrderList.room || getTabIndex(tabValue) === loginTypeOrderList.lastname) && (_GENERAL_SETTINGS$hot14 = GENERAL_SETTINGS.hotelSettings) !== null && _GENERAL_SETTINGS$hot14 !== void 0 && _GENERAL_SETTINGS$hot14.login_withci ? ['date'] : ['year', 'month', 'date'],\n    value: birthDate,\n    onChange: function onChange(date) {\n      return handleBirthChange(date);\n    },\n    renderInput: function renderInput(props) {\n      var _clsx8;\n\n      return __jsx(TextField, _extends({}, props, {\n        required: true,\n        className: clsx(\"\", (_clsx8 = {}, _defineProperty(_clsx8, classes.textFieldUserPortal, isUserPortalLogin || isEmpPortal), _defineProperty(_clsx8, classes.textFieldDestinationPortal, isLoginWrapper), _clsx8)),\n        fullWidth: true,\n        variant: !isUserPortalLogin && !isLoginWrapper && !isEmpPortal ? \"filled\" : \"outlined\",\n        helperText: 'dd.mm.yyyy',\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 891,\n          columnNumber: 41\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 876,\n      columnNumber: 29\n    }\n  }))), isUserPortalLogin || isLoginWrapper || isEmpPortal ? __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 910,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    style: {\n      textAlign: \"left\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 911,\n      columnNumber: 25\n    }\n  }, __jsx(FormControlLabel, {\n    className: classes.formControlLabel,\n    checked: rememberMe,\n    onChange: function onChange(e) {\n      return handleOnChangeCheckBox(e);\n    },\n    control: __jsx(Checkbox, {\n      className: clsx(\"\", (_clsx9 = {}, _defineProperty(_clsx9, classes.checkboxUserPortal, isUserPortalLogin || isEmpPortal), _defineProperty(_clsx9, classes.checkboxDestinationPortal, isLoginWrapper), _clsx9)),\n      color: \"primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 917,\n        columnNumber: 37\n      }\n    }),\n    label: __jsx(Typography, {\n      className: clsx(\"\", (_clsx10 = {}, _defineProperty(_clsx10, classes.checkboxLabel, isUserPortalLogin || isEmpPortal), _defineProperty(_clsx10, classes.checkboxLabelDestinationPortal, isLoginWrapper), _clsx10)),\n      color: \"primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 926,\n        columnNumber: 37\n      }\n    }, t(\"str_rememberMe\")),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 912,\n      columnNumber: 29\n    }\n  }))) : null, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.gridItem,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 941,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: classes.wrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 942,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    className: clsx(classes.loginButton, _defineProperty({}, classes.loginButtonUserPortal, isUserPortalLogin || isEmpPortal)),\n    onClick: handleClickLogin,\n    disabled: isLoggingIn,\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    size: isUserPortalLogin ? \"medium\" : \"large\",\n    disableElevation: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 943,\n      columnNumber: 21\n    }\n  }, t('str_login')), isLoggingIn && __jsx(CircularProgress, {\n    size: 24,\n    className: classes.buttonProgress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 957,\n      columnNumber: 37\n    }\n  }))));\n};\n\n_s3(LoginComponent, \"1ULHbjVeqLScmTYo9LiLaY52+z4=\", false, function () {\n  return [useTranslation, useRouter, useSnackbar, useOrestAction, useHotelInfoAction, useStyles];\n});\n\n_c2 = LoginComponent;\nLoginComponent.propTypes = {\n  redirectUrl: PropTypes.string\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    state: state.formReducer.guest\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    resetState: function resetState() {\n      return dispatch(_resetState());\n    },\n    updateState: function updateState(stateType, stateName, value) {\n      return dispatch(_updateState(stateType, stateName, value));\n    },\n    setToState: function setToState(stateType, stateName, value) {\n      return dispatch(_setToState(stateType, stateName, value));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginComponent);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"LoginComponent\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/LoginComponent/LoginComponent.js"],"names":["React","useContext","useEffect","useState","PropTypes","connect","resetState","setToState","updateState","styles","makeStyles","WebCmsGlobal","useOrestAction","AuthLogin","UseOrest","moment","DatePicker","LocalizationProvider","MobileDatePicker","MomentAdapter","Button","Checkbox","CircularProgress","FormControlLabel","Grid","Tab","Tabs","TextField","Typography","Email","Person","Phone","Room","RoomService","LOCAL_STORAGE_EMAIL","LOCAL_STORAGE_OREST_HOTELNAME_TEXT","LOCAL_STORAGE_OREST_HOTELREFNO_TEXT","LOCAL_STORAGE_OREST_TOKEN_TEXT","LOCAL_STORAGE_PHONE_NUMBER","LOCAL_STORAGE_REMEMBER_ME","mobileTelNoFormat","useTranslation","Router","useRouter","PhoneInput","Update","GuestSelection","useHotelInfoAction","useSnackbar","clsx","Alert","defaultLocale","useStyles","TabPanel","props","children","value","index","other","classes","tabPanel","propTypes","node","any","isRequired","a11yProps","id","urlFixer","retUrl","lang","suffix","isLang","LoginComponent","GENERAL_SETTINGS","locale","t","router","state","locationName","redirectUrl","isOnlyEmail","isUserPortalLogin","isEmpPortal","isCloudWikiLogin","setWikiLoginDialog","isLoginWrapper","noQuery","getEmail","emailParam","query","email","passParam","pass","refUrlParam","refurl","isKiosk","kiosk","enqueueSnackbar","setOrestState","setOrestUserInfo","deleteOrestCurrentUserInfo","setHotelRefNo","setHotelName","setHotelRefNoIsInitializing","updateLicenceMenuStatus","username","setUsername","password","setPassword","birthDate","setBirthDate","isLoggingIn","setIsLoggingIn","tabValue","setTabValue","isPrevControl","setIsPrevControl","getAuthInfo","setAuthInfo","getLoginInfo","setLoginInfo","isEmail","setIsEmail","isPhoneNumber","setIsPhoneNumber","rememberMe","setRememberMe","isVisible","isLoading","data","useGuestSelection","setUseGuestSelection","allowedRoles","colorObject","backgroundColor","hoverColor","borderColor","labelColor","checkboxColor","handleClickLogin","localRememberMe","localStorage","getItem","localUsername","localPhoneNumber","handleOnChangeCheckBox","event","target","checked","handleCheckPrv","client","hasdatapolicy","haspref","handleUsernameChange","e","type","handlePasswordChange","handleBirthChange","format","checkLicenceMenuStatus","infoAuth","infoLogin","apiUrl","OREST_URL","endpoint","token","access_token","params","keyval","hotelrefno","then","infoHotelResponse","ischain","setItem","loginOptions","hasemail","hotelSettings","hasreserv","hastel","hasroom","haslastname","loginTypeCodeList","room","reservation","tel","lastname","loginTypeOrderList","login_withci","loginComponentTypeList","label","icon","order","isHide","loginType","loginTypeCode","sort","a","b","filter","item","loginTypeSelect","setLoginTypeSelect","doAuthLogin","authData","authLoginResponse","error","authStatusAllowed","statusCode","showAuthRelatedErrorMessage","status","variant","blockdurationmin","useLoginInfo","infoLoginResponse","useClientLoginId","refCode","hotelRefNo","method","refcode","birthdate","clientLoginIdResponse","useReservatClientList","reservNo","field","text","allhotels","reservatClientListResponse","length","getLoginTypeInfo","useAuthData","grant_type","client_id","client_secret","useHotelRefno","changeHotelRefno","logintype","infoClientLoginId","ismulti","reservno","infoReservatClientList","includes","roletype","profile","loadGuest","toString","removeItem","authorities","find","authority","getClientInfoLoader","authInfo","loginInfo","otherGuestResname","auth","loginfo","allLogInfo","hotelname","JSON","stringify","accgid","gid","clientGetResponse","clientGetResponseData","clientid","accid","isgapp","clientReservnoResponse","ISPORTAL","totalpax","totalchd","window","location","href","langshort","refUrlDec","decodeURIComponent","push","handleKeyLogin","keyCode","preventDefault","gridContainer","gridItem","wrapper","buttonProgress","getTabIndex","newValue","getIndex","handleChangeTab","getLoginType","renderLoginComponent","textFieldUserPortal","textFieldDestinationPortal","root","tabsRootUserPortal","indicator","tabsIndicatorUserPortal","tabsIndicator","map","loginCompenent","loginTab","paddingTop","autoComplete","date","textAlign","formControlLabel","checkboxUserPortal","checkboxDestinationPortal","checkboxLabel","checkboxLabelDestinationPortal","loginButton","loginButtonUserPortal","string","mapStateToProps","formReducer","guest","mapDispatchToProps","dispatch","stateType","stateName"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { resetState, setToState, updateState } from 'state/actions'\nimport styles from './style/LoginComponent.style'\nimport { makeStyles } from '@material-ui/core/styles'\nimport WebCmsGlobal from 'components/webcms-global'\nimport { useOrestAction } from 'model/orest'\nimport { AuthLogin, UseOrest } from '@webcms/orest'\nimport moment from 'moment'\nimport { DatePicker, LocalizationProvider, MobileDatePicker } from '@material-ui/pickers'\nimport MomentAdapter from '@date-io/moment'\nimport {\n    Button,\n    Checkbox,\n    CircularProgress,\n    FormControlLabel,\n    Grid,\n    Tab,\n    Tabs,\n    TextField,\n    Typography,\n} from '@material-ui/core'\nimport { Email, Person, Phone, Room, RoomService } from '@material-ui/icons'\nimport {\n    LOCAL_STORAGE_EMAIL,\n    LOCAL_STORAGE_OREST_HOTELNAME_TEXT,\n    LOCAL_STORAGE_OREST_HOTELREFNO_TEXT,\n    LOCAL_STORAGE_OREST_TOKEN_TEXT,\n    LOCAL_STORAGE_PHONE_NUMBER,\n    LOCAL_STORAGE_REMEMBER_ME,\n    mobileTelNoFormat,\n} from 'model/orest/constants'\nimport useTranslation from 'lib/translations/hooks/useTranslation'\nimport Router, { useRouter } from 'next/router'\nimport PhoneInput from '../../@webcms-ui/core/phone-input'\nimport Update from 'components/guest/account/Client/Update'\nimport GuestSelection from 'components/guest/account/Details/GuestSelection'\nimport { useHotelInfoAction } from 'model/orest/components/ChangeHotel/redux_store'\nimport { useSnackbar } from 'notistack'\nimport clsx from 'clsx'\nimport Alert from '@material-ui/lab/Alert'\nimport { defaultLocale } from 'lib/translations/config'\n\nconst useStyles = makeStyles(styles)\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props\n    const classes = useStyles()\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`scrollable-auto-tabpanel-${index}`}\n            aria-labelledby={`scrollable-auto-tab-${index}`}\n            className={classes.tabPanel}\n            {...other}\n        >\n            {value === index && <React.Fragment>{children}</React.Fragment>}\n        </Typography>\n    )\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n}\n\nfunction a11yProps(index) {\n    return {\n        id: `scrollable-auto-tab-${index}`,\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    }\n}\n\nconst urlFixer = (retUrl, lang, suffix) => {\n    let isLang = !!lang\n    if (isLang) {\n        return retUrl + `${suffix}lang=${lang}`\n    } else {\n        return retUrl\n    }\n}\n\nconst LoginComponent = (props) => {\n\n    const { GENERAL_SETTINGS, locale } = useContext(WebCmsGlobal)\n    const { t } = useTranslation()\n\n    const router = useRouter()\n    const { state, locationName, redirectUrl, isOnlyEmail, isUserPortalLogin, isEmpPortal, updateState, isCloudWikiLogin, setWikiLoginDialog, isLoginWrapper, noQuery, setToState, getEmail } = props\n    const emailParam = !noQuery && router.query.email || ''\n    const passParam = !noQuery && router.query.pass || ''\n    const refUrlParam = router.query.refurl\n    const isKiosk = router.query.kiosk === 'true'\n    const { enqueueSnackbar } = useSnackbar()\n\n    //redux\n    const { setOrestState, setOrestUserInfo, deleteOrestCurrentUserInfo } = useOrestAction()\n    const { setHotelRefNo, setHotelName, setHotelRefNoIsInitializing, updateLicenceMenuStatus  } = useHotelInfoAction()\n\n    //state\n    const [username, setUsername] = useState(emailParam || '')\n    const [password, setPassword] = useState(passParam || '')\n    const [birthDate, setBirthDate] = useState(null)\n    const [isLoggingIn, setIsLoggingIn] = useState(false)\n    const [tabValue, setTabValue] = useState(0)\n    const [isPrevControl, setIsPrevControl] = useState(false)\n    const [getAuthInfo, setAuthInfo] = useState({})\n    const [getLoginInfo, setLoginInfo] = useState({})\n    const [isEmail, setIsEmail] = useState(true)\n    const [isPhoneNumber, setIsPhoneNumber] = useState(false)\n    const [rememberMe, setRememberMe] = useState(false)\n    const [useGuestSelection, setUseGuestSelection] = useState({\n        isVisible: false,\n        isLoading: false,\n        data: false\n    })\n\n    //settings\n    const allowedRoles = ['6500315', '6500300', '6500310']\n\n    const colorObject = {\n        backgroundColor: isUserPortalLogin ? '#063E8D' : isEmpPortal ? '#064E42' : 'inherit',\n        hoverColor: isUserPortalLogin ? 'rgb(6, 62, 141, 0.8)' : isEmpPortal ? '#4E8179' : 'inherit',\n        borderColor: isUserPortalLogin ? '#063E8D' : isEmpPortal ? '#064E42' : 'inherit',\n        labelColor: isUserPortalLogin ? '#063E8D' : isEmpPortal ? '#064E42' : 'inherit',\n        checkboxColor: isUserPortalLogin ? '#4666B0' : isEmpPortal ? '#4E8179' : 'inherit'\n    }\n\n    const classes = useStyles(colorObject)\n\n    useEffect(() => {\n        if (emailParam && passParam) {\n            handleClickLogin()\n        }\n        const localRememberMe = localStorage.getItem(LOCAL_STORAGE_REMEMBER_ME) ?\n            localStorage.getItem(LOCAL_STORAGE_REMEMBER_ME) !== 'false' : false\n        const localUsername = localStorage.getItem(LOCAL_STORAGE_EMAIL) ?\n            localStorage.getItem(LOCAL_STORAGE_EMAIL) : \"\"\n        const localPhoneNumber = localStorage.getItem(LOCAL_STORAGE_PHONE_NUMBER) ?\n            localStorage.getItem(LOCAL_STORAGE_PHONE_NUMBER) : \"\"\n        if(localRememberMe && localRememberMe !== false) {\n            if(isEmail) {\n                setUsername(localUsername)\n                setRememberMe(localRememberMe)\n            } else if(isPhoneNumber) {\n                setUsername(localPhoneNumber)\n                setRememberMe(localRememberMe)\n            }\n        }\n\n        deleteOrestCurrentUserInfo()\n    }, [isEmail])\n\n    useEffect(() => {\n        typeof getEmail === 'function' && getEmail(username)\n    }, [username])\n    \n    const handleOnChangeCheckBox = (event) => {\n        setRememberMe(event.target.checked);\n    }\n\n    const handleCheckPrv = (client) =>{\n        if(locationName === \"guest\"){\n            return client && client.hasdatapolicy === true && client.haspref === true\n        }else if(locationName === \"survey\"){\n            return client && client.hasdatapolicy === true\n        }else {\n            return true\n        }\n    }\n\n    const handleUsernameChange = (e, type) => {\n        let value\n        if(type === 'phone') {\n            value = e\n        }else{\n            value = e.target.value\n        }\n        setUsername(value)\n    }\n\n    const handlePasswordChange = (e) => {\n        setPassword(e.target.value)\n    }\n\n    const handleBirthChange = (e) => {\n        setBirthDate(e)\n        setPassword(moment(e).locale(defaultLocale).format('DDMMYYYY'))\n    }\n\n    const checkLicenceMenuStatus = (infoAuth, infoLogin) => {\n        return UseOrest({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: 'info/hotel',\n            token: infoAuth.access_token,\n            params: {\n                keyval: infoLogin.hotelrefno,\n            },\n        }).then((infoHotelResponse) => {\n            if (!infoHotelResponse.data.data.ischain) {\n                updateLicenceMenuStatus(true)\n                localStorage.setItem('licenceMenuStatus', 'true')\n                return true\n            } else {\n                updateLicenceMenuStatus(false)\n                localStorage.setItem('licenceMenuStatus', 'false')\n                return true\n            }\n        }).catch(() => {\n            return false\n        })\n    }\n\n    const loginOptions = {\n        hasemail: GENERAL_SETTINGS.hotelSettings?.hasemail || false,\n        hasreserv: GENERAL_SETTINGS.hotelSettings?.hasreserv || false,\n        hastel: GENERAL_SETTINGS.hotelSettings?.hastel || false,\n        hasroom: GENERAL_SETTINGS.hotelSettings?.hasroom || false,\n        haslastname: GENERAL_SETTINGS.hotelSettings?.haslastname || false\n    }\n\n    const loginTypeCodeList = {\n        room: 'ROOM',\n        reservation: 'RESERVATION',\n        email: 'EMAIL',\n        tel: 'TEL',\n        lastname: 'LASTNAME',\n    }\n\n    const loginTypeOrderList = {\n        room: 1,\n        reservation: GENERAL_SETTINGS.hotelSettings?.login_withci ? -1 : 2,\n        email: emailParam && -99 || 3,\n        tel: 4,\n        lastname: 5,\n    }\n\n    const loginComponentTypeList = [\n        {\n            label: t('str_room') + '#',\n            icon: <Room />,\n            order: loginTypeOrderList.room,\n            isHide: ((!loginOptions.hasroom) || isUserPortalLogin || isEmpPortal) || false,\n            loginType: 'roomno',\n            loginTypeCode: loginTypeCodeList.room\n        },\n        {\n            label: t('str_reservation') + '#',\n            icon: <RoomService />,\n            order: loginTypeOrderList.reservation,\n            isHide: ((!loginOptions.hasreserv) || isUserPortalLogin || isEmpPortal) || false,\n            loginType: 'refcode',\n            loginTypeCode: loginTypeCodeList.reservation\n        },\n        {\n            label: t('str_email'),\n            icon: <Email />,\n            order: loginTypeOrderList.email,\n            isHide: (!loginOptions.hasemail) || false,\n            loginType: 'email',\n            loginTypeCode: loginTypeCodeList.email\n        },\n        {\n            label: t('str_phone'),\n            icon: <Phone />,\n            order: loginTypeOrderList.tel,\n            isHide: (!loginOptions.hastel) || false,\n            loginType: 'mobile',\n            loginTypeCode: loginTypeCodeList.tel\n        },\n        {\n            label: t('str_lastName'),\n            icon: <Person />,\n            order: loginTypeOrderList.lastname,\n            isHide: ((!loginOptions.haslastname) || isUserPortalLogin || isEmpPortal) || false,\n            loginType: 'refcode',\n            loginTypeCode: loginTypeCodeList.lastname\n        }\n    ]\n\n    const [loginTypeSelect, setLoginTypeSelect] = useState(emailParam && 'email' || loginComponentTypeList.sort((a, b) => a.order - b.order).filter(item => !item.isHide)[0]?.loginType || false)\n\n    if(!loginTypeSelect){\n        return (\n            <Alert variant=\"outlined\" severity=\"warning\">\n                {t('str_validLoginTypeDoesNotExist')}\n            </Alert>\n        )\n    }\n\n    const doAuthLogin = (authData) => {\n        return AuthLogin({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            data: authData,\n        }).then((authLoginResponse) => {\n            if (authLoginResponse?.data) {\n                return authLoginResponse\n            } else {\n                return authLoginResponse\n            }\n        }).catch((error) => {\n            return error\n        })\n    }\n\n    const authStatusAllowed = (statusCode) => {\n        return statusCode === 200\n    }\n\n    const showAuthRelatedErrorMessage = (infoAuth) => {\n        if (infoAuth.status === 400) {\n            setIsLoggingIn(false)\n            enqueueSnackbar('Username or Password Wrong!', { variant: 'error' })\n        } else if (infoAuth.status === 403) {\n            setIsLoggingIn(false)\n            enqueueSnackbar('You blocked! Try again in ' + infoAuth.data.blockdurationmin + ' minute(s)', { variant: 'error' })\n        } else if (infoAuth.status === 500) {\n            setIsLoggingIn(false)\n            enqueueSnackbar(t('str_checkCredentials'), { variant: 'error' })\n        } else if (infoAuth.status === 0) {\n            setIsLoggingIn(false)\n            enqueueSnackbar('No internet connection!', { variant: 'error' })\n        } else {\n            setIsLoggingIn(false)\n            enqueueSnackbar('Login Error!', { variant: 'error' })\n        }\n    }\n\n    const useLoginInfo = (infoAuth) => {\n        return UseOrest({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: 'info/login',\n            token: infoAuth.data.access_token,\n        }).then((infoLoginResponse) => {\n            if (infoLoginResponse?.data?.data) {\n                return infoLoginResponse.data.data\n            } else {\n                return false\n            }\n        }).catch(() => {\n            return false\n        })\n    }\n\n    const useClientLoginId = ({ infoAuth, refCode, birthDate, hotelRefNo }) => {\n        return UseOrest({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: 'client/loginid',\n            method: 'PUT',\n            token: infoAuth.data.access_token,\n            params: {\n                refcode: refCode,\n                birthdate: birthDate,\n                hotelrefno: hotelRefNo,\n            },\n        }).then((clientLoginIdResponse) => {\n            return clientLoginIdResponse.status === 200 && clientLoginIdResponse?.data?.data\n        }).catch(() => {\n            return false\n        })\n    }\n\n    const useReservatClientList = ({ infoAuth, reservNo }) => {\n        return UseOrest({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: 'reservat/client/list',\n            token: infoAuth.data.access_token,\n            params: {\n                field: 'reservno',\n                text: reservNo,\n                sort: 'paxno',\n                allhotels: true\n            }\n        }).then((reservatClientListResponse) => {\n            return reservatClientListResponse.status === 200 && reservatClientListResponse?.data?.data.length > 1 && reservatClientListResponse?.data?.data\n        }).catch(() => {\n            return false\n        })\n    }\n\n    const getLoginTypeInfo = () => {\n        return loginComponentTypeList.sort((a, b) => a.order - b.order).filter(item => !item.isHide)[tabValue]\n    }\n\n    const useAuthData = () => {\n        let authData = {\n            grant_type: 'password',\n            client_id: 'orestClient',\n            client_secret: 'top_secret',\n            username: username,\n            password: password,\n            hotelrefno: GENERAL_SETTINGS.useHotelRefno,\n        }\n\n        if (state.changeHotelRefno) {\n            authData.hotelrefno = state.changeHotelRefno\n        }\n\n        if (loginTypeSelect !== 'email') {\n            authData.logintype = loginTypeSelect\n        }\n\n        if (loginTypeSelect === 'mobile') {\n            authData.username = mobileTelNoFormat(authData.username)\n        }\n\n        if (isOnlyEmail) {\n            delete authData.logintype\n        }\n\n        return authData\n    }\n\n    const handleClickLogin = async () => {\n        setIsLoggingIn(true)\n        setHotelRefNoIsInitializing(true)\n\n        const authData = useAuthData()\n        const infoAuth = await doAuthLogin(authData)\n        setAuthInfo(infoAuth.data)\n\n        if (!authStatusAllowed(infoAuth.status)) {\n            showAuthRelatedErrorMessage(infoAuth.status)\n            return false\n        }\n\n        const infoLogin = await useLoginInfo(infoAuth)\n        setLoginInfo(infoLogin)\n\n        if (getLoginTypeInfo().loginTypeCode === loginTypeCodeList.lastname) {\n            const infoClientLoginId = await useClientLoginId({\n                infoAuth: infoAuth,\n                refCode: authData.username,\n                birthDate: moment(birthDate).locale(defaultLocale).format('YYYY-MM-DD'),\n                hotelRefNo: authData.hotelrefno,\n            })\n\n            if (infoClientLoginId.ismulti && infoClientLoginId.reservno) {\n                const infoReservatClientList = await useReservatClientList({\n                    infoAuth: infoAuth,\n                    reservNo: infoClientLoginId.reservno,\n                })\n\n                if (infoReservatClientList) {\n                    setUseGuestSelection({ isVisible: true, data: infoReservatClientList })\n                    return true\n                }\n            }\n        }\n\n        setOrestState(['isLoginWithOtherGuest'], false)\n        setIsLoggingIn(false)\n        if (locationName === 'guest' && !allowedRoles.includes(infoLogin.roletype)) {\n            enqueueSnackbar(t('str_yourLoggedInUserRoleIsInvalid'), { variant: 'warning' })\n            return true\n        }\n\n        if (!state.profile.loadGuest) {\n            setToState('guest', ['profile', 'loadGuest'], true)\n        }\n\n        if (rememberMe) {\n            localStorage.setItem(LOCAL_STORAGE_REMEMBER_ME, rememberMe.toString())\n            localStorage.setItem(LOCAL_STORAGE_EMAIL, username)\n        } else {\n            localStorage.setItem(LOCAL_STORAGE_REMEMBER_ME, rememberMe.toString())\n            localStorage.removeItem(LOCAL_STORAGE_EMAIL)\n        }\n\n        if (!isKiosk && !handleCheckPrv(infoLogin) && infoLogin.authorities.find(item => item.authority === 'CLIENT')) {\n            setIsPrevControl(true)\n        } else {\n            await getClientInfoLoader(infoAuth.data, infoLogin)\n            await checkLicenceMenuStatus(infoAuth.data, infoLogin)\n        }\n\n        if (isCloudWikiLogin) {\n            setWikiLoginDialog(false)\n        }\n    }\n\n    const getClientInfoLoader = async (authInfo, loginInfo, otherGuestResname) => {\n        const auth = authInfo || getAuthInfo\n        const loginfo = loginInfo || getLoginInfo\n        const allLogInfo = { auth, loginfo, otherGuestResname }\n\n        localStorage.setItem(LOCAL_STORAGE_OREST_HOTELREFNO_TEXT, loginfo.hotelrefno)\n        localStorage.setItem(LOCAL_STORAGE_OREST_HOTELNAME_TEXT, loginfo.hotelname)\n        localStorage.setItem(LOCAL_STORAGE_OREST_TOKEN_TEXT, auth && loginfo && `{\"auth\": ${JSON.stringify(auth)},\"loginfo\": ${JSON.stringify(loginfo)} ${otherGuestResname ? `,\"otherGuestResname\": ${JSON.stringify(otherGuestResname)}}` : '}'}` || null)\n\n        setHotelRefNoIsInitializing(false)\n        setHotelName(loginfo.hotelname)\n        setHotelRefNo(loginfo.hotelrefno)\n\n        if (loginfo.roletype === '6500310' && loginfo?.accgid) {\n            await UseOrest({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: 'client/view/get',\n                token: auth.access_token,\n                params: {\n                    gid: loginfo.accgid,\n                    allhotels: true,\n                },\n            }).then((clientGetResponse) => {\n                if (clientGetResponse.status === 200 && clientGetResponse?.data?.data) {\n                    const clientGetResponseData = clientGetResponse.data.data\n                    setOrestState(['client'], clientGetResponseData)\n                }\n            })\n\n            await UseOrest({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: 'client/reservno',\n                token: auth.access_token,\n                params: {\n                    clientid: loginfo.accid,\n                    isgapp: true,\n                },\n            }).then((clientReservnoResponse) => {\n                if (clientReservnoResponse?.data?.data) {\n                    if (!GENERAL_SETTINGS.ISPORTAL) {\n                        updateState('guest', 'changeHotelRefno', clientReservnoResponse.data.data.hotelrefno)\n                        updateState('guest', 'changeHotelName', clientReservnoResponse.data.data.hotelname)\n                    }\n                    updateState('guest', 'clientReservation', clientReservnoResponse.data.data)\n                    updateState('guest', 'totalPax', clientReservnoResponse.data.data.totalpax || 1)\n                    updateState('guest', 'totalChd', clientReservnoResponse.data.data.totalchd || 0)\n                } else {\n                    updateState('guest', 'clientReservation', null)\n                }\n            }).catch(() => {\n                updateState('guest', 'clientReservation', null)\n            })\n        }\n        setOrestUserInfo(allLogInfo)\n\n        enqueueSnackbar(t('str_loggedIn'), { variant: 'success' })\n        if (redirectUrl) {\n            if (redirectUrl.includes('/hup')) {\n                window.location.href = urlFixer(redirectUrl, loginfo.langshort, '?')\n            } else {\n                if (refUrlParam) {\n                    let refUrlDec = decodeURIComponent(refUrlParam)\n                    if (refUrlParam.includes('eventlocid')) {\n                        Router.push(urlFixer(refUrlDec, loginfo.langshort, '&'))\n                    } else {\n                        if (!refUrlDec.includes('?lang')) {\n                            if (refUrlDec.includes('&')) {\n                                Router.push(urlFixer(refUrlDec, loginfo.langshort, '&'))\n                            } else {\n                                Router.push(urlFixer(refUrlDec, loginfo.langshort, '&'))\n                            }\n                        } else {\n                            Router.push(refUrlDec)\n                        }\n                    }\n                } else {\n                    Router.push(urlFixer(redirectUrl, loginfo.langshort, '?'))\n                }\n            }\n        }\n    }\n\n    const handleKeyLogin = async (event) => {\n        if (event.keyCode === 13) {\n            await handleClickLogin()\n            event.preventDefault()\n        }\n    }\n\n    if (isOnlyEmail) {\n        return (\n            <Grid container className={classes.gridContainer} spacing={2}>\n                <Grid item xs={12} className={classes.gridItem}>\n                    <TextField\n                        disabled={isLoggingIn}\n                        variant='filled'\n                        required\n                        fullWidth\n                        id='username'\n                        name='username'\n                        label={t('str_email')}\n                        value={username}\n                        onChange={handleUsernameChange}\n                    />\n                </Grid>\n                <Grid item xs={12} className={classes.gridItem}>\n                    <TextField\n                        disabled={isLoggingIn}\n                        onKeyDown={(e) => handleKeyLogin(e)}\n                        variant='filled'\n                        required\n                        fullWidth\n                        id='userpassword'\n                        name='userpassword'\n                        type='password'\n                        label={t('str_password')}\n                        value={password}\n                        onChange={handlePasswordChange}\n                    />\n                </Grid>\n                <Grid item xs={12} className={classes.gridItem}>\n                    <div className={classes.wrapper}>\n                        <Button\n                            onClick={handleClickLogin}\n                            disabled={isLoggingIn}\n                            fullWidth\n                            variant='contained'\n                            color='primary'\n                            size='large'\n                            disableElevation\n                        >\n                            {t('str_login')}\n                            {isLoggingIn && <CircularProgress size={24} className={classes.buttonProgress} />}\n                        </Button>\n                    </div>\n                </Grid>\n            </Grid>\n        )\n    }\n\n    const getTabIndex = (newValue) => {\n        let getIndex = loginComponentTypeList.filter(item => !item.isHide)\n        return getIndex[newValue]?.order || loginComponentTypeList[0].order\n    }\n\n    const handleChangeTab = (event, newValue) => {\n        const getIndex = getTabIndex(newValue)\n        if (getIndex === loginTypeOrderList.email) {\n            setIsEmail(true)\n            setIsPhoneNumber(false)\n        } else if (getIndex === loginTypeOrderList.tel) {\n            setIsEmail(false)\n            setIsPhoneNumber(true)\n        } else {\n            setIsEmail(false)\n            setIsPhoneNumber(false)\n        }\n\n        const getLoginType = loginComponentTypeList.filter(item => item.order === getIndex)[0]?.loginType || false\n        setLoginTypeSelect(getLoginType)\n        setTabValue(newValue)\n    }\n\n    const renderLoginComponent = (loginTypeCode) => {\n        switch (loginTypeCode) {\n            case loginTypeCodeList.room:\n                return (\n                    <TextField\n                        disabled={isLoggingIn}\n                        className={clsx('', {\n                            [classes.textFieldUserPortal]: isUserPortalLogin || isEmpPortal,\n                            [classes.textFieldDestinationPortal]: isLoginWrapper,\n                        })}\n                        variant={!isUserPortalLogin && !isLoginWrapper && !isEmpPortal ? 'filled' : 'outlined'}\n                        required\n                        fullWidth\n                        id='username'\n                        name='username'\n                        label={t('str_roomNo')}\n                        value={username}\n                        onKeyUp={handleUsernameChange}\n                        onKeyDown={handleUsernameChange}\n                        onChange={handleUsernameChange}\n                    />\n                )\n            case loginTypeCodeList.reservation:\n                return (\n                    <TextField\n                        disabled={isLoggingIn}\n                        className={clsx('', {\n                            [classes.textFieldUserPortal]: isUserPortalLogin || isEmpPortal,\n                            [classes.textFieldDestinationPortal]: isLoginWrapper,\n                        })}\n                        color={'primary'}\n                        variant={!isUserPortalLogin && !isLoginWrapper && !isEmpPortal ? 'filled' : 'outlined'}\n                        required\n                        fullWidth\n                        id='username'\n                        name='username'\n                        label={t('str_resNo')}\n                        value={username}\n                        onKeyUp={handleUsernameChange}\n                        onKeyDown={handleUsernameChange}\n                        onChange={handleUsernameChange}\n                    />\n                )\n            case loginTypeCodeList.email:\n                return (\n                    <TextField\n                        disabled={isLoggingIn}\n                        className={clsx('', {\n                            [classes.textFieldUserPortal]: isUserPortalLogin || isEmpPortal,\n                            [classes.textFieldDestinationPortal]: isLoginWrapper,\n                        })}\n                        color={'primary'}\n                        variant={!isUserPortalLogin && !isLoginWrapper && !isEmpPortal ? 'filled' : 'outlined'}\n                        required\n                        fullWidth\n                        id='username'\n                        name='username'\n                        label={t('str_email')}\n                        value={username}\n                        onKeyUp={handleUsernameChange}\n                        onKeyDown={handleUsernameChange}\n                        onChange={handleUsernameChange}\n                    />\n                )\n            case loginTypeCodeList.tel:\n                return (\n                    <PhoneInput\n                        disabled={isLoggingIn}\n                        className={clsx('', {\n                            [classes.textFieldUserPortal]: isUserPortalLogin,\n                            [classes.textFieldDestinationPortal]: isLoginWrapper,\n                        })}\n                        defaultCountry={locale === 'en' ? 'us' : locale}\n                        preferredCountries={[\n                            'it',\n                            'ie',\n                            'de',\n                            'fr',\n                            'es',\n                            'gb',\n                        ]}\n                        regions={[\n                            'america',\n                            'europe',\n                            'asia',\n                            'oceania',\n                            'africa',\n                        ]}\n                        variant={!isUserPortalLogin && !isLoginWrapper && !isEmpPortal ? 'filled' : 'outlined'}\n                        id='username'\n                        name='username'\n                        label={t('str_phone')}\n                        fullWidth\n                        value={username}\n                        onChange={e => handleUsernameChange(e, 'phone')}\n                    />\n                )\n            case loginTypeCodeList.lastname:\n                return (\n                    <TextField\n                        disabled={isLoggingIn}\n                        className={clsx('', {\n                            [classes.textFieldUserPortal]: isUserPortalLogin || isEmpPortal,\n                            [classes.textFieldDestinationPortal]: isLoginWrapper,\n                        })}\n                        color={'primary'}\n                        variant={!isUserPortalLogin && !isLoginWrapper && !isEmpPortal ? 'filled' : 'outlined'}\n                        required\n                        fullWidth\n                        id='lastname'\n                        name='lastname'\n                        label={t('str_lastName')}\n                        value={username}\n                        onKeyUp={handleUsernameChange}\n                        onKeyDown={handleUsernameChange}\n                        onChange={handleUsernameChange}\n                    />\n                )\n        }\n\n    }\n\n    return (\n        <Grid container className={classes.gridContainer} spacing={2}>\n            <Grid item xs={12} className={classes.gridItem}>\n                {(isPrevControl && getAuthInfo && locationName) ? (\n                    <Update\n                        open={isPrevControl}\n                        auth={getAuthInfo}\n                        logInfo={getLoginInfo}\n                        locationName={locationName}\n                        onCallback={(auth, loginInfo) => getClientInfoLoader(auth, loginInfo, false)}\n                    />\n                ) : null}\n                {useGuestSelection.isVisible ? (\n                    <GuestSelection\n                        open={useGuestSelection.isVisible}\n                        isLoading={useGuestSelection.isLoading}\n                        data={useGuestSelection.data || []}\n                        auth={getAuthInfo}\n                        logInfo={getLoginInfo}\n                        onLoginCallback={(auth, loginInfo, otherGuestResname) => getClientInfoLoader(auth, loginInfo, otherGuestResname)}\n                    />\n                ): null}\n                <Tabs\n                    classes={{\n                        root: isUserPortalLogin || isEmpPortal  ? classes.tabsRootUserPortal : \"\",\n                        indicator: isUserPortalLogin || isEmpPortal ?  classes.tabsIndicatorUserPortal: classes.tabsIndicator\n                    }}\n                    variant={isUserPortalLogin || isEmpPortal ? \"standard\" : \"fullWidth\"}\n                    value={tabValue}\n                    onChange={handleChangeTab}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                >\n                    {loginComponentTypeList.sort((a, b) => a.order - b.order).filter(item => !item.isHide).map((loginCompenent, index)=> {\n                        return (\n                            <Tab key={index} className={classes.loginTab} label={loginCompenent.label} icon={loginCompenent.icon} {...a11yProps(index)}/>\n                        )\n                    })}\n                </Tabs>\n                {loginComponentTypeList.sort((a, b) => a.order - b.order).filter(item => !item.isHide).map((loginCompenent, index)=> {\n                    return  (\n                        <TabPanel value={tabValue} index={index} key={index}>\n                            {isUserPortalLogin || isLoginWrapper || isEmpPortal ? <div style={{ paddingTop: '16px' }} /> : null}\n                            {renderLoginComponent(loginCompenent.loginTypeCode)}\n                        </TabPanel>\n                    )\n                })}\n            </Grid>\n            <Grid item xs={12} className={classes.gridItem}>\n                {(getTabIndex(tabValue) === loginTypeOrderList.email) && (\n                    <TextField\n                        disabled={isLoggingIn}\n                        className={clsx(\"\", {\n                            [classes.textFieldUserPortal]: isUserPortalLogin || isEmpPortal,\n                            [classes.textFieldDestinationPortal]: isLoginWrapper,\n                        })}\n                        variant={!isUserPortalLogin && !isLoginWrapper && !isEmpPortal ? \"filled\" : \"outlined\"}\n                        required\n                        fullWidth\n                        id=\"password\"\n                        name=\"password\"\n                        type=\"password\"\n                        label={t('str_password')}\n                        value={password}\n                        inputProps={{\n                            autoComplete: 'new-password',\n                        }}\n                        onKeyDown={(e) => handleKeyLogin(e)}\n                        onChange={handlePasswordChange}\n                    />\n                )}\n                {(getTabIndex(tabValue) === loginTypeOrderList.room || getTabIndex(tabValue) === loginTypeOrderList.reservation || getTabIndex(tabValue) === loginTypeOrderList.tel || getTabIndex(tabValue) === loginTypeOrderList.lastname) && (\n                    <LocalizationProvider dateLibInstance={moment} dateAdapter={MomentAdapter}>\n                        {isKiosk ? (\n                            <MobileDatePicker\n                                allowKeyboardControl\n                                disabled={isLoggingIn}\n                                autoOk\n                                id=\"birthdate\"\n                                name=\"birthdate\"\n                                label={((getTabIndex(tabValue) === loginTypeOrderList.reservation || getTabIndex(tabValue) === loginTypeOrderList.lastname) && GENERAL_SETTINGS.hotelSettings?.login_withci) ? t('str_checkinDate') : t('str_birthDate')}\n                                inputFormat=\"DD/MM/YYYY\"\n                                disableFuture={(!((getTabIndex(tabValue) === loginTypeOrderList.reservation || getTabIndex(tabValue) === loginTypeOrderList.room || getTabIndex(tabValue) === loginTypeOrderList.lastname) && GENERAL_SETTINGS.hotelSettings?.login_withci))}\n                                openTo={(((getTabIndex(tabValue) === loginTypeOrderList.reservation || getTabIndex(tabValue) === loginTypeOrderList.room || getTabIndex(tabValue) === loginTypeOrderList.lastname) && GENERAL_SETTINGS.hotelSettings?.login_withci)) || birthDate ? 'date' : 'year'}\n                                views={(((getTabIndex(tabValue) === loginTypeOrderList.reservation || getTabIndex(tabValue) === loginTypeOrderList.room || getTabIndex(tabValue) === loginTypeOrderList.lastname) && GENERAL_SETTINGS.hotelSettings?.login_withci)) ? ['date'] : ['year', 'month', 'date']}\n                                value={birthDate}\n                                onChange={(date) => handleBirthChange(date)}\n                                renderInput={(props) => {\n                                    return (\n                                        <TextField\n                                            {...props}\n                                            className={clsx(\"\", {\n                                                [classes.textFieldUserPortal]: isUserPortalLogin || isEmpPortal,\n                                                [classes.textFieldDestinationPortal]: isLoginWrapper,\n                                            })}\n                                            required\n                                            fullWidth\n                                            variant={!isUserPortalLogin && !isLoginWrapper && !isEmpPortal ? \"filled\" : \"outlined\"}\n                                            helperText={'dd.mm.yyyy'}\n                                        />\n                                    )\n                                }}\n                            />\n                        ): (\n                            <DatePicker\n                                allowKeyboardControl\n                                disabled={isLoggingIn}\n                                autoOk\n                                id=\"birthdate\"\n                                name=\"birthdate\"\n                                label={(((getTabIndex(tabValue) === loginTypeOrderList.reservation || getTabIndex(tabValue) === loginTypeOrderList.room || getTabIndex(tabValue) === loginTypeOrderList.lastname) && GENERAL_SETTINGS.hotelSettings?.login_withci)) ? t('str_checkinDate') : t('str_birthDate')}\n                                inputFormat=\"DD/MM/YYYY\"\n                                disableFuture={((!((getTabIndex(tabValue) === loginTypeOrderList.reservation || getTabIndex(tabValue) === loginTypeOrderList.room || getTabIndex(tabValue) === loginTypeOrderList.lastname) && GENERAL_SETTINGS.hotelSettings?.login_withci)))}\n                                openTo={(((getTabIndex(tabValue) === loginTypeOrderList.reservation || getTabIndex(tabValue) === loginTypeOrderList.room || getTabIndex(tabValue) === loginTypeOrderList.lastname) && GENERAL_SETTINGS.hotelSettings?.login_withci)) || birthDate ? 'date' : 'year'}\n                                views={(((getTabIndex(tabValue) === loginTypeOrderList.reservation || getTabIndex(tabValue) === loginTypeOrderList.room || getTabIndex(tabValue) === loginTypeOrderList.lastname) && GENERAL_SETTINGS.hotelSettings?.login_withci)) ? ['date'] : ['year', 'month', 'date']}\n                                value={birthDate}\n                                onChange={(date) => handleBirthChange(date)}\n                                renderInput={(props) => {\n                                    return (\n                                        <TextField\n                                            {...props}\n                                            required\n                                            className={clsx(\"\", {\n                                                [classes.textFieldUserPortal]: isUserPortalLogin || isEmpPortal,\n                                                [classes.textFieldDestinationPortal]: isLoginWrapper,\n                                            })}\n                                            fullWidth\n                                            variant={!isUserPortalLogin && !isLoginWrapper && !isEmpPortal? \"filled\" : \"outlined\"}\n                                            helperText={'dd.mm.yyyy'}\n                                        />\n                                    )\n                                }}\n                            />\n                        )}\n                    </LocalizationProvider>\n                )}\n            </Grid>\n            {isUserPortalLogin || isLoginWrapper || isEmpPortal ? (\n                    <Grid item xs={12}>\n                        <div style={{textAlign:\"left\"}}>\n                            <FormControlLabel\n                                className={classes.formControlLabel}\n                                checked={rememberMe}\n                                onChange={(e) => handleOnChangeCheckBox(e)}\n                                control={\n                                    <Checkbox\n                                        className={clsx(\"\", {\n                                            [classes.checkboxUserPortal]: isUserPortalLogin || isEmpPortal,\n                                            [classes.checkboxDestinationPortal]: isLoginWrapper\n                                        })}\n                                        color={\"primary\"}\n                                    />\n                                }\n                                label={\n                                    <Typography\n                                        className={clsx(\"\", {\n                                            [classes.checkboxLabel]: isUserPortalLogin || isEmpPortal,\n                                            [classes.checkboxLabelDestinationPortal]: isLoginWrapper}\n                                        )}\n                                        color={\"primary\"}\n                                    >\n                                        {t(\"str_rememberMe\")}\n                                    </Typography>\n                                }\n                            />\n                        </div>\n                    </Grid>\n                ) : null\n            }\n            <Grid item xs={12} className={classes.gridItem}>\n                <div className={classes.wrapper}>\n                    <Button\n                        className={clsx(classes.loginButton, {\n                            [classes.loginButtonUserPortal]: isUserPortalLogin || isEmpPortal,\n                        })}\n                        onClick={handleClickLogin}\n                        disabled={isLoggingIn}\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        size={isUserPortalLogin ? \"medium\" : \"large\"}\n                        disableElevation\n                    >\n                        {t('str_login')}\n                    </Button>\n                    {isLoggingIn && <CircularProgress size={24} className={classes.buttonProgress} />}\n                </div>\n            </Grid>\n        </Grid>\n    )\n}\n\nLoginComponent.propTypes = {\n    redirectUrl: PropTypes.string,\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        state: state.formReducer.guest,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    resetState: () => dispatch(resetState()),\n    updateState: (stateType, stateName, value) => dispatch(updateState(stateType, stateName, value)),\n    setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginComponent)"]},"metadata":{},"sourceType":"module"}