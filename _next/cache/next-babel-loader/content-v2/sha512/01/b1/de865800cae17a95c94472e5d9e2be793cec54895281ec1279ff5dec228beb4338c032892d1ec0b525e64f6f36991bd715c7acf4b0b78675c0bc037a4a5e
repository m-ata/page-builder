{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/guest/public/components/events/HotelEvents.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useContext } from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport axios from 'axios';\nimport { setToState as _setToState, updateState as _updateState } from 'state/actions';\nimport { Box, Container, Typography } from '@material-ui/core';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nimport CardSlider from '@webcms-ui/core/card-slider';\nimport Divider from '@material-ui/core/Divider';\nimport WebCmsGlobal from 'components/webcms-global';\nimport { useRouter } from 'next/router';\nimport LoadingSpinner from 'components/LoadingSpinner';\nimport { jsonGroupBy } from 'model/orest/constants';\nimport { NULL, FALSE } from 'model/globals';\nimport { defaultLocale } from 'lib/translations/config';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport Button from '@material-ui/core/Button';\nimport { LocaleContext } from 'lib/translations/context/LocaleContext';\n\nvar HotelEvents = function HotelEvents(props) {\n  _s();\n\n  var state = props.state,\n      setToState = props.setToState,\n      onlyRes = props.onlyRes;\n  var router = useRouter();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useContext = useContext(WebCmsGlobal),\n      GENERAL_SETTINGS = _useContext.GENERAL_SETTINGS;\n\n  var _useContext2 = useContext(LocaleContext),\n      locale = _useContext2.locale;\n\n  var loginfo = useSelector(function (state) {\n    return state.orest.currentUser && state.orest.currentUser.loginfo;\n  });\n  var changeHotelRefno = useSelector(function (state) {\n    return state.formReducer.guest.changeHotelRefno && state.formReducer.guest.changeHotelRefno;\n  });\n  var clientParams = {};\n  clientParams.hotelrefno = loginfo && loginfo.hotelrefno || GENERAL_SETTINGS.HOTELREFNO;\n\n  var _useState = useState(false),\n      isLoading = _useState[0],\n      setIsLoading = _useState[1];\n\n  useEffect(function () {\n    var isChainHotelChange = false;\n\n    if (GENERAL_SETTINGS.ISCHAIN && changeHotelRefno !== false) {\n      clientParams.ischain = true;\n      clientParams.chainid = changeHotelRefno;\n      clientParams.hotelrefno = GENERAL_SETTINGS.HOTELREFNO;\n\n      if (clientParams.chainid !== state.hotelList.chainid) {\n        isChainHotelChange = true;\n      }\n    } else if (GENERAL_SETTINGS.ISCHAIN && changeHotelRefno === false) {\n      return;\n    } else {\n      clientParams.ischain = false;\n    }\n\n    var isLangChange = false;\n\n    if (state.hotelList.langcode !== locale) {\n      isLangChange = true;\n      setToState('guest', ['hotelList', 'langcode'], locale);\n    }\n\n    clientParams.langcode = locale || defaultLocale;\n    var isRequest;\n\n    if (GENERAL_SETTINGS.ISCHAIN) {\n      isRequest = state.hotelList.data === false && GENERAL_SETTINGS.ISCHAIN && changeHotelRefno !== false;\n    } else {\n      isRequest = state.hotelList.data === false && GENERAL_SETTINGS.ISCHAIN === false;\n    }\n\n    if ((isRequest || isLangChange || isChainHotelChange) && isLoading === false) {\n      setIsLoading(true);\n      axios({\n        url: GENERAL_SETTINGS.BASE_URL + 'api/guestweb/event/hotel',\n        method: 'post',\n        params: clientParams\n      }).then(function (hotelResponse) {\n        var hotelData = hotelResponse.data;\n\n        if (hotelData.success && hotelData.data.length > 0) {\n          var useData = hotelData.data;\n\n          if (onlyRes) {\n            useData = useData.filter(function (item) {\n              return item.lochasres === true;\n            });\n          }\n\n          setToState('guest', ['hotelList', 'data'], useData.length > 0 ? jsonGroupBy(useData, 'localeventypedesc') : null);\n          setToState('guest', ['hotelList', 'langcode'], locale);\n          setToState('guest', ['hotelList', 'chainid'], clientParams.chainid);\n          setIsLoading(false);\n        } else {\n          setToState('guest', ['hotelList', 'data'], null);\n          setToState('guest', ['hotelList', 'langcode'], locale);\n          setToState('guest', ['hotelList', 'chainid'], clientParams.chainid);\n          setIsLoading(false);\n        }\n      });\n    }\n  }, [changeHotelRefno, locale]);\n\n  if (state.hotelList.data === false || isLoading === true) {\n    return __jsx(Container, {\n      maxWidth: \"lg\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, __jsx(Box, {\n      p: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, __jsx(LoadingSpinner, {\n      size: 40,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    })));\n  }\n\n  if (state.hotelList.data === null) {\n    return __jsx(Container, {\n      maxWidth: \"lg\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, __jsx(Box, {\n      p: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, __jsx(Typography, {\n      variant: \"h6\",\n      align: \"center\",\n      gutterBottom: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    }, t('str_eventNotFound')), GENERAL_SETTINGS.ISCHAIN && __jsx(Typography, {\n      variant: \"h6\",\n      align: \"center\",\n      gutterBottom: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }\n    }, t('str_ifYouWishYouCanChangeTheHotelAndTryAgain'), __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 80\n      }\n    }), __jsx(Button, {\n      startIcon: __jsx(BusinessIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 48\n        }\n      }),\n      onClick: function onClick() {\n        return setToState('guest', ['isHotelListOpen'], true);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 29\n      }\n    }, changeHotelRefno ? state.changeHotelName : t('str_chooseHotel')))));\n  }\n\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, __jsx(Container, {\n    maxWidth: \"lg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, state.hotelList.data && Object.keys(state.hotelList.data).map(function (groupName, index) {\n    return __jsx(React.Fragment, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    }, __jsx(CardSlider, {\n      title: groupName,\n      openId: Number(router.query.eventlocid) || NULL,\n      slideData: state.hotelList.data[groupName],\n      type: \"event\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 29\n      }\n    }), __jsx(Divider, {\n      style: {\n        marginBottom: 30\n      },\n      light: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 29\n      }\n    }));\n  })));\n};\n\n_s(HotelEvents, \"TaqfpaY7GiPaRbg+woXSUy/JvzA=\", false, function () {\n  return [useRouter, useTranslation, useSelector, useSelector];\n});\n\n_c = HotelEvents;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    state: state.formReducer.guest\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateState: function updateState(stateType, stateName, value) {\n      return dispatch(_updateState(stateType, stateName, value));\n    },\n    setToState: function setToState(stateType, stateName, value) {\n      return dispatch(_setToState(stateType, stateName, value));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HotelEvents);\n\nvar _c;\n\n$RefreshReg$(_c, \"HotelEvents\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/guest/public/components/events/HotelEvents.js"],"names":["React","useState","useEffect","useContext","connect","useSelector","axios","setToState","updateState","Box","Container","Typography","useTranslation","CardSlider","Divider","WebCmsGlobal","useRouter","LoadingSpinner","jsonGroupBy","NULL","FALSE","defaultLocale","BusinessIcon","Button","LocaleContext","HotelEvents","props","state","onlyRes","router","t","GENERAL_SETTINGS","locale","loginfo","orest","currentUser","changeHotelRefno","formReducer","guest","clientParams","hotelrefno","HOTELREFNO","isLoading","setIsLoading","isChainHotelChange","ISCHAIN","ischain","chainid","hotelList","isLangChange","langcode","isRequest","data","url","BASE_URL","method","params","then","hotelResponse","hotelData","success","length","useData","filter","item","lochasres","changeHotelName","Object","keys","map","groupName","index","Number","query","eventlocid","marginBottom","mapStateToProps","mapDispatchToProps","dispatch","stateType","stateName","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\nimport { connect, useSelector } from 'react-redux'\nimport axios from 'axios'\nimport { setToState, updateState } from 'state/actions'\nimport { Box, Container, Typography } from '@material-ui/core'\nimport useTranslation from 'lib/translations/hooks/useTranslation'\nimport CardSlider from '@webcms-ui/core/card-slider'\nimport Divider from '@material-ui/core/Divider'\nimport WebCmsGlobal from 'components/webcms-global'\nimport { useRouter } from 'next/router'\nimport LoadingSpinner from 'components/LoadingSpinner'\nimport { jsonGroupBy } from 'model/orest/constants'\nimport { NULL, FALSE } from 'model/globals'\nimport { defaultLocale } from 'lib/translations/config'\nimport BusinessIcon from '@material-ui/icons/Business'\nimport Button from  '@material-ui/core/Button'\nimport { LocaleContext } from 'lib/translations/context/LocaleContext'\n\nconst HotelEvents = (props) => {\n    const { state, setToState, onlyRes } = props\n    const router = useRouter()\n    const { t } = useTranslation()\n    const { GENERAL_SETTINGS } = useContext(WebCmsGlobal)\n    const { locale } = useContext(LocaleContext)\n    const loginfo = useSelector((state) => state.orest.currentUser && state.orest.currentUser.loginfo)\n    const changeHotelRefno = useSelector((state) => state.formReducer.guest.changeHotelRefno && state.formReducer.guest.changeHotelRefno)\n\n    let clientParams = {}\n    clientParams.hotelrefno = loginfo && loginfo.hotelrefno || GENERAL_SETTINGS.HOTELREFNO\n\n    const [isLoading, setIsLoading] = useState(false)\n\n    useEffect(() => {\n\n        let isChainHotelChange = false\n        if(GENERAL_SETTINGS.ISCHAIN && changeHotelRefno !== false){\n            clientParams.ischain = true\n            clientParams.chainid = changeHotelRefno\n            clientParams.hotelrefno = GENERAL_SETTINGS.HOTELREFNO\n\n            if(clientParams.chainid !== state.hotelList.chainid){\n                isChainHotelChange = true\n            }\n\n        }else if(GENERAL_SETTINGS.ISCHAIN && changeHotelRefno === false){\n            return;\n        }else{\n            clientParams.ischain = false\n        }\n\n        let isLangChange = false\n        if(state.hotelList.langcode !== locale){\n            isLangChange = true\n            setToState('guest', ['hotelList', 'langcode'], locale)\n        }\n\n        clientParams.langcode = locale || defaultLocale\n\n        let isRequest\n        if(GENERAL_SETTINGS.ISCHAIN){\n            isRequest = state.hotelList.data === false && GENERAL_SETTINGS.ISCHAIN && changeHotelRefno !== false\n        }else {\n            isRequest = state.hotelList.data === false && GENERAL_SETTINGS.ISCHAIN === false\n        }\n\n        if ((isRequest || isLangChange || isChainHotelChange) && isLoading === false) {\n            setIsLoading(true)\n            axios({\n                url: GENERAL_SETTINGS.BASE_URL + 'api/guestweb/event/hotel',\n                method: 'post',\n                params: clientParams\n            }).then((hotelResponse) => {\n                const hotelData = hotelResponse.data\n\n                if (hotelData.success && hotelData.data.length > 0) {\n                    let useData = hotelData.data\n                    if(onlyRes){\n                        useData = useData.filter(item => item.lochasres === true)\n                    }\n\n                    setToState('guest', ['hotelList', 'data'], useData.length > 0 ? jsonGroupBy(useData, 'localeventypedesc') : null)\n                    setToState('guest', ['hotelList', 'langcode'], locale)\n                    setToState('guest', ['hotelList', 'chainid'], clientParams.chainid)\n                    setIsLoading(false)\n                } else {\n                    setToState('guest', ['hotelList', 'data'], null)\n                    setToState('guest', ['hotelList', 'langcode'], locale)\n                    setToState('guest', ['hotelList', 'chainid'], clientParams.chainid)\n                    setIsLoading(false)\n                }\n            })\n        }\n\n    },[changeHotelRefno,locale])\n\n    if (state.hotelList.data === false || isLoading === true) {\n        return (\n            <Container maxWidth='lg'>\n                <Box p={4}>\n                    <LoadingSpinner size={40} />\n                </Box>\n            </Container>\n        )\n    }\n\n    if (state.hotelList.data === null) {\n        return (\n            <Container maxWidth='lg'>\n                <Box p={4}>\n                    <Typography variant='h6' align='center' gutterBottom>\n                        {t('str_eventNotFound')}\n                    </Typography>\n                    {GENERAL_SETTINGS.ISCHAIN && (\n                        <Typography variant='h6' align='center' gutterBottom>\n                            {t('str_ifYouWishYouCanChangeTheHotelAndTryAgain')}<br />\n                            <Button startIcon={<BusinessIcon />}\n                                    onClick={() => setToState('guest', ['isHotelListOpen'], true)}>\n                                {changeHotelRefno ? state.changeHotelName : t('str_chooseHotel')}\n                            </Button>\n                        </Typography>\n                    )}\n                </Box>\n            </Container>\n        )\n    }\n\n    return (\n        <React.Fragment>\n            <Container maxWidth='lg'>\n                {state.hotelList.data &&\n                Object.keys(state.hotelList.data).map((groupName, index) => {\n                    return (\n                        <React.Fragment key={index}>\n                            <CardSlider\n                                title={groupName}\n                                openId={Number(router.query.eventlocid) || NULL}\n                                slideData={state.hotelList.data[groupName]}\n                                type='event'\n                            />\n                            <Divider style={{ marginBottom: 30 }} light />\n                        </React.Fragment>\n                    )\n                })}\n            </Container>\n        </React.Fragment>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        state: state.formReducer.guest,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    updateState: (stateType, stateName, value) => dispatch(updateState(stateType, stateName, value)),\n    setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HotelEvents)\n"]},"metadata":{},"sourceType":"module"}