{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/components/page/sections/card-type-slider/EditCardSlider.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Delete, Insert, Patch, UseOrest, ViewList } from \"@webcms/orest\";\nimport { FIELDTYPE, isErrorMsg, OREST_ENDPOINT, OREST_UPLOAD, REQUEST_METHOD_CONST } from \"../../../../../../../model/orest/constants\";\nimport { toast } from \"react-toastify\";\nimport WebCmsGlobal from \"components/webcms-global\";\nimport { useRouter } from \"next/router\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { COLORS, DELETE_SUCCESS, PERCENTAGE_VALUES, SAVED_SUCCESS, UPLOAD_SUCCESS } from \"../../../../constants\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Button, Card, Container, Divider, FormControl, FormControlLabel, IconButton, Paper, Radio, RadioGroup, TextField, Typography } from \"@material-ui/core\";\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport validator from \"validator\";\nimport { DropzoneDialog } from \"material-ui-dropzone\";\nimport LoadingSpinner from \"../../../../../../LoadingSpinner\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { PercentageSlider } from \"../../../../../../../model/slider\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { getSliderImages, patchListSliderImage } from \"../../../../helpers/slider\";\nimport InputColor from \"react-input-color\";\nimport TextEditor from \"../text-editor\";\nimport BorderColorSharpIcon from \"@material-ui/icons/BorderColorSharp\";\nconst useStyles = makeStyles(theme => ({\n  submit: {\n    marginRight: theme.spacing(3),\n    marginTop: theme.spacing(1),\n    borderRadius: 20,\n    float: \"right\"\n  },\n  paperBlock: {\n    height: 350,\n    border: `2px solid ${COLORS === null || COLORS === void 0 ? void 0 : COLORS.secondary}`,\n    overflow: \"auto\"\n  },\n  disableEvent: {\n    pointerEvents: \"none\",\n    opacity: 0.5\n  },\n  uploadButton: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    marginLeft: theme.spacing(1),\n    borderRadius: 20,\n    float: 'right'\n  },\n  card: {\n    height: 200,\n    width: 320,\n    margin: theme.spacing(1),\n    cursor: \"pointer\"\n  },\n  alignText: {\n    textAlign: \"right\",\n    color: \"red\"\n  },\n  text: {\n    marginTop: 16,\n    fontWeight: \"bold\",\n    fontSize: 15\n  }\n}));\n\nconst EditCardSlider = props => {\n  const {\n    cardSlider,\n    handleCmponent,\n    langCardSlider\n  } = props;\n  const {\n    0: localState,\n    1: setLocalState\n  } = useState({\n    isRequested: false,\n    openDialog: false,\n    title: '',\n    description: '',\n    selectedIndex: null,\n    hoverIndex: null,\n    showDeleteButton: false,\n    itemCount: 1,\n    sliderID: null,\n    sliderImages: [],\n    selectedImage: null,\n    isCta: false,\n    ctaTitle: '',\n    ctaLink: '',\n    cta: '',\n    isOptimizeImages: false,\n    quality: 50,\n    ctaLinkType: '',\n    pageData: [],\n    langCardSliderData: [],\n    textColor: cardSlider !== null && cardSlider !== void 0 && cardSlider.textColor ? cardSlider.textColor : '#000000',\n    buttonColor: cardSlider !== null && cardSlider !== void 0 && cardSlider.buttonColor ? cardSlider.buttonColor : '#000000',\n    isDialogOpen: false,\n    editorValue: '',\n    dialogType: ''\n  });\n  const {\n    isRequested,\n    openDialog,\n    description,\n    title,\n    selectedIndex,\n    hoverIndex,\n    showDeleteButton,\n    itemCount,\n    sliderID,\n    sliderImages,\n    selectedImage,\n    isCta,\n    ctaLink,\n    ctaTitle,\n    cta,\n    quality,\n    isOptimizeImages,\n    ctaLinkType,\n    pageData,\n    langCardSliderData,\n    buttonColor,\n    textColor,\n    isDialogOpen,\n    dialogType,\n    editorValue\n  } = localState;\n  const state = useSelector(state => state.formReducer.pageBuilder);\n  const classes = useStyles();\n  const router = useRouter();\n  const companyId = router.query.companyID;\n  const {\n    GENERAL_SETTINGS,\n    token\n  } = useContext(WebCmsGlobal);\n  const authToken = token || router.query.authToken;\n  useEffect(() => {\n    //getting data from rafile\n    ViewList({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.RAFILE,\n      token: authToken,\n      params: {\n        hotelrefno: Number(companyId),\n        query: `filetype::WEBPAGE,istemplate::false}`\n      }\n    }).then(res => {\n      var _res$data;\n\n      if (res.status === 200 && res !== null && res !== void 0 && (_res$data = res.data) !== null && _res$data !== void 0 && _res$data.data) {\n        setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n          pageData: res.data.data\n        }));\n      } else {\n        const retErr = isErrorMsg(res);\n        toast.error(retErr.errorMsg, {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      }\n    });\n  }, []);\n  useEffect(() => {\n    if ((state === null || state === void 0 ? void 0 : state.langCode) === (state === null || state === void 0 ? void 0 : state.defaultLang)) {\n      handleCmponent({\n        service: \"hcmitemsld\",\n        type: \"card-slider\",\n        gid: cardSlider === null || cardSlider === void 0 ? void 0 : cardSlider.gid,\n        width: cardSlider === null || cardSlider === void 0 ? void 0 : cardSlider.width,\n        id: cardSlider === null || cardSlider === void 0 ? void 0 : cardSlider.id,\n        textColor: textColor,\n        buttonColor: buttonColor\n      });\n    } else {\n      handleCmponent({\n        cardSlider: langCardSliderData\n      });\n    }\n  }, [sliderImages, title, description, cta, langCardSliderData, textColor, buttonColor]);\n  useEffect(() => {\n    if (cardSlider !== null && cardSlider !== void 0 && cardSlider.gid) {\n      setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        isRequested: true\n      }));\n      ViewList({\n        apiUrl: GENERAL_SETTINGS.OREST_URL,\n        endpoint: OREST_ENDPOINT.HCMITEMSLD,\n        token: authToken,\n        params: {\n          query: `gid:${cardSlider.gid}`,\n          hotelrefno: Number(companyId)\n        }\n      }).then(async res => {\n        if ((res === null || res === void 0 ? void 0 : res.status) === 200) {\n          var _res$data3, _res$data3$data$;\n\n          setLocalState(prev => {\n            var _res$data2, _res$data2$data$;\n\n            return _objectSpread(_objectSpread({}, prev), {}, {\n              sliderID: res === null || res === void 0 ? void 0 : (_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : (_res$data2$data$ = _res$data2.data[0]) === null || _res$data2$data$ === void 0 ? void 0 : _res$data2$data$.id\n            });\n          });\n          const sldImages = await getSliderImages(GENERAL_SETTINGS.OREST_URL, authToken, companyId, res === null || res === void 0 ? void 0 : (_res$data3 = res.data) === null || _res$data3 === void 0 ? void 0 : (_res$data3$data$ = _res$data3.data[0]) === null || _res$data3$data$ === void 0 ? void 0 : _res$data3$data$.id);\n          sldImages.sort((a, b) => a.orderno > b.orderno ? 1 : -1);\n          setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n            isRequested: false\n          }));\n\n          if (sldImages) {\n            let updatedImages = [];\n            sldImages.map(data => {\n              updatedImages.push(data);\n            });\n            setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n              sliderImages: updatedImages,\n              itemCount: updatedImages.length + 1,\n              openDialog: false\n            }));\n            handleSelectedImage(1, updatedImages[0]);\n          } else {\n            toast.warn('Something went wrong while fetching images. Please check network tab.', {\n              position: toast.POSITION.TOP_RIGHT\n            });\n          }\n        } else {\n          const retErr = isErrorMsg(res);\n          setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n            isRequested: false\n          }));\n          toast.error(retErr.errorMsg, {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        }\n      });\n    }\n  }, [cardSlider]);\n  useEffect(() => {\n    if (ctaTitle && ctaLink) {\n      setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        cta: `<a target=\"_blank\" href=\"${ctaLink}\" > ${ctaTitle} </a>`\n      }));\n    }\n  }, [ctaTitle, ctaLink]);\n  useEffect(() => {\n    if (langCardSlider !== null && langCardSlider !== void 0 && langCardSlider.cardSlider) {\n      setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        langCardSliderData: langCardSlider.cardSlider\n      }));\n    }\n  }, [langCardSlider]);\n\n  const handleSelectedImage = (index, image) => {\n    setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      selectedIndex: index,\n      selectedImage: image\n    }));\n\n    if ((state === null || state === void 0 ? void 0 : state.langCode) === (state === null || state === void 0 ? void 0 : state.defaultLang)) {\n      ViewList({\n        apiUrl: GENERAL_SETTINGS.OREST_URL,\n        endpoint: OREST_ENDPOINT.HCMITEMIMG,\n        token: authToken,\n        params: {\n          query: `gid:${image.gid}`,\n          sort: 'orderno',\n          hotelrefno: Number(companyId)\n        }\n      }).then(res => {\n        if ((res === null || res === void 0 ? void 0 : res.status) === 200) {\n          var _res$data4, _res$data4$data;\n\n          if ((res === null || res === void 0 ? void 0 : (_res$data4 = res.data) === null || _res$data4 === void 0 ? void 0 : (_res$data4$data = _res$data4.data) === null || _res$data4$data === void 0 ? void 0 : _res$data4$data.length) > 0) {\n            setLocalState(prev => {\n              var _res$data$data$, _res$data$data$2, _res$data$data$3, _res$data$data$4, _res$data$data$5;\n\n              return _objectSpread(_objectSpread({}, prev), {}, {\n                title: (_res$data$data$ = res.data.data[0]) !== null && _res$data$data$ !== void 0 && _res$data$data$.title ? (_res$data$data$2 = res.data.data[0]) === null || _res$data$data$2 === void 0 ? void 0 : _res$data$data$2.title : '',\n                description: (_res$data$data$3 = res.data.data[0]) !== null && _res$data$data$3 !== void 0 && _res$data$data$3.description ? (_res$data$data$4 = res.data.data[0]) === null || _res$data$data$4 === void 0 ? void 0 : _res$data$data$4.description : '',\n                cta: (_res$data$data$5 = res.data.data[0]) === null || _res$data$data$5 === void 0 ? void 0 : _res$data$data$5.cta\n              });\n            });\n\n            if (res.data.data[0].cta) {\n              setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n                isCta: true\n              }));\n              const matchs = res.data.data[0].cta.match(/\\bhttps?:\\/\\/\\S+/gi);\n\n              if ((matchs === null || matchs === void 0 ? void 0 : matchs.length) > 0) {\n                const cta_title = res.data.data[0].cta.replace(`<a target=\"_blank\" href=\"`, '').replace(matchs[0], '').replace('>', '').replace('</a>', '').trim();\n                setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n                  ctaLink: matchs[0],\n                  ctaTitle: cta_title,\n                  ctaLinkType: 'external'\n                }));\n              } else {\n                var _res$data$data$0$cta$;\n\n                const ctaGid = (_res$data$data$0$cta$ = res.data.data[0].cta.replace(`<a target=\"_blank\" href=\"`, '').replace('>', '').replace('</a>', '').replace('\"', '').trim()) === null || _res$data$data$0$cta$ === void 0 ? void 0 : _res$data$data$0$cta$.split(' ')[0];\n                const cta_title = res.data.data[0].cta.replace(`<a target=\"_blank\" href=\"`, '').replace(ctaGid + '\"', '').replace('>', '').replace('</a>', '').trim();\n                setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n                  ctaLink: ctaGid,\n                  ctaTitle: cta_title,\n                  ctaLinkType: 'internal'\n                }));\n              }\n            } else {\n              setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n                ctaLink: '',\n                ctaTitle: '',\n                isCta: false\n              }));\n            }\n          }\n        } else {\n          const retErr = isErrorMsg(res);\n          toast.error(retErr.errorMsg, {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        }\n      });\n    } else {\n      if ((langCardSliderData === null || langCardSliderData === void 0 ? void 0 : langCardSliderData.length) > 0) {\n        var _langCardSliderData3;\n\n        setLocalState(prev => {\n          var _langCardSliderData, _langCardSliderData2;\n\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            title: (_langCardSliderData = langCardSliderData[index - 1]) === null || _langCardSliderData === void 0 ? void 0 : _langCardSliderData.title,\n            description: (_langCardSliderData2 = langCardSliderData[index - 1]) === null || _langCardSliderData2 === void 0 ? void 0 : _langCardSliderData2.description\n          });\n        });\n\n        if ((_langCardSliderData3 = langCardSliderData[index - 1]) !== null && _langCardSliderData3 !== void 0 && _langCardSliderData3.cta) {\n          setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n            isCta: true\n          }));\n          const matchs = langCardSliderData[index - 1].cta.match(/\\bhttps?:\\/\\/\\S+/gi);\n\n          if ((matchs === null || matchs === void 0 ? void 0 : matchs.length) > 0) {\n            const cta_title = langCardSliderData[index - 1].cta.replace(`<a target=\"_blank\" href=\"`, '').replace(matchs[0], '').replace('>', '').replace('</a>', '').trim();\n            setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n              ctaLink: matchs[0],\n              ctaTitle: cta_title,\n              ctaLinkType: 'external'\n            }));\n          } else {\n            var _langCardSliderData$c;\n\n            const ctaGid = (_langCardSliderData$c = langCardSliderData[index - 1].cta.replace(`<a target=\"_blank\" href=\"`, '').replace('>', '').replace('</a>', '').replace('\"', '').trim()) === null || _langCardSliderData$c === void 0 ? void 0 : _langCardSliderData$c.split(' ')[0];\n            const cta_title = langCardSliderData[index - 1].cta.replace(`<a target=\"_blank\" href=\"`, '').replace(ctaGid + '\"', '').replace('>', '').replace('</a>', '').trim();\n            setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n              ctaLink: ctaGid,\n              ctaTitle: cta_title,\n              ctaLinkType: 'internal'\n            }));\n          }\n        } else {\n          setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n            ctaLink: '',\n            ctaTitle: '',\n            isCta: false\n          }));\n        }\n      } else {\n        var _langCardSlider$cardS3;\n\n        setLocalState(prev => {\n          var _langCardSlider$cardS, _langCardSlider$cardS2;\n\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            title: langCardSlider === null || langCardSlider === void 0 ? void 0 : (_langCardSlider$cardS = langCardSlider.cardSlider[index - 1]) === null || _langCardSlider$cardS === void 0 ? void 0 : _langCardSlider$cardS.title,\n            description: langCardSlider === null || langCardSlider === void 0 ? void 0 : (_langCardSlider$cardS2 = langCardSlider.cardSlider[index - 1]) === null || _langCardSlider$cardS2 === void 0 ? void 0 : _langCardSlider$cardS2.description\n          });\n        });\n\n        if (langCardSlider !== null && langCardSlider !== void 0 && (_langCardSlider$cardS3 = langCardSlider.cardSlider[0]) !== null && _langCardSlider$cardS3 !== void 0 && _langCardSlider$cardS3.cta) {\n          setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n            isCta: true\n          }));\n          const matchs = langCardSlider === null || langCardSlider === void 0 ? void 0 : langCardSlider.cardSlider[0].cta.match(/\\bhttps?:\\/\\/\\S+/gi);\n\n          if ((matchs === null || matchs === void 0 ? void 0 : matchs.length) > 0) {\n            const cta_title = langCardSlider === null || langCardSlider === void 0 ? void 0 : langCardSlider.cardSlider[0].cta.replace(`<a target=\"_blank\" href=\"`, '').replace(matchs[0], '').replace('>', '').replace('</a>', '').trim();\n            setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n              ctaLink: matchs[0],\n              ctaTitle: cta_title,\n              ctaLinkType: 'external'\n            }));\n          } else {\n            var _langCardSlider$cardS4;\n\n            const ctaGid = langCardSlider === null || langCardSlider === void 0 ? void 0 : (_langCardSlider$cardS4 = langCardSlider.cardSlider[0].cta.replace(`<a target=\"_blank\" href=\"`, '').replace('>', '').replace('</a>', '').replace('\"', '').trim()) === null || _langCardSlider$cardS4 === void 0 ? void 0 : _langCardSlider$cardS4.split(' ')[0];\n            const cta_title = langCardSlider === null || langCardSlider === void 0 ? void 0 : langCardSlider.cardSlider[0].cta.replace(`<a target=\"_blank\" href=\"`, '').replace(ctaGid + '\"', '').replace('>', '').replace('</a>', '').trim();\n            setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n              ctaLink: ctaGid,\n              ctaTitle: cta_title,\n              ctaLinkType: 'internal'\n            }));\n          }\n        } else {\n          setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n            ctaLink: '',\n            ctaTitle: '',\n            isCta: false\n          }));\n        }\n      }\n    }\n  };\n\n  const ImageUpload = (apiUrl, endPoint, token, masterID, file) => {\n    const url = apiUrl + '/' + endPoint + OREST_UPLOAD;\n    let binaryData = [];\n    binaryData.push(file);\n    let formData = new FormData();\n    formData.append('file', new Blob(binaryData, {\n      type: file.type\n    }), file.name);\n    const options = {\n      url: url,\n      method: 'post',\n      headers: {\n        \"Authorization\": `Bearer ${token}`,\n        'Content-Type': 'multipart/form-data'\n      },\n      params: {\n        orsactive: true,\n        masterid: masterID,\n        hotelrefno: companyId,\n        quality: quality / 100,\n        scale: quality / 100\n      },\n      data: formData\n    };\n    return axios(options).then(response => {\n      return response;\n    }).catch(error => {\n      return error.response || {\n        status: 0\n      };\n    });\n  };\n\n  const asyncUpload = (file, itemTreated, callback) => {\n    if (state.hcmItemId) {\n      setTimeout(() => {\n        Insert({\n          apiUrl: GENERAL_SETTINGS.OREST_URL,\n          endpoint: OREST_ENDPOINT.HCMITEMIMG,\n          token: authToken,\n          data: {\n            itemid: state.hcmItemId,\n            imgtype: FIELDTYPE.IMG,\n            orderno: itemTreated,\n            sliderid: sliderID,\n            hotelrefno: Number(companyId),\n            imgquality: quality / 100,\n            imgscale: quality / 100\n          }\n        }).then(r1 => {\n          var _r1$data;\n\n          if (r1.status === 200 && r1 !== null && r1 !== void 0 && (_r1$data = r1.data) !== null && _r1$data !== void 0 && _r1$data.data) {\n            var _r1$data2;\n\n            let updatedImages = [...sliderImages];\n            updatedImages.push(r1 === null || r1 === void 0 ? void 0 : (_r1$data2 = r1.data) === null || _r1$data2 === void 0 ? void 0 : _r1$data2.data);\n            ImageUpload(GENERAL_SETTINGS.OREST_URL, OREST_ENDPOINT.RAFILE, authToken, r1.data.data.mid, file).then(r => {\n              if (r.status === 200) {\n                callback();\n              } else {\n                callback();\n              }\n            });\n          } else {\n            callback();\n          }\n        });\n      }, 100);\n    }\n  };\n\n  const handleSaveImage = files => {\n    setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      isRequested: true\n    }));\n    let orderNo = itemCount;\n    let requests = files.map(file => {\n      return new Promise(resolve => {\n        asyncUpload(file, orderNo, resolve);\n        orderNo++;\n      });\n    });\n    Promise.all(requests).then(async () => {\n      const sldImages = await getSliderImages(GENERAL_SETTINGS.OREST_URL, authToken, companyId, sliderID);\n      sldImages.sort((a, b) => a.orderno > b.orderno ? 1 : -1);\n      setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        isRequested: false\n      }));\n\n      if (sldImages) {\n        let updatedImages = [];\n        sldImages.map(data => {\n          updatedImages.push(data);\n        });\n        setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n          sliderImages: updatedImages,\n          itemCount: updatedImages.length + 1,\n          openDialog: false\n        }));\n        handleSelectedImage(1, updatedImages[0]);\n        toast.success(UPLOAD_SUCCESS, {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      } else {\n        setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n          isRequestSend: false\n        }));\n        toast.warn('Images not found', {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      }\n    });\n  };\n\n  const handleDeleteImage = gid => {\n    setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      isRequested: true\n    }));\n    Delete({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.HCMITEMIMG,\n      token: authToken,\n      gid: gid,\n      params: {\n        hotelrefno: Number(companyId)\n      }\n    }).then(async res => {\n      if (res.status === 200) {\n        const sldImages = await getSliderImages(GENERAL_SETTINGS.OREST_URL, authToken, companyId, sliderID);\n        sldImages.sort((a, b) => a.orderno > b.orderno ? 1 : -1);\n        setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n          isRequested: false\n        }));\n\n        if (sldImages) {\n          let updatedImages = [];\n          sldImages.map((data, index) => {\n            data.orderno = index + 1;\n            updatedImages.push(data);\n          });\n          let requestPassed = true;\n\n          for (const sldImage of sldImages) {\n            const updatedSliderImage = patchListSliderImage(GENERAL_SETTINGS.OREST_URL, authToken, companyId, {\n              orderno: sldImage.orderno\n            }, {\n              hotelrefno: Number(companyId)\n            }, sldImage.gid);\n            updatedSliderImage ? requestPassed = true : requestPassed = false;\n          }\n\n          if (requestPassed) {\n            setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n              sliderImages: updatedImages,\n              selectedIndex: 1\n            }));\n            handleSelectedImage(1, updatedImages[0]);\n          } else {\n            setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n              selectedIndex: null\n            }));\n          }\n\n          toast.success(DELETE_SUCCESS, {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        } else {\n          setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n            isRequestSend: false\n          }));\n          toast.warn('Images not found', {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        }\n      } else {\n        const retErr = isErrorMsg(res);\n        setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n          isRequested: false\n        }));\n        toast.error(retErr.errorMsg, {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      }\n    });\n  };\n\n  const handleUpdateImage = () => {\n    setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      isRequested: true\n    }));\n\n    if ((state === null || state === void 0 ? void 0 : state.langCode) === (state === null || state === void 0 ? void 0 : state.defaultLang)) {\n      Patch({\n        // update image\n        apiUrl: GENERAL_SETTINGS.OREST_URL,\n        endpoint: OREST_ENDPOINT.HCMITEMIMG,\n        token: authToken,\n        gid: selectedImage === null || selectedImage === void 0 ? void 0 : selectedImage.gid,\n        params: {\n          hotelrefno: Number(companyId)\n        },\n        data: {\n          title: title,\n          description: description,\n          cta: cta\n        }\n      }).then(res => {\n        if (res.status === 200) {\n          setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n            isRequested: false\n          }));\n          toast.success(SAVED_SUCCESS, {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        } else {\n          setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n            isRequested: false\n          }));\n          const retErr = isErrorMsg(res);\n          toast.error(retErr.errorMsg, {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        }\n      });\n    } else {\n      const updatedlangCardSliderData = [...langCardSliderData];\n      updatedlangCardSliderData[selectedIndex - 1] = {\n        title: title,\n        description: description,\n        cta: cta\n      };\n      setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        langCardSliderData: updatedlangCardSliderData\n      }));\n      setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        isRequested: false\n      }));\n      toast.success(SAVED_SUCCESS, {\n        position: toast.POSITION.TOP_RIGHT\n      });\n    }\n  };\n\n  const handleUpdateOrderNo = async (gid, orderNo, orderType) => {\n    // update order no of slider images\n    if (orderNo <= 0 || orderNo > sliderImages.length) {\n      setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        selectedIndex: null\n      }));\n    } else {\n      const tmpSliderImages = [...sliderImages];\n\n      if (orderType === 'increment') {\n        const tmp = tmpSliderImages[orderNo - 1];\n        tmpSliderImages[orderNo - 1] = tmpSliderImages[orderNo - 2];\n        tmpSliderImages[orderNo - 2] = tmp;\n      } else {\n        const tmp = tmpSliderImages[orderNo - 1];\n        tmpSliderImages[orderNo - 1] = tmpSliderImages[orderNo];\n        tmpSliderImages[orderNo] = tmp;\n      }\n\n      tmpSliderImages.map((data, index) => {\n        data.orderno = index + 1;\n      });\n      setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        isRequested: true\n      }));\n      let requestPassed = true;\n\n      for (const sldImage of tmpSliderImages) {\n        const updatedSliderImage = patchListSliderImage(GENERAL_SETTINGS.OREST_URL, authToken, companyId, {\n          orderno: sldImage.orderno\n        }, {\n          hotelrefno: Number(companyId)\n        }, sldImage.gid);\n        updatedSliderImage ? requestPassed = true : requestPassed = false;\n      }\n\n      setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        isRequested: false\n      }));\n\n      if (requestPassed) {\n        setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n          sliderImages: tmpSliderImages,\n          itemCount: (tmpSliderImages === null || tmpSliderImages === void 0 ? void 0 : tmpSliderImages.length) + 1\n        }));\n        handleSelectedImage(1, tmpSliderImages[0]);\n        toast.success('Order No Updated Successfully', {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      } else {\n        toast.error('Something went wrong while updating order no. Please check network tab.', {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      }\n    }\n  };\n\n  const handleImageQualityChange = value => {\n    if (value >= 10 && value <= 90 && value % 10 === 0) {\n      if (sliderImages.length) {\n        setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n          isRequested: true\n        }));\n        const gids = sliderImages.map(image => {\n          return {\n            gid: image.gid,\n            imgquality: value / 100,\n            imgscale: value / 100\n          };\n        });\n        UseOrest({\n          apiUrl: GENERAL_SETTINGS.OREST_URL,\n          endpoint: OREST_ENDPOINT.HCMITEMIMG + '/' + OREST_ENDPOINT.LIST + '/' + OREST_ENDPOINT.PATCH,\n          token: authToken,\n          method: REQUEST_METHOD_CONST.PATCH,\n          data: gids,\n          params: {\n            hotelrefno: Number(companyId)\n          }\n        }).then(res => {\n          var _res$data5;\n\n          if ((res === null || res === void 0 ? void 0 : res.status) === 200 && res !== null && res !== void 0 && (_res$data5 = res.data) !== null && _res$data5 !== void 0 && _res$data5.data) {\n            setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n              isRequested: false,\n              quality: value\n            }));\n          } else {\n            const retErr = isErrorMsg(res);\n            toast.error(retErr.errorMsg, {\n              position: toast.POSITION.TOP_RIGHT\n            });\n          }\n        });\n      } else {\n        setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n          quality: value\n        }));\n      }\n    }\n  };\n\n  const handleTextEditorValue = value => {\n    if (dialogType === 'title') {\n      setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        title: value\n      }));\n    }\n\n    if (dialogType === 'description') {\n      setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        description: value\n      }));\n    }\n\n    setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      isDialogOpen: false,\n      dialogType: '',\n      editorValue: ''\n    }));\n  };\n\n  const handleCancelEditor = () => {\n    setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      isDialogOpen: false,\n      dialogType: '',\n      editorValue: ''\n    }));\n  };\n\n  const handleDialogOpen = type => {\n    if (type === 'title') {\n      setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        isDialogOpen: true,\n        dialogType: type,\n        editorValue: title\n      }));\n    }\n\n    if (type === 'description') {\n      setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        isDialogOpen: true,\n        dialogType: type,\n        editorValue: description\n      }));\n    }\n  };\n\n  if (isRequested) {\n    return __jsx(LoadingSpinner, {\n      size: 50,\n      style: {\n        color: COLORS === null || COLORS === void 0 ? void 0 : COLORS.secondary\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    container: true,\n    justify: 'flex-end',\n    className: isRequested ? classes.disableEvent : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 622,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 623,\n      columnNumber: 17\n    }\n  }, __jsx(FormControlLabel, {\n    className: classes.labelFont,\n    disabled: (state === null || state === void 0 ? void 0 : state.langCode) !== (state === null || state === void 0 ? void 0 : state.defaultLang),\n    control: __jsx(Checkbox, {\n      size: 'small',\n      checked: isOptimizeImages,\n      onChange: () => setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        isOptimizeImages: !isOptimizeImages\n      })),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 628,\n        columnNumber: 29\n      }\n    }),\n    label: \"Optimize Images\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 21\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 638,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 639,\n      columnNumber: 21\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 1,\n    style: {\n      marginTop: 6,\n      marginLeft: 16\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 640,\n      columnNumber: 25\n    }\n  }, __jsx(Typography, {\n    component: 'span',\n    style: {\n      marginLeft: -8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 641,\n      columnNumber: 29\n    }\n  }, \"Text\")), __jsx(Grid, {\n    item: true,\n    xs: 2,\n    style: {\n      marginTop: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 25\n    }\n  }, __jsx(InputColor, {\n    onChange: color => setLocalState(prevState => _objectSpread(_objectSpread({}, prevState), {}, {\n      textColor: color.hex\n    })),\n    placement: \"right\",\n    initialValue: textColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 644,\n      columnNumber: 29\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 2,\n    style: {\n      marginTop: 6\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 650,\n      columnNumber: 25\n    }\n  }, __jsx(Typography, {\n    component: 'span',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 651,\n      columnNumber: 29\n    }\n  }, \"Button\")), __jsx(Grid, {\n    item: true,\n    xs: 4,\n    style: {\n      marginTop: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 25\n    }\n  }, __jsx(InputColor, {\n    onChange: color => setLocalState(prevState => _objectSpread(_objectSpread({}, prevState), {}, {\n      buttonColor: color.hex\n    })),\n    placement: \"right\",\n    initialValue: buttonColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 654,\n      columnNumber: 29\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 660,\n      columnNumber: 25\n    }\n  }, __jsx(Button, {\n    onClick: () => setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      openDialog: true\n    })),\n    variant: \"contained\",\n    size: \"small\",\n    color: \"primary\",\n    \"aria-label\": \"upload\",\n    className: classes.uploadButton,\n    disabled: (state === null || state === void 0 ? void 0 : state.langCode) !== (state === null || state === void 0 ? void 0 : state.defaultLang),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 661,\n      columnNumber: 29\n    }\n  }, __jsx(CloudUploadIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 670,\n      columnNumber: 33\n    }\n  }), \"UPLOAD\"))))), isOptimizeImages && __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 678,\n      columnNumber: 37\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 679,\n      columnNumber: 21\n    }\n  }, __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 680,\n      columnNumber: 25\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 681,\n      columnNumber: 29\n    }\n  }, __jsx(PercentageSlider, {\n    marks: PERCENTAGE_VALUES,\n    value: quality,\n    onChange: (e, value) => handleImageQualityChange(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 682,\n      columnNumber: 33\n    }\n  }))))), __jsx(Grid, {\n    container: true,\n    justify: 'flex-start',\n    spacing: 3,\n    className: isRequested ? classes.disableEvent : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 692,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 693,\n      columnNumber: 17\n    }\n  }, __jsx(Paper, {\n    className: classes.paperBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 694,\n      columnNumber: 21\n    }\n  }, (sliderImages === null || sliderImages === void 0 ? void 0 : sliderImages.length) > 0 && sliderImages.map((value, index) => {\n    return __jsx(Grid, {\n      key: index,\n      container: true,\n      justify: 'center',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 37\n      }\n    }, __jsx(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 699,\n        columnNumber: 41\n      }\n    }, __jsx(Card, {\n      className: classes.card,\n      style: {\n        border: index + 1 === selectedIndex ? '2px solid red' : `1px solid ${COLORS === null || COLORS === void 0 ? void 0 : COLORS.secondary}`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 700,\n        columnNumber: 45\n      }\n    }, __jsx(\"div\", {\n      style: {\n        backgroundImage: `url(${GENERAL_SETTINGS.STATIC_URL + value.fileurl})`,\n        height: '100%',\n        width: '100%',\n        backgroundSize: 'cover',\n        borderRadius: 5\n      },\n      onMouseEnter: () => {\n        setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n          showDeleteButton: true,\n          hoverIndex: index\n        }));\n      },\n      onMouseLeave: () => {\n        setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n          showDeleteButton: false,\n          hoverIndex: index\n        }));\n      },\n      onClick: () => handleSelectedImage(index + 1, value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 703,\n        columnNumber: 49\n      }\n    }, showDeleteButton && hoverIndex === index && __jsx(IconButton, {\n      disabled: isRequested,\n      component: \"span\",\n      color: 'primary',\n      className: index === sliderImages.length - 1 || (state === null || state === void 0 ? void 0 : state.langCode) !== (state === null || state === void 0 ? void 0 : state.defaultLang) ? classes.disableEvent : '',\n      onClick: () => handleUpdateOrderNo(value.gid, value.orderno + 1, 'increment'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 715,\n        columnNumber: 101\n      }\n    }, __jsx(AddCircleIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 722,\n        columnNumber: 61\n      }\n    })), showDeleteButton && hoverIndex === index && __jsx(Typography, {\n      component: \"span\",\n      color: 'primary',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 726,\n        columnNumber: 101\n      }\n    }, value.orderno), showDeleteButton && hoverIndex === index && __jsx(IconButton, {\n      disabled: isRequested,\n      component: \"span\",\n      color: 'primary',\n      className: index === 0 || (state === null || state === void 0 ? void 0 : state.langCode) !== (state === null || state === void 0 ? void 0 : state.defaultLang) ? classes.disableEvent : '',\n      onClick: () => handleUpdateOrderNo(value.gid, value.orderno - 1, 'decrement'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 734,\n        columnNumber: 101\n      }\n    }, __jsx(RemoveCircleIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 741,\n        columnNumber: 61\n      }\n    })), showDeleteButton && hoverIndex === index && __jsx(IconButton, {\n      onClick: () => handleDeleteImage(value.gid),\n      disabled: isRequested || (state === null || state === void 0 ? void 0 : state.langCode) !== (state === null || state === void 0 ? void 0 : state.defaultLang),\n      \"aria-label\": \"upload picture\",\n      component: \"span\",\n      style: {\n        float: \"right\"\n      },\n      color: 'primary',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 745,\n        columnNumber: 101\n      }\n    }, __jsx(CancelIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 753,\n        columnNumber: 61\n      }\n    }))))));\n  }))), __jsx(Grid, {\n    item: true,\n    xs: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 765,\n      columnNumber: 17\n    }\n  }, __jsx(Paper, {\n    className: classes.paperBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 766,\n      columnNumber: 21\n    }\n  }, selectedIndex && __jsx(React.Fragment, null, __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 770,\n      columnNumber: 33\n    }\n  }, __jsx(Grid, {\n    container: true,\n    justify: 'flex-start',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 771,\n      columnNumber: 37\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 772,\n      columnNumber: 41\n    }\n  }, __jsx(Typography, {\n    component: 'h6',\n    variant: 'h6',\n    className: classes.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 773,\n      columnNumber: 45\n    }\n  }, \"Title\")), __jsx(Grid, {\n    item: true,\n    xs: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 781,\n      columnNumber: 41\n    }\n  }, __jsx(IconButton, {\n    \"aria-label\": \"Edit Title\",\n    color: \"primary\",\n    onClick: () => handleDialogOpen('title'),\n    style: {\n      float: 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 782,\n      columnNumber: 45\n    }\n  }, __jsx(BorderColorSharpIcon, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 788,\n      columnNumber: 49\n    }\n  }))))), __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 793,\n      columnNumber: 33\n    }\n  }, __jsx(Grid, {\n    container: true,\n    justify: 'flex-start',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 794,\n      columnNumber: 37\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 795,\n      columnNumber: 41\n    }\n  }, __jsx(Typography, {\n    component: 'h6',\n    variant: 'h6',\n    className: classes.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 796,\n      columnNumber: 45\n    }\n  }, \"Description\")), __jsx(Grid, {\n    item: true,\n    xs: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 804,\n      columnNumber: 41\n    }\n  }, __jsx(IconButton, {\n    \"aria-label\": \"Edit Title\",\n    color: \"primary\",\n    onClick: () => handleDialogOpen('description'),\n    style: {\n      float: 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 805,\n      columnNumber: 45\n    }\n  }, __jsx(BorderColorSharpIcon, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 811,\n      columnNumber: 49\n    }\n  }))))), __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 816,\n      columnNumber: 33\n    }\n  }, __jsx(Grid, {\n    container: true,\n    justify: 'flex-start',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 817,\n      columnNumber: 37\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 11,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 818,\n      columnNumber: 41\n    }\n  }, __jsx(Typography, {\n    component: 'h6',\n    variant: 'h6',\n    className: classes.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 819,\n      columnNumber: 45\n    }\n  }, \"Do you want to add button for image ?\")), __jsx(Grid, {\n    item: true,\n    xs: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 827,\n      columnNumber: 41\n    }\n  }, __jsx(Typography, {\n    component: 'div',\n    style: {\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 828,\n      columnNumber: 45\n    }\n  }, __jsx(Switch, {\n    size: 'small',\n    checked: isCta,\n    onChange: () => {\n      setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        cta: '',\n        isCta: !isCta,\n        ctaTitle: '',\n        ctaLink: ''\n      }));\n    },\n    disabled: (state === null || state === void 0 ? void 0 : state.langCode) !== (state === null || state === void 0 ? void 0 : state.defaultLang),\n    inputProps: {\n      'aria-label': 'secondary checkbox'\n    },\n    color: 'primary',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 829,\n      columnNumber: 49\n    }\n  }))))), isCta && __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 845,\n      columnNumber: 37\n    }\n  }, __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 846,\n      columnNumber: 41\n    }\n  }, __jsx(FormControl, {\n    component: \"fieldset\",\n    disabled: (state === null || state === void 0 ? void 0 : state.langCode) !== (state === null || state === void 0 ? void 0 : state.defaultLang),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 847,\n      columnNumber: 45\n    }\n  }, __jsx(RadioGroup, {\n    \"aria-label\": \"link-type\",\n    row: true,\n    value: ctaLinkType,\n    onChange: e => {\n      const {\n        value\n      } = e === null || e === void 0 ? void 0 : e.target;\n      setLocalState(prev => {\n        var _pageData$;\n\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          ctaLinkType: value,\n          ctaLink: value === 'internal' ? (_pageData$ = pageData[0]) === null || _pageData$ === void 0 ? void 0 : _pageData$.code : ''\n        });\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 848,\n      columnNumber: 49\n    }\n  }, __jsx(FormControlLabel, {\n    value: \"external\",\n    control: __jsx(Radio, {\n      color: 'primary',\n      size: 'small',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 852,\n        columnNumber: 97\n      }\n    }),\n    label: \"External Link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 852,\n      columnNumber: 53\n    }\n  }), __jsx(FormControlLabel, {\n    value: \"internal\",\n    control: __jsx(Radio, {\n      color: 'primary',\n      size: 'small',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 853,\n        columnNumber: 97\n      }\n    }),\n    label: \"Internal Link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 853,\n      columnNumber: 53\n    }\n  })))), __jsx(Grid, {\n    container: true,\n    justify: 'flex-start',\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 857,\n      columnNumber: 41\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 858,\n      columnNumber: 45\n    }\n  }, __jsx(TextField, {\n    size: 'small',\n    id: \"button-title\",\n    variant: \"outlined\",\n    label: 'Title',\n    value: ctaTitle,\n    fullWidth: true,\n    onChange: e => setLocalState(prev => {\n      var _e$target;\n\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        ctaTitle: e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.value\n      });\n    }),\n    style: {\n      marginTop: 8\n    },\n    helperText: ctaTitle && __jsx(Typography, {\n      variant: \"caption\",\n      className: classes.alignText,\n      display: \"block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 869,\n        columnNumber: 69\n      }\n    }, `${ctaTitle === null || ctaTitle === void 0 ? void 0 : ctaTitle.length} < 100`),\n    inputProps: {\n      maxLength: 99\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 859,\n      columnNumber: 49\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 880,\n      columnNumber: 45\n    }\n  }, ctaLinkType === 'external' ? __jsx(TextField, {\n    size: 'small',\n    id: \"button-link\",\n    variant: \"outlined\",\n    label: 'Link',\n    value: ctaLink,\n    error: ctaLink ? !validator.isURL(ctaLink) : false,\n    onChange: e => setLocalState(prev => {\n      var _e$target2;\n\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        ctaLink: e === null || e === void 0 ? void 0 : (_e$target2 = e.target) === null || _e$target2 === void 0 ? void 0 : _e$target2.value\n      });\n    }),\n    style: {\n      marginTop: 8\n    },\n    fullWidth: true,\n    helperText: ctaLink && __jsx(Typography, {\n      variant: \"caption\",\n      className: classes.alignText,\n      display: \"block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 897,\n        columnNumber: 76\n      }\n    }, `${ctaLink === null || ctaLink === void 0 ? void 0 : ctaLink.length} < 100`),\n    disabled: (state === null || state === void 0 ? void 0 : state.langCode) !== (state === null || state === void 0 ? void 0 : state.defaultLang),\n    inputProps: {\n      maxLength: 99\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 883,\n      columnNumber: 57\n    }\n  }) : __jsx(FormControl, {\n    variant: \"outlined\",\n    size: 'small',\n    style: {\n      marginTop: 8\n    },\n    fullWidth: true,\n    disabled: (state === null || state === void 0 ? void 0 : state.langCode) !== (state === null || state === void 0 ? void 0 : state.defaultLang),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 909,\n      columnNumber: 57\n    }\n  }, __jsx(Select, {\n    value: ctaLink,\n    onChange: e => {\n      const {\n        value\n      } = e === null || e === void 0 ? void 0 : e.target;\n      setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        ctaLink: value\n      }));\n    },\n    label: \"Web Pages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 915,\n      columnNumber: 61\n    }\n  }, pageData.map((option, index) => {\n    return __jsx(MenuItem, {\n      value: option.code,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 926,\n        columnNumber: 77\n      }\n    }, ' ', option.code, ' ');\n  })))))), __jsx(Divider, {\n    style: {\n      marginTop: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 940,\n      columnNumber: 33\n    }\n  }), __jsx(Button, {\n    onClick: handleUpdateImage,\n    variant: \"contained\",\n    size: \"small\",\n    color: \"primary\",\n    \"aria-label\": \"add\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 941,\n      columnNumber: 33\n    }\n  }, \"SUBMIT\"))))), __jsx(DropzoneDialog, {\n    open: openDialog,\n    onSave: handleSaveImage,\n    acceptedFiles: ['image/jpeg', 'image/png', 'image/bmp'],\n    showPreviews: true,\n    maxFileSize: 5000000,\n    filesLimit: 5,\n    onClose: () => setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      openDialog: false\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 956,\n      columnNumber: 13\n    }\n  }), isDialogOpen && __jsx(TextEditor, {\n    handleSaveTextEditor: handleTextEditorValue,\n    handleCancelTextEditor: handleCancelEditor,\n    data: editorValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 967,\n      columnNumber: 17\n    }\n  }));\n};\n\nexport default EditCardSlider;","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/components/page/sections/card-type-slider/EditCardSlider.js"],"names":["React","useContext","useEffect","useState","Delete","Insert","Patch","UseOrest","ViewList","FIELDTYPE","isErrorMsg","OREST_ENDPOINT","OREST_UPLOAD","REQUEST_METHOD_CONST","toast","WebCmsGlobal","useRouter","makeStyles","COLORS","DELETE_SUCCESS","PERCENTAGE_VALUES","SAVED_SUCCESS","UPLOAD_SUCCESS","Grid","Button","Card","Container","Divider","FormControl","FormControlLabel","IconButton","Paper","Radio","RadioGroup","TextField","Typography","CloudUploadIcon","CancelIcon","Switch","validator","DropzoneDialog","LoadingSpinner","axios","useSelector","AddCircleIcon","RemoveCircleIcon","Checkbox","PercentageSlider","Select","MenuItem","getSliderImages","patchListSliderImage","InputColor","TextEditor","BorderColorSharpIcon","useStyles","theme","submit","marginRight","spacing","marginTop","borderRadius","float","paperBlock","height","border","secondary","overflow","disableEvent","pointerEvents","opacity","uploadButton","marginBottom","marginLeft","card","width","margin","cursor","alignText","textAlign","color","text","fontWeight","fontSize","EditCardSlider","props","cardSlider","handleCmponent","langCardSlider","localState","setLocalState","isRequested","openDialog","title","description","selectedIndex","hoverIndex","showDeleteButton","itemCount","sliderID","sliderImages","selectedImage","isCta","ctaTitle","ctaLink","cta","isOptimizeImages","quality","ctaLinkType","pageData","langCardSliderData","textColor","buttonColor","isDialogOpen","editorValue","dialogType","state","formReducer","pageBuilder","classes","router","companyId","query","companyID","GENERAL_SETTINGS","token","authToken","apiUrl","OREST_URL","endpoint","RAFILE","params","hotelrefno","Number","then","res","status","data","prev","retErr","error","errorMsg","position","POSITION","TOP_RIGHT","langCode","defaultLang","service","type","gid","id","HCMITEMSLD","sldImages","sort","a","b","orderno","updatedImages","map","push","length","handleSelectedImage","warn","index","image","HCMITEMIMG","matchs","match","cta_title","replace","trim","ctaGid","split","ImageUpload","endPoint","masterID","file","url","binaryData","formData","FormData","append","Blob","name","options","method","headers","orsactive","masterid","scale","response","catch","asyncUpload","itemTreated","callback","hcmItemId","setTimeout","itemid","imgtype","IMG","sliderid","imgquality","imgscale","r1","mid","r","handleSaveImage","files","orderNo","requests","Promise","resolve","all","success","isRequestSend","handleDeleteImage","requestPassed","sldImage","updatedSliderImage","handleUpdateImage","updatedlangCardSliderData","handleUpdateOrderNo","orderType","tmpSliderImages","tmp","handleImageQualityChange","value","gids","LIST","PATCH","handleTextEditorValue","handleCancelEditor","handleDialogOpen","labelFont","prevState","hex","e","backgroundImage","STATIC_URL","fileurl","backgroundSize","target","code","maxLength","isURL","option"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\nimport {Delete, Insert, Patch, UseOrest, ViewList} from \"@webcms/orest\";\nimport {\n    FIELDTYPE,\n    isErrorMsg,\n    OREST_ENDPOINT,\n    OREST_UPLOAD,\n    REQUEST_METHOD_CONST\n} from \"../../../../../../../model/orest/constants\";\nimport {toast} from \"react-toastify\";\nimport WebCmsGlobal from \"components/webcms-global\";\nimport {useRouter} from \"next/router\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {COLORS, DELETE_SUCCESS, PERCENTAGE_VALUES, SAVED_SUCCESS, UPLOAD_SUCCESS} from \"../../../../constants\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n    Button,\n    Card,\n    Container,\n    Divider, FormControl,\n    FormControlLabel,\n    IconButton,\n    Paper, Radio, RadioGroup,\n    TextField,\n    Typography\n} from \"@material-ui/core\";\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport validator from \"validator\";\nimport {DropzoneDialog} from \"material-ui-dropzone\";\nimport LoadingSpinner from \"../../../../../../LoadingSpinner\";\nimport axios from \"axios\";\nimport {useSelector} from \"react-redux\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport {PercentageSlider} from \"../../../../../../../model/slider\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {getSliderImages, patchListSliderImage} from \"../../../../helpers/slider\";\nimport InputColor from \"react-input-color\";\nimport TextEditor from \"../text-editor\";\nimport BorderColorSharpIcon from \"@material-ui/icons/BorderColorSharp\";\n\nconst useStyles = makeStyles(theme => ({\n    submit: {\n        marginRight: theme.spacing(3),\n        marginTop: theme.spacing(1),\n        borderRadius: 20,\n        float: \"right\"\n    },\n    paperBlock: {\n        height: 350,\n        border: `2px solid ${COLORS?.secondary}`,\n        overflow: \"auto\"\n    },\n    disableEvent: {\n        pointerEvents: \"none\",\n        opacity: 0.5\n    },\n    uploadButton: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n        marginLeft: theme.spacing(1),\n        borderRadius: 20,\n        float: 'right'\n    },\n    card: {\n        height: 200,\n        width: 320,\n        margin: theme.spacing(1),\n        cursor: \"pointer\"\n    },\n    alignText: {\n        textAlign: \"right\",\n        color: \"red\"\n    },\n    text: {\n        marginTop: 16,\n        fontWeight: \"bold\",\n        fontSize: 15\n    }\n}));\n\nconst EditCardSlider = (props) => {\n\n    const { cardSlider, handleCmponent, langCardSlider } = props;\n\n    const [localState, setLocalState] = useState({\n        isRequested: false,\n        openDialog: false,\n        title: '',\n        description: '',\n        selectedIndex: null,\n        hoverIndex: null,\n        showDeleteButton: false,\n        itemCount: 1,\n        sliderID: null,\n        sliderImages: [],\n        selectedImage: null,\n        isCta: false,\n        ctaTitle: '',\n        ctaLink: '',\n        cta: '',\n        isOptimizeImages: false,\n        quality: 50,\n        ctaLinkType: '',\n        pageData: [],\n        langCardSliderData: [],\n        textColor: cardSlider?.textColor ? cardSlider.textColor : '#000000',\n        buttonColor: cardSlider?.buttonColor ? cardSlider.buttonColor : '#000000',\n        isDialogOpen: false,\n        editorValue: '',\n        dialogType: ''\n    });\n\n    const { isRequested, openDialog, description, title, selectedIndex,\n        hoverIndex, showDeleteButton, itemCount, sliderID, sliderImages,\n        selectedImage, isCta, ctaLink, ctaTitle, cta, quality, isOptimizeImages,\n        ctaLinkType, pageData, langCardSliderData, buttonColor, textColor,\n        isDialogOpen, dialogType, editorValue} = localState;\n\n    const state = useSelector(state => state.formReducer.pageBuilder);\n\n    const classes = useStyles();\n\n    const router = useRouter();\n    const companyId = router.query.companyID;\n    const {GENERAL_SETTINGS, token} = useContext(WebCmsGlobal);\n    const authToken = token || router.query.authToken;\n\n    useEffect(() => {\n        //getting data from rafile\n        ViewList({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.RAFILE,\n            token: authToken,\n            params: {\n                hotelrefno: Number(companyId),\n                query: `filetype::WEBPAGE,istemplate::false}`,\n            }\n        }).then(res => {\n            if (res.status === 200 && res?.data?.data) {\n                setLocalState(prev => ({...prev, pageData: res.data.data}))\n            } else {\n                const retErr = isErrorMsg(res);\n                toast.error(retErr.errorMsg, {\n                    position: toast.POSITION.TOP_RIGHT\n                });\n            }\n        })\n    }, []);\n\n    useEffect(() => {\n        if (state?.langCode === state?.defaultLang) {\n            handleCmponent({\n                service: \"hcmitemsld\",\n                type: \"card-slider\",\n                gid: cardSlider?.gid,\n                width: cardSlider?.width,\n                id: cardSlider?.id,\n                textColor: textColor,\n                buttonColor: buttonColor\n            });\n        } else {\n            handleCmponent({\n                cardSlider: langCardSliderData\n            })\n        }\n    }, [sliderImages, title, description, cta, langCardSliderData, textColor, buttonColor]);\n\n    useEffect(() => {\n        if (cardSlider?.gid) {\n            setLocalState(prev => ({...prev, isRequested: true}))\n            ViewList({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: OREST_ENDPOINT.HCMITEMSLD,\n                token: authToken,\n                params: {\n                    query: `gid:${cardSlider.gid}`,\n                    hotelrefno:  Number(companyId)\n                }\n            }).then(async res => {\n                if (res?.status === 200) {\n                    setLocalState(prev => ({...prev, sliderID: res?.data?.data[0]?.id}));\n                    const sldImages = await getSliderImages(GENERAL_SETTINGS.OREST_URL, authToken, companyId, res?.data?.data[0]?.id);\n                    sldImages.sort((a, b) => (a.orderno > b.orderno) ? 1 : -1);\n                    setLocalState(prev => ({...prev, isRequested: false}));\n                    if (sldImages) {\n                        let updatedImages = [];\n                        sldImages.map((data) => {\n                            updatedImages.push(data);\n                        });\n                        setLocalState(prev => ({...prev, sliderImages: updatedImages, itemCount: updatedImages.length + 1, openDialog: false}));\n                        handleSelectedImage(1, updatedImages[0]);\n                    } else {\n                        toast.warn('Something went wrong while fetching images. Please check network tab.', {\n                            position: toast.POSITION.TOP_RIGHT\n                        });\n                    }\n                } else {\n                    const retErr = isErrorMsg(res);\n                    setLocalState(prev => ({...prev, isRequested: false}))\n                    toast.error(retErr.errorMsg, {\n                        position: toast.POSITION.TOP_RIGHT\n                    });\n                }\n            })\n        }\n    }, [cardSlider]);\n\n    useEffect(() => {\n        if(ctaTitle && ctaLink) {\n            setLocalState(prev => ({...prev, cta: `<a target=\"_blank\" href=\"${ctaLink}\" > ${ctaTitle} </a>`}));\n        }\n    }, [ctaTitle, ctaLink]);\n\n    useEffect(() => {\n        if (langCardSlider?.cardSlider) {\n            setLocalState(prev => ({...prev, langCardSliderData: langCardSlider.cardSlider}))\n        }\n    }, [langCardSlider]);\n\n    const handleSelectedImage = (index, image) => {\n        setLocalState(prev => ({...prev, selectedIndex: index, selectedImage: image}));\n        if (state?.langCode === state?.defaultLang) {\n            ViewList({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: OREST_ENDPOINT.HCMITEMIMG,\n                token: authToken,\n                params: {\n                    query: `gid:${image.gid}`,\n                    sort: 'orderno',\n                    hotelrefno:  Number(companyId)\n                }\n            }).then(res => {\n                if (res?.status === 200) {\n                    if (res?.data?.data?.length > 0) {\n                        setLocalState(prev => ({...prev, title: res.data.data[0]?.title ? res.data.data[0]?.title : '',\n                            description: res.data.data[0]?.description ? res.data.data[0]?.description : '',\n                            cta: res.data.data[0]?.cta}));\n                        if (res.data.data[0].cta) {\n                            setLocalState(prev => ({...prev, isCta: true}));\n                            const matchs = res.data.data[0].cta.match(/\\bhttps?:\\/\\/\\S+/gi)\n                            if (matchs?.length > 0) {\n                                const cta_title = res.data.data[0].cta.replace(`<a target=\"_blank\" href=\"`,\n                                    '').replace(matchs[0], '').replace('>',\n                                    '').replace('</a>', '').trim();\n                                setLocalState(prev => ({...prev, ctaLink: matchs[0], ctaTitle: cta_title, ctaLinkType: 'external'}));\n                            } else {\n                                const ctaGid = res.data.data[0].cta.replace(`<a target=\"_blank\" href=\"`,\n                                    '').replace('>',\n                                    '').replace('</a>', '').replace('\"', '').trim()?.split(' ')[0];\n                                const cta_title = res.data.data[0].cta.replace(`<a target=\"_blank\" href=\"`,\n                                    '').replace(ctaGid + '\"', '').replace('>',\n                                    '').replace('</a>', '').trim();\n                                setLocalState(prev => ({...prev, ctaLink: ctaGid, ctaTitle: cta_title, ctaLinkType: 'internal'}));\n                            }\n                        } else {\n                            setLocalState(prev => ({...prev, ctaLink: '', ctaTitle: '', isCta: false}));\n                        }\n                    }\n                } else {\n                    const retErr = isErrorMsg(res);\n                    toast.error(retErr.errorMsg, {\n                        position: toast.POSITION.TOP_RIGHT\n                    });\n                }\n            })\n        } else {\n            if (langCardSliderData?.length > 0) {\n                setLocalState(prev => ({...prev, title: langCardSliderData[index - 1]?.title,\n                    description: langCardSliderData[index - 1]?.description}))\n                if (langCardSliderData[index - 1]?.cta) {\n                    setLocalState(prev => ({...prev, isCta: true}));\n                    const matchs = langCardSliderData[index - 1].cta.match(/\\bhttps?:\\/\\/\\S+/gi);\n                    if (matchs?.length > 0) {\n                        const cta_title = langCardSliderData[index - 1].cta.replace(`<a target=\"_blank\" href=\"`,\n                            '').replace(matchs[0], '').replace('>',\n                            '').replace('</a>', '').trim();\n                        setLocalState(prev => ({...prev, ctaLink: matchs[0], ctaTitle: cta_title, ctaLinkType: 'external'}));\n                    } else {\n                        const ctaGid = langCardSliderData[index - 1].cta.replace(`<a target=\"_blank\" href=\"`,\n                            '').replace('>',\n                            '').replace('</a>', '').replace('\"', '').trim()?.split(' ')[0];\n                        const cta_title = langCardSliderData[index - 1].cta.replace(`<a target=\"_blank\" href=\"`,\n                            '').replace(ctaGid + '\"', '').replace('>',\n                            '').replace('</a>', '').trim();\n                        setLocalState(prev => ({...prev, ctaLink: ctaGid, ctaTitle: cta_title, ctaLinkType: 'internal'}));\n                    }\n                } else {\n                    setLocalState(prev => ({...prev, ctaLink: '', ctaTitle: '', isCta: false}));\n                }\n            } else {\n                setLocalState(prev => ({...prev, title: langCardSlider?.cardSlider[index - 1]?.title,\n                    description: langCardSlider?.cardSlider[index - 1]?.description }))   ;\n                if (langCardSlider?.cardSlider[0]?.cta) {\n                    setLocalState(prev => ({...prev, isCta: true}));\n                    const matchs = langCardSlider?.cardSlider[0].cta.match(/\\bhttps?:\\/\\/\\S+/gi)\n                    if (matchs?.length > 0) {\n                        const cta_title = langCardSlider?.cardSlider[0].cta.replace(`<a target=\"_blank\" href=\"`,\n                            '').replace(matchs[0], '').replace('>',\n                            '').replace('</a>', '').trim();\n                        setLocalState(prev => ({...prev, ctaLink: matchs[0], ctaTitle: cta_title, ctaLinkType: 'external'}));\n                    } else {\n                        const ctaGid = langCardSlider?.cardSlider[0].cta.replace(`<a target=\"_blank\" href=\"`,\n                            '').replace('>',\n                            '').replace('</a>', '').replace('\"', '').trim()?.split(' ')[0];\n                        const cta_title = langCardSlider?.cardSlider[0].cta.replace(`<a target=\"_blank\" href=\"`,\n                            '').replace(ctaGid + '\"', '').replace('>',\n                            '').replace('</a>', '').trim();\n                        setLocalState(prev => ({...prev, ctaLink: ctaGid, ctaTitle: cta_title, ctaLinkType: 'internal'}));\n                    }\n                } else {\n                    setLocalState(prev => ({...prev, ctaLink: '', ctaTitle: '', isCta: false}));\n                }\n            }\n        }\n    }\n\n    const ImageUpload = (apiUrl, endPoint, token, masterID, file) => {\n        const url = apiUrl + '/' + endPoint + OREST_UPLOAD;\n        let binaryData = [];\n        binaryData.push(file);\n        let formData = new FormData();\n        formData.append('file', new Blob(binaryData, {type: file.type}), file.name);\n\n        const options = {\n            url: url,\n            method: 'post',\n            headers: {\n                \"Authorization\": `Bearer ${token}`,\n                'Content-Type': 'multipart/form-data'\n            },\n            params: {\n                orsactive: true,\n                masterid: masterID,\n                hotelrefno: companyId,\n                quality: quality/100,\n                scale: quality/100\n            },\n            data: formData\n        };\n\n        return axios(options).then(response => {\n            return response\n        }).catch(error => {\n            return error.response || {status: 0};\n        });\n    };\n\n    const asyncUpload = (file, itemTreated, callback) => {\n        if (state.hcmItemId) {\n            setTimeout(() => {\n                Insert({\n                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                    endpoint: OREST_ENDPOINT.HCMITEMIMG,\n                    token: authToken,\n                    data: {\n                        itemid: state.hcmItemId,\n                        imgtype: FIELDTYPE.IMG,\n                        orderno: itemTreated,\n                        sliderid: sliderID,\n                        hotelrefno: Number(companyId),\n                        imgquality: quality/100,\n                        imgscale: quality/100\n                    },\n                }).then(r1 => {\n                    if (r1.status === 200 && r1?.data?.data) {\n                        let updatedImages = [...sliderImages];\n                        updatedImages.push(r1?.data?.data);\n                        ImageUpload(\n                            GENERAL_SETTINGS.OREST_URL,\n                            OREST_ENDPOINT.RAFILE,\n                            authToken,\n                            r1.data.data.mid,\n                            file\n                        ).then(r => {\n                            if (r.status === 200) {\n                                callback();\n                            } else {\n                                callback();\n                            }\n                        });\n                    } else {\n                        callback();\n                    }\n                });\n            }, 100);\n        }\n    }\n\n    const handleSaveImage = (files) => {\n        setLocalState(prev => ({...prev, isRequested: true}))\n        let orderNo = itemCount;\n        let requests = files.map((file) => {\n            return new Promise( (resolve) => {\n                asyncUpload(file, orderNo, resolve);\n                orderNo ++ ;\n            });\n        });\n\n        Promise.all(requests).then(async () => {\n            const sldImages = await getSliderImages(GENERAL_SETTINGS.OREST_URL, authToken, companyId, sliderID);\n            sldImages.sort((a, b) => (a.orderno > b.orderno) ? 1 : -1)\n            setLocalState(prev => ({...prev, isRequested: false}));\n            if (sldImages) {\n                let updatedImages = [];\n                sldImages.map((data) => {\n                    updatedImages.push(data);\n                });\n                setLocalState(prev => ({...prev, sliderImages: updatedImages, itemCount: updatedImages.length + 1, openDialog: false}));\n                handleSelectedImage(1, updatedImages[0]);\n                toast.success(UPLOAD_SUCCESS, {\n                    position: toast.POSITION.TOP_RIGHT\n                });\n            } else {\n                setLocalState(prev => ({...prev, isRequestSend: false}));\n                toast.warn('Images not found', {\n                    position: toast.POSITION.TOP_RIGHT\n                });\n            }\n        });\n    }\n\n    const handleDeleteImage = (gid) => {\n        setLocalState(prev => ({...prev, isRequested: true}))\n        Delete({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.HCMITEMIMG,\n            token: authToken,\n            gid: gid,\n            params: {\n                hotelrefno: Number(companyId)\n            }\n        }).then(async res => {\n            if (res.status === 200) {\n                const sldImages = await getSliderImages(GENERAL_SETTINGS.OREST_URL, authToken, companyId, sliderID);\n                sldImages.sort((a, b) => (a.orderno > b.orderno) ? 1 : -1)\n                setLocalState(prev => ({...prev, isRequested: false}));\n                if (sldImages) {\n                    let updatedImages = [];\n                    sldImages.map((data, index) => {\n                        data.orderno = index + 1;\n                        updatedImages.push(data);\n                    });\n                    let requestPassed = true;\n                    for (const sldImage of sldImages) {\n                        const updatedSliderImage = patchListSliderImage(GENERAL_SETTINGS.OREST_URL, authToken, companyId, {orderno: sldImage.orderno}, {hotelrefno: Number(companyId)}, sldImage.gid);\n                        updatedSliderImage ? requestPassed = true : requestPassed = false;\n                    }\n                    if (requestPassed) {\n                        setLocalState(prev => ({...prev, sliderImages: updatedImages, selectedIndex: 1}));\n                        handleSelectedImage(1, updatedImages[0]);\n                    } else {\n                        setLocalState(prev => ({...prev, selectedIndex: null}));\n                    }\n                    toast.success(DELETE_SUCCESS, {\n                        position: toast.POSITION.TOP_RIGHT\n                    });\n                } else {\n                    setLocalState(prev => ({...prev, isRequestSend: false}));\n                    toast.warn('Images not found', {\n                        position: toast.POSITION.TOP_RIGHT\n                    });\n                }\n            } else {\n                const retErr = isErrorMsg(res);\n                setLocalState(prev => ({...prev, isRequested: false}))\n                toast.error(retErr.errorMsg, {\n                    position: toast.POSITION.TOP_RIGHT\n                });\n            }\n        });\n    }\n\n    const handleUpdateImage = () => {\n        setLocalState(prev => ({...prev, isRequested: true}));\n        if (state?.langCode === state?.defaultLang) {\n            Patch({ // update image\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: OREST_ENDPOINT.HCMITEMIMG,\n                token: authToken,\n                gid: selectedImage?.gid,\n                params: {\n                    hotelrefno: Number(companyId),\n                },\n                data: {\n                    title: title,\n                    description: description,\n                    cta: cta\n                }\n            }).then(res => {\n                if(res.status === 200) {\n                    setLocalState(prev => ({...prev, isRequested: false}));\n                    toast.success(SAVED_SUCCESS, {\n                        position: toast.POSITION.TOP_RIGHT\n                    });\n                } else {\n                    setLocalState(prev => ({...prev, isRequested: false}));\n                    const retErr = isErrorMsg(res);\n                    toast.error(retErr.errorMsg, {\n                        position: toast.POSITION.TOP_RIGHT\n                    });\n                }\n            })\n        } else {\n            const updatedlangCardSliderData = [...langCardSliderData];\n            updatedlangCardSliderData[selectedIndex - 1] = {\n                title: title,\n                description: description,\n                cta: cta\n            }\n            setLocalState(prev => ({...prev, langCardSliderData: updatedlangCardSliderData}));\n            setLocalState(prev => ({...prev, isRequested: false}));\n            toast.success(SAVED_SUCCESS, {\n                position: toast.POSITION.TOP_RIGHT\n            });\n        }\n    }\n\n    const handleUpdateOrderNo = async (gid, orderNo, orderType) => { // update order no of slider images\n        if (orderNo <= 0 || orderNo > sliderImages.length) {\n            setLocalState(prev => ({...prev, selectedIndex: null}))\n        } else {\n            const tmpSliderImages = [...sliderImages];\n            if (orderType === 'increment') {\n                const tmp = tmpSliderImages[orderNo - 1];\n                tmpSliderImages[orderNo - 1] = tmpSliderImages[orderNo - 2];\n                tmpSliderImages[orderNo - 2] = tmp;\n            } else {\n                const tmp = tmpSliderImages[orderNo - 1];\n                tmpSliderImages[orderNo - 1] = tmpSliderImages[orderNo];\n                tmpSliderImages[orderNo] = tmp;\n            }\n            tmpSliderImages.map((data, index) => {\n                data.orderno = index + 1;\n            });\n            setLocalState(prev => ({...prev, isRequested: true}));\n            let requestPassed = true;\n            for (const sldImage of tmpSliderImages) {\n                const updatedSliderImage = patchListSliderImage(GENERAL_SETTINGS.OREST_URL, authToken, companyId, {orderno: sldImage.orderno}, {hotelrefno: Number(companyId)}, sldImage.gid);\n                updatedSliderImage ? requestPassed = true : requestPassed = false;\n            }\n            setLocalState(prev => ({...prev, isRequested: false}));\n            if (requestPassed) {\n                setLocalState(prev => ({...prev, sliderImages: tmpSliderImages, itemCount: tmpSliderImages?.length + 1}));\n                handleSelectedImage(1, tmpSliderImages[0]);\n                toast.success('Order No Updated Successfully', {\n                    position: toast.POSITION.TOP_RIGHT\n                });\n            } else {\n                toast.error('Something went wrong while updating order no. Please check network tab.', {\n                    position: toast.POSITION.TOP_RIGHT\n                });\n            }\n        }\n    }\n\n    const handleImageQualityChange = (value) => {\n        if (value >= 10 && value <= 90 && value % 10 === 0) {\n            if (sliderImages.length) {\n                setLocalState(prev => ({...prev, isRequested: true}));\n                const gids = sliderImages.map(image => {\n                    return {gid: image.gid, imgquality: value / 100, imgscale: value / 100};\n                });\n                UseOrest({\n                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                    endpoint: OREST_ENDPOINT.HCMITEMIMG + '/' + OREST_ENDPOINT.LIST + '/' + OREST_ENDPOINT.PATCH,\n                    token: authToken,\n                    method: REQUEST_METHOD_CONST.PATCH,\n                    data: gids,\n                    params: {\n                        hotelrefno: Number(companyId),\n                    },\n                }).then(res => {\n                    if (res?.status === 200 && res?.data?.data) {\n                        setLocalState(prev => ({...prev, isRequested: false, quality: value}))\n                    } else {\n                        const retErr = isErrorMsg(res);\n                        toast.error(retErr.errorMsg, {\n                            position: toast.POSITION.TOP_RIGHT\n                        });\n                    }\n                })\n            } else {\n                setLocalState(prev => ({...prev, quality: value}))\n            }\n        }\n    }\n\n    const handleTextEditorValue = (value) => {\n        if (dialogType === 'title') {\n            setLocalState(prev => ({...prev, title: value}));\n        }\n        if (dialogType === 'description') {\n            setLocalState(prev => ({...prev, description: value}));\n        }\n        setLocalState(prev => ({...prev, isDialogOpen: false, dialogType: '', editorValue: ''}));\n    }\n\n    const handleCancelEditor = () => {\n        setLocalState(prev => ({...prev, isDialogOpen: false, dialogType: '', editorValue: ''}));\n    }\n\n    const handleDialogOpen = (type) => {\n        if (type === 'title') {\n            setLocalState(prev => ({...prev, isDialogOpen: true, dialogType: type, editorValue: title}));\n        }\n        if (type === 'description') {\n            setLocalState(prev => ({...prev, isDialogOpen: true, dialogType: type, editorValue: description}));\n        }\n    }\n\n    if (isRequested) {\n        return <LoadingSpinner size={50} style={{color: COLORS?.secondary}} />\n    }\n\n    return (\n        <React.Fragment>\n            <Grid container={true} justify={'flex-end'} className={isRequested ? classes.disableEvent : ''}  >\n                <Grid item xs={5}>\n                    <FormControlLabel\n                        className={classes.labelFont}\n                        disabled={state?.langCode !== state?.defaultLang}\n                        control={\n                            <Checkbox\n                                size={'small'}\n                                checked={isOptimizeImages}\n                                onChange={() => setLocalState(prev => ({...prev, isOptimizeImages: !isOptimizeImages}))}\n                                color=\"primary\"\n                            />\n                        }\n                        label=\"Optimize Images\"\n                    />\n                </Grid>\n                <Grid item xs={7} >\n                    <Grid container>\n                        <Grid item xs={1} style={{marginTop: 6, marginLeft: 16}}>\n                            <Typography component={'span'} style={{marginLeft: -8}}>Text</Typography>\n                        </Grid>\n                        <Grid item xs={2} style={{marginTop: 8}}>\n                            <InputColor\n                                onChange={(color) => setLocalState(prevState => ({...prevState, textColor: color.hex}))}\n                                placement=\"right\"\n                                initialValue={textColor}\n                            />\n                        </Grid>\n                        <Grid item xs={2} style={{marginTop: 6}}>\n                            <Typography component={'span'}>Button</Typography>\n                        </Grid>\n                        <Grid item xs={4} style={{marginTop: 8}}>\n                            <InputColor\n                                onChange={(color) => setLocalState(prevState => ({...prevState, buttonColor: color.hex}))}\n                                placement=\"right\"\n                                initialValue={buttonColor}\n                            />\n                        </Grid>\n                        <Grid item xs={2}>\n                            <Button\n                                onClick={() => setLocalState(prev => ({...prev, openDialog: true}))}\n                                variant=\"contained\"\n                                size=\"small\"\n                                color=\"primary\"\n                                aria-label=\"upload\"\n                                className={classes.uploadButton}\n                                disabled={state?.langCode !== state?.defaultLang}\n                            >\n                                <CloudUploadIcon />\n                                UPLOAD\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n            {\n                isOptimizeImages && <Grid container>\n                    <Grid item xs={12}>\n                        <Grid container>\n                            <Grid item xs={12}>\n                                <PercentageSlider\n                                    marks={PERCENTAGE_VALUES}\n                                    value={quality}\n                                    onChange={(e, value) => handleImageQualityChange(value)}\n                                />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            }\n            <Grid container justify={'flex-start'} spacing={3} className={isRequested ? classes.disableEvent : ''}>\n                <Grid item xs={5}>\n                    <Paper className={classes.paperBlock}>\n                        {\n                            sliderImages?.length > 0 && sliderImages.map((value, index) => {\n                                return (\n                                    <Grid key={index} container justify={'center'}>\n                                        <Grid item={true}>\n                                            <Card  className={classes.card}\n                                                   style={{border: index + 1 === selectedIndex ? '2px solid red' :\n                                                           `1px solid ${COLORS?.secondary}`}}>\n                                                <div style={{\n                                                    backgroundImage: `url(${GENERAL_SETTINGS.STATIC_URL + value.fileurl})`,\n                                                    height: '100%',\n                                                    width: '100%',\n                                                    backgroundSize: 'cover',\n                                                    borderRadius: 5,\n                                                }}\n                                                     onMouseEnter={() => {setLocalState(prev => ({...prev, showDeleteButton: true, hoverIndex: index}))}}\n                                                     onMouseLeave={() => {setLocalState(prev => ({...prev, showDeleteButton: false, hoverIndex: index}))}}\n                                                     onClick={() => handleSelectedImage(index + 1, value)}\n                                                >\n                                                    {\n                                                        showDeleteButton && hoverIndex === index && <IconButton\n                                                            disabled={isRequested}\n                                                            component=\"span\"\n                                                            color={'primary'}\n                                                            className={index === sliderImages.length - 1 || state?.langCode !== state?.defaultLang ? classes.disableEvent : ''}\n                                                            onClick={() => handleUpdateOrderNo(value.gid, value.orderno + 1, 'increment')}\n                                                        >\n                                                            <AddCircleIcon />\n                                                        </IconButton>\n                                                    }\n                                                    {\n                                                        showDeleteButton && hoverIndex === index && <Typography\n                                                            component=\"span\"\n                                                            color={'primary'}\n                                                        >\n                                                            {value.orderno}\n                                                        </Typography>\n                                                    }\n                                                    {\n                                                        showDeleteButton && hoverIndex === index && <IconButton\n                                                            disabled={isRequested}\n                                                            component=\"span\"\n                                                            color={'primary'}\n                                                            className={index === 0 || state?.langCode !== state?.defaultLang ? classes.disableEvent : ''}\n                                                            onClick={() => handleUpdateOrderNo(value.gid, value.orderno - 1, 'decrement')}\n                                                        >\n                                                            <RemoveCircleIcon />\n                                                        </IconButton>\n                                                    }\n                                                    {\n                                                        showDeleteButton && hoverIndex === index && <IconButton\n                                                            onClick={() => handleDeleteImage(value.gid)}\n                                                            disabled={isRequested || state?.langCode !== state?.defaultLang}\n                                                            aria-label=\"upload picture\"\n                                                            component=\"span\"\n                                                            style={{float: \"right\"}}\n                                                            color={'primary'}\n                                                        >\n                                                            <CancelIcon/>\n                                                        </IconButton>\n                                                    }\n                                                </div>\n                                            </Card>\n                                        </Grid>\n                                    </Grid>\n                                )\n                            })\n                        }\n                    </Paper>\n                </Grid>\n                <Grid item xs={7}>\n                    <Paper className={classes.paperBlock}>\n                        {\n                            selectedIndex &&\n                            <>\n                                <Container>\n                                    <Grid container justify={'flex-start'}>\n                                        <Grid item xs={3}>\n                                            <Typography\n                                                component={'h6'}\n                                                variant={'h6'}\n                                                className={classes.text}\n                                            >\n                                                Title\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item xs={9}>\n                                            <IconButton\n                                                aria-label=\"Edit Title\"\n                                                color=\"primary\"\n                                                onClick={() => handleDialogOpen('title')}\n                                                style={{float: 'right'}}\n                                            >\n                                                <BorderColorSharpIcon color=\"primary\"/>\n                                            </IconButton>\n                                        </Grid>\n                                    </Grid>\n                                </Container>\n                                <Container>\n                                    <Grid container justify={'flex-start'}>\n                                        <Grid item xs={3}>\n                                            <Typography\n                                                component={'h6'}\n                                                variant={'h6'}\n                                                className={classes.text}\n                                            >\n                                                Description\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item xs={9}>\n                                            <IconButton\n                                                aria-label=\"Edit Title\"\n                                                color=\"primary\"\n                                                onClick={() => handleDialogOpen('description')}\n                                                style={{float: 'right'}}\n                                            >\n                                                <BorderColorSharpIcon color=\"primary\" />\n                                            </IconButton>\n                                        </Grid>\n                                    </Grid>\n                                </Container>\n                                <Container>\n                                    <Grid container justify={'flex-start'}>\n                                        <Grid item xs={11}>\n                                            <Typography\n                                                component={'h6'}\n                                                variant={'h6'}\n                                                className={classes.text}\n                                            >\n                                                Do you want to add button for image ?\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item xs={1} >\n                                            <Typography component={'div'} style={{marginTop: 20}}>\n                                                <Switch\n                                                    size={'small'}\n                                                    checked={isCta}\n                                                    onChange={() => {\n                                                        setLocalState(prev => ({...prev, cta: '', isCta: !isCta, ctaTitle: '', ctaLink: ''}))\n                                                    }}\n                                                    disabled={state?.langCode !== state?.defaultLang}\n                                                    inputProps={{ 'aria-label': 'secondary checkbox' }}\n                                                    color={'primary'}\n                                                />\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Container>\n                                {\n                                    isCta &&\n                                    <Container>\n                                        <Grid container>\n                                            <FormControl component=\"fieldset\" disabled={state?.langCode !== state?.defaultLang}>\n                                                <RadioGroup aria-label=\"link-type\" row value={ctaLinkType} onChange={(e) => {\n                                                    const { value } = e?.target;\n                                                    setLocalState(prev => ({...prev, ctaLinkType: value, ctaLink: value === 'internal' ? pageData[0]?.code : ''}));\n                                                }}>\n                                                    <FormControlLabel value=\"external\" control={<Radio color={'primary'} size={'small'} />} label=\"External Link\" />\n                                                    <FormControlLabel value=\"internal\" control={<Radio color={'primary'} size={'small'} />} label=\"Internal Link\" />\n                                                </RadioGroup>\n                                            </FormControl>\n                                        </Grid>\n                                        <Grid container justify={'flex-start'} spacing={3}>\n                                            <Grid item xs={6}>\n                                                <TextField\n                                                    size={'small'}\n                                                    id=\"button-title\"\n                                                    variant={\"outlined\"}\n                                                    label={'Title'}\n                                                    value={ctaTitle}\n                                                    fullWidth\n                                                    onChange={(e) => setLocalState(prev => ({...prev, ctaTitle: e?.target?.value}))}\n                                                    style={{marginTop: 8}}\n                                                    helperText={\n                                                        ctaTitle && <Typography\n                                                            variant=\"caption\"\n                                                            className={classes.alignText}\n                                                            display=\"block\"\n                                                        >\n                                                            { `${ctaTitle?.length} < 100` }\n                                                        </Typography>\n                                                    }\n                                                    inputProps={{maxLength: 99}}\n                                                />\n                                            </Grid>\n                                            <Grid item xs={6}>\n                                                {\n                                                    ctaLinkType === 'external' ?\n                                                        <TextField\n                                                            size={'small'}\n                                                            id=\"button-link\"\n                                                            variant={\"outlined\"}\n                                                            label={'Link'}\n                                                            value={ctaLink}\n                                                            error={ctaLink ? !validator.isURL(ctaLink) : false}\n                                                            onChange={(e) => setLocalState(prev => ({\n                                                                ...prev,\n                                                                ctaLink: e?.target?.value\n                                                            }))}\n                                                            style={{marginTop: 8}}\n                                                            fullWidth\n                                                            helperText={\n                                                                ctaLink && <Typography\n                                                                    variant=\"caption\"\n                                                                    className={classes.alignText}\n                                                                    display=\"block\"\n                                                                >\n                                                                    {`${ctaLink?.length} < 100`}\n                                                                </Typography>\n                                                            }\n                                                            disabled={state?.langCode !== state?.defaultLang}\n                                                            inputProps={{maxLength: 99}}\n                                                        />\n                                                        :\n                                                        <FormControl variant=\"outlined\"\n                                                                     size={'small'}\n                                                                     style={{marginTop: 8}}\n                                                                     fullWidth\n                                                                     disabled={state?.langCode !== state?.defaultLang}\n                                                        >\n                                                            <Select\n                                                                value={ctaLink}\n                                                                onChange={(e) => {\n                                                                    const {value} = e?.target;\n                                                                    setLocalState(prev => ({...prev, ctaLink: value}))\n                                                                }}\n                                                                label=\"Web Pages\"\n                                                            >\n                                                                {\n                                                                    pageData.map((option, index) => {\n                                                                        return (\n                                                                            <MenuItem value={option.code} key={index}>\n                                                                                {' '}\n                                                                                {option.code}{' '}\n                                                                            </MenuItem>\n                                                                        )\n                                                                    })\n                                                                }\n                                                            </Select>\n                                                        </FormControl>\n                                                }\n                                            </Grid>\n                                        </Grid>\n                                    </Container>\n                                }\n                                <Divider style={{marginTop: 8}} />\n                                <Button\n                                    onClick={handleUpdateImage}\n                                    variant=\"contained\"\n                                    size=\"small\"\n                                    color=\"primary\"\n                                    aria-label=\"add\"\n                                    className={classes.submit}\n                                >\n                                    SUBMIT\n                                </Button>\n                            </>\n                        }\n                    </Paper>\n                </Grid>\n            </Grid>\n            <DropzoneDialog\n                open={openDialog}\n                onSave={handleSaveImage}\n                acceptedFiles={['image/jpeg', 'image/png', 'image/bmp']}\n                showPreviews={true}\n                maxFileSize={5000000}\n                filesLimit={5}\n                onClose={() => setLocalState(prev => ({...prev, openDialog: false}))}\n            />\n            {\n                isDialogOpen &&\n                <TextEditor\n                    handleSaveTextEditor={handleTextEditorValue}\n                    handleCancelTextEditor={handleCancelEditor}\n                    data={editorValue}\n                />\n            }\n        </React.Fragment>\n    )\n}\nexport default EditCardSlider"]},"metadata":{},"sourceType":"module"}