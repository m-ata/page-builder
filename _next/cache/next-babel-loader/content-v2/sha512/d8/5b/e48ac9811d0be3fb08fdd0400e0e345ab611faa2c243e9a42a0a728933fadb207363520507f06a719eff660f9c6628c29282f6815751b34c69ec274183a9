{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/steps/email/EmailPreview.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n//react imports\nimport React, { useEffect } from 'react'; //redux imports\n\nimport { connect } from 'react-redux'; //custom imports\n\nimport EmailHeader from \"../../components/email/header/EmailHeader\";\nimport EmailFooter from \"../../components/email/footer/EmailFooter\";\nimport Image from \"../../components/page/sections/image/Image\";\nimport Paragraph from \"../../components/page/sections/paragraph/Paragraph\"; //material ui imports\n\nimport { Container, Typography, Grid } from \"@material-ui/core\";\nimport { updateState as _updateState } from \"../../../../../state/actions\";\n\nvar EmailPreview = function EmailPreview(props) {\n  _s();\n\n  var _state$langsFile, _state$langsFile$body, _state$langsFile$body2, _state$langsFile$body3, _state$email4, _state$email4$body, _state$langsFile2, _state$langsFile2$foo, _state$langsFile2$foo2;\n\n  var state = props.state,\n      updateState = props.updateState;\n  useEffect(function () {\n    var seen = new Set();\n    var filteredArr = state.translatedLanguages.filter(function (el) {\n      var duplicate = seen.has(el.id);\n      seen.add(el.id);\n      return !duplicate;\n    });\n    updateState('pageBuilder', 'translatedLanguages', filteredArr);\n  }, []);\n  return __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    component: 'div',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, state.langCode === state.defaultLang && Object.keys(state.email.header).length > 0 && __jsx(EmailHeader, {\n    tpl: state.email.header.tpl,\n    items: state.email.header.items,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }), state.langCode !== state.defaultLang && Object.keys(state.email.header).length > 0 && __jsx(EmailHeader, {\n    tpl: state.email.header.tpl,\n    items: state.langsFile.header[state.langCode].items,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  })), __jsx(Typography, {\n    component: 'div',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, (state === null || state === void 0 ? void 0 : state.langCode) !== (state === null || state === void 0 ? void 0 : state.defaultLang) && (state === null || state === void 0 ? void 0 : (_state$langsFile = state.langsFile) === null || _state$langsFile === void 0 ? void 0 : (_state$langsFile$body = _state$langsFile.body) === null || _state$langsFile$body === void 0 ? void 0 : (_state$langsFile$body2 = _state$langsFile$body[state.langCode]) === null || _state$langsFile$body2 === void 0 ? void 0 : (_state$langsFile$body3 = _state$langsFile$body2.items) === null || _state$langsFile$body3 === void 0 ? void 0 : _state$langsFile$body3.length) > 0 && state.langsFile.body[state.langCode].items.map(function (item, index) {\n    var _item$items;\n\n    return __jsx(Grid, {\n      container: true,\n      spacing: 3,\n      key: index,\n      style: {\n        marginTop: 4\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 33\n      }\n    }, (item === null || item === void 0 ? void 0 : (_item$items = item.items) === null || _item$items === void 0 ? void 0 : _item$items.length) > 0 && item.items.map(function (subItem, i) {\n      var _state$email, _state$email$body$ind, _state$email$body$ind2, _state$email2, _state$email2$body$in, _state$email3, _state$email3$body$in, _state$email3$body$in2, _state$assets, _state$assets$colors, _state$assets$colors$;\n\n      return __jsx(Grid, {\n        item: true,\n        style: {\n          width: (state === null || state === void 0 ? void 0 : (_state$email = state.email) === null || _state$email === void 0 ? void 0 : (_state$email$body$ind = _state$email.body[index]) === null || _state$email$body$ind === void 0 ? void 0 : (_state$email$body$ind2 = _state$email$body$ind.items[i]) === null || _state$email$body$ind2 === void 0 ? void 0 : _state$email$body$ind2.width) + '%'\n        },\n        key: i,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 49\n        }\n      }, 'image' in subItem && __jsx(Image, {\n        imageComponent: state === null || state === void 0 ? void 0 : (_state$email2 = state.email) === null || _state$email2 === void 0 ? void 0 : (_state$email2$body$in = _state$email2.body[index]) === null || _state$email2$body$in === void 0 ? void 0 : _state$email2$body$in.items[i],\n        otherLangsImage: subItem.image,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 57\n        }\n      }), 'text' in subItem && __jsx(\"div\", {\n        style: {\n          backgroundColor: state !== null && state !== void 0 && (_state$email3 = state.email) !== null && _state$email3 !== void 0 && (_state$email3$body$in = _state$email3.body[index]) !== null && _state$email3$body$in !== void 0 && (_state$email3$body$in2 = _state$email3$body$in.items[i]) !== null && _state$email3$body$in2 !== void 0 && _state$email3$body$in2.useBgColor ? state === null || state === void 0 ? void 0 : (_state$assets = state.assets) === null || _state$assets === void 0 ? void 0 : (_state$assets$colors = _state$assets.colors) === null || _state$assets$colors === void 0 ? void 0 : (_state$assets$colors$ = _state$assets$colors.message) === null || _state$assets$colors$ === void 0 ? void 0 : _state$assets$colors$.main : 'white',\n          height: '100%'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 61\n        }\n      }, __jsx(Paragraph, {\n        paragraph: subItem.text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 65\n        }\n      })));\n    }));\n  }), (state === null || state === void 0 ? void 0 : state.langCode) === (state === null || state === void 0 ? void 0 : state.defaultLang) && (state === null || state === void 0 ? void 0 : (_state$email4 = state.email) === null || _state$email4 === void 0 ? void 0 : (_state$email4$body = _state$email4.body) === null || _state$email4$body === void 0 ? void 0 : _state$email4$body.length) > 0 && state.email.body.map(function (body, index) {\n    var _body$items;\n\n    return __jsx(Grid, {\n      container: true,\n      spacing: 1,\n      key: index,\n      style: {\n        marginTop: 4\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 29\n      }\n    }, (body === null || body === void 0 ? void 0 : (_body$items = body.items) === null || _body$items === void 0 ? void 0 : _body$items.length) > 0 && body.items.map(function (item, i) {\n      var _state$assets2, _state$assets2$colors, _state$assets2$colors2;\n\n      return __jsx(Grid, {\n        item: true,\n        style: {\n          width: item.width + '%'\n        },\n        key: i,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 45\n        }\n      }, (item === null || item === void 0 ? void 0 : item.type) === 'image' && __jsx(Image, {\n        imageComponent: item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 53\n        }\n      }), (item === null || item === void 0 ? void 0 : item.type) === 'paragraph' && __jsx(\"div\", {\n        style: {\n          backgroundColor: item !== null && item !== void 0 && item.useBgColor ? state === null || state === void 0 ? void 0 : (_state$assets2 = state.assets) === null || _state$assets2 === void 0 ? void 0 : (_state$assets2$colors = _state$assets2.colors) === null || _state$assets2$colors === void 0 ? void 0 : (_state$assets2$colors2 = _state$assets2$colors.message) === null || _state$assets2$colors2 === void 0 ? void 0 : _state$assets2$colors2.main : 'white',\n          height: '100%'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 53\n        }\n      }, __jsx(Paragraph, {\n        paragraph: item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 57\n        }\n      })));\n    }));\n  })), __jsx(Typography, {\n    component: 'div',\n    style: {\n      marginTop: 4\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, state.langCode === state.defaultLang && Object.keys(state.email.footer).length > 0 && __jsx(EmailFooter, {\n    items: state.email.footer.items,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }), state.langCode && state.langCode !== state.defaultLang && (state === null || state === void 0 ? void 0 : (_state$langsFile2 = state.langsFile) === null || _state$langsFile2 === void 0 ? void 0 : (_state$langsFile2$foo = _state$langsFile2.footer) === null || _state$langsFile2$foo === void 0 ? void 0 : (_state$langsFile2$foo2 = _state$langsFile2$foo[state.langCode]) === null || _state$langsFile2$foo2 === void 0 ? void 0 : _state$langsFile2$foo2.items) && __jsx(EmailFooter, {\n    items: state.langsFile.footer[state.langCode].items,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  })));\n};\n\n_s(EmailPreview, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = EmailPreview;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    state: state.formReducer.pageBuilder\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateState: function updateState(stateType, stateName, value) {\n      return dispatch(_updateState(stateType, stateName, value));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmailPreview);\n\nvar _c;\n\n$RefreshReg$(_c, \"EmailPreview\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/steps/email/EmailPreview.js"],"names":["React","useEffect","connect","EmailHeader","EmailFooter","Image","Paragraph","Container","Typography","Grid","updateState","EmailPreview","props","state","seen","Set","filteredArr","translatedLanguages","filter","el","duplicate","has","id","add","langCode","defaultLang","Object","keys","email","header","length","tpl","items","langsFile","body","map","item","index","marginTop","subItem","i","width","image","backgroundColor","useBgColor","assets","colors","message","main","height","text","type","footer","mapStateToProps","formReducer","pageBuilder","mapDispatchToProps","dispatch","stateType","stateName","value"],"mappings":"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","sourcesContent":["//react imports\nimport React, {useEffect} from 'react';\n//redux imports\nimport { connect } from 'react-redux';\n//custom imports\nimport EmailHeader from \"../../components/email/header/EmailHeader\";\nimport EmailFooter from \"../../components/email/footer/EmailFooter\";\nimport Image from \"../../components/page/sections/image/Image\";\nimport Paragraph from \"../../components/page/sections/paragraph/Paragraph\";\n//material ui imports\nimport {Container, Typography, Grid} from \"@material-ui/core\";\nimport {updateState} from \"../../../../../state/actions\";\n\nconst EmailPreview = (props) => {\n    const {\n        state,\n        updateState\n    } = props;\n\n    useEffect(() => {\n        const seen = new Set();\n        const filteredArr = state.translatedLanguages.filter(el => {\n            const duplicate = seen.has(el.id);\n            seen.add(el.id);\n            return !duplicate;\n        });\n        updateState('pageBuilder', 'translatedLanguages', filteredArr)\n    }, []);\n\n    return (\n        <Container>\n            <Typography component={'div'}>\n                {\n                    state.langCode === state.defaultLang &&\n                    Object.keys(state.email.header).length > 0 &&\n                    <EmailHeader\n                        tpl={state.email.header.tpl}\n                        items={state.email.header.items}\n                    />\n                }\n                {\n                    state.langCode !== state.defaultLang &&\n                    Object.keys(state.email.header).length > 0 &&\n                    <EmailHeader\n                        tpl={state.email.header.tpl}\n                        items={state.langsFile.header[state.langCode].items}\n                    />\n                }\n            </Typography>\n            <Typography component={'div'}>\n                {\n                    state?.langCode !== state?.defaultLang &&\n                    state?.langsFile?.body?.[state.langCode]?.items?.length > 0 &&\n                    state.langsFile.body[state.langCode].items.map((item, index) => {\n                        return (\n                                <Grid container spacing={3} key={index} style={{marginTop: 4}}>\n                                    {\n                                        item?.items?.length > 0 && item.items.map((subItem, i) => {\n                                            return (\n                                                <Grid item\n                                                      style={{width: state?.email?.body[index]?.items[i]?.width + '%'}}\n                                                      key={i}\n                                                >\n                                                    {\n                                                        ('image' in subItem) &&\n                                                        <Image\n                                                            imageComponent={state?.email?.body[index]?.items[i]}\n                                                            otherLangsImage={subItem.image}\n                                                        />\n                                                    }\n                                                    {\n                                                        ('text' in subItem) &&\n                                                            <div\n                                                                style={{backgroundColor: state?.email?.body[index]?.items[i]?.useBgColor ? state?.assets?.colors?.message?.main : 'white', height: '100%'}}\n                                                            >\n                                                                <Paragraph\n                                                                    paragraph={subItem.text}\n                                                                />\n                                                            </div>\n                                                    }\n                                                </Grid>\n                                            )\n                                        })\n                                    }\n                                </Grid>\n                        )\n                    })\n                }\n                {\n                    state?.langCode === state?.defaultLang && state?.email?.body?.length > 0 &&\n                    state.email.body.map((body, index) => {\n                        return (\n                            <Grid container spacing={1} key={index} style={{marginTop: 4}}>\n                                {\n                                    body?.items?.length > 0 && body.items.map((item, i) => {\n                                        return (\n                                            <Grid\n                                                item\n                                                style={{width: item.width + '%'}} key={i}\n                                            >\n                                                {\n                                                    item?.type === 'image' &&\n                                                    <Image imageComponent={item} />\n                                                }\n                                                {\n                                                    item?.type === 'paragraph' &&\n                                                    <div\n                                                        style={{backgroundColor: item?.useBgColor ? state?.assets?.colors?.message?.main : 'white', height: '100%'}}\n                                                    >\n                                                        <Paragraph paragraph={item} />\n                                                    </div>\n                                                }\n                                            </Grid>\n                                        )\n                                    })\n                                }\n                            </Grid>\n                        )\n                    })\n                }\n            </Typography>\n            <Typography component={'div'} style={{marginTop: 4}}>\n                {\n                    state.langCode === state.defaultLang &&\n                    Object.keys(state.email.footer).length > 0 &&\n                    <EmailFooter\n                        items={state.email.footer.items}\n                    />\n                }\n                {\n                    state.langCode && state.langCode !== state.defaultLang &&\n                    state?.langsFile?.footer?.[state.langCode]?.items &&\n                    <EmailFooter items={state.langsFile.footer[state.langCode].items} />\n                }\n            </Typography>\n\n        </Container>\n    )\n};\n\nconst mapStateToProps = state => {\n    return {\n        state: state.formReducer.pageBuilder\n    }\n};\n\nconst mapDispatchToProps = dispatch => ({\n    updateState: (stateType, stateName, value) => dispatch(updateState(stateType, stateName, value)),\n});\n\nexport default connect(\n    mapStateToProps, mapDispatchToProps\n)(EmailPreview)"]},"metadata":{},"sourceType":"module"}