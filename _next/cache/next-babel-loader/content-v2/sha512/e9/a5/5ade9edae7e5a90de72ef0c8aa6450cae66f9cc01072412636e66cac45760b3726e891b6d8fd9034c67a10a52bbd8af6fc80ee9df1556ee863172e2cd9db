{"ast":null,"code":"import _toConsumableArray from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"/Users/mata/app-cloudweb/components/guest/account/MyProfile/Surveys.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport styles from './style/Surveys.style';\nimport stylesTabPanel from '../style/TabPanel.style';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { ViewList } from '@webcms/orest';\nimport { DEFAULT_OREST_TOKEN, isErrorMsg, OREST_ENDPOINT } from '../../../../model/orest/constants';\nimport WebCmsGlobal from 'components/webcms-global';\nimport useNotifications from '../../../../model/notification/useNotifications';\nimport LoadingSpinner from '../../../LoadingSpinner';\nimport SurveyCard from './SurveyCard';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TabHeader from '../../../layout/components/TabHeader';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nvar useStyles = makeStyles(styles);\nvar useStylesTabPanel = makeStyles(stylesTabPanel);\nexport default function Surveys(props) {\n  _s();\n\n  var _this = this;\n\n  var isWidget = props.isWidget,\n      limit = props.limit,\n      loadMore = props.loadMore;\n  var classes = useStyles();\n  var classesTabPanel = useStylesTabPanel();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useContext = useContext(WebCmsGlobal),\n      GENERAL_SETTINGS = _useContext.GENERAL_SETTINGS; //redux\n\n\n  var _useNotifications = useNotifications(),\n      showError = _useNotifications.showError;\n\n  var token = useSelector(function (state) {\n    return state.orest.currentUser !== null ? state.orest.currentUser.auth.access_token : DEFAULT_OREST_TOKEN;\n  });\n  var changeHotelRefNo = useSelector(function (state) {\n    var _state$formReducer, _state$formReducer$gu;\n\n    return (state === null || state === void 0 ? void 0 : (_state$formReducer = state.formReducer) === null || _state$formReducer === void 0 ? void 0 : (_state$formReducer$gu = _state$formReducer.guest) === null || _state$formReducer$gu === void 0 ? void 0 : _state$formReducer$gu.changeHotelRefno) || null;\n  });\n  var loginfo = useSelector(function (state) {\n    return state.orest.currentUser && state.orest.currentUser.loginfo;\n  });\n  var isPortal = GENERAL_SETTINGS.ISPORTAL;\n  var hotelRefno = isPortal ? changeHotelRefNo : loginfo && loginfo.hotelrefno || GENERAL_SETTINGS.HOTELREFNO; //state\n\n  var _useState = useState([]),\n      surveys = _useState[0],\n      setSurveys = _useState[1];\n\n  var _useState2 = useState(false),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      isInitialized = _useState3[0],\n      setIsInitialized = _useState3[1];\n\n  var _useState4 = useState(false),\n      isDone = _useState4[0],\n      setIsDone = _useState4[1];\n\n  var _useState5 = useState(1),\n      defaultLimit = _useState5[0],\n      setLimit = _useState5[1];\n\n  var _useState6 = useState(0),\n      page = _useState6[0],\n      setPage = _useState6[1];\n\n  useEffect(function () {\n    var active = true;\n\n    if (active) {\n      if (isLoading) {\n        return undefined;\n      }\n\n      if (loginfo) {\n        setIsLoading(true);\n        axios({\n          url: \"\".concat(GENERAL_SETTINGS.OREST_URL, \"/survey/view/list?query=isactive:true,isweb:true,istemplate:false,isstd:false&limit=\").concat(limit || defaultLimit, \"&start=\").concat(page * (limit || defaultLimit), \"&sort=insdatetime-&allhotels=true&field=hotelrefno&text=\").concat(hotelRefno, \"&text=\").concat(GENERAL_SETTINGS.HOTELREFNO),\n          method: 'get',\n          headers: {\n            Authorization: \"Bearer \".concat(token),\n            'Content-Type': 'application/json'\n          }\n        }).then(function (r) {\n          if (active) {\n            if (r.status === 200) {\n              setSurveys([].concat(_toConsumableArray(surveys), _toConsumableArray(r.data.data)));\n              setIsInitialized(true);\n              setIsLoading(false);\n\n              if (r.data.count < (limit || defaultLimit)) {\n                setIsDone(true);\n              }\n            } else {\n              var retErr = isErrorMsg(r);\n              showError(retErr.errorMsg);\n              setIsInitialized(true);\n              setIsLoading(false);\n            }\n          }\n        });\n      } else {\n        setIsInitialized(true);\n      }\n    }\n\n    return function () {\n      active = false;\n    };\n  }, [page]);\n\n  function handleShowMore() {\n    setPage(page + 1);\n  }\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, __jsx(TabHeader, {\n    title: t('str_survey'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }), __jsx(Grid, {\n    container: true,\n    justify: 'center',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, isInitialized ? surveys.length > 0 ? surveys.map(function (survey, i) {\n    return __jsx(SurveyCard, {\n      survey: survey,\n      key: i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 36\n      }\n    });\n  }) : __jsx(Grid, {\n    item: true,\n    xs: 12,\n    className: classesTabPanel.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 25\n    }\n  }, __jsx(Typography, {\n    component: \"h3\",\n    className: classesTabPanel.nothingToShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 29\n    }\n  }, t('str_noSurveyFound'))) : __jsx(Grid, {\n    item: true,\n    xs: 12,\n    className: classesTabPanel.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, __jsx(LoadingSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 25\n    }\n  })), loadMore && surveys.length > 0 && __jsx(Grid, {\n    item: true,\n    xs: 12,\n    className: classesTabPanel.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, isLoading ? __jsx(LoadingSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 29\n    }\n  }) : !isDone && __jsx(Grid, {\n    container: true,\n    direction: 'row',\n    justify: 'center',\n    alignItems: 'center',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 33\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 37\n    }\n  }, __jsx(Button, {\n    onClick: handleShowMore,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 41\n    }\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    className: classesTabPanel.showMoreText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 45\n    }\n  }, t('str_showMore')), __jsx(ExpandMore, {\n    className: classesTabPanel.showMoreIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 45\n    }\n  })))))));\n}\n\n_s(Surveys, \"TbXWZB6XG44H7jgpsZAQy4Uvt/c=\", false, function () {\n  return [useStyles, useStylesTabPanel, useTranslation, useNotifications, useSelector, useSelector, useSelector];\n});\n\n_c = Surveys;\nSurveys.propTypes = {\n  isWidget: PropTypes.bool,\n  limit: PropTypes.number,\n  loadMore: PropTypes.bool\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Surveys\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/guest/account/MyProfile/Surveys.js"],"names":["React","useContext","useEffect","useState","axios","useSelector","styles","stylesTabPanel","Typography","Grid","ViewList","DEFAULT_OREST_TOKEN","isErrorMsg","OREST_ENDPOINT","WebCmsGlobal","useNotifications","LoadingSpinner","SurveyCard","makeStyles","TabHeader","PropTypes","Button","ExpandMore","useTranslation","useStyles","useStylesTabPanel","Surveys","props","isWidget","limit","loadMore","classes","classesTabPanel","t","GENERAL_SETTINGS","showError","token","state","orest","currentUser","auth","access_token","changeHotelRefNo","formReducer","guest","changeHotelRefno","loginfo","isPortal","ISPORTAL","hotelRefno","hotelrefno","HOTELREFNO","surveys","setSurveys","isLoading","setIsLoading","isInitialized","setIsInitialized","isDone","setIsDone","defaultLimit","setLimit","page","setPage","active","undefined","url","OREST_URL","method","headers","Authorization","then","r","status","data","count","retErr","errorMsg","handleShowMore","length","map","survey","i","gridItem","nothingToShow","showMoreText","showMoreIcon","propTypes","bool","number"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { useSelector } from 'react-redux'\nimport styles from './style/Surveys.style'\nimport stylesTabPanel from '../style/TabPanel.style'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport { ViewList } from '@webcms/orest'\nimport { DEFAULT_OREST_TOKEN, isErrorMsg, OREST_ENDPOINT } from '../../../../model/orest/constants'\nimport WebCmsGlobal from 'components/webcms-global'\nimport useNotifications from '../../../../model/notification/useNotifications'\nimport LoadingSpinner from '../../../LoadingSpinner'\nimport SurveyCard from './SurveyCard'\nimport { makeStyles } from '@material-ui/core/styles'\nimport TabHeader from '../../../layout/components/TabHeader'\nimport PropTypes from 'prop-types'\nimport Button from '@material-ui/core/Button'\nimport ExpandMore from '@material-ui/icons/ExpandMore'\nimport useTranslation from 'lib/translations/hooks/useTranslation'\n\nconst useStyles = makeStyles(styles)\nconst useStylesTabPanel = makeStyles(stylesTabPanel)\n\nexport default function Surveys(props) {\n    const { isWidget, limit, loadMore } = props\n    const classes = useStyles()\n    const classesTabPanel = useStylesTabPanel()\n\n    const { t } = useTranslation()\n    const { GENERAL_SETTINGS } = useContext(WebCmsGlobal)\n\n    //redux\n    const { showError } = useNotifications()\n    const token = useSelector((state) =>\n        state.orest.currentUser !== null ? state.orest.currentUser.auth.access_token : DEFAULT_OREST_TOKEN\n    )\n    const changeHotelRefNo = useSelector((state) => state?.formReducer?.guest?.changeHotelRefno || null)\n    const loginfo = useSelector((state) => state.orest.currentUser && state.orest.currentUser.loginfo)\n    const isPortal = GENERAL_SETTINGS.ISPORTAL;\n    let hotelRefno = isPortal ? changeHotelRefNo : loginfo && loginfo.hotelrefno || GENERAL_SETTINGS.HOTELREFNO\n\n    //state\n    const [surveys, setSurveys] = useState([])\n    const [isLoading, setIsLoading] = useState(false)\n    const [isInitialized, setIsInitialized] = useState(false)\n    const [isDone, setIsDone] = useState(false)\n    const [defaultLimit, setLimit] = useState(1)\n    const [page, setPage] = useState(0)\n\n    useEffect(() => {\n        let active = true\n        if (active) {\n            if (isLoading) {\n                return undefined\n            }\n\n            if (loginfo) {\n                setIsLoading(true)\n                axios({\n                    url: `${GENERAL_SETTINGS.OREST_URL}/survey/view/list?query=isactive:true,isweb:true,istemplate:false,isstd:false&limit=${limit || defaultLimit}&start=${page * (limit || defaultLimit)}&sort=insdatetime-&allhotels=true&field=hotelrefno&text=${hotelRefno}&text=${GENERAL_SETTINGS.HOTELREFNO}`,\n                    method: 'get',\n                    headers: {\n                        Authorization: `Bearer ${token}`,\n                        'Content-Type': 'application/json',\n                    }\n                }).then((r) => {\n                    if (active) {\n                        if (r.status === 200) {\n                            setSurveys([...surveys, ...r.data.data])\n                            setIsInitialized(true)\n                            setIsLoading(false)\n                            if (r.data.count < (limit || defaultLimit)) {\n                                setIsDone(true)\n                            }\n                        } else {\n                            const retErr = isErrorMsg(r)\n                            showError(retErr.errorMsg)\n                            setIsInitialized(true)\n                            setIsLoading(false)\n                        }\n                    }\n                })\n            } else {\n                setIsInitialized(true)\n            }\n        }\n\n        return () => {\n            active = false\n        }\n    }, [page])\n\n    function handleShowMore() {\n        setPage(page + 1)\n    }\n\n    return (\n        <React.Fragment>\n            <TabHeader title={t('str_survey')} />\n            <Grid container justify={'center'}>\n                {isInitialized ? (\n                    surveys.length > 0 ? (\n                        surveys.map((survey, i) => {\n                            return <SurveyCard survey={survey} key={i} />\n                        })\n                    ) : (\n                        <Grid item xs={12} className={classesTabPanel.gridItem}>\n                            <Typography component=\"h3\" className={classesTabPanel.nothingToShow}>\n                                {t('str_noSurveyFound')}\n                            </Typography>\n                        </Grid>\n                    )\n                ) : (\n                    <Grid item xs={12} className={classesTabPanel.gridItem}>\n                        <LoadingSpinner />\n                    </Grid>\n                )}\n\n                {loadMore && surveys.length > 0 && (\n                    <Grid item xs={12} className={classesTabPanel.gridItem}>\n                        {isLoading ? (\n                            <LoadingSpinner />\n                        ) : (\n                            !isDone && (\n                                <Grid container direction={'row'} justify={'center'} alignItems={'center'}>\n                                    <Grid item>\n                                        <Button onClick={handleShowMore}>\n                                            <Typography variant=\"h5\" className={classesTabPanel.showMoreText}>\n                                                {t('str_showMore')}\n                                            </Typography>\n                                            <ExpandMore className={classesTabPanel.showMoreIcon} />\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            )\n                        )}\n                    </Grid>\n                )}\n            </Grid>\n        </React.Fragment>\n    )\n}\n\nSurveys.propTypes = {\n    isWidget: PropTypes.bool,\n    limit: PropTypes.number,\n    loadMore: PropTypes.bool,\n}\n"]},"metadata":{},"sourceType":"module"}