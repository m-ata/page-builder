{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/booking/components/RoomCard.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useEffect, useContext, useState } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { IconButton, Grid, Paper, Typography, Button, Icon, Dialog, DialogActions, DialogContent, DialogTitle, Box, CardMedia, Chip } from '@material-ui/core';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nimport { OREST_ENDPOINT } from 'model/orest/constants';\nimport { setToState } from 'state/actions';\nimport { connect } from 'react-redux';\nimport WebCmsGlobal from '../../webcms-global';\nimport RoomPriceWrap from '../../ibe/RoomPriceWrap';\nimport ProgressButton from './ProgressButton';\nimport RoomTypeAttributes from './RoomTypeAttributes';\nimport Slider from 'react-slick';\nimport LoadingSpinner from 'components/LoadingSpinner';\nimport { useSnackbar } from 'notistack';\nimport Alert from '@material-ui/lab/Alert';\nimport PersonIcon from '@material-ui/icons/Person';\nimport TagManager from '@webcms-globals/tag-manager';\nimport * as global from '@webcms-globals';\nimport { defaultLocale } from 'lib/translations/config';\nimport PriceCalendar from './PriceCalendar';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  moreInfoRoot: {\n    position: 'relative',\n    textAlign: 'center',\n    marginTop: -8,\n    marginBottom: 10,\n    '&::before': {\n      content: '\"\"',\n      width: '100%',\n      marginTop: 12,\n      display: 'block',\n      position: 'absolute',\n      borderBottom: '1px dashed #ededed',\n      boxShadow: '0 -15px 15px 10px #ffffff'\n    }\n  },\n  moreInfoButton: {\n    fontSize: '0.7rem',\n    padding: '2px 10px 1px',\n    background: 'white'\n  },\n  wrapper: {\n    margin: 'auto',\n    boxShadow: '0 0 0 1px #d2d2d26b',\n    minHeight: 290\n  },\n  title: {\n    fontWeight: 'bold',\n    fontSize: '1.2rem'\n  },\n  description: {\n    display: 'block',\n    overflow: 'hidden',\n    textAlign: 'justify',\n    fontSize: '0.95rem'\n  },\n  thumbnail: {\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'cover',\n    width: '100%',\n    height: '100%',\n    borderRadius: 0,\n    cursor: 'pointer',\n    [theme.breakpoints.down(\"md\")]: {\n      minHeight: 480\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      minHeight: 220\n    }\n  },\n  rightColumn: {\n    padding: 16\n  },\n  attributeList: {\n    display: 'inline-flex',\n    padding: 0\n  },\n  attributeItem: {\n    position: 'relative',\n    listStyleType: 'none',\n    padding: '15px',\n    borderRight: '1px solid #ababab59',\n    '&:last-child': {\n      borderRight: 'none'\n    }\n  },\n  attributeIcon: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    '-ms-transform': 'translate(-50%, -50%)',\n    transform: 'translate(-50%, -50%)'\n  },\n  actionsContainer: {\n    display: 'flex',\n    alignItems: 'flex-end',\n    '& > div': {\n      textAlign: 'right'\n    }\n  },\n  addRoomTitle: {\n    paddingRight: 6\n  },\n  addRoomButton: {\n    padding: 6\n  },\n  deleteRoomButton: {\n    padding: 6\n  },\n  addRoomTotal: {\n    padding: 10,\n    width: 50\n  },\n  noRoomAlert: {\n    width: '100%'\n  },\n  sliderImage: {\n    padding: '0px 10px 10px 10px',\n    [theme.breakpoints.only('xs')]: {\n      padding: '0px 5px 5px 5px'\n    }\n  },\n  sliderDesc: {\n    marginTop: 50\n  },\n  media: {\n    height: '50vh',\n    [theme.breakpoints.only('xs')]: {\n      height: '25vh'\n    }\n  },\n  roomCardTotalPerInfoBox: {\n    position: 'relative',\n    display: 'inline-block',\n    top: -45,\n    left: 10,\n    [theme.breakpoints.down(\"md\")]: {\n      top: -310\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      top: -335\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      top: -425\n    }\n  },\n  roomCardTotalPerInfo: {\n    backgroundColor: '#ffffff',\n    borderRadius: 0,\n    marginLeft: 5,\n    boxShadow: 'inset 0 0 0px 1px #c8c8c8',\n    fontSize: 16,\n    color: '#616161',\n    opacity: 0.8\n  }\n}));\n\nconst ThumbnailSlider = props => {\n  const {\n    open,\n    onClose,\n    sliderID,\n    roomtypeDesc,\n    roomTypeLongText\n  } = props;\n  const {\n    GENERAL_SETTINGS\n  } = useContext(WebCmsGlobal);\n  const {\n    0: itemSlideData,\n    1: setItemSlideData\n  } = useState(false);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    t\n  } = useTranslation();\n  const classes = useStyles();\n  useEffect(() => {\n    let active = true;\n\n    if (active && open && sliderID) {\n      setIsLoading(true);\n      axios({\n        url: GENERAL_SETTINGS.BASE_URL + 'api/hotel/content/slider',\n        method: 'post',\n        params: {\n          sliderid: sliderID\n        }\n      }).then(sliderResponse => {\n        if (active) {\n          const sliderData = sliderResponse.data;\n\n          if (sliderData.success && sliderData.data.length > 0) {\n            setItemSlideData(sliderData.data);\n          } else {\n            setItemSlideData(null);\n          }\n\n          setIsLoading(false);\n        }\n      });\n    }\n\n    return () => {\n      active = false;\n      setIsLoading(false);\n    };\n  }, [open]);\n  const settings = {\n    dots: true,\n    infinite: true,\n    lazyLoad: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    centerMode: true,\n    swipeToSlide: true,\n    touchMove: true\n  };\n  return __jsx(Dialog, {\n    open: open,\n    onClose: () => onClose(false),\n    maxWidth: \"md\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }\n  }, __jsx(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 17\n    }\n  }, roomtypeDesc && roomtypeDesc.textOnly().isLangCode() ? t(roomtypeDesc.textOnly()) : roomtypeDesc && __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: roomtypeDesc\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 122\n    }\n  }) || ''), __jsx(DialogContent, {\n    dividers: true,\n    style: {\n      overflow: 'overlay',\n      padding: 40\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 17\n    }\n  }, isLoading ? __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 26\n    }\n  }, __jsx(Box, {\n    p: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 29\n    }\n  }, __jsx(LoadingSpinner, {\n    size: 50,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 33\n    }\n  }))) : __jsx(Slider, _extends({}, settings, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 26\n    }\n  }), itemSlideData && itemSlideData.map((item, i) => {\n    return __jsx(Box, {\n      key: i,\n      className: classes.sliderImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 37\n      }\n    }, __jsx(CardMedia, {\n      className: classes.media,\n      image: GENERAL_SETTINGS.STATIC_URL + item.fileurl,\n      title: \"Contemplative Reptile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 41\n      }\n    }));\n  })), __jsx(Typography, {\n    variant: \"body1\",\n    gutterBottom: true,\n    className: classes.sliderDesc,\n    align: \"justify\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 21\n    }\n  }, t(roomTypeLongText) || '')), __jsx(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    color: \"primary\",\n    onClick: () => onClose(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 21\n    }\n  }, t('str_close'))));\n};\n\nconst Description = ({\n  str = '',\n  useLength = 275,\n  useShort = 275,\n  openSlider,\n  moreInfoText\n}) => {\n  const classes = useStyles();\n\n  if (str && str.length >= useLength) {\n    return __jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 13\n      }\n    }, __jsx(Typography, {\n      className: classes.description,\n      variant: \"body1\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }\n    }, str.substring(0, useShort) + '...'), __jsx(\"div\", {\n      className: classes.moreInfoRoot,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }\n    }, __jsx(Button, {\n      className: classes.moreInfoButton,\n      variant: \"outlined\",\n      color: \"primary\",\n      size: \"small\",\n      onClick: () => openSlider(),\n      style: {\n        fontSize: '0.7rem',\n        padding: '2px 10px 1px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 21\n      }\n    }, moreInfoText)));\n  }\n\n  return __jsx(Typography, {\n    className: classes.description,\n    variant: \"body1\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 9\n    }\n  }, str || '');\n};\n\nconst RoomCard = props => {\n  const classes = useStyles();\n  const {\n    info,\n    totalRoomSelected,\n    state,\n    setToState\n  } = props;\n  const {\n    GENERAL_SETTINGS,\n    WEBCMS_DATA\n  } = useContext(WebCmsGlobal);\n  const {\n    0: totalRoom,\n    1: setTotalRoom\n  } = useState(1);\n  const {\n    0: isAddRoom,\n    1: setIsAddRoom\n  } = useState(false);\n  const {\n    0: isOpenSlider,\n    1: setIsOpenSlider\n  } = useState(false);\n  let isDisable = false;\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const {\n    t\n  } = useTranslation();\n  useEffect(() => {\n    if (totalRoomSelected > 0) {\n      setTotalRoom(1);\n    } else {\n      setTotalRoom(0);\n    }\n  }, [totalRoomSelected, state.bookingIsDisable]);\n  const settings = {\n    containerMaxWidth: 'lg',\n    containerSpacing: 0,\n    wrapper: {\n      elevation: 3,\n      square: true\n    },\n    leftColumn: {\n      xs: 12,\n      sm: 12,\n      md: 12,\n      lg: 4,\n      xl: 4\n    },\n    rightColumn: {\n      xs: 12,\n      sm: 12,\n      md: 12,\n      lg: 8,\n      xl: 8\n    }\n  };\n\n  const roomThumbnail = roomid => {\n    return state.roomAvailabilityList && state.roomAvailabilityList.find(item => item.id === roomid).imgfileurl;\n  };\n\n  const roomName = roomid => {\n    return state.roomAvailabilityList && state.roomAvailabilityList.find(item => item.id === roomid).description;\n  };\n\n  const priceCurr = roomid => {\n    return state.roomAvailabilityList && state.roomAvailabilityList.find(item => item.id === roomid).pricecurr;\n  };\n\n  const agencyChdAges = {\n    babyage: state.hotelBookingInfo.babyAge,\n    chd1age: state.hotelBookingInfo.chd1Age,\n    chd2age: state.hotelBookingInfo.chd2Age\n  },\n        getPrice = global.onlineReservation.useTotalPrice(info.priceList, state.bookingState.adult, state.childAges, agencyChdAges);\n\n  if (getPrice.totalPrice === null || getPrice.totalPrice === 0 || info.pricecurr === null) {\n    isDisable = true;\n  }\n\n  const handleAddRoom = () => {\n    var _GENERAL_SETTINGS$hot;\n\n    const addRoomData = {\n      ci: moment(state.bookingState.stayDates[0]).locale(defaultLocale).format(OREST_ENDPOINT.DATEFORMAT),\n      co: moment(state.bookingState.stayDates[1]).locale(defaultLocale).format(OREST_ENDPOINT.DATEFORMAT),\n      resdate: moment(moment()).locale(defaultLocale).format(OREST_ENDPOINT.DATEFORMAT),\n      adult: state.bookingState.adult,\n      child: state.bookingState.child,\n      night: state.bookingState.night,\n      childages: state.childAges,\n      resaction: 0,\n      roomtype: info.id,\n      qty: totalRoom,\n      agencyid: state.hotelBookingInfo.agencyid,\n      pricecurrid: info.pricecurrid || state.hotelBookingInfo.currencyid,\n      searchid: state.searchid,\n      uitoken: state.hotelUiToken\n    };\n\n    if (GENERAL_SETTINGS !== null && GENERAL_SETTINGS !== void 0 && (_GENERAL_SETTINGS$hot = GENERAL_SETTINGS.hotelSettings) !== null && _GENERAL_SETTINGS$hot !== void 0 && _GENERAL_SETTINGS$hot.maxroom && state.selectedRooms.length >= GENERAL_SETTINGS.hotelSettings.maxroom) {\n      setToState('ibe', ['isMaxRoomError'], true);\n      return enqueueSnackbar(t('str_youCanChooseAMaximumOfRooms', {\n        maxroom: GENERAL_SETTINGS.hotelSettings.maxroom\n      }), {\n        variant: 'warning',\n        autoHideDuration: 3000\n      });\n    }\n\n    setToState('ibe', ['bookingIsDisable'], true);\n    setIsAddRoom(true);\n    return axios({\n      url: GENERAL_SETTINGS.BASE_URL + 'api/ors/room/add',\n      method: 'post',\n      params: addRoomData\n    }).then(addRoomResponse => {\n      const roomResponse = addRoomResponse.data;\n\n      if (roomResponse.success) {\n        var _WEBCMS_DATA$assets, _WEBCMS_DATA$assets$m;\n\n        let newRoomData = state.selectedRooms,\n            addToCartData = [];\n        roomResponse.data.map((item, i) => {\n          let guestList = [];\n          const numberOfGuests = Number(item.totalpax) + Number(item.totalchd);\n          Array.from({\n            length: numberOfGuests\n          }).map(() => {\n            guestList.push({\n              firstName: {\n                value: '',\n                isrequired: true,\n                iserror: false\n              },\n              lastName: {\n                value: '',\n                isrequired: true,\n                iserror: false\n              },\n              mail: {\n                value: '',\n                isrequired: false,\n                iserror: false\n              },\n              birthDate: {\n                value: '',\n                isrequired: false,\n                iserror: false\n              },\n              phone: {\n                value: '',\n                isrequired: false,\n                iserror: false\n              },\n              note: {\n                value: '',\n                isrequired: false,\n                iserror: false\n              },\n              healthcode: {\n                value: '',\n                isrequired: false,\n                iserror: false\n              }\n            });\n          });\n          newRoomData.push({\n            gid: item.gid,\n            roomtypeid: item.roomtypeid,\n            thumbnail: roomThumbnail(item.roomtypeid),\n            roomtypename: roomName(item.roomtypeid),\n            pricecurr: priceCurr(item.roomtypeid),\n            reservno: item.reservno,\n            totalpax: item.totalpax,\n            totalchd: item.totalchd,\n            totalnight: item.totalnight,\n            totalprice: item.totalprice,\n            checkin: item.checkin,\n            checkout: item.checkout,\n            roomsearchid: roomResponse.searchid,\n            guestList: guestList\n          });\n          addToCartData.push({\n            reservNo: item.reservno,\n            id: item.roomtypeid,\n            name: roomName(item.roomtypeid),\n            price: global.helper.formatPrice(item.totalprice),\n            qty: 1,\n            category: 'Room'\n          });\n        });\n        enqueueSnackbar(t('str_addedRoomSuccess'), {\n          variant: 'success',\n          autoHideDuration: 3000\n        });\n        setToState('ibe', ['selectedRooms'], newRoomData);\n        setToState('ibe', ['bookingIsDisable'], false);\n        setIsAddRoom(false);\n\n        if (WEBCMS_DATA !== null && WEBCMS_DATA !== void 0 && (_WEBCMS_DATA$assets = WEBCMS_DATA.assets) !== null && _WEBCMS_DATA$assets !== void 0 && (_WEBCMS_DATA$assets$m = _WEBCMS_DATA$assets.meta) !== null && _WEBCMS_DATA$assets$m !== void 0 && _WEBCMS_DATA$assets$m.googleTag) {\n          var _WEBCMS_DATA$assets2, _WEBCMS_DATA$assets2$;\n\n          TagManager.booking.setAddRoom({\n            eventLabel: 'Add to Cart',\n            hotelName: WEBCMS_DATA === null || WEBCMS_DATA === void 0 ? void 0 : (_WEBCMS_DATA$assets2 = WEBCMS_DATA.assets) === null || _WEBCMS_DATA$assets2 === void 0 ? void 0 : (_WEBCMS_DATA$assets2$ = _WEBCMS_DATA$assets2.meta) === null || _WEBCMS_DATA$assets2$ === void 0 ? void 0 : _WEBCMS_DATA$assets2$.title,\n            hotelId: GENERAL_SETTINGS.HOTELREFNO,\n            ciDate: addRoomData.ci,\n            coDate: addRoomData.co,\n            adult: addRoomData.adult,\n            child: addRoomData.child,\n            currencyCode: priceCurr(addRoomData.roomtype),\n            addToCartData: addToCartData\n          });\n        }\n      } else {\n        enqueueSnackbar(t('str_addRoomError'), {\n          variant: 'warning',\n          autoHideDuration: 3000\n        });\n        setToState('ibe', ['bookingIsDisable'], false);\n        setIsAddRoom(false);\n      }\n    });\n  };\n\n  const handleIncRoom = () => {\n    if (totalRoomSelected > 0 && totalRoomSelected > totalRoom) {\n      setTotalRoom(totalRoom + 1);\n    }\n  };\n\n  const handleSubRoom = () => {\n    if (totalRoom > 1) {\n      setTotalRoom(prevTotalRoom => prevTotalRoom - 1);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 9\n    }\n  }, __jsx(Paper, {\n    className: classes.wrapper,\n    elevation: settings.wrapper.elevation,\n    square: settings.wrapper.square,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: settings.containerSpacing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: settings.leftColumn.xs,\n    sm: settings.leftColumn.sm,\n    md: settings.leftColumn.md,\n    lg: settings.leftColumn.lg,\n    xl: settings.leftColumn.xl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: classes.thumbnail,\n    onClick: () => setIsOpenSlider(true),\n    style: {\n      backgroundImage: `url(${info.imgfileurl && GENERAL_SETTINGS.STATIC_URL + '/' + info.imgfileurl || 'imgs/not-found.png'})`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 25\n    }\n  })), __jsx(Grid, {\n    className: classes.rightColumn,\n    item: true,\n    xs: settings.rightColumn.xs,\n    sm: settings.rightColumn.sm,\n    md: settings.rightColumn.md,\n    lg: settings.rightColumn.lg,\n    xl: settings.rightColumn.xl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 21\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 25\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 29\n    }\n  }, __jsx(Typography, {\n    className: classes.title,\n    variant: \"h5\",\n    component: \"h2\",\n    gutterBottom: true,\n    noWrap: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 33\n    }\n  }, t(info.shorttext)), __jsx(Description, {\n    str: t(info.longtext),\n    openSlider: () => setIsOpenSlider(true),\n    moreInfoText: t('str_moreInfo'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 33\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 29\n    }\n  }, __jsx(RoomTypeAttributes, {\n    roomtypeid: info.id,\n    roomgid: info.roomgid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 32\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 29\n    }\n  }, __jsx(\"div\", {\n    className: classes.actionsContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 33\n    }\n  }, !isDisable ? __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 41\n    }\n  }, __jsx(\"div\", {\n    style: {\n      flexGrow: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 45\n    }\n  }, __jsx(Typography, {\n    className: classes.addRoomTitle,\n    variant: \"body2\",\n    display: \"inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 49\n    }\n  }, t('str_rooms')), __jsx(IconButton, {\n    className: classes.deleteRoomButton,\n    \"aria-label\": \"delete-room\",\n    disabled: isDisable || state.bookingIsDisable || totalRoom === 1 || totalRoomSelected === 0,\n    onClick: () => {\n      handleSubRoom();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 49\n    }\n  }, __jsx(Icon, {\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 53\n    }\n  }, \"remove_circle_outline\")), __jsx(Typography, {\n    className: classes.addRoomTotal,\n    variant: \"button\",\n    display: \"inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 49\n    }\n  }, totalRoom), __jsx(IconButton, {\n    className: classes.addRoomButton,\n    \"aria-label\": \"add-room\",\n    disabled: isDisable || state.bookingIsDisable || totalRoomSelected === totalRoom || totalRoomSelected === 0,\n    onClick: () => {\n      var _GENERAL_SETTINGS$hot2;\n\n      const selectedTotalRooms = state.selectedRooms.length + totalRoom;\n\n      if (GENERAL_SETTINGS !== null && GENERAL_SETTINGS !== void 0 && (_GENERAL_SETTINGS$hot2 = GENERAL_SETTINGS.hotelSettings) !== null && _GENERAL_SETTINGS$hot2 !== void 0 && _GENERAL_SETTINGS$hot2.maxroom && selectedTotalRooms >= GENERAL_SETTINGS.hotelSettings.maxroom) {\n        setToState('ibe', ['isMaxRoomError'], true);\n        return enqueueSnackbar(t('str_youCanChooseAMaximumOfRooms', {\n          maxroom: GENERAL_SETTINGS.hotelSettings.maxroom\n        }), {\n          variant: 'warning',\n          autoHideDuration: 3000\n        });\n      }\n\n      handleIncRoom();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 49\n    }\n  }, __jsx(Icon, {\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 53\n    }\n  }, \"add_circle_outline\"))), __jsx(\"div\", {\n    style: {\n      flexGrow: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 45\n    }\n  }, __jsx(RoomPriceWrap, {\n    totalPaxPrice: getPrice.totalPrice,\n    currency: info.pricecurr,\n    discTotalPaxPrice: getPrice.discTotalPrice,\n    discountDescription: getPrice.discTotalPrice !== null && Number(getPrice.discTotalPrice) > 0 ? `%${global.onlineReservation.showDiscountRate(getPrice.totalPrice, getPrice.discTotalPrice)} ${t('str_totalDiscount')}` : false,\n    priceList: info.priceList,\n    adult: state.bookingState.adult,\n    chdAges: state.childAges,\n    agencyChdAges: agencyChdAges,\n    checkin: moment(state.bookingState.stayDates[0]).locale(defaultLocale).format(OREST_ENDPOINT.DATEFORMAT),\n    checkout: moment(state.bookingState.stayDates[1]).locale(defaultLocale).format(OREST_ENDPOINT.DATEFORMAT),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 48\n    }\n  }), __jsx(ProgressButton, {\n    isLoading: isAddRoom && isAddRoom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 49\n    }\n  }, __jsx(Button, {\n    disabled: isDisable || totalRoomSelected === 0 || isAddRoom && isAddRoom,\n    onClick: () => !state.bookingIsDisable && handleAddRoom(),\n    variant: \"contained\",\n    size: \"small\",\n    color: \"primary\",\n    disableElevation: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 53\n    }\n  }, t('str_addRoom'))))) : __jsx(Alert, {\n    variant: \"outlined\",\n    severity: \"info\",\n    className: classes.noRoomAlert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 41\n    }\n  }, t('str_noRoomsAvailable')))))))), __jsx(ThumbnailSlider, {\n    open: isOpenSlider,\n    onClose: e => setIsOpenSlider(e),\n    sliderID: info.sliderid,\n    roomtypeDesc: info.shorttext,\n    roomTypeLongText: (info === null || info === void 0 ? void 0 : info.longtext) || '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 603,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: classes.roomCardTotalPerInfoBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 604,\n      columnNumber: 13\n    }\n  }, info !== null && info !== void 0 && info.totalpax ? __jsx(Chip, {\n    variant: \"outlined\",\n    avatar: __jsx(PersonIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 54\n      }\n    }),\n    label: info.totalpax,\n    className: classes.roomCardTotalPerInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 21\n    }\n  }) : null));\n};\n\nconst mapStateToProps = state => {\n  return {\n    state: state.formReducer.ibe\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RoomCard);","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/booking/components/RoomCard.js"],"names":["React","useEffect","useContext","useState","axios","moment","makeStyles","IconButton","Grid","Paper","Typography","Button","Icon","Dialog","DialogActions","DialogContent","DialogTitle","Box","CardMedia","Chip","useTranslation","OREST_ENDPOINT","setToState","connect","WebCmsGlobal","RoomPriceWrap","ProgressButton","RoomTypeAttributes","Slider","LoadingSpinner","useSnackbar","Alert","PersonIcon","TagManager","global","defaultLocale","PriceCalendar","useStyles","theme","root","flexGrow","moreInfoRoot","position","textAlign","marginTop","marginBottom","content","width","display","borderBottom","boxShadow","moreInfoButton","fontSize","padding","background","wrapper","margin","minHeight","title","fontWeight","description","overflow","thumbnail","backgroundRepeat","backgroundSize","height","borderRadius","cursor","breakpoints","down","rightColumn","attributeList","attributeItem","listStyleType","borderRight","attributeIcon","top","left","transform","actionsContainer","alignItems","addRoomTitle","paddingRight","addRoomButton","deleteRoomButton","addRoomTotal","noRoomAlert","sliderImage","only","sliderDesc","media","roomCardTotalPerInfoBox","roomCardTotalPerInfo","backgroundColor","marginLeft","color","opacity","ThumbnailSlider","props","open","onClose","sliderID","roomtypeDesc","roomTypeLongText","GENERAL_SETTINGS","itemSlideData","setItemSlideData","isLoading","setIsLoading","t","classes","active","url","BASE_URL","method","params","sliderid","then","sliderResponse","sliderData","data","success","length","settings","dots","infinite","lazyLoad","speed","slidesToShow","slidesToScroll","centerMode","swipeToSlide","touchMove","textOnly","isLangCode","__html","map","item","i","STATIC_URL","fileurl","Description","str","useLength","useShort","openSlider","moreInfoText","substring","RoomCard","info","totalRoomSelected","state","WEBCMS_DATA","totalRoom","setTotalRoom","isAddRoom","setIsAddRoom","isOpenSlider","setIsOpenSlider","isDisable","enqueueSnackbar","bookingIsDisable","containerMaxWidth","containerSpacing","elevation","square","leftColumn","xs","sm","md","lg","xl","roomThumbnail","roomid","roomAvailabilityList","find","id","imgfileurl","roomName","priceCurr","pricecurr","agencyChdAges","babyage","hotelBookingInfo","babyAge","chd1age","chd1Age","chd2age","chd2Age","getPrice","onlineReservation","useTotalPrice","priceList","bookingState","adult","childAges","totalPrice","handleAddRoom","addRoomData","ci","stayDates","locale","format","DATEFORMAT","co","resdate","child","night","childages","resaction","roomtype","qty","agencyid","pricecurrid","currencyid","searchid","uitoken","hotelUiToken","hotelSettings","maxroom","selectedRooms","variant","autoHideDuration","addRoomResponse","roomResponse","newRoomData","addToCartData","guestList","numberOfGuests","Number","totalpax","totalchd","Array","from","push","firstName","value","isrequired","iserror","lastName","mail","birthDate","phone","note","healthcode","gid","roomtypeid","roomtypename","reservno","totalnight","totalprice","checkin","checkout","roomsearchid","reservNo","name","price","helper","formatPrice","category","assets","meta","googleTag","booking","setAddRoom","eventLabel","hotelName","hotelId","HOTELREFNO","ciDate","coDate","currencyCode","handleIncRoom","handleSubRoom","prevTotalRoom","backgroundImage","shorttext","longtext","roomgid","selectedTotalRooms","discTotalPrice","showDiscountRate","e","mapStateToProps","formReducer","ibe","mapDispatchToProps","dispatch","stateType","stateName"],"mappings":"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","sourcesContent":["import React, {useEffect, useContext, useState} from 'react'\nimport axios from 'axios'\nimport moment from 'moment'\nimport { makeStyles } from '@material-ui/core/styles'\nimport {\n    IconButton,\n    Grid,\n    Paper,\n    Typography,\n    Button,\n    Icon,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Box,\n    CardMedia,\n    Chip\n} from '@material-ui/core'\nimport useTranslation from 'lib/translations/hooks/useTranslation'\nimport { OREST_ENDPOINT } from 'model/orest/constants'\nimport { setToState } from 'state/actions'\nimport { connect } from 'react-redux'\nimport WebCmsGlobal from '../../webcms-global'\nimport RoomPriceWrap from '../../ibe/RoomPriceWrap'\nimport ProgressButton from './ProgressButton'\nimport RoomTypeAttributes from './RoomTypeAttributes'\nimport Slider from 'react-slick'\nimport LoadingSpinner from 'components/LoadingSpinner'\nimport { useSnackbar } from 'notistack'\nimport Alert from '@material-ui/lab/Alert'\nimport PersonIcon from '@material-ui/icons/Person'\nimport TagManager from '@webcms-globals/tag-manager'\nimport * as global from '@webcms-globals'\nimport { defaultLocale } from 'lib/translations/config'\nimport PriceCalendar from './PriceCalendar'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1\n    },\n    moreInfoRoot: {\n        position: 'relative',\n        textAlign: 'center',\n        marginTop: -8,\n        marginBottom: 10,\n        '&::before': {\n            content: '\"\"',\n            width: '100%',\n            marginTop: 12,\n            display: 'block',\n            position: 'absolute',\n            borderBottom: '1px dashed #ededed',\n            boxShadow: '0 -15px 15px 10px #ffffff',\n        },\n    },\n    moreInfoButton: {\n        fontSize: '0.7rem',\n        padding: '2px 10px 1px',\n        background: 'white',\n    },\n    wrapper: {\n        margin: 'auto',\n        boxShadow: '0 0 0 1px #d2d2d26b',\n        minHeight: 290\n    },\n    title: {\n        fontWeight: 'bold',\n        fontSize: '1.2rem'\n    },\n    description: {\n        display: 'block',\n        overflow: 'hidden',\n        textAlign: 'justify',\n        fontSize: '0.95rem'\n    },\n    thumbnail: {\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover',\n        width: '100%',\n        height: '100%',\n        borderRadius: 0,\n        cursor: 'pointer',\n        [theme.breakpoints.down(\"md\")]: {\n            minHeight: 480\n        },\n        [theme.breakpoints.down(\"xs\")]: {\n            minHeight: 220\n        }\n    },\n    rightColumn: {\n        padding: 16,\n    },\n    attributeList: {\n        display: 'inline-flex',\n        padding: 0,\n    },\n    attributeItem: {\n        position: 'relative',\n        listStyleType: 'none',\n        padding: '15px',\n        borderRight: '1px solid #ababab59',\n        '&:last-child': {\n            borderRight: 'none',\n        },\n    },\n    attributeIcon: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        '-ms-transform': 'translate(-50%, -50%)',\n        transform: 'translate(-50%, -50%)',\n    },\n    actionsContainer: {\n        display: 'flex',\n        alignItems: 'flex-end',\n        '& > div': {\n            textAlign: 'right',\n        },\n    },\n    addRoomTitle:{\n      paddingRight: 6\n    },\n    addRoomButton: {\n        padding: 6,\n    },\n    deleteRoomButton: {\n        padding: 6,\n    },\n    addRoomTotal: {\n        padding: 10,\n        width: 50,\n    },\n    noRoomAlert: {\n        width: '100%'\n    },\n    sliderImage: {\n        padding: '0px 10px 10px 10px',\n        [theme.breakpoints.only('xs')]: {\n            padding: '0px 5px 5px 5px',\n        },\n    },\n    sliderDesc: {\n        marginTop: 50\n    },\n    media: {\n        height: '50vh',\n        [theme.breakpoints.only('xs')]: {\n            height: '25vh',\n        },\n    },\n    roomCardTotalPerInfoBox: {\n        position: 'relative',\n        display: 'inline-block',\n        top: -45,\n        left: 10,\n        [theme.breakpoints.down(\"md\")]: {\n            top: -310,\n        },\n        [theme.breakpoints.down(\"sm\")]: {\n            top: -335,\n        },\n        [theme.breakpoints.down(\"xs\")]: {\n            top: -425,\n        },\n    },\n    roomCardTotalPerInfo: {\n        backgroundColor: '#ffffff',\n        borderRadius: 0,\n        marginLeft: 5,\n        boxShadow: 'inset 0 0 0px 1px #c8c8c8',\n        fontSize: 16,\n        color: '#616161',\n        opacity: 0.8\n    }\n}))\n\nconst ThumbnailSlider = (props) => {\n    const { open, onClose, sliderID, roomtypeDesc, roomTypeLongText } = props\n    const { GENERAL_SETTINGS } = useContext(WebCmsGlobal)\n    const [itemSlideData, setItemSlideData] = useState(false)\n    const [isLoading, setIsLoading] = useState(false)\n    const { t } = useTranslation()\n    const classes = useStyles()\n\n    useEffect(() => {\n        let active = true\n        if (active && open && sliderID) {\n            setIsLoading(true)\n            axios({\n                url: GENERAL_SETTINGS.BASE_URL + 'api/hotel/content/slider',\n                method: 'post',\n                params: {\n                    sliderid: sliderID\n                }\n            }).then((sliderResponse) => {\n                if (active) {\n                    const sliderData = sliderResponse.data\n                    if (sliderData.success && sliderData.data.length > 0) {\n                        setItemSlideData(sliderData.data)\n                    } else {\n                        setItemSlideData(null)\n                    }\n                    setIsLoading(false)\n                }\n            })\n        }\n\n        return () => {\n            active = false\n            setIsLoading(false)\n        }\n    }, [open])\n\n    const settings = {\n        dots: true,\n        infinite: true,\n        lazyLoad: true,\n        speed: 500,\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        centerMode: true,\n        swipeToSlide: true,\n        touchMove: true,\n    }\n\n    return (\n            <Dialog\n                open={open}\n                onClose={()=> onClose(false)}\n                maxWidth=\"md\"\n                fullWidth\n            >\n                <DialogTitle>\n                    {roomtypeDesc && roomtypeDesc.textOnly().isLangCode() ? t(roomtypeDesc.textOnly()) : roomtypeDesc && <div dangerouslySetInnerHTML={{ __html: roomtypeDesc }} /> || ''}\n                </DialogTitle>\n                <DialogContent dividers style={{overflow: 'overlay', padding: 40}}>\n                    {isLoading ?\n                        (<React.Fragment>\n                            <Box p={3}>\n                                <LoadingSpinner size={50} />\n                            </Box>\n                        </React.Fragment>) :\n                        (<Slider {...settings}>\n                            {itemSlideData &&\n                            itemSlideData.map((item, i) => {\n                                return (\n                                    <Box key={i} className={classes.sliderImage}>\n                                        <CardMedia\n                                            className={classes.media}\n                                            image={GENERAL_SETTINGS.STATIC_URL + item.fileurl}\n                                            title=\"Contemplative Reptile\"\n                                        />\n                                    </Box>\n                                )\n                            })}\n                        </Slider>)\n                    }\n                    <Typography variant=\"body1\" gutterBottom className={classes.sliderDesc} align=\"justify\">\n                      {t(roomTypeLongText) || ''}\n                    </Typography>\n                </DialogContent>\n                <DialogActions>\n                    <Button color=\"primary\" onClick={()=> onClose(false)}>{t('str_close')}</Button>\n                </DialogActions>\n            </Dialog>\n    )\n}\n\nconst Description = ({ str = '', useLength = 275, useShort = 275, openSlider, moreInfoText }) => {\n    const classes = useStyles()\n    if (str && str.length >= useLength) {\n        return (\n            <React.Fragment>\n                <Typography className={classes.description} variant='body1' gutterBottom>\n                    {str.substring(0, useShort) + '...'}\n                </Typography>\n                <div className={classes.moreInfoRoot}>\n                    <Button className={classes.moreInfoButton} variant='outlined' color='primary' size='small' onClick={() => openSlider()} style={{ fontSize: '0.7rem', padding: '2px 10px 1px' }}>\n                        {moreInfoText}\n                    </Button>\n                </div>\n            </React.Fragment>\n        )\n    }\n\n    return (\n        <Typography className={classes.description} variant='body1' gutterBottom>\n            {str || ''}\n        </Typography>\n    )\n}\n\nconst RoomCard = (props) => {\n    const classes = useStyles()\n    const { info, totalRoomSelected, state, setToState } = props\n    const { GENERAL_SETTINGS, WEBCMS_DATA } = useContext(WebCmsGlobal)\n    const [ totalRoom, setTotalRoom ] = useState(1)\n    const [ isAddRoom, setIsAddRoom ] = useState(false)\n    const [ isOpenSlider, setIsOpenSlider ] = useState(false)\n    let isDisable = false\n\n    const { enqueueSnackbar } = useSnackbar()\n    const { t } = useTranslation()\n\n    useEffect(() => {\n        if(totalRoomSelected > 0){\n            setTotalRoom(1)\n        }else{\n            setTotalRoom(0)\n        }\n    }, [totalRoomSelected, state.bookingIsDisable])\n\n    const settings = {\n        containerMaxWidth: 'lg',\n        containerSpacing: 0,\n        wrapper: {\n            elevation: 3,\n            square: true,\n        },\n        leftColumn: {\n            xs: 12,\n            sm: 12,\n            md: 12,\n            lg: 4,\n            xl: 4,\n        },\n        rightColumn: {\n            xs: 12,\n            sm: 12,\n            md: 12,\n            lg: 8,\n            xl: 8,\n        },\n    }\n\n    const roomThumbnail = (roomid) => {\n        return state.roomAvailabilityList && state.roomAvailabilityList.find((item) => item.id === roomid).imgfileurl\n    }\n\n    const roomName = (roomid) => {\n        return state.roomAvailabilityList && state.roomAvailabilityList.find((item) => item.id === roomid).description\n    }\n\n    const priceCurr = (roomid) => {\n        return state.roomAvailabilityList && state.roomAvailabilityList.find((item) => item.id === roomid).pricecurr\n    }\n\n    const agencyChdAges = { babyage: state.hotelBookingInfo.babyAge, chd1age: state.hotelBookingInfo.chd1Age, chd2age: state.hotelBookingInfo.chd2Age }\n        , getPrice = global.onlineReservation.useTotalPrice(info.priceList, state.bookingState.adult, state.childAges, agencyChdAges)\n\n    if(getPrice.totalPrice === null || getPrice.totalPrice === 0 || info.pricecurr === null){\n        isDisable = true\n    }\n\n    const handleAddRoom = () => {\n        const addRoomData = {\n            ci: moment(state.bookingState.stayDates[0]).locale(defaultLocale).format(OREST_ENDPOINT.DATEFORMAT),\n            co: moment(state.bookingState.stayDates[1]).locale(defaultLocale).format(OREST_ENDPOINT.DATEFORMAT),\n            resdate: moment(moment()).locale(defaultLocale).format(OREST_ENDPOINT.DATEFORMAT),\n            adult: state.bookingState.adult,\n            child: state.bookingState.child,\n            night: state.bookingState.night,\n            childages: state.childAges,\n            resaction: 0,\n            roomtype: info.id,\n            qty: totalRoom,\n            agencyid: state.hotelBookingInfo.agencyid,\n            pricecurrid: info.pricecurrid || state.hotelBookingInfo.currencyid,\n            searchid: state.searchid,\n            uitoken: state.hotelUiToken,\n        }\n\n        if(GENERAL_SETTINGS?.hotelSettings?.maxroom && state.selectedRooms.length >= GENERAL_SETTINGS.hotelSettings.maxroom){\n            setToState('ibe', ['isMaxRoomError'], true)\n            return enqueueSnackbar(t('str_youCanChooseAMaximumOfRooms', { maxroom: GENERAL_SETTINGS.hotelSettings.maxroom }), { variant: 'warning', autoHideDuration: 3000 })\n        }\n\n        setToState('ibe', ['bookingIsDisable'], true)\n        setIsAddRoom(true)\n        return axios({\n            url: GENERAL_SETTINGS.BASE_URL + 'api/ors/room/add',\n            method: 'post',\n            params: addRoomData,\n        }).then((addRoomResponse) => {\n            const roomResponse = addRoomResponse.data\n            if (roomResponse.success) {\n                let newRoomData = state.selectedRooms, addToCartData = []\n                roomResponse.data.map((item, i) => {\n                    let guestList = []\n                    const numberOfGuests = (Number(item.totalpax) + Number(item.totalchd))\n                    Array.from({length: numberOfGuests }).map(() => {\n                        guestList.push({\n                            firstName: {\n                                value: '',\n                                isrequired: true,\n                                iserror: false,\n                            },\n                            lastName: {\n                                value: '',\n                                isrequired: true,\n                                iserror: false,\n                            },\n                            mail: {\n                                value: '',\n                                isrequired: false,\n                                iserror: false,\n                            },\n                            birthDate: {\n                                value: '',\n                                isrequired: false,\n                                iserror: false,\n                            },\n                            phone: {\n                                value: '',\n                                isrequired: false,\n                                iserror: false,\n                            },\n                            note: {\n                                value: '',\n                                isrequired: false,\n                                iserror: false,\n                            },\n                            healthcode: {\n                                value: '',\n                                isrequired: false,\n                                iserror: false,\n                            }\n                        })\n                    })\n\n                    newRoomData.push({\n                        gid: item.gid,\n                        roomtypeid: item.roomtypeid,\n                        thumbnail: roomThumbnail(item.roomtypeid),\n                        roomtypename: roomName(item.roomtypeid),\n                        pricecurr: priceCurr(item.roomtypeid),\n                        reservno: item.reservno,\n                        totalpax: item.totalpax,\n                        totalchd: item.totalchd,\n                        totalnight: item.totalnight,\n                        totalprice: item.totalprice,\n                        checkin: item.checkin,\n                        checkout: item.checkout,\n                        roomsearchid: roomResponse.searchid,\n                        guestList: guestList,\n                    })\n\n                    addToCartData.push({\n                        reservNo: item.reservno,\n                        id: item.roomtypeid,\n                        name: roomName(item.roomtypeid),\n                        price: global.helper.formatPrice(item.totalprice),\n                        qty: 1,\n                        category: 'Room',\n                    })\n\n                })\n                enqueueSnackbar(t('str_addedRoomSuccess'), { variant: 'success', autoHideDuration: 3000 })\n                setToState('ibe', ['selectedRooms'], newRoomData)\n                setToState('ibe', ['bookingIsDisable'], false)\n                setIsAddRoom(false)\n                if(WEBCMS_DATA?.assets?.meta?.googleTag){\n                    TagManager.booking.setAddRoom({\n                        eventLabel: 'Add to Cart',\n                        hotelName: WEBCMS_DATA?.assets?.meta?.title,\n                        hotelId: GENERAL_SETTINGS.HOTELREFNO,\n                        ciDate: addRoomData.ci,\n                        coDate: addRoomData.co,\n                        adult: addRoomData.adult,\n                        child: addRoomData.child,\n                        currencyCode: priceCurr(addRoomData.roomtype),\n                        addToCartData: addToCartData\n                    })\n                }\n\n            }else {\n                enqueueSnackbar(t('str_addRoomError'), { variant: 'warning', autoHideDuration: 3000 })\n                setToState('ibe', ['bookingIsDisable'], false)\n                setIsAddRoom(false)\n            }\n        })\n    }\n\n    const handleIncRoom = () => {\n        if(totalRoomSelected > 0 && totalRoomSelected > totalRoom){\n            setTotalRoom(totalRoom + 1)\n        }\n    }\n\n    const handleSubRoom = () => {\n        if(totalRoom > 1) {\n            setTotalRoom((prevTotalRoom) => prevTotalRoom - 1)\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.wrapper} elevation={settings.wrapper.elevation} square={settings.wrapper.square}>\n                <Grid container spacing={settings.containerSpacing}>\n                    <Grid item\n                          xs={settings.leftColumn.xs}\n                          sm={settings.leftColumn.sm}\n                          md={settings.leftColumn.md}\n                          lg={settings.leftColumn.lg}\n                          xl={settings.leftColumn.xl}\n                    >\n                        <div className={classes.thumbnail} onClick={() => setIsOpenSlider(true)} style={{ backgroundImage: `url(${info.imgfileurl && GENERAL_SETTINGS.STATIC_URL + '/' + info.imgfileurl || 'imgs/not-found.png'})` }}/>\n                    </Grid>\n                    <Grid className={classes.rightColumn} item\n                          xs={settings.rightColumn.xs}\n                          sm={settings.rightColumn.sm}\n                          md={settings.rightColumn.md}\n                          lg={settings.rightColumn.lg}\n                          xl={settings.rightColumn.xl}\n                    >\n                        <Grid container spacing={0}>\n                            <Grid item xs={12}>\n                                <Typography className={classes.title} variant=\"h5\" component=\"h2\" gutterBottom noWrap>\n                                    {t(info.shorttext)}\n                                </Typography>\n                                <Description\n                                    str={t(info.longtext)}\n                                    openSlider={()=> setIsOpenSlider(true)}\n                                    moreInfoText={t('str_moreInfo')}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                               <RoomTypeAttributes roomtypeid={info.id} roomgid={info.roomgid}/>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <div className={classes.actionsContainer}>\n                                    {!isDisable ?\n                                        <React.Fragment>\n                                            <div style={{ flexGrow: 15 }}>\n                                                <Typography className={classes.addRoomTitle} variant='body2' display='inline'>\n                                                    {t('str_rooms')}\n                                                </Typography>\n                                                <IconButton\n                                                    className={classes.deleteRoomButton}\n                                                    aria-label='delete-room'\n                                                    disabled={isDisable || state.bookingIsDisable || totalRoom === 1 || totalRoomSelected === 0}\n                                                    onClick={() => {\n                                                        handleSubRoom()\n                                                    }}\n                                                >\n                                                    <Icon fontSize='small'>remove_circle_outline</Icon>\n                                                </IconButton>\n                                                <Typography className={classes.addRoomTotal} variant='button' display='inline'>\n                                                    {totalRoom}\n                                                </Typography>\n                                                <IconButton\n                                                    className={classes.addRoomButton}\n                                                    aria-label='add-room'\n                                                    disabled={isDisable || state.bookingIsDisable || totalRoomSelected === totalRoom || totalRoomSelected === 0}\n                                                    onClick={() => {\n                                                        const selectedTotalRooms = state.selectedRooms.length + totalRoom\n                                                        if(GENERAL_SETTINGS?.hotelSettings?.maxroom && selectedTotalRooms >= GENERAL_SETTINGS.hotelSettings.maxroom){\n                                                            setToState('ibe', ['isMaxRoomError'], true)\n                                                            return enqueueSnackbar(t('str_youCanChooseAMaximumOfRooms', { maxroom: GENERAL_SETTINGS.hotelSettings.maxroom }), { variant: 'warning', autoHideDuration: 3000 })\n                                                        }\n                                                        handleIncRoom()\n                                                    }}\n                                                >\n                                                    <Icon fontSize='small'>add_circle_outline</Icon>\n                                                </IconButton>\n                                            </div>\n                                            <div style={{ flexGrow: 1 }}>\n                                               <RoomPriceWrap\n                                                    totalPaxPrice={getPrice.totalPrice}\n                                                    currency={info.pricecurr}\n                                                    discTotalPaxPrice={getPrice.discTotalPrice}\n                                                    discountDescription={(getPrice.discTotalPrice !== null  && Number(getPrice.discTotalPrice) > 0) ? `%${global.onlineReservation.showDiscountRate(getPrice.totalPrice, getPrice.discTotalPrice)} ${t('str_totalDiscount')}`: false}\n                                                    priceList={info.priceList}\n                                                    adult={state.bookingState.adult}\n                                                    chdAges={state.childAges}\n                                                    agencyChdAges={agencyChdAges}\n                                                    checkin={moment(state.bookingState.stayDates[0]).locale(defaultLocale).format(OREST_ENDPOINT.DATEFORMAT)}\n                                                    checkout={moment(state.bookingState.stayDates[1]).locale(defaultLocale).format(OREST_ENDPOINT.DATEFORMAT)}\n                                                />\n                                                <ProgressButton isLoading={isAddRoom && isAddRoom}>\n                                                    <Button\n                                                        disabled={isDisable || totalRoomSelected === 0 || isAddRoom && isAddRoom}\n                                                        onClick={() => !state.bookingIsDisable && handleAddRoom()}\n                                                        variant='contained' size='small' color='primary'\n                                                        disableElevation\n                                                    >\n                                                        {t('str_addRoom')}\n                                                    </Button>\n                                                </ProgressButton>\n                                            </div>\n                                        </React.Fragment> :\n                                        <Alert variant=\"outlined\" severity=\"info\" className={classes.noRoomAlert}>\n                                            {t('str_noRoomsAvailable')}\n                                        </Alert>\n                                    }\n                                </div>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Paper>\n            <ThumbnailSlider open={isOpenSlider} onClose={(e)=> setIsOpenSlider(e)} sliderID={info.sliderid} roomtypeDesc={info.shorttext} roomTypeLongText={info?.longtext || ''}/>\n            <div className={classes.roomCardTotalPerInfoBox}>\n                {info?.totalpax ?\n                    <Chip variant=\"outlined\" avatar={<PersonIcon />} label={info.totalpax} className={classes.roomCardTotalPerInfo}/>\n                : null}\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        state: state.formReducer.ibe,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RoomCard)\n\n"]},"metadata":{},"sourceType":"module"}