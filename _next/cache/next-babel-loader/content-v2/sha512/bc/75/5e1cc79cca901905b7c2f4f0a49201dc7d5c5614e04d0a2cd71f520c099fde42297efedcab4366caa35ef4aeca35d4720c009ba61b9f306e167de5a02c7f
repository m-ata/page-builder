{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/common/base-loader.js\";\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { UseOrest } from '@webcms/orest';\nimport { REQUEST_METHOD_CONST } from 'model/orest/constants';\nimport { useOrestAction } from 'model/orest';\nimport { useSnackbar } from 'notistack';\nimport WebCmsGlobal from 'components/webcms-global';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nexport default function BaseLoader(props) {\n  const {\n    GENERAL_SETTINGS\n  } = useContext(WebCmsGlobal);\n  const token = useSelector(state => {\n    var _state$orest, _state$orest$currentU, _state$orest$currentU2;\n\n    return (state === null || state === void 0 ? void 0 : (_state$orest = state.orest) === null || _state$orest === void 0 ? void 0 : (_state$orest$currentU = _state$orest.currentUser) === null || _state$orest$currentU === void 0 ? void 0 : (_state$orest$currentU2 = _state$orest$currentU.auth) === null || _state$orest$currentU2 === void 0 ? void 0 : _state$orest$currentU2.access_token) || false;\n  });\n  const {\n    t\n  } = useTranslation();\n  const {\n    setOrestState,\n    deleteOrestCurrentUserInfo\n  } = useOrestAction();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n\n  const checkClientToken = async () => {\n    return await UseOrest({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: 'auth/checktoken',\n      token: token,\n      method: REQUEST_METHOD_CONST.POST,\n      params: {\n        token: token,\n        hotelrefno: ''\n      }\n    }).then(checkTokenResponse => {\n      var _checkTokenResponse$d;\n\n      if (checkTokenResponse !== null && checkTokenResponse !== void 0 && (_checkTokenResponse$d = checkTokenResponse.data) !== null && _checkTokenResponse$d !== void 0 && _checkTokenResponse$d.active) {\n        return true;\n      } else {\n        enqueueSnackbar(t('str_sessionTimeoutLoginAgain'), {\n          variant: 'info'\n        });\n        deleteOrestCurrentUserInfo();\n        return false;\n      }\n    }).catch(() => {\n      enqueueSnackbar(t('str_sessionTimeoutLoginAgain'), {\n        variant: 'info'\n      });\n      deleteOrestCurrentUserInfo();\n      return false;\n    });\n  };\n\n  const getHotelWorkDateTime = async hotelrefno => {\n    return await UseOrest({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: 'info/portal',\n      token: token,\n      params: {\n        hotelrefno: hotelrefno\n      }\n    }).then(infoPortalResponse => {\n      var _infoPortalResponse$d;\n\n      if (infoPortalResponse !== null && infoPortalResponse !== void 0 && (_infoPortalResponse$d = infoPortalResponse.data) !== null && _infoPortalResponse$d !== void 0 && _infoPortalResponse$d.data) {\n        setOrestState(['hotelWorkDateTime'], infoPortalResponse.data.data);\n        return true;\n      } else {\n        setOrestState(['hotelWorkDateTime'], false);\n        return false;\n      }\n    }).catch(() => {\n      setOrestState(['hotelWorkDateTime'], false);\n      return false;\n    });\n  };\n\n  useEffect(() => {\n    let active = true;\n\n    if (active && token) {\n      const isTokenValid = checkClientToken();\n\n      if (isTokenValid) {\n        getHotelWorkDateTime();\n      }\n    }\n\n    return () => {\n      active = false;\n    };\n  }, []);\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, props.children);\n}","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/common/base-loader.js"],"names":["React","useContext","useEffect","useSelector","UseOrest","REQUEST_METHOD_CONST","useOrestAction","useSnackbar","WebCmsGlobal","useTranslation","BaseLoader","props","GENERAL_SETTINGS","token","state","orest","currentUser","auth","access_token","t","setOrestState","deleteOrestCurrentUserInfo","enqueueSnackbar","checkClientToken","apiUrl","OREST_URL","endpoint","method","POST","params","hotelrefno","then","checkTokenResponse","data","active","variant","catch","getHotelWorkDateTime","infoPortalResponse","isTokenValid","children"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { UseOrest } from '@webcms/orest'\nimport { REQUEST_METHOD_CONST } from 'model/orest/constants'\nimport { useOrestAction } from 'model/orest'\nimport { useSnackbar } from 'notistack'\nimport WebCmsGlobal from 'components/webcms-global'\nimport useTranslation from 'lib/translations/hooks/useTranslation'\n\nexport default function BaseLoader(props) {\n    const { GENERAL_SETTINGS } = useContext(WebCmsGlobal)\n    const token = useSelector((state) => state?.orest?.currentUser?.auth?.access_token || false)\n    const { t } = useTranslation()\n    const { setOrestState, deleteOrestCurrentUserInfo } = useOrestAction()\n    const { enqueueSnackbar } = useSnackbar()\n\n    const checkClientToken = async () => {\n        return await UseOrest({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: 'auth/checktoken',\n            token: token,\n            method: REQUEST_METHOD_CONST.POST,\n            params: {\n                token: token,\n                hotelrefno: '',\n            },\n        }).then((checkTokenResponse) => {\n            if (checkTokenResponse?.data?.active) {\n                return true\n            }else{\n                enqueueSnackbar(t('str_sessionTimeoutLoginAgain'), { variant: 'info' })\n                deleteOrestCurrentUserInfo()\n                return false\n            }\n        }).catch(() => {\n            enqueueSnackbar(t('str_sessionTimeoutLoginAgain'), { variant: 'info' })\n            deleteOrestCurrentUserInfo()\n            return false\n        })\n    }\n\n    const getHotelWorkDateTime = async (hotelrefno) => {\n        return await UseOrest({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: 'info/portal',\n            token: token,\n            params: {\n                hotelrefno: hotelrefno,\n            },\n        }).then((infoPortalResponse) => {\n            if (infoPortalResponse?.data?.data) {\n                setOrestState(['hotelWorkDateTime'], infoPortalResponse.data.data)\n                return true\n            }else{\n                setOrestState(['hotelWorkDateTime'], false)\n                return false\n            }\n        }).catch(() => {\n            setOrestState(['hotelWorkDateTime'], false)\n            return false\n        })\n    }\n\n    useEffect(() => {\n        let active = true\n\n        if(active && token) {\n            const isTokenValid = checkClientToken()\n            if(isTokenValid){\n                getHotelWorkDateTime()\n            }\n        }\n\n        return () => {\n            active = false\n        }\n\n    }, [])\n\n    return (\n        <React.Fragment>\n            {props.children}\n        </React.Fragment>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}