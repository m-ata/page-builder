{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/booking/components/RoomListItem.js\";\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { ListItem, Typography, Icon, Chip, Avatar, Tooltip } from '@material-ui/core';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport { setToState } from 'state/actions';\nimport { connect } from 'react-redux';\nimport WebCmsGlobal from 'components/webcms-global';\nimport ProgressIconButton from './ProgressIconButton';\nimport { useSnackbar } from 'notistack';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nimport getSymbolFromCurrency from 'model/currency-symbol';\nimport { formatMoney } from 'model/orest/constants';\nimport TagManager from '@webcms-globals/tag-manager';\nimport * as global from '@webcms-globals';\nimport { useRouter } from 'next/router';\nconst useStyles = makeStyles(() => ({\n  infoChip: {\n    marginRight: 5,\n    backgroundColor: '#ffffff',\n    borderRadius: 0,\n    boxShadow: 'inset 0 0 0px 1px #c8c8c8'\n  },\n  infoPriceChip: {\n    backgroundColor: '#ffffff',\n    borderRadius: 0,\n    marginLeft: 5,\n    boxShadow: 'inset 0 0 0px 1px #c8c8c8',\n    position: 'absolute',\n    right: 10\n  },\n  listItemContainer: {\n    boxShadow: 'inset 0 0 1px 1px #f3f3f3'\n  },\n  listItemRoot: {\n    paddingTop: 0,\n    paddingBottom: 0,\n    marginTop: 10,\n    marginBottom: 10\n  },\n  listItemParent: {\n    display: 'flex',\n    alignItems: 'flex-start',\n    width: '100%',\n    textAlign: 'center',\n    padding: 0,\n    boxShadow: '0 0 0 1px #d2d2d26b'\n  },\n  listItemBox: {\n    flexGrow: 11,\n    textAlign: 'start',\n    padding: 10\n  },\n  listItemAction: {\n    flexGrow: 1,\n    padding: '1px 10px 0px 0px',\n    '& button[aria-label=\"close\"]:not([disabled])': {\n      color: '#a6a6a6',\n      '-webkit-transition': 'color 0.4s',\n      '-ms-transition': 'color 0.4s',\n      transition: 'color 0.4s'\n    },\n    \"&:hover\": {\n      '& button[aria-label=\"close\"]:not([disabled])': {\n        color: '#4d4d4d',\n        '-webkit-transition': 'color 0.4s',\n        '-ms-transition': 'color 0.4s',\n        transition: 'color 0.4s'\n      }\n    }\n  },\n  infoChipTooltipLabel: {\n    fontSize: 12,\n    fontWeight: 600\n  },\n  infoChipTooltipValue: {\n    fontSize: 12\n  }\n}));\nconst HtmlTooltip = withStyles(theme => ({\n  tooltip: {\n    backgroundColor: '#f5f5f9',\n    color: 'rgba(0, 0, 0, 0.87)',\n    maxWidth: 220,\n    fontSize: theme.typography.pxToRem(12),\n    border: '1px solid #dadde9'\n  }\n}))(Tooltip);\n\nconst RoomListItem = props => {\n  const classes = useStyles(),\n        {\n    GENERAL_SETTINGS,\n    WEBCMS_DATA\n  } = useContext(WebCmsGlobal),\n        {\n    state,\n    setToState,\n    roomtypeId,\n    roomName,\n    checkin,\n    checkout,\n    pax,\n    child,\n    night,\n    price,\n    pricecurr,\n    gid,\n    reservno,\n    dailyrate\n  } = props,\n        {\n    0: isRoomDelete,\n    1: setIsRoomDelete\n  } = useState(false),\n        {\n    enqueueSnackbar\n  } = useSnackbar(),\n        {\n    t\n  } = useTranslation(),\n        router = useRouter();\n  useEffect(() => {\n    return () => setIsRoomDelete(false);\n  }, []);\n\n  const handleRemoveRoom = (gid, reservno) => {\n    setToState('ibe', ['bookingIsDisable'], true);\n    setIsRoomDelete(true);\n    return axios({\n      url: GENERAL_SETTINGS.BASE_URL + 'api/ors/room/delete',\n      method: 'post',\n      params: {\n        gid: gid,\n        reservno: reservno\n      }\n    }).then(deleteRoomResponse => {\n      const roomResponse = deleteRoomResponse.data;\n\n      if (roomResponse.status) {\n        let selectedRooms = state.selectedRooms;\n        const roomIndex = selectedRooms.findIndex(item => item.gid === String(gid));\n\n        if (roomIndex > -1) {\n          var _WEBCMS_DATA$assets, _WEBCMS_DATA$assets$m;\n\n          let newRoomData = state.selectedRooms;\n          newRoomData.splice(roomIndex, 1);\n          setToState('ibe', ['selectedRooms'], newRoomData);\n          setToState('ibe', ['bookingIsDisable'], false);\n          setIsRoomDelete(false);\n          enqueueSnackbar(t('str_deleteRoomSuccess'), {\n            variant: 'success',\n            autoHideDuration: 3000\n          });\n\n          if (WEBCMS_DATA !== null && WEBCMS_DATA !== void 0 && (_WEBCMS_DATA$assets = WEBCMS_DATA.assets) !== null && _WEBCMS_DATA$assets !== void 0 && (_WEBCMS_DATA$assets$m = _WEBCMS_DATA$assets.meta) !== null && _WEBCMS_DATA$assets$m !== void 0 && _WEBCMS_DATA$assets$m.googleTag) {\n            var _WEBCMS_DATA$assets2, _WEBCMS_DATA$assets2$;\n\n            TagManager.booking.setRemoveRoom({\n              eventLabel: 'Remove to Cart',\n              hotelName: WEBCMS_DATA === null || WEBCMS_DATA === void 0 ? void 0 : (_WEBCMS_DATA$assets2 = WEBCMS_DATA.assets) === null || _WEBCMS_DATA$assets2 === void 0 ? void 0 : (_WEBCMS_DATA$assets2$ = _WEBCMS_DATA$assets2.meta) === null || _WEBCMS_DATA$assets2$ === void 0 ? void 0 : _WEBCMS_DATA$assets2$.title,\n              hotelId: GENERAL_SETTINGS.HOTELREFNO,\n              ciDate: checkin,\n              coDate: checkout,\n              adult: pax,\n              child: child,\n              currencyCode: pricecurr,\n              removeToCartData: {\n                reservNo: reservno,\n                id: roomtypeId,\n                name: roomName,\n                price: global.helper.formatPrice(price),\n                qty: 1,\n                category: 'Room'\n              }\n            });\n          }\n        }\n\n        if (selectedRooms.length === 0) {\n          router.push({\n            pathname: '/booking/rooms',\n            query: router.query\n          });\n        }\n      } else {\n        setIsRoomDelete(false);\n        setToState('ibe', ['bookingIsDisable'], false);\n        enqueueSnackbar(t('str_deleteRoomError'), {\n          variant: 'warning',\n          autoHideDuration: 3000\n        });\n      }\n    });\n  };\n\n  return __jsx(ListItem, {\n    alignItems: \"flex-start\",\n    button: true,\n    classes: {\n      container: classes.listItemContainer,\n      root: classes.listItemRoot,\n      button: classes.litemItemButton\n    },\n    disableGutters: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: classes.listItemParent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: classes.listItemBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }, __jsx(Typography, {\n    variant: \"body1\",\n    className: classes.inline,\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 21\n    }\n  }, roomName), __jsx(Typography, {\n    style: {\n      padding: '2px 0 10px 0'\n    },\n    variant: \"body2\",\n    className: classes.inline,\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 21\n    }\n  }, moment(checkin, 'YYYY-MM-DD').format('dd, MMM DD, YYYY'), \" - \", moment(checkout, 'YYYY-MM-DD').format('dd, MMM DD, YYYY')), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 21\n    }\n  }, __jsx(Chip, {\n    size: \"small\",\n    color: \"default\",\n    className: classes.infoChip,\n    label: pax,\n    icon: __jsx(Icon, {\n      fontSize: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 33\n      }\n    }, \"person\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 23\n    }\n  }), __jsx(Chip, {\n    size: \"small\",\n    color: \"default\",\n    className: classes.infoChip,\n    label: child,\n    icon: __jsx(Icon, {\n      fontSize: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 33\n      }\n    }, \"face\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 23\n    }\n  }), __jsx(HtmlTooltip, {\n    arrow: true,\n    title: __jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 31\n      }\n    }, __jsx(\"span\", {\n      className: classes.infoChipTooltipLabel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 35\n      }\n    }, t('str_perNight'), \":\"), \" \", __jsx(\"span\", {\n      className: classes.infoChipTooltipValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 110\n      }\n    }, formatMoney(dailyrate), \" \", getSymbolFromCurrency(pricecurr) || '')),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 23\n    }\n  }, __jsx(Chip, {\n    size: \"small\",\n    color: \"default\",\n    className: classes.infoChip,\n    label: night,\n    icon: __jsx(Icon, {\n      fontSize: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 33\n      }\n    }, \"nights_stay\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 23\n    }\n  })), __jsx(HtmlTooltip, {\n    arrow: true,\n    title: __jsx(\"span\", {\n      className: classes.infoChipTooltipLabel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 33\n      }\n    }, t('str_totalPrice')),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 22\n    }\n  }, __jsx(Chip, {\n    className: classes.infoPriceChip,\n    color: \"default\",\n    size: \"small\",\n    avatar: __jsx(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 38\n      }\n    }, getSymbolFromCurrency(pricecurr) || ''),\n    label: formatMoney(price),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 26\n    }\n  })))), __jsx(\"div\", {\n    className: classes.listItemAction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 17\n    }\n  }, __jsx(ProgressIconButton, {\n    edge: \"end\",\n    ariaLabel: \"close\",\n    isLoading: isRoomDelete,\n    onClick: () => !state.bookingIsDisable && handleRemoveRoom(gid, reservno),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 21\n    }\n  }, __jsx(Icon, {\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 25\n    }\n  }, \"close\")))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    state: state.formReducer.ibe\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RoomListItem);","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/booking/components/RoomListItem.js"],"names":["React","useContext","useEffect","useState","useRef","axios","moment","ListItem","Typography","Icon","Chip","Avatar","Tooltip","withStyles","makeStyles","setToState","connect","WebCmsGlobal","ProgressIconButton","useSnackbar","useTranslation","getSymbolFromCurrency","formatMoney","TagManager","global","useRouter","useStyles","infoChip","marginRight","backgroundColor","borderRadius","boxShadow","infoPriceChip","marginLeft","position","right","listItemContainer","listItemRoot","paddingTop","paddingBottom","marginTop","marginBottom","listItemParent","display","alignItems","width","textAlign","padding","listItemBox","flexGrow","listItemAction","color","transition","infoChipTooltipLabel","fontSize","fontWeight","infoChipTooltipValue","HtmlTooltip","theme","tooltip","maxWidth","typography","pxToRem","border","RoomListItem","props","classes","GENERAL_SETTINGS","WEBCMS_DATA","state","roomtypeId","roomName","checkin","checkout","pax","child","night","price","pricecurr","gid","reservno","dailyrate","isRoomDelete","setIsRoomDelete","enqueueSnackbar","t","router","handleRemoveRoom","url","BASE_URL","method","params","then","deleteRoomResponse","roomResponse","data","status","selectedRooms","roomIndex","findIndex","item","String","newRoomData","splice","variant","autoHideDuration","assets","meta","googleTag","booking","setRemoveRoom","eventLabel","hotelName","title","hotelId","HOTELREFNO","ciDate","coDate","adult","currencyCode","removeToCartData","reservNo","id","name","helper","formatPrice","qty","category","length","push","pathname","query","container","root","button","litemItemButton","inline","format","bookingIsDisable","mapStateToProps","formReducer","ibe","mapDispatchToProps","dispatch","stateType","stateName","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SACIC,QADJ,EAEIC,UAFJ,EAGIC,IAHJ,EAIIC,IAJJ,EAKIC,MALJ,EAMIC,OANJ,QAOO,mBAPP;AAQA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,0BAAvC;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,OAAOC,cAAP,MAA2B,uCAA3B;AACA,OAAOC,qBAAP,MAAkC,uBAAlC;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAO,KAAKC,MAAZ,MAAwB,iBAAxB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,MAAMC,SAAS,GAAGZ,UAAU,CAAC,OAAO;AAChCa,EAAAA,QAAQ,EAAE;AACNC,IAAAA,WAAW,EAAE,CADP;AAENC,IAAAA,eAAe,EAAE,SAFX;AAGNC,IAAAA,YAAY,EAAE,CAHR;AAINC,IAAAA,SAAS,EAAE;AAJL,GADsB;AAOhCC,EAAAA,aAAa,EAAE;AACXH,IAAAA,eAAe,EAAE,SADN;AAEXC,IAAAA,YAAY,EAAE,CAFH;AAGXG,IAAAA,UAAU,EAAE,CAHD;AAIXF,IAAAA,SAAS,EAAE,2BAJA;AAKXG,IAAAA,QAAQ,EAAE,UALC;AAMXC,IAAAA,KAAK,EAAE;AANI,GAPiB;AAehCC,EAAAA,iBAAiB,EAAE;AACfL,IAAAA,SAAS,EAAE;AADI,GAfa;AAkBhCM,EAAAA,YAAY,EAAE;AACVC,IAAAA,UAAU,EAAE,CADF;AAEVC,IAAAA,aAAa,EAAE,CAFL;AAGVC,IAAAA,SAAS,EAAE,EAHD;AAIVC,IAAAA,YAAY,EAAE;AAJJ,GAlBkB;AAwBhCC,EAAAA,cAAc,EAAE;AACZC,IAAAA,OAAO,EAAE,MADG;AAEZC,IAAAA,UAAU,EAAE,YAFA;AAGZC,IAAAA,KAAK,EAAE,MAHK;AAIZC,IAAAA,SAAS,EAAE,QAJC;AAKZC,IAAAA,OAAO,EAAE,CALG;AAMZhB,IAAAA,SAAS,EAAE;AANC,GAxBgB;AAgChCiB,EAAAA,WAAW,EAAC;AACVC,IAAAA,QAAQ,EAAE,EADA;AAEVH,IAAAA,SAAS,EAAE,OAFD;AAGVC,IAAAA,OAAO,EAAE;AAHC,GAhCoB;AAqChCG,EAAAA,cAAc,EAAC;AACXD,IAAAA,QAAQ,EAAE,CADC;AAEXF,IAAAA,OAAO,EAAE,kBAFE;AAGX,oDAAgD;AAC5CI,MAAAA,KAAK,EAAE,SADqC;AAE5C,4BAAsB,YAFsB;AAG5C,wBAAkB,YAH0B;AAI5CC,MAAAA,UAAU,EAAE;AAJgC,KAHrC;AASX,eAAW;AACP,sDAAgD;AAC5CD,QAAAA,KAAK,EAAE,SADqC;AAE5C,8BAAsB,YAFsB;AAG5C,0BAAkB,YAH0B;AAI5CC,QAAAA,UAAU,EAAE;AAJgC;AADzC;AATA,GArCiB;AAuDhCC,EAAAA,oBAAoB,EAAE;AAClBC,IAAAA,QAAQ,EAAE,EADQ;AAElBC,IAAAA,UAAU,EAAE;AAFM,GAvDU;AA2DhCC,EAAAA,oBAAoB,EAAE;AAClBF,IAAAA,QAAQ,EAAE;AADQ;AA3DU,CAAP,CAAD,CAA5B;AAgEA,MAAMG,WAAW,GAAG5C,UAAU,CAAE6C,KAAD,KAAY;AACvCC,EAAAA,OAAO,EAAE;AACL9B,IAAAA,eAAe,EAAE,SADZ;AAELsB,IAAAA,KAAK,EAAE,qBAFF;AAGLS,IAAAA,QAAQ,EAAE,GAHL;AAILN,IAAAA,QAAQ,EAAEI,KAAK,CAACG,UAAN,CAAiBC,OAAjB,CAAyB,EAAzB,CAJL;AAKLC,IAAAA,MAAM,EAAE;AALH;AAD8B,CAAZ,CAAD,CAAV,CAQhBnD,OARgB,CAApB;;AAUA,MAAMoD,YAAY,GAAIC,KAAD,IAAU;AAC3B,QAAMC,OAAO,GAAGxC,SAAS,EAAzB;AAAA,QACM;AAAEyC,IAAAA,gBAAF;AAAoBC,IAAAA;AAApB,MAAoCnE,UAAU,CAACgB,YAAD,CADpD;AAAA,QAEM;AAAEoD,IAAAA,KAAF;AAAStD,IAAAA,UAAT;AAAqBuD,IAAAA,UAArB;AAAiCC,IAAAA,QAAjC;AAA2CC,IAAAA,OAA3C;AAAoDC,IAAAA,QAApD;AAA8DC,IAAAA,GAA9D;AAAmEC,IAAAA,KAAnE;AAA0EC,IAAAA,KAA1E;AAAiFC,IAAAA,KAAjF;AAAwFC,IAAAA,SAAxF;AAAmGC,IAAAA,GAAnG;AAAwGC,IAAAA,QAAxG;AAAkHC,IAAAA;AAAlH,MAAgIhB,KAFtI;AAAA,QAGM;AAAA,OAAEiB,YAAF;AAAA,OAAgBC;AAAhB,MAAoChF,QAAQ,CAAC,KAAD,CAHlD;AAAA,QAIM;AAAEiF,IAAAA;AAAF,MAAsBjE,WAAW,EAJvC;AAAA,QAKM;AAAEkE,IAAAA;AAAF,MAAQjE,cAAc,EAL5B;AAAA,QAMMkE,MAAM,GAAG7D,SAAS,EANxB;AAQAvB,EAAAA,SAAS,CAAC,MAAM;AACZ,WAAO,MAAMiF,eAAe,CAAC,KAAD,CAA5B;AACH,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMI,gBAAgB,GAAG,CAACR,GAAD,EAAMC,QAAN,KAAmB;AACxCjE,IAAAA,UAAU,CAAC,KAAD,EAAQ,CAAC,kBAAD,CAAR,EAA8B,IAA9B,CAAV;AACAoE,IAAAA,eAAe,CAAC,IAAD,CAAf;AACA,WAAO9E,KAAK,CAAC;AACTmF,MAAAA,GAAG,EAAErB,gBAAgB,CAACsB,QAAjB,GAA4B,qBADxB;AAETC,MAAAA,MAAM,EAAE,MAFC;AAGTC,MAAAA,MAAM,EAAE;AACJZ,QAAAA,GAAG,EAAEA,GADD;AAEJC,QAAAA,QAAQ,EAAEA;AAFN;AAHC,KAAD,CAAL,CAOJY,IAPI,CAOEC,kBAAD,IAAwB;AAC5B,YAAMC,YAAY,GAAGD,kBAAkB,CAACE,IAAxC;;AACA,UAAID,YAAY,CAACE,MAAjB,EAAyB;AACrB,YAAIC,aAAa,GAAG5B,KAAK,CAAC4B,aAA1B;AACA,cAAMC,SAAS,GAAGD,aAAa,CAACE,SAAd,CAAyBC,IAAD,IAAUA,IAAI,CAACrB,GAAL,KAAasB,MAAM,CAACtB,GAAD,CAArD,CAAlB;;AACA,YAAImB,SAAS,GAAG,CAAC,CAAjB,EAAoB;AAAA;;AAChB,cAAII,WAAW,GAAGjC,KAAK,CAAC4B,aAAxB;AACAK,UAAAA,WAAW,CAACC,MAAZ,CAAmBL,SAAnB,EAA8B,CAA9B;AACAnF,UAAAA,UAAU,CAAC,KAAD,EAAQ,CAAC,eAAD,CAAR,EAA2BuF,WAA3B,CAAV;AACAvF,UAAAA,UAAU,CAAC,KAAD,EAAQ,CAAC,kBAAD,CAAR,EAA8B,KAA9B,CAAV;AACAoE,UAAAA,eAAe,CAAC,KAAD,CAAf;AACAC,UAAAA,eAAe,CAACC,CAAC,CAAC,uBAAD,CAAF,EAA6B;AAAEmB,YAAAA,OAAO,EAAE,SAAX;AAAsBC,YAAAA,gBAAgB,EAAE;AAAxC,WAA7B,CAAf;;AAEA,cAAGrC,WAAH,aAAGA,WAAH,sCAAGA,WAAW,CAAEsC,MAAhB,yEAAG,oBAAqBC,IAAxB,kDAAG,sBAA2BC,SAA9B,EAAwC;AAAA;;AACpCrF,YAAAA,UAAU,CAACsF,OAAX,CAAmBC,aAAnB,CAAiC;AAC7BC,cAAAA,UAAU,EAAE,gBADiB;AAE7BC,cAAAA,SAAS,EAAE5C,WAAF,aAAEA,WAAF,+CAAEA,WAAW,CAAEsC,MAAf,kFAAE,qBAAqBC,IAAvB,0DAAE,sBAA2BM,KAFT;AAG7BC,cAAAA,OAAO,EAAE/C,gBAAgB,CAACgD,UAHG;AAI7BC,cAAAA,MAAM,EAAE5C,OAJqB;AAK7B6C,cAAAA,MAAM,EAAE5C,QALqB;AAM7B6C,cAAAA,KAAK,EAAE5C,GANsB;AAO7BC,cAAAA,KAAK,EAAEA,KAPsB;AAQ7B4C,cAAAA,YAAY,EAAEzC,SARe;AAS7B0C,cAAAA,gBAAgB,EAAE;AACdC,gBAAAA,QAAQ,EAAEzC,QADI;AAEd0C,gBAAAA,EAAE,EAAEpD,UAFU;AAGdqD,gBAAAA,IAAI,EAAEpD,QAHQ;AAIdM,gBAAAA,KAAK,EAAErD,MAAM,CAACoG,MAAP,CAAcC,WAAd,CAA0BhD,KAA1B,CAJO;AAKdiD,gBAAAA,GAAG,EAAE,CALS;AAMdC,gBAAAA,QAAQ,EAAE;AANI;AATW,aAAjC;AAkBH;AAEJ;;AAED,YAAI9B,aAAa,CAAC+B,MAAd,KAAyB,CAA7B,EAAgC;AAC5B1C,UAAAA,MAAM,CAAC2C,IAAP,CAAa;AACTC,YAAAA,QAAQ,EAAE,gBADD;AAETC,YAAAA,KAAK,EAAE7C,MAAM,CAAC6C;AAFL,WAAb;AAIH;AACJ,OAxCD,MAwCK;AACDhD,QAAAA,eAAe,CAAC,KAAD,CAAf;AACApE,QAAAA,UAAU,CAAC,KAAD,EAAQ,CAAC,kBAAD,CAAR,EAA8B,KAA9B,CAAV;AACAqE,QAAAA,eAAe,CAACC,CAAC,CAAC,qBAAD,CAAF,EAA2B;AAAEmB,UAAAA,OAAO,EAAE,SAAX;AAAsBC,UAAAA,gBAAgB,EAAE;AAAxC,SAA3B,CAAf;AACH;AACJ,KAtDM,CAAP;AAuDH,GA1DD;;AA4DA,SACI,MAAC,QAAD;AAAU,IAAA,UAAU,EAAC,YAArB;AAAkC,IAAA,MAAM,MAAxC;AAAyC,IAAA,OAAO,EAAE;AAAE2B,MAAAA,SAAS,EAAElE,OAAO,CAAC9B,iBAArB;AAAwCiG,MAAAA,IAAI,EAAEnE,OAAO,CAAC7B,YAAtD;AAAoEiG,MAAAA,MAAM,EAAEpE,OAAO,CAACqE;AAApF,KAAlD;AAAyJ,IAAA,cAAc,MAAvK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAErE,OAAO,CAACxB,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAEwB,OAAO,CAAClB,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,SAAS,EAAEkB,OAAO,CAACsE,MAA/C;AAAuD,IAAA,KAAK,EAAC,aAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKjE,QADL,CADJ,EAII,MAAC,UAAD;AACI,IAAA,KAAK,EAAE;AACHxB,MAAAA,OAAO,EAAE;AADN,KADX;AAII,IAAA,OAAO,EAAC,OAJZ;AAKI,IAAA,SAAS,EAAEmB,OAAO,CAACsE,MALvB;AAMI,IAAA,KAAK,EAAC,eANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQKlI,MAAM,CAACkE,OAAD,EAAU,YAAV,CAAN,CAA8BiE,MAA9B,CAAqC,kBAArC,CARL,SAQkEnI,MAAM,CAACmE,QAAD,EAAW,YAAX,CAAN,CAA+BgE,MAA/B,CAAsC,kBAAtC,CARlE,CAJJ,EAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,KAAK,EAAC,SAFV;AAGI,IAAA,SAAS,EAAEvE,OAAO,CAACvC,QAHvB;AAII,IAAA,KAAK,EAAE+C,GAJX;AAKI,IAAA,IAAI,EAAE,MAAC,IAAD;AAAM,MAAA,QAAQ,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,MAAC,IAAD;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,KAAK,EAAC,SAFV;AAGI,IAAA,SAAS,EAAER,OAAO,CAACvC,QAHvB;AAII,IAAA,KAAK,EAAEgD,KAJX;AAKI,IAAA,IAAI,EAAE,MAAC,IAAD;AAAM,MAAA,QAAQ,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAeE,MAAC,WAAD;AACI,IAAA,KAAK,MADT;AAEI,IAAA,KAAK,EACD,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,SAAS,EAAET,OAAO,CAACb,oBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgDgC,CAAC,CAAC,cAAD,CAAjD,MADJ,OAC+E;AAAM,MAAA,SAAS,EAAEnB,OAAO,CAACV,oBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgDlC,WAAW,CAAC2D,SAAD,CAA3D,OAAyE5D,qBAAqB,CAACyD,SAAD,CAArB,IAAoC,EAA7G,CAD/E,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQA,MAAC,IAAD;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,KAAK,EAAC,SAFV;AAGI,IAAA,SAAS,EAAEZ,OAAO,CAACvC,QAHvB;AAII,IAAA,KAAK,EAAEiD,KAJX;AAKI,IAAA,IAAI,EAAE,MAAC,IAAD;AAAM,MAAA,QAAQ,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARA,CAfF,EA+BC,MAAC,WAAD;AACI,IAAA,KAAK,MADT;AAEI,IAAA,KAAK,EAAE;AAAM,MAAA,SAAS,EAAEV,OAAO,CAACb,oBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgDgC,CAAC,CAAC,gBAAD,CAAjD,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,MAAC,IAAD;AACI,IAAA,SAAS,EAAEnB,OAAO,CAAClC,aADvB;AAEI,IAAA,KAAK,EAAC,SAFV;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,MAAM,EAAE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASX,qBAAqB,CAACyD,SAAD,CAArB,IAAoC,EAA7C,CAJZ;AAKI,IAAA,KAAK,EAAExD,WAAW,CAACuD,KAAD,CALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CA/BD,CAdJ,CADJ,EA4DI;AAAK,IAAA,SAAS,EAAEX,OAAO,CAAChB,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,kBAAD;AAAoB,IAAA,IAAI,EAAC,KAAzB;AAA+B,IAAA,SAAS,EAAC,OAAzC;AAAiD,IAAA,SAAS,EAAEgC,YAA5D;AAA0E,IAAA,OAAO,EAAE,MAAM,CAACb,KAAK,CAACqE,gBAAP,IAA2BnD,gBAAgB,CAACR,GAAD,EAAMC,QAAN,CAApI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CADJ,CA5DJ,CADJ,CADJ;AAsEH,CA/ID;;AAkJA,MAAM2D,eAAe,GAAItE,KAAD,IAAW;AAC/B,SAAO;AACHA,IAAAA,KAAK,EAAEA,KAAK,CAACuE,WAAN,CAAkBC;AADtB,GAAP;AAGH,CAJD;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACtChI,EAAAA,UAAU,EAAE,CAACiI,SAAD,EAAYC,SAAZ,EAAuBC,KAAvB,KAAiCH,QAAQ,CAAChI,UAAU,CAACiI,SAAD,EAAYC,SAAZ,EAAuBC,KAAvB,CAAX;AADf,CAAf,CAA3B;;AAIA,eAAelI,OAAO,CAAC2H,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C9E,YAA7C,CAAf","sourcesContent":["import React, { useContext, useEffect, useState, useRef } from 'react'\nimport axios from 'axios'\nimport moment from 'moment'\nimport {\n    ListItem,\n    Typography,\n    Icon,\n    Chip,\n    Avatar,\n    Tooltip\n} from '@material-ui/core'\nimport { withStyles, makeStyles } from '@material-ui/core/styles'\nimport { setToState } from 'state/actions'\nimport { connect } from 'react-redux'\nimport WebCmsGlobal from 'components/webcms-global'\nimport ProgressIconButton from './ProgressIconButton'\nimport { useSnackbar } from 'notistack'\nimport useTranslation from 'lib/translations/hooks/useTranslation'\nimport getSymbolFromCurrency from 'model/currency-symbol'\nimport { formatMoney } from 'model/orest/constants'\nimport TagManager from '@webcms-globals/tag-manager'\nimport * as global from '@webcms-globals'\nimport { useRouter } from 'next/router'\n\nconst useStyles = makeStyles(() => ({\n    infoChip: {\n        marginRight: 5,\n        backgroundColor: '#ffffff',\n        borderRadius: 0,\n        boxShadow: 'inset 0 0 0px 1px #c8c8c8'\n    },\n    infoPriceChip: {\n        backgroundColor: '#ffffff',\n        borderRadius: 0,\n        marginLeft: 5,\n        boxShadow: 'inset 0 0 0px 1px #c8c8c8',\n        position: 'absolute',\n        right: 10\n    },\n    listItemContainer: {\n        boxShadow: 'inset 0 0 1px 1px #f3f3f3',\n    },\n    listItemRoot: {\n        paddingTop: 0,\n        paddingBottom: 0,\n        marginTop: 10,\n        marginBottom: 10,\n    },\n    listItemParent: {\n        display: 'flex',\n        alignItems: 'flex-start',\n        width: '100%',\n        textAlign: 'center',\n        padding: 0,\n        boxShadow: '0 0 0 1px #d2d2d26b'\n    },\n    listItemBox:{\n      flexGrow: 11,\n      textAlign: 'start',\n      padding: 10\n    },\n    listItemAction:{\n        flexGrow: 1,\n        padding: '1px 10px 0px 0px',\n        '& button[aria-label=\"close\"]:not([disabled])': {\n            color: '#a6a6a6',\n            '-webkit-transition': 'color 0.4s',\n            '-ms-transition': 'color 0.4s',\n            transition: 'color 0.4s',\n        },\n        \"&:hover\": {\n            '& button[aria-label=\"close\"]:not([disabled])': {\n                color: '#4d4d4d',\n                '-webkit-transition': 'color 0.4s',\n                '-ms-transition': 'color 0.4s',\n                transition: 'color 0.4s',\n            },\n        }\n    },\n    infoChipTooltipLabel: {\n        fontSize: 12,\n        fontWeight: 600\n    },\n    infoChipTooltipValue: {\n        fontSize: 12\n    }\n}))\n\nconst HtmlTooltip = withStyles((theme) => ({\n    tooltip: {\n        backgroundColor: '#f5f5f9',\n        color: 'rgba(0, 0, 0, 0.87)',\n        maxWidth: 220,\n        fontSize: theme.typography.pxToRem(12),\n        border: '1px solid #dadde9',\n    },\n}))(Tooltip)\n\nconst RoomListItem = (props) =>{\n    const classes = useStyles()\n        , { GENERAL_SETTINGS, WEBCMS_DATA } = useContext(WebCmsGlobal)\n        , { state, setToState, roomtypeId, roomName, checkin, checkout, pax, child, night, price, pricecurr, gid, reservno, dailyrate } = props\n        , [ isRoomDelete, setIsRoomDelete ] = useState(false)\n        , { enqueueSnackbar } = useSnackbar()\n        , { t } = useTranslation()\n        , router = useRouter()\n\n    useEffect(() => {\n        return () => setIsRoomDelete(false);\n    }, [])\n\n    const handleRemoveRoom = (gid, reservno) => {\n        setToState('ibe', ['bookingIsDisable'], true)\n        setIsRoomDelete(true)\n        return axios({\n            url: GENERAL_SETTINGS.BASE_URL + 'api/ors/room/delete',\n            method: 'post',\n            params: {\n                gid: gid,\n                reservno: reservno\n            },\n        }).then((deleteRoomResponse) => {\n            const roomResponse = deleteRoomResponse.data\n            if (roomResponse.status) {\n                let selectedRooms = state.selectedRooms\n                const roomIndex = selectedRooms.findIndex((item) => item.gid === String(gid))\n                if (roomIndex > -1) {\n                    let newRoomData = state.selectedRooms\n                    newRoomData.splice(roomIndex, 1)\n                    setToState('ibe', ['selectedRooms'], newRoomData)\n                    setToState('ibe', ['bookingIsDisable'], false)\n                    setIsRoomDelete(false)\n                    enqueueSnackbar(t('str_deleteRoomSuccess'), { variant: 'success', autoHideDuration: 3000 })\n\n                    if(WEBCMS_DATA?.assets?.meta?.googleTag){\n                        TagManager.booking.setRemoveRoom({\n                            eventLabel: 'Remove to Cart',\n                            hotelName: WEBCMS_DATA?.assets?.meta?.title,\n                            hotelId: GENERAL_SETTINGS.HOTELREFNO,\n                            ciDate: checkin,\n                            coDate: checkout,\n                            adult: pax,\n                            child: child,\n                            currencyCode: pricecurr,\n                            removeToCartData: {\n                                reservNo: reservno,\n                                id: roomtypeId,\n                                name: roomName,\n                                price: global.helper.formatPrice(price),\n                                qty: 1,\n                                category: 'Room',\n                            }\n                        })\n                    }\n\n                }\n\n                if (selectedRooms.length === 0) {\n                    router.push ({\n                        pathname: '/booking/rooms',\n                        query: router.query\n                    })\n                }\n            }else{\n                setIsRoomDelete(false)\n                setToState('ibe', ['bookingIsDisable'], false)\n                enqueueSnackbar(t('str_deleteRoomError'), { variant: 'warning', autoHideDuration: 3000 })\n            }\n        })\n    }\n\n    return (\n        <ListItem alignItems=\"flex-start\" button classes={{ container: classes.listItemContainer, root: classes.listItemRoot, button: classes.litemItemButton }} disableGutters>\n            <div className={classes.listItemParent}>\n                <div className={classes.listItemBox}>\n                    <Typography variant='body1' className={classes.inline} color='textPrimary'>\n                        {roomName}\n                    </Typography>\n                    <Typography\n                        style={{\n                            padding: '2px 0 10px 0',\n                        }}\n                        variant='body2'\n                        className={classes.inline}\n                        color='textSecondary'\n                    >\n                        {moment(checkin, 'YYYY-MM-DD').format('dd, MMM DD, YYYY')} - {moment(checkout, 'YYYY-MM-DD').format('dd, MMM DD, YYYY')}\n                    </Typography>\n                    <span>\n                      <Chip\n                          size='small'\n                          color='default'\n                          className={classes.infoChip}\n                          label={pax}\n                          icon={<Icon fontSize='small'>person</Icon>}\n                      />\n                      <Chip\n                          size='small'\n                          color='default'\n                          className={classes.infoChip}\n                          label={child}\n                          icon={<Icon fontSize='small'>face</Icon>}\n                      />\n                      <HtmlTooltip\n                          arrow\n                          title={\n                              <React.Fragment>\n                                  <span className={classes.infoChipTooltipLabel}>{t('str_perNight')}:</span> <span className={classes.infoChipTooltipValue}>{formatMoney(dailyrate)} {getSymbolFromCurrency(pricecurr) || ''}</span>\n                              </React.Fragment>\n                          }\n                      >\n                      <Chip\n                          size='small'\n                          color='default'\n                          className={classes.infoChip}\n                          label={night}\n                          icon={<Icon fontSize='small'>nights_stay</Icon>}\n                      />\n                     </HtmlTooltip>\n                     <HtmlTooltip\n                         arrow\n                         title={<span className={classes.infoChipTooltipLabel}>{t('str_totalPrice')}</span>}\n                     >\n                         <Chip\n                             className={classes.infoPriceChip}\n                             color='default'\n                             size='small'\n                             avatar={<Avatar>{getSymbolFromCurrency(pricecurr) || ''}</Avatar>}\n                             label={formatMoney(price)}\n                         />\n                     </HtmlTooltip>\n                   </span>\n                </div>\n                <div className={classes.listItemAction}>\n                    <ProgressIconButton edge='end' ariaLabel='close' isLoading={isRoomDelete} onClick={() => !state.bookingIsDisable && handleRemoveRoom(gid, reservno)}>\n                        <Icon fontSize='small'>close</Icon>\n                    </ProgressIconButton>\n                </div>\n            </div>\n        </ListItem>\n    )\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        state: state.formReducer.ibe,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RoomListItem)\n"]},"metadata":{},"sourceType":"module"}