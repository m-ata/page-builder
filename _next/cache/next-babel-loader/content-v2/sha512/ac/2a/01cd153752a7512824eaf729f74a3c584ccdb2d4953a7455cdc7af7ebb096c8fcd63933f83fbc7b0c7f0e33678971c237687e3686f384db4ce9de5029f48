{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/guest/account/LoyaltyClub/receivable-gifts.js\";\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect, useState } from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport { setToState } from 'state/actions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Insert, UseOrest } from '@webcms/orest';\nimport { DEFAULT_OREST_TOKEN, isErrorMsg, notZero, OREST_ENDPOINT } from 'model/orest/constants';\nimport WebCmsGlobal from 'components/webcms-global';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport LoadingSpinner from 'components/LoadingSpinner';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nimport { useSnackbar } from 'notistack';\nimport ReceivableGiftCard from './ReceivableGiftCard';\nimport GiftCardDialog from './GiftCardDialog';\nimport { sendGuestChangeNotifyMail } from '../Base/helper';\nimport TrackedChangesDialog from '../../../TrackedChangesDialog';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  details: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  content: {\n    flex: '1 0 auto'\n  },\n  cover: {\n    maxWidth: 140,\n    width: '100%',\n    [theme.breakpoints.down('sm')]: {\n      display: 'none'\n    }\n  }\n}));\n\nconst ReceivableGifts = props => {\n  var _state$clientReservat;\n\n  const classes = useStyles();\n  const {\n    state,\n    setToState\n  } = props;\n  const {\n    GENERAL_SETTINGS\n  } = useContext(WebCmsGlobal);\n  const {\n    t\n  } = useTranslation();\n  const {\n    enqueueSnackbar\n  } = useSnackbar(); //redux\n\n  const token = useSelector(state => {\n    var _state$orest, _state$orest$currentU, _state$orest$currentU2;\n\n    return (state === null || state === void 0 ? void 0 : (_state$orest = state.orest) === null || _state$orest === void 0 ? void 0 : (_state$orest$currentU = _state$orest.currentUser) === null || _state$orest$currentU === void 0 ? void 0 : (_state$orest$currentU2 = _state$orest$currentU.auth) === null || _state$orest$currentU2 === void 0 ? void 0 : _state$orest$currentU2.access_token) || false;\n  });\n  const clientBase = useSelector(state => {\n    var _state$orest2, _state$orest2$state;\n\n    return (state === null || state === void 0 ? void 0 : (_state$orest2 = state.orest) === null || _state$orest2 === void 0 ? void 0 : (_state$orest2$state = _state$orest2.state) === null || _state$orest2$state === void 0 ? void 0 : _state$orest2$state.client) || false;\n  });\n  const reservBase = state.clientReservation || false;\n  const hotelRefNo = (state === null || state === void 0 ? void 0 : state.changeHotelRefno) || (state === null || state === void 0 ? void 0 : (_state$clientReservat = state.clientReservation) === null || _state$clientReservat === void 0 ? void 0 : _state$clientReservat.hotelrefno) || GENERAL_SETTINGS.HOTELREFNO; //state\n\n  const {\n    0: receivableGifts,\n    1: setReceivableGifts\n  } = useState([]);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    0: isInitialized,\n    1: setIsInitialized\n  } = useState(false);\n  const {\n    0: sliderID,\n    1: setSliderID\n  } = useState(false);\n  const {\n    0: limit,\n    1: setLimit\n  } = useState(4);\n  const {\n    0: openTrackedDialog,\n    1: setOpenTrackedDialog\n  } = useState(false);\n\n  const getGiftList = (active, useHotelRefNo = false) => {\n    setIsLoading(true);\n    return UseOrest({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.BONUSTRANS + '/gift/list',\n      token,\n      params: {\n        hotelrefno: useHotelRefNo || hotelRefNo\n      }\n    }).then(r => {\n      if (active) {\n        if (r.status === 200) {\n          setReceivableGifts(r.data.data);\n          setIsLoading(false);\n          setIsInitialized(true);\n        } else {\n          const retErr = isErrorMsg(r);\n          enqueueSnackbar(retErr.errorMsg, {\n            variant: 'warning'\n          });\n          setIsLoading(false);\n          setIsInitialized(true);\n        }\n      }\n    });\n  };\n\n  useEffect(() => {\n    let active = true;\n\n    if (active) {\n      if (isLoading) {\n        return undefined;\n      }\n\n      if (clientBase !== null && clientBase !== void 0 && clientBase.id) {\n        getGiftList(active);\n      } else {\n        setIsLoading(false);\n        setIsInitialized(true);\n      }\n    }\n\n    return () => {\n      active = false;\n    };\n  }, []);\n  useEffect(() => {\n    let active = true;\n\n    if (active) {\n      if (isLoading) {\n        return undefined;\n      }\n\n      if (clientBase !== null && clientBase !== void 0 && clientBase.id) {\n        setIsInitialized(false);\n        setReceivableGifts([]);\n        getGiftList(active, state.changeHotelRefno);\n      } else {\n        setIsLoading(false);\n        setIsInitialized(true);\n      }\n    }\n\n    return () => {\n      active = false;\n    };\n  }, [state.changeHotelRefno]);\n\n  const handleUseGift = (prcode, bonusamount, description, hotelrefno) => {\n    const notifyValues = {\n      \"roomno\": (reservBase === null || reservBase === void 0 ? void 0 : reservBase.roomno) || \"\",\n      \"clientname\": clientBase.clientname || \"\",\n      \"giftname\": description || \"\"\n    };\n\n    if (Number(clientBase.reshotelrefno) === Number(hotelrefno)) {\n      if ((reservBase === null || reservBase === void 0 ? void 0 : reservBase.status) !== \"I\") {\n        enqueueSnackbar(t('str_youMustBeInhouseInToTheHotelToChooseAGift'), {\n          variant: 'warning'\n        });\n        return;\n      }\n\n      if (notZero(state.bonusTransPoints.bonusleft) && state.bonusTransPoints.bonusleft >= Number(bonusamount)) {\n        setToState('guest', ['isSelectGift'], true);\n        Insert({\n          apiUrl: GENERAL_SETTINGS.OREST_URL,\n          endpoint: OREST_ENDPOINT.BONUSTRANS + '/gift',\n          token: token,\n          params: {\n            accid: clientBase === null || clientBase === void 0 ? void 0 : clientBase.id,\n            prcode: prcode,\n            amount: 1,\n            hotelrefno: clientBase.reshotelrefno\n          }\n        }).then(async bonusTransGiftResponse => {\n          if (bonusTransGiftResponse.status === 200) {\n            await sendGuestChangeNotifyMail(reservBase !== null && reservBase !== void 0 && reservBase.gid ? false : true, 'posmain', 'upd', clientBase.id, reservBase !== null && reservBase !== void 0 && reservBase.gid ? reservBase.gid : clientBase.gid, notifyValues, (reservBase === null || reservBase === void 0 ? void 0 : reservBase.hotelrefno) || GENERAL_SETTINGS.HOTELREFNO);\n            enqueueSnackbar(t('str_giftSelectionIsDone'), {\n              variant: 'success'\n            });\n            setToState('guest', ['isSelectGift'], false);\n            setOpenTrackedDialog(false);\n          } else {\n            setOpenTrackedDialog(false);\n            enqueueSnackbar(t('str_unexpectedProblem'), {\n              variant: 'error'\n            });\n            setToState('guest', ['isSelectGift'], false);\n          }\n        });\n      } else {\n        setOpenTrackedDialog(false);\n        enqueueSnackbar(t('str_sorryYourBalanceIsNotEnoughForTheSelectedGift'), {\n          variant: 'warning'\n        });\n      }\n    } else {\n      setOpenTrackedDialog(false);\n      enqueueSnackbar(t('str_youCanOnlyChooseAGiftAtTheHotelYouAreStayingAt'), {\n        variant: 'warning'\n      });\n    }\n  };\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }, __jsx(TrackedChangesDialog, {\n    dialogTitle: t('str_giftChoiceApproval'),\n    dialogDesc: t('str_doYouApproveYourChoiceForTheGift', {\n      giftname: openTrackedDialog !== null && openTrackedDialog !== void 0 && openTrackedDialog.title ? t(openTrackedDialog.title) : ''\n    }),\n    open: openTrackedDialog,\n    onPressNo: e => setOpenTrackedDialog(e),\n    onPressYes: () => {\n      const data = openTrackedDialog;\n      handleUseGift(data.code, data.amount, data.desc, data.hotelrefno);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }), __jsx(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, __jsx(GiftCardDialog, {\n    sliderID: sliderID,\n    open: Boolean(sliderID),\n    onClose: () => setSliderID(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }\n  }), isInitialized ? receivableGifts.length > 0 ? Object(receivableGifts.slice(0, limit)).map((item, i) => __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 29\n    }\n  }, __jsx(ReceivableGiftCard, {\n    code: item.code,\n    title: item.localtitle || item.title,\n    requiredBonus: item.bonusamount,\n    sliderID: item.sliderid,\n    giftThumbnail: item.url ? GENERAL_SETTINGS.STATIC_URL + item.url : '/imgs/not-found.png',\n    onSelect: (code, amount) => setOpenTrackedDialog({\n      code: code,\n      amount: amount,\n      desc: item.description,\n      title: item.localtitle || item.title,\n      hotelrefno: item.hotelrefno\n    }),\n    onDetail: id => setSliderID(id),\n    disabled: state.isSelectGift,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 33\n    }\n  }))) : __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 25\n    }\n  }, __jsx(Box, {\n    p: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 29\n    }\n  }, __jsx(Typography, {\n    component: \"h3\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 33\n    }\n  }, t('str_nothingYet')))) : __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 21\n    }\n  }, __jsx(LoadingSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 25\n    }\n  })), receivableGifts && receivableGifts.length > 0 && receivableGifts.length > limit && __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 21\n    }\n  }, __jsx(Box, {\n    p: 3,\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 25\n    }\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    disableElevation: true,\n    onClick: () => setLimit(limit + 3),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 29\n    }\n  }, t('str_showMore'))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    state: state.formReducer.guest\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReceivableGifts);","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/guest/account/LoyaltyClub/receivable-gifts.js"],"names":["React","useContext","useEffect","useState","connect","useSelector","setToState","makeStyles","Grid","Insert","UseOrest","DEFAULT_OREST_TOKEN","isErrorMsg","notZero","OREST_ENDPOINT","WebCmsGlobal","Box","Typography","Button","LoadingSpinner","useTranslation","useSnackbar","ReceivableGiftCard","GiftCardDialog","sendGuestChangeNotifyMail","TrackedChangesDialog","useStyles","theme","root","display","details","flexDirection","content","flex","cover","maxWidth","width","breakpoints","down","ReceivableGifts","props","classes","state","GENERAL_SETTINGS","t","enqueueSnackbar","token","orest","currentUser","auth","access_token","clientBase","client","reservBase","clientReservation","hotelRefNo","changeHotelRefno","hotelrefno","HOTELREFNO","receivableGifts","setReceivableGifts","isLoading","setIsLoading","isInitialized","setIsInitialized","sliderID","setSliderID","limit","setLimit","openTrackedDialog","setOpenTrackedDialog","getGiftList","active","useHotelRefNo","apiUrl","OREST_URL","endpoint","BONUSTRANS","params","then","r","status","data","retErr","errorMsg","variant","undefined","id","handleUseGift","prcode","bonusamount","description","notifyValues","roomno","clientname","Number","reshotelrefno","bonusTransPoints","bonusleft","accid","amount","bonusTransGiftResponse","gid","giftname","title","e","code","desc","Boolean","length","Object","slice","map","item","i","localtitle","sliderid","url","STATIC_URL","isSelectGift","textAlign","mapStateToProps","formReducer","guest","mapDispatchToProps","dispatch","stateType","stateName","value"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport { connect, useSelector } from 'react-redux'\nimport { setToState } from 'state/actions'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport { Insert, UseOrest } from '@webcms/orest'\nimport { DEFAULT_OREST_TOKEN, isErrorMsg, notZero, OREST_ENDPOINT } from 'model/orest/constants'\nimport WebCmsGlobal from 'components/webcms-global'\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport LoadingSpinner from 'components/LoadingSpinner'\nimport useTranslation from 'lib/translations/hooks/useTranslation'\nimport { useSnackbar } from 'notistack'\nimport ReceivableGiftCard from './ReceivableGiftCard'\nimport GiftCardDialog from './GiftCardDialog'\nimport { sendGuestChangeNotifyMail } from '../Base/helper'\nimport TrackedChangesDialog from '../../../TrackedChangesDialog'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    details: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    content: {\n        flex: '1 0 auto',\n    },\n    cover: {\n        maxWidth: 140,\n        width: '100%',\n        [theme.breakpoints.down('sm')]: {\n            display: 'none',\n        },\n    },\n}))\n\nconst ReceivableGifts = (props) => {\n    const classes = useStyles()\n    const { state, setToState } = props\n    const { GENERAL_SETTINGS } = useContext(WebCmsGlobal)\n    const { t } = useTranslation()\n    const { enqueueSnackbar } = useSnackbar()\n\n    //redux\n    const token = useSelector((state) => state?.orest?.currentUser?.auth?.access_token || false)\n    const clientBase = useSelector((state) => state?.orest?.state?.client || false)\n    const reservBase = state.clientReservation || false\n    const hotelRefNo = state?.changeHotelRefno || state?.clientReservation?.hotelrefno || GENERAL_SETTINGS.HOTELREFNO\n\n    //state\n    const [receivableGifts, setReceivableGifts] = useState([])\n    const [isLoading, setIsLoading] = useState(false)\n    const [isInitialized, setIsInitialized] = useState(false)\n    const [sliderID, setSliderID] = useState(false)\n    const [limit, setLimit] = useState(4)\n    const [openTrackedDialog, setOpenTrackedDialog] = useState(false)\n\n    const getGiftList = (active, useHotelRefNo = false) => {\n        setIsLoading(true)\n        return UseOrest({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.BONUSTRANS + '/gift/list',\n            token,\n            params: {\n                hotelrefno: useHotelRefNo || hotelRefNo\n            }\n        }).then((r) => {\n            if (active) {\n                if (r.status === 200) {\n                    setReceivableGifts(r.data.data)\n                    setIsLoading(false)\n                    setIsInitialized(true)\n                } else {\n                    const retErr = isErrorMsg(r)\n                    enqueueSnackbar(retErr.errorMsg, { variant: 'warning' })\n                    setIsLoading(false)\n                    setIsInitialized(true)\n                }\n            }\n        })\n    }\n\n    useEffect(() => {\n        let active = true\n        if (active) {\n            if (isLoading) {\n                return undefined\n            }\n\n            if (clientBase?.id) {\n                getGiftList(active)\n            } else {\n                setIsLoading(false)\n                setIsInitialized(true)\n            }\n        }\n\n        return () => {\n            active = false\n        }\n    }, [])\n\n    useEffect(() => {\n        let active = true\n        if (active) {\n            if (isLoading) {\n                return undefined\n            }\n\n            if (clientBase?.id) {\n                setIsInitialized(false)\n                setReceivableGifts([])\n                getGiftList(active, state.changeHotelRefno)\n            } else {\n                setIsLoading(false)\n                setIsInitialized(true)\n            }\n        }\n\n        return () => {\n            active = false\n        }\n    }, [state.changeHotelRefno])\n\n    const handleUseGift = (prcode, bonusamount, description, hotelrefno) => {\n\n        const notifyValues = {\n            \"roomno\":reservBase?.roomno || \"\",\n            \"clientname\": clientBase.clientname || \"\",\n            \"giftname\": description || \"\"\n        }\n\n        if(Number(clientBase.reshotelrefno) === Number(hotelrefno)){\n\n            if(reservBase?.status !== \"I\"){\n                enqueueSnackbar(t('str_youMustBeInhouseInToTheHotelToChooseAGift'), { variant: 'warning' })\n                return\n            }\n\n            if (notZero(state.bonusTransPoints.bonusleft) && state.bonusTransPoints.bonusleft >= Number(bonusamount)) {\n                setToState('guest', ['isSelectGift'], true)\n                Insert({\n                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                    endpoint: OREST_ENDPOINT.BONUSTRANS + '/gift',\n                    token: token,\n                    params: {\n                        accid: clientBase?.id,\n                        prcode: prcode,\n                        amount: 1,\n                        hotelrefno: clientBase.reshotelrefno\n                    },\n                }).then(async (bonusTransGiftResponse) => {\n                    if (bonusTransGiftResponse.status === 200) {\n                        await sendGuestChangeNotifyMail(reservBase?.gid ? false : true,'posmain','upd',clientBase.id,reservBase?.gid ? reservBase.gid : clientBase.gid, notifyValues, reservBase?.hotelrefno || GENERAL_SETTINGS.HOTELREFNO)\n                        enqueueSnackbar(t('str_giftSelectionIsDone'), { variant: 'success' })\n                        setToState('guest', ['isSelectGift'], false)\n                        setOpenTrackedDialog(false)\n                    } else {\n                        setOpenTrackedDialog(false)\n                        enqueueSnackbar(t('str_unexpectedProblem'), { variant: 'error' })\n                        setToState('guest', ['isSelectGift'], false)\n                    }\n                })\n            } else {\n                setOpenTrackedDialog(false)\n                enqueueSnackbar(t('str_sorryYourBalanceIsNotEnoughForTheSelectedGift'), { variant: 'warning' })\n            }\n        }else{\n            setOpenTrackedDialog(false)\n            enqueueSnackbar(t('str_youCanOnlyChooseAGiftAtTheHotelYouAreStayingAt'), { variant: 'warning' })\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <TrackedChangesDialog\n                dialogTitle={t('str_giftChoiceApproval')}\n                dialogDesc={t('str_doYouApproveYourChoiceForTheGift', { giftname: openTrackedDialog?.title ? t(openTrackedDialog.title) : ''})}\n                open={openTrackedDialog}\n                onPressNo={(e) => setOpenTrackedDialog(e)}\n                onPressYes={() => {\n                    const data = openTrackedDialog\n                    handleUseGift(data.code, data.amount, data.desc, data.hotelrefno)\n                }}\n            />\n            <Grid container spacing={3}>\n                <GiftCardDialog sliderID={sliderID} open={Boolean(sliderID)} onClose={()=> setSliderID(false)} />\n                {isInitialized ? (\n                    receivableGifts.length > 0 ? (\n                        Object(receivableGifts.slice(0, limit)).map((item, i) => (\n                            <Grid item xs={12} sm={6} key={i}>\n                                <ReceivableGiftCard\n                                    code={item.code}\n                                    title={item.localtitle || item.title}\n                                    requiredBonus={item.bonusamount}\n                                    sliderID={item.sliderid}\n                                    giftThumbnail={item.url ? GENERAL_SETTINGS.STATIC_URL + item.url : '/imgs/not-found.png'}\n                                    onSelect={(code, amount)=> setOpenTrackedDialog({code: code, amount: amount, desc: item.description, title: (item.localtitle || item.title), hotelrefno: item.hotelrefno})}\n                                    onDetail={(id) => setSliderID(id)}\n                                    disabled={state.isSelectGift}\n                                />\n                            </Grid>\n                        ) )\n                    ) : (\n                        <Grid item xs={12}>\n                            <Box p={3}>\n                                <Typography component=\"h3\" align=\"center\">\n                                    {t('str_nothingYet')}\n                                </Typography>\n                            </Box>\n                        </Grid>\n                    )\n                ) : (\n                    <Grid item xs={12}>\n                        <LoadingSpinner />\n                    </Grid>\n                )}\n                {receivableGifts && receivableGifts.length > 0 &&  receivableGifts.length > limit && (\n                    <Grid item xs={12}>\n                        <Box p={3} style={{ textAlign: 'center' }}>\n                            <Button variant=\"contained\" color=\"primary\" disableElevation onClick={()=> setLimit(limit + 3)}>\n                                {t('str_showMore')}\n                            </Button>\n                        </Box>\n                    </Grid>\n                )}\n            </Grid>\n        </React.Fragment>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        state: state.formReducer.guest,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReceivableGifts)\n"]},"metadata":{},"sourceType":"module"}