{"ast":null,"code":"import _toConsumableArray from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/mata/app-cloudweb/components/guest/account/Preferences/index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport styles from './style/Preferences.style';\nimport stylesTabPanel from '../style/TabPanel.style';\nimport { NextSeo } from 'next-seo';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Menu from '@material-ui/core/Menu';\nimport Dialog from '@material-ui/core/Dialog';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { Button, IconButton, Checkbox, FormControlLabel } from '@material-ui/core';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport { UseOrest, ViewList, Patch, List, Insert } from '@webcms/orest';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CheckIcon from '@material-ui/icons/Check';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport { DEFAULT_OREST_TOKEN, isErrorMsg, isObjectEqual, jsonGroupBy, OREST_ENDPOINT, OREST_TOOLS_USER_HASRIGHT, REQUEST_METHOD_CONST } from '../../../../model/orest/constants';\nimport PopupState, { bindTrigger, bindMenu } from 'material-ui-popup-state';\nimport useNotifications from '../../../../model/notification/useNotifications';\nimport WebCmsGlobal from '../../../webcms-global';\nimport LoadingSpinner from '../../../LoadingSpinner';\nimport RemarkGroup from './RemarkGroup';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TabHeader from '../../../layout/components/TabHeader';\nimport { TITLE_LOYALTY } from '../../../../assets/const';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nimport { MAX_MINUTE_VALUE, SLASH, TRUE } from '../../../../model/globals';\nimport { useSnackbar } from 'notistack';\nimport { CustomToolTip } from \"../../../user-portal/components/CustomToolTip/CustomToolTip\";\nimport { useOrestAction } from \"../../../../model/orest\";\nimport { setToState as _setToState, updateState as _updateState } from \"../../../../state/actions\";\nimport { sendGuestChangeNotifyMail } from \"../Base/helper\";\nimport TrackedChangesDialog from \"../../../TrackedChangesDialog\";\nvar useStyles = makeStyles(styles);\nvar useStylesTabPanel = makeStyles(stylesTabPanel);\n\nfunction Preferences(props) {\n  _s();\n\n  var _this = this;\n\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var classesTabPanel = useStylesTabPanel();\n\n  var _useContext = useContext(WebCmsGlobal),\n      GENERAL_SETTINGS = _useContext.GENERAL_SETTINGS;\n\n  var state = props.state,\n      setToState = props.setToState; //redux\n\n  var _useNotifications = useNotifications(),\n      showError = _useNotifications.showError;\n\n  var _useOrestAction = useOrestAction(),\n      setOrestState = _useOrestAction.setOrestState;\n\n  var token = useSelector(function (state) {\n    var _state$orest, _state$orest$currentU, _state$orest$currentU2;\n\n    return (state === null || state === void 0 ? void 0 : (_state$orest = state.orest) === null || _state$orest === void 0 ? void 0 : (_state$orest$currentU = _state$orest.currentUser) === null || _state$orest$currentU === void 0 ? void 0 : (_state$orest$currentU2 = _state$orest$currentU.auth) === null || _state$orest$currentU2 === void 0 ? void 0 : _state$orest$currentU2.access_token) || false;\n  });\n  var clientBase = useSelector(function (state) {\n    var _state$orest2, _state$orest2$state;\n\n    return (state === null || state === void 0 ? void 0 : (_state$orest2 = state.orest) === null || _state$orest2 === void 0 ? void 0 : (_state$orest2$state = _state$orest2.state) === null || _state$orest2$state === void 0 ? void 0 : _state$orest2$state.client) || false;\n  });\n  var hotelRefNo = useSelector(function (state) {\n    var _state$hotelinfo;\n\n    return (state === null || state === void 0 ? void 0 : (_state$hotelinfo = state.hotelinfo) === null || _state$hotelinfo === void 0 ? void 0 : _state$hotelinfo.currentHotelRefNo) || null;\n  });\n  var loginfo = useSelector(function (state) {\n    return state.orest.currentUser && state.orest.currentUser.loginfo;\n  });\n  var reservBase = state.clientReservation || false;\n  var isClient = loginfo.roletype === '6500310';\n\n  var _useSnackbar = useSnackbar(),\n      enqueueSnackbar = _useSnackbar.enqueueSnackbar;\n\n  var radioGroupAllGid = useSelector(function (state) {\n    var _state$formReducer, _state$formReducer$gu, _state$formReducer$gu2;\n\n    return (state === null || state === void 0 ? void 0 : (_state$formReducer = state.formReducer) === null || _state$formReducer === void 0 ? void 0 : (_state$formReducer$gu = _state$formReducer.guest) === null || _state$formReducer$gu === void 0 ? void 0 : (_state$formReducer$gu2 = _state$formReducer$gu.profile) === null || _state$formReducer$gu2 === void 0 ? void 0 : _state$formReducer$gu2.radioGroupAllGid) || false;\n  });\n  var checkboxGroupAll = useSelector(function (state) {\n    var _state$formReducer2, _state$formReducer2$g, _state$formReducer2$g2;\n\n    return (state === null || state === void 0 ? void 0 : (_state$formReducer2 = state.formReducer) === null || _state$formReducer2 === void 0 ? void 0 : (_state$formReducer2$g = _state$formReducer2.guest) === null || _state$formReducer2$g === void 0 ? void 0 : (_state$formReducer2$g2 = _state$formReducer2$g.profile) === null || _state$formReducer2$g2 === void 0 ? void 0 : _state$formReducer2$g2.checkboxGroupAll) || false;\n  }); //state\n\n  var _useState = useState(false),\n      isLoading = _useState[0],\n      setIsLoading = _useState[1];\n\n  var _useState2 = useState(false),\n      isInitialized = _useState2[0],\n      setIsInitialized = _useState2[1];\n\n  var _useState3 = useState(null),\n      remarkGroups = _useState3[0],\n      setRemarkGroups = _useState3[1];\n\n  var _useState4 = useState(isClient),\n      isDisabled = _useState4[0],\n      setIsDisabled = _useState4[1];\n\n  var _useState5 = useState(clientBase ? clientBase.remarknote : \"\"),\n      remarkNote = _useState5[0],\n      setRemarkNote = _useState5[1];\n\n  var _useState6 = useState(false),\n      isSuperUser = _useState6[0],\n      setIsSuperUser = _useState6[1];\n\n  var _useState7 = useState(true),\n      isLoad = _useState7[0],\n      setIsLoad = _useState7[1];\n\n  var _useState8 = useState(false),\n      isSaving = _useState8[0],\n      setIsSaving = _useState8[1];\n\n  var _useState9 = useState(false),\n      openAddRemarkGroupDialog = _useState9[0],\n      setOpenAddRemarkGroupDialog = _useState9[1];\n\n  var _useState10 = useState(false),\n      openTrackedDialog = _useState10[0],\n      setOpenTrackedDialog = _useState10[1];\n\n  var _useState11 = useState(false),\n      openToolTip = _useState11[0],\n      setOpenToolTip = _useState11[1];\n\n  var _useState12 = useState(false),\n      isSavingRemarkGroup = _useState12[0],\n      setIsSavingRemarkGroup = _useState12[1];\n\n  var _useState13 = useState(null),\n      remarkGroupData = _useState13[0],\n      setRemarkGroupData = _useState13[1];\n\n  var _useState14 = useState(false),\n      isHorizontal = _useState14[0],\n      setIsHorizontal = _useState14[1];\n\n  var _useState15 = useState(false),\n      isMultiple = _useState15[0],\n      setIsMultiple = _useState15[1];\n\n  var _useState16 = useState({\n    value: '',\n    isError: false,\n    errorType: ''\n  }),\n      remarkGroupDesc = _useState16[0],\n      setRemarkGroupDesc = _useState16[1];\n\n  useEffect(function () {\n    UseOrest({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_TOOLS_USER_HASRIGHT,\n      token: token,\n      params: {\n        checksuper: true,\n        empid: loginfo.id,\n        moduleid: 308236\n      }\n    }).then(function (res) {\n      if (res.status === 200) {\n        var data = res.data.data;\n\n        if (data.canl && data.cana && data.canu && data.canx && data.cand && data.cans && data.res) {\n          setIsSuperUser(true);\n        }\n      } else {\n        setIsSuperUser(false);\n      }\n    });\n  }, []);\n  useEffect(function () {\n    if (remarkGroupDesc.value.length > 0 && remarkGroupDesc.value.length < 2) {\n      setRemarkGroupDesc(_objectSpread(_objectSpread({}, remarkGroupDesc), {}, {\n        value: remarkGroupDesc.value,\n        isError: true,\n        errorType: 'lengthError'\n      }));\n    } else {\n      setRemarkGroupDesc(_objectSpread(_objectSpread({}, remarkGroupDesc), {}, {\n        value: remarkGroupDesc.value,\n        isError: false,\n        errorType: ''\n      }));\n    }\n\n    if (remarkGroupDesc.value.length > 0) {\n      var timer = setTimeout(function () {\n        var _remarkGroupDesc$valu;\n\n        List({\n          apiUrl: GENERAL_SETTINGS.OREST_URL,\n          endpoint: OREST_ENDPOINT.REMARKGR,\n          token: token,\n          params: {\n            query: \"code::\".concat((_remarkGroupDesc$valu = remarkGroupDesc.value) === null || _remarkGroupDesc$valu === void 0 ? void 0 : _remarkGroupDesc$valu.toUpperCase()),\n            hotelrefno: hotelRefNo || GENERAL_SETTINGS.HOTELREFNO\n          }\n        }).then(function (res) {\n          if (res.status === 200) {\n            if (res.data.count > 0) {\n              setRemarkGroupDesc(_objectSpread(_objectSpread({}, remarkGroupDesc), {}, {\n                value: remarkGroupDesc.value,\n                isError: true,\n                errorType: 'invalidCode'\n              }));\n            }\n          }\n        });\n      }, 700);\n      return function () {\n        return clearTimeout(timer);\n      };\n    }\n  }, [remarkGroupDesc.value]);\n  useEffect(function () {\n    var active = true;\n\n    if (active) {\n      if (isLoading) {\n        return undefined;\n      }\n\n      if (clientBase) {\n        getRemarkGroup(active);\n      } else {\n        setIsInitialized(true);\n      }\n    }\n\n    return function () {\n      active = false;\n    };\n  }, []);\n\n  var getRemarkGroup = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var active,\n          _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              active = _args.length > 0 && _args[0] !== undefined ? _args[0] : false;\n              setIsLoading(true);\n              _context.next = 4;\n              return getClientRem();\n\n            case 4:\n              return _context.abrupt(\"return\", ViewList({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: OREST_ENDPOINT.REMARKGR,\n                token: token,\n                params: {\n                  query: 'isactive:true',\n                  allhotels: true\n                }\n              }).then(function (r) {\n                if (active) {\n                  if (r.status === 200) {\n                    setRemarkGroups(r.data.data);\n                    setOrestState(['remarkGroups'], r.data.data);\n                    setIsInitialized(true);\n                    setIsLoading(false);\n                  } else {\n                    var retErr = isErrorMsg(r);\n                    showError(retErr.errorMsg);\n                    setIsInitialized(true);\n                    setIsLoading(false);\n                  }\n                }\n              }));\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getRemarkGroup() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var getClientRem = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", ViewList({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: OREST_ENDPOINT.CLIENTREM,\n                token: token,\n                params: {\n                  query: \"masterid:\".concat(clientBase.mid),\n                  allhotels: true,\n                  limit: 100\n                }\n              }).then(function (res) {\n                if (res.status === 200) {\n                  setOrestState(['selectedRemarkList'], res.data.data);\n                  return true;\n                } else {\n                  var retErr = isErrorMsg(res);\n                  enqueueSnackbar(t(retErr.errorMsg), {\n                    variant: 'error'\n                  });\n                  return false;\n                }\n              }));\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function getClientRem() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  function handleButtonEdit() {\n    setIsDisabled(!isDisabled);\n  }\n\n  var handlePatchRemarkNote = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              return _context4.abrupt(\"return\", Patch({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: OREST_ENDPOINT.CLIENT,\n                gid: clientBase.gid,\n                token: token,\n                params: {\n                  hotelrefno: clientBase.hotelrefno || hotelRefNo || GENERAL_SETTINGS.HOTELREFNO\n                },\n                data: {\n                  remarknote: remarkNote\n                }\n              }).then( /*#__PURE__*/function () {\n                var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(res) {\n                  var retErr;\n                  return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                      switch (_context3.prev = _context3.next) {\n                        case 0:\n                          if (!(res.status === 200)) {\n                            _context3.next = 5;\n                            break;\n                          }\n\n                          setOrestState(['client'], res.data.data);\n                          return _context3.abrupt(\"return\", {\n                            success: true,\n                            errorText: false\n                          });\n\n                        case 5:\n                          retErr = isErrorMsg(res);\n                          return _context3.abrupt(\"return\", {\n                            success: false,\n                            errorText: retErr.errorMsg\n                          });\n\n                        case 7:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }\n                  }, _callee3);\n                }));\n\n                return function (_x) {\n                  return _ref4.apply(this, arguments);\n                };\n              }()));\n\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function handlePatchRemarkNote() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var handleRemarkGroupDef = function handleRemarkGroupDef() {\n    UseOrest({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.REMARKGR + SLASH + OREST_ENDPOINT.DEF,\n      token: token,\n      params: {\n        hotelrefno: hotelRefNo || GENERAL_SETTINGS.HOTELREFNO\n      }\n    }).then(function (res) {\n      if (res.status === 200) {\n        var _res$data;\n\n        setRemarkGroupData(res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.data);\n      } else {\n        var error = isErrorMsg(res);\n        enqueueSnackbar(t(error.errorMsg), {\n          variant: 'error'\n        });\n      }\n    });\n  };\n\n  var handleAddRemarkGroup = function handleAddRemarkGroup() {\n    var _remarkGroupDesc$valu2, _remarkGroupDesc$valu3, _remarkGroupDesc$valu4;\n\n    setIsSavingRemarkGroup(true);\n    var data = remarkGroupData;\n    data.code = ((_remarkGroupDesc$valu2 = remarkGroupDesc.value) === null || _remarkGroupDesc$valu2 === void 0 ? void 0 : _remarkGroupDesc$valu2.length) > 50 ? (_remarkGroupDesc$valu3 = remarkGroupDesc.value) === null || _remarkGroupDesc$valu3 === void 0 ? void 0 : _remarkGroupDesc$valu3.toUpperCase().substring(0, 50) : (_remarkGroupDesc$valu4 = remarkGroupDesc.value) === null || _remarkGroupDesc$valu4 === void 0 ? void 0 : _remarkGroupDesc$valu4.toUpperCase();\n    data.description = remarkGroupDesc.value;\n    data.multiselect = isMultiple;\n    data.ishoriz = isHorizontal;\n    Insert({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.REMARKGR,\n      token: token,\n      params: {\n        hotelrefno: hotelRefNo || GENERAL_SETTINGS.HOTELREFNO\n      },\n      data: data\n    }).then(function (res) {\n      setIsSavingRemarkGroup(false);\n\n      if (res.status === 200) {\n        enqueueSnackbar(t('str_processCompletedSuccessfully'), {\n          variant: 'success'\n        });\n        setOpenAddRemarkGroupDialog(false);\n        setIsInitialized(false);\n        getRemarkGroup(true);\n        handleReset();\n      } else {\n        var error = isErrorMsg(res);\n        enqueueSnackbar(t(error.errorMsg), {\n          variant: 'error'\n        });\n      }\n    });\n  };\n\n  var handleInsert = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(list) {\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              return _context6.abrupt(\"return\", UseOrest({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: OREST_ENDPOINT.CLIENTREM + SLASH + OREST_ENDPOINT.LIST + SLASH + OREST_ENDPOINT.INS,\n                method: REQUEST_METHOD_CONST.POST,\n                token: token,\n                params: {\n                  hotelrefno: clientBase === null || clientBase === void 0 ? void 0 : clientBase.hotelrefno\n                },\n                data: list\n              }).then( /*#__PURE__*/function () {\n                var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(res) {\n                  var retErr;\n                  return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n                    while (1) {\n                      switch (_context5.prev = _context5.next) {\n                        case 0:\n                          if (!(res.status === 200)) {\n                            _context5.next = 7;\n                            break;\n                          }\n\n                          if (!res.data.data) {\n                            _context5.next = 5;\n                            break;\n                          }\n\n                          return _context5.abrupt(\"return\", {\n                            success: true,\n                            errorText: false\n                          });\n\n                        case 5:\n                          retErr = isErrorMsg(res);\n                          return _context5.abrupt(\"return\", {\n                            success: false,\n                            errorText: retErr.errorMsg\n                          });\n\n                        case 7:\n                        case \"end\":\n                          return _context5.stop();\n                      }\n                    }\n                  }, _callee5);\n                }));\n\n                return function (_x3) {\n                  return _ref6.apply(this, arguments);\n                };\n              }()));\n\n            case 1:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function handleInsert(_x2) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var handlePatchClientRem = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(list) {\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              return _context8.abrupt(\"return\", UseOrest({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: OREST_ENDPOINT.CLIENTREM + SLASH + OREST_ENDPOINT.LIST + SLASH + OREST_ENDPOINT.PATCH,\n                method: REQUEST_METHOD_CONST.PATCH,\n                token: token,\n                params: {\n                  hotelrefno: clientBase === null || clientBase === void 0 ? void 0 : clientBase.hotelrefno\n                },\n                data: list\n              }).then( /*#__PURE__*/function () {\n                var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(res) {\n                  var retErr;\n                  return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n                    while (1) {\n                      switch (_context7.prev = _context7.next) {\n                        case 0:\n                          if (!(res.status === 200)) {\n                            _context7.next = 7;\n                            break;\n                          }\n\n                          if (!res.data.data) {\n                            _context7.next = 5;\n                            break;\n                          }\n\n                          return _context7.abrupt(\"return\", {\n                            success: true,\n                            errorText: false\n                          });\n\n                        case 5:\n                          retErr = isErrorMsg(res);\n                          return _context7.abrupt(\"return\", {\n                            success: false,\n                            errorText: retErr.errorMsg\n                          });\n\n                        case 7:\n                        case \"end\":\n                          return _context7.stop();\n                      }\n                    }\n                  }, _callee7);\n                }));\n\n                return function (_x5) {\n                  return _ref8.apply(this, arguments);\n                };\n              }())[\"catch\"](function (e) {\n                console.log(e);\n              }));\n\n            case 1:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    return function handlePatchClientRem(_x4) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  var handleDelete = /*#__PURE__*/function () {\n    var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(delList) {\n      return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              return _context10.abrupt(\"return\", UseOrest({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: OREST_ENDPOINT.CLIENTREM + SLASH + OREST_ENDPOINT.LIST + SLASH + OREST_ENDPOINT.DEL,\n                method: REQUEST_METHOD_CONST.DELETE,\n                token: token,\n                params: {\n                  hotelrefno: clientBase === null || clientBase === void 0 ? void 0 : clientBase.hotelrefno\n                },\n                data: delList\n              }).then( /*#__PURE__*/function () {\n                var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(r1) {\n                  var _state$profile, _state$profile2, checkboxGroup, checkboxGroupBase, _radioGroupAllGid, radioGroupAllGidBase, retErr;\n\n                  return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n                    while (1) {\n                      switch (_context9.prev = _context9.next) {\n                        case 0:\n                          if (!(r1.status === 200)) {\n                            _context9.next = 15;\n                            break;\n                          }\n\n                          if (!r1.data.success) {\n                            _context9.next = 13;\n                            break;\n                          }\n\n                          checkboxGroup = state.profile.checkboxGroupAll;\n                          checkboxGroupBase = state.profile.checkboxGroupAllBase;\n                          _radioGroupAllGid = state === null || state === void 0 ? void 0 : (_state$profile = state.profile) === null || _state$profile === void 0 ? void 0 : _state$profile.radioGroupAllGid;\n                          radioGroupAllGidBase = state === null || state === void 0 ? void 0 : (_state$profile2 = state.profile) === null || _state$profile2 === void 0 ? void 0 : _state$profile2.radioGroupAllGidBase;\n                          Object.keys(checkboxGroup).map(function (item) {\n                            if (checkboxGroup[item].canBeDelete && !checkboxGroup[item].canBeInsert) {\n                              delete checkboxGroup[item];\n                              delete checkboxGroupBase[item];\n                            }\n                          });\n                          Object.keys(_radioGroupAllGid).map(function (item) {\n                            if (_radioGroupAllGid[item].canBeDelete && _radioGroupAllGid[item].canBeInsert === 'delete') {\n                              delete _radioGroupAllGid[item];\n                              delete radioGroupAllGidBase[item];\n                            }\n                          });\n                          setToState('guest', ['profile', 'checkboxGroupAllBase'], checkboxGroupBase);\n                          setToState('guest', ['profile', 'checkboxGroupAll'], checkboxGroup);\n                          return _context9.abrupt(\"return\", {\n                            success: true,\n                            errorText: false\n                          });\n\n                        case 13:\n                          retErr = isErrorMsg(r1);\n                          return _context9.abrupt(\"return\", {\n                            success: false,\n                            errorText: retErr.errorMsg\n                          });\n\n                        case 15:\n                        case \"end\":\n                          return _context9.stop();\n                      }\n                    }\n                  }, _callee9);\n                }));\n\n                return function (_x7) {\n                  return _ref10.apply(this, arguments);\n                };\n              }()));\n\n            case 1:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10);\n    }));\n\n    return function handleDelete(_x6) {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n\n  var handleSave = /*#__PURE__*/function () {\n    var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11() {\n      var insList, delList, infoList, patchList, insListGroup, notifyValues, apiResponse;\n      return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              insList = [];\n              delList = [];\n              infoList = [];\n              patchList = [];\n              setIsSaving(true); //radioGroup\n\n              Object.keys(radioGroupAllGid).map(function (item, i) {\n                if (radioGroupAllGid[item].canBeInsert && radioGroupAllGid[item].canBeDelete || radioGroupAllGid[item].canBeDelete && radioGroupAllGid[item].canBeInsert === 'delete') {\n                  delList.push({\n                    gid: radioGroupAllGid[item].canBeDelete\n                  });\n                }\n\n                if (radioGroupAllGid[item].canBeInsert && radioGroupAllGid[item].canBeInsert !== 'delete') {\n                  var _radioGroupAllGid$ite, _radioGroupAllGid$ite2;\n\n                  var remarkInfo = {\n                    remarkgr: t(radioGroupAllGid[item].info.remarkgr, false, GENERAL_SETTINGS.hotelLocalLangGCode),\n                    remark: t(radioGroupAllGid[item].info.remark, false, GENERAL_SETTINGS.hotelLocalLangGCode),\n                    add: true\n                  };\n                  infoList.push(remarkInfo);\n                  var insertData = {\n                    masterid: clientBase === null || clientBase === void 0 ? void 0 : clientBase.mid,\n                    remarkid: radioGroupAllGid[item].canBeInsert,\n                    hotelrefno: clientBase === null || clientBase === void 0 ? void 0 : clientBase.hotelrefno\n                  };\n\n                  if ((_radioGroupAllGid$ite = radioGroupAllGid[item]) !== null && _radioGroupAllGid$ite !== void 0 && _radioGroupAllGid$ite.note && (_radioGroupAllGid$ite2 = radioGroupAllGid[item]) !== null && _radioGroupAllGid$ite2 !== void 0 && _radioGroupAllGid$ite2.hasNote) {\n                    insertData.note = radioGroupAllGid[item].note;\n                  }\n\n                  insList.push(insertData);\n                }\n\n                if (!radioGroupAllGid[item].canBeInsert && radioGroupAllGid[item].canBeDelete) {\n                  if (radioGroupAllGid[item].isUpdateNote) {\n                    patchList.push({\n                      gid: radioGroupAllGid[item].canBeDelete,\n                      note: radioGroupAllGid[item].note\n                    });\n                  }\n                }\n              }); //checkbox Group\n\n              Object.keys(checkboxGroupAll).map(function (item, i) {\n                if (!checkboxGroupAll[item].canBeInsert && checkboxGroupAll[item].canBeDelete) {\n                  var remarkInfo = {\n                    remarkgr: t(checkboxGroupAll[item].info.remarkgr, false, GENERAL_SETTINGS.hotelLocalLangGCode),\n                    remark: t(checkboxGroupAll[item].info.remark, false, GENERAL_SETTINGS.hotelLocalLangGCode),\n                    add: false\n                  };\n                  infoList.push(remarkInfo);\n                  delList.push({\n                    gid: checkboxGroupAll[item].canBeDelete\n                  });\n                } else if (checkboxGroupAll[item].canBeInsert && !checkboxGroupAll[item].canBeDelete) {\n                  var _remarkInfo = {\n                    remarkgr: t(checkboxGroupAll[item].info.remarkgr, false, GENERAL_SETTINGS.hotelLocalLangGCode),\n                    remark: t(checkboxGroupAll[item].info.remark, false, GENERAL_SETTINGS.hotelLocalLangGCode),\n                    add: true\n                  };\n                  infoList.push(_remarkInfo);\n                  var insertData = {\n                    masterid: clientBase === null || clientBase === void 0 ? void 0 : clientBase.mid,\n                    remarkid: checkboxGroupAll[item].canBeInsert,\n                    hotelrefno: clientBase === null || clientBase === void 0 ? void 0 : clientBase.hotelrefno\n                  };\n\n                  if (checkboxGroupAll[item].note) {\n                    insertData.note = checkboxGroupAll[item].note;\n                  }\n\n                  insList.push(insertData);\n                } else {\n                  if (checkboxGroupAll[item].isUpdateNote) {\n                    var _checkboxGroupAll$ite, _checkboxGroupAll$ite2;\n\n                    var patchData = {\n                      gid: (_checkboxGroupAll$ite = checkboxGroupAll[item]) === null || _checkboxGroupAll$ite === void 0 ? void 0 : _checkboxGroupAll$ite.canBeDelete,\n                      note: (_checkboxGroupAll$ite2 = checkboxGroupAll[item]) === null || _checkboxGroupAll$ite2 === void 0 ? void 0 : _checkboxGroupAll$ite2.note\n                    };\n                    patchList = [].concat(_toConsumableArray(patchList), [patchData]);\n                  }\n                }\n              });\n              insListGroup = jsonGroupBy(infoList, 'remarkgr');\n              notifyValues = {\n                roomno: (reservBase === null || reservBase === void 0 ? void 0 : reservBase.roomno) || \"\",\n                clientname: (clientBase === null || clientBase === void 0 ? void 0 : clientBase.clientname) || \"\",\n                changes: JSON.stringify({\n                  changeItems: insListGroup\n                })\n              };\n              apiResponse = {\n                deleteRem: {\n                  success: true,\n                  errorText: false\n                },\n                patchRem: {\n                  success: true,\n                  errorText: false\n                },\n                insertRem: {\n                  success: true,\n                  errorText: false\n                },\n                patchRemNote: {\n                  success: true,\n                  errorText: false\n                }\n              };\n\n              if (!(delList.length > 0)) {\n                _context11.next = 14;\n                break;\n              }\n\n              _context11.next = 13;\n              return handleDelete(delList);\n\n            case 13:\n              apiResponse.deleteRem = _context11.sent;\n\n            case 14:\n              if (!(patchList.length > 0)) {\n                _context11.next = 18;\n                break;\n              }\n\n              _context11.next = 17;\n              return handlePatchClientRem(patchList);\n\n            case 17:\n              apiResponse.patchRem = _context11.sent;\n\n            case 18:\n              if (!(insList.length > 0)) {\n                _context11.next = 22;\n                break;\n              }\n\n              _context11.next = 21;\n              return handleInsert(insList);\n\n            case 21:\n              apiResponse.insertRem = _context11.sent;\n\n            case 22:\n              if (!((clientBase === null || clientBase === void 0 ? void 0 : clientBase.remarknote) !== remarkNote)) {\n                _context11.next = 26;\n                break;\n              }\n\n              _context11.next = 25;\n              return handlePatchRemarkNote();\n\n            case 25:\n              apiResponse.patchRemNote = _context11.sent;\n\n            case 26:\n              _context11.next = 28;\n              return getClientRem();\n\n            case 28:\n              setIsSaving(false);\n\n              if (apiResponse.deleteRem.success && apiResponse.patchRem.success && apiResponse.insertRem.success && apiResponse.patchRemNote.success) {\n                enqueueSnackbar(t('str_processCompletedSuccessfully'), {\n                  variant: 'success'\n                });\n              } else {\n                enqueueSnackbar(apiResponse.deleteRem.errorText || apiResponse.patchRem.errorText || apiResponse.insertRem.errorText || apiResponse.patchRemNote.errorText, {\n                  variant: 'error'\n                });\n              }\n\n              if (delList.length > 0 || insList.length > 0) {\n                sendGuestChangeNotifyMail(reservBase !== null && reservBase !== void 0 && reservBase.gid ? false : true, 'clientrem', 'upd', clientBase.id, reservBase !== null && reservBase !== void 0 && reservBase.gid ? reservBase.gid : clientBase.gid, notifyValues, (reservBase === null || reservBase === void 0 ? void 0 : reservBase.hotelrefno) || GENERAL_SETTINGS.HOTELREFNO);\n              }\n\n            case 31:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11);\n    }));\n\n    return function handleSave() {\n      return _ref11.apply(this, arguments);\n    };\n  }();\n\n  var handleCloseAddRemarkDialog = function handleCloseAddRemarkDialog() {\n    if (remarkGroupDesc.value !== '' || isMultiple || isHorizontal) {\n      setOpenTrackedDialog(true);\n    } else {\n      setOpenAddRemarkGroupDialog(false);\n      handleReset();\n    }\n  };\n\n  var handleOpenToolTip = function handleOpenToolTip() {\n    if (remarkGroupDesc.value.length <= 0 || remarkGroupDesc.isError) {\n      setOpenToolTip(true);\n    }\n  };\n\n  var handleCloseToolTip = function handleCloseToolTip() {\n    setOpenToolTip(false);\n  };\n\n  var handleReset = function handleReset() {\n    setRemarkGroupDesc({\n      value: '',\n      isError: false,\n      errorType: ''\n    });\n    setIsHorizontal(false);\n    setIsMultiple(false);\n  };\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 9\n    }\n  }, __jsx(TabHeader, {\n    title: t('str_preferences'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 17\n    }\n  }, isClient ? __jsx(Tooltip, {\n    title: t('str_edit'),\n    interactive: true,\n    className: classes.tooltip,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 29\n    }\n  }, __jsx(Button, {\n    onClick: handleButtonEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 33\n    }\n  }, __jsx(EditIcon, {\n    className: classes.editIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 37\n    }\n  }))) : null, !isClient ? __jsx(Button, {\n    startIcon: __jsx(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 44\n      }\n    }),\n    variant: 'contained',\n    color: \"primary\",\n    onClick: function onClick() {\n      handleRemarkGroupDef();\n      setOpenAddRemarkGroupDialog(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 29\n    }\n  }, t('str_newGroup')) : null)), __jsx(\"div\", {\n    style: {\n      paddingTop: '12px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 13\n    }\n  }), __jsx(Grid, {\n    container: true,\n    justify: 'center',\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 13\n    }\n  }, clientBase ? isInitialized ? remarkGroups && remarkGroups.length > 0 ? remarkGroups.map(function (remarkGroup, index) {\n    return __jsx(RemarkGroup, {\n      key: index,\n      remarkGroup: remarkGroup,\n      index: index,\n      isDisabled: isDisabled,\n      isSuperUser: isSuperUser,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 37\n      }\n    });\n  }) : __jsx(Grid, {\n    item: true,\n    xs: 12,\n    className: classesTabPanel.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 29\n    }\n  }, __jsx(Typography, {\n    component: \"h3\",\n    className: classesTabPanel.nothingToShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 33\n    }\n  }, t('str_noPreferencesToShow'))) : __jsx(Grid, {\n    item: true,\n    xs: 12,\n    className: classesTabPanel.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 25\n    }\n  }, __jsx(LoadingSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 597,\n      columnNumber: 29\n    }\n  })) : __jsx(Typography, {\n    component: \"h3\",\n    style: {\n      marginTop: 15,\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 601,\n      columnNumber: 21\n    }\n  }, t('You are not a client.')), !isClient ? __jsx(Grid, {\n    item: true,\n    xs: 12,\n    className: classesTabPanel.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 25\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 29\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 33\n    }\n  }, __jsx(Typography, {\n    style: {\n      fontSize: \"22px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 37\n    }\n  }, t(\"str_clientRemarks\"))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 614,\n      columnNumber: 33\n    }\n  }, __jsx(TextField, {\n    value: remarkNote ? remarkNote : \"\",\n    disabled: isDisabled,\n    multiline: true,\n    fullWidth: true,\n    rows: 4,\n    rowsMax: 4,\n    variant: \"outlined\",\n    onChange: function onChange(e) {\n      return setRemarkNote(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 615,\n      columnNumber: 37\n    }\n  })))) : null, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    style: {\n      textAlign: 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 630,\n      columnNumber: 17\n    }\n  }, (clientBase === null || clientBase === void 0 ? void 0 : clientBase.remarknote) === remarkNote && JSON.stringify(state.profile.checkboxGroupAllBase) === JSON.stringify(state.profile.checkboxGroupAll) && JSON.stringify(state.profile.radioGroupAllGid) === JSON.stringify(state.profile.radioGroupAllGidBase) ? __jsx(CustomToolTip, {\n    title: __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 635,\n        columnNumber: 37\n      }\n    }, __jsx(Typography, {\n      style: {\n        fontWeight: '600',\n        fontSize: 'inherit'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 41\n      }\n    }, t('str_noChangesYet'))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 29\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 642,\n      columnNumber: 35\n    }\n  }, __jsx(Button, {\n    disabled: true,\n    size: 'large',\n    color: 'primary',\n    variant: 'contained',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 40\n    }\n  }, t('str_saveChanges')))) : __jsx(Button, {\n    disabled: isSaving || isDisabled || (clientBase === null || clientBase === void 0 ? void 0 : clientBase.remarknote) === remarkNote && JSON.stringify(state.profile.checkboxGroupAllBase) === JSON.stringify(state.profile.checkboxGroupAll) && JSON.stringify(state.profile.radioGroupAllGid) === JSON.stringify(state.profile.radioGroupAllGidBase),\n    startIcon: isSaving && __jsx(LoadingSpinner, {\n      size: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 656,\n        columnNumber: 56\n      }\n    }),\n    size: 'large',\n    color: 'primary',\n    variant: 'contained',\n    onClick: function onClick() {\n      return handleSave();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 654,\n      columnNumber: 29\n    }\n  }, t('str_saveChanges')))), __jsx(Dialog, {\n    open: openAddRemarkGroupDialog,\n    maxWidth: \"sm\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 668,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    style: {\n      padding: \"24px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 673,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 674,\n      columnNumber: 21\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 675,\n      columnNumber: 25\n    }\n  }, __jsx(Typography, {\n    style: {\n      fontSize: '24px',\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 676,\n      columnNumber: 29\n    }\n  }, t('str_newGroup'))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 678,\n      columnNumber: 25\n    }\n  }, __jsx(TextField, {\n    error: remarkGroupDesc.isError,\n    id: \"remark-group-desc\",\n    name: \"remark-group-desc\",\n    variant: \"outlined\",\n    fullWidth: true,\n    label: t(\"str_description\"),\n    required: true,\n    FormHelperTextProps: {\n      style: {\n        opacity: remarkGroupDesc.isError ? '1' : '0'\n      }\n    },\n    helperText: remarkGroupDesc.errorType === 'lengthError' ? 'Length must be between 2 and 50' : remarkGroupDesc.errorType === 'required' ? t('str_mandatory') : remarkGroupDesc.errorType === 'invalidCode' ? t('str_thereIsAlreadyExistUniqueValue') + remarkGroupDesc.value : 'null',\n    onChange: function onChange(e) {\n      setRemarkGroupDesc(_objectSpread(_objectSpread({}, remarkGroupDesc), {}, {\n        value: e.target.value,\n        isError: e.target.value === '' ? remarkGroupDesc.isError : false\n      }));\n    },\n    onBlur: function onBlur() {\n      setRemarkGroupDesc(_objectSpread(_objectSpread({}, remarkGroupDesc), {}, {\n        value: remarkGroupDesc.value,\n        isError: remarkGroupDesc.value === '' ? true : remarkGroupDesc.isError,\n        errorType: remarkGroupDesc.value === '' ? 'required' : remarkGroupDesc.errorType\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 679,\n      columnNumber: 29\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 708,\n      columnNumber: 25\n    }\n  }, __jsx(FormControlLabel, {\n    checked: isMultiple,\n    onChange: function onChange(e) {\n      return setIsMultiple(e.target.checked);\n    },\n    color: 'primary',\n    control: __jsx(Checkbox, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 713,\n        columnNumber: 43\n      }\n    }),\n    label: t('str_multiple'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 709,\n      columnNumber: 29\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 717,\n      columnNumber: 25\n    }\n  }, __jsx(FormControlLabel, {\n    checked: isHorizontal,\n    onChange: function onChange(e) {\n      return setIsHorizontal(e.target.checked);\n    },\n    color: 'primary',\n    control: __jsx(Checkbox, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 722,\n        columnNumber: 43\n      }\n    }),\n    label: t('str_horizontal'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 718,\n      columnNumber: 29\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 726,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    style: {\n      textAlign: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 727,\n      columnNumber: 29\n    }\n  }, __jsx(Button, {\n    disabled: isSavingRemarkGroup,\n    color: 'primary',\n    variant: 'outlined',\n    startIcon: __jsx(ClearIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 732,\n        columnNumber: 48\n      }\n    }),\n    onClick: handleCloseAddRemarkDialog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 728,\n      columnNumber: 33\n    }\n  }, t(\"str_cancel\")), __jsx(CustomToolTip, {\n    open: openToolTip,\n    onOpen: handleOpenToolTip,\n    onClose: handleCloseToolTip,\n    title: __jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 742,\n        columnNumber: 41\n      }\n    }, remarkGroupDesc.value.length <= 0 || remarkGroupDesc.isError ? __jsx(Typography, {\n      style: {\n        fontSize: \"inherit\",\n        fontWeight: \"bold\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 745,\n        columnNumber: 53\n      }\n    }, t(\"str_invalidFields\"), \":\") : null, remarkGroupDesc.value.length <= 0 || remarkGroupDesc.isError ? __jsx(Typography, {\n      style: {\n        fontSize: \"inherit\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 755,\n        columnNumber: 53\n      }\n    }, t(\"str_description\")) : null),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 737,\n      columnNumber: 33\n    }\n  }, __jsx(\"div\", {\n    style: {\n      display: \"inline\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 761,\n      columnNumber: 37\n    }\n  }, __jsx(Button, {\n    style: {\n      marginLeft: '8px'\n    },\n    startIcon: isSavingRemarkGroup ? __jsx(LoadingSpinner, {\n      size: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 764,\n        columnNumber: 78\n      }\n    }) : __jsx(CheckIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 764,\n        columnNumber: 108\n      }\n    }),\n    disabled: isSavingRemarkGroup || remarkGroupDesc.value.length <= 0 || remarkGroupDesc.isError,\n    color: \"primary\",\n    variant: \"contained\",\n    onClick: function onClick() {\n      return handleAddRemarkGroup();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 762,\n      columnNumber: 41\n    }\n  }, t(\"str_save\"))))))))), __jsx(TrackedChangesDialog, {\n    open: openTrackedDialog,\n    onPressNo: function onPressNo(e) {\n      return setOpenTrackedDialog(e);\n    },\n    onPressYes: function onPressYes(e) {\n      setOpenTrackedDialog(e);\n      setOpenAddRemarkGroupDialog(false);\n      setTimeout(function () {\n        handleReset();\n      }, 50);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 779,\n      columnNumber: 13\n    }\n  }));\n}\n\n_s(Preferences, \"UeYvQ1/lp8isDenG7hXGPMNCHyI=\", false, function () {\n  return [useStyles, useTranslation, useStylesTabPanel, useNotifications, useOrestAction, useSelector, useSelector, useSelector, useSelector, useSnackbar, useSelector, useSelector];\n});\n\n_c = Preferences;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    state: state.formReducer.guest\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setToState: function setToState(stateType, stateName, value) {\n      return dispatch(_setToState(stateType, stateName, value));\n    },\n    updateState: function updateState(stateType, stateName, value) {\n      return dispatch(_updateState(stateType, stateName, value));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Preferences);\n\nvar _c;\n\n$RefreshReg$(_c, \"Preferences\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/guest/account/Preferences/index.js"],"names":["React","useContext","useEffect","useState","connect","useSelector","styles","stylesTabPanel","NextSeo","Typography","TextField","Menu","Dialog","MenuItem","InputAdornment","Grid","Tooltip","EditIcon","Button","IconButton","Checkbox","FormControlLabel","Fab","AddIcon","UseOrest","ViewList","Patch","List","Insert","SaveIcon","CheckIcon","ClearIcon","DEFAULT_OREST_TOKEN","isErrorMsg","isObjectEqual","jsonGroupBy","OREST_ENDPOINT","OREST_TOOLS_USER_HASRIGHT","REQUEST_METHOD_CONST","PopupState","bindTrigger","bindMenu","useNotifications","WebCmsGlobal","LoadingSpinner","RemarkGroup","makeStyles","TabHeader","TITLE_LOYALTY","useTranslation","MAX_MINUTE_VALUE","SLASH","TRUE","useSnackbar","CustomToolTip","useOrestAction","setToState","updateState","sendGuestChangeNotifyMail","TrackedChangesDialog","useStyles","useStylesTabPanel","Preferences","props","classes","t","classesTabPanel","GENERAL_SETTINGS","state","showError","setOrestState","token","orest","currentUser","auth","access_token","clientBase","client","hotelRefNo","hotelinfo","currentHotelRefNo","loginfo","reservBase","clientReservation","isClient","roletype","enqueueSnackbar","radioGroupAllGid","formReducer","guest","profile","checkboxGroupAll","isLoading","setIsLoading","isInitialized","setIsInitialized","remarkGroups","setRemarkGroups","isDisabled","setIsDisabled","remarknote","remarkNote","setRemarkNote","isSuperUser","setIsSuperUser","isLoad","setIsLoad","isSaving","setIsSaving","openAddRemarkGroupDialog","setOpenAddRemarkGroupDialog","openTrackedDialog","setOpenTrackedDialog","openToolTip","setOpenToolTip","isSavingRemarkGroup","setIsSavingRemarkGroup","remarkGroupData","setRemarkGroupData","isHorizontal","setIsHorizontal","isMultiple","setIsMultiple","value","isError","errorType","remarkGroupDesc","setRemarkGroupDesc","apiUrl","OREST_URL","endpoint","params","checksuper","empid","id","moduleid","then","res","status","data","canl","cana","canu","canx","cand","cans","length","timer","setTimeout","REMARKGR","query","toUpperCase","hotelrefno","HOTELREFNO","count","clearTimeout","active","undefined","getRemarkGroup","getClientRem","allhotels","r","retErr","errorMsg","CLIENTREM","mid","limit","variant","handleButtonEdit","handlePatchRemarkNote","CLIENT","gid","success","errorText","handleRemarkGroupDef","DEF","error","handleAddRemarkGroup","code","substring","description","multiselect","ishoriz","handleReset","handleInsert","list","LIST","INS","method","POST","handlePatchClientRem","PATCH","e","console","log","handleDelete","delList","DEL","DELETE","r1","checkboxGroup","checkboxGroupBase","checkboxGroupAllBase","radioGroupAllGidBase","Object","keys","map","item","canBeDelete","canBeInsert","handleSave","insList","infoList","patchList","i","push","remarkInfo","remarkgr","info","hotelLocalLangGCode","remark","add","insertData","masterid","remarkid","note","hasNote","isUpdateNote","patchData","insListGroup","notifyValues","roomno","clientname","changes","JSON","stringify","changeItems","apiResponse","deleteRem","patchRem","insertRem","patchRemNote","handleCloseAddRemarkDialog","handleOpenToolTip","handleCloseToolTip","tooltip","editIcon","paddingTop","remarkGroup","index","gridItem","nothingToShow","marginTop","textAlign","fontSize","target","fontWeight","padding","style","opacity","checked","display","marginLeft","mapStateToProps","mapDispatchToProps","dispatch","stateType","stateName"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport {connect, useSelector } from 'react-redux'\nimport styles from './style/Preferences.style'\nimport stylesTabPanel from '../style/TabPanel.style'\nimport { NextSeo } from 'next-seo'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\nimport Menu from '@material-ui/core/Menu'\nimport Dialog from '@material-ui/core/Dialog'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport Grid from '@material-ui/core/Grid'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport EditIcon from '@material-ui/icons/Edit'\nimport { Button, IconButton, Checkbox, FormControlLabel } from '@material-ui/core'\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport { UseOrest, ViewList, Patch, List, Insert } from '@webcms/orest'\nimport SaveIcon from '@material-ui/icons/Save';\nimport CheckIcon from '@material-ui/icons/Check';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport {\n    DEFAULT_OREST_TOKEN,\n    isErrorMsg, isObjectEqual, jsonGroupBy,\n    OREST_ENDPOINT, OREST_TOOLS_USER_HASRIGHT, REQUEST_METHOD_CONST\n} from '../../../../model/orest/constants'\nimport PopupState, { bindTrigger, bindMenu } from 'material-ui-popup-state'\nimport useNotifications from '../../../../model/notification/useNotifications'\nimport WebCmsGlobal from '../../../webcms-global'\nimport LoadingSpinner from '../../../LoadingSpinner'\nimport RemarkGroup from './RemarkGroup'\nimport { makeStyles } from '@material-ui/core/styles'\nimport TabHeader from '../../../layout/components/TabHeader'\nimport { TITLE_LOYALTY } from '../../../../assets/const'\nimport useTranslation from 'lib/translations/hooks/useTranslation'\nimport {MAX_MINUTE_VALUE, SLASH, TRUE} from '../../../../model/globals'\nimport { useSnackbar } from 'notistack';\nimport {CustomToolTip} from \"../../../user-portal/components/CustomToolTip/CustomToolTip\";\nimport {useOrestAction} from \"../../../../model/orest\";\nimport {setToState, updateState} from \"../../../../state/actions\";\nimport {sendGuestChangeNotifyMail} from \"../Base/helper\";\nimport TrackedChangesDialog from \"../../../TrackedChangesDialog\";\n\nconst useStyles = makeStyles(styles)\nconst useStylesTabPanel = makeStyles(stylesTabPanel)\n\nfunction Preferences(props) {\n    const classes = useStyles()\n    const { t } = useTranslation()\n    const classesTabPanel = useStylesTabPanel()\n    const { GENERAL_SETTINGS } = useContext(WebCmsGlobal)\n\n    const {state, setToState } = props;\n\n    //redux\n    const { showError } = useNotifications()\n    const { setOrestState } = useOrestAction()\n    const token = useSelector((state) => state?.orest?.currentUser?.auth?.access_token || false)\n    const clientBase = useSelector((state) => state?.orest?.state?.client || false)\n    const hotelRefNo = useSelector(state => state?.hotelinfo?.currentHotelRefNo || null);\n    const loginfo = useSelector((state) => state.orest.currentUser && state.orest.currentUser.loginfo)\n    const reservBase = state.clientReservation || false\n    const isClient = loginfo.roletype === '6500310'\n    const { enqueueSnackbar } = useSnackbar()\n    const radioGroupAllGid = useSelector((state) => state?.formReducer?.guest?.profile?.radioGroupAllGid || false)\n    const checkboxGroupAll = useSelector((state) => state?.formReducer?.guest?.profile?.checkboxGroupAll || false)\n\n    //state\n    const [isLoading, setIsLoading] = useState(false)\n    const [isInitialized, setIsInitialized] = useState(false)\n    const [remarkGroups, setRemarkGroups] = useState(null)\n    const [isDisabled, setIsDisabled] = useState(isClient)\n    const [remarkNote, setRemarkNote] = useState(clientBase ? clientBase.remarknote : \"\");\n    const [isSuperUser, setIsSuperUser] = useState(false);\n    const [isLoad, setIsLoad] = useState(true);\n    const [isSaving, setIsSaving] = useState(false);\n    const [openAddRemarkGroupDialog, setOpenAddRemarkGroupDialog] = useState(false);\n    const [openTrackedDialog, setOpenTrackedDialog] = useState(false);\n    const [openToolTip, setOpenToolTip] = useState(false);\n\n    const [isSavingRemarkGroup, setIsSavingRemarkGroup] = useState(false);\n    const [remarkGroupData, setRemarkGroupData] = useState(null);\n    const [isHorizontal, setIsHorizontal] = useState(false);\n    const [isMultiple, setIsMultiple] = useState(false);\n    const [remarkGroupDesc, setRemarkGroupDesc] = useState({\n        value: '',\n        isError: false,\n        errorType: ''\n    });\n\n    useEffect(() => {\n        UseOrest({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_TOOLS_USER_HASRIGHT,\n            token: token,\n            params: {\n                checksuper: true,\n                empid: loginfo.id,\n                moduleid: 308236\n            }\n        }).then(res => {\n            if(res.status === 200) {\n                const data = res.data.data;\n                if(data.canl && data.cana && data.canu && data.canx && data.cand && data.cans && data.res) {\n                    setIsSuperUser(true);\n                }\n            } else {\n                setIsSuperUser(false);\n            }\n        })\n    }, [])\n\n    useEffect(() => {\n        if(remarkGroupDesc.value.length > 0 && remarkGroupDesc.value.length < 2) {\n            setRemarkGroupDesc({\n                ...remarkGroupDesc,\n                value: remarkGroupDesc.value,\n                isError: true,\n                errorType: 'lengthError'\n            })\n        } else {\n            setRemarkGroupDesc({\n                ...remarkGroupDesc,\n                value: remarkGroupDesc.value,\n                isError: false,\n                errorType: ''\n            })\n        }\n\n        if(remarkGroupDesc.value.length > 0){\n            const timer = setTimeout(() => {\n                List({\n                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                    endpoint: OREST_ENDPOINT.REMARKGR,\n                    token,\n                    params: {\n                        query: `code::${remarkGroupDesc.value?.toUpperCase()}`,\n                        hotelrefno: hotelRefNo || GENERAL_SETTINGS.HOTELREFNO\n                    }\n                }).then(res => {\n                    if(res.status === 200) {\n                        if(res.data.count > 0) {\n                            setRemarkGroupDesc({\n                                ...remarkGroupDesc,\n                                value: remarkGroupDesc.value,\n                                isError: true,\n                                errorType: 'invalidCode'\n                            })\n                        }\n                    }\n                })\n            }, 700)\n            return () =>  clearTimeout(timer)\n        }\n\n    },[remarkGroupDesc.value])\n\n    useEffect(() => {\n        let active = true\n        if (active) {\n            if (isLoading) {\n                return undefined\n            }\n            if (clientBase) {\n                getRemarkGroup(active)\n            } else {\n                setIsInitialized(true)\n            }\n        }\n\n        return () => {\n            active = false\n        }\n    }, [])\n\n    const getRemarkGroup = async (active = false) => {\n        setIsLoading(true);\n        await getClientRem()\n        return ViewList({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.REMARKGR,\n            token: token,\n            params: {\n                query: 'isactive:true',\n                allhotels: true\n            }\n        }).then((r) => {\n            if (active) {\n                if (r.status === 200) {\n                    setRemarkGroups(r.data.data)\n                    setOrestState(['remarkGroups'], r.data.data)\n                    setIsInitialized(true)\n                    setIsLoading(false)\n                } else {\n                    const retErr = isErrorMsg(r)\n                    showError(retErr.errorMsg)\n                    setIsInitialized(true)\n                    setIsLoading(false)\n                }\n            }\n        })\n\n    }\n\n    const getClientRem = async () => {\n       return  ViewList({\n           apiUrl: GENERAL_SETTINGS.OREST_URL,\n           endpoint: OREST_ENDPOINT.CLIENTREM,\n           token,\n           params: {\n               query: `masterid:${clientBase.mid}`,\n               allhotels: true,\n               limit: 100\n           }\n       }).then(res => {\n           if(res.status === 200) {\n               setOrestState(['selectedRemarkList'], res.data.data)\n               return true\n           } else {\n               const retErr = isErrorMsg(res)\n               enqueueSnackbar(t(retErr.errorMsg), {variant: 'error'})\n               return false\n           }\n       })\n    }\n\n\n    function handleButtonEdit() {\n        setIsDisabled(!isDisabled)\n    }\n\n    const handlePatchRemarkNote = async () => {\n        return Patch({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.CLIENT,\n            gid: clientBase.gid,\n            token: token,\n            params: {\n                hotelrefno: clientBase.hotelrefno || hotelRefNo || GENERAL_SETTINGS.HOTELREFNO\n            },\n            data: {\n                remarknote: remarkNote\n            }\n        }).then( async res => {\n            if(res.status === 200) {\n                setOrestState(['client'], res.data.data);\n                return {success: true, errorText: false}\n            } else {\n                const retErr = isErrorMsg(res)\n                return {success: false, errorText: retErr.errorMsg}\n            }\n        })\n    }\n\n    const handleRemarkGroupDef = () => {\n        UseOrest({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.REMARKGR + SLASH + OREST_ENDPOINT.DEF,\n            token,\n            params: {\n                hotelrefno: hotelRefNo || GENERAL_SETTINGS.HOTELREFNO\n            }\n        }).then(res => {\n            if(res.status === 200) {\n                setRemarkGroupData(res?.data?.data)\n            } else {\n                const error = isErrorMsg(res)\n                enqueueSnackbar(t(error.errorMsg), {variant: 'error'})\n            }\n        })\n    }\n\n    const handleAddRemarkGroup = () => {\n        setIsSavingRemarkGroup(true);\n        const data = remarkGroupData;\n        data.code = remarkGroupDesc.value?.length > 50 ? remarkGroupDesc.value?.toUpperCase().substring(0, 50) : remarkGroupDesc.value?.toUpperCase();\n        data.description = remarkGroupDesc.value;\n        data.multiselect = isMultiple;\n        data.ishoriz = isHorizontal;\n        Insert({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.REMARKGR,\n            token,\n            params: {\n                hotelrefno: hotelRefNo || GENERAL_SETTINGS.HOTELREFNO\n            },\n            data: data\n        }).then(res => {\n            setIsSavingRemarkGroup(false);\n            if(res.status === 200){\n                enqueueSnackbar(t('str_processCompletedSuccessfully'), {variant: 'success'})\n                setOpenAddRemarkGroupDialog(false);\n                setIsInitialized(false)\n                getRemarkGroup(true);\n                handleReset()\n            } else {\n                const error = isErrorMsg(res)\n                enqueueSnackbar(t(error.errorMsg), {variant: 'error'})\n            }\n        })\n    }\n\n    const handleInsert = async (list) => {\n       return  UseOrest({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.CLIENTREM + SLASH + OREST_ENDPOINT.LIST + SLASH + OREST_ENDPOINT.INS,\n            method: REQUEST_METHOD_CONST.POST,\n            token,\n            params: {\n                hotelrefno: clientBase?.hotelrefno\n            },\n            data: list\n        }).then( async (res) => {\n            if (res.status === 200) {\n                if(res.data.data) {\n                    return {success: true, errorText: false}\n                } else {\n                    const retErr = isErrorMsg(res)\n                    return {success: false, errorText: retErr.errorMsg}\n                }\n            }\n        })\n    }\n\n    const handlePatchClientRem = async (list) => {\n        return UseOrest({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.CLIENTREM + SLASH + OREST_ENDPOINT.LIST + SLASH + OREST_ENDPOINT.PATCH,\n            method: REQUEST_METHOD_CONST.PATCH,\n            token,\n            params: {\n                hotelrefno: clientBase?.hotelrefno\n            },\n            data: list\n        }).then( async (res) => {\n            if (res.status === 200) {\n                if(res.data.data) {\n                    return {success: true, errorText: false}\n                } else {\n                    const retErr = isErrorMsg(res)\n                    return {success: false, errorText: retErr.errorMsg}\n                }\n            }\n        }).catch(e => {\n            console.log(e)\n        })\n    }\n\n    const handleDelete = async (delList) => {\n        return UseOrest({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.CLIENTREM + SLASH + OREST_ENDPOINT.LIST + SLASH + OREST_ENDPOINT.DEL,\n            method: REQUEST_METHOD_CONST.DELETE,\n            token,\n            params: {\n                hotelrefno: clientBase?.hotelrefno\n            },\n            data: delList\n        }).then(async (r1) => {\n            if (r1.status === 200) {\n                if(r1.data.success) {\n                    const checkboxGroup = state.profile.checkboxGroupAll;\n                    const checkboxGroupBase = state.profile.checkboxGroupAllBase;\n                    const radioGroupAllGid = state?.profile?.radioGroupAllGid;\n                    const radioGroupAllGidBase = state?.profile?.radioGroupAllGidBase;\n                    Object.keys(checkboxGroup).map((item) => {\n                        if(checkboxGroup[item].canBeDelete && !checkboxGroup[item].canBeInsert) {\n                            delete checkboxGroup[item]\n                            delete checkboxGroupBase[item]\n                        }\n                    })\n                    Object.keys(radioGroupAllGid).map((item) => {\n                        if(radioGroupAllGid[item].canBeDelete && radioGroupAllGid[item].canBeInsert === 'delete') {\n                            delete radioGroupAllGid[item]\n                            delete radioGroupAllGidBase[item]\n                        }\n                    })\n                    setToState('guest', ['profile', 'checkboxGroupAllBase'], checkboxGroupBase)\n                    setToState('guest', ['profile', 'checkboxGroupAll'], checkboxGroup)\n                    return {success: true, errorText: false}\n                } else {\n                    const retErr = isErrorMsg(r1)\n                    return {success: false, errorText: retErr.errorMsg}\n                }\n            }\n        })\n    }\n\n\n    const handleSave = async () => {\n        let insList = [];\n        let delList = [];\n        let infoList = [];\n        let patchList = [];\n        setIsSaving(true);\n\n        //radioGroup\n        Object.keys(radioGroupAllGid).map((item, i) => {\n            if(radioGroupAllGid[item].canBeInsert && radioGroupAllGid[item].canBeDelete || radioGroupAllGid[item].canBeDelete && radioGroupAllGid[item].canBeInsert === 'delete') {\n                delList.push({\n                    gid: radioGroupAllGid[item].canBeDelete\n                })\n            }\n            if(radioGroupAllGid[item].canBeInsert && radioGroupAllGid[item].canBeInsert !== 'delete' ) {\n                const remarkInfo = {\n                    remarkgr: t(radioGroupAllGid[item].info.remarkgr, false, GENERAL_SETTINGS.hotelLocalLangGCode),\n                    remark:  t(radioGroupAllGid[item].info.remark, false, GENERAL_SETTINGS.hotelLocalLangGCode),\n                    add: true\n                }\n                infoList.push(remarkInfo)\n                const insertData = {\n                    masterid: clientBase?.mid,\n                    remarkid: radioGroupAllGid[item].canBeInsert,\n                    hotelrefno: clientBase?.hotelrefno\n                }\n                if(radioGroupAllGid[item]?.note && radioGroupAllGid[item]?.hasNote) {\n                    insertData.note = radioGroupAllGid[item].note\n                }\n                insList.push(insertData)\n            }\n            if(!radioGroupAllGid[item].canBeInsert && radioGroupAllGid[item].canBeDelete) {\n                if(radioGroupAllGid[item].isUpdateNote) {\n                    patchList.push({\n                        gid: radioGroupAllGid[item].canBeDelete,\n                        note: radioGroupAllGid[item].note\n                    })\n                }\n            }\n        })\n\n        //checkbox Group\n        Object.keys(checkboxGroupAll).map((item,i) => {\n            if(!checkboxGroupAll[item].canBeInsert && checkboxGroupAll[item].canBeDelete) {\n                const remarkInfo = {\n                    remarkgr: t(checkboxGroupAll[item].info.remarkgr, false, GENERAL_SETTINGS.hotelLocalLangGCode),\n                    remark: t(checkboxGroupAll[item].info.remark, false, GENERAL_SETTINGS.hotelLocalLangGCode),\n                    add: false\n                }\n                infoList.push(remarkInfo)\n                delList.push({\n                    gid: checkboxGroupAll[item].canBeDelete\n                })\n            } else if(checkboxGroupAll[item].canBeInsert && !checkboxGroupAll[item].canBeDelete) {\n                const remarkInfo = {\n                    remarkgr: t(checkboxGroupAll[item].info.remarkgr, false, GENERAL_SETTINGS.hotelLocalLangGCode),\n                    remark: t(checkboxGroupAll[item].info.remark, false, GENERAL_SETTINGS.hotelLocalLangGCode),\n                    add: true\n                }\n                infoList.push(remarkInfo)\n                const insertData = {\n                    masterid: clientBase?.mid,\n                    remarkid: checkboxGroupAll[item].canBeInsert,\n                    hotelrefno: clientBase?.hotelrefno\n                }\n                if(checkboxGroupAll[item].note) {\n                    insertData.note = checkboxGroupAll[item].note\n                }\n                insList.push(insertData)\n            } else {\n                if(checkboxGroupAll[item].isUpdateNote) {\n                    const patchData = {\n                        gid: checkboxGroupAll[item]?.canBeDelete,\n                        note: checkboxGroupAll[item]?.note\n                    }\n                    patchList = [...patchList, patchData]\n                }\n            }\n        })\n\n        const insListGroup = jsonGroupBy(infoList, 'remarkgr')\n        const notifyValues = {\n            roomno: reservBase?.roomno || \"\",\n            clientname: clientBase?.clientname || \"\",\n            changes: JSON.stringify({\n                changeItems: insListGroup\n            })\n        }\n\n        const apiResponse = {\n            deleteRem: {success: true, errorText: false},\n            patchRem: {success: true, errorText: false},\n            insertRem: {success: true, errorText: false},\n            patchRemNote: {success: true, errorText: false}\n        }\n\n        if(delList.length > 0) apiResponse.deleteRem = await handleDelete(delList)\n        if(patchList.length > 0) apiResponse.patchRem = await handlePatchClientRem(patchList)\n        if(insList.length > 0) apiResponse.insertRem = await handleInsert(insList)\n        if(clientBase?.remarknote !== remarkNote) apiResponse.patchRemNote = await handlePatchRemarkNote()\n        await getClientRem()\n        setIsSaving(false)\n\n        if(apiResponse.deleteRem.success && apiResponse.patchRem.success && apiResponse.insertRem.success && apiResponse.patchRemNote.success) {\n            enqueueSnackbar(t('str_processCompletedSuccessfully'), {variant: 'success'})\n        } else {\n            enqueueSnackbar(\n                apiResponse.deleteRem.errorText ||\n                apiResponse.patchRem.errorText ||\n                apiResponse.insertRem.errorText ||\n                apiResponse.patchRemNote.errorText,\n                {variant: 'error'}\n            )\n        }\n\n        if(delList.length > 0 || insList.length > 0){\n            sendGuestChangeNotifyMail(reservBase?.gid ? false : true,'clientrem','upd',clientBase.id,reservBase?.gid ? reservBase.gid : clientBase.gid, notifyValues, reservBase?.hotelrefno || GENERAL_SETTINGS.HOTELREFNO)\n        }\n     }\n\n    const handleCloseAddRemarkDialog = () => {\n        if(remarkGroupDesc.value !== '' || isMultiple || isHorizontal) {\n            setOpenTrackedDialog(true);\n        } else {\n            setOpenAddRemarkGroupDialog(false);\n            handleReset();\n        }\n\n    }\n\n    const handleOpenToolTip = () => {\n        if(remarkGroupDesc.value.length <= 0 || remarkGroupDesc.isError) {\n            setOpenToolTip(true)\n        }\n\n    }\n\n    const handleCloseToolTip = () => {\n        setOpenToolTip(false);\n    }\n\n    const handleReset = () => {\n        setRemarkGroupDesc({\n            value: '',\n            isError: false,\n            errorType: ''\n        })\n        setIsHorizontal(false);\n        setIsMultiple(false);\n\n    }\n\n    return (\n        <React.Fragment>\n            <TabHeader title={t('str_preferences')}>\n                <Grid item>\n                    {\n                        isClient ? (\n                            <Tooltip title={t('str_edit')} interactive className={classes.tooltip}>\n                                <Button onClick={handleButtonEdit}>\n                                    <EditIcon className={classes.editIcon} />\n                                </Button>\n                            </Tooltip>\n                        ) : null\n                    }\n                    {\n                        !isClient ? (\n                            <Button\n                                startIcon={<AddIcon />}\n                                variant={'contained'}\n                                color=\"primary\"\n                                onClick={() => {\n                                    handleRemarkGroupDef()\n                                    setOpenAddRemarkGroupDialog(true)\n                                }}\n                            >\n                                {t('str_newGroup')}\n                            </Button>\n                        ) : null\n                    }\n                </Grid>\n            </TabHeader>\n            <div style={{paddingTop: '12px'}}/>\n            <Grid container justify={'center'} spacing={3}>\n                {clientBase ? (\n                    isInitialized ? (\n                        remarkGroups && remarkGroups.length > 0 ? (\n                            remarkGroups.map((remarkGroup, index) => {\n                                return (\n                                    <RemarkGroup\n                                        key={index}\n                                        remarkGroup={remarkGroup}\n                                        index={index}\n                                        isDisabled={isDisabled}\n                                        isSuperUser={isSuperUser}\n                                    />\n                                )\n                            })\n                        ) : (\n                            <Grid item xs={12} className={classesTabPanel.gridItem}>\n                                <Typography component=\"h3\" className={classesTabPanel.nothingToShow}>\n                                    {t('str_noPreferencesToShow')}\n                                </Typography>\n                            </Grid>\n                        )\n                    ) : (\n                        <Grid item xs={12} className={classesTabPanel.gridItem}>\n                            <LoadingSpinner />\n                        </Grid>\n                    )\n                ) : (\n                    <Typography component=\"h3\" style={{ marginTop: 15, textAlign: 'center' }}>\n                        {t('You are not a client.')}\n                    </Typography>\n                )}\n                {\n                    !isClient ? (\n                        <Grid item xs={12} className={classesTabPanel.gridItem}>\n                            <Grid container spacing={3}>\n                                <Grid item xs={12}>\n                                    <Typography style={{fontSize: \"22px\"}}>\n                                        {t(\"str_clientRemarks\")}\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        value={remarkNote ? remarkNote : \"\"}\n                                        disabled={isDisabled}\n                                        multiline\n                                        fullWidth\n                                        rows={4}\n                                        rowsMax={4}\n                                        variant={\"outlined\"}\n                                        onChange={(e) => setRemarkNote(e.target.value)}\n                                    />\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    ) : null\n                }\n                <Grid item xs={12} style={{textAlign: 'right'}}>\n                    {\n                        clientBase?.remarknote === remarkNote && JSON.stringify(state.profile.checkboxGroupAllBase) === JSON.stringify(state.profile.checkboxGroupAll) && JSON.stringify(state.profile.radioGroupAllGid) === JSON.stringify(state.profile.radioGroupAllGidBase) ?  (\n                            <CustomToolTip\n                                title={\n                                    <div>\n                                        <Typography style={{fontWeight: '600', fontSize: 'inherit'}}>\n                                            {t('str_noChangesYet')}\n                                        </Typography>\n                                    </div>\n                                }\n                            >\n                                  <span>\n                                       <Button\n                                           disabled\n                                           size={'large'}\n                                           color={'primary'}\n                                           variant={'contained'}\n                                       >\n                                           {t('str_saveChanges')}\n                                       </Button>\n                                  </span>\n                            </CustomToolTip>\n                        ) : (\n                            <Button\n                                disabled={isSaving || isDisabled || clientBase?.remarknote === remarkNote && JSON.stringify(state.profile.checkboxGroupAllBase) === JSON.stringify(state.profile.checkboxGroupAll) && JSON.stringify(state.profile.radioGroupAllGid) === JSON.stringify(state.profile.radioGroupAllGidBase)}\n                                startIcon={isSaving && <LoadingSpinner size={24}/>}\n                                size={'large'}\n                                color={'primary'}\n                                variant={'contained'}\n                                onClick={() => handleSave()}\n                            >\n                                {t('str_saveChanges')}\n                            </Button>\n                        )\n                    }\n                </Grid>\n            </Grid>\n            <Dialog\n                open={openAddRemarkGroupDialog}\n                maxWidth={\"sm\"}\n                fullWidth\n            >\n                <div style={{padding: \"24px\"}}>\n                    <Grid container spacing={3}>\n                        <Grid item xs={12}>\n                            <Typography style={{fontSize: '24px', fontWeight: 'bold'}}>{t('str_newGroup')}</Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                error={remarkGroupDesc.isError}\n                                id={\"remark-group-desc\"}\n                                name={\"remark-group-desc\"}\n                                variant={\"outlined\"}\n                                fullWidth\n                                label={t(\"str_description\")}\n                                required\n                                FormHelperTextProps={{\n                                    style:  {opacity: remarkGroupDesc.isError  ? '1' : '0'}\n                                }}\n                                helperText={remarkGroupDesc.errorType === 'lengthError' ? 'Length must be between 2 and 50' : remarkGroupDesc.errorType === 'required' ? t('str_mandatory') : remarkGroupDesc.errorType === 'invalidCode' ? t('str_thereIsAlreadyExistUniqueValue') + remarkGroupDesc.value : 'null'}\n                                onChange={(e) => {\n                                    setRemarkGroupDesc({\n                                        ...remarkGroupDesc,\n                                        value: e.target.value,\n                                        isError: e.target.value === '' ? remarkGroupDesc.isError : false\n                                    })\n                                }}\n                                onBlur={() => {\n                                    setRemarkGroupDesc({\n                                        ...remarkGroupDesc,\n                                        value: remarkGroupDesc.value,\n                                        isError: remarkGroupDesc.value === '' ? true : remarkGroupDesc.isError,\n                                        errorType: remarkGroupDesc.value === '' ? 'required' : remarkGroupDesc.errorType\n                                    })\n                                }}\n                            />\n                        </Grid>\n                        <Grid item xs={6}>\n                            <FormControlLabel\n                                checked={isMultiple}\n                                onChange={(e) => setIsMultiple(e.target.checked)}\n                                color={'primary'}\n                                control={ <Checkbox />}\n                                label={t('str_multiple')}\n                            />\n                        </Grid>\n                        <Grid item xs={6}>\n                            <FormControlLabel\n                                checked={isHorizontal}\n                                onChange={(e) => setIsHorizontal(e.target.checked)}\n                                color={'primary'}\n                                control={ <Checkbox />}\n                                label={t('str_horizontal')}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <div style={{textAlign: \"right\"}}>\n                                <Button\n                                    disabled={isSavingRemarkGroup}\n                                    color={'primary'}\n                                    variant={'outlined'}\n                                    startIcon={<ClearIcon />}\n                                    onClick={handleCloseAddRemarkDialog}\n                                >\n                                    {t(\"str_cancel\")}\n                                </Button>\n                                <CustomToolTip\n                                    open={openToolTip}\n                                    onOpen={handleOpenToolTip}\n                                    onClose={handleCloseToolTip}\n                                    title={\n                                        <React.Fragment>\n                                            {\n                                                 remarkGroupDesc.value.length <= 0 || remarkGroupDesc.isError ? (\n                                                    <Typography style={{fontSize: \"inherit\", fontWeight: \"bold\"}}>{t(\"str_invalidFields\")}:</Typography>\n                                                ) : null\n                                            }\n                                            {\n                                               /* remarkGroupCode.value.length <= 0 || remarkGroupCode.isError ? (\n                                                    <Typography style={{fontSize: \"inherit\"}}>{t(\"str_code\")}</Typography>\n                                                ) : null*/\n                                            }\n                                            {\n                                                remarkGroupDesc.value.length <= 0 || remarkGroupDesc.isError ?  (\n                                                    <Typography style={{fontSize: \"inherit\"}}>{t(\"str_description\")}</Typography>\n                                                ) : null\n                                            }\n                                        </React.Fragment>\n                                    }\n                                >\n                                    <div style={{display: \"inline\"}}>\n                                        <Button\n                                            style={{marginLeft: '8px'}}\n                                            startIcon={isSavingRemarkGroup ? <LoadingSpinner size={24}/> : <CheckIcon />}\n                                            disabled={isSavingRemarkGroup || remarkGroupDesc.value.length <= 0 || remarkGroupDesc.isError}\n                                            color={\"primary\"}\n                                            variant={\"contained\"}\n                                            onClick={() => handleAddRemarkGroup()}\n                                        >\n                                            {t(\"str_save\")}\n                                        </Button>\n                                    </div>\n                                </CustomToolTip>\n                            </div>\n                        </Grid>\n                    </Grid>\n                </div>\n            </Dialog>\n            <TrackedChangesDialog\n                open={openTrackedDialog}\n                onPressNo={(e) => setOpenTrackedDialog(e)}\n                onPressYes={(e) => {\n                    setOpenTrackedDialog(e);\n                    setOpenAddRemarkGroupDialog(false);\n                    setTimeout(() => {\n                        handleReset();\n                    }, 50)\n                }}\n            />\n        </React.Fragment>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        state: state.formReducer.guest,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value)),\n    updateState: (stateType, stateName, value) => dispatch(updateState(stateType, stateName, value)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Preferences)\n"]},"metadata":{},"sourceType":"module"}