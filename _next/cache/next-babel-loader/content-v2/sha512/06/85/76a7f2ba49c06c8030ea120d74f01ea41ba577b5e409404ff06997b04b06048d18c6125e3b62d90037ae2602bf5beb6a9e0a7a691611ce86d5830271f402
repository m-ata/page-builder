{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/guest/register/selects/NationSelect.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { Select } from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport { REQUEST_METHOD_CONST } from '../../../../model/orest/constants';\nimport WebCmsGlobal from '../../../webcms-global';\nimport axios from 'axios';\nimport { showError } from '../../../../model/notification/actions';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nexport default function NationSelect(props) {\n  _s();\n\n  var _this = this;\n\n  var id = props.id,\n      name = props.name,\n      inputLabel = props.inputLabel,\n      value = props.value,\n      onChange = props.onChange,\n      setTrId = props.setTrId,\n      disabled = props.disabled,\n      variant = props.variant,\n      error = props.error,\n      helperText = props.helperText,\n      required = props.required;\n\n  var _useContext = useContext(WebCmsGlobal),\n      GENERAL_SETTINGS = _useContext.GENERAL_SETTINGS;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var loginfo = useSelector(function (state) {\n    return state.orest.currentUser && state.orest.currentUser.loginfo;\n  });\n  var clientParams = {};\n  clientParams.hotelrefno = loginfo && loginfo.hotelrefno || GENERAL_SETTINGS.HOTELREFNO;\n\n  if (loginfo && loginfo.hotelgidstr) {\n    clientParams.hoteltoken = loginfo && loginfo.hotelgidstr;\n  } //state\n\n\n  var _useState = useState(null),\n      nations = _useState[0],\n      setNations = _useState[1];\n\n  useEffect(function () {\n    var active = true;\n\n    if (active) {\n      axios({\n        url: GENERAL_SETTINGS.BASE_URL + 'api/hotel/content/info/nation',\n        method: REQUEST_METHOD_CONST.POST,\n        params: clientParams\n      }).then(function (r) {\n        if (active) {\n          if (r.status === 200) {\n            setNations(r.data.data);\n          }\n        }\n      })[\"catch\"](function () {\n        showError('Something went wrong!');\n      });\n    }\n\n    return function () {\n      active = false;\n    };\n  }, []);\n  useEffect(function () {\n    var active = true;\n\n    if (active && value && nations && setTrId && typeof setTrId === 'function') {\n      var getNations = nations.find(function (item) {\n        return Number(item.id) === Number(value);\n      });\n      setTrId(getNations.reqtrid);\n    }\n\n    return function () {\n      active = false;\n    };\n  }, [value, nations]);\n  return __jsx(FormControl, {\n    variant: variant,\n    fullWidth: true,\n    disabled: disabled,\n    error: error,\n    required: required || false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, __jsx(InputLabel, {\n    htmlFor: name,\n    shrink: !!value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, inputLabel), __jsx(Select, {\n    \"native\": true,\n    value: value,\n    onChange: onChange,\n    inputProps: {\n      name: name,\n      id: id\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, __jsx(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }), nations && nations.map(function (nation, index) {\n    return __jsx(\"option\", {\n      key: index,\n      value: nation.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 29\n      }\n    }, nation.description);\n  })), __jsx(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, helperText));\n}\n\n_s(NationSelect, \"03mMsR6+VOmGpdq/unIPaZYr4dU=\", false, function () {\n  return [useTranslation, useSelector];\n});\n\n_c = NationSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"NationSelect\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/guest/register/selects/NationSelect.js"],"names":["React","useContext","useEffect","useState","useSelector","InputLabel","Select","FormControl","REQUEST_METHOD_CONST","WebCmsGlobal","axios","showError","FormHelperText","useTranslation","NationSelect","props","id","name","inputLabel","value","onChange","setTrId","disabled","variant","error","helperText","required","GENERAL_SETTINGS","t","loginfo","state","orest","currentUser","clientParams","hotelrefno","HOTELREFNO","hotelgidstr","hoteltoken","nations","setNations","active","url","BASE_URL","method","POST","params","then","r","status","data","getNations","find","item","Number","reqtrid","map","nation","index","description"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport { Select } from '@material-ui/core'\nimport FormControl from '@material-ui/core/FormControl'\nimport { REQUEST_METHOD_CONST } from '../../../../model/orest/constants'\nimport WebCmsGlobal from '../../../webcms-global'\nimport axios from 'axios'\nimport { showError } from '../../../../model/notification/actions'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport useTranslation from 'lib/translations/hooks/useTranslation'\n\nexport default function NationSelect(props) {\n    const { id, name, inputLabel, value, onChange, setTrId, disabled, variant, error, helperText, required } = props\n    const { GENERAL_SETTINGS } = useContext(WebCmsGlobal)\n    const {t} = useTranslation()\n    const loginfo = useSelector((state) => state.orest.currentUser && state.orest.currentUser.loginfo)\n\n    let clientParams = {}\n    clientParams.hotelrefno = loginfo && loginfo.hotelrefno || GENERAL_SETTINGS.HOTELREFNO\n\n    if(loginfo && loginfo.hotelgidstr){\n        clientParams.hoteltoken = loginfo && loginfo.hotelgidstr\n    }\n\n    //state\n    const [nations, setNations] = useState(null)\n\n    useEffect(() => {\n        let active = true\n        if (active) {\n            axios({\n                url: GENERAL_SETTINGS.BASE_URL + 'api/hotel/content/info/nation',\n                method: REQUEST_METHOD_CONST.POST,\n                params: clientParams\n            })\n                .then((r) => {\n                    if (active) {\n                        if (r.status === 200) {\n                            setNations(r.data.data)\n                        }\n                    }\n                })\n                .catch(() => {\n                    showError('Something went wrong!')\n                })\n        }\n        return () => {\n            active = false\n        }\n    }, [])\n\n    useEffect(() => {\n        let active = true\n        if (active && value && nations && setTrId && typeof setTrId === 'function') {\n            const getNations = nations.find((item) => Number(item.id) === Number(value))\n            setTrId(getNations.reqtrid)\n        }\n        return () => {\n            active = false\n        }\n    }, [value, nations])\n\n    return (\n        <FormControl variant={variant} fullWidth disabled={disabled} error={error} required={required || false}>\n            <InputLabel htmlFor={name} shrink={!!value}>\n                {inputLabel}\n            </InputLabel>\n            <Select\n                native\n                value={value}\n                onChange={onChange}\n                inputProps={{\n                    name: name,\n                    id: id,\n                }}\n            >\n                <option aria-label=\"None\" value=\"\" />\n                {nations &&\n                    nations.map((nation, index) => {\n                        return (\n                            <option key={index} value={nation.id}>\n                                {nation.description}\n                            </option>\n                        )\n                    })}\n            </Select>\n            <FormHelperText>{helperText}</FormHelperText>\n        </FormControl>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}