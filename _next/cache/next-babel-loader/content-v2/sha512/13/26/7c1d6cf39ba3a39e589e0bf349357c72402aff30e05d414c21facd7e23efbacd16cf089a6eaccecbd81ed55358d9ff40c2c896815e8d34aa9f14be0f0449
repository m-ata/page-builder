{"ast":null,"code":"import _defineProperty from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/mata/app-cloudweb/components/payment/credit-card/form.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Container, Grid, InputAdornment, TextField, Typography } from '@material-ui/core';\nimport { AccountCircle, CreditCard, DateRange, Lock } from '@material-ui/icons';\nimport CreditCards from 'components/payment/credit-card/card';\nimport { formatCreditCardNumber, formatCVC, formatExpirationDate } from 'components/payment/credit-card/utils';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    margin: {\n      margin: theme.spacing(1)\n    },\n    cardContainer: {\n      width: '100%',\n      margin: 0\n    },\n    cardInputContainer: {\n      width: '100%',\n      margin: 0\n    },\n    cardInputIconContainer: {\n      padding: 4,\n      margin: 0\n    },\n    cardInputIcon: {\n      fontSize: 75,\n      color: 'rgba(0,0,0,1)'\n    },\n    cardInputTextFieldFullContainer: {\n      padding: 4,\n      margin: 0,\n      width: 'calc(100% - 84px)'\n    },\n    cardInputTextFieldContainer: {\n      padding: 4,\n      margin: 0,\n      width: 'calc(50% - 84px)'\n    },\n    cardInputTextFieldLabel: {\n      color: 'rgba(0,0,0,0.4)',\n      font: 'bold normal 20px Verdana, Impact sans-serif',\n      '&$cardInputTextFieldLabelFocused': {\n        color: 'rgba(0,0,0,1)'\n      }\n    },\n    cardInputTextFieldLabelFocused: {},\n    cardInputTextField: {\n      color: 'rgba(0,0,0,1)',\n      font: 'bold normal 30px Verdana, Impact sans-serif'\n    },\n    cardInputTextFieldUnderline: {\n      '&:before': {\n        borderBottomColor: 'rgba(150,150,150,1)'\n      },\n      '&:after': {\n        borderBottomColor: 'rgba(0,0,0,1)'\n      }\n    }\n  };\n};\n\nvar PaymentForm = function PaymentForm(_ref) {\n  _s();\n\n  var setCcNumberFocus = _ref.setCcNumberFocus,\n      onChange = _ref.onChange,\n      isValid = _ref.isValid,\n      showCard = _ref.showCard,\n      locale = _ref.locale,\n      className = _ref.className,\n      textFieldsClass = _ref.textFieldsClass,\n      iconColor = _ref.iconColor,\n      isEdit = _ref.isEdit,\n      editCardInfo = _ref.editCardInfo,\n      isDisabled = _ref.isDisabled,\n      _ref$customInputProps = _ref.customInputProps,\n      customInputProps = _ref$customInputProps === void 0 ? {} : _ref$customInputProps,\n      fieldSize = _ref.fieldSize,\n      fieldVariant = _ref.fieldVariant;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useState = useState(isEdit ? editCardInfo : {\n    cardType: undefined,\n    cardNumber: '',\n    cardOwner: '',\n    cardExpiry: '',\n    cardCvc: '',\n    cardIssuer: '',\n    cardFocused: '',\n    cardFormData: undefined,\n    cardIsValid: false\n  }),\n      creditCardInfo = _useState[0],\n      setCreditCardInfo = _useState[1];\n\n  useEffect(function () {\n    if (creditCardInfo && typeof onChange === \"function\" && typeof isValid === \"function\") {\n      onChange(creditCardInfo);\n      isValid(isCardComplete());\n    }\n  }, [creditCardInfo]);\n\n  var _useState2 = useState({\n    cardNumber: false,\n    cardOwner: false,\n    cardExpiry: false,\n    cardCvc: false\n  }),\n      ccIsError = _useState2[0],\n      setCcIsError = _useState2[1];\n\n  var ccConst = {\n    numberTextFieldId: 'credit-card-number',\n    expiryTextFieldId: 'credit-card-expiry',\n    cvcTextFieldId: 'credit-card-cvc',\n    ownerTextFieldId: 'credit-card-name'\n  };\n\n  var handleCallback = function handleCallback(cardType, isValid) {\n    var issuer = cardType.issuer;\n    if (!issuer) isValid = false;\n\n    if (isValid) {\n      setCreditCardInfo(_objectSpread(_objectSpread({}, creditCardInfo), {}, {\n        cardType: cardType,\n        cardIssuer: issuer,\n        cardIsValid: true\n      }));\n    } else {\n      issuer = '';\n      setCreditCardInfo(_objectSpread(_objectSpread({}, creditCardInfo), {}, {\n        cardType: cardType,\n        cardIssuer: issuer,\n        cardIsValid: false\n      }));\n    }\n  };\n\n  var handleInputFocus = function handleInputFocus(_ref2) {\n    var target = _ref2.target;\n\n    if (target.id === ccConst.numberTextFieldId) {\n      setCreditCardInfo(_objectSpread(_objectSpread({}, creditCardInfo), {}, {\n        cardFocused: 'number'\n      }));\n    } else if (target.id === ccConst.ownerTextFieldId) {\n      setCreditCardInfo(_objectSpread(_objectSpread({}, creditCardInfo), {}, {\n        cardFocused: 'name'\n      }));\n    } else if (target.id === ccConst.expiryTextFieldId) {\n      setCreditCardInfo(_objectSpread(_objectSpread({}, creditCardInfo), {}, {\n        cardFocused: 'expiry'\n      }));\n    } else if (target.id === ccConst.cvcTextFieldId) {\n      setCreditCardInfo(_objectSpread(_objectSpread({}, creditCardInfo), {}, {\n        cardFocused: 'cvc'\n      }));\n    }\n  };\n\n  var handleInputBlur = function handleInputBlur(_ref3) {\n    var target = _ref3.target;\n    var id = target.id;\n    var numberTextFieldId = ccConst.numberTextFieldId;\n    var expiryTextFieldId = ccConst.expiryTextFieldId;\n    var cvcTextFieldId = ccConst.cvcTextFieldId;\n    var ownerTextFieldId = ccConst.ownerTextFieldId;\n    var creditCard = isCardNumberComplete();\n\n    if (id === ownerTextFieldId) {\n      if (isCardOwnerComplete() && creditCard.isError) {\n        setCcIsError(_objectSpread(_objectSpread({}, ccIsError), {}, {\n          cardOwner: true\n        }));\n      }\n    }\n\n    if (id === numberTextFieldId) {\n      if (creditCard && creditCard.isError) {\n        setCcIsError(_objectSpread(_objectSpread({}, ccIsError), {}, {\n          cardNumber: true\n        }));\n      }\n    }\n\n    if (id === expiryTextFieldId) {\n      creditCard = isCardExpiryComplete(creditCard);\n\n      if (creditCard && creditCard.isError) {\n        setCcIsError(_objectSpread(_objectSpread({}, ccIsError), {}, {\n          cardExpiry: true\n        }));\n      }\n    }\n\n    if (id === cvcTextFieldId) {\n      creditCard = isCardCvcComplete(creditCard);\n\n      if (creditCard && creditCard.isError) {\n        setCcIsError(_objectSpread(_objectSpread({}, ccIsError), {}, {\n          cardCvc: true\n        }));\n      }\n    }\n\n    setCreditCardInfo(_objectSpread(_objectSpread({}, creditCardInfo), {}, {\n      cardFocused: ''\n    }));\n  };\n\n  var handleInputChange = function handleInputChange(_ref4) {\n    var target = _ref4.target;\n    var cardFormData = [creditCardInfo.cardNumber, creditCardInfo.cardExpiry, creditCardInfo.cardCvc, creditCardInfo.cardOwner, creditCardInfo.cardIssuer];\n\n    if (target.id === ccConst.numberTextFieldId) {\n      setCcIsError(_objectSpread(_objectSpread({}, ccIsError), {}, {\n        cardNumber: false\n      }));\n      target.value = formatCreditCardNumber(target.value);\n      cardFormData[0] = target.value;\n      setCreditCardInfo(_objectSpread(_objectSpread({}, creditCardInfo), {}, {\n        cardNumber: target.value,\n        cardFormData: cardFormData\n      }));\n    } else if (target.id === ccConst.ownerTextFieldId) {\n      setCcIsError(_objectSpread(_objectSpread({}, ccIsError), {}, {\n        cardOwner: false\n      }));\n      target.value = target.value.toUpperCase();\n      cardFormData[3] = target.value;\n      setCreditCardInfo(_objectSpread(_objectSpread({}, creditCardInfo), {}, {\n        cardOwner: target.value,\n        cardFormData: cardFormData\n      }));\n    } else if (target.id === ccConst.expiryTextFieldId) {\n      setCcIsError(_objectSpread(_objectSpread({}, ccIsError), {}, {\n        cardExpiry: false\n      }));\n      cardFormData[1] = target.value;\n      target.value = formatExpirationDate(target.value);\n      setCreditCardInfo(_objectSpread(_objectSpread({}, creditCardInfo), {}, {\n        cardExpiry: target.value,\n        cardFormData: cardFormData\n      }));\n    } else if (target.id === ccConst.cvcTextFieldId) {\n      setCcIsError(_objectSpread(_objectSpread({}, ccIsError), {}, {\n        cardCvc: false\n      }));\n      cardFormData[2] = target.value;\n      target.value = formatCVC(target.value);\n      setCreditCardInfo(_objectSpread(_objectSpread({}, creditCardInfo), {}, {\n        cardCvc: target.value,\n        cardFormData: cardFormData\n      }));\n    }\n  };\n\n  var _onKeyUp = function onKeyUp(id) {\n    var numberTextFieldId = ccConst.numberTextFieldId;\n    var expiryTextFieldId = ccConst.expiryTextFieldId;\n    var cvcTextFieldId = ccConst.cvcTextFieldId;\n    var creditCard = isCardNumberComplete();\n\n    if (id === numberTextFieldId) {\n      if (creditCard && !creditCard.isError) {\n        document.getElementById(expiryTextFieldId).focus();\n      }\n    } else if (id === expiryTextFieldId) {\n      if (creditCard && !creditCard.isError) {\n        creditCard = isCardExpiryComplete(creditCard);\n      }\n\n      if (creditCard && !creditCard.isError) {\n        document.getElementById(cvcTextFieldId).focus();\n      }\n    } else if (id === cvcTextFieldId) {\n      if (creditCard && !creditCard.isError) creditCard = isCardExpiryComplete(creditCard);\n      if (creditCard && !creditCard.isError) creditCard = isCardCvcComplete(creditCard);\n    }\n  };\n\n  var isCardComplete = function isCardComplete() {\n    var creditCard = isCardNumberComplete();\n\n    if (creditCard && !creditCard.isError) {\n      creditCard = isCardExpiryComplete(creditCard);\n    }\n\n    if (creditCard && !creditCard.isError) {\n      creditCard = isCardCvcComplete(creditCard);\n    }\n\n    if (creditCard && !creditCard.isError) {\n      var cardOwner = creditCardInfo.cardOwner;\n      creditCard.owner = cardOwner;\n\n      var _isError = cardOwner && cardOwner.length >= 2 ? false : true;\n\n      creditCard.isError = _isError;\n    }\n\n    return creditCard;\n  };\n\n  var isCardOwnerComplete = function isCardOwnerComplete() {\n    var cardOwner = creditCardInfo.cardOwner;\n\n    var _isError = cardOwner.length > 2 ? false : true;\n\n    return _isError;\n  };\n\n  var isCardNumberComplete = function isCardNumberComplete() {\n    var cardType = creditCardInfo.cardType;\n    var cardIsValid = creditCardInfo.cardIsValid;\n    var cardNumber = creditCardInfo.cardNumber;\n    var creditCard = {};\n    creditCard.type = cardType;\n    creditCard.isValid = cardIsValid;\n    creditCard.number = cardNumber;\n\n    var _isError = !(cardType && cardIsValid && cardType.issuer && cardType.maxLength);\n\n    if (!_isError) {\n      _isError = !(cardNumber && !isNaN(cardNumber.replace(/ /g, '')));\n    }\n\n    if (!_isError) {\n      creditCard.number = cardNumber.replace(/ /g, '');\n    }\n\n    creditCard.isError = _isError;\n    return creditCard;\n  };\n\n  var isCardExpiryComplete = function isCardExpiryComplete(creditCard) {\n    if (creditCard.isError) return creditCard;\n    var cardExpiry = creditCardInfo.cardExpiry;\n    creditCard.expiry = cardExpiry;\n\n    var _isError = !(cardExpiry && cardExpiry.length === 5);\n\n    if (!_isError) _isError = isNaN(cardExpiry.replace(/\\//g, ''));\n\n    if (!_isError) {\n      _isError = true;\n      var today = new Date();\n      var currentMonth = today.getMonth() + 1;\n      var currentYear = today.getFullYear();\n      var maxYear = currentYear + 100;\n      var maxMonth = 12;\n      var month = parseInt(cardExpiry.slice(0, 2), 0);\n      var year = '20' + parseInt(cardExpiry.slice(3, 5), 0);\n      year = Number(year);\n      currentYear = Number(currentYear);\n      maxYear = Number(maxYear);\n\n      if (year > currentYear) {\n        _isError = year > maxYear ? true : false;\n      } else if (year === currentYear) {\n        _isError = currentMonth > month || month > maxMonth ? true : false;\n      }\n    }\n\n    if (!_isError) {\n      creditCard.expiryMonth = parseInt(creditCard.expiry.slice(0, 2), 0);\n      creditCard.expiryYear = parseInt(creditCard.expiry.slice(3, 5), 0);\n    }\n\n    creditCard.isError = _isError;\n    return creditCard;\n  };\n\n  var isCardCvcComplete = function isCardCvcComplete(creditCard) {\n    if (creditCard.isError) return creditCard;\n    var cardCvc = creditCardInfo.cardCvc;\n    creditCard.cvc = cardCvc;\n\n    var _isError = creditCard.type && creditCard.type.issuer && cardCvc && (creditCard.type.issuer !== 'amex' && cardCvc.length === 3 || creditCard.type.issuer === 'amex' && cardCvc.length === 4) ? false : true;\n\n    if (!_isError) _isError = isNaN(cardCvc);\n    if (!_isError) creditCard.cvc = parseInt(cardCvc, 0);\n    creditCard.isError = _isError;\n    return creditCard;\n  };\n\n  var acceptedCards = ['visa', 'mastercard', 'discover', 'amex', 'jcb', 'dinersclub', 'maestro'];\n  var cardLocale = {\n    fullname: t('str_ccFullName'),\n    cardNumber: t('str_ccNumber'),\n    validThruCaption: 'Valid Thru',\n    expiryDate: t('str_ccExpiryDate'),\n    cvc: t('str_ccCvc')\n  };\n  return __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"center\",\n    alignItems: \"center\",\n    spacing: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    style: {\n      display: showCard ? 'inline-block' : 'none'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 13\n    }\n  }, __jsx(CreditCards, {\n    variant: \"outlined\",\n    number: creditCardInfo.cardNumber,\n    name: creditCardInfo.cardOwner,\n    expiry: creditCardInfo.cardExpiry,\n    cvc: creditCardInfo.cardCvc,\n    focused: creditCardInfo.cardFocused,\n    locale: {\n      valid: cardLocale.validThruCaption.toUpperCase()\n    },\n    placeholders: {\n      name: t('str_fullName').toUpperCase()\n    },\n    acceptedCards: acceptedCards,\n    issuer: undefined,\n    callback: function callback(cardType, isValid) {\n      return handleCallback(cardType, isValid);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 17\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"flex-end\",\n    alignItems: \"center\",\n    spacing: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 21\n    }\n  }, __jsx(TextField, {\n    disabled: isDisabled,\n    className: textFieldsClass || null,\n    value: creditCardInfo.cardOwner,\n    size: fieldSize,\n    variant: fieldVariant,\n    style: {\n      margin: '5px 0 0 6px'\n    },\n    id: ccConst.ownerTextFieldId,\n    key: ccConst.ownerTextFieldId,\n    label: cardLocale.fullname,\n    type: \"text\",\n    name: ccConst.ownerTextFieldId,\n    pattern: undefined,\n    required: true,\n    error: ccIsError.cardOwner,\n    fullWidth: true,\n    onChange: function onChange(e) {\n      return handleInputChange(e);\n    },\n    onFocus: function onFocus(e) {\n      return handleInputFocus(e);\n    },\n    onBlur: function onBlur(e) {\n      return handleInputBlur(e);\n    },\n    onKeyUp: function onKeyUp(e) {\n      return _onKeyUp(ccConst.ownerTextFieldId, e);\n    },\n    InputProps: _objectSpread(_objectSpread({}, customInputProps && customInputProps || {}), {}, {\n      startAdornment: __jsx(InputAdornment, {\n        position: \"start\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 37\n        }\n      }, __jsx(AccountCircle, {\n        style: iconColor !== undefined ? {\n          color: iconColor\n        } : null,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 41\n        }\n      }))\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 25\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 21\n    }\n  }, __jsx(TextField, {\n    disabled: isDisabled,\n    className: textFieldsClass || null,\n    value: creditCardInfo.cardNumber,\n    size: fieldSize,\n    variant: fieldVariant,\n    style: {\n      margin: '5px 0 0 6px'\n    },\n    id: ccConst.numberTextFieldId,\n    key: ccConst.numberTextFieldId,\n    label: cardLocale.cardNumber,\n    type: \"tel\",\n    name: ccConst.numberTextFieldId,\n    pattern: \"[\\\\d| ]{16,22}\",\n    required: true,\n    error: ccIsError.cardNumber,\n    fullWidth: true,\n    onChange: function onChange(e) {\n      return handleInputChange(e);\n    },\n    onFocus: function onFocus(e) {\n      setCcNumberFocus(true);\n      handleInputFocus(e);\n    },\n    onBlur: function onBlur(e) {\n      setCcNumberFocus(false);\n      handleInputBlur(e);\n    },\n    onKeyUp: function onKeyUp(e) {\n      return _onKeyUp(ccConst.numberTextFieldId, e);\n    },\n    InputProps: _objectSpread(_objectSpread({}, customInputProps && customInputProps || {}), {}, {\n      startAdornment: __jsx(InputAdornment, {\n        position: \"start\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 37\n        }\n      }, __jsx(CreditCard, {\n        style: iconColor !== undefined ? {\n          color: iconColor\n        } : null,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 41\n        }\n      }))\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 25\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 7,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 21\n    }\n  }, __jsx(TextField, {\n    disabled: isDisabled,\n    className: textFieldsClass || null,\n    value: creditCardInfo.cardExpiry,\n    size: fieldSize,\n    variant: fieldVariant,\n    style: {\n      margin: '5px 0 0 6px'\n    },\n    id: ccConst.expiryTextFieldId,\n    key: ccConst.expiryTextFieldId,\n    label: cardLocale.expiryDate,\n    type: \"tel\",\n    name: ccConst.expiryTextFieldId,\n    pattern: \"\\\\d\\\\d/\\\\d\\\\d\\\\d\\\\d\",\n    required: true,\n    error: ccIsError.cardExpiry,\n    fullWidth: true,\n    onChange: function onChange(e) {\n      return handleInputChange(e);\n    },\n    onFocus: function onFocus(e) {\n      return handleInputFocus(e);\n    },\n    onBlur: function onBlur(e) {\n      return handleInputBlur(e);\n    },\n    onKeyUp: function onKeyUp(e) {\n      return _onKeyUp(ccConst.expiryTextFieldId, e);\n    },\n    InputProps: _objectSpread(_objectSpread({}, customInputProps && customInputProps || {}), {}, {\n      startAdornment: __jsx(InputAdornment, {\n        position: \"start\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 37\n        }\n      }, __jsx(DateRange, {\n        style: iconColor !== undefined ? {\n          color: iconColor\n        } : null,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 41\n        }\n      }))\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 25\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 5,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 21\n    }\n  }, __jsx(TextField, {\n    disabled: isDisabled,\n    className: textFieldsClass || null,\n    value: creditCardInfo.cardCvc,\n    size: fieldSize,\n    variant: fieldVariant,\n    style: {\n      margin: '5px 0 0 6px'\n    },\n    id: ccConst.cvcTextFieldId,\n    key: ccConst.cvcTextFieldId,\n    label: cardLocale.cvc,\n    type: \"tel\",\n    name: ccConst.cvcTextFieldId,\n    pattern: \"\\\\d{3,4}\",\n    required: true,\n    error: ccIsError.cardCvc,\n    fullWidth: true,\n    onChange: function onChange(e) {\n      return handleInputChange(e);\n    },\n    onFocus: function onFocus(e) {\n      return handleInputFocus(e);\n    },\n    onBlur: function onBlur(e) {\n      return handleInputBlur(e);\n    },\n    onKeyUp: function onKeyUp(e) {\n      return _onKeyUp(ccConst.cvcTextFieldId, e);\n    },\n    InputProps: _objectSpread(_objectSpread({}, customInputProps && customInputProps || {}), {}, {\n      startAdornment: __jsx(InputAdornment, {\n        position: \"start\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 37\n        }\n      }, __jsx(Lock, {\n        style: iconColor !== undefined ? {\n          color: iconColor\n        } : null,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 41\n        }\n      }))\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 25\n    }\n  })))));\n};\n\n_s(PaymentForm, \"ypArUC5+b6Z8mMN3c+qIm8YmevE=\", false, function () {\n  return [useTranslation];\n});\n\n_c = PaymentForm;\nPaymentForm.defaultProps = {\n  showCard: true,\n  isDisabled: false,\n  fieldVariant: 'outlined',\n  fieldSize: 'small',\n  customInputProps: {}\n};\nexport default withStyles(styles)(PaymentForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/payment/credit-card/form.js"],"names":["React","useEffect","useState","withStyles","Container","Grid","InputAdornment","TextField","Typography","AccountCircle","CreditCard","DateRange","Lock","CreditCards","formatCreditCardNumber","formatCVC","formatExpirationDate","useTranslation","styles","theme","root","display","flexWrap","margin","spacing","cardContainer","width","cardInputContainer","cardInputIconContainer","padding","cardInputIcon","fontSize","color","cardInputTextFieldFullContainer","cardInputTextFieldContainer","cardInputTextFieldLabel","font","cardInputTextFieldLabelFocused","cardInputTextField","cardInputTextFieldUnderline","borderBottomColor","PaymentForm","setCcNumberFocus","onChange","isValid","showCard","locale","className","textFieldsClass","iconColor","isEdit","editCardInfo","isDisabled","customInputProps","fieldSize","fieldVariant","t","cardType","undefined","cardNumber","cardOwner","cardExpiry","cardCvc","cardIssuer","cardFocused","cardFormData","cardIsValid","creditCardInfo","setCreditCardInfo","isCardComplete","ccIsError","setCcIsError","ccConst","numberTextFieldId","expiryTextFieldId","cvcTextFieldId","ownerTextFieldId","handleCallback","issuer","handleInputFocus","target","id","handleInputBlur","creditCard","isCardNumberComplete","isCardOwnerComplete","isError","isCardExpiryComplete","isCardCvcComplete","handleInputChange","value","toUpperCase","onKeyUp","document","getElementById","focus","owner","_isError","length","type","number","maxLength","isNaN","replace","expiry","today","Date","currentMonth","getMonth","currentYear","getFullYear","maxYear","maxMonth","month","parseInt","slice","year","Number","expiryMonth","expiryYear","cvc","acceptedCards","cardLocale","fullname","validThruCaption","expiryDate","valid","name","e","startAdornment","defaultProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Container, Grid, InputAdornment, TextField, Typography } from '@material-ui/core'\nimport { AccountCircle, CreditCard, DateRange, Lock } from '@material-ui/icons'\nimport CreditCards from 'components/payment/credit-card/card'\nimport { formatCreditCardNumber, formatCVC, formatExpirationDate } from 'components/payment/credit-card/utils'\nimport useTranslation from 'lib/translations/hooks/useTranslation'\n\nconst styles = (theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    margin: {\n        margin: theme.spacing(1),\n    },\n    cardContainer: {\n        width: '100%',\n        margin: 0,\n    },\n    cardInputContainer: {\n        width: '100%',\n        margin: 0,\n    },\n    cardInputIconContainer: {\n        padding: 4,\n        margin: 0,\n    },\n    cardInputIcon: {\n        fontSize: 75,\n        color: 'rgba(0,0,0,1)',\n    },\n    cardInputTextFieldFullContainer: {\n        padding: 4,\n        margin: 0,\n        width: 'calc(100% - 84px)',\n    },\n    cardInputTextFieldContainer: {\n        padding: 4,\n        margin: 0,\n        width: 'calc(50% - 84px)',\n    },\n    cardInputTextFieldLabel: {\n        color: 'rgba(0,0,0,0.4)',\n        font: 'bold normal 20px Verdana, Impact sans-serif',\n        '&$cardInputTextFieldLabelFocused': {\n            color: 'rgba(0,0,0,1)',\n        },\n    },\n    cardInputTextFieldLabelFocused: {},\n    cardInputTextField: {\n        color: 'rgba(0,0,0,1)',\n        font: 'bold normal 30px Verdana, Impact sans-serif',\n    },\n    cardInputTextFieldUnderline: {\n        '&:before': {\n            borderBottomColor: 'rgba(150,150,150,1)',\n        },\n        '&:after': {\n            borderBottomColor: 'rgba(0,0,0,1)',\n        },\n    },\n})\n\nconst PaymentForm = ({ setCcNumberFocus, onChange, isValid, showCard, locale, className, textFieldsClass, iconColor, isEdit, editCardInfo, isDisabled, customInputProps = {}, fieldSize, fieldVariant }) => {\n    const { t } = useTranslation()\n    const [creditCardInfo, setCreditCardInfo] = useState(isEdit ? editCardInfo : {\n        cardType: undefined,\n        cardNumber: '',\n        cardOwner: '',\n        cardExpiry: '',\n        cardCvc: '',\n        cardIssuer: '',\n        cardFocused: '',\n        cardFormData: undefined,\n        cardIsValid: false,\n    })\n\n    useEffect(() => {\n        if(creditCardInfo && typeof onChange === \"function\"  && typeof isValid === \"function\"){\n            onChange(creditCardInfo)\n            isValid(isCardComplete())\n        }\n\n    }, [creditCardInfo])\n\n    const [ccIsError, setCcIsError] = useState({\n        cardNumber: false,\n        cardOwner: false,\n        cardExpiry: false,\n        cardCvc: false,\n    })\n\n    const ccConst = {\n        numberTextFieldId: 'credit-card-number',\n        expiryTextFieldId: 'credit-card-expiry',\n        cvcTextFieldId: 'credit-card-cvc',\n        ownerTextFieldId: 'credit-card-name',\n    }\n\n    const handleCallback = (cardType, isValid) => {\n        let issuer = cardType.issuer\n        if (!issuer) isValid = false\n        if (isValid) {\n            setCreditCardInfo({\n                ...creditCardInfo,\n                cardType: cardType,\n                cardIssuer: issuer,\n                cardIsValid: true,\n            })\n        } else {\n            issuer = ''\n            setCreditCardInfo({\n                ...creditCardInfo,\n                cardType: cardType,\n                cardIssuer: issuer,\n                cardIsValid: false,\n            })\n        }\n    }\n\n    const handleInputFocus = ({ target }) => {\n        if (target.id === ccConst.numberTextFieldId) {\n            setCreditCardInfo({ ...creditCardInfo, cardFocused: 'number' })\n        } else if (target.id === ccConst.ownerTextFieldId) {\n            setCreditCardInfo({ ...creditCardInfo, cardFocused: 'name' })\n        } else if (target.id === ccConst.expiryTextFieldId) {\n            setCreditCardInfo({ ...creditCardInfo, cardFocused: 'expiry' })\n        } else if (target.id === ccConst.cvcTextFieldId) {\n            setCreditCardInfo({ ...creditCardInfo, cardFocused: 'cvc' })\n        }\n    }\n\n    const handleInputBlur = ({ target }) => {\n        const id = target.id\n        let numberTextFieldId = ccConst.numberTextFieldId\n        let expiryTextFieldId = ccConst.expiryTextFieldId\n        let cvcTextFieldId = ccConst.cvcTextFieldId\n        let ownerTextFieldId = ccConst.ownerTextFieldId\n\n        let creditCard = isCardNumberComplete()\n        if (id === ownerTextFieldId) {\n            if (isCardOwnerComplete() && creditCard.isError) {\n                setCcIsError({\n                    ...ccIsError,\n                    cardOwner: true,\n                })\n            }\n        }\n\n        if (id === numberTextFieldId) {\n            if (creditCard && creditCard.isError) {\n                setCcIsError({\n                    ...ccIsError,\n                    cardNumber: true,\n                })\n            }\n        }\n\n        if (id === expiryTextFieldId) {\n            creditCard = isCardExpiryComplete(creditCard)\n            if (creditCard && creditCard.isError) {\n                setCcIsError({\n                    ...ccIsError,\n                    cardExpiry: true,\n                })\n            }\n        }\n\n        if (id === cvcTextFieldId) {\n            creditCard = isCardCvcComplete(creditCard)\n            if (creditCard && creditCard.isError) {\n                setCcIsError({\n                    ...ccIsError,\n                    cardCvc: true,\n                })\n            }\n        }\n\n        setCreditCardInfo({ ...creditCardInfo, cardFocused: '' })\n    }\n\n    const handleInputChange = ({ target }) => {\n        let cardFormData = [\n            creditCardInfo.cardNumber,\n            creditCardInfo.cardExpiry,\n            creditCardInfo.cardCvc,\n            creditCardInfo.cardOwner,\n            creditCardInfo.cardIssuer,\n        ]\n        if (target.id === ccConst.numberTextFieldId) {\n            setCcIsError({ ...ccIsError, cardNumber: false })\n            target.value = formatCreditCardNumber(target.value)\n            cardFormData[0] = target.value\n            setCreditCardInfo({ ...creditCardInfo, cardNumber: target.value, cardFormData: cardFormData })\n        } else if (target.id === ccConst.ownerTextFieldId) {\n            setCcIsError({ ...ccIsError, cardOwner: false })\n            target.value = target.value.toUpperCase()\n            cardFormData[3] = target.value\n            setCreditCardInfo({ ...creditCardInfo, cardOwner: target.value, cardFormData: cardFormData })\n        } else if (target.id === ccConst.expiryTextFieldId) {\n            setCcIsError({ ...ccIsError, cardExpiry: false })\n            cardFormData[1] = target.value\n            target.value = formatExpirationDate(target.value)\n            setCreditCardInfo({ ...creditCardInfo, cardExpiry: target.value, cardFormData: cardFormData })\n        } else if (target.id === ccConst.cvcTextFieldId) {\n            setCcIsError({ ...ccIsError, cardCvc: false })\n            cardFormData[2] = target.value\n            target.value = formatCVC(target.value)\n            setCreditCardInfo({ ...creditCardInfo, cardCvc: target.value, cardFormData: cardFormData })\n        }\n    }\n\n    const onKeyUp = (id) => {\n        let numberTextFieldId = ccConst.numberTextFieldId\n        let expiryTextFieldId = ccConst.expiryTextFieldId\n        let cvcTextFieldId = ccConst.cvcTextFieldId\n\n        let creditCard = isCardNumberComplete()\n        if (id === numberTextFieldId) {\n            if (creditCard && !creditCard.isError) {\n                document.getElementById(expiryTextFieldId).focus()\n            }\n        } else if (id === expiryTextFieldId) {\n            if (creditCard && !creditCard.isError) {\n                creditCard = isCardExpiryComplete(creditCard)\n            }\n            if (creditCard && !creditCard.isError) {\n                document.getElementById(cvcTextFieldId).focus()\n            }\n        } else if (id === cvcTextFieldId) {\n            if (creditCard && !creditCard.isError) creditCard = isCardExpiryComplete(creditCard)\n            if (creditCard && !creditCard.isError) creditCard = isCardCvcComplete(creditCard)\n        }\n    }\n\n    const isCardComplete = () => {\n        let creditCard = isCardNumberComplete()\n        if (creditCard && !creditCard.isError) {\n            creditCard = isCardExpiryComplete(creditCard)\n        }\n\n        if (creditCard && !creditCard.isError) {\n            creditCard = isCardCvcComplete(creditCard)\n        }\n        if (creditCard && !creditCard.isError) {\n            let cardOwner = creditCardInfo.cardOwner\n            creditCard.owner = cardOwner\n            let _isError = cardOwner && cardOwner.length >= 2 ? false : true\n            creditCard.isError = _isError\n        }\n        return creditCard\n    }\n\n    const isCardOwnerComplete = () => {\n        let cardOwner = creditCardInfo.cardOwner\n        let _isError = cardOwner.length > 2 ? false : true\n        return _isError\n    }\n\n    const isCardNumberComplete = () => {\n        let cardType = creditCardInfo.cardType\n        let cardIsValid = creditCardInfo.cardIsValid\n        let cardNumber = creditCardInfo.cardNumber\n\n        let creditCard = {}\n        creditCard.type = cardType\n        creditCard.isValid = cardIsValid\n        creditCard.number = cardNumber\n\n        let _isError = !(cardType && cardIsValid && cardType.issuer && cardType.maxLength)\n        if (!_isError) {\n            _isError = !(cardNumber && !isNaN(cardNumber.replace(/ /g, '')))\n        }\n\n        if (!_isError) {\n            creditCard.number = cardNumber.replace(/ /g, '')\n        }\n\n        creditCard.isError = _isError\n        return creditCard\n    }\n\n    const isCardExpiryComplete = (creditCard) => {\n        if (creditCard.isError) return creditCard\n\n        let cardExpiry = creditCardInfo.cardExpiry\n        creditCard.expiry = cardExpiry\n\n        let _isError = !(cardExpiry && cardExpiry.length === 5)\n\n        if (!_isError) _isError = isNaN(cardExpiry.replace(/\\//g, ''))\n\n        if (!_isError) {\n            _isError = true\n\n            let today = new Date()\n            let currentMonth = today.getMonth() + 1\n            let currentYear = today.getFullYear()\n            let maxYear = currentYear + 100\n            let maxMonth = 12\n\n            let month = parseInt(cardExpiry.slice(0, 2), 0)\n            let year = '20' + parseInt(cardExpiry.slice(3, 5), 0)\n\n            year = Number(year)\n            currentYear = Number(currentYear)\n            maxYear = Number(maxYear)\n\n            if (year > currentYear) {\n                _isError = year > maxYear ? true : false\n            } else if (year === currentYear) {\n                _isError = currentMonth > month || month > maxMonth ? true : false\n            }\n        }\n\n        if (!_isError) {\n            creditCard.expiryMonth = parseInt(creditCard.expiry.slice(0, 2), 0)\n            creditCard.expiryYear = parseInt(creditCard.expiry.slice(3, 5), 0)\n        }\n\n        creditCard.isError = _isError\n        return creditCard\n    }\n\n    const isCardCvcComplete = (creditCard) => {\n        if (creditCard.isError) return creditCard\n\n        let cardCvc = creditCardInfo.cardCvc\n        creditCard.cvc = cardCvc\n\n        let _isError =\n            creditCard.type &&\n            creditCard.type.issuer &&\n            cardCvc &&\n            ((creditCard.type.issuer !== 'amex' && cardCvc.length === 3) ||\n                (creditCard.type.issuer === 'amex' && cardCvc.length === 4))\n                ? false\n                : true\n        if (!_isError) _isError = isNaN(cardCvc)\n        if (!_isError) creditCard.cvc = parseInt(cardCvc, 0)\n\n        creditCard.isError = _isError\n        return creditCard\n    }\n\n    const acceptedCards = ['visa', 'mastercard', 'discover', 'amex', 'jcb', 'dinersclub', 'maestro']\n\n    let cardLocale = {\n            fullname: t('str_ccFullName'),\n            cardNumber: t('str_ccNumber'),\n            validThruCaption: 'Valid Thru',\n            expiryDate: t('str_ccExpiryDate'),\n            cvc: t('str_ccCvc'),\n    }\n\n    return (\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={1}>\n            <Grid item xs={12} sm={6} style={{ display: showCard ? 'inline-block' : 'none' }}>\n                <CreditCards\n                    variant=\"outlined\"\n                    number={creditCardInfo.cardNumber}\n                    name={creditCardInfo.cardOwner}\n                    expiry={creditCardInfo.cardExpiry}\n                    cvc={creditCardInfo.cardCvc}\n                    focused={creditCardInfo.cardFocused}\n                    locale={{ valid: cardLocale.validThruCaption.toUpperCase()}}\n                    placeholders={{ name: t('str_fullName').toUpperCase()}}\n                    acceptedCards={acceptedCards}\n                    issuer={undefined}\n                    callback={(cardType, isValid) => handleCallback(cardType, isValid)}\n                />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n                <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"center\" spacing={1}>\n                    <Grid item xs={12}>\n                        <TextField\n                            disabled={isDisabled}\n                            className={textFieldsClass || null}\n                            value={creditCardInfo.cardOwner}\n                            size={fieldSize}\n                            variant={fieldVariant}\n                            style={{margin: '5px 0 0 6px'}}\n                            id={ccConst.ownerTextFieldId}\n                            key={ccConst.ownerTextFieldId}\n                            label={cardLocale.fullname}\n                            type=\"text\"\n                            name={ccConst.ownerTextFieldId}\n                            pattern={undefined}\n                            required\n                            error={ccIsError.cardOwner}\n                            fullWidth={true}\n                            onChange={(e) => handleInputChange(e)}\n                            onFocus={(e) => handleInputFocus(e)}\n                            onBlur={(e) => handleInputBlur(e)}\n                            onKeyUp={(e) => onKeyUp(ccConst.ownerTextFieldId, e)}\n                            InputProps={{\n                                ...(customInputProps && customInputProps || {}),\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <AccountCircle style={iconColor !== undefined ? {color:iconColor} : null }/>\n                                    </InputAdornment>\n                                ),\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            disabled={isDisabled}\n                            className={textFieldsClass || null}\n                            value={creditCardInfo.cardNumber}\n                            size={fieldSize}\n                            variant={fieldVariant}\n                            style={{margin: '5px 0 0 6px'}}\n                            id={ccConst.numberTextFieldId}\n                            key={ccConst.numberTextFieldId}\n                            label={cardLocale.cardNumber}\n                            type=\"tel\"\n                            name={ccConst.numberTextFieldId}\n                            pattern=\"[\\d| ]{16,22}\"\n                            required\n                            error={ccIsError.cardNumber}\n                            fullWidth={true}\n                            onChange={(e) => handleInputChange(e)}\n                            onFocus={(e) => {\n                                setCcNumberFocus(true)\n                                handleInputFocus(e)\n                            }}\n                            onBlur={(e) => {\n                                setCcNumberFocus(false)\n                                handleInputBlur(e)\n                            }}\n                            onKeyUp={(e) => onKeyUp(ccConst.numberTextFieldId, e)}\n                            InputProps={{\n                                ...(customInputProps && customInputProps || {}),\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <CreditCard style={iconColor !== undefined ? {color:iconColor} : null }/>\n                                    </InputAdornment>\n                                ),\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={7}>\n                        <TextField\n                            disabled={isDisabled}\n                            className={textFieldsClass || null}\n                            value={creditCardInfo.cardExpiry}\n                            size={fieldSize}\n                            variant={fieldVariant}\n                            style={{margin: '5px 0 0 6px'}}\n                            id={ccConst.expiryTextFieldId}\n                            key={ccConst.expiryTextFieldId}\n                            label={cardLocale.expiryDate}\n                            type=\"tel\"\n                            name={ccConst.expiryTextFieldId}\n                            pattern=\"\\d\\d/\\d\\d\\d\\d\"\n                            required\n                            error={ccIsError.cardExpiry}\n                            fullWidth={true}\n                            onChange={(e) => handleInputChange(e)}\n                            onFocus={(e) => handleInputFocus(e)}\n                            onBlur={(e) => handleInputBlur(e)}\n                            onKeyUp={(e) => onKeyUp(ccConst.expiryTextFieldId, e)}\n                            InputProps={{\n                                ...(customInputProps && customInputProps || {}),\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <DateRange style={iconColor !== undefined ? {color:iconColor} : null }/>\n                                    </InputAdornment>\n                                ),\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={5}>\n                        <TextField\n                            disabled={isDisabled}\n                            className={textFieldsClass || null}\n                            value={creditCardInfo.cardCvc}\n                            size={fieldSize}\n                            variant={fieldVariant}\n                            style={{margin: '5px 0 0 6px'}}\n                            id={ccConst.cvcTextFieldId}\n                            key={ccConst.cvcTextFieldId}\n                            label={cardLocale.cvc}\n                            type=\"tel\"\n                            name={ccConst.cvcTextFieldId}\n                            pattern=\"\\d{3,4}\"\n                            required\n                            error={ccIsError.cardCvc}\n                            fullWidth={true}\n                            onChange={(e) => handleInputChange(e)}\n                            onFocus={(e) => handleInputFocus(e)}\n                            onBlur={(e) => handleInputBlur(e)}\n                            onKeyUp={(e) => onKeyUp(ccConst.cvcTextFieldId, e)}\n                            InputProps={{\n                            ...(customInputProps && customInputProps || {}),\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <Lock style={iconColor !== undefined ? {color:iconColor} : null }/>\n                                    </InputAdornment>\n                                ),\n                            }}\n                        />\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    )\n}\n\nPaymentForm.defaultProps = {\n    showCard: true,\n    isDisabled: false,\n    fieldVariant: 'outlined',\n    fieldSize: 'small',\n    customInputProps: {}\n}\n\nexport default withStyles(styles)(PaymentForm)"]},"metadata":{},"sourceType":"module"}