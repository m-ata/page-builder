{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/transfer-reservation/index.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Accordion, AccordionDetails, AccordionSummary, Button, Grid, MenuItem, TextField, Typography, IconButton } from '@material-ui/core';\nimport axios from 'axios';\nimport WebCmsGlobal from 'components/webcms-global';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { makeStyles } from '@material-ui/core/styles';\nimport moment from 'moment';\nimport MomentAdapter from '@date-io/moment';\nimport { DatePicker, LocalizationProvider, TimePicker } from '@material-ui/pickers';\nimport { useSnackbar } from 'notistack';\nimport { OREST_ENDPOINT, REQUEST_METHOD_CONST } from 'model/orest/constants';\nimport { required } from 'state/utils/form';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nconst useStyles = makeStyles(() => ({\n  root: {\n    marginTop: 16,\n    border: '1px solid #ddd',\n    background: '#F5F5F5'\n  },\n  infoTextField: {\n    background: '#FFFFFF',\n    '& fieldset': {\n      borderRadius: 0\n    }\n  },\n  createAccountHelperText: {\n    textAlign: 'right'\n  },\n  textRed: {\n    color: 'red'\n  },\n  parent: {\n    position: \"relative\",\n    zIndex: 0\n  },\n  backdrop: {\n    position: \"absolute\",\n    zIndex: 3\n  }\n}));\nconst fieldTypes = {\n  text: 'text',\n  textarea: 'textarea',\n  select: 'select',\n  date: 'date',\n  time: 'time'\n};\nconst transferInitialState = {\n  airportid: {\n    isRequired: true,\n    label: 'str_airports',\n    key: 'airportid',\n    value: '',\n    type: 'select',\n    list: false,\n    fullWidth: true,\n    isError: false,\n    errorText: '',\n    variant: 'outlined',\n    size: 'small',\n    isBase: true,\n    defValKey: 'id',\n    gridBreakpoints: {\n      xs: 12,\n      sm: 6,\n      md: 6\n    }\n  },\n  airline: {\n    isRequired: true,\n    label: 'str_airline',\n    key: 'airline',\n    value: '',\n    type: 'text',\n    list: false,\n    fullWidth: true,\n    isError: false,\n    errorText: '',\n    variant: 'outlined',\n    size: 'small',\n    isBase: true,\n    gridBreakpoints: {\n      xs: 12,\n      sm: 6,\n      md: 6\n    }\n  },\n  flydate: {\n    isRequired: true,\n    label: 'Uçuş Tarihi',\n    key: 'flydate',\n    value: null,\n    type: 'date',\n    list: false,\n    fullWidth: true,\n    isError: false,\n    errorText: '',\n    variant: 'outlined',\n    size: 'small',\n    isBase: true,\n    gridBreakpoints: {\n      xs: 12,\n      sm: 6,\n      md: 6\n    }\n  },\n  flytime: {\n    isRequired: true,\n    label: 'str_flyTime',\n    key: 'flytime',\n    value: null,\n    type: 'time',\n    list: false,\n    fullWidth: true,\n    isError: false,\n    errorText: '',\n    variant: 'outlined',\n    size: 'small',\n    isBase: true,\n    gridBreakpoints: {\n      xs: 12,\n      sm: 6,\n      md: 6\n    }\n  },\n  flightno: {\n    isRequired: false,\n    label: 'str_flightNo',\n    key: 'flightno',\n    value: '',\n    type: 'text',\n    list: false,\n    fullWidth: true,\n    isError: false,\n    errorText: '',\n    variant: 'outlined',\n    size: 'small',\n    isBase: true,\n    gridBreakpoints: {\n      xs: 12,\n      sm: 6,\n      md: 6\n    }\n  },\n  vehicleid: {\n    isRequired: false,\n    label: 'str_vehicle',\n    key: 'vehicleid',\n    value: '',\n    type: 'select',\n    list: false,\n    fullWidth: true,\n    isError: false,\n    errorText: '',\n    variant: 'outlined',\n    size: 'small',\n    isBase: true,\n    defValKey: 'id',\n    gridBreakpoints: {\n      xs: 12,\n      sm: 6,\n      md: 6\n    }\n  },\n  note: {\n    isRequired: false,\n    label: 'str_note',\n    key: 'note',\n    value: '',\n    type: 'textarea',\n    list: false,\n    fullWidth: true,\n    isError: false,\n    errorText: '',\n    variant: 'outlined',\n    size: 'small',\n    isBase: true,\n    gridBreakpoints: {\n      xs: 12,\n      sm: 12,\n      md: 12\n    }\n  }\n};\n\nconst arrivalTransferInitialState = _objectSpread({}, transferInitialState);\n\nconst returnTransferInitialState = _objectSpread({}, transferInitialState);\n\nconst getFormComponent = (classes, field, disabled, onChange, useArrivalTransfer = false) => {\n  var _useArrivalTransfer$t, _useArrivalTransfer$t2;\n\n  const {\n    t\n  } = useTranslation();\n\n  switch (field.type) {\n    case fieldTypes.text:\n      return __jsx(TextField, {\n        className: classes.infoTextField,\n        id: field.key,\n        name: field.key,\n        label: t(field.label),\n        required: field.isRequired,\n        disabled: disabled,\n        fullWidth: field.fullWidth,\n        size: field.size,\n        variant: field.variant,\n        value: field.value,\n        onChange: e => onChange(field.key, e.target.value, field.type),\n        error: field.isError,\n        helperText: field.isError && field.errorText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 17\n        }\n      });\n\n    case fieldTypes.textarea:\n      return __jsx(TextField, {\n        className: classes.infoTextField,\n        id: field.key,\n        name: field.key,\n        label: t(field.label),\n        required: field.isRequired,\n        disabled: disabled,\n        fullWidth: field.fullWidth,\n        size: field.size,\n        variant: field.variant,\n        value: field.value,\n        onChange: e => onChange(field.key, e.target.value, field.type),\n        error: field.isError,\n        helperText: field.isError && field.errorText,\n        multiline: true,\n        rows: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 17\n        }\n      });\n\n    case fieldTypes.select:\n      return __jsx(TextField, {\n        className: classes.infoTextField,\n        id: field.key,\n        name: field.key,\n        label: t(field.label),\n        required: field.isRequired,\n        disabled: disabled,\n        fullWidth: field.fullWidth,\n        size: field.size,\n        variant: field.variant,\n        value: field.value,\n        onChange: e => onChange(field.key, e.target.value, field.type),\n        error: field.isError,\n        helperText: field.isError && field.errorText,\n        select: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 17\n        }\n      }, field.list && field.list.length > 0 ? field.list.map((listItem, listKey) => __jsx(MenuItem, {\n        key: listKey,\n        value: listItem.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 29\n        }\n      }, listItem.description)) : __jsx(MenuItem, {\n        value: -1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 29\n        }\n      }, t('str_notFound')));\n\n    case fieldTypes.date:\n      return __jsx(LocalizationProvider, {\n        dateLibInstance: moment,\n        dateAdapter: MomentAdapter,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 17\n        }\n      }, __jsx(DatePicker, {\n        disablePast: true,\n        minDate: useArrivalTransfer && ((_useArrivalTransfer$t = useArrivalTransfer[transferInitialState.flydate.key]) === null || _useArrivalTransfer$t === void 0 ? void 0 : _useArrivalTransfer$t.value) && moment((_useArrivalTransfer$t2 = useArrivalTransfer[transferInitialState.flydate.key]) === null || _useArrivalTransfer$t2 === void 0 ? void 0 : _useArrivalTransfer$t2.value).add(1, 'days') || null,\n        required: field.isRequired,\n        allowKeyboardControl: true,\n        disabled: disabled,\n        autoOk: true,\n        id: field.key,\n        name: field.key,\n        label: t(field.label),\n        inputFormat: \"DD/MM/YYYY\",\n        openTo: 'date',\n        views: ['year', 'month', 'date'],\n        value: field.value || null,\n        onChange: newValue => onChange(field.key, newValue, field.type),\n        renderInput: props => {\n          return __jsx(TextField, _extends({}, props, {\n            className: classes.infoTextField,\n            fullWidth: field.fullWidth,\n            size: field.size,\n            variant: field.variant,\n            required: field.isRequired,\n            error: field.isError,\n            helperText: field.isError && field.errorText,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 33\n            }\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 21\n        }\n      }));\n\n    case fieldTypes.time:\n      return __jsx(LocalizationProvider, {\n        dateLibInstance: moment,\n        dateAdapter: MomentAdapter,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 17\n        }\n      }, __jsx(TimePicker, {\n        ampm: true,\n        inputFormat: \"HH:mm\",\n        mask: \"__:__\",\n        value: field.value && moment(field.value, OREST_ENDPOINT.TIMEFORMAT) || null,\n        onChange: newValue => onChange(field.key, newValue, field.type),\n        id: field.key,\n        name: field.key,\n        label: t(field.label),\n        renderInput: props => __jsx(TextField, _extends({}, props, {\n          className: classes.infoTextField,\n          fullWidth: field.fullWidth,\n          size: field.size,\n          variant: field.variant,\n          required: field.isRequired,\n          error: field.isError,\n          helperText: field.isError && field.errorText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 29\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 21\n        }\n      }));\n\n    default:\n      return;\n  }\n};\n\nconst TransferReservation = ({\n  disabled,\n  flyTransfer,\n  flyTransferReturn,\n  onCallbackArrivalTransfer,\n  onCallbackReturnTransfer,\n  onCallbackTransferReservationReset\n}) => {\n  const {\n    GENERAL_SETTINGS\n  } = useContext(WebCmsGlobal);\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const {\n    t\n  } = useTranslation();\n  const classes = useStyles();\n  const {\n    0: isLoaded,\n    1: setIsLoaded\n  } = useState(false);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    0: useArrivalTransfer,\n    1: setUseArrivalTransfer\n  } = useState(flyTransfer || arrivalTransferInitialState);\n  const {\n    0: arrivalTransferAccordionOpen,\n    1: setArrivalTransferAccordionOpen\n  } = useState(!!flyTransfer);\n  const {\n    0: useReturnTransfer,\n    1: setUseReturnTransfer\n  } = useState(flyTransferReturn || returnTransferInitialState);\n  const {\n    0: returnTransferAccordionOpen,\n    1: setReturnTransferAccordionOpen\n  } = useState(!!flyTransferReturn);\n  useEffect(() => {\n    let active = true;\n\n    if (active) {\n      async function loadListData() {\n        setIsLoading(true);\n        const airportList = await axios({\n          url: GENERAL_SETTINGS.BASE_URL + 'api/hotel/airport/list',\n          method: REQUEST_METHOD_CONST.POST\n        }).then(hotelAirportListResponse => {\n          if (active) {\n            var _hotelAirportListResp;\n\n            const hotelAirportListResponseData = hotelAirportListResponse === null || hotelAirportListResponse === void 0 ? void 0 : (_hotelAirportListResp = hotelAirportListResponse.data) === null || _hotelAirportListResp === void 0 ? void 0 : _hotelAirportListResp.data;\n\n            if (hotelAirportListResponse.data.success && hotelAirportListResponseData.length > 0) {\n              return hotelAirportListResponseData;\n            } else {\n              return false;\n            }\n          }\n        });\n        const vehicleList = await axios({\n          url: GENERAL_SETTINGS.BASE_URL + 'api/hotel/vehicle/list',\n          method: REQUEST_METHOD_CONST.POST\n        }).then(hotelVehicleListResponse => {\n          if (active) {\n            var _hotelVehicleListResp;\n\n            const hotelAirportListResponseData = hotelVehicleListResponse === null || hotelVehicleListResponse === void 0 ? void 0 : (_hotelVehicleListResp = hotelVehicleListResponse.data) === null || _hotelVehicleListResp === void 0 ? void 0 : _hotelVehicleListResp.data;\n\n            if (hotelVehicleListResponse.data.success && hotelAirportListResponseData.length > 0) {\n              return hotelAirportListResponseData;\n            } else {\n              return false;\n            }\n          }\n        });\n        setIsLoading(false);\n        return {\n          airportList: airportList || false,\n          vehicleList: vehicleList || false\n        };\n      }\n\n      if (!isLoaded) {\n        loadListData().then(list => {\n          setUseArrivalTransfer(_objectSpread(_objectSpread({}, useArrivalTransfer), {}, {\n            [arrivalTransferInitialState.airportid.key]: _objectSpread(_objectSpread({}, useArrivalTransfer[arrivalTransferInitialState.airportid.key]), {}, {\n              list: list.airportList\n            }),\n            [arrivalTransferInitialState.vehicleid.key]: _objectSpread(_objectSpread({}, useArrivalTransfer[arrivalTransferInitialState.vehicleid.key]), {}, {\n              list: list.vehicleList\n            })\n          }));\n          setUseReturnTransfer(_objectSpread(_objectSpread({}, useReturnTransfer), {}, {\n            [returnTransferInitialState.airportid.key]: _objectSpread(_objectSpread({}, useReturnTransfer[returnTransferInitialState.airportid.key]), {}, {\n              list: list.airportList\n            }),\n            [returnTransferInitialState.vehicleid.key]: _objectSpread(_objectSpread({}, useReturnTransfer[returnTransferInitialState.vehicleid.key]), {}, {\n              list: list.vehicleList\n            })\n          }));\n          setIsLoaded(true);\n        });\n      }\n    }\n\n    return () => {\n      active = false;\n    };\n  }, [isLoaded]);\n  useEffect(() => {\n    if (!flyTransfer) {\n      setUseArrivalTransfer(arrivalTransferInitialState);\n      setIsLoaded(false);\n    } else if (!flyTransferReturn) {\n      setUseReturnTransfer(returnTransferInitialState);\n      setIsLoaded(false);\n    }\n  }, [flyTransfer, flyTransferReturn]);\n\n  const getOnChangeValue = (type, value, isRequired) => {\n    switch (type) {\n      case fieldTypes.date:\n        const newDateValue = moment(value).format(OREST_ENDPOINT.DATEFORMAT);\n        return {\n          value: newDateValue,\n          isError: newDateValue === 'Invalid date',\n          errorText: newDateValue === 'Invalid date' ? `*${t('str_invalidDate')}` : false,\n          isRequired: isRequired\n        };\n\n      case fieldTypes.time:\n        const newTimeValue = moment(value).format(OREST_ENDPOINT.TIMEFORMAT);\n        return {\n          value: newTimeValue,\n          isError: newTimeValue === 'Invalid date',\n          errorText: newTimeValue === 'Invalid date' ? `*${t('str_invalidDate')}` : false,\n          isRequired: isRequired\n        };\n\n      default:\n        return {\n          value: value,\n          isError: isRequired && !!required(value),\n          errorText: isRequired && !!required(value),\n          isRequired: isRequired\n        };\n    }\n  };\n\n  const onChangeArrivalTransfer = (key, value, type) => {\n    const useData = getOnChangeValue(type, value, useArrivalTransfer[key].isRequired);\n    setUseArrivalTransfer(_objectSpread(_objectSpread({}, useArrivalTransfer), {}, {\n      [key]: _objectSpread(_objectSpread({}, useArrivalTransfer[key]), {}, {\n        value: useData.value,\n        isError: useData.isError,\n        isRequired: useData.isRequired,\n        errorText: useData.errorText\n      })\n    }));\n  };\n\n  const onChangeReturnTransfer = (key, value, type) => {\n    const useData = getOnChangeValue(type, value, useReturnTransfer[key].isRequired);\n    setUseReturnTransfer(_objectSpread(_objectSpread({}, useReturnTransfer), {}, {\n      [key]: _objectSpread(_objectSpread({}, useReturnTransfer[key]), {}, {\n        value: useData.value,\n        isError: useData.isError,\n        isRequired: useData.isRequired,\n        errorText: useData.errorText\n      })\n    }));\n  };\n\n  const transferRequiredFieldCheck = (stateData, onChange) => {\n    let isRequiredFieldMistake = false;\n\n    const newStateData = _objectSpread({}, stateData);\n\n    for (let key of Object.keys(newStateData)) {\n      const getField = newStateData[key];\n\n      if (getField.isRequired && !getField.value || getField.isError) {\n        isRequiredFieldMistake = true;\n        newStateData[key].isError = true;\n      }\n    }\n\n    if (isRequiredFieldMistake) {\n      enqueueSnackbar(t('str_pleaseCheckMandatoryFields'), {\n        variant: 'warning'\n      });\n      onChange(newStateData);\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleTransferReservationData = stateData => {\n    return stateData;\n  };\n\n  const handleArrivalTransfer = () => {\n    const isValid = transferRequiredFieldCheck(useArrivalTransfer, setUseArrivalTransfer);\n\n    if (isValid) {\n      return onCallbackArrivalTransfer(handleTransferReservationData(useArrivalTransfer));\n    }\n  };\n\n  const handleReturnTransfer = () => {\n    const isValid = transferRequiredFieldCheck(useReturnTransfer, setUseReturnTransfer);\n\n    if (isValid) {\n      return onCallbackReturnTransfer(handleTransferReservationData(useReturnTransfer));\n    }\n  };\n\n  const handleResetTransferReservation = (isReturn = false) => {\n    if (isReturn) {\n      setUseReturnTransfer(returnTransferInitialState);\n    } else {\n      setUseArrivalTransfer(arrivalTransferInitialState);\n    }\n\n    onCallbackTransferReservationReset(isReturn);\n    setIsLoaded(false);\n  };\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 13\n    }\n  }, t('str_transferService')), __jsx(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 17\n    }\n  }, __jsx(Accordion, {\n    expanded: arrivalTransferAccordionOpen,\n    onChange: () => setArrivalTransferAccordionOpen(!arrivalTransferAccordionOpen),\n    className: classes.parent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 553,\n      columnNumber: 21\n    }\n  }, __jsx(AccordionSummary, {\n    expandIcon: __jsx(ExpandMoreIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 55\n      }\n    }),\n    \"aria-controls\": \"ArrivalTransfer-content\",\n    id: \"ArrivalTransfer-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 25\n    }\n  }, __jsx(Typography, {\n    className: classes.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 29\n    }\n  }, t('str_arrivalTransfer'))), __jsx(AccordionDetails, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 25\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    direction: \"row\",\n    justify: \"space-between\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 29\n    }\n  }, Object.keys(useArrivalTransfer).map((fieldItem, keyIndex) => {\n    const useField = useArrivalTransfer[fieldItem];\n    return __jsx(Grid, {\n      item: true,\n      xs: useField.gridBreakpoints.xs,\n      sm: useField.gridBreakpoints.sm,\n      md: useField.gridBreakpoints.md,\n      key: keyIndex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 41\n      }\n    }, getFormComponent(classes, useField, disabled, onChangeArrivalTransfer));\n  }), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 33\n    }\n  }, __jsx(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    disableElevation: true,\n    onClick: () => handleArrivalTransfer(),\n    disabled: disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 37\n    }\n  }, flyTransfer ? t('str_update') : t('str_add'))), flyTransfer ? __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 37\n    }\n  }, __jsx(IconButton, {\n    \"aria-label\": \"delete\",\n    onClick: () => handleResetTransferReservation(),\n    disabled: disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 41\n    }\n  }, __jsx(DeleteIcon, {\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 45\n    }\n  }))) : null)), __jsx(Backdrop, {\n    className: classes.backdrop,\n    open: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 580,\n      columnNumber: 25\n    }\n  }, __jsx(CircularProgress, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 29\n    }\n  }))), __jsx(Accordion, {\n    expanded: returnTransferAccordionOpen,\n    onChange: () => setReturnTransferAccordionOpen(!returnTransferAccordionOpen),\n    className: classes.parent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 21\n    }\n  }, __jsx(AccordionSummary, {\n    expandIcon: __jsx(ExpandMoreIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 55\n      }\n    }),\n    \"aria-controls\": \"ReturnTransfer-content\",\n    id: \"ReturnTransfer-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 25\n    }\n  }, __jsx(Typography, {\n    className: classes.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 29\n    }\n  }, t('str_departureTransfer'))), __jsx(AccordionDetails, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 25\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    direction: \"row\",\n    justify: \"space-between\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 29\n    }\n  }, Object.keys(useReturnTransfer).map((fieldItem, keyIndex) => {\n    const useField = useReturnTransfer[fieldItem];\n    return __jsx(Grid, {\n      item: true,\n      xs: useField.gridBreakpoints.xs,\n      sm: useField.gridBreakpoints.sm,\n      md: useField.gridBreakpoints.md,\n      key: keyIndex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 41\n      }\n    }, getFormComponent(classes, useField, disabled, onChangeReturnTransfer, useArrivalTransfer));\n  }), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 33\n    }\n  }, __jsx(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    disableElevation: true,\n    onClick: () => handleReturnTransfer(),\n    disabled: disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 37\n    }\n  }, flyTransferReturn ? t('str_update') : t('str_add'))), flyTransferReturn ? __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 604,\n      columnNumber: 37\n    }\n  }, __jsx(IconButton, {\n    \"aria-label\": \"delete\",\n    onClick: () => handleResetTransferReservation(true),\n    disabled: disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 605,\n      columnNumber: 41\n    }\n  }, __jsx(DeleteIcon, {\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 45\n    }\n  }))) : null)), __jsx(Backdrop, {\n    className: classes.backdrop,\n    open: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 611,\n      columnNumber: 25\n    }\n  }, __jsx(CircularProgress, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 612,\n      columnNumber: 29\n    }\n  }))))));\n};\n\nexport default TransferReservation;","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/transfer-reservation/index.js"],"names":["React","useContext","useEffect","useState","Accordion","AccordionDetails","AccordionSummary","Button","Grid","MenuItem","TextField","Typography","IconButton","axios","WebCmsGlobal","useTranslation","ExpandMoreIcon","makeStyles","moment","MomentAdapter","DatePicker","LocalizationProvider","TimePicker","useSnackbar","OREST_ENDPOINT","REQUEST_METHOD_CONST","required","DeleteIcon","Backdrop","CircularProgress","useStyles","root","marginTop","border","background","infoTextField","borderRadius","createAccountHelperText","textAlign","textRed","color","parent","position","zIndex","backdrop","fieldTypes","text","textarea","select","date","time","transferInitialState","airportid","isRequired","label","key","value","type","list","fullWidth","isError","errorText","variant","size","isBase","defValKey","gridBreakpoints","xs","sm","md","airline","flydate","flytime","flightno","vehicleid","note","arrivalTransferInitialState","returnTransferInitialState","getFormComponent","classes","field","disabled","onChange","useArrivalTransfer","t","e","target","length","map","listItem","listKey","id","description","add","newValue","props","TIMEFORMAT","TransferReservation","flyTransfer","flyTransferReturn","onCallbackArrivalTransfer","onCallbackReturnTransfer","onCallbackTransferReservationReset","GENERAL_SETTINGS","enqueueSnackbar","isLoaded","setIsLoaded","isLoading","setIsLoading","setUseArrivalTransfer","arrivalTransferAccordionOpen","setArrivalTransferAccordionOpen","useReturnTransfer","setUseReturnTransfer","returnTransferAccordionOpen","setReturnTransferAccordionOpen","active","loadListData","airportList","url","BASE_URL","method","POST","then","hotelAirportListResponse","hotelAirportListResponseData","data","success","vehicleList","hotelVehicleListResponse","getOnChangeValue","newDateValue","format","DATEFORMAT","newTimeValue","onChangeArrivalTransfer","useData","onChangeReturnTransfer","transferRequiredFieldCheck","stateData","isRequiredFieldMistake","newStateData","Object","keys","getField","handleTransferReservationData","handleArrivalTransfer","isValid","handleReturnTransfer","handleResetTransferReservation","isReturn","heading","fieldItem","keyIndex","useField"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SACIC,SADJ,EAEIC,gBAFJ,EAGIC,gBAHJ,EAIIC,MAJJ,EAKIC,IALJ,EAMIC,QANJ,EAOIC,SAPJ,EAQIC,UARJ,EASIC,UATJ,QAUO,mBAVP;AAWA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,cAAP,MAA2B,uCAA3B;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,UAAT,EAAqBC,oBAArB,EAA2CC,UAA3C,QAA6D,sBAA7D;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,SAASC,cAAT,EAAyBC,oBAAzB,QAAqD,uBAArD;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AAEA,MAAMC,SAAS,GAAGb,UAAU,CAAC,OAAO;AAChCc,EAAAA,IAAI,EAAE;AACFC,IAAAA,SAAS,EAAE,EADT;AAEFC,IAAAA,MAAM,EAAE,gBAFN;AAGFC,IAAAA,UAAU,EAAE;AAHV,GAD0B;AAMhCC,EAAAA,aAAa,EAAE;AACXD,IAAAA,UAAU,EAAE,SADD;AAEX,kBAAc;AACVE,MAAAA,YAAY,EAAE;AADJ;AAFH,GANiB;AAYhCC,EAAAA,uBAAuB,EAAE;AACrBC,IAAAA,SAAS,EAAE;AADU,GAZO;AAehCC,EAAAA,OAAO,EAAE;AACLC,IAAAA,KAAK,EAAE;AADF,GAfuB;AAkBhCC,EAAAA,MAAM,EAAE;AACJC,IAAAA,QAAQ,EAAE,UADN;AAEJC,IAAAA,MAAM,EAAE;AAFJ,GAlBwB;AAsBhCC,EAAAA,QAAQ,EAAE;AACNF,IAAAA,QAAQ,EAAE,UADJ;AAENC,IAAAA,MAAM,EAAE;AAFF;AAtBsB,CAAP,CAAD,CAA5B;AA4BA,MAAME,UAAU,GAAG;AACfC,EAAAA,IAAI,EAAE,MADS;AAEfC,EAAAA,QAAQ,EAAE,UAFK;AAGfC,EAAAA,MAAM,EAAE,QAHO;AAIfC,EAAAA,IAAI,EAAE,MAJS;AAKfC,EAAAA,IAAI,EAAE;AALS,CAAnB;AAQA,MAAMC,oBAAoB,GAAG;AACzBC,EAAAA,SAAS,EAAE;AACPC,IAAAA,UAAU,EAAE,IADL;AAEPC,IAAAA,KAAK,EAAE,cAFA;AAGPC,IAAAA,GAAG,EAAE,WAHE;AAIPC,IAAAA,KAAK,EAAE,EAJA;AAKPC,IAAAA,IAAI,EAAE,QALC;AAMPC,IAAAA,IAAI,EAAE,KANC;AAOPC,IAAAA,SAAS,EAAE,IAPJ;AAQPC,IAAAA,OAAO,EAAE,KARF;AASPC,IAAAA,SAAS,EAAE,EATJ;AAUPC,IAAAA,OAAO,EAAE,UAVF;AAWPC,IAAAA,IAAI,EAAE,OAXC;AAYPC,IAAAA,MAAM,EAAE,IAZD;AAaPC,IAAAA,SAAS,EAAE,IAbJ;AAcPC,IAAAA,eAAe,EAAE;AACbC,MAAAA,EAAE,EAAE,EADS;AAEbC,MAAAA,EAAE,EAAE,CAFS;AAGbC,MAAAA,EAAE,EAAE;AAHS;AAdV,GADc;AAqBzBC,EAAAA,OAAO,EAAE;AACLjB,IAAAA,UAAU,EAAE,IADP;AAELC,IAAAA,KAAK,EAAE,aAFF;AAGLC,IAAAA,GAAG,EAAE,SAHA;AAILC,IAAAA,KAAK,EAAE,EAJF;AAKLC,IAAAA,IAAI,EAAE,MALD;AAMLC,IAAAA,IAAI,EAAE,KAND;AAOLC,IAAAA,SAAS,EAAE,IAPN;AAQLC,IAAAA,OAAO,EAAE,KARJ;AASLC,IAAAA,SAAS,EAAE,EATN;AAULC,IAAAA,OAAO,EAAE,UAVJ;AAWLC,IAAAA,IAAI,EAAE,OAXD;AAYLC,IAAAA,MAAM,EAAE,IAZH;AAaLE,IAAAA,eAAe,EAAE;AACbC,MAAAA,EAAE,EAAE,EADS;AAEbC,MAAAA,EAAE,EAAE,CAFS;AAGbC,MAAAA,EAAE,EAAE;AAHS;AAbZ,GArBgB;AAwCzBE,EAAAA,OAAO,EAAE;AACLlB,IAAAA,UAAU,EAAE,IADP;AAELC,IAAAA,KAAK,EAAE,aAFF;AAGLC,IAAAA,GAAG,EAAE,SAHA;AAILC,IAAAA,KAAK,EAAE,IAJF;AAKLC,IAAAA,IAAI,EAAE,MALD;AAMLC,IAAAA,IAAI,EAAE,KAND;AAOLC,IAAAA,SAAS,EAAE,IAPN;AAQLC,IAAAA,OAAO,EAAE,KARJ;AASLC,IAAAA,SAAS,EAAE,EATN;AAULC,IAAAA,OAAO,EAAE,UAVJ;AAWLC,IAAAA,IAAI,EAAE,OAXD;AAYLC,IAAAA,MAAM,EAAE,IAZH;AAaLE,IAAAA,eAAe,EAAE;AACbC,MAAAA,EAAE,EAAE,EADS;AAEbC,MAAAA,EAAE,EAAE,CAFS;AAGbC,MAAAA,EAAE,EAAE;AAHS;AAbZ,GAxCgB;AA2DzBG,EAAAA,OAAO,EAAE;AACLnB,IAAAA,UAAU,EAAE,IADP;AAELC,IAAAA,KAAK,EAAE,aAFF;AAGLC,IAAAA,GAAG,EAAE,SAHA;AAILC,IAAAA,KAAK,EAAE,IAJF;AAKLC,IAAAA,IAAI,EAAE,MALD;AAMLC,IAAAA,IAAI,EAAE,KAND;AAOLC,IAAAA,SAAS,EAAE,IAPN;AAQLC,IAAAA,OAAO,EAAE,KARJ;AASLC,IAAAA,SAAS,EAAE,EATN;AAULC,IAAAA,OAAO,EAAE,UAVJ;AAWLC,IAAAA,IAAI,EAAE,OAXD;AAYLC,IAAAA,MAAM,EAAE,IAZH;AAaLE,IAAAA,eAAe,EAAE;AACbC,MAAAA,EAAE,EAAE,EADS;AAEbC,MAAAA,EAAE,EAAE,CAFS;AAGbC,MAAAA,EAAE,EAAE;AAHS;AAbZ,GA3DgB;AA8EzBI,EAAAA,QAAQ,EAAE;AACNpB,IAAAA,UAAU,EAAE,KADN;AAENC,IAAAA,KAAK,EAAE,cAFD;AAGNC,IAAAA,GAAG,EAAE,UAHC;AAINC,IAAAA,KAAK,EAAE,EAJD;AAKNC,IAAAA,IAAI,EAAE,MALA;AAMNC,IAAAA,IAAI,EAAE,KANA;AAONC,IAAAA,SAAS,EAAE,IAPL;AAQNC,IAAAA,OAAO,EAAE,KARH;AASNC,IAAAA,SAAS,EAAE,EATL;AAUNC,IAAAA,OAAO,EAAE,UAVH;AAWNC,IAAAA,IAAI,EAAE,OAXA;AAYNC,IAAAA,MAAM,EAAE,IAZF;AAaNE,IAAAA,eAAe,EAAE;AACbC,MAAAA,EAAE,EAAE,EADS;AAEbC,MAAAA,EAAE,EAAE,CAFS;AAGbC,MAAAA,EAAE,EAAE;AAHS;AAbX,GA9Ee;AAiGzBK,EAAAA,SAAS,EAAE;AACPrB,IAAAA,UAAU,EAAE,KADL;AAEPC,IAAAA,KAAK,EAAE,aAFA;AAGPC,IAAAA,GAAG,EAAE,WAHE;AAIPC,IAAAA,KAAK,EAAE,EAJA;AAKPC,IAAAA,IAAI,EAAE,QALC;AAMPC,IAAAA,IAAI,EAAE,KANC;AAOPC,IAAAA,SAAS,EAAE,IAPJ;AAQPC,IAAAA,OAAO,EAAE,KARF;AASPC,IAAAA,SAAS,EAAE,EATJ;AAUPC,IAAAA,OAAO,EAAE,UAVF;AAWPC,IAAAA,IAAI,EAAE,OAXC;AAYPC,IAAAA,MAAM,EAAE,IAZD;AAaPC,IAAAA,SAAS,EAAE,IAbJ;AAcPC,IAAAA,eAAe,EAAE;AACbC,MAAAA,EAAE,EAAE,EADS;AAEbC,MAAAA,EAAE,EAAE,CAFS;AAGbC,MAAAA,EAAE,EAAE;AAHS;AAdV,GAjGc;AAqHzBM,EAAAA,IAAI,EAAE;AACFtB,IAAAA,UAAU,EAAE,KADV;AAEFC,IAAAA,KAAK,EAAE,UAFL;AAGFC,IAAAA,GAAG,EAAE,MAHH;AAIFC,IAAAA,KAAK,EAAE,EAJL;AAKFC,IAAAA,IAAI,EAAE,UALJ;AAMFC,IAAAA,IAAI,EAAE,KANJ;AAOFC,IAAAA,SAAS,EAAE,IAPT;AAQFC,IAAAA,OAAO,EAAE,KARP;AASFC,IAAAA,SAAS,EAAE,EATT;AAUFC,IAAAA,OAAO,EAAE,UAVP;AAWFC,IAAAA,IAAI,EAAE,OAXJ;AAYFC,IAAAA,MAAM,EAAE,IAZN;AAaFE,IAAAA,eAAe,EAAE;AACbC,MAAAA,EAAE,EAAE,EADS;AAEbC,MAAAA,EAAE,EAAE,EAFS;AAGbC,MAAAA,EAAE,EAAE;AAHS;AAbf;AArHmB,CAA7B;;AA0IA,MAAMO,2BAA2B,qBAAOzB,oBAAP,CAAjC;;AAEA,MAAM0B,0BAA0B,qBAAO1B,oBAAP,CAAhC;;AAEA,MAAM2B,gBAAgB,GAAG,CAACC,OAAD,EAAUC,KAAV,EAAiBC,QAAjB,EAA2BC,QAA3B,EAAqCC,kBAAkB,GAAG,KAA1D,KAAoE;AAAA;;AACzF,QAAM;AAAEC,IAAAA;AAAF,MAAQrE,cAAc,EAA5B;;AACA,UAAQiE,KAAK,CAACvB,IAAd;AACI,SAAKZ,UAAU,CAACC,IAAhB;AACI,aACI,MAAC,SAAD;AACI,QAAA,SAAS,EAAEiC,OAAO,CAAC5C,aADvB;AAEI,QAAA,EAAE,EAAE6C,KAAK,CAACzB,GAFd;AAGI,QAAA,IAAI,EAAEyB,KAAK,CAACzB,GAHhB;AAII,QAAA,KAAK,EAAE6B,CAAC,CAACJ,KAAK,CAAC1B,KAAP,CAJZ;AAKI,QAAA,QAAQ,EAAE0B,KAAK,CAAC3B,UALpB;AAMI,QAAA,QAAQ,EAAE4B,QANd;AAOI,QAAA,SAAS,EAAED,KAAK,CAACrB,SAPrB;AAQI,QAAA,IAAI,EAAEqB,KAAK,CAACjB,IARhB;AASI,QAAA,OAAO,EAAEiB,KAAK,CAAClB,OATnB;AAUI,QAAA,KAAK,EAAEkB,KAAK,CAACxB,KAVjB;AAWI,QAAA,QAAQ,EAAG6B,CAAD,IAAOH,QAAQ,CAACF,KAAK,CAACzB,GAAP,EAAY8B,CAAC,CAACC,MAAF,CAAS9B,KAArB,EAA4BwB,KAAK,CAACvB,IAAlC,CAX7B;AAYI,QAAA,KAAK,EAAEuB,KAAK,CAACpB,OAZjB;AAaI,QAAA,UAAU,EAAEoB,KAAK,CAACpB,OAAN,IAAiBoB,KAAK,CAACnB,SAbvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;;AAiBJ,SAAKhB,UAAU,CAACE,QAAhB;AACI,aACI,MAAC,SAAD;AACI,QAAA,SAAS,EAAEgC,OAAO,CAAC5C,aADvB;AAEI,QAAA,EAAE,EAAE6C,KAAK,CAACzB,GAFd;AAGI,QAAA,IAAI,EAAEyB,KAAK,CAACzB,GAHhB;AAII,QAAA,KAAK,EAAE6B,CAAC,CAACJ,KAAK,CAAC1B,KAAP,CAJZ;AAKI,QAAA,QAAQ,EAAE0B,KAAK,CAAC3B,UALpB;AAMI,QAAA,QAAQ,EAAE4B,QANd;AAOI,QAAA,SAAS,EAAED,KAAK,CAACrB,SAPrB;AAQI,QAAA,IAAI,EAAEqB,KAAK,CAACjB,IARhB;AASI,QAAA,OAAO,EAAEiB,KAAK,CAAClB,OATnB;AAUI,QAAA,KAAK,EAAEkB,KAAK,CAACxB,KAVjB;AAWI,QAAA,QAAQ,EAAG6B,CAAD,IAAOH,QAAQ,CAACF,KAAK,CAACzB,GAAP,EAAY8B,CAAC,CAACC,MAAF,CAAS9B,KAArB,EAA4BwB,KAAK,CAACvB,IAAlC,CAX7B;AAYI,QAAA,KAAK,EAAEuB,KAAK,CAACpB,OAZjB;AAaI,QAAA,UAAU,EAAEoB,KAAK,CAACpB,OAAN,IAAiBoB,KAAK,CAACnB,SAbvC;AAcI,QAAA,SAAS,MAdb;AAeI,QAAA,IAAI,EAAE,CAfV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;;AAmBJ,SAAKhB,UAAU,CAACG,MAAhB;AACI,aACI,MAAC,SAAD;AACI,QAAA,SAAS,EAAE+B,OAAO,CAAC5C,aADvB;AAEI,QAAA,EAAE,EAAE6C,KAAK,CAACzB,GAFd;AAGI,QAAA,IAAI,EAAEyB,KAAK,CAACzB,GAHhB;AAII,QAAA,KAAK,EAAE6B,CAAC,CAACJ,KAAK,CAAC1B,KAAP,CAJZ;AAKI,QAAA,QAAQ,EAAE0B,KAAK,CAAC3B,UALpB;AAMI,QAAA,QAAQ,EAAE4B,QANd;AAOI,QAAA,SAAS,EAAED,KAAK,CAACrB,SAPrB;AAQI,QAAA,IAAI,EAAEqB,KAAK,CAACjB,IARhB;AASI,QAAA,OAAO,EAAEiB,KAAK,CAAClB,OATnB;AAUI,QAAA,KAAK,EAAEkB,KAAK,CAACxB,KAVjB;AAWI,QAAA,QAAQ,EAAG6B,CAAD,IAAOH,QAAQ,CAACF,KAAK,CAACzB,GAAP,EAAY8B,CAAC,CAACC,MAAF,CAAS9B,KAArB,EAA4BwB,KAAK,CAACvB,IAAlC,CAX7B;AAYI,QAAA,KAAK,EAAEuB,KAAK,CAACpB,OAZjB;AAaI,QAAA,UAAU,EAAEoB,KAAK,CAACpB,OAAN,IAAiBoB,KAAK,CAACnB,SAbvC;AAcI,QAAA,MAAM,MAdV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAgBKmB,KAAK,CAACtB,IAAN,IAAcsB,KAAK,CAACtB,IAAN,CAAW6B,MAAX,GAAoB,CAAlC,GACGP,KAAK,CAACtB,IAAN,CAAW8B,GAAX,CAAe,CAACC,QAAD,EAAWC,OAAX,KACX,MAAC,QAAD;AAAU,QAAA,GAAG,EAAEA,OAAf;AAAwB,QAAA,KAAK,EAAED,QAAQ,CAACE,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6CF,QAAQ,CAACG,WAAtD,CADJ,CADH,GAGO,MAAC,QAAD;AAAU,QAAA,KAAK,EAAE,CAAC,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsBR,CAAC,CAAC,cAAD,CAAvB,CAnBZ,CADJ;;AAuBJ,SAAKvC,UAAU,CAACI,IAAhB;AACI,aACI,MAAC,oBAAD;AAAsB,QAAA,eAAe,EAAE/B,MAAvC;AAA+C,QAAA,WAAW,EAAEC,aAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,UAAD;AACI,QAAA,WAAW,MADf;AAEI,QAAA,OAAO,EAAEgE,kBAAkB,8BAAIA,kBAAkB,CAAChC,oBAAoB,CAACoB,OAArB,CAA6BhB,GAA9B,CAAtB,0DAAI,sBAAsDC,KAA1D,CAAlB,IAAqFtC,MAAM,2BAACiE,kBAAkB,CAAChC,oBAAoB,CAACoB,OAArB,CAA6BhB,GAA9B,CAAnB,2DAAC,uBAAsDC,KAAvD,CAAN,CAAoEqC,GAApE,CAAwE,CAAxE,EAA2E,MAA3E,CAArF,IAA2K,IAFxL;AAGI,QAAA,QAAQ,EAAEb,KAAK,CAAC3B,UAHpB;AAII,QAAA,oBAAoB,MAJxB;AAKI,QAAA,QAAQ,EAAE4B,QALd;AAMI,QAAA,MAAM,MANV;AAOI,QAAA,EAAE,EAAED,KAAK,CAACzB,GAPd;AAQI,QAAA,IAAI,EAAEyB,KAAK,CAACzB,GARhB;AASI,QAAA,KAAK,EAAE6B,CAAC,CAACJ,KAAK,CAAC1B,KAAP,CATZ;AAUI,QAAA,WAAW,EAAC,YAVhB;AAWI,QAAA,MAAM,EAAE,MAXZ;AAYI,QAAA,KAAK,EAAE,CAAC,MAAD,EAAS,OAAT,EAAkB,MAAlB,CAZX;AAaI,QAAA,KAAK,EAAE0B,KAAK,CAACxB,KAAN,IAAe,IAb1B;AAcI,QAAA,QAAQ,EAAGsC,QAAD,IAAcZ,QAAQ,CAACF,KAAK,CAACzB,GAAP,EAAYuC,QAAZ,EAAsBd,KAAK,CAACvB,IAA5B,CAdpC;AAeI,QAAA,WAAW,EAAGsC,KAAD,IAAW;AACpB,iBACI,MAAC,SAAD,eACQA,KADR;AAEI,YAAA,SAAS,EAAEhB,OAAO,CAAC5C,aAFvB;AAGI,YAAA,SAAS,EAAE6C,KAAK,CAACrB,SAHrB;AAII,YAAA,IAAI,EAAEqB,KAAK,CAACjB,IAJhB;AAKI,YAAA,OAAO,EAAEiB,KAAK,CAAClB,OALnB;AAMI,YAAA,QAAQ,EAAEkB,KAAK,CAAC3B,UANpB;AAOI,YAAA,KAAK,EAAE2B,KAAK,CAACpB,OAPjB;AAQI,YAAA,UAAU,EAAEoB,KAAK,CAACpB,OAAN,IAAiBoB,KAAK,CAACnB,SARvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ;AAYH,SA5BL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;;AAkCJ,SAAKhB,UAAU,CAACK,IAAhB;AACI,aACI,MAAC,oBAAD;AAAsB,QAAA,eAAe,EAAEhC,MAAvC;AAA+C,QAAA,WAAW,EAAEC,aAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,UAAD;AACI,QAAA,IAAI,EAAE,IADV;AAEI,QAAA,WAAW,EAAC,OAFhB;AAGI,QAAA,IAAI,EAAC,OAHT;AAII,QAAA,KAAK,EAAE6D,KAAK,CAACxB,KAAN,IAAetC,MAAM,CAAC8D,KAAK,CAACxB,KAAP,EAAchC,cAAc,CAACwE,UAA7B,CAArB,IAAiE,IAJ5E;AAKI,QAAA,QAAQ,EAAGF,QAAD,IAAcZ,QAAQ,CAACF,KAAK,CAACzB,GAAP,EAAYuC,QAAZ,EAAsBd,KAAK,CAACvB,IAA5B,CALpC;AAMI,QAAA,EAAE,EAAEuB,KAAK,CAACzB,GANd;AAOI,QAAA,IAAI,EAAEyB,KAAK,CAACzB,GAPhB;AAQI,QAAA,KAAK,EAAE6B,CAAC,CAACJ,KAAK,CAAC1B,KAAP,CARZ;AASI,QAAA,WAAW,EAAGyC,KAAD,IACT,MAAC,SAAD,eACQA,KADR;AAEI,UAAA,SAAS,EAAEhB,OAAO,CAAC5C,aAFvB;AAGI,UAAA,SAAS,EAAE6C,KAAK,CAACrB,SAHrB;AAII,UAAA,IAAI,EAAEqB,KAAK,CAACjB,IAJhB;AAKI,UAAA,OAAO,EAAEiB,KAAK,CAAClB,OALnB;AAMI,UAAA,QAAQ,EAAEkB,KAAK,CAAC3B,UANpB;AAOI,UAAA,KAAK,EAAE2B,KAAK,CAACpB,OAPjB;AAQI,UAAA,UAAU,EAAEoB,KAAK,CAACpB,OAAN,IAAiBoB,KAAK,CAACnB,SARvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAVR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;;AA0BJ;AACI;AA9HR;AAgIH,CAlID;;AAoIA,MAAOoC,mBAAmB,GAAG,CAAC;AAAChB,EAAAA,QAAD;AAAWiB,EAAAA,WAAX;AAAwBC,EAAAA,iBAAxB;AAA2CC,EAAAA,yBAA3C;AAAsEC,EAAAA,wBAAtE;AAAgGC,EAAAA;AAAhG,CAAD,KAAyI;AAClK,QAAM;AAAEC,IAAAA;AAAF,MAAuBtG,UAAU,CAACa,YAAD,CAAvC;AACA,QAAM;AAAE0F,IAAAA;AAAF,MAAsBjF,WAAW,EAAvC;AACA,QAAM;AAAE6D,IAAAA;AAAF,MAAQrE,cAAc,EAA5B;AACA,QAAMgE,OAAO,GAAGjD,SAAS,EAAzB;AAEA,QAAM;AAAA,OAAC2E,QAAD;AAAA,OAAWC;AAAX,MAA0BvG,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM;AAAA,OAACwG,SAAD;AAAA,OAAYC;AAAZ,MAA4BzG,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM;AAAA,OAACgF,kBAAD;AAAA,OAAqB0B;AAArB,MAA8C1G,QAAQ,CAAC+F,WAAW,IAAItB,2BAAhB,CAA5D;AACA,QAAM;AAAA,OAACkC,4BAAD;AAAA,OAA+BC;AAA/B,MAAkE5G,QAAQ,CAAC,CAAC,CAAC+F,WAAH,CAAhF;AAEA,QAAM;AAAA,OAACc,iBAAD;AAAA,OAAoBC;AAApB,MAA4C9G,QAAQ,CAACgG,iBAAiB,IAAItB,0BAAtB,CAA1D;AACA,QAAM;AAAA,OAACqC,2BAAD;AAAA,OAA8BC;AAA9B,MAAgEhH,QAAQ,CAAC,CAAC,CAACgG,iBAAH,CAA9E;AAEAjG,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIkH,MAAM,GAAG,IAAb;;AACA,QAAIA,MAAJ,EAAY;AACR,qBAAeC,YAAf,GAA8B;AAC3BT,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,cAAMU,WAAW,GAAG,MAAMzG,KAAK,CAAC;AAC3B0G,UAAAA,GAAG,EAAEhB,gBAAgB,CAACiB,QAAjB,GAA4B,wBADN;AAE3BC,UAAAA,MAAM,EAAEhG,oBAAoB,CAACiG;AAFF,SAAD,CAAL,CAGtBC,IAHsB,CAGhBC,wBAAD,IAA8B;AAClC,cAAIR,MAAJ,EAAY;AAAA;;AACR,kBAAMS,4BAA4B,GAAGD,wBAAH,aAAGA,wBAAH,gDAAGA,wBAAwB,CAAEE,IAA7B,0DAAG,sBAAgCA,IAArE;;AACA,gBAAIF,wBAAwB,CAACE,IAAzB,CAA8BC,OAA9B,IAAyCF,4BAA4B,CAACtC,MAA7B,GAAsC,CAAnF,EAAsF;AAClF,qBAAOsC,4BAAP;AACH,aAFD,MAEK;AACD,qBAAO,KAAP;AACH;AACJ;AACJ,SAZwB,CAA1B;AAcC,cAAMG,WAAW,GAAI,MAAMnH,KAAK,CAAC;AAC7B0G,UAAAA,GAAG,EAAEhB,gBAAgB,CAACiB,QAAjB,GAA4B,wBADJ;AAE7BC,UAAAA,MAAM,EAAEhG,oBAAoB,CAACiG;AAFA,SAAD,CAAL,CAGxBC,IAHwB,CAGlBM,wBAAD,IAA8B;AAClC,cAAIb,MAAJ,EAAY;AAAA;;AACR,kBAAMS,4BAA4B,GAAGI,wBAAH,aAAGA,wBAAH,gDAAGA,wBAAwB,CAAEH,IAA7B,0DAAG,sBAAgCA,IAArE;;AACA,gBAAIG,wBAAwB,CAACH,IAAzB,CAA8BC,OAA9B,IAAyCF,4BAA4B,CAACtC,MAA7B,GAAsC,CAAnF,EAAsF;AAClF,qBAAOsC,4BAAP;AACH,aAFD,MAEK;AACD,qBAAO,KAAP;AACH;AACJ;AACJ,SAZ0B,CAA3B;AAcAjB,QAAAA,YAAY,CAAC,KAAD,CAAZ;AAEA,eAAO;AACHU,UAAAA,WAAW,EAAEA,WAAW,IAAI,KADzB;AAEHU,UAAAA,WAAW,EAAEA,WAAW,IAAI;AAFzB,SAAP;AAIH;;AAED,UAAG,CAACvB,QAAJ,EAAa;AACTY,QAAAA,YAAY,GAAGM,IAAf,CAAqBjE,IAAD,IAAU;AAC1BmD,UAAAA,qBAAqB,iCACd1B,kBADc;AAEjB,aAACP,2BAA2B,CAACxB,SAA5B,CAAsCG,GAAvC,mCACO4B,kBAAkB,CAACP,2BAA2B,CAACxB,SAA5B,CAAsCG,GAAvC,CADzB;AAEIG,cAAAA,IAAI,EAAEA,IAAI,CAAC4D;AAFf,cAFiB;AAMjB,aAAC1C,2BAA2B,CAACF,SAA5B,CAAsCnB,GAAvC,mCACO4B,kBAAkB,CAACP,2BAA2B,CAACF,SAA5B,CAAsCnB,GAAvC,CADzB;AAEIG,cAAAA,IAAI,EAAEA,IAAI,CAACsE;AAFf;AANiB,aAArB;AAYAf,UAAAA,oBAAoB,iCACbD,iBADa;AAEhB,aAACnC,0BAA0B,CAACzB,SAA3B,CAAqCG,GAAtC,mCACOyD,iBAAiB,CAACnC,0BAA0B,CAACzB,SAA3B,CAAqCG,GAAtC,CADxB;AAEIG,cAAAA,IAAI,EAAEA,IAAI,CAAC4D;AAFf,cAFgB;AAMhB,aAACzC,0BAA0B,CAACH,SAA3B,CAAqCnB,GAAtC,mCACOyD,iBAAiB,CAACnC,0BAA0B,CAACH,SAA3B,CAAqCnB,GAAtC,CADxB;AAEIG,cAAAA,IAAI,EAAEA,IAAI,CAACsE;AAFf;AANgB,aAApB;AAYAtB,UAAAA,WAAW,CAAC,IAAD,CAAX;AACH,SA1BD;AA2BH;AACJ;;AAED,WAAO,MAAM;AACTU,MAAAA,MAAM,GAAG,KAAT;AACH,KAFD;AAGH,GA3EQ,EA2EN,CAACX,QAAD,CA3EM,CAAT;AA6EAvG,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAI,CAACgG,WAAL,EAAkB;AACdW,MAAAA,qBAAqB,CAACjC,2BAAD,CAArB;AACA8B,MAAAA,WAAW,CAAC,KAAD,CAAX;AACH,KAHD,MAGO,IAAI,CAACP,iBAAL,EAAwB;AAC3Bc,MAAAA,oBAAoB,CAACpC,0BAAD,CAApB;AACA6B,MAAAA,WAAW,CAAC,KAAD,CAAX;AACH;AAEJ,GAVQ,EAUN,CAACR,WAAD,EAAcC,iBAAd,CAVM,CAAT;;AAYA,QAAM+B,gBAAgB,GAAG,CAACzE,IAAD,EAAOD,KAAP,EAAcH,UAAd,KAA6B;AAClD,YAAQI,IAAR;AACI,WAAKZ,UAAU,CAACI,IAAhB;AACI,cAAMkF,YAAY,GAAGjH,MAAM,CAACsC,KAAD,CAAN,CAAc4E,MAAd,CAAqB5G,cAAc,CAAC6G,UAApC,CAArB;AACA,eAAO;AACH7E,UAAAA,KAAK,EAAE2E,YADJ;AAEHvE,UAAAA,OAAO,EAAEuE,YAAY,KAAK,cAFvB;AAGHtE,UAAAA,SAAS,EAAEsE,YAAY,KAAK,cAAjB,GAAmC,IAAG/C,CAAC,CAAC,iBAAD,CAAoB,EAA3D,GAA+D,KAHvE;AAIH/B,UAAAA,UAAU,EAAEA;AAJT,SAAP;;AAMJ,WAAKR,UAAU,CAACK,IAAhB;AACI,cAAMoF,YAAY,GAAGpH,MAAM,CAACsC,KAAD,CAAN,CAAc4E,MAAd,CAAqB5G,cAAc,CAACwE,UAApC,CAArB;AACA,eAAO;AACHxC,UAAAA,KAAK,EAAE8E,YADJ;AAEH1E,UAAAA,OAAO,EAAE0E,YAAY,KAAK,cAFvB;AAGHzE,UAAAA,SAAS,EAAEyE,YAAY,KAAK,cAAjB,GAAmC,IAAGlD,CAAC,CAAC,iBAAD,CAAoB,EAA3D,GAA+D,KAHvE;AAIH/B,UAAAA,UAAU,EAAEA;AAJT,SAAP;;AAMJ;AACI,eAAO;AACHG,UAAAA,KAAK,EAAEA,KADJ;AAEHI,UAAAA,OAAO,EAAEP,UAAU,IAAI,CAAC,CAAC3B,QAAQ,CAAC8B,KAAD,CAF9B;AAGHK,UAAAA,SAAS,EAAER,UAAU,IAAI,CAAC,CAAC3B,QAAQ,CAAC8B,KAAD,CAHhC;AAIHH,UAAAA,UAAU,EAAEA;AAJT,SAAP;AAlBR;AAyBH,GA1BD;;AA4BA,QAAMkF,uBAAuB,GAAG,CAAChF,GAAD,EAAMC,KAAN,EAAaC,IAAb,KAAsB;AAClD,UAAM+E,OAAO,GAAGN,gBAAgB,CAACzE,IAAD,EAAOD,KAAP,EAAc2B,kBAAkB,CAAC5B,GAAD,CAAlB,CAAwBF,UAAtC,CAAhC;AACAwD,IAAAA,qBAAqB,iCACd1B,kBADc;AAEjB,OAAC5B,GAAD,mCACO4B,kBAAkB,CAAC5B,GAAD,CADzB;AAEIC,QAAAA,KAAK,EAAEgF,OAAO,CAAChF,KAFnB;AAGII,QAAAA,OAAO,EAAE4E,OAAO,CAAC5E,OAHrB;AAIIP,QAAAA,UAAU,EAAEmF,OAAO,CAACnF,UAJxB;AAKIQ,QAAAA,SAAS,EAAE2E,OAAO,CAAC3E;AALvB;AAFiB,OAArB;AAUH,GAZD;;AAcA,QAAM4E,sBAAsB,GAAG,CAAClF,GAAD,EAAMC,KAAN,EAAaC,IAAb,KAAsB;AACjD,UAAM+E,OAAO,GAAGN,gBAAgB,CAACzE,IAAD,EAAOD,KAAP,EAAcwD,iBAAiB,CAACzD,GAAD,CAAjB,CAAuBF,UAArC,CAAhC;AACA4D,IAAAA,oBAAoB,iCACbD,iBADa;AAEhB,OAACzD,GAAD,mCACOyD,iBAAiB,CAACzD,GAAD,CADxB;AAEIC,QAAAA,KAAK,EAAEgF,OAAO,CAAChF,KAFnB;AAGII,QAAAA,OAAO,EAAE4E,OAAO,CAAC5E,OAHrB;AAIIP,QAAAA,UAAU,EAAEmF,OAAO,CAACnF,UAJxB;AAKIQ,QAAAA,SAAS,EAAE2E,OAAO,CAAC3E;AALvB;AAFgB,OAApB;AAUH,GAZD;;AAcA,QAAM6E,0BAA0B,GAAG,CAACC,SAAD,EAAYzD,QAAZ,KAAyB;AACxD,QAAI0D,sBAAsB,GAAG,KAA7B;;AACA,UAAMC,YAAY,qBAAOF,SAAP,CAAlB;;AAEA,SAAK,IAAIpF,GAAT,IAAgBuF,MAAM,CAACC,IAAP,CAAYF,YAAZ,CAAhB,EAA2C;AACvC,YAAMG,QAAQ,GAAGH,YAAY,CAACtF,GAAD,CAA7B;;AACA,UAAIyF,QAAQ,CAAC3F,UAAT,IAAuB,CAAC2F,QAAQ,CAACxF,KAAjC,IAA0CwF,QAAQ,CAACpF,OAAvD,EAAgE;AAC5DgF,QAAAA,sBAAsB,GAAG,IAAzB;AACAC,QAAAA,YAAY,CAACtF,GAAD,CAAZ,CAAkBK,OAAlB,GAA4B,IAA5B;AACH;AACJ;;AAED,QAAGgF,sBAAH,EAA0B;AACtBpC,MAAAA,eAAe,CAACpB,CAAC,CAAC,gCAAD,CAAF,EAAsC;AAAEtB,QAAAA,OAAO,EAAE;AAAX,OAAtC,CAAf;AACAoB,MAAAA,QAAQ,CAAC2D,YAAD,CAAR;AACA,aAAO,KAAP;AACH;;AAED,WAAO,IAAP;AACH,GAnBD;;AAqBA,QAAMI,6BAA6B,GAAIN,SAAD,IAAe;AACjD,WAAOA,SAAP;AACH,GAFD;;AAIA,QAAMO,qBAAqB,GAAG,MAAM;AAChC,UAAMC,OAAO,GAAGT,0BAA0B,CAACvD,kBAAD,EAAqB0B,qBAArB,CAA1C;;AACA,QAAGsC,OAAH,EAAW;AACP,aAAO/C,yBAAyB,CAAC6C,6BAA6B,CAAC9D,kBAAD,CAA9B,CAAhC;AACH;AACJ,GALD;;AAOA,QAAMiE,oBAAoB,GAAG,MAAM;AAC/B,UAAMD,OAAO,GAAGT,0BAA0B,CAAC1B,iBAAD,EAAoBC,oBAApB,CAA1C;;AACA,QAAGkC,OAAH,EAAW;AACP,aAAO9C,wBAAwB,CAAC4C,6BAA6B,CAACjC,iBAAD,CAA9B,CAA/B;AACH;AACJ,GALD;;AAOA,QAAMqC,8BAA8B,GAAG,CAACC,QAAQ,GAAG,KAAZ,KAAsB;AACzD,QAAGA,QAAH,EAAY;AACRrC,MAAAA,oBAAoB,CAACpC,0BAAD,CAApB;AACH,KAFD,MAEK;AACDgC,MAAAA,qBAAqB,CAACjC,2BAAD,CAArB;AACH;;AACD0B,IAAAA,kCAAkC,CAACgD,QAAD,CAAlC;AACA5C,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH,GARD;;AAUA,SACI,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,YAAY,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKtB,CAAC,CAAC,qBAAD,CADN,CADJ,EAII,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAW,IAAA,QAAQ,EAAE0B,4BAArB;AAAmD,IAAA,QAAQ,EAAE,MAAMC,+BAA+B,CAAC,CAACD,4BAAF,CAAlG;AAAmI,IAAA,SAAS,EAAE/B,OAAO,CAACtC,MAAtJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,gBAAD;AAAkB,IAAA,UAAU,EAAE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA9B;AAAkD,qBAAc,yBAAhE;AAA0F,IAAA,EAAE,EAAC,wBAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AAAY,IAAA,SAAS,EAAEsC,OAAO,CAACwE,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCnE,CAAC,CAAC,qBAAD,CAA1C,CADJ,CADJ,EAII,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAA4B,IAAA,SAAS,EAAC,KAAtC;AAA4C,IAAA,OAAO,EAAC,eAApD;AAAoE,IAAA,UAAU,EAAC,QAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK0D,MAAM,CAACC,IAAP,CAAY5D,kBAAZ,EAAgCK,GAAhC,CAAoC,CAACgE,SAAD,EAAYC,QAAZ,KAAyB;AAC1D,UAAMC,QAAQ,GAAGvE,kBAAkB,CAACqE,SAAD,CAAnC;AACA,WACI,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAEE,QAAQ,CAACxF,eAAT,CAAyBC,EAAxC;AAA4C,MAAA,EAAE,EAAEuF,QAAQ,CAACxF,eAAT,CAAyBE,EAAzE;AAA6E,MAAA,EAAE,EAAEsF,QAAQ,CAACxF,eAAT,CAAyBG,EAA1G;AAA8G,MAAA,GAAG,EAAEoF,QAAnH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK3E,gBAAgB,CAACC,OAAD,EAAU2E,QAAV,EAAoBzE,QAApB,EAA8BsD,uBAA9B,CADrB,CADJ;AAKH,GAPA,CADL,EASI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,UAAhB;AAA2B,IAAA,KAAK,EAAC,SAAjC;AAA2C,IAAA,gBAAgB,MAA3D;AAA4D,IAAA,OAAO,EAAE,MAAKW,qBAAqB,EAA/F;AAAmG,IAAA,QAAQ,EAAEjE,QAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKiB,WAAW,GAAGd,CAAC,CAAC,YAAD,CAAJ,GAAoBA,CAAC,CAAC,SAAD,CADrC,CADJ,CATJ,EAcKc,WAAW,GACR,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AAAY,kBAAW,QAAvB;AAAgC,IAAA,OAAO,EAAE,MAAMmD,8BAA8B,EAA7E;AAAiF,IAAA,QAAQ,EAAEpE,QAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AAAY,IAAA,QAAQ,EAAC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADQ,GAKE,IAnBlB,CADJ,CAJJ,EA2BI,MAAC,QAAD;AAAU,IAAA,SAAS,EAAEF,OAAO,CAACnC,QAA7B;AAAuC,IAAA,IAAI,EAAE+D,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,gBAAD;AAAkB,IAAA,KAAK,EAAC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CA3BJ,CADJ,EAgCI,MAAC,SAAD;AAAW,IAAA,QAAQ,EAAEO,2BAArB;AAAkD,IAAA,QAAQ,EAAE,MAAMC,8BAA8B,CAAC,CAACD,2BAAF,CAAhG;AAAgI,IAAA,SAAS,EAAEnC,OAAO,CAACtC,MAAnJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,gBAAD;AAAkB,IAAA,UAAU,EAAE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA9B;AAAkD,qBAAc,wBAAhE;AAAyF,IAAA,EAAE,EAAC,uBAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AAAY,IAAA,SAAS,EAAEsC,OAAO,CAACwE,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCnE,CAAC,CAAC,uBAAD,CAA1C,CADJ,CADJ,EAII,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAA4B,IAAA,SAAS,EAAC,KAAtC;AAA4C,IAAA,OAAO,EAAC,eAApD;AAAoE,IAAA,UAAU,EAAC,QAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK0D,MAAM,CAACC,IAAP,CAAY/B,iBAAZ,EAA+BxB,GAA/B,CAAmC,CAACgE,SAAD,EAAYC,QAAZ,KAAyB;AACzD,UAAMC,QAAQ,GAAG1C,iBAAiB,CAACwC,SAAD,CAAlC;AACA,WACI,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAEE,QAAQ,CAACxF,eAAT,CAAyBC,EAAxC;AAA4C,MAAA,EAAE,EAAEuF,QAAQ,CAACxF,eAAT,CAAyBE,EAAzE;AAA6E,MAAA,EAAE,EAAEsF,QAAQ,CAACxF,eAAT,CAAyBG,EAA1G;AAA8G,MAAA,GAAG,EAAEoF,QAAnH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK3E,gBAAgB,CAACC,OAAD,EAAU2E,QAAV,EAAoBzE,QAApB,EAA8BwD,sBAA9B,EAAsDtD,kBAAtD,CADrB,CADJ;AAKH,GAPA,CADL,EASI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,UAAhB;AAA2B,IAAA,KAAK,EAAC,SAAjC;AAA2C,IAAA,gBAAgB,MAA3D;AAA4D,IAAA,OAAO,EAAE,MAAKiE,oBAAoB,EAA9F;AAAkG,IAAA,QAAQ,EAAEnE,QAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKkB,iBAAiB,GAAGf,CAAC,CAAC,YAAD,CAAJ,GAAoBA,CAAC,CAAC,SAAD,CAD3C,CADJ,CATJ,EAcKe,iBAAiB,GACd,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AAAY,kBAAW,QAAvB;AAAgC,IAAA,OAAO,EAAE,MAAMkD,8BAA8B,CAAC,IAAD,CAA7E;AAAqF,IAAA,QAAQ,EAAEpE,QAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AAAY,IAAA,QAAQ,EAAC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADc,GAKJ,IAnBlB,CADJ,CAJJ,EA2BI,MAAC,QAAD;AAAU,IAAA,SAAS,EAAEF,OAAO,CAACnC,QAA7B;AAAuC,IAAA,IAAI,EAAE+D,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,gBAAD;AAAkB,IAAA,KAAK,EAAC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CA3BJ,CAhCJ,CADJ,CAJJ,CADJ;AAyEH,CAzRD;;AA2RA,eAAeV,mBAAf","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport {\n    Accordion,\n    AccordionDetails,\n    AccordionSummary,\n    Button,\n    Grid,\n    MenuItem,\n    TextField,\n    Typography,\n    IconButton\n} from '@material-ui/core'\nimport axios from 'axios'\nimport WebCmsGlobal from 'components/webcms-global'\nimport useTranslation from 'lib/translations/hooks/useTranslation'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport { makeStyles } from '@material-ui/core/styles'\nimport moment from 'moment'\nimport MomentAdapter from '@date-io/moment'\nimport { DatePicker, LocalizationProvider, TimePicker } from '@material-ui/pickers'\nimport { useSnackbar } from 'notistack'\nimport { OREST_ENDPOINT, REQUEST_METHOD_CONST } from 'model/orest/constants'\nimport { required } from 'state/utils/form'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Backdrop from '@material-ui/core/Backdrop'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        marginTop: 16,\n        border: '1px solid #ddd',\n        background: '#F5F5F5',\n    },\n    infoTextField: {\n        background: '#FFFFFF',\n        '& fieldset': {\n            borderRadius: 0,\n        },\n    },\n    createAccountHelperText: {\n        textAlign: 'right',\n    },\n    textRed: {\n        color: 'red'\n    },\n    parent: {\n        position: \"relative\",\n        zIndex: 0,\n    },\n    backdrop: {\n        position: \"absolute\",\n        zIndex: 3,\n    }\n}))\n\nconst fieldTypes = {\n    text: 'text',\n    textarea: 'textarea',\n    select: 'select',\n    date: 'date',\n    time: 'time'\n}\n\nconst transferInitialState = {\n    airportid: {\n        isRequired: true,\n        label: 'str_airports',\n        key: 'airportid',\n        value: '',\n        type: 'select',\n        list: false,\n        fullWidth: true,\n        isError: false,\n        errorText: '',\n        variant: 'outlined',\n        size: 'small',\n        isBase: true,\n        defValKey: 'id',\n        gridBreakpoints: {\n            xs: 12,\n            sm: 6,\n            md: 6,\n        },\n    },\n    airline: {\n        isRequired: true,\n        label: 'str_airline',\n        key: 'airline',\n        value: '',\n        type: 'text',\n        list: false,\n        fullWidth: true,\n        isError: false,\n        errorText: '',\n        variant: 'outlined',\n        size: 'small',\n        isBase: true,\n        gridBreakpoints: {\n            xs: 12,\n            sm: 6,\n            md: 6,\n        },\n    },\n    flydate: {\n        isRequired: true,\n        label: 'Uçuş Tarihi',\n        key: 'flydate',\n        value: null,\n        type: 'date',\n        list: false,\n        fullWidth: true,\n        isError: false,\n        errorText: '',\n        variant: 'outlined',\n        size: 'small',\n        isBase: true,\n        gridBreakpoints: {\n            xs: 12,\n            sm: 6,\n            md: 6,\n        },\n    },\n    flytime: {\n        isRequired: true,\n        label: 'str_flyTime',\n        key: 'flytime',\n        value: null,\n        type: 'time',\n        list: false,\n        fullWidth: true,\n        isError: false,\n        errorText: '',\n        variant: 'outlined',\n        size: 'small',\n        isBase: true,\n        gridBreakpoints: {\n            xs: 12,\n            sm: 6,\n            md: 6,\n        },\n    },\n    flightno: {\n        isRequired: false,\n        label: 'str_flightNo',\n        key: 'flightno',\n        value: '',\n        type: 'text',\n        list: false,\n        fullWidth: true,\n        isError: false,\n        errorText: '',\n        variant: 'outlined',\n        size: 'small',\n        isBase: true,\n        gridBreakpoints: {\n            xs: 12,\n            sm: 6,\n            md: 6,\n        },\n    },\n    vehicleid: {\n        isRequired: false,\n        label: 'str_vehicle',\n        key: 'vehicleid',\n        value: '',\n        type: 'select',\n        list: false,\n        fullWidth: true,\n        isError: false,\n        errorText: '',\n        variant: 'outlined',\n        size: 'small',\n        isBase: true,\n        defValKey: 'id',\n        gridBreakpoints: {\n            xs: 12,\n            sm: 6,\n            md: 6,\n        },\n    },\n    note: {\n        isRequired: false,\n        label: 'str_note',\n        key: 'note',\n        value: '',\n        type: 'textarea',\n        list: false,\n        fullWidth: true,\n        isError: false,\n        errorText: '',\n        variant: 'outlined',\n        size: 'small',\n        isBase: true,\n        gridBreakpoints: {\n            xs: 12,\n            sm: 12,\n            md: 12,\n        },\n    },\n}\n\nconst arrivalTransferInitialState = {...transferInitialState}\n\nconst returnTransferInitialState = {...transferInitialState}\n\nconst getFormComponent = (classes, field, disabled, onChange, useArrivalTransfer = false) => {\n    const { t } = useTranslation()\n    switch (field.type) {\n        case fieldTypes.text:\n            return (\n                <TextField\n                    className={classes.infoTextField}\n                    id={field.key}\n                    name={field.key}\n                    label={t(field.label)}\n                    required={field.isRequired}\n                    disabled={disabled}\n                    fullWidth={field.fullWidth}\n                    size={field.size}\n                    variant={field.variant}\n                    value={field.value}\n                    onChange={(e) => onChange(field.key, e.target.value, field.type)}\n                    error={field.isError}\n                    helperText={field.isError && field.errorText}\n                />\n            )\n        case fieldTypes.textarea:\n            return (\n                <TextField\n                    className={classes.infoTextField}\n                    id={field.key}\n                    name={field.key}\n                    label={t(field.label)}\n                    required={field.isRequired}\n                    disabled={disabled}\n                    fullWidth={field.fullWidth}\n                    size={field.size}\n                    variant={field.variant}\n                    value={field.value}\n                    onChange={(e) => onChange(field.key, e.target.value, field.type)}\n                    error={field.isError}\n                    helperText={field.isError && field.errorText}\n                    multiline\n                    rows={3}\n                />\n            )\n        case fieldTypes.select:\n            return (\n                <TextField\n                    className={classes.infoTextField}\n                    id={field.key}\n                    name={field.key}\n                    label={t(field.label)}\n                    required={field.isRequired}\n                    disabled={disabled}\n                    fullWidth={field.fullWidth}\n                    size={field.size}\n                    variant={field.variant}\n                    value={field.value}\n                    onChange={(e) => onChange(field.key, e.target.value, field.type)}\n                    error={field.isError}\n                    helperText={field.isError && field.errorText}\n                    select\n                >\n                    {field.list && field.list.length > 0 ?\n                        field.list.map((listItem, listKey) =>\n                            <MenuItem key={listKey} value={listItem.id}>{listItem.description}</MenuItem>,\n                        ) : <MenuItem value={-1}>{t('str_notFound')}</MenuItem>}\n                </TextField>\n            )\n        case fieldTypes.date:\n            return (\n                <LocalizationProvider dateLibInstance={moment} dateAdapter={MomentAdapter}>\n                    <DatePicker\n                        disablePast\n                        minDate={useArrivalTransfer && useArrivalTransfer[transferInitialState.flydate.key]?.value && moment(useArrivalTransfer[transferInitialState.flydate.key]?.value).add(1, 'days') || null}\n                        required={field.isRequired}\n                        allowKeyboardControl\n                        disabled={disabled}\n                        autoOk\n                        id={field.key}\n                        name={field.key}\n                        label={t(field.label)}\n                        inputFormat='DD/MM/YYYY'\n                        openTo={'date'}\n                        views={['year', 'month', 'date']}\n                        value={field.value || null}\n                        onChange={(newValue) => onChange(field.key, newValue, field.type)}\n                        renderInput={(props) => {\n                            return (\n                                <TextField\n                                    {...props}\n                                    className={classes.infoTextField}\n                                    fullWidth={field.fullWidth}\n                                    size={field.size}\n                                    variant={field.variant}\n                                    required={field.isRequired}\n                                    error={field.isError}\n                                    helperText={field.isError && field.errorText}\n                                />\n                            )\n                        }}\n                    />\n                </LocalizationProvider>\n            )\n        case fieldTypes.time:\n            return (\n                <LocalizationProvider dateLibInstance={moment} dateAdapter={MomentAdapter}>\n                    <TimePicker\n                        ampm={true}\n                        inputFormat='HH:mm'\n                        mask='__:__'\n                        value={field.value && moment(field.value, OREST_ENDPOINT.TIMEFORMAT) || null}\n                        onChange={(newValue) => onChange(field.key, newValue, field.type)}\n                        id={field.key}\n                        name={field.key}\n                        label={t(field.label)}\n                        renderInput={(props) => (\n                            <TextField\n                                {...props}\n                                className={classes.infoTextField}\n                                fullWidth={field.fullWidth}\n                                size={field.size}\n                                variant={field.variant}\n                                required={field.isRequired}\n                                error={field.isError}\n                                helperText={field.isError && field.errorText}\n                            />\n                        )}\n                    />\n                </LocalizationProvider>\n            )\n        default:\n            return\n    }\n}\n\nconst  TransferReservation = ({disabled, flyTransfer, flyTransferReturn, onCallbackArrivalTransfer, onCallbackReturnTransfer, onCallbackTransferReservationReset}) => {\n    const { GENERAL_SETTINGS } = useContext(WebCmsGlobal)\n    const { enqueueSnackbar } = useSnackbar()\n    const { t } = useTranslation()\n    const classes = useStyles()\n\n    const [isLoaded, setIsLoaded] = useState(false)\n    const [isLoading, setIsLoading] = useState(false)\n    const [useArrivalTransfer, setUseArrivalTransfer] = useState(flyTransfer || arrivalTransferInitialState)\n    const [arrivalTransferAccordionOpen, setArrivalTransferAccordionOpen] = useState(!!flyTransfer)\n\n    const [useReturnTransfer, setUseReturnTransfer] = useState(flyTransferReturn || returnTransferInitialState)\n    const [returnTransferAccordionOpen, setReturnTransferAccordionOpen] = useState(!!flyTransferReturn)\n\n    useEffect(() => {\n        let active = true\n        if (active) {\n            async function loadListData() {\n               setIsLoading(true)\n               const airportList = await axios({\n                    url: GENERAL_SETTINGS.BASE_URL + 'api/hotel/airport/list',\n                    method: REQUEST_METHOD_CONST.POST,\n                }).then((hotelAirportListResponse) => {\n                    if (active) {\n                        const hotelAirportListResponseData = hotelAirportListResponse?.data?.data\n                        if (hotelAirportListResponse.data.success && hotelAirportListResponseData.length > 0) {\n                            return hotelAirportListResponseData\n                        }else{\n                            return false\n                        }\n                    }\n                })\n\n                const vehicleList =  await axios({\n                    url: GENERAL_SETTINGS.BASE_URL + 'api/hotel/vehicle/list',\n                    method: REQUEST_METHOD_CONST.POST,\n                }).then((hotelVehicleListResponse) => {\n                    if (active) {\n                        const hotelAirportListResponseData = hotelVehicleListResponse?.data?.data\n                        if (hotelVehicleListResponse.data.success && hotelAirportListResponseData.length > 0) {\n                            return hotelAirportListResponseData\n                        }else{\n                            return false\n                        }\n                    }\n                })\n\n                setIsLoading(false)\n\n                return {\n                    airportList: airportList || false,\n                    vehicleList: vehicleList || false\n                }\n            }\n\n            if(!isLoaded){\n                loadListData().then((list) => {\n                    setUseArrivalTransfer({\n                        ...useArrivalTransfer,\n                        [arrivalTransferInitialState.airportid.key]: {\n                            ...useArrivalTransfer[arrivalTransferInitialState.airportid.key],\n                            list: list.airportList,\n                        },\n                        [arrivalTransferInitialState.vehicleid.key]: {\n                            ...useArrivalTransfer[arrivalTransferInitialState.vehicleid.key],\n                            list: list.vehicleList,\n                        },\n                    })\n\n                    setUseReturnTransfer({\n                        ...useReturnTransfer,\n                        [returnTransferInitialState.airportid.key]: {\n                            ...useReturnTransfer[returnTransferInitialState.airportid.key],\n                            list: list.airportList,\n                        },\n                        [returnTransferInitialState.vehicleid.key]: {\n                            ...useReturnTransfer[returnTransferInitialState.vehicleid.key],\n                            list: list.vehicleList,\n                        },\n                    })\n\n                    setIsLoaded(true)\n                })\n            }\n        }\n\n        return () => {\n            active = false\n        }\n    }, [isLoaded])\n\n    useEffect(() => {\n\n        if (!flyTransfer) {\n            setUseArrivalTransfer(arrivalTransferInitialState)\n            setIsLoaded(false)\n        } else if (!flyTransferReturn) {\n            setUseReturnTransfer(returnTransferInitialState)\n            setIsLoaded(false)\n        }\n\n    }, [flyTransfer, flyTransferReturn])\n\n    const getOnChangeValue = (type, value, isRequired) => {\n        switch (type) {\n            case fieldTypes.date:\n                const newDateValue = moment(value).format(OREST_ENDPOINT.DATEFORMAT)\n                return {\n                    value: newDateValue,\n                    isError: newDateValue === 'Invalid date',\n                    errorText: newDateValue === 'Invalid date' ? `*${t('str_invalidDate')}` : false,\n                    isRequired: isRequired,\n                }\n            case fieldTypes.time:\n                const newTimeValue = moment(value).format(OREST_ENDPOINT.TIMEFORMAT)\n                return {\n                    value: newTimeValue,\n                    isError: newTimeValue === 'Invalid date',\n                    errorText: newTimeValue === 'Invalid date' ? `*${t('str_invalidDate')}` : false,\n                    isRequired: isRequired,\n                }\n            default:\n                return {\n                    value: value,\n                    isError: isRequired && !!required(value),\n                    errorText: isRequired && !!required(value),\n                    isRequired: isRequired,\n                }\n        }\n    }\n\n    const onChangeArrivalTransfer = (key, value, type) => {\n        const useData = getOnChangeValue(type, value, useArrivalTransfer[key].isRequired)\n        setUseArrivalTransfer({\n            ...useArrivalTransfer,\n            [key]: {\n                ...useArrivalTransfer[key],\n                value: useData.value,\n                isError: useData.isError,\n                isRequired: useData.isRequired,\n                errorText: useData.errorText,\n            },\n        })\n    }\n\n    const onChangeReturnTransfer = (key, value, type) => {\n        const useData = getOnChangeValue(type, value, useReturnTransfer[key].isRequired)\n        setUseReturnTransfer({\n            ...useReturnTransfer,\n            [key]: {\n                ...useReturnTransfer[key],\n                value: useData.value,\n                isError: useData.isError,\n                isRequired: useData.isRequired,\n                errorText: useData.errorText,\n            },\n        })\n    }\n\n    const transferRequiredFieldCheck = (stateData, onChange) => {\n        let isRequiredFieldMistake = false\n        const newStateData = {...stateData}\n\n        for (let key of Object.keys(newStateData)) {\n            const getField = newStateData[key]\n            if (getField.isRequired && !getField.value || getField.isError) {\n                isRequiredFieldMistake = true\n                newStateData[key].isError = true\n            }\n        }\n\n        if(isRequiredFieldMistake){\n            enqueueSnackbar(t('str_pleaseCheckMandatoryFields'), { variant: 'warning' })\n            onChange(newStateData)\n            return false\n        }\n\n        return true\n    }\n\n    const handleTransferReservationData = (stateData) => {\n        return stateData\n    }\n\n    const handleArrivalTransfer = () => {\n        const isValid = transferRequiredFieldCheck(useArrivalTransfer, setUseArrivalTransfer)\n        if(isValid){\n            return onCallbackArrivalTransfer(handleTransferReservationData(useArrivalTransfer))\n        }\n    }\n\n    const handleReturnTransfer = () => {\n        const isValid = transferRequiredFieldCheck(useReturnTransfer, setUseReturnTransfer)\n        if(isValid){\n            return onCallbackReturnTransfer(handleTransferReservationData(useReturnTransfer))\n        }\n    }\n\n    const handleResetTransferReservation = (isReturn = false) => {\n        if(isReturn){\n            setUseReturnTransfer(returnTransferInitialState)\n        }else{\n            setUseArrivalTransfer(arrivalTransferInitialState)\n        }\n        onCallbackTransferReservationReset(isReturn)\n        setIsLoaded(false)\n    }\n\n    return (\n        <React.Fragment>\n            <Typography variant=\"h6\" gutterBottom>\n                {t('str_transferService')}\n            </Typography>\n            <Grid container spacing={3}>\n                <Grid item xs={12}>\n                    <Accordion expanded={arrivalTransferAccordionOpen} onChange={() => setArrivalTransferAccordionOpen(!arrivalTransferAccordionOpen)} className={classes.parent}>\n                        <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"ArrivalTransfer-content\" id=\"ArrivalTransfer-header\">\n                            <Typography className={classes.heading}>{t('str_arrivalTransfer')}</Typography>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                            <Grid container spacing={2} direction='row' justify='space-between' alignItems='center'>\n                                {Object.keys(useArrivalTransfer).map((fieldItem, keyIndex) => {\n                                    const useField = useArrivalTransfer[fieldItem]\n                                    return (\n                                        <Grid item xs={useField.gridBreakpoints.xs} sm={useField.gridBreakpoints.sm} md={useField.gridBreakpoints.md} key={keyIndex}>\n                                            {getFormComponent(classes, useField, disabled, onChangeArrivalTransfer)}\n                                        </Grid>\n                                    )\n                                })}\n                                <Grid item>\n                                    <Button variant=\"outlined\" color=\"primary\" disableElevation onClick={()=> handleArrivalTransfer()} disabled={disabled}>\n                                        {flyTransfer ? t('str_update'): t('str_add')}\n                                    </Button>\n                                </Grid>\n                                {flyTransfer ?\n                                    <Grid item>\n                                        <IconButton aria-label=\"delete\" onClick={() => handleResetTransferReservation()} disabled={disabled}>\n                                            <DeleteIcon fontSize=\"small\"/>\n                                        </IconButton>\n                                    </Grid> : null}\n                            </Grid>\n                        </AccordionDetails>\n                        <Backdrop className={classes.backdrop} open={isLoading}>\n                            <CircularProgress color=\"primary\" />\n                        </Backdrop>\n                    </Accordion>\n                    <Accordion expanded={returnTransferAccordionOpen} onChange={() => setReturnTransferAccordionOpen(!returnTransferAccordionOpen)} className={classes.parent}>\n                        <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"ReturnTransfer-content\" id=\"ReturnTransfer-header\">\n                            <Typography className={classes.heading}>{t('str_departureTransfer')}</Typography>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                            <Grid container spacing={2} direction='row' justify='space-between' alignItems='center'>\n                                {Object.keys(useReturnTransfer).map((fieldItem, keyIndex) => {\n                                    const useField = useReturnTransfer[fieldItem]\n                                    return (\n                                        <Grid item xs={useField.gridBreakpoints.xs} sm={useField.gridBreakpoints.sm} md={useField.gridBreakpoints.md} key={keyIndex}>\n                                            {getFormComponent(classes, useField, disabled, onChangeReturnTransfer, useArrivalTransfer)}\n                                        </Grid>\n                                    )\n                                })}\n                                <Grid item>\n                                    <Button variant=\"outlined\" color=\"primary\" disableElevation onClick={()=> handleReturnTransfer()} disabled={disabled}>\n                                        {flyTransferReturn ? t('str_update'): t('str_add')}\n                                    </Button>\n                                </Grid>\n                                {flyTransferReturn ?\n                                    <Grid item>\n                                        <IconButton aria-label=\"delete\" onClick={() => handleResetTransferReservation(true)} disabled={disabled}>\n                                            <DeleteIcon fontSize=\"small\"/>\n                                        </IconButton>\n                                    </Grid> : null}\n                            </Grid>\n                        </AccordionDetails>\n                        <Backdrop className={classes.backdrop} open={isLoading}>\n                            <CircularProgress color=\"primary\" />\n                        </Backdrop>\n                    </Accordion>\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    )\n}\n\nexport default TransferReservation"]},"metadata":{},"sourceType":"module"}