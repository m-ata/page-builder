{"ast":null,"code":"var _regeneratorRuntime = require(\"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/regenerator\");\n\nvar _toConsumableArray = require(\"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _asyncToGenerator = require(\"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar axios = require('axios');\n\nvar helpers = require('./helpers');\n\nvar orestEndpoint = require('../constants/orest-endpoints.json');\n\nvar getHotelAppLang = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(req, res, langCode) {\n    var _res$GENERAL_SETTINGS;\n\n    var hotelLanguageList, targetMergeData, _res$GENERAL_SETTINGS2, _res$GENERAL_SETTINGS3, langLongCode, hotelRaDictLanguageList, _targetMergeData2;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (langCode) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", []);\n\n          case 2:\n            _context.next = 4;\n            return axios({\n              url: helpers.getUrl(res, orestEndpoint.api.rafileViewList),\n              method: orestEndpoint.methods.get,\n              headers: helpers.getHeaders(req, res),\n              params: {\n                query: \"langcode:\".concat(langCode, \",filetype:HCMLANG.TARGET\"),\n                chkselfish: false\n              }\n            }).then(function (response) {\n              var _response$data;\n\n              if (response.status === 200 && response !== null && response !== void 0 && (_response$data = response.data) !== null && _response$data !== void 0 && _response$data.data) {\n                return response.data.data;\n              } else {\n                return false;\n              }\n            })[\"catch\"](function () {\n              return false;\n            });\n\n          case 4:\n            hotelLanguageList = _context.sent;\n            targetMergeData = [];\n\n            if (hotelLanguageList) {\n              hotelLanguageList.map(function (trgFile) {\n                var _targetMergeData;\n\n                var mergeData = (trgFile === null || trgFile === void 0 ? void 0 : trgFile.filedata) && JSON.parse(Buffer.from(trgFile.filedata, 'base64').toString('utf-8')) || [];\n                targetMergeData = (_targetMergeData = targetMergeData).concat.apply(_targetMergeData, _toConsumableArray(mergeData));\n              });\n            }\n\n            if (!(res !== null && res !== void 0 && (_res$GENERAL_SETTINGS = res.GENERAL_SETTINGS) !== null && _res$GENERAL_SETTINGS !== void 0 && _res$GENERAL_SETTINGS.useLangLongCodes)) {\n              _context.next = 14;\n              break;\n            }\n\n            langLongCode = (res === null || res === void 0 ? void 0 : (_res$GENERAL_SETTINGS2 = res.GENERAL_SETTINGS) === null || _res$GENERAL_SETTINGS2 === void 0 ? void 0 : (_res$GENERAL_SETTINGS3 = _res$GENERAL_SETTINGS2.useLangLongCodes.find(function (item) {\n              return item.srtcode === langCode;\n            })) === null || _res$GENERAL_SETTINGS3 === void 0 ? void 0 : _res$GENERAL_SETTINGS3.lngcode) || false;\n\n            if (!langLongCode) {\n              _context.next = 14;\n              break;\n            }\n\n            _context.next = 12;\n            return axios({\n              url: helpers.getUrl(res, orestEndpoint.api.radictViewList),\n              method: orestEndpoint.methods.get,\n              headers: helpers.getHeaders(req, res),\n              params: {\n                query: \"trglangcode:\".concat(langLongCode, \",hotelrefno!-1\"),\n                limit: 0,\n                allhotels: true,\n                chkselfish: false\n              }\n            }).then(function (response) {\n              var _response$data2;\n\n              if (response.status === 200 && response !== null && response !== void 0 && (_response$data2 = response.data) !== null && _response$data2 !== void 0 && _response$data2.data) {\n                return response.data.data.map(function (item) {\n                  return {\n                    src: item.srcword,\n                    trg: item.trgword,\n                    lng: langCode\n                  };\n                });\n              } else {\n                return false;\n              }\n            })[\"catch\"](function () {\n              return false;\n            });\n\n          case 12:\n            hotelRaDictLanguageList = _context.sent;\n\n            if (hotelRaDictLanguageList && hotelRaDictLanguageList.length > 0) {\n              targetMergeData = (_targetMergeData2 = targetMergeData).concat.apply(_targetMergeData2, _toConsumableArray(hotelRaDictLanguageList));\n            }\n\n          case 14:\n            return _context.abrupt(\"return\", targetMergeData);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getHotelAppLang(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmodule.exports = getHotelAppLang;","map":{"version":3,"sources":["/Users/mata/app-cloudweb/@api/core/get-hotel-app-lang.js"],"names":["axios","require","helpers","orestEndpoint","getHotelAppLang","req","res","langCode","url","getUrl","api","rafileViewList","method","methods","get","headers","getHeaders","params","query","chkselfish","then","response","status","data","hotelLanguageList","targetMergeData","map","trgFile","mergeData","filedata","JSON","parse","Buffer","from","toString","concat","GENERAL_SETTINGS","useLangLongCodes","langLongCode","find","item","srtcode","lngcode","radictViewList","limit","allhotels","src","srcword","trg","trgword","lng","hotelRaDictLanguageList","length","module","exports"],"mappings":"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","sourcesContent":["const axios = require('axios')\nconst helpers = require('./helpers')\nconst orestEndpoint = require('../constants/orest-endpoints.json')\n\nconst getHotelAppLang = async (req, res, langCode) => {\n    if (!langCode) {\n        return []\n    }\n\n    const hotelLanguageList = await axios({\n        url: helpers.getUrl(res, orestEndpoint.api.rafileViewList),\n        method: orestEndpoint.methods.get,\n        headers: helpers.getHeaders(req, res),\n        params: {\n            query: `langcode:${langCode},filetype:HCMLANG.TARGET`,\n            chkselfish: false,\n        },\n    }).then((response) => {\n        if (response.status === 200 && response?.data?.data) {\n            return response.data.data\n        } else {\n            return false\n        }\n    }).catch(() => {\n        return false\n    })\n\n    let targetMergeData = []\n    if (hotelLanguageList) {\n        hotelLanguageList.map(trgFile => {\n            const mergeData = trgFile?.filedata && JSON.parse(Buffer.from(trgFile.filedata, 'base64').toString('utf-8')) || []\n            targetMergeData = targetMergeData.concat(...mergeData)\n        })\n    }\n\n    if (res?.GENERAL_SETTINGS?.useLangLongCodes) {\n        const langLongCode = res?.GENERAL_SETTINGS?.useLangLongCodes.find(item => item.srtcode === langCode)?.lngcode || false\n        if (langLongCode) {\n            const hotelRaDictLanguageList = await axios({\n                url: helpers.getUrl(res, orestEndpoint.api.radictViewList),\n                method: orestEndpoint.methods.get,\n                headers: helpers.getHeaders(req, res),\n                params: {\n                    query: `trglangcode:${langLongCode},hotelrefno!-1`,\n                    limit: 0,\n                    allhotels: true,\n                    chkselfish: false,\n                },\n            }).then((response) => {\n                if (response.status === 200 && response?.data?.data) {\n                    return response.data.data.map(item => ({\n                        src: item.srcword,\n                        trg: item.trgword,\n                        lng: langCode,\n                    }))\n                } else {\n                    return false\n                }\n            }).catch(() => {\n                return false\n            })\n\n            if (hotelRaDictLanguageList && hotelRaDictLanguageList.length > 0) {\n                targetMergeData = targetMergeData.concat(...hotelRaDictLanguageList)\n            }\n        }\n    }\n\n    return targetMergeData\n}\n\nmodule.exports = getHotelAppLang"]},"metadata":{},"sourceType":"script"}