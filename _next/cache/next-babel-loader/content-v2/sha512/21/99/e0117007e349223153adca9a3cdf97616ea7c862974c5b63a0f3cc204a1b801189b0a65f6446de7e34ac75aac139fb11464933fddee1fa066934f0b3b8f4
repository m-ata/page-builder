{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { setToState as _setToState, updateState as _updateState } from 'state/actions';\nimport axios from 'axios';\nimport WebCmsGlobal from 'components/webcms-global';\n\nvar Faq = function Faq(props) {\n  _s();\n\n  var state = props.state,\n      setToState = props.setToState,\n      isPortal = props.isPortal,\n      chainId = props.chainId;\n\n  var _useContext = useContext(WebCmsGlobal),\n      GENERAL_SETTINGS = _useContext.GENERAL_SETTINGS,\n      locale = _useContext.locale;\n\n  var _useState = useState(false),\n      isLoading = _useState[0],\n      setIsLoading = _useState[1];\n\n  var clientParams = {};\n  clientParams.langcode = locale;\n  useEffect(function () {\n    var active = true;\n    var isChainHotelChange = false;\n\n    if (GENERAL_SETTINGS.ISCHAIN && state.changeHotelRefno !== false || isPortal) {\n      clientParams.ischain = true;\n      clientParams.chainid = chainId || state.changeHotelRefno;\n      clientParams.hotelrefno = GENERAL_SETTINGS.HOTELREFNO;\n\n      if (clientParams.chainid !== state.hotelFaq.chainid) {\n        isChainHotelChange = true;\n      }\n    } else {\n      clientParams.ischain = false;\n      clientParams.chainid = false;\n    }\n\n    var isLangChange = false;\n\n    if (state.hotelFaq.langcode !== locale) {\n      isLangChange = true;\n      setToState('guest', ['hotelFaq', 'langcode'], locale);\n      clientParams.langcode = locale;\n    }\n\n    var isRequest;\n\n    if (GENERAL_SETTINGS.ISCHAIN) {\n      isRequest = state.hotelFaq.data === false && GENERAL_SETTINGS.ISCHAIN && state.changeHotelRefno !== false;\n    } else {\n      isRequest = state.hotelFaq.data === false && GENERAL_SETTINGS.ISCHAIN === false;\n    }\n\n    if (active && (isRequest || isLangChange || isChainHotelChange) && isLoading === false) {\n      setIsLoading(true);\n      axios({\n        url: GENERAL_SETTINGS.BASE_URL + 'api/guestweb/faq',\n        method: 'post',\n        params: clientParams\n      }).then(function (hotelFaqResponse) {\n        if (active || isPortal) {\n          var hotelFaqData = hotelFaqResponse.data;\n\n          if (hotelFaqData.success) {\n            if (Object.keys(hotelFaqData.data).length > 0) {\n              setToState('guest', ['hotelFaq', 'data'], hotelFaqData.data);\n              setToState('guest', ['hotelFaq', 'langcode'], locale);\n              setToState('guest', ['hotelFaq', 'chainid'], clientParams.chainid);\n              setIsLoading(false);\n            } else {\n              setToState('guest', ['hotelFaq', 'data'], null);\n              setToState('guest', ['hotelFaq', 'langcode'], null);\n              setToState('guest', ['hotelFaq', 'chainid'], clientParams.chainid);\n              setIsLoading(false);\n            }\n          } else {\n            setToState('guest', ['hotelFaq', 'data'], null);\n            setToState('guest', ['hotelFaq', 'langcode'], null);\n            setToState('guest', ['hotelFaq', 'chainid'], clientParams.chainid);\n            setIsLoading(false);\n          }\n        }\n      });\n    }\n\n    return function () {\n      active = false;\n    };\n  }, [state.changeHotelRefno, locale]);\n  return props.children;\n};\n\n_s(Faq, \"GhcO4NEEkLhLUoUwwRp3TSKBBHU=\");\n\n_c = Faq;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    state: state.formReducer.guest\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateState: function updateState(stateType, stateName, value) {\n      return dispatch(_updateState(stateType, stateName, value));\n    },\n    setToState: function setToState(stateType, stateName, value) {\n      return dispatch(_setToState(stateType, stateName, value));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Faq);\n\nvar _c;\n\n$RefreshReg$(_c, \"Faq\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/guest/public/components/faq.js"],"names":["React","useState","useEffect","useContext","connect","setToState","updateState","axios","WebCmsGlobal","Faq","props","state","isPortal","chainId","GENERAL_SETTINGS","locale","isLoading","setIsLoading","clientParams","langcode","active","isChainHotelChange","ISCHAIN","changeHotelRefno","ischain","chainid","hotelrefno","HOTELREFNO","hotelFaq","isLangChange","isRequest","data","url","BASE_URL","method","params","then","hotelFaqResponse","hotelFaqData","success","Object","keys","length","children","mapStateToProps","formReducer","guest","mapDispatchToProps","dispatch","stateType","stateName","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\nimport { connect } from 'react-redux'\nimport { setToState, updateState } from 'state/actions'\nimport axios from 'axios'\nimport WebCmsGlobal from 'components/webcms-global'\n\nconst Faq = (props) => {\n    const { state, setToState, isPortal, chainId} = props\n    const { GENERAL_SETTINGS, locale } = useContext(WebCmsGlobal)\n    const [isLoading, setIsLoading] = useState(false)\n\n    let clientParams = {}\n    clientParams.langcode = locale\n\n    useEffect(() => {\n        let active = true\n\n        let isChainHotelChange = false\n        if (GENERAL_SETTINGS.ISCHAIN && state.changeHotelRefno !== false || isPortal) {\n            clientParams.ischain = true\n            clientParams.chainid = chainId || state.changeHotelRefno\n            clientParams.hotelrefno = GENERAL_SETTINGS.HOTELREFNO\n\n            if(clientParams.chainid !== state.hotelFaq.chainid){\n                isChainHotelChange = true\n            }\n\n        } else {\n            clientParams.ischain = false\n            clientParams.chainid = false\n        }\n\n        let isLangChange = false\n        if (state.hotelFaq.langcode !== locale) {\n            isLangChange = true\n            setToState('guest', ['hotelFaq', 'langcode'], locale)\n            clientParams.langcode = locale\n        }\n\n        let isRequest\n        if (GENERAL_SETTINGS.ISCHAIN) {\n            isRequest = state.hotelFaq.data === false && GENERAL_SETTINGS.ISCHAIN && state.changeHotelRefno !== false\n        } else {\n            isRequest = state.hotelFaq.data === false && GENERAL_SETTINGS.ISCHAIN === false\n        }\n\n        if (active && (isRequest || isLangChange || isChainHotelChange) && isLoading === false) {\n            setIsLoading(true)\n            axios({\n                url: GENERAL_SETTINGS.BASE_URL + 'api/guestweb/faq',\n                method: 'post',\n                params: clientParams\n            }).then((hotelFaqResponse) => {\n                if (active || isPortal) {\n                    const hotelFaqData = hotelFaqResponse.data\n                    if (hotelFaqData.success) {\n                        if(Object.keys(hotelFaqData.data).length > 0){\n                            setToState('guest', ['hotelFaq', 'data'], hotelFaqData.data)\n                            setToState('guest', ['hotelFaq', 'langcode'], locale)\n                            setToState('guest', ['hotelFaq', 'chainid'], clientParams.chainid)\n                            setIsLoading(false)\n                        }else{\n                            setToState('guest', ['hotelFaq', 'data'], null)\n                            setToState('guest', ['hotelFaq', 'langcode'], null)\n                            setToState('guest', ['hotelFaq', 'chainid'], clientParams.chainid)\n                            setIsLoading(false)\n                        }\n                    } else {\n                        setToState('guest', ['hotelFaq', 'data'], null)\n                        setToState('guest', ['hotelFaq', 'langcode'], null)\n                        setToState('guest', ['hotelFaq', 'chainid'], clientParams.chainid)\n                        setIsLoading(false)\n                    }\n                }\n            })\n        }\n\n        return () => {\n            active = false\n        }\n    },[state.changeHotelRefno, locale])\n\n    return (\n        props.children\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        state: state.formReducer.guest,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    updateState: (stateType, stateName, value) => dispatch(updateState(stateType, stateName, value)),\n    setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Faq)\n"]},"metadata":{},"sourceType":"module"}