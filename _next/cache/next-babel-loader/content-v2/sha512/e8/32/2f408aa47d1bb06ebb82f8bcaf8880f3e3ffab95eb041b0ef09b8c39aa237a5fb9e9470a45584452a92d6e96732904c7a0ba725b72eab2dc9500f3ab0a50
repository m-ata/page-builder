{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/components/page/sections/map/Map.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nimport WebCmsGlobal from \"../../../../../../webcms-global\";\nimport { GoogleMap, withScriptjs, withGoogleMap, Marker } from \"react-google-maps\";\nimport InfoBox from \"react-google-maps/lib/components/addons/InfoBox\";\n\nvar Map = function Map(props) {\n  _s();\n\n  var handleCmponent = props.handleCmponent,\n      langCode = props.langCode,\n      defaultCode = props.defaultCode;\n\n  var _useState = useState({\n    lat: 54.68916,\n    lng: 25.2798\n  }),\n      center = _useState[0],\n      setCenter = _useState[1];\n\n  var _useState2 = useState(false),\n      infoBoxOpen = _useState2[0],\n      setInfoBoxOpen = _useState2[1];\n\n  var refMap = useRef(null);\n\n  var _useContext = useContext(WebCmsGlobal),\n      GENERAL_SETTINGS = _useContext.GENERAL_SETTINGS;\n\n  useEffect(function () {\n    GENERAL_SETTINGS && GENERAL_SETTINGS.hotelLocation && setCenter(GENERAL_SETTINGS.hotelLocation);\n  }, [GENERAL_SETTINGS]);\n  useEffect(function () {\n    if (handleCmponent && langCode && defaultCode) {\n      if (langCode !== defaultCode) {\n        handleCmponent({\n          map: true\n        });\n      }\n    }\n  }, []);\n  return __jsx(GoogleMap, {\n    ref: refMap,\n    zoom: 5,\n    center: center,\n    options: {\n      streetViewControl: false,\n      gestureHandling: \"greedy\",\n      zoomControl: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, __jsx(Marker, {\n    position: center,\n    clickable: true,\n    onClick: function onClick() {\n      return setInfoBoxOpen(!infoBoxOpen);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, infoBoxOpen && __jsx(InfoBox, {\n    onCloseClick: function onCloseClick() {\n      return setInfoBoxOpen(false);\n    },\n    options: {\n      closeBoxURL: \"\",\n      enableEventPropagation: true\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 36\n    }\n  }, __jsx(\"div\", {\n    style: {\n      backgroundColor: \"silver\",\n      opacity: 0.75,\n      padding: \"12px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    style: {\n      fontSize: \"10px\",\n      fontColor: \"#08233B\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 29\n    }\n  }, \"Longitude \".concat(center.lng, \", Latitude \").concat(center.lat, \")\"))))));\n};\n\n_s(Map, \"DKKAISILg5M7JgnFP3Sayj9SraM=\");\n\n_c = Map;\nexport default _c3 = withScriptjs(_c2 = withGoogleMap(Map));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Map\");\n$RefreshReg$(_c2, \"%default%$withScriptjs\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/components/page/sections/map/Map.js"],"names":["React","useContext","useEffect","useRef","useState","WebCmsGlobal","GoogleMap","withScriptjs","withGoogleMap","Marker","InfoBox","Map","props","handleCmponent","langCode","defaultCode","lat","lng","center","setCenter","infoBoxOpen","setInfoBoxOpen","refMap","GENERAL_SETTINGS","hotelLocation","map","streetViewControl","gestureHandling","zoomControl","closeBoxURL","enableEventPropagation","backgroundColor","opacity","padding","fontSize","fontColor"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useRef, useState} from 'react';\nimport WebCmsGlobal from \"../../../../../../webcms-global\";\nimport {\n    GoogleMap,\n    withScriptjs,\n    withGoogleMap,\n    Marker\n} from \"react-google-maps\";\nimport InfoBox from \"react-google-maps/lib/components/addons/InfoBox\";\n\nconst Map = (props) => {\n\n    const {handleCmponent, langCode, defaultCode} = props;\n    const [center, setCenter] = useState({lat: 54.68916, lng: 25.2798});\n    const [infoBoxOpen, setInfoBoxOpen] = useState(false)\n    const refMap = useRef(null);\n\n    const { GENERAL_SETTINGS } = useContext(WebCmsGlobal);\n\n    useEffect(() => {\n        GENERAL_SETTINGS && GENERAL_SETTINGS.hotelLocation && setCenter(GENERAL_SETTINGS.hotelLocation)\n    }, [GENERAL_SETTINGS]);\n\n    useEffect(() => {\n        if (handleCmponent && langCode && defaultCode) {\n            if (langCode !== defaultCode) {\n                handleCmponent({\n                    map: true\n                });\n            }\n        }\n    }, []);\n\n    return (\n        <GoogleMap\n            ref={refMap}\n            zoom={5}\n            center={center}\n            options={{\n                streetViewControl:false,\n                gestureHandling: \"greedy\",\n                zoomControl: false,\n            }}\n        >\n            <Marker\n                position={center}\n                clickable={true}\n                onClick={() => setInfoBoxOpen(!infoBoxOpen)}\n            >\n                {\n                    infoBoxOpen && <InfoBox\n                        onCloseClick={() => setInfoBoxOpen(false)}\n                        options={{ closeBoxURL: ``, enableEventPropagation: true }}\n                    >\n                        <div style={{ backgroundColor: `silver`, opacity: 0.75, padding: `12px` }}>\n                            <div style={{ fontSize: `10px`, fontColor: `#08233B` }}>\n                                {`Longitude ${center.lng}, Latitude ${center.lat})`}\n                            </div>\n                        </div>\n                    </InfoBox>\n                }\n            </Marker>\n        </GoogleMap>\n    );\n}\nexport default withScriptjs(withGoogleMap(Map));"]},"metadata":{},"sourceType":"module"}