{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/survey/surveytree/options/sub-components/HasFile.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport { makeStyles } from '@material-ui/core/styles';\nimport styles from '../../../style/SurveyOptions.style';\nimport Button from '@material-ui/core/Button';\nimport { DropzoneArea } from 'material-ui-dropzone';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport useSurveyAction from '../../../../../model/survey/useSurveyAction';\nimport LoginComponent from '../../../../LoginComponent/LoginComponent';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nimport { DEFAULT_OREST_TOKEN } from '../../../../../model/orest/constants';\nvar useStyles = makeStyles(styles);\nexport default function HasFile(props) {\n  _s();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var option = props.option;\n  var router = useRouter(); //style\n\n  var classes = useStyles(); //redux\n\n  var auth = useSelector(function (state) {\n    return state.orest.currentUser && state.orest.currentUser.auth;\n  });\n\n  var _useSurveyAction = useSurveyAction(),\n      setSurveyFiles = _useSurveyAction.setSurveyFiles;\n\n  var surveyIsValid = useSelector(function (state) {\n    return state.survey.isValid;\n  });\n  var surveyTrans = useSelector(function (state) {\n    return state.survey.trans;\n  });\n  var token = useSelector(function (state) {\n    return state.orest.currentUser !== null ? state.orest.currentUser.auth.access_token : DEFAULT_OREST_TOKEN;\n  });\n  var reftoken = router.query.reftoken || token; //state\n\n  var _useState = useState(false),\n      isUploadDialogOpen = _useState[0],\n      setIsUploadDialogOpen = _useState[1];\n\n  var onOpen = function onOpen() {\n    setIsUploadDialogOpen(true);\n  };\n\n  var onClose = function onClose() {\n    setIsUploadDialogOpen(false);\n  };\n\n  var onChange = function onChange(files) {\n    setSurveyFiles(surveyTrans, option.id, files);\n  };\n\n  var onDelete = function onDelete(file) {//console.log(file)\n  };\n\n  return __jsx(\"div\", {\n    className: classes.optionContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    onClick: onOpen,\n    variant: \"contained\",\n    fullWidth: true,\n    disabled: surveyIsValid,\n    className: classes.uploadFileButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, t('str_uploadAFile')), __jsx(Dialog, {\n    open: isUploadDialogOpen,\n    onClose: onClose,\n    maxWidth: 'sm',\n    fullWidth: true,\n    keepMounted: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, !reftoken && !auth ? __jsx(\"div\", {\n    style: {\n      padding: 18\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, __jsx(\"h3\", {\n    style: {\n      fontSize: 27,\n      fontWeight: 500,\n      color: '#2F3434',\n      textAlign: 'center',\n      margin: 6\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }, t('str_loginToUpload')), __jsx(LoginComponent, {\n    locationName: \"survey\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  })) : __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, __jsx(DialogContent, {\n    dividers: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }, __jsx(DropzoneArea, {\n    showPreviews: false,\n    showPreviewsInDropzone: true,\n    showFileNames: true,\n    showFileNamesInPreview: true,\n    filesLimit: 10,\n    showAlerts: true,\n    dropzoneText: 'Drag and drop files here or click',\n    getFileLimitExceedMessage: function getFileLimitExceedMessage(filesLimit) {\n      return \"Maximum allowed number of files exceeded. Only \".concat(filesLimit, \" allowed\");\n    },\n    getFileAddedMessage: function getFileAddedMessage(fileName) {\n      return \"File \".concat(fileName, \" successfully added.\");\n    },\n    getFileRemovedMessage: function getFileRemovedMessage(fileName) {\n      return \"File \".concat(fileName, \" removed.\");\n    } //getDropRejectMessage={(rejectedFile) => `File ${rejectedFile.name} was rejected. File type not supported. File is too big. Size limit is ${rejectedFile.size}.`}\n    ,\n    previewGridClasses: {\n      image: classes.fileUploadPreviewImage\n    },\n    dropzoneParagraphClass: classes.fileUploadPreviewParagraph,\n    previewGridProps: {\n      alignContent: 'center',\n      alignItems: 'center',\n      justify: 'center',\n      item: {\n        style: {\n          padding: 12\n        },\n        xs: 'auto'\n      },\n      container: {\n        spacing: 0,\n        margin: 0,\n        width: '100%',\n        direction: 'row',\n        justify: 'center',\n        alignContent: 'center',\n        alignItems: 'center',\n        style: {\n          paddingTop: 18\n        }\n      }\n    },\n    onChange: onChange,\n    onDelete: onDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 29\n    }\n  })), __jsx(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 25\n    }\n  }, __jsx(Button, {\n    onClick: onClose,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 29\n    }\n  }, t('str_done'))))));\n}\n\n_s(HasFile, \"7rC5/UFuiE0Ltwvi9xpSbq0ps2I=\", false, function () {\n  return [useTranslation, useRouter, useStyles, useSelector, useSurveyAction, useSelector, useSelector, useSelector];\n});\n\n_c = HasFile;\n\nvar _c;\n\n$RefreshReg$(_c, \"HasFile\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/survey/surveytree/options/sub-components/HasFile.js"],"names":["React","useState","useSelector","useRouter","makeStyles","styles","Button","DropzoneArea","Dialog","DialogContent","DialogActions","useSurveyAction","LoginComponent","useTranslation","DEFAULT_OREST_TOKEN","useStyles","HasFile","props","t","option","router","classes","auth","state","orest","currentUser","setSurveyFiles","surveyIsValid","survey","isValid","surveyTrans","trans","token","access_token","reftoken","query","isUploadDialogOpen","setIsUploadDialogOpen","onOpen","onClose","onChange","files","id","onDelete","file","optionContainer","uploadFileButton","padding","fontSize","fontWeight","color","textAlign","margin","filesLimit","fileName","image","fileUploadPreviewImage","fileUploadPreviewParagraph","alignContent","alignItems","justify","item","style","xs","container","spacing","width","direction","paddingTop","button"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport {useSelector} from 'react-redux'\nimport { useRouter } from 'next/router'\nimport {makeStyles} from '@material-ui/core/styles'\nimport styles from '../../../style/SurveyOptions.style'\nimport Button from '@material-ui/core/Button'\nimport {DropzoneArea} from 'material-ui-dropzone'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport useSurveyAction from '../../../../../model/survey/useSurveyAction'\nimport LoginComponent from '../../../../LoginComponent/LoginComponent'\nimport useTranslation from 'lib/translations/hooks/useTranslation'\nimport { DEFAULT_OREST_TOKEN } from '../../../../../model/orest/constants'\n\nconst useStyles = makeStyles(styles)\n\nexport default function HasFile(props) {\n    const { t } = useTranslation()\n    const {option} = props\n    const router = useRouter()\n    //style\n    const classes = useStyles()\n\n    //redux\n    const auth = useSelector((state) => state.orest.currentUser && state.orest.currentUser.auth)\n    const {setSurveyFiles} = useSurveyAction()\n    const surveyIsValid = useSelector((state) => state.survey.isValid)\n    const surveyTrans = useSelector((state) => state.survey.trans)\n    const token = useSelector((state) => state.orest.currentUser !== null ? state.orest.currentUser.auth.access_token : DEFAULT_OREST_TOKEN)\n    const reftoken = router.query.reftoken || token\n\n    //state\n    const [isUploadDialogOpen, setIsUploadDialogOpen] = useState(false)\n\n    const onOpen = () => {\n        setIsUploadDialogOpen(true)\n    }\n\n    const onClose = () => {\n        setIsUploadDialogOpen(false)\n    }\n\n    const onChange = (files) => {\n        setSurveyFiles(surveyTrans, option.id, files)\n    }\n\n    const onDelete = (file) => {\n        //console.log(file)\n    }\n\n    return (\n        <div className={classes.optionContainer}>\n            <Button\n                onClick={onOpen}\n                variant=\"contained\"\n                fullWidth={true}\n                disabled={surveyIsValid}\n                className={classes.uploadFileButton}\n            >\n                {t('str_uploadAFile')}\n            </Button>\n            <Dialog open={isUploadDialogOpen} onClose={onClose} maxWidth={'sm'} fullWidth={true} keepMounted={true}>\n                {(!reftoken && !auth) ? (\n                    <div style={{padding: 18}}>\n                        <h3\n                            style={{\n                                fontSize: 27,\n                                fontWeight: 500,\n                                color: '#2F3434',\n                                textAlign: 'center',\n                                margin: 6,\n                            }}\n                        >\n                            {t('str_loginToUpload')}\n                        </h3>\n                        <LoginComponent locationName=\"survey\"/>\n                    </div>\n                ) : (\n                    <React.Fragment>\n                        <DialogContent dividers={false}>\n                            <DropzoneArea\n                                showPreviews={false}\n                                showPreviewsInDropzone={true}\n                                showFileNames={true}\n                                showFileNamesInPreview={true}\n                                filesLimit={10}\n                                showAlerts={true}\n                                dropzoneText={'Drag and drop files here or click'}\n                                getFileLimitExceedMessage={(filesLimit) =>\n                                    `Maximum allowed number of files exceeded. Only ${filesLimit} allowed`\n                                }\n                                getFileAddedMessage={(fileName) => `File ${fileName} successfully added.`}\n                                getFileRemovedMessage={(fileName) => `File ${fileName} removed.`}\n                                //getDropRejectMessage={(rejectedFile) => `File ${rejectedFile.name} was rejected. File type not supported. File is too big. Size limit is ${rejectedFile.size}.`}\n                                previewGridClasses={{\n                                    image: classes.fileUploadPreviewImage,\n                                }}\n                                dropzoneParagraphClass={classes.fileUploadPreviewParagraph}\n                                previewGridProps={{\n                                    alignContent: 'center',\n                                    alignItems: 'center',\n                                    justify: 'center',\n                                    item: {\n                                        style: {padding: 12},\n                                        xs: 'auto',\n                                    },\n                                    container: {\n                                        spacing: 0,\n                                        margin: 0,\n                                        width: '100%',\n                                        direction: 'row',\n                                        justify: 'center',\n                                        alignContent: 'center',\n                                        alignItems: 'center',\n                                        style: {paddingTop: 18},\n                                    },\n                                }}\n                                onChange={onChange}\n                                onDelete={onDelete}\n                            />\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={onClose} className={classes.button}>\n                                {t('str_done')}\n                            </Button>\n                        </DialogActions>\n                    </React.Fragment>\n                )}\n            </Dialog>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}