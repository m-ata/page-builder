{"ast":null,"code":"import _extends from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\n\nvar _jsxFileName = \"/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/components/faq/qa/AddQA.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Container, Typography, Button, Grid, Box } from \"@material-ui/core\";\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport AddText from \"./AddText\";\nimport { COLORS } from \"../../../constants\";\nvar useStyles = makeStyles(function () {\n  return {\n    cursorPointer: {\n      cursor: 'pointer',\n      color: 'silver',\n      marginTop: 16\n    },\n    actionButton: {\n      borderRadius: 20,\n      marginBottom: 16,\n      backgroundColor: COLORS === null || COLORS === void 0 ? void 0 : COLORS.secondary,\n      marginTop: 16\n    },\n    answerIcon: {\n      cursor: 'pointer',\n      color: COLORS === null || COLORS === void 0 ? void 0 : COLORS.secondary,\n      \"float\": 'right',\n      marginTop: -32\n    }\n  };\n});\nvar defaultProps = {\n  bgcolor: 'silver',\n  m: 2,\n  border: 2,\n  borderColor: 'gray',\n  borderRadius: 5\n};\n\nvar AddQA = function AddQA(props) {\n  _s();\n\n  var state = props.state,\n      onAddQA = props.onAddQA;\n  var classes = useStyles();\n\n  var _useState = useState(''),\n      question = _useState[0],\n      setQuestion = _useState[1];\n\n  var _useState2 = useState(''),\n      answer = _useState2[0],\n      setAnswer = _useState2[1];\n\n  var _useState3 = useState(''),\n      type = _useState3[0],\n      setType = _useState3[1];\n\n  var _useState4 = useState(false),\n      isQuestionSave = _useState4[0],\n      setQuestionSave = _useState4[1];\n\n  var _useState5 = useState(false),\n      isAnswerSave = _useState5[0],\n      setAnswerSave = _useState5[1];\n\n  var onChangeText = function onChangeText(text) {\n    if (type === 'question') {\n      setQuestion(text);\n    } else {\n      setAnswer(text);\n    }\n  };\n\n  var handleSave = function handleSave() {\n    if (question && answer) {\n      var index = state.faq.indexOf(state.faq.find(function (x) {\n        return x.id === state.faqActiveTab;\n      }));\n      onAddQA({\n        id: \"question-\".concat(state.faq[index].items.length),\n        type: 'question',\n        text: question,\n        items: [{\n          id: 'answer-0',\n          type: 'answer',\n          text: answer\n        }]\n      });\n    }\n\n    type === 'question' ? setQuestionSave(true) : setAnswerSave(true);\n    setType('');\n  };\n\n  return __jsx(Container, {\n    style: {\n      minHeight: 200\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    container: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, isQuestionSave && question && __jsx(React.Fragment, null, __jsx(Typography, {\n    component: 'h5',\n    variant: 'h5',\n    style: {\n      color: 'silver',\n      marginLeft: 16,\n      marginTop: 16\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 33\n    }\n  }, \"Question\"), __jsx(Box, _extends({}, defaultProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 33\n    }\n  }), __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: question\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 37\n    }\n  }), !isAnswerSave && __jsx(QuestionAnswerIcon, {\n    className: classes.answerIcon,\n    onClick: function onClick() {\n      setType('answer');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 58\n    }\n  }))), !isQuestionSave && __jsx(Typography, {\n    component: 'h6',\n    variant: 'h6',\n    className: classes.cursorPointer,\n    onClick: function onClick() {\n      return setType('question');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 44\n    }\n  }, \" + Add Question\"))), __jsx(Grid, {\n    container: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, isAnswerSave && answer && __jsx(React.Fragment, null, __jsx(Typography, {\n    component: 'h5',\n    variant: 'h5',\n    style: {\n      color: 'silver',\n      marginLeft: 16\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 29\n    }\n  }, \"Answer\"), __jsx(Box, _extends({}, defaultProps, {\n    style: {\n      height: 100,\n      overflow: 'auto'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 33\n    }\n  }), __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: answer\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 37\n    }\n  }))))), type && __jsx(Typography, {\n    component: 'div',\n    style: {\n      marginTop: 16,\n      marginBottom: 16\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 25\n    }\n  }, __jsx(AddText, {\n    model: type ? type === 'question' ? question : answer : '',\n    onChangeModel: onChangeText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }), __jsx(Button, {\n    className: classes.actionButton,\n    variant: \"contained\",\n    size: \"small\",\n    color: \"primary\",\n    \"aria-label\": \"add\",\n    onClick: handleSave,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, \"SAVE\")));\n};\n\n_s(AddQA, \"QoL45GM87qdM7ABdypqP+W6F/cQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = AddQA;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    state: state.formReducer.pageBuilder\n  };\n};\n\nexport default connect(mapStateToProps)(AddQA);\n\nvar _c;\n\n$RefreshReg$(_c, \"AddQA\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/components/faq/qa/AddQA.js"],"names":["React","useState","Container","Typography","Button","Grid","Box","QuestionAnswerIcon","makeStyles","connect","AddText","COLORS","useStyles","cursorPointer","cursor","color","marginTop","actionButton","borderRadius","marginBottom","backgroundColor","secondary","answerIcon","defaultProps","bgcolor","m","border","borderColor","AddQA","props","state","onAddQA","classes","question","setQuestion","answer","setAnswer","type","setType","isQuestionSave","setQuestionSave","isAnswerSave","setAnswerSave","onChangeText","text","handleSave","index","faq","indexOf","find","x","id","faqActiveTab","items","length","minHeight","marginLeft","__html","height","overflow","mapStateToProps","formReducer","pageBuilder"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { Container, Typography, Button, Grid, Box } from \"@material-ui/core\";\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport AddText from \"./AddText\";\nimport {COLORS} from \"../../../constants\";\n\nconst useStyles = makeStyles(() => ({\n    cursorPointer: {\n        cursor: 'pointer',\n        color: 'silver',\n        marginTop: 16\n    },\n    actionButton: {\n        borderRadius: 20,\n        marginBottom: 16,\n        backgroundColor: COLORS?.secondary,\n        marginTop: 16\n    },\n    answerIcon: {\n        cursor: 'pointer',\n        color: COLORS?.secondary,\n        float: 'right',\n        marginTop: -32\n    }\n}));\n\nconst defaultProps = {\n    bgcolor: 'silver',\n    m: 2,\n    border: 2,\n    borderColor: 'gray',\n    borderRadius: 5,\n}\n\nconst AddQA = (props) => {\n\n    const { state, onAddQA } = props\n    const classes = useStyles();\n    const [question, setQuestion] = useState('');\n    const [answer, setAnswer] = useState('');\n    const [type, setType] = useState('');\n    const [isQuestionSave, setQuestionSave] = useState(false);\n    const [isAnswerSave, setAnswerSave] = useState(false);\n\n    const onChangeText = (text) => {\n        if (type === 'question') {\n            setQuestion(text);\n        } else {\n            setAnswer(text);\n        }\n    }\n\n    const handleSave = () => {\n        if (question && answer) {\n            const index = state.faq.indexOf(state.faq.find(x => x.id === state.faqActiveTab));\n            onAddQA({\n                id: `question-${state.faq[index].items.length}`,\n                type: 'question',\n                text: question,\n                items: [{\n                    id: 'answer-0',\n                    type: 'answer',\n                    text: answer\n                }]\n            })\n        }\n        type === 'question' ? setQuestionSave(true) : setAnswerSave(true);\n        setType('');\n    }\n\n    return (\n        <Container style={{minHeight: 200}}>\n            <Grid container>\n                <Grid item xs={12}>\n                    {\n                        (isQuestionSave && question) && <>\n                                <Typography component={'h5'} variant={'h5'} style={{color: 'silver', marginLeft: 16, marginTop: 16}} >\n                                    Question\n                                </Typography>\n                                <Box {...defaultProps}>\n                                    <div dangerouslySetInnerHTML={{__html: question}} ></div>\n                                    {\n                                        !isAnswerSave && <QuestionAnswerIcon className={classes.answerIcon} onClick={() => {\n                                            setType('answer');\n                                        }} />\n                                    }\n                                </Box>\n                            </>\n                    }\n                    {\n                        !isQuestionSave && <Typography\n                            component={'h6'}\n                            variant={'h6'}\n                            className={classes.cursorPointer}\n                            onClick={() => setType('question')}\n                        > + Add Question\n                        </Typography>\n                    }\n                </Grid>\n            </Grid>\n            <Grid container>\n                <Grid item xs={12}>\n                    {\n                        (isAnswerSave && answer) && <>\n                            <Typography component={'h5'} variant={'h5'} style={{color: 'silver', marginLeft: 16}} >\n                                Answer\n                            </Typography>\n                                <Box {...defaultProps} style={{height: 100, overflow: 'auto'}} >\n                                    <div dangerouslySetInnerHTML={{__html: answer}}></div>\n                                </Box>\n                        </>\n                    }\n                </Grid>\n            </Grid>\n            {\n                type && <Typography component={'div'} style={{marginTop: 16, marginBottom: 16}}>\n                    <AddText model={type ? (type === 'question' ? question : answer) : ''} onChangeModel={onChangeText} />\n                    <Button\n                        className={classes.actionButton}\n                        variant=\"contained\"\n                        size=\"small\"\n                        color=\"primary\"\n                        aria-label=\"add\"\n                        onClick={handleSave}\n                    >\n                        SAVE\n\n                    </Button>\n                </Typography>\n            }\n        </Container>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        state: state.formReducer.pageBuilder,\n    }\n}\n\nexport default connect (mapStateToProps)(AddQA);"]},"metadata":{},"sourceType":"module"}