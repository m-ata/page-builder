{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/CustomTimePicker/CustomTimePicker.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { TextField } from '@material-ui/core';\nimport { TimePicker, LocalizationProvider } from '@material-ui/pickers';\nimport moment from 'moment';\nimport MomentAdapter from '@date-io/moment';\nimport PropTypes from 'prop-types';\nimport useTranslation from \"../../lib/translations/hooks/useTranslation\";\n\nfunction CustomTimePicker(props) {\n  const {\n    value,\n    onChange,\n    onError,\n    label,\n    ampm\n  } = props; //context\n\n  const {\n    t\n  } = useTranslation();\n\n  const handleOnChange = newTime => {\n    onChange(newTime);\n  };\n\n  const handleOnError = error => {\n    onError(error);\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, __jsx(LocalizationProvider, {\n    dateLibInstance: moment,\n    dateAdapter: MomentAdapter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, __jsx(TimePicker, {\n    ampm: ampm,\n    inputFormat: \"HH:mm\",\n    mask: \"__:__\",\n    value: value,\n    onChange: newTime => {\n      handleOnChange(newTime);\n    },\n    onError: e => {\n      handleOnError(e);\n    },\n    label: label || t('str_time'),\n    renderInput: props => __jsx(TextField, _extends({\n      id: 'time',\n      name: 'time',\n      variant: 'outlined'\n    }, props, {\n      InputProps: _objectSpread(_objectSpread({}, props.InputProps), {}, {\n        endAdornment: __jsx(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 37\n          }\n        }, __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 41\n          }\n        }))\n      }),\n      FormHelperTextProps: {\n        style: {\n          opacity: props.error ? '1' : '0'\n        }\n      },\n      helperText: `(${props.inputProps.placeholder})`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  })));\n}\n\nexport default CustomTimePicker;\nCustomTimePicker.defaultProps = {\n  ampm: false\n};\nCustomTimePicker.propTypes = {\n  label: PropTypes.String,\n  onError: PropTypes.func,\n  onChange: PropTypes.func,\n  value: PropTypes.object,\n  ampm: PropTypes.bool\n};","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/CustomTimePicker/CustomTimePicker.js"],"names":["React","TextField","TimePicker","LocalizationProvider","moment","MomentAdapter","PropTypes","useTranslation","CustomTimePicker","props","value","onChange","onError","label","ampm","t","handleOnChange","newTime","handleOnError","error","e","InputProps","endAdornment","style","opacity","inputProps","placeholder","defaultProps","propTypes","String","func","object","bool"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAmB,OAAnB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,UAAT,EAAqBC,oBAArB,QAAgD,sBAAhD;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,6CAA3B;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAE7B,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,OAAnB;AAA4BC,IAAAA,KAA5B;AAAmCC,IAAAA;AAAnC,MAA4CL,KAAlD,CAF6B,CAI7B;;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAQR,cAAc,EAA5B;;AAEA,QAAMS,cAAc,GAAIC,OAAD,IAAa;AAChCN,IAAAA,QAAQ,CAACM,OAAD,CAAR;AACH,GAFD;;AAIA,QAAMC,aAAa,GAAIC,KAAD,IAAW;AAC7BP,IAAAA,OAAO,CAACO,KAAD,CAAP;AACH,GAFD;;AAIA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,oBAAD;AAAsB,IAAA,eAAe,EAAEf,MAAvC;AAA+C,IAAA,WAAW,EAAEC,aAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AACI,IAAA,IAAI,EAAES,IADV;AAEI,IAAA,WAAW,EAAC,OAFhB;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,KAAK,EAAEJ,KAJX;AAKI,IAAA,QAAQ,EAAGO,OAAD,IAAa;AACnBD,MAAAA,cAAc,CAACC,OAAD,CAAd;AACH,KAPL;AAQI,IAAA,OAAO,EAAGG,CAAD,IAAO;AACZF,MAAAA,aAAa,CAACE,CAAD,CAAb;AACH,KAVL;AAWI,IAAA,KAAK,EAAEP,KAAK,IAAIE,CAAC,CAAC,UAAD,CAXrB;AAYI,IAAA,WAAW,EAAGN,KAAD,IACT,MAAC,SAAD;AACI,MAAA,EAAE,EAAE,MADR;AAEI,MAAA,IAAI,EAAE,MAFV;AAGI,MAAA,OAAO,EAAE;AAHb,OAIQA,KAJR;AAKI,MAAA,UAAU,kCACHA,KAAK,CAACY,UADH;AAENC,QAAAA,YAAY,EACR,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAHE,QALd;AAaI,MAAA,mBAAmB,EAAE;AACjBC,QAAAA,KAAK,EAAG;AAACC,UAAAA,OAAO,EAAEf,KAAK,CAACU,KAAN,GAAc,GAAd,GAAoB;AAA9B;AADS,OAbzB;AAgBI,MAAA,UAAU,EAAG,IAAGV,KAAK,CAACgB,UAAN,CAAiBC,WAAY,GAhBjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAbR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ;AAwCH;;AAED,eAAelB,gBAAf;AAEAA,gBAAgB,CAACmB,YAAjB,GAAgC;AAC5Bb,EAAAA,IAAI,EAAE;AADsB,CAAhC;AAIAN,gBAAgB,CAACoB,SAAjB,GAA6B;AACzBf,EAAAA,KAAK,EAAEP,SAAS,CAACuB,MADQ;AAEzBjB,EAAAA,OAAO,EAAEN,SAAS,CAACwB,IAFM;AAGzBnB,EAAAA,QAAQ,EAAEL,SAAS,CAACwB,IAHK;AAIzBpB,EAAAA,KAAK,EAAEJ,SAAS,CAACyB,MAJQ;AAKzBjB,EAAAA,IAAI,EAAER,SAAS,CAAC0B;AALS,CAA7B","sourcesContent":["import React  from \"react\";\nimport { TextField } from '@material-ui/core'\nimport { TimePicker, LocalizationProvider} from '@material-ui/pickers'\nimport moment from 'moment'\nimport MomentAdapter from '@date-io/moment'\nimport PropTypes from 'prop-types'\nimport useTranslation from \"../../lib/translations/hooks/useTranslation\";\n\nfunction CustomTimePicker(props) {\n\n    const { value, onChange, onError, label, ampm } = props;\n\n    //context\n    const { t } = useTranslation();\n\n    const handleOnChange = (newTime) => {\n        onChange(newTime)\n    }\n\n    const handleOnError = (error) => {\n        onError(error)\n    }\n\n    return(\n        <div>\n            <LocalizationProvider dateLibInstance={moment} dateAdapter={MomentAdapter}>\n                <TimePicker\n                    ampm={ampm}\n                    inputFormat=\"HH:mm\"\n                    mask=\"__:__\"\n                    value={value}\n                    onChange={(newTime) => {\n                        handleOnChange(newTime)\n                    }}\n                    onError={(e) => {\n                        handleOnError(e)\n                    }}\n                    label={label || t('str_time')}\n                    renderInput={(props) => (\n                        <TextField\n                            id={'time'}\n                            name={'time'}\n                            variant={'outlined'}\n                            {...props}\n                            InputProps={{\n                                ...props.InputProps,\n                                endAdornment: (\n                                    <React.Fragment>\n                                        <span/>\n                                    </React.Fragment>\n                                ),\n                            }}\n                            FormHelperTextProps={{\n                                style:  {opacity: props.error ? '1' : '0'}\n                            }}\n                            helperText={`(${props.inputProps.placeholder})`}\n                        />\n                    )\n                    }\n                />\n            </LocalizationProvider>\n        </div>\n    )\n}\n\nexport default CustomTimePicker;\n\nCustomTimePicker.defaultProps = {\n    ampm: false\n}\n\nCustomTimePicker.propTypes = {\n    label: PropTypes.String,\n    onError: PropTypes.func,\n    onChange: PropTypes.func,\n    value: PropTypes.object,\n    ampm: PropTypes.bool\n}"]},"metadata":{},"sourceType":"module"}