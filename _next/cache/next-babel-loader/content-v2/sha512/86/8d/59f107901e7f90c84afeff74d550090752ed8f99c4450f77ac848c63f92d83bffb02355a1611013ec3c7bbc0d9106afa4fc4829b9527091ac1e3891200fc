{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/booking/components/BookInfoMessage.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper, Typography, Card, CardActions, Button, IconButton } from '@material-ui/core';\nimport { Close, CheckCircle } from '@material-ui/icons';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nimport { green } from '@material-ui/core/colors';\nconst useStyles = makeStyles(() => ({\n  card: {\n    backgroundColor: '#fddc6c',\n    width: '100%'\n  },\n  typography: {\n    fontWeight: 'bold'\n  },\n  actionRoot: {\n    padding: '8px 8px 8px 16px',\n    justifyContent: 'space-between'\n  },\n  icons: {\n    marginLeft: 'auto'\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)'\n  },\n  collapse: {\n    padding: 16,\n    textAlign: 'end'\n  },\n  infoText: {\n    textAlign: 'start'\n  },\n  checkIcon: {\n    fontSize: 20,\n    paddingRight: 4\n  },\n  button: {\n    backgroundColor: green[400],\n    textTransform: 'none',\n    '&:hover': {\n      backgroundColor: green[500]\n    }\n  }\n}));\n\nconst BookInfoMessage = props => {\n  var _props$useData, _props$useData2, _props$useData3, _props$useData4, _props$useData5, _props$useData6, _props$useData7, _props$useData8, _props$useData9, _props$useData10;\n\n  const classes = useStyles();\n  const {\n    t\n  } = useTranslation();\n  return __jsx(Card, {\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, __jsx(CardActions, {\n    classes: {\n      root: classes.actionRoot\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle2\",\n    className: classes.typography,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, t('str_wouldYouLikeToCompleteTheReservationBelow')), __jsx(\"div\", {\n    className: classes.icons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, __jsx(IconButton, {\n    className: classes.expand,\n    onClick: () => props.handleClose(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, __jsx(Close, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  })))), __jsx(Paper, {\n    className: classes.collapse,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, __jsx(Typography, {\n    gutterBottom: true,\n    className: classes.infoText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, t('str_bookInfoPersistMessage', {\n    ci: props !== null && props !== void 0 && (_props$useData = props.useData) !== null && _props$useData !== void 0 && _props$useData.checkinDate ? moment(props === null || props === void 0 ? void 0 : (_props$useData2 = props.useData) === null || _props$useData2 === void 0 ? void 0 : _props$useData2.checkinDate).format('DD.MM.YYYY') : '',\n    co: props !== null && props !== void 0 && (_props$useData3 = props.useData) !== null && _props$useData3 !== void 0 && _props$useData3.checkoutDate ? moment(props === null || props === void 0 ? void 0 : (_props$useData4 = props.useData) === null || _props$useData4 === void 0 ? void 0 : _props$useData4.checkoutDate).format('DD.MM.YYYY') : '',\n    night: props !== null && props !== void 0 && (_props$useData5 = props.useData) !== null && _props$useData5 !== void 0 && _props$useData5.checkinDate && props !== null && props !== void 0 && (_props$useData6 = props.useData) !== null && _props$useData6 !== void 0 && _props$useData6.checkoutDate ? moment(props === null || props === void 0 ? void 0 : (_props$useData7 = props.useData) === null || _props$useData7 === void 0 ? void 0 : _props$useData7.checkoutDate).diff(moment(props === null || props === void 0 ? void 0 : (_props$useData8 = props.useData) === null || _props$useData8 === void 0 ? void 0 : _props$useData8.checkinDate), 'days') : 0,\n    adult: (props === null || props === void 0 ? void 0 : (_props$useData9 = props.useData) === null || _props$useData9 === void 0 ? void 0 : _props$useData9.adult) || 0,\n    child: (props === null || props === void 0 ? void 0 : (_props$useData10 = props.useData) === null || _props$useData10 === void 0 ? void 0 : _props$useData10.child) || 0\n  })), __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.button,\n    disableElevation: true,\n    onClick: () => props.handleUse(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, __jsx(CheckCircle, {\n    className: classes.checkIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }), t('str_yesUseThisInformation'))));\n};\n\nexport default BookInfoMessage;","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/booking/components/BookInfoMessage.js"],"names":["React","moment","makeStyles","Paper","Typography","Card","CardActions","Button","IconButton","Close","CheckCircle","useTranslation","green","useStyles","card","backgroundColor","width","typography","fontWeight","actionRoot","padding","justifyContent","icons","marginLeft","expandOpen","transform","collapse","textAlign","infoText","checkIcon","fontSize","paddingRight","button","textTransform","BookInfoMessage","props","classes","t","root","expand","handleClose","ci","useData","checkinDate","format","co","checkoutDate","night","diff","adult","child","handleUse"],"mappings":"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","sourcesContent":["import React from 'react'\nimport moment from 'moment'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Paper, Typography, Card, CardActions, Button, IconButton } from '@material-ui/core'\nimport {Close, CheckCircle} from '@material-ui/icons'\nimport useTranslation from 'lib/translations/hooks/useTranslation'\nimport { green } from '@material-ui/core/colors'\n\nconst useStyles = makeStyles(() => ({\n    card: {\n        backgroundColor: '#fddc6c',\n        width: '100%',\n    },\n    typography: {\n        fontWeight: 'bold',\n    },\n    actionRoot: {\n        padding: '8px 8px 8px 16px',\n        justifyContent: 'space-between',\n    },\n    icons: {\n        marginLeft: 'auto',\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    collapse: {\n        padding: 16,\n        textAlign: 'end'\n    },\n    infoText: {\n        textAlign: 'start'\n    },\n    checkIcon: {\n        fontSize: 20,\n        paddingRight: 4,\n    },\n    button: {\n        backgroundColor: green[400],\n        textTransform: 'none',\n        '&:hover': {\n            backgroundColor: green[500],\n        },\n    },\n}))\n\nconst BookInfoMessage = ((props) => {\n    const classes = useStyles()\n    const { t } = useTranslation()\n\n    return (\n        <Card className={classes.card}>\n            <CardActions classes={{ root: classes.actionRoot }}>\n                <Typography variant='subtitle2' className={classes.typography}>\n                    {t('str_wouldYouLikeToCompleteTheReservationBelow')}\n                </Typography>\n                <div className={classes.icons}>\n                    <IconButton className={classes.expand} onClick={() => props.handleClose()}>\n                        <Close />\n                    </IconButton>\n                </div>\n            </CardActions>\n            <Paper className={classes.collapse}>\n                <Typography gutterBottom className={classes.infoText}>{t('str_bookInfoPersistMessage', {\n                    ci: props?.useData?.checkinDate ? moment(props?.useData?.checkinDate).format('DD.MM.YYYY') : '',\n                    co: props?.useData?.checkoutDate ? moment(props?.useData?.checkoutDate).format('DD.MM.YYYY') : '',\n                    night: props?.useData?.checkinDate && props?.useData?.checkoutDate ? moment(props?.useData?.checkoutDate).diff(moment(props?.useData?.checkinDate), 'days') : 0,\n                    adult: props?.useData?.adult || 0,\n                    child: props?.useData?.child || 0,\n                })}</Typography>\n                <Button variant='contained' color='primary' className={classes.button} disableElevation onClick={()=> props.handleUse()}>\n                    <CheckCircle className={classes.checkIcon} />\n                    {t('str_yesUseThisInformation')}\n                </Button>\n            </Paper>\n        </Card>\n    )\n})\n\nexport default BookInfoMessage"]},"metadata":{},"sourceType":"module"}