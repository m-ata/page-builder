{"ast":null,"code":"import axios from \"axios\";\nimport { OREST_RAFILE_PARAM, OREST_DELETE, OREST_UPLOAD, REQUEST_METHOD_CONST, isErrorMsg } from \"../../constants\";\nexport function RaFileDelete(orestUrl, token, hotelRefNo, gid) {\n  var url = orestUrl + OREST_RAFILE_PARAM + OREST_DELETE;\n  var params = {\n    gid: gid,\n    hotelrefno: Number(hotelRefNo)\n  };\n  var options = {\n    url: url,\n    method: 'delete',\n    headers: {\n      \"Authorization\": \"Bearer \".concat(token)\n    },\n    params: params\n  };\n  return axios(options).then(function (response) {\n    return response;\n  })[\"catch\"](function (error) {\n    return error.response || {\n      status: 0\n    };\n  });\n}\n_c = RaFileDelete;\nexport function RaFileImageUpload(orestUrl, token, masterid, element) {\n  var url = orestUrl + OREST_RAFILE_PARAM + OREST_UPLOAD;\n  var params = {\n    masterid: masterid\n  };\n  var binaryData = [];\n  binaryData.push(element);\n  var formData = new FormData();\n  formData.append('file', new Blob(binaryData, {\n    type: element.type\n  }), element.name);\n  var options = {\n    url: url,\n    method: 'post',\n    headers: {\n      \"Authorization\": \"Bearer \".concat(token),\n      'Content-Type': 'multipart/form-data'\n    },\n    params: params,\n    data: formData\n  };\n  return axios(options).then(function (response) {\n    return response;\n  })[\"catch\"](function (error) {\n    return error.response || {\n      status: 0\n    };\n  });\n}\n_c2 = RaFileImageUpload;\nexport var PreviewFile = function PreviewFile(GENERAL_SETTINGS, token, gid, fileUrl, hotelrefno) {\n  if (fileUrl) {\n    if (fileUrl.includes('http://') || fileUrl.includes('https://')) {\n      return axios({\n        url: GENERAL_SETTINGS.BASE_URL + 'api/get/public/file',\n        method: REQUEST_METHOD_CONST.POST,\n        params: {\n          url: fileUrl,\n          responseType: 'blob'\n        }\n      }).then(function (r) {\n        if (r.status === 200 && r.data.data) {\n          var _r$data, _r$data$type;\n\n          var blob = new Blob([new Uint8Array(r.data.data.data)], {\n            type: r.data.type\n          });\n          var url = URL.createObjectURL(blob);\n          var fileType = r === null || r === void 0 ? void 0 : (_r$data = r.data) === null || _r$data === void 0 ? void 0 : (_r$data$type = _r$data.type) === null || _r$data$type === void 0 ? void 0 : _r$data$type.split('/');\n          fileType = fileType && fileType[0] || null;\n          return {\n            success: true,\n            url: url,\n            fileType: fileType\n          };\n        }\n      });\n    }\n  } else if (gid) {\n    return axios({\n      url: \"\".concat(GENERAL_SETTINGS.OREST_URL, \"/tools/file/download\"),\n      headers: {\n        \"Authorization\": \"Bearer \".concat(token)\n      },\n      method: REQUEST_METHOD_CONST.GET,\n      responseType: 'blob',\n      params: {\n        gid: gid,\n        hotelrefno: hotelrefno\n      }\n    }).then(function (r) {\n      var status = r.status;\n\n      if (status === 200) {\n        var _r$data2, _r$data2$type;\n\n        var url = URL.createObjectURL(r.data);\n        var fileType = r === null || r === void 0 ? void 0 : (_r$data2 = r.data) === null || _r$data2 === void 0 ? void 0 : (_r$data2$type = _r$data2.type) === null || _r$data2$type === void 0 ? void 0 : _r$data2$type.split('/');\n        fileType = fileType && fileType[0];\n        return {\n          success: true,\n          url: url,\n          fileType: fileType\n        };\n      } else if (status === 204) {\n        return {\n          success: false,\n          errorText: 'str_fileDoesNotExistOrCorrupted',\n          variant: 'error'\n        };\n      } else {\n        var error = isErrorMsg(r);\n        return {\n          success: false,\n          errorText: error.errMsg,\n          variant: 'error'\n        };\n      }\n    });\n  } else {\n    return {\n      success: false,\n      errorText: '',\n      variant: 'error'\n    };\n  }\n};\n_c3 = PreviewFile;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"RaFileDelete\");\n$RefreshReg$(_c2, \"RaFileImageUpload\");\n$RefreshReg$(_c3, \"PreviewFile\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/model/orest/components/RaFile/index.js"],"names":["axios","OREST_RAFILE_PARAM","OREST_DELETE","OREST_UPLOAD","REQUEST_METHOD_CONST","isErrorMsg","RaFileDelete","orestUrl","token","hotelRefNo","gid","url","params","hotelrefno","Number","options","method","headers","then","response","error","status","RaFileImageUpload","masterid","element","binaryData","push","formData","FormData","append","Blob","type","name","data","PreviewFile","GENERAL_SETTINGS","fileUrl","includes","BASE_URL","POST","responseType","r","blob","Uint8Array","URL","createObjectURL","fileType","split","success","OREST_URL","GET","errorText","variant","errMsg"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {\n    OREST_RAFILE_PARAM,\n    OREST_DELETE,\n    OREST_UPLOAD, REQUEST_METHOD_CONST, isErrorMsg\n} from \"../../constants\";\n\nexport function RaFileDelete(orestUrl, token, hotelRefNo, gid) {\n    const url = orestUrl + OREST_RAFILE_PARAM + OREST_DELETE;\n\n    const params = {\n        gid: gid,\n        hotelrefno: Number(hotelRefNo),\n    };\n\n    const options = {\n        url: url,\n        method: 'delete',\n        headers: {\n            \"Authorization\": `Bearer ${token}`\n        },\n        params\n    };\n\n    return axios(options).then(response => {\n        return response\n    }).catch(error => {\n        return error.response || {status: 0};\n    })\n}\n\nexport function RaFileImageUpload(orestUrl, token, masterid, element) {\n    const url = orestUrl + OREST_RAFILE_PARAM + OREST_UPLOAD;\n\n    const params = {\n        masterid: masterid,\n    };\n\n    let binaryData = [];\n    binaryData.push(element);\n    let formData = new FormData();\n    formData.append('file', new Blob(binaryData, {type: element.type}), element.name);\n\n    const options = {\n        url: url,\n        method: 'post',\n        headers: {\n            \"Authorization\": `Bearer ${token}`,\n            'Content-Type': 'multipart/form-data'\n        },\n        params: params,\n        data: formData\n    };\n\n    return axios(options).then(response => {\n        return response\n    }).catch(error => {\n        return error.response || {status: 0};\n    })\n\n}\n\nexport const PreviewFile = (GENERAL_SETTINGS, token, gid, fileUrl, hotelrefno) => {\n    if(fileUrl) {\n        if(fileUrl.includes('http://') || fileUrl.includes('https://')) {\n            return axios({\n                url: GENERAL_SETTINGS.BASE_URL + 'api/get/public/file',\n                method: REQUEST_METHOD_CONST.POST,\n                params: {\n                    url: fileUrl,\n                    responseType: 'blob',\n                }\n            }).then((r) => {\n                if(r.status === 200 && r.data.data) {\n                    const blob = new Blob([new Uint8Array(r.data.data.data)], {type: r.data.type})\n                    let url = URL.createObjectURL(blob)\n                    let fileType = r?.data?.type?.split('/')\n                    fileType = fileType && fileType[0] || null\n                    return {success: true, url, fileType}\n                }\n            })\n        }\n    } else if(gid) {\n        return axios({\n            url: `${GENERAL_SETTINGS.OREST_URL}/tools/file/download`,\n            headers: {\n                \"Authorization\": `Bearer ${token}`\n            },\n            method: REQUEST_METHOD_CONST.GET,\n            responseType: 'blob',\n            params: {\n                gid: gid,\n                hotelrefno: hotelrefno\n            },\n        }).then((r) => {\n            const status = r.status\n            if (status === 200) {\n                let url = URL.createObjectURL(r.data)\n                let fileType = r?.data?.type?.split('/')\n                fileType = fileType && fileType[0]\n                return {success: true, url, fileType}\n            } else if(status === 204) {\n                return {success: false, errorText: 'str_fileDoesNotExistOrCorrupted', variant: 'error'}\n            } else{\n                const error = isErrorMsg(r);\n                return {success: false, errorText: error.errMsg, variant: 'error'}\n            }\n        })\n    } else {\n        return {success: false, errorText: '', variant: 'error'}\n    }\n\n\n}\n"]},"metadata":{},"sourceType":"module"}