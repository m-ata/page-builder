{"ast":null,"code":"import _extends from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/mata/app-cloudweb/components/guest/account/Details/ClientBase.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport * as global from '@webcms-globals';\nimport { helper } from '@webcms-globals';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SelectAutoComplete from '@webcms-ui/core/select-autocomplete';\nimport FileUploadAndShow from '@webcms-ui/core/file-upload-and-show';\nimport SignerPad from '@webcms-ui/core/signer-pad';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nimport WebCmsGlobal from 'components/webcms-global';\nimport stylesTabPanel from '../style/TabPanel.style';\nimport { required } from 'state/utils/form';\nimport { emailValidation, mobileTelNoFormat, OREST_ENDPOINT, TRANSTYPES } from 'model/orest/constants';\nimport PhoneInput from '@webcms-ui/core/phone-input';\nimport TabHeader from 'components/layout/components/TabHeader';\nimport { Button, Grid, Icon, TextField } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport { DatePicker, LocalizationProvider } from '@material-ui/pickers';\nimport moment from 'moment';\nimport MomentAdapter from '@date-io/moment';\nimport { fieldGroupAccordions, fieldGroups, otherGuestMandatoryFields, primaryGuestMandatoryFields } from './clientInitialState';\nimport RoomSelection from './RoomSelection';\nimport CheckInConfirmation from './CheckInConfirmation';\nimport OtherGuests from './OtherGuests';\nimport { Insert, List, Patch, UseOrest, ViewList } from '@webcms/orest';\nimport { useSnackbar } from 'notistack';\nimport FrameCheckbox from '@webcms-ui/core/frame-checkbox';\nimport { sendGuestChangeNotifyMail } from '../Base/helper';\nimport { useOrestAction } from 'model/orest';\nimport { fieldOptions, fieldTypes } from 'constants/form-elements';\nimport { employeeFieldGroups, employeeMandatoryFields } from 'components/emp-portal/employeeInitialState';\nimport LoadingSpinner from 'components/LoadingSpinner';\nimport { useRouter } from 'next/router';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nvar useStylesTabPanel = makeStyles(stylesTabPanel());\n\nvar ClientBase = function ClientBase(_ref) {\n  _s();\n\n  var isPrimaryGuest = _ref.isPrimaryGuest,\n      useClientInitialState = _ref.useClientInitialState,\n      setUseClientInitialState = _ref.setUseClientInitialState,\n      useClientOrestState = _ref.useClientOrestState,\n      useClientReservation = _ref.useClientReservation,\n      usePrimaryClientReservation = _ref.usePrimaryClientReservation,\n      isEmpPortal = _ref.isEmpPortal;\n  var router = useRouter();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var classesTabPanel = useStylesTabPanel();\n\n  var _useContext = useContext(WebCmsGlobal),\n      GENERAL_SETTINGS = _useContext.GENERAL_SETTINGS,\n      locale = _useContext.locale;\n\n  var fieldGroupArray = isEmpPortal ? employeeFieldGroups : fieldGroups;\n  var useHotelWorkDateTime = useSelector(function (state) {\n    var _state$orest, _state$orest$state;\n\n    return (state === null || state === void 0 ? void 0 : (_state$orest = state.orest) === null || _state$orest === void 0 ? void 0 : (_state$orest$state = _state$orest.state) === null || _state$orest$state === void 0 ? void 0 : _state$orest$state.hotelWorkDateTime) || false;\n  });\n  var useToken = useSelector(function (state) {\n    var _state$orest2, _state$orest2$current;\n\n    return (state === null || state === void 0 ? void 0 : (_state$orest2 = state.orest) === null || _state$orest2 === void 0 ? void 0 : (_state$orest2$current = _state$orest2.currentUser) === null || _state$orest2$current === void 0 ? void 0 : _state$orest2$current.auth.access_token) || false;\n  });\n  var useOtherGuestResname = useSelector(function (state) {\n    var _state$orest3, _state$orest3$current;\n\n    return (state === null || state === void 0 ? void 0 : (_state$orest3 = state.orest) === null || _state$orest3 === void 0 ? void 0 : (_state$orest3$current = _state$orest3.currentUser) === null || _state$orest3$current === void 0 ? void 0 : _state$orest3$current.otherGuestResname) || false;\n  });\n\n  var _useSnackbar = useSnackbar(),\n      enqueueSnackbar = _useSnackbar.enqueueSnackbar;\n\n  var _useOrestAction = useOrestAction(),\n      setOrestState = _useOrestAction.setOrestState; //For Component\n\n\n  var _useState = useState(false),\n      isInitialStateLoad = _useState[0],\n      setIsInitialStateLoad = _useState[1];\n\n  var _useState2 = useState(true),\n      isUpdating = _useState2[0],\n      setIsUpdating = _useState2[1];\n\n  var _useState3 = useState(false),\n      isCheckinConfirmationDialog = _useState3[0],\n      setIsCheckinConfirmationDialog = _useState3[1];\n\n  var _useState4 = useState(false),\n      isRoomSelectionDialog = _useState4[0],\n      setIsRoomSelectionDialog = _useState4[1];\n\n  var _useState5 = useState(false),\n      isOtherGuestsDialog = _useState5[0],\n      setIsOtherGuestsDialog = _useState5[1];\n\n  var _useState6 = useState({\n    datapolicy: {\n      value: isPrimaryGuest && !useOtherGuestResname,\n      isRequired: true,\n      isUpdate: false\n    },\n    pref: {\n      value: isPrimaryGuest && !useOtherGuestResname,\n      isRequired: true,\n      isUpdate: false\n    }\n  }),\n      usePrivacyTransactions = _useState6[0],\n      setUsePrivacyTransactions = _useState6[1];\n\n  useEffect(function () {\n    var isEffect = true;\n\n    if (isEffect && useClientOrestState && !isInitialStateLoad) {\n      var newClientInitialState = helper.objectMapper(useClientInitialState, useClientOrestState, getMandatoryFields(GENERAL_SETTINGS.hotelSettings.ci_reqflds));\n      setUseClientInitialState(newClientInitialState);\n      setIsInitialStateLoad(true);\n      setIsUpdating(false);\n    }\n\n    return function () {\n      isEffect = false;\n    };\n  }, [useClientOrestState]);\n  useEffect(function () {\n    var _GENERAL_SETTINGS$hot;\n\n    var isEffect = true;\n\n    if (isEffect && isInitialStateLoad && GENERAL_SETTINGS !== null && GENERAL_SETTINGS !== void 0 && (_GENERAL_SETTINGS$hot = GENERAL_SETTINGS.hotelSettings) !== null && _GENERAL_SETTINGS$hot !== void 0 && _GENERAL_SETTINGS$hot.ci_reqsign && (useClientReservation || useOtherGuestResname)) {\n      setUseClientInitialState(_objectSpread(_objectSpread({}, useClientInitialState), {}, _defineProperty({}, useClientInitialState.signature.key, _objectSpread(_objectSpread({}, useClientInitialState[useClientInitialState.signature.key]), {}, {\n        isRequired: true\n      }))));\n    }\n\n    return function () {\n      isEffect = false;\n    };\n  }, [isInitialStateLoad]);\n\n  var getEmOrTelFieldCheck = function getEmOrTelFieldCheck(useMandatoryFields) {\n    var _GENERAL_SETTINGS$hot2;\n\n    if (GENERAL_SETTINGS !== null && GENERAL_SETTINGS !== void 0 && (_GENERAL_SETTINGS$hot2 = GENERAL_SETTINGS.hotelSettings) !== null && _GENERAL_SETTINGS$hot2 !== void 0 && _GENERAL_SETTINGS$hot2.profile_emortelok) {\n      var _router$query, _router$query2, _router$query3, _router$query4, _router$query5, _router$query6;\n\n      if ((router !== null && router !== void 0 && (_router$query = router.query) !== null && _router$query !== void 0 && _router$query.telno || router !== null && router !== void 0 && (_router$query2 = router.query) !== null && _router$query2 !== void 0 && _router$query2.mobile) && !(router !== null && router !== void 0 && (_router$query3 = router.query) !== null && _router$query3 !== void 0 && _router$query3.email)) {\n        var itemIndex = useMandatoryFields.indexOf('email');\n\n        if (itemIndex >= 0) {\n          useMandatoryFields.splice(itemIndex, 1);\n        }\n      } else if (router !== null && router !== void 0 && (_router$query4 = router.query) !== null && _router$query4 !== void 0 && _router$query4.email && !(router !== null && router !== void 0 && (_router$query5 = router.query) !== null && _router$query5 !== void 0 && _router$query5.telno) && !(router !== null && router !== void 0 && (_router$query6 = router.query) !== null && _router$query6 !== void 0 && _router$query6.mobile)) {\n        var _itemIndex = useMandatoryFields.indexOf('mobiletel');\n\n        if (_itemIndex >= 0) {\n          useMandatoryFields.splice(_itemIndex, 1);\n        }\n      }\n    }\n\n    return useMandatoryFields;\n  };\n\n  var getMandatoryFields = function getMandatoryFields(settMandatoryFields) {\n    var _GENERAL_SETTINGS$hot3;\n\n    var defaultMandatoryFields = !isPrimaryGuest || useOtherGuestResname ? otherGuestMandatoryFields : isEmpPortal ? employeeMandatoryFields : primaryGuestMandatoryFields;\n\n    if (GENERAL_SETTINGS !== null && GENERAL_SETTINGS !== void 0 && (_GENERAL_SETTINGS$hot3 = GENERAL_SETTINGS.hotelSettings) !== null && _GENERAL_SETTINGS$hot3 !== void 0 && _GENERAL_SETTINGS$hot3.reg_birthdate) {\n      defaultMandatoryFields.push(useClientInitialState.birthdate.key);\n    }\n\n    if (settMandatoryFields) {\n      var getCiReqFlds = helper.makeArrayWithComma(settMandatoryFields);\n\n      if (Array.isArray(getCiReqFlds)) {\n        defaultMandatoryFields = _toConsumableArray(new Set([].concat(_toConsumableArray(defaultMandatoryFields), _toConsumableArray(getCiReqFlds))));\n        return getEmOrTelFieldCheck(defaultMandatoryFields);\n      } else {\n        return getEmOrTelFieldCheck(defaultMandatoryFields);\n      }\n    } else {\n      return getEmOrTelFieldCheck(defaultMandatoryFields);\n    }\n  };\n\n  var createClientLoginId = function createClientLoginId(clientId) {\n    return UseOrest({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: 'client/loginid',\n      method: 'PUT',\n      token: useToken,\n      params: {\n        id: clientId,\n        pref: true,\n        datapolicy: true,\n        force: true\n      }\n    }).then(function (clientLoginIdResponse) {\n      var _clientLoginIdRespons;\n\n      return !!(clientLoginIdResponse.status === 200 && clientLoginIdResponse !== null && clientLoginIdResponse !== void 0 && (_clientLoginIdRespons = clientLoginIdResponse.data) !== null && _clientLoginIdRespons !== void 0 && _clientLoginIdRespons.data);\n    })[\"catch\"](function () {\n      return false;\n    });\n  };\n\n  var clientPatch = function clientPatch(clientData, clientGid) {\n    return Patch({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: isEmpPortal ? OREST_ENDPOINT.EMPLOYEE : OREST_ENDPOINT.CLIENT,\n      token: useToken,\n      gid: clientGid,\n      params: {\n        hotelrefno: useClientOrestState.hotelrefno\n      },\n      data: clientData\n    }).then(function (clientPatchResponse) {\n      var _clientPatchResponse$;\n\n      if (clientPatchResponse.status === 200 && clientPatchResponse !== null && clientPatchResponse !== void 0 && (_clientPatchResponse$ = clientPatchResponse.data) !== null && _clientPatchResponse$ !== void 0 && _clientPatchResponse$.data) {\n        return clientPatchResponse.data.data;\n      } else {\n        return false;\n      }\n    })[\"catch\"](function () {\n      return false;\n    });\n  };\n\n  var clientView = function clientView(clientPatch) {\n    return UseOrest({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: isEmpPortal ? 'employee/view/get' : 'client/view/get',\n      token: useToken,\n      params: {\n        gid: clientPatch.gid,\n        allhotels: true\n      }\n    }).then(function (clientViewGetResponse) {\n      var _clientViewGetRespons;\n\n      if (clientViewGetResponse.status === 200 && clientViewGetResponse !== null && clientViewGetResponse !== void 0 && (_clientViewGetRespons = clientViewGetResponse.data) !== null && _clientViewGetRespons !== void 0 && _clientViewGetRespons.data) {\n        return clientViewGetResponse.data.data;\n      } else {\n        return false;\n      }\n    })[\"catch\"](function () {\n      return false;\n    });\n  };\n\n  var clientInfoUpdate = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(clientData, clientGid) {\n      var isClientPatch;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return clientPatch(clientData, clientGid);\n\n            case 2:\n              isClientPatch = _context.sent;\n\n              if (!(isClientPatch && isPrimaryGuest)) {\n                _context.next = 9;\n                break;\n              }\n\n              _context.next = 6;\n              return clientView(isClientPatch);\n\n            case 6:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 9:\n              return _context.abrupt(\"return\", !!isClientPatch);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function clientInfoUpdate(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var getOnChangeValue = function getOnChangeValue(type, value, isRequired) {\n    switch (type) {\n      case fieldTypes.date:\n        var newValue = moment(value).format(OREST_ENDPOINT.DATEFORMAT);\n        return {\n          value: newValue,\n          isError: newValue === 'Invalid date',\n          errorText: newValue === 'Invalid date' ? \"*\".concat(t('str_invalidDate')) : false,\n          isRequired: isRequired\n        };\n\n      default:\n        return {\n          value: value,\n          isError: isRequired && !!required(value),\n          errorText: isRequired && !!required(value),\n          isRequired: isRequired\n        };\n    }\n  };\n\n  var handleOnChangeCallBack = function handleOnChangeCallBack(key, useData) {\n    var _objectSpread3, _useData$value, _objectSpread4, _objectSpread5, _objectSpread6;\n\n    switch (key) {\n      case useClientInitialState.maritalstatus.key:\n        var isVisible = !!(useData !== null && useData !== void 0 && useData.value && (useData === null || useData === void 0 ? void 0 : useData.value[useClientInitialState.maritalstatus.defValKey]) === TRANSTYPES.MARRIED);\n        setUseClientInitialState(_objectSpread(_objectSpread({}, useClientInitialState), {}, (_objectSpread3 = {}, _defineProperty(_objectSpread3, key, _objectSpread(_objectSpread({}, useClientInitialState[key]), {}, {\n          value: useData.value,\n          isError: useData.isError,\n          isRequired: useData.isRequired,\n          errorText: useData.errorText\n        })), _defineProperty(_objectSpread3, useClientInitialState.weddingdate.key, _objectSpread(_objectSpread({}, useClientInitialState[useClientInitialState.weddingdate.key]), {}, {\n          isVisible: isVisible\n        })), _objectSpread3)));\n        return true;\n\n      case useClientInitialState.nationid.key:\n        var isActive = !!(useData !== null && useData !== void 0 && useData.value && useData !== null && useData !== void 0 && (_useData$value = useData.value) !== null && _useData$value !== void 0 && _useData$value.reqtrid);\n        setUseClientInitialState(_objectSpread(_objectSpread({}, useClientInitialState), {}, (_objectSpread4 = {}, _defineProperty(_objectSpread4, key, _objectSpread(_objectSpread({}, useClientInitialState[key]), {}, {\n          value: useData.value,\n          isError: useData.isError,\n          isRequired: useData.isRequired,\n          errorText: useData.errorText\n        })), _defineProperty(_objectSpread4, useClientInitialState.tridno.key, _objectSpread(_objectSpread({}, useClientInitialState[useClientInitialState.tridno.key]), {}, {\n          isVisible: isActive,\n          isRequired: isActive && useClientInitialState.nationid.isRequired\n        })), _defineProperty(_objectSpread4, useClientInitialState.healthcode.key, _objectSpread(_objectSpread({}, useClientInitialState[useClientInitialState.healthcode.key]), {}, {\n          isVisible: isActive,\n          isRequired: isActive && GENERAL_SETTINGS.hotelSettings.reg_healthcode\n        })), _defineProperty(_objectSpread4, useClientInitialState.idtypeid.key, _objectSpread(_objectSpread({}, useClientInitialState[useClientInitialState.idtypeid.key]), {}, {\n          isVisible: !isActive,\n          isRequired: !isActive && useClientInitialState.nationid.isRequired\n        })), _defineProperty(_objectSpread4, useClientInitialState.idno.key, _objectSpread(_objectSpread({}, useClientInitialState[useClientInitialState.idno.key]), {}, {\n          isVisible: !isActive,\n          isRequired: !isActive && useClientInitialState.nationid.isRequired\n        })), _objectSpread4)));\n        return true;\n\n      case useClientInitialState.email.key:\n        setUseClientInitialState(_objectSpread(_objectSpread({}, useClientInitialState), {}, (_objectSpread5 = {}, _defineProperty(_objectSpread5, key, _objectSpread(_objectSpread({}, useClientInitialState[key]), {}, {\n          value: useData.value,\n          isError: useData.isError,\n          errorText: useData.errorText\n        })), _defineProperty(_objectSpread5, useClientInitialState.mobiletel.key, _objectSpread(_objectSpread({}, useClientInitialState[useClientInitialState.mobiletel.key]), {}, {\n          isError: false,\n          errorText: '',\n          isRequired: !useOtherGuestResname && GENERAL_SETTINGS.hotelSettings.profile_emortelok ? !useData.value : useClientInitialState.mobiletel.isRequired\n        })), _objectSpread5)));\n        return true;\n\n      case useClientInitialState.mobiletel.key:\n        setUseClientInitialState(_objectSpread(_objectSpread({}, useClientInitialState), {}, (_objectSpread6 = {}, _defineProperty(_objectSpread6, key, _objectSpread(_objectSpread({}, useClientInitialState[key]), {}, {\n          value: useData.value,\n          isError: useData.isError,\n          errorText: useData.errorText\n        })), _defineProperty(_objectSpread6, useClientInitialState.email.key, _objectSpread(_objectSpread({}, useClientInitialState[useClientInitialState.email.key]), {}, {\n          isError: false,\n          errorText: '',\n          isRequired: !useOtherGuestResname && GENERAL_SETTINGS.hotelSettings.profile_emortelok ? !useData.value : useClientInitialState.email.isRequired\n        })), _objectSpread6)));\n        return true;\n\n      default:\n        return false;\n    }\n  };\n\n  var handleOnChange = function handleOnChange(key, value) {\n    var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'text';\n    var useData = getOnChangeValue(type, value, useClientInitialState[key].isRequired);\n    var isCallback = handleOnChangeCallBack(key, useData);\n\n    if (!isCallback) {\n      setUseClientInitialState(_objectSpread(_objectSpread({}, useClientInitialState), {}, _defineProperty({}, key, _objectSpread(_objectSpread({}, useClientInitialState[key]), {}, {\n        value: useData.value,\n        isError: useData.isError,\n        isRequired: useData.isRequired,\n        errorText: useData.errorText\n      }))));\n    }\n  };\n\n  var getFormComponent = function getFormComponent(field) {\n    switch (field.type) {\n      case fieldTypes.trid:\n      case fieldTypes.email:\n      case fieldTypes.text:\n        return __jsx(TextField, {\n          id: field.key,\n          name: field.key,\n          label: t(field.label),\n          required: field.isRequired,\n          disabled: isUpdating,\n          fullWidth: fieldOptions.fullWidth.textField,\n          size: fieldOptions.size.textField,\n          variant: fieldOptions.variant.textField,\n          value: field.value,\n          onChange: function onChange(e) {\n            return handleOnChange(field.key, e.target.value);\n          },\n          error: field.isError,\n          helperText: field.isError && field.errorText,\n          onBlur: field.isVerifyRequired ? function () {\n            return handleOnVerify(field.key, field.value, field.type);\n          } : undefined,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 21\n          }\n        });\n\n      case fieldTypes.select:\n        return __jsx(SelectAutoComplete, {\n          required: field.isRequired,\n          label: t(field.label),\n          isInitialStateLoad: isInitialStateLoad,\n          disabled: isUpdating,\n          id: field.key,\n          name: field.key,\n          selectApi: field.selectApi,\n          value: field.value,\n          error: field.isError,\n          variant: fieldOptions.variant.textField,\n          onCallback: function onCallback(newValue) {\n            return handleOnChange(field.key, newValue);\n          },\n          onChange: function onChange(newValue) {\n            return handleOnChange(field.key, newValue);\n          },\n          optionLabel: field.optionLabel,\n          optionKey: field.optionKey,\n          defValKey: field.defValKey,\n          defValue: field.defValKey && field.value || false,\n          trgValKey: field.trgValKey,\n          trgQueryKey: field.trgQueryKey,\n          trgValue: field.trgValue && useClientInitialState[field.trgValue].value || false,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 21\n          }\n        });\n\n      case fieldTypes.tel:\n        return __jsx(PhoneInput, {\n          defaultCountry: locale === 'en' ? 'us' : locale,\n          preferredCountries: ['it', 'ie', 'de', 'fr', 'es', 'gb'],\n          regions: ['america', 'europe', 'asia', 'oceania', 'africa'],\n          id: field.key,\n          name: field.key,\n          label: t(field.label),\n          required: field.isRequired,\n          disabled: isUpdating,\n          fullWidth: fieldOptions.fullWidth.textField,\n          size: fieldOptions.size.textField,\n          variant: fieldOptions.variant.textField,\n          value: field.value,\n          onChange: function onChange(newValue) {\n            return handleOnChange(field.key, newValue);\n          },\n          error: field.isError,\n          helperText: field.isError && field.errorText,\n          onBlur: field.isVerifyRequired ? function () {\n            return handleOnVerify(field.key, field.value, field.type);\n          } : undefined,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 21\n          }\n        });\n\n      case fieldTypes.date:\n        return __jsx(LocalizationProvider, {\n          dateLibInstance: moment,\n          dateAdapter: MomentAdapter,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 21\n          }\n        }, __jsx(DatePicker, {\n          required: field.isRequired,\n          allowKeyboardControl: true,\n          disabled: isUpdating,\n          autoOk: true,\n          id: field.key,\n          name: field.key,\n          label: t(field.label),\n          inputFormat: fieldOptions.dateFormatForView,\n          disableFuture: true,\n          openTo: 'date',\n          views: ['year', 'month', 'date'],\n          value: field.value || moment(),\n          onChange: function onChange(newValue) {\n            return handleOnChange(field.key, newValue, field.type);\n          },\n          renderInput: function renderInput(props) {\n            return __jsx(TextField, _extends({}, props, {\n              fullWidth: fieldOptions.fullWidth.textField,\n              size: fieldOptions.size.textField,\n              variant: fieldOptions.variant.textField,\n              required: field.isRequired,\n              error: field.isError,\n              helperText: field.isError && field.errorText,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 37\n              }\n            }));\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 25\n          }\n        }));\n\n      case fieldTypes.upload:\n        return __jsx(FileUploadAndShow, {\n          id: field.key,\n          name: field.key,\n          label: t(field.label),\n          required: field.isRequired,\n          disabled: !useClientOrestState || isUpdating || !useClientOrestState.id,\n          fullWidth: fieldOptions.fullWidth.textField,\n          size: fieldOptions.size.textField,\n          variant: fieldOptions.variant.textField,\n          error: field.isError,\n          helperText: field.isError && field.errorText,\n          optionKey: field.optionKey,\n          defValKey: field.defValKey,\n          defValue: field.defValKey && useClientOrestState[field.defValKey],\n          trgQueryKey: field.defValKey && useClientOrestState[field.trgQueryKey],\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 21\n          }\n        });\n\n      case fieldTypes.sign:\n        return __jsx(SignerPad, {\n          id: field.key,\n          name: field.key,\n          label: t(field.label),\n          required: field.isRequired,\n          disabled: isUpdating,\n          fullWidth: fieldOptions.fullWidth.textField,\n          size: fieldOptions.size.textField,\n          variant: fieldOptions.variant.textField,\n          error: field.isError,\n          helperText: field.isError && field.errorText,\n          optionLabel: field.optionLabel,\n          optionKey: field.optionKey,\n          defValKey: field.defValKey,\n          defValue: field.defValKey && useOtherGuestResname ? useOtherGuestResname[field.defValKey] : useClientReservation[field.defValKey],\n          trgQueryKey: field.defValKey && useOtherGuestResname ? useOtherGuestResname[field.trgQueryKey] : useClientReservation[field.trgQueryKey],\n          onUpdateCallBack: function onUpdateCallBack() {\n            setUseClientInitialState(_objectSpread(_objectSpread({}, useClientInitialState), {}, _defineProperty({}, useClientInitialState.signature.key, _objectSpread(_objectSpread({}, useClientInitialState[useClientInitialState.signature.key]), {}, {\n              isError: false,\n              errorText: ''\n            }))));\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 21\n          }\n        });\n\n      default:\n        return;\n    }\n  };\n\n  var handleOnVerify = function handleOnVerify(key, value, type) {\n    switch (type) {\n      case fieldTypes.email:\n        isEmailExists(key, value);\n        break;\n\n      case fieldTypes.tel:\n        isPhoneExists(key, value);\n        break;\n\n      case fieldTypes.trid:\n        isTrIdValid(key, value);\n        break;\n\n      default:\n        return false;\n    }\n  };\n\n  var isCheckInDay = function isCheckInDay() {\n    return !useOtherGuestResname && useClientReservation && useHotelWorkDateTime.workdate === useClientReservation.checkin;\n  };\n\n  var isRoomSelectionPossible = function isRoomSelectionPossible() {\n    return !useOtherGuestResname && useClientReservation && useClientReservation.canroom && !useClientReservation.roomno && GENERAL_SETTINGS.hotelSettings.roomno;\n  };\n\n  var isReservationStatusAccepted = function isReservationStatusAccepted() {\n    var acceptedStatus = ['A', 'I'];\n    return !useOtherGuestResname && usePrimaryClientReservation && acceptedStatus.includes(usePrimaryClientReservation.status);\n  };\n\n  var isCheckInPossible = function isCheckInPossible() {\n    if (useClientReservation && !useClientReservation.canroom && GENERAL_SETTINGS.hotelSettings.roomno) {\n      return false;\n    }\n\n    return !useOtherGuestResname && useClientReservation && useClientReservation.canci && isCheckInDay() && GENERAL_SETTINGS.hotelSettings.ci_enable;\n  };\n\n  var isEmailExists = function isEmailExists(key, val) {\n    if (val) {\n      if (emailValidation(val)) {\n        setIsUpdating(true);\n        UseOrest({\n          apiUrl: GENERAL_SETTINGS.OREST_URL,\n          endpoint: 'client/email/exists',\n          token: useToken,\n          params: {\n            email: val,\n            allhotels: true\n          }\n        }).then(function (response) {\n          var _response$data, _response$data$data;\n\n          if (response.status === 200 && response !== null && response !== void 0 && (_response$data = response.data) !== null && _response$data !== void 0 && (_response$data$data = _response$data.data) !== null && _response$data$data !== void 0 && _response$data$data.res) {\n            if ((useClientOrestState === null || useClientOrestState === void 0 ? void 0 : useClientOrestState.id) !== response.data.data.id) {\n              setUseClientInitialState(_objectSpread(_objectSpread({}, useClientInitialState), {}, _defineProperty({}, key, _objectSpread(_objectSpread({}, useClientInitialState[key]), {}, {\n                isError: true,\n                errorText: t('str_emailAlreadyExist')\n              }))));\n            }\n\n            setIsUpdating(false);\n            return true;\n          } else {\n            setIsUpdating(false);\n            return false;\n          }\n        })[\"catch\"](function () {\n          setIsUpdating(false);\n          return false;\n        });\n      } else {\n        setUseClientInitialState(_objectSpread(_objectSpread({}, useClientInitialState), {}, _defineProperty({}, key, _objectSpread(_objectSpread({}, useClientInitialState[key]), {}, {\n          isError: true,\n          errorText: t('str_invalidEmail')\n        }))));\n      }\n    }\n  };\n\n  var isPhoneExists = function isPhoneExists(key, val) {\n    if (String(val).length > 5) {\n      setIsUpdating(true);\n      UseOrest({\n        apiUrl: GENERAL_SETTINGS.OREST_URL,\n        endpoint: 'client/phone/exists',\n        token: useToken,\n        params: {\n          tel: mobileTelNoFormat(val),\n          allhotels: true\n        }\n      }).then(function (response) {\n        var _response$data2, _response$data2$data;\n\n        if (response.status === 200 && response !== null && response !== void 0 && (_response$data2 = response.data) !== null && _response$data2 !== void 0 && (_response$data2$data = _response$data2.data) !== null && _response$data2$data !== void 0 && _response$data2$data.res) {\n          if ((useClientOrestState === null || useClientOrestState === void 0 ? void 0 : useClientOrestState.id) !== response.data.data.id) {\n            setUseClientInitialState(_objectSpread(_objectSpread({}, useClientInitialState), {}, _defineProperty({}, key, _objectSpread(_objectSpread({}, useClientInitialState[key]), {}, {\n              isError: true,\n              errorText: t('str_mobileAlreadyExist')\n            }))));\n          }\n\n          setIsUpdating(false);\n          return true;\n        } else {\n          setIsUpdating(false);\n          return false;\n        }\n      })[\"catch\"](function () {\n        setIsUpdating(false);\n        return false;\n      });\n    }\n  };\n\n  var isTrIdValid = function isTrIdValid(key, val) {\n    if (val) {\n      setIsUpdating(true);\n      UseOrest({\n        apiUrl: GENERAL_SETTINGS.OREST_URL,\n        endpoint: 'tools/validate/tridno',\n        token: useToken,\n        params: {\n          idno: val,\n          allhotels: true\n        }\n      }).then(function (response) {\n        var _response$data3, _response$data3$data;\n\n        if (response.status === 200 && response !== null && response !== void 0 && (_response$data3 = response.data) !== null && _response$data3 !== void 0 && (_response$data3$data = _response$data3.data) !== null && _response$data3$data !== void 0 && _response$data3$data.res) {\n          setIsUpdating(false);\n          return true;\n        } else {\n          setUseClientInitialState(_objectSpread(_objectSpread({}, useClientInitialState), {}, _defineProperty({}, key, _objectSpread(_objectSpread({}, useClientInitialState[key]), {}, {\n            isError: true,\n            errorText: t('str_pleaseEnterAValidTRIdNo')\n          }))));\n          setIsUpdating(false);\n          return false;\n        }\n      })[\"catch\"](function () {\n        setIsUpdating(false);\n        return false;\n      });\n    }\n  };\n\n  var getNotecatDataself = function getNotecatDataself(hotelrefno) {\n    return UseOrest({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: 'notecat/dataself',\n      token: useToken,\n      params: {\n        hotelrefno: hotelrefno\n      }\n    }).then(function (response) {\n      if (response.status === 200 && response.data && response.data.data.res) {\n        return response.data.data.res;\n      } else {\n        return false;\n      }\n    })[\"catch\"](function () {\n      return false;\n    });\n  };\n\n  var getNotetypeData = function getNotetypeData(hotelrefno) {\n    return UseOrest({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: 'notetype/data',\n      token: useToken,\n      params: {\n        hotelrefno: hotelrefno\n      }\n    }).then(function (response) {\n      if (response.status === 200 && response.data && response.data.data.res) {\n        return response.data.data.res;\n      } else {\n        return false;\n      }\n    })[\"catch\"](function () {\n      return false;\n    });\n  };\n\n  var defNoteData = function defNoteData(hotelrefno) {\n    return UseOrest({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: 'ranote/def',\n      token: useToken,\n      params: {\n        hotelrefno: hotelrefno\n      }\n    }).then(function (response) {\n      if (response.status === 200 && response.data && response.data.data) {\n        return response.data.data;\n      } else {\n        return false;\n      }\n    })[\"catch\"](function () {\n      return false;\n    });\n  };\n\n  var setNoteData = function setNoteData(data, hotelrefno) {\n    return Insert({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: 'ranote',\n      token: useToken,\n      params: {\n        hotelrefno: hotelrefno\n      },\n      data: data\n    }).then(function (response) {\n      return response.status === 200 && response.data && response.data.data;\n    })[\"catch\"](function () {\n      return false;\n    });\n  };\n\n  var handleRequestProfileInfoChange = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(clientDataDifferences) {\n      var noteValue, noteCatDataselfId, noteTypeDataId, getDefaultNote;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              noteValue = '';\n              clientDataDifferences.map(function (item) {\n                return noteValue += \"\".concat(item.label, \": \").concat(item.oldval, \" >>> \").concat(item.newval, \";;;\");\n              });\n              _context2.next = 4;\n              return getNotecatDataself(useClientOrestState.hotelrefno);\n\n            case 4:\n              noteCatDataselfId = _context2.sent;\n              _context2.next = 7;\n              return getNotetypeData(useClientOrestState.hotelrefno);\n\n            case 7:\n              noteTypeDataId = _context2.sent;\n              _context2.next = 10;\n              return defNoteData(useClientOrestState.hotelrefno);\n\n            case 10:\n              getDefaultNote = _context2.sent;\n              getDefaultNote.notecatid = noteCatDataselfId;\n              getDefaultNote.notetypeid = noteTypeDataId;\n              getDefaultNote.note = noteValue;\n              getDefaultNote.masterid = useClientOrestState.mid;\n              _context2.next = 17;\n              return setNoteData(getDefaultNote, useClientOrestState.hotelrefno);\n\n            case 17:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 18:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleRequestProfileInfoChange(_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var isSignatureAvailable = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(code, mid) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              return _context3.abrupt(\"return\", List({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: OREST_ENDPOINT.RAFILE,\n                token: useToken,\n                params: {\n                  query: \"code::\".concat(code, \",masterid::\").concat(mid),\n                  limit: 1,\n                  allhotels: true\n                }\n              }).then(function (rafileListResponse) {\n                var _rafileListResponse$d;\n\n                return rafileListResponse.status === 200 && (rafileListResponse === null || rafileListResponse === void 0 ? void 0 : (_rafileListResponse$d = rafileListResponse.data) === null || _rafileListResponse$d === void 0 ? void 0 : _rafileListResponse$d.data.length) > 0;\n              })[\"catch\"](function () {\n                return false;\n              }));\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function isSignatureAvailable(_x4, _x5) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var sendHotelNotifyMail = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(changes) {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return sendGuestChangeNotifyMail(isPrimaryGuest ? !(useClientReservation !== null && useClientReservation !== void 0 && useClientReservation.gid) : true, 'client', 'upd', useClientOrestState.id, isPrimaryGuest ? (useClientReservation === null || useClientReservation === void 0 ? void 0 : useClientReservation.gid) || useClientOrestState.gid : useClientOrestState.gid, {\n                roomno: isReservationStatusAccepted() && (usePrimaryClientReservation === null || usePrimaryClientReservation === void 0 ? void 0 : usePrimaryClientReservation.roomno) || '',\n                clientname: useClientOrestState.clientname || '',\n                reservno: isReservationStatusAccepted() && (usePrimaryClientReservation === null || usePrimaryClientReservation === void 0 ? void 0 : usePrimaryClientReservation.reservno) || '',\n                changes: JSON.stringify({\n                  changeItems: changes\n                })\n              }, isPrimaryGuest ? (useClientReservation === null || useClientReservation === void 0 ? void 0 : useClientReservation.hotelrefno) || GENERAL_SETTINGS.HOTELREFNO : GENERAL_SETTINGS.HOTELREFNO);\n\n            case 2:\n              return _context4.abrupt(\"return\", _context4.sent);\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function sendHotelNotifyMail(_x6) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var primaryGuestRequiredFieldCheck = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var isRequiredFieldMistake, newUseClientInitialState, _i, _Object$keys, key, getField, signatureAvailable;\n\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              if (!(!usePrivacyTransactions.datapolicy.value || !usePrivacyTransactions.pref.value)) {\n                _context5.next = 4;\n                break;\n              }\n\n              enqueueSnackbar(t('str_pleaseCheckMandatoryFields'), {\n                variant: 'warning'\n              });\n              setIsUpdating(false);\n              return _context5.abrupt(\"return\", false);\n\n            case 4:\n              isRequiredFieldMistake = false;\n              newUseClientInitialState = _objectSpread({}, useClientInitialState);\n\n              for (_i = 0, _Object$keys = Object.keys(newUseClientInitialState); _i < _Object$keys.length; _i++) {\n                key = _Object$keys[_i];\n                getField = newUseClientInitialState[key];\n\n                if (getField.isBase && getField.isRequired && !getField.value || getField.isError) {\n                  isRequiredFieldMistake = true;\n                  newUseClientInitialState[key].isError = true;\n                }\n              }\n\n              if (!useClientInitialState.signature.isRequired) {\n                _context5.next = 12;\n                break;\n              }\n\n              _context5.next = 10;\n              return isSignatureAvailable(useClientInitialState.signature.optionKey, useOtherGuestResname ? useOtherGuestResname[useClientInitialState.signature.defValKey] : useClientReservation[useClientInitialState.signature.defValKey]);\n\n            case 10:\n              signatureAvailable = _context5.sent;\n\n              if (!signatureAvailable) {\n                isRequiredFieldMistake = true;\n                newUseClientInitialState[useClientInitialState.signature.key].isError = true;\n              }\n\n            case 12:\n              if (!isRequiredFieldMistake) {\n                _context5.next = 17;\n                break;\n              }\n\n              enqueueSnackbar(t('str_pleaseCheckMandatoryFields'), {\n                variant: 'warning'\n              });\n              setUseClientInitialState(newUseClientInitialState);\n              setIsUpdating(false);\n              return _context5.abrupt(\"return\", false);\n\n            case 17:\n              return _context5.abrupt(\"return\", true);\n\n            case 18:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function primaryGuestRequiredFieldCheck() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var getOtherGuestsClientIdList = function getOtherGuestsClientIdList(reservno) {\n    return ViewList({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.RESNAME,\n      token: useToken,\n      params: {\n        query: \"reservno:\".concat(reservno),\n        allhotels: true\n      }\n    }).then(function (resnameResponse) {\n      var _resnameResponse$data, _resnameResponse$data2;\n\n      if (resnameResponse.status === 200 && resnameResponse !== null && resnameResponse !== void 0 && (_resnameResponse$data = resnameResponse.data) !== null && _resnameResponse$data !== void 0 && _resnameResponse$data.data && (resnameResponse === null || resnameResponse === void 0 ? void 0 : (_resnameResponse$data2 = resnameResponse.data) === null || _resnameResponse$data2 === void 0 ? void 0 : _resnameResponse$data2.data.length) > 0) {\n        return resnameResponse.data.data.map(function (resname) {\n          return resname.clientid;\n        });\n      } else {\n        return false;\n      }\n    })[\"catch\"](function () {\n      return false;\n    });\n  };\n\n  var getOtherGuestsClientList = function getOtherGuestsClientList(otherGuestsClientIdList) {\n    return UseOrest({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: 'client/view/list/get/id',\n      method: 'POST',\n      token: useToken,\n      params: {\n        allhotels: true\n      },\n      data: otherGuestsClientIdList\n    }).then(function (clientViewListGetIdResponse) {\n      var _clientViewListGetIdR;\n\n      if (clientViewListGetIdResponse.status === 200 && clientViewListGetIdResponse !== null && clientViewListGetIdResponse !== void 0 && (_clientViewListGetIdR = clientViewListGetIdResponse.data) !== null && _clientViewListGetIdR !== void 0 && _clientViewListGetIdR.data) {\n        return clientViewListGetIdResponse.data.data;\n      } else {\n        return false;\n      }\n    })[\"catch\"](function () {\n      return false;\n    });\n  };\n\n  var otherGuestRequiredFieldCheck = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(numberOfOtherGuest) {\n      var otherGuestsClientIdList, otherGuestsClientList, isRequiredFieldMistake;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return getOtherGuestsClientIdList(useClientReservation.reservno);\n\n            case 2:\n              otherGuestsClientIdList = _context6.sent;\n              _context6.next = 5;\n              return getOtherGuestsClientList(otherGuestsClientIdList);\n\n            case 5:\n              otherGuestsClientList = _context6.sent;\n\n              if (!(GENERAL_SETTINGS.hotelSettings.ci_chkallcards && otherGuestsClientList && otherGuestsClientList.length !== numberOfOtherGuest)) {\n                _context6.next = 10;\n                break;\n              }\n\n              enqueueSnackbar(t('str_otherGuestsInformationIsMandatoryPleaseCheckOtherGuestInformationAndFillInTheRequiredFields'), {\n                variant: 'warning'\n              });\n              setIsOtherGuestsDialog(true);\n              return _context6.abrupt(\"return\", false);\n\n            case 10:\n              isRequiredFieldMistake = false;\n              otherGuestsClientList.map(function (otherGuest) {\n                if (!otherGuest.firstname || !otherGuest.lastname || !otherGuest.birthdate || !otherGuest.nationid || !otherGuest.idno && !otherGuest.tridno) {\n                  isRequiredFieldMistake = true;\n                }\n              });\n\n              if (!(GENERAL_SETTINGS.hotelSettings.ci_chkallcards && isRequiredFieldMistake)) {\n                _context6.next = 16;\n                break;\n              }\n\n              enqueueSnackbar(t('str_otherGuestsInformationIsMandatoryPleaseCheckOtherGuestInformationAndFillInTheRequiredFields'), {\n                variant: 'warning'\n              });\n              setIsOtherGuestsDialog(true);\n              return _context6.abrupt(\"return\", false);\n\n            case 16:\n              return _context6.abrupt(\"return\", true);\n\n            case 17:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function otherGuestRequiredFieldCheck(_x7) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  var handleClientUpdate = /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n      var showNotificationMessages,\n          getPrimaryGuestRequiredFieldCheck,\n          newClientData,\n          newClientDataDifferences,\n          isClientInfoUpdate,\n          isRequestProfileInfoSave,\n          _args7 = arguments;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              showNotificationMessages = _args7.length > 0 && _args7[0] !== undefined ? _args7[0] : true;\n              setIsUpdating(true);\n              _context7.next = 4;\n              return primaryGuestRequiredFieldCheck();\n\n            case 4:\n              getPrimaryGuestRequiredFieldCheck = _context7.sent;\n\n              if (getPrimaryGuestRequiredFieldCheck) {\n                _context7.next = 7;\n                break;\n              }\n\n              return _context7.abrupt(\"return\", false);\n\n            case 7:\n              newClientData = helper.objectValueEqualizer({\n                obj1: useClientInitialState\n              });\n              newClientDataDifferences = helper.objectDifferences({\n                obj1: newClientData,\n                obj2: useClientOrestState,\n                labelKeys: useClientInitialState,\n                translate: t,\n                langcode: GENERAL_SETTINGS.hotelLocalLangGCode\n              });\n\n              if (!(newClientDataDifferences.length > 0 || usePrivacyTransactions.pref.isUpdate || usePrivacyTransactions.datapolicy.isUpdate)) {\n                _context7.next = 57;\n                break;\n              }\n\n              if (!(GENERAL_SETTINGS.hotelSettings.profile_update || isEmpPortal)) {\n                _context7.next = 34;\n                break;\n              }\n\n              _context7.next = 13;\n              return clientInfoUpdate(newClientData, useClientOrestState.gid);\n\n            case 13:\n              isClientInfoUpdate = _context7.sent;\n\n              if (isEmpPortal) {\n                _context7.next = 21;\n                break;\n              }\n\n              if (!useOtherGuestResname) {\n                _context7.next = 18;\n                break;\n              }\n\n              _context7.next = 18;\n              return createClientLoginId(useClientOrestState.id);\n\n            case 18:\n              if (!(useClientOrestState && useClientOrestState !== null && useClientOrestState !== void 0 && useClientOrestState.id)) {\n                _context7.next = 21;\n                break;\n              }\n\n              _context7.next = 21;\n              return sendHotelNotifyMail(newClientDataDifferences);\n\n            case 21:\n              setUsePrivacyTransactions(_objectSpread(_objectSpread({}, usePrivacyTransactions), {}, {\n                datapolicy: _objectSpread(_objectSpread({}, usePrivacyTransactions.datapolicy), {}, {\n                  isUpdate: false\n                }),\n                pref: _objectSpread(_objectSpread({}, usePrivacyTransactions.pref), {}, {\n                  isUpdate: false\n                })\n              }));\n\n              if (!isClientInfoUpdate) {\n                _context7.next = 29;\n                break;\n              }\n\n              if (isPrimaryGuest) {\n                setOrestState([isEmpPortal ? 'emp' : 'client'], isClientInfoUpdate);\n              }\n\n              if (showNotificationMessages) {\n                enqueueSnackbar(t('str_clientInfoUpdateSuccess'), {\n                  variant: 'success'\n                });\n              }\n\n              setIsUpdating(false);\n              return _context7.abrupt(\"return\", true);\n\n            case 29:\n              if (showNotificationMessages) {\n                enqueueSnackbar(t('str_unexpectedProblem'), {\n                  variant: 'warning'\n                });\n              }\n\n              setIsUpdating(false);\n              return _context7.abrupt(\"return\", false);\n\n            case 32:\n              _context7.next = 55;\n              break;\n\n            case 34:\n              if (!(useClientOrestState && useClientOrestState.mid)) {\n                _context7.next = 52;\n                break;\n              }\n\n              _context7.next = 37;\n              return handleRequestProfileInfoChange(newClientDataDifferences);\n\n            case 37:\n              isRequestProfileInfoSave = _context7.sent;\n              _context7.next = 40;\n              return sendHotelNotifyMail(newClientDataDifferences);\n\n            case 40:\n              setUsePrivacyTransactions(_objectSpread(_objectSpread({}, usePrivacyTransactions), {}, {\n                datapolicy: _objectSpread(_objectSpread({}, usePrivacyTransactions.datapolicy), {}, {\n                  isUpdate: false\n                }),\n                pref: _objectSpread(_objectSpread({}, usePrivacyTransactions.pref), {}, {\n                  isUpdate: false\n                })\n              }));\n\n              if (!isRequestProfileInfoSave) {\n                _context7.next = 47;\n                break;\n              }\n\n              if (showNotificationMessages) {\n                enqueueSnackbar(t('str_contactMailSendMsg'), {\n                  variant: 'success'\n                });\n              }\n\n              setIsUpdating(false);\n              return _context7.abrupt(\"return\", true);\n\n            case 47:\n              if (showNotificationMessages) {\n                enqueueSnackbar(t('str_unexpectedProblem'), {\n                  variant: 'warning'\n                });\n              }\n\n              setIsUpdating(false);\n              return _context7.abrupt(\"return\", false);\n\n            case 50:\n              _context7.next = 55;\n              break;\n\n            case 52:\n              enqueueSnackbar(t('str_clientRecordNotFound'), {\n                variant: 'warning'\n              });\n              setIsUpdating(false);\n              return _context7.abrupt(\"return\", true);\n\n            case 55:\n              _context7.next = 60;\n              break;\n\n            case 57:\n              if (showNotificationMessages) {\n                enqueueSnackbar(t('str_noChangesYet'), {\n                  variant: 'warning'\n                });\n              }\n\n              setIsUpdating(false);\n              return _context7.abrupt(\"return\", false);\n\n            case 60:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    return function handleClientUpdate() {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n\n  var getNumberOfOtherGuest = function getNumberOfOtherGuest(useClientReservation) {\n    return Number(useClientReservation.totalpax + useClientReservation.totalchd - 1);\n  };\n\n  var handleCheckinConfirmationDialog = /*#__PURE__*/function () {\n    var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n      var numberOfOtherGuest, getPrimaryGuestRequiredFieldCheck, getOtherGuestRequiredFieldCheck;\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              if (!(isRoomSelectionPossible() && GENERAL_SETTINGS.hotelSettings.roomno)) {\n                _context8.next = 4;\n                break;\n              }\n\n              setIsRoomSelectionDialog(true);\n              enqueueSnackbar(t('str_youMustChooseARoomBeforeCheckIn'), {\n                variant: 'warning'\n              });\n              return _context8.abrupt(\"return\", false);\n\n            case 4:\n              numberOfOtherGuest = getNumberOfOtherGuest(useClientReservation);\n\n              if (!(numberOfOtherGuest > 0)) {\n                _context8.next = 16;\n                break;\n              }\n\n              _context8.next = 8;\n              return primaryGuestRequiredFieldCheck();\n\n            case 8:\n              getPrimaryGuestRequiredFieldCheck = _context8.sent;\n\n              if (getPrimaryGuestRequiredFieldCheck) {\n                _context8.next = 11;\n                break;\n              }\n\n              return _context8.abrupt(\"return\", false);\n\n            case 11:\n              _context8.next = 13;\n              return otherGuestRequiredFieldCheck(numberOfOtherGuest);\n\n            case 13:\n              getOtherGuestRequiredFieldCheck = _context8.sent;\n\n              if (getOtherGuestRequiredFieldCheck) {\n                _context8.next = 16;\n                break;\n              }\n\n              return _context8.abrupt(\"return\", false);\n\n            case 16:\n              _context8.next = 18;\n              return handleClientUpdate(false);\n\n            case 18:\n              setIsCheckinConfirmationDialog(true);\n              return _context8.abrupt(\"return\", true);\n\n            case 20:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    return function handleCheckinConfirmationDialog() {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n\n  var _useState7 = useState(false),\n      fieldGroupAccordionExpanded = _useState7[0],\n      setFieldGroupAccordionExpanded = _useState7[1];\n\n  var handleFieldGroupAccordionChange = function handleFieldGroupAccordionChange(panel) {\n    return function (event, newExpanded) {\n      setFieldGroupAccordionExpanded(newExpanded ? panel : false);\n    };\n  };\n\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 989,\n      columnNumber: 9\n    }\n  }, isPrimaryGuest && (isRoomSelectionPossible() || isReservationStatusAccepted()) ? __jsx(Grid, {\n    className: classesTabPanel.gridContainerToolbar,\n    container: true,\n    spacing: 1,\n    direction: \"row\",\n    justify: \"flex-end\",\n    alignItems: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 991,\n      columnNumber: 17\n    }\n  }, isRoomSelectionPossible() ? __jsx(Grid, {\n    item: true,\n    style: {\n      marginRight: 'auto'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 993,\n      columnNumber: 25\n    }\n  }, __jsx(Alert, {\n    style: {\n      padding: '0px 10px'\n    },\n    severity: \"info\",\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 994,\n      columnNumber: 29\n    }\n  }, isRoomSelectionPossible() && t('str_youMustChooseARoomBeforeCheckIn'))) : null, isRoomSelectionPossible() ? __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1000,\n      columnNumber: 25\n    }\n  }, __jsx(Button, {\n    className: classesTabPanel.proceedButton,\n    startIcon: __jsx(Icon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1003,\n        columnNumber: 44\n      }\n    }, \"meeting_room\"),\n    variant: \"outlined\",\n    disableElevation: true,\n    size: fieldOptions.size.button,\n    onClick: function onClick() {\n      return setIsRoomSelectionDialog(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1001,\n      columnNumber: 29\n    }\n  }, t('str_selectRoomToStay')), __jsx(RoomSelection, {\n    confirmClassName: classesTabPanel.proceedButton,\n    open: isRoomSelectionDialog,\n    onClose: function onClose() {\n      return setIsRoomSelectionDialog(false);\n    },\n    useClientOrestState: useClientOrestState,\n    useClientReservation: useClientReservation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1011,\n      columnNumber: 29\n    }\n  })) : null, isReservationStatusAccepted() && getNumberOfOtherGuest(useClientReservation) > 0 ? __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1020,\n      columnNumber: 25\n    }\n  }, __jsx(Button, {\n    startIcon: __jsx(Icon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1022,\n        columnNumber: 44\n      }\n    }, \"people\"),\n    variant: \"outlined\",\n    color: \"primary\",\n    disableElevation: true,\n    size: fieldOptions.size.button,\n    onClick: function onClick() {\n      return setIsOtherGuestsDialog(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1021,\n      columnNumber: 29\n    }\n  }, t('str_otherGuests')), __jsx(OtherGuests, {\n    confirmClassName: classesTabPanel.proceedButton,\n    open: isOtherGuestsDialog,\n    onClose: function onClose() {\n      return setIsOtherGuestsDialog(false);\n    },\n    useClientOrestState: useClientOrestState,\n    useClientReservation: useClientReservation,\n    otherGuestRequiredFieldCheck: otherGuestRequiredFieldCheck,\n    isCheckInPossible: isCheckInPossible(),\n    onCallBackCheckInButton: function onCallBackCheckInButton() {\n      return handleCheckinConfirmationDialog();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1031,\n      columnNumber: 29\n    }\n  })) : null) : null, fieldGroupAccordions.map(function (fieldGroupAccordion, i) {\n    return __jsx(Accordion, {\n      key: i,\n      expanded: fieldGroupAccordion.defExpand || fieldGroupAccordion.key === fieldGroupAccordionExpanded,\n      onChange: handleFieldGroupAccordionChange(fieldGroupAccordion.key),\n      style: {\n        marginLeft: 8,\n        marginRight: 8\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1046,\n        columnNumber: 21\n      }\n    }, fieldGroupAccordion.label !== '' ? __jsx(AccordionSummary, {\n      style: {\n        borderBottom: '1px solid #ebebeba3'\n      },\n      expandIcon: !fieldGroupAccordion.defExpand ? __jsx(ExpandMoreIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1060,\n          columnNumber: 78\n        }\n      }) : null,\n      \"aria-controls\": \"\".concat(fieldGroupAccordion.key, \"-content\"),\n      id: \"\".concat(fieldGroupAccordion.key, \"-header\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1056,\n        columnNumber: 29\n      }\n    }, __jsx(Typography, {\n      style: {\n        textAlign: 'left',\n        fontSize: 20,\n        fontWeight: 300,\n        color: '#2F3434',\n        lineHeight: 1.2,\n        paddingTop: 3\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1064,\n        columnNumber: 33\n      }\n    }, t(fieldGroupAccordion.label))) : null, __jsx(AccordionDetails, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1075,\n        columnNumber: 25\n      }\n    }, __jsx(Grid, {\n      item: true,\n      xs: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1076,\n        columnNumber: 29\n      }\n    }, fieldGroupArray.filter(function (fieldGroup) {\n      return fieldGroup.accordionKey === fieldGroupAccordion.key;\n    }).map(function (fieldGroup, keyIndex) {\n      return __jsx(React.Fragment, {\n        key: keyIndex,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1079,\n          columnNumber: 41\n        }\n      }, fieldGroup.labelShow ? __jsx(TabHeader, {\n        title: t(fieldGroup.label),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1080,\n          columnNumber: 69\n        }\n      }) : null, __jsx(Grid, {\n        className: classesTabPanel.gridContainer,\n        container: true,\n        spacing: 2,\n        direction: \"row\",\n        justify: \"flex-start\",\n        alignItems: \"center\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1081,\n          columnNumber: 45\n        }\n      }, Object.keys(useClientInitialState).map(function (fieldItem, keyIndex) {\n        var useField = useClientInitialState[fieldItem];\n        var useRequired = fieldGroup.key === useField.groupKey && useField.isVisible;\n\n        if (!useClientReservation && useRequired && !useField.isResRequired || useClientReservation && useRequired) {\n          return __jsx(Grid, {\n            item: true,\n            xs: useField.gridBreakpoints.xs,\n            sm: useField.gridBreakpoints.sm,\n            md: useField.gridBreakpoints.md,\n            key: keyIndex,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1087,\n              columnNumber: 61\n            }\n          }, getFormComponent(useField));\n        }\n      })));\n    }))));\n  }), __jsx(Grid, {\n    className: classesTabPanel.gridContainer,\n    container: true,\n    spacing: 1,\n    direction: \"row\",\n    justify: \"flex-start\",\n    alignItems: \"center\",\n    style: {\n      marginTop: 20,\n      marginLeft: 8\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1102,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1103,\n      columnNumber: 17\n    }\n  }, __jsx(FrameCheckbox, {\n    disabled: isUpdating,\n    required: usePrivacyTransactions.datapolicy.isRequired,\n    value: usePrivacyTransactions.datapolicy.value,\n    title: \"str_privacyAndPersonalDataProtectionPolicies\",\n    linkText: \"str_iAcceptDataPolicy\",\n    linkTextADesc: \"str_privacyAndPersonalDataProtectionPolicies\",\n    iframePageUrl: GENERAL_SETTINGS.BASE_URL + \"info/\".concat(locale || global.common.strDefShortLangCode, \"/\").concat(global.guestWeb.strDataPolicy, \"?iframe=true\"),\n    isCheck: function isCheck(e) {\n      return setUsePrivacyTransactions(_objectSpread(_objectSpread({}, usePrivacyTransactions), {}, {\n        datapolicy: _objectSpread(_objectSpread({}, usePrivacyTransactions.datapolicy), {}, {\n          value: e,\n          isUpdate: true\n        })\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1104,\n      columnNumber: 21\n    }\n  })), !isEmpPortal && __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1116,\n      columnNumber: 21\n    }\n  }, __jsx(FrameCheckbox, {\n    disabled: isUpdating,\n    required: usePrivacyTransactions.pref.isRequired,\n    value: usePrivacyTransactions.pref.value,\n    title: \"str_hygieneAndTravelPolicies\",\n    linkText: \"str_iAcceptTravelPolicy\",\n    linkTextADesc: \"str_hygieneAndTravelPolicies\",\n    ifamePageUrl: GENERAL_SETTINGS.BASE_URL + \"info/\".concat(locale || global.common.strDefShortLangCode, \"/\").concat(global.guestWeb.strTravelPolicy, \"?iframe=true\"),\n    isCheck: function isCheck(e) {\n      return setUsePrivacyTransactions(_objectSpread(_objectSpread({}, usePrivacyTransactions), {}, {\n        pref: _objectSpread(_objectSpread({}, usePrivacyTransactions.pref), {}, {\n          value: e,\n          isUpdate: true\n        })\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1117,\n      columnNumber: 25\n    }\n  }))), __jsx(Grid, {\n    className: classesTabPanel.gridContainerToolbar,\n    container: true,\n    spacing: 2,\n    direction: \"row\",\n    justify: \"flex-end\",\n    alignItems: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1130,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1131,\n      columnNumber: 17\n    }\n  }, isPrimaryGuest && isCheckInPossible() ? __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1133,\n      columnNumber: 25\n    }\n  }, __jsx(Button, {\n    disabled: isUpdating || !isCheckInDay(),\n    className: classesTabPanel.proceedButton,\n    startIcon: __jsx(Icon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1137,\n        columnNumber: 44\n      }\n    }, \"done\"),\n    variant: \"outlined\",\n    disableElevation: true,\n    size: fieldOptions.size.button,\n    onClick: function onClick() {\n      return handleCheckinConfirmationDialog();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1134,\n      columnNumber: 29\n    }\n  }, t('str_proceedToCheckin')), __jsx(CheckInConfirmation, {\n    confirmClassName: classesTabPanel.proceedButton,\n    open: isCheckinConfirmationDialog,\n    onClose: function onClose() {\n      return setIsCheckinConfirmationDialog(false);\n    },\n    useClientOrestState: useClientOrestState,\n    useClientReservation: useClientReservation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1145,\n      columnNumber: 29\n    }\n  })) : __jsx(Button, {\n    disabled: isUpdating,\n    variant: \"contained\",\n    color: \"primary\",\n    disableElevation: true,\n    size: fieldOptions.size.button,\n    onClick: function onClick() {\n      return handleClientUpdate();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1152,\n      columnNumber: 35\n    }\n  }, __jsx(\"span\", {\n    style: {\n      paddingRight: '4px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1152,\n      columnNumber: 187\n    }\n  }, isUpdating && __jsx(LoadingSpinner, {\n    size: 18,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1152,\n      columnNumber: 238\n    }\n  })), t('str_update')))));\n};\n\n_s(ClientBase, \"2u/QkzPMKyt+6rwvcDSPFzjBTjI=\", false, function () {\n  return [useRouter, useTranslation, useStylesTabPanel, useSelector, useSelector, useSelector, useSnackbar, useOrestAction];\n});\n\n_c = ClientBase;\nexport default ClientBase;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClientBase\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/guest/account/Details/ClientBase.js"],"names":["React","useContext","useEffect","useState","useSelector","global","helper","makeStyles","SelectAutoComplete","FileUploadAndShow","SignerPad","useTranslation","WebCmsGlobal","stylesTabPanel","required","emailValidation","mobileTelNoFormat","OREST_ENDPOINT","TRANSTYPES","PhoneInput","TabHeader","Button","Grid","Icon","TextField","Alert","DatePicker","LocalizationProvider","moment","MomentAdapter","fieldGroupAccordions","fieldGroups","otherGuestMandatoryFields","primaryGuestMandatoryFields","RoomSelection","CheckInConfirmation","OtherGuests","Insert","List","Patch","UseOrest","ViewList","useSnackbar","FrameCheckbox","sendGuestChangeNotifyMail","useOrestAction","fieldOptions","fieldTypes","employeeFieldGroups","employeeMandatoryFields","LoadingSpinner","useRouter","Accordion","AccordionSummary","AccordionDetails","Typography","ExpandMoreIcon","useStylesTabPanel","ClientBase","isPrimaryGuest","useClientInitialState","setUseClientInitialState","useClientOrestState","useClientReservation","usePrimaryClientReservation","isEmpPortal","router","t","classesTabPanel","GENERAL_SETTINGS","locale","fieldGroupArray","useHotelWorkDateTime","state","orest","hotelWorkDateTime","useToken","currentUser","auth","access_token","useOtherGuestResname","otherGuestResname","enqueueSnackbar","setOrestState","isInitialStateLoad","setIsInitialStateLoad","isUpdating","setIsUpdating","isCheckinConfirmationDialog","setIsCheckinConfirmationDialog","isRoomSelectionDialog","setIsRoomSelectionDialog","isOtherGuestsDialog","setIsOtherGuestsDialog","datapolicy","value","isRequired","isUpdate","pref","usePrivacyTransactions","setUsePrivacyTransactions","isEffect","newClientInitialState","objectMapper","getMandatoryFields","hotelSettings","ci_reqflds","ci_reqsign","signature","key","getEmOrTelFieldCheck","useMandatoryFields","profile_emortelok","query","telno","mobile","email","itemIndex","indexOf","splice","settMandatoryFields","defaultMandatoryFields","reg_birthdate","push","birthdate","getCiReqFlds","makeArrayWithComma","Array","isArray","Set","createClientLoginId","clientId","apiUrl","OREST_URL","endpoint","method","token","params","id","force","then","clientLoginIdResponse","status","data","clientPatch","clientData","clientGid","EMPLOYEE","CLIENT","gid","hotelrefno","clientPatchResponse","clientView","allhotels","clientViewGetResponse","clientInfoUpdate","isClientPatch","getOnChangeValue","type","date","newValue","format","DATEFORMAT","isError","errorText","handleOnChangeCallBack","useData","maritalstatus","isVisible","defValKey","MARRIED","weddingdate","nationid","isActive","reqtrid","tridno","healthcode","reg_healthcode","idtypeid","idno","mobiletel","handleOnChange","isCallback","getFormComponent","field","trid","text","label","fullWidth","textField","size","variant","e","target","isVerifyRequired","handleOnVerify","undefined","select","selectApi","optionLabel","optionKey","trgValKey","trgQueryKey","trgValue","tel","dateFormatForView","props","upload","sign","isEmailExists","isPhoneExists","isTrIdValid","isCheckInDay","workdate","checkin","isRoomSelectionPossible","canroom","roomno","isReservationStatusAccepted","acceptedStatus","includes","isCheckInPossible","canci","ci_enable","val","response","res","String","length","getNotecatDataself","getNotetypeData","defNoteData","setNoteData","handleRequestProfileInfoChange","clientDataDifferences","noteValue","map","item","oldval","newval","noteCatDataselfId","noteTypeDataId","getDefaultNote","notecatid","notetypeid","note","masterid","mid","isSignatureAvailable","code","RAFILE","limit","rafileListResponse","sendHotelNotifyMail","changes","clientname","reservno","JSON","stringify","changeItems","HOTELREFNO","primaryGuestRequiredFieldCheck","isRequiredFieldMistake","newUseClientInitialState","Object","keys","getField","isBase","signatureAvailable","getOtherGuestsClientIdList","RESNAME","resnameResponse","resname","clientid","getOtherGuestsClientList","otherGuestsClientIdList","clientViewListGetIdResponse","otherGuestRequiredFieldCheck","numberOfOtherGuest","otherGuestsClientList","ci_chkallcards","otherGuest","firstname","lastname","handleClientUpdate","showNotificationMessages","getPrimaryGuestRequiredFieldCheck","newClientData","objectValueEqualizer","obj1","newClientDataDifferences","objectDifferences","obj2","labelKeys","translate","langcode","hotelLocalLangGCode","profile_update","isClientInfoUpdate","isRequestProfileInfoSave","getNumberOfOtherGuest","Number","totalpax","totalchd","handleCheckinConfirmationDialog","getOtherGuestRequiredFieldCheck","fieldGroupAccordionExpanded","setFieldGroupAccordionExpanded","handleFieldGroupAccordionChange","panel","event","newExpanded","gridContainerToolbar","marginRight","padding","proceedButton","button","fieldGroupAccordion","i","defExpand","marginLeft","borderBottom","textAlign","fontSize","fontWeight","color","lineHeight","paddingTop","filter","fieldGroup","accordionKey","keyIndex","labelShow","gridContainer","fieldItem","useField","useRequired","groupKey","isResRequired","gridBreakpoints","xs","sm","md","marginTop","BASE_URL","common","strDefShortLangCode","guestWeb","strDataPolicy","strTravelPolicy","paddingRight"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport * as global from '@webcms-globals'\nimport { helper } from '@webcms-globals'\nimport { makeStyles } from '@material-ui/core/styles'\nimport SelectAutoComplete from '@webcms-ui/core/select-autocomplete'\nimport FileUploadAndShow from '@webcms-ui/core/file-upload-and-show'\nimport SignerPad from '@webcms-ui/core/signer-pad'\nimport useTranslation from 'lib/translations/hooks/useTranslation'\nimport WebCmsGlobal from 'components/webcms-global'\nimport stylesTabPanel from '../style/TabPanel.style'\nimport { required } from 'state/utils/form'\nimport { emailValidation, mobileTelNoFormat, OREST_ENDPOINT, TRANSTYPES } from 'model/orest/constants'\nimport PhoneInput from '@webcms-ui/core/phone-input'\nimport TabHeader from 'components/layout/components/TabHeader'\nimport { Button, Grid, Icon, TextField } from '@material-ui/core'\nimport Alert from '@material-ui/lab/Alert'\nimport { DatePicker, LocalizationProvider } from '@material-ui/pickers'\nimport moment from 'moment'\nimport MomentAdapter from '@date-io/moment'\nimport { fieldGroupAccordions, fieldGroups, otherGuestMandatoryFields, primaryGuestMandatoryFields } from './clientInitialState'\nimport RoomSelection from './RoomSelection'\nimport CheckInConfirmation from './CheckInConfirmation'\nimport OtherGuests from './OtherGuests'\nimport { Insert, List, Patch, UseOrest, ViewList } from '@webcms/orest'\nimport { useSnackbar } from 'notistack'\nimport FrameCheckbox from '@webcms-ui/core/frame-checkbox'\nimport { sendGuestChangeNotifyMail } from '../Base/helper'\nimport { useOrestAction } from 'model/orest'\nimport { fieldOptions, fieldTypes } from 'constants/form-elements'\nimport { employeeFieldGroups, employeeMandatoryFields } from 'components/emp-portal/employeeInitialState'\nimport LoadingSpinner from 'components/LoadingSpinner'\nimport { useRouter } from 'next/router'\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\n\nconst useStylesTabPanel = makeStyles(stylesTabPanel())\n\nconst ClientBase = ({ isPrimaryGuest, useClientInitialState, setUseClientInitialState, useClientOrestState, useClientReservation, usePrimaryClientReservation, isEmpPortal }) =>{\n    const router = useRouter()\n    const { t } = useTranslation()\n    const classesTabPanel = useStylesTabPanel()\n    const { GENERAL_SETTINGS, locale } = useContext(WebCmsGlobal)\n    const fieldGroupArray = isEmpPortal ? employeeFieldGroups : fieldGroups\n\n    const useHotelWorkDateTime = useSelector((state) => state?.orest?.state?.hotelWorkDateTime || false)\n    const useToken = useSelector((state) => state?.orest?.currentUser?.auth.access_token || false)\n    const useOtherGuestResname = useSelector((state) => state?.orest?.currentUser?.otherGuestResname || false)\n    const { enqueueSnackbar } = useSnackbar()\n    const { setOrestState } = useOrestAction()\n\n    //For Component\n    const [isInitialStateLoad, setIsInitialStateLoad] = useState(false)\n    const [isUpdating, setIsUpdating] = useState(true)\n    const [isCheckinConfirmationDialog, setIsCheckinConfirmationDialog] = useState(false)\n    const [isRoomSelectionDialog, setIsRoomSelectionDialog] = useState(false)\n    const [isOtherGuestsDialog, setIsOtherGuestsDialog] = useState(false)\n    const [usePrivacyTransactions, setUsePrivacyTransactions] = useState({\n        datapolicy: {\n            value: isPrimaryGuest && !useOtherGuestResname,\n            isRequired: true,\n            isUpdate: false\n        },\n        pref: {\n            value: isPrimaryGuest && !useOtherGuestResname,\n            isRequired: true,\n            isUpdate: false\n        },\n    })\n\n    useEffect(() => {\n        let isEffect = true\n        if (isEffect && useClientOrestState && !isInitialStateLoad) {\n            const newClientInitialState = helper.objectMapper(useClientInitialState, useClientOrestState, getMandatoryFields(GENERAL_SETTINGS.hotelSettings.ci_reqflds))\n            setUseClientInitialState(newClientInitialState)\n            setIsInitialStateLoad(true)\n            setIsUpdating(false)\n        }\n\n        return () => {\n            isEffect = false\n        }\n    }, [useClientOrestState])\n\n    useEffect(() => {\n        let isEffect = true\n\n        if (isEffect && isInitialStateLoad && GENERAL_SETTINGS?.hotelSettings?.ci_reqsign && (useClientReservation || useOtherGuestResname)) {\n            setUseClientInitialState({\n                ...useClientInitialState,\n                [useClientInitialState.signature.key]: {\n                    ...useClientInitialState[useClientInitialState.signature.key],\n                    isRequired: true\n                },\n            })\n        }\n\n        return () => {\n            isEffect = false\n        }\n    }, [isInitialStateLoad])\n\n    const getEmOrTelFieldCheck = (useMandatoryFields) => {\n        if (GENERAL_SETTINGS?.hotelSettings?.profile_emortelok) {\n            if ((router?.query?.telno || router?.query?.mobile) && !router?.query?.email) {\n                const itemIndex = useMandatoryFields.indexOf('email')\n                if (itemIndex >= 0) {\n                    useMandatoryFields.splice(itemIndex, 1)\n                }\n            } else if (router?.query?.email && (!router?.query?.telno && !router?.query?.mobile)) {\n                const itemIndex = useMandatoryFields.indexOf('mobiletel')\n                if (itemIndex >= 0) {\n                    useMandatoryFields.splice(itemIndex, 1)\n                }\n            }\n        }\n\n        return useMandatoryFields\n    }\n\n    const getMandatoryFields = (settMandatoryFields) => {\n        let defaultMandatoryFields = !isPrimaryGuest || useOtherGuestResname ? otherGuestMandatoryFields : isEmpPortal ? employeeMandatoryFields : primaryGuestMandatoryFields\n        if (GENERAL_SETTINGS?.hotelSettings?.reg_birthdate) {\n            defaultMandatoryFields.push(useClientInitialState.birthdate.key)\n        }\n\n        if (settMandatoryFields) {\n            const getCiReqFlds = helper.makeArrayWithComma(settMandatoryFields)\n            if (Array.isArray(getCiReqFlds)) {\n                defaultMandatoryFields = [...new Set([...defaultMandatoryFields, ...getCiReqFlds])]\n                return getEmOrTelFieldCheck(defaultMandatoryFields)\n            } else {\n                return getEmOrTelFieldCheck(defaultMandatoryFields)\n            }\n        } else {\n            return getEmOrTelFieldCheck(defaultMandatoryFields)\n        }\n    }\n\n    const createClientLoginId = (clientId) => {\n        return UseOrest({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: 'client/loginid',\n            method: 'PUT',\n            token: useToken,\n            params: {\n                id: clientId,\n                pref: true,\n                datapolicy: true,\n                force: true\n            }\n        }).then((clientLoginIdResponse) => {\n            return !!(clientLoginIdResponse.status === 200 && clientLoginIdResponse?.data?.data)\n        }).catch(() => {\n            return false\n        })\n    }\n\n    const clientPatch = (clientData, clientGid) => {\n        return Patch({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: isEmpPortal ? OREST_ENDPOINT.EMPLOYEE :  OREST_ENDPOINT.CLIENT,\n            token: useToken,\n            gid: clientGid,\n            params: {\n                hotelrefno: useClientOrestState.hotelrefno\n            },\n            data: clientData,\n        }).then((clientPatchResponse) => {\n            if (clientPatchResponse.status === 200 && clientPatchResponse?.data?.data) {\n                return clientPatchResponse.data.data\n            }else{\n                return false\n            }\n        }).catch(() => {\n            return false\n        })\n    }\n\n    const clientView = (clientPatch) => {\n        return UseOrest({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: isEmpPortal ? 'employee/view/get' : 'client/view/get',\n            token: useToken,\n            params: {\n                gid: clientPatch.gid,\n                allhotels: true\n            },\n        }).then((clientViewGetResponse) => {\n            if (clientViewGetResponse.status === 200 && clientViewGetResponse?.data?.data) {\n                return clientViewGetResponse.data.data\n            }else{\n                return false\n            }\n        }).catch(() => {\n            return false\n        })\n    }\n\n    const clientInfoUpdate = async (clientData, clientGid) => {\n        const isClientPatch = await clientPatch(clientData, clientGid)\n        if(isClientPatch && isPrimaryGuest){\n            return await clientView(isClientPatch)\n        }else return !!isClientPatch\n    }\n\n    const getOnChangeValue = (type, value, isRequired) => {\n        switch (type) {\n            case fieldTypes.date:\n                const newValue = moment(value).format(OREST_ENDPOINT.DATEFORMAT)\n                return {\n                    value: newValue,\n                    isError: newValue === 'Invalid date',\n                    errorText: newValue === 'Invalid date' ? `*${t('str_invalidDate')}` : false,\n                    isRequired: isRequired\n                }\n            default:\n                return {\n                    value: value,\n                    isError: isRequired && !!required(value),\n                    errorText: isRequired && !!required(value),\n                    isRequired: isRequired\n                }\n        }\n    }\n\n    const handleOnChangeCallBack = (key, useData) => {\n        switch (key) {\n            case useClientInitialState.maritalstatus.key:\n                const isVisible = !!(useData?.value && useData?.value[useClientInitialState.maritalstatus.defValKey] === TRANSTYPES.MARRIED)\n                setUseClientInitialState({\n                    ...useClientInitialState,\n                    [key]: {\n                        ...useClientInitialState[key],\n                        value: useData.value,\n                        isError: useData.isError,\n                        isRequired: useData.isRequired,\n                        errorText: useData.errorText,\n                    },\n                    [useClientInitialState.weddingdate.key]: {\n                        ...useClientInitialState[useClientInitialState.weddingdate.key],\n                        isVisible: isVisible\n                    },\n                })\n               return true\n            case useClientInitialState.nationid.key:\n                const isActive = !!(useData?.value && useData?.value?.reqtrid)\n                setUseClientInitialState({\n                    ...useClientInitialState,\n                    [key]: {\n                        ...useClientInitialState[key],\n                        value: useData.value,\n                        isError: useData.isError,\n                        isRequired: useData.isRequired,\n                        errorText: useData.errorText,\n                    },\n                    [useClientInitialState.tridno.key]: {\n                        ...useClientInitialState[useClientInitialState.tridno.key],\n                        isVisible: isActive,\n                        isRequired: isActive && useClientInitialState.nationid.isRequired\n                    },\n                    [useClientInitialState.healthcode.key]: {\n                        ...useClientInitialState[useClientInitialState.healthcode.key],\n                        isVisible: isActive,\n                        isRequired: isActive && GENERAL_SETTINGS.hotelSettings.reg_healthcode\n                    },\n                    [useClientInitialState.idtypeid.key]: {\n                        ...useClientInitialState[useClientInitialState.idtypeid.key],\n                        isVisible: !isActive,\n                        isRequired: !isActive && useClientInitialState.nationid.isRequired\n                    },\n                    [useClientInitialState.idno.key]: {\n                        ...useClientInitialState[useClientInitialState.idno.key],\n                        isVisible: !isActive,\n                        isRequired: !isActive && useClientInitialState.nationid.isRequired\n                    }\n                })\n                return true\n            case useClientInitialState.email.key:\n                setUseClientInitialState({\n                    ...useClientInitialState,\n                    [key]: {\n                        ...useClientInitialState[key],\n                        value: useData.value,\n                        isError: useData.isError,\n                        errorText: useData.errorText\n                    },\n                    [useClientInitialState.mobiletel.key]: {\n                        ...useClientInitialState[useClientInitialState.mobiletel.key],\n                        isError: false,\n                        errorText: '',\n                        isRequired: !useOtherGuestResname && GENERAL_SETTINGS.hotelSettings.profile_emortelok ? !useData.value : useClientInitialState.mobiletel.isRequired,\n                    }\n                })\n                return true\n            case useClientInitialState.mobiletel.key:\n                setUseClientInitialState({\n                    ...useClientInitialState,\n                    [key]: {\n                        ...useClientInitialState[key],\n                        value: useData.value,\n                        isError: useData.isError,\n                        errorText: useData.errorText\n                    },\n                    [useClientInitialState.email.key]: {\n                        ...useClientInitialState[useClientInitialState.email.key],\n                        isError: false,\n                        errorText: '',\n                        isRequired: !useOtherGuestResname && GENERAL_SETTINGS.hotelSettings.profile_emortelok ? !useData.value : useClientInitialState.email.isRequired,\n                    }\n                })\n                return true\n            default:\n                return false\n        }\n    }\n\n    const handleOnChange = (key, value, type = 'text') => {\n        const useData = getOnChangeValue(type, value, useClientInitialState[key].isRequired)\n        const isCallback = handleOnChangeCallBack(key, useData)\n        if(!isCallback){\n            setUseClientInitialState({\n                ...useClientInitialState,\n                [key]: {\n                    ...useClientInitialState[key],\n                    value: useData.value,\n                    isError: useData.isError,\n                    isRequired: useData.isRequired,\n                    errorText: useData.errorText,\n                },\n            })\n        }\n    }\n\n    const getFormComponent = (field) => {\n        switch (field.type) {\n            case fieldTypes.trid:\n            case fieldTypes.email:\n            case fieldTypes.text:\n                return (\n                    <TextField\n                        id={field.key}\n                        name={field.key}\n                        label={t(field.label)}\n                        required={field.isRequired}\n                        disabled={isUpdating}\n                        fullWidth={fieldOptions.fullWidth.textField}\n                        size={fieldOptions.size.textField}\n                        variant={fieldOptions.variant.textField}\n                        value={field.value}\n                        onChange={(e) => handleOnChange(field.key, e.target.value)}\n                        error={field.isError}\n                        helperText={field.isError && field.errorText}\n                        onBlur={field.isVerifyRequired ? () => handleOnVerify(field.key, field.value, field.type) : undefined}\n                    />\n                )\n            case fieldTypes.select:\n                return (\n                    <SelectAutoComplete\n                        required={field.isRequired}\n                        label={t(field.label)}\n                        isInitialStateLoad={isInitialStateLoad}\n                        disabled={isUpdating}\n                        id={field.key}\n                        name={field.key}\n                        selectApi={field.selectApi}\n                        value={field.value}\n                        error={field.isError}\n                        variant={fieldOptions.variant.textField}\n                        onCallback={(newValue) => handleOnChange(field.key, newValue)}\n                        onChange={(newValue) => handleOnChange(field.key, newValue)}\n                        optionLabel={field.optionLabel}\n                        optionKey={field.optionKey}\n                        defValKey={field.defValKey}\n                        defValue={field.defValKey && field.value || false}\n                        trgValKey={field.trgValKey}\n                        trgQueryKey={field.trgQueryKey}\n                        trgValue={field.trgValue && useClientInitialState[field.trgValue].value || false}\n                    />\n                )\n            case fieldTypes.tel:\n                return (\n                    <PhoneInput\n                        defaultCountry={locale === 'en' ? 'us': locale}\n                        preferredCountries={['it', 'ie', 'de', 'fr', 'es', 'gb']}\n                        regions={['america', 'europe', 'asia', 'oceania', 'africa',]}\n                        id={field.key}\n                        name={field.key}\n                        label={t(field.label)}\n                        required={field.isRequired}\n                        disabled={isUpdating}\n                        fullWidth={fieldOptions.fullWidth.textField}\n                        size={fieldOptions.size.textField}\n                        variant={fieldOptions.variant.textField}\n                        value={field.value}\n                        onChange={(newValue) => handleOnChange(field.key, newValue)}\n                        error={field.isError}\n                        helperText={field.isError && field.errorText}\n                        onBlur={field.isVerifyRequired ? () => handleOnVerify(field.key, field.value, field.type) : undefined}\n                    />\n                )\n            case fieldTypes.date:\n                return (\n                    <LocalizationProvider dateLibInstance={moment} dateAdapter={MomentAdapter}>\n                        <DatePicker\n                            required={field.isRequired}\n                            allowKeyboardControl\n                            disabled={isUpdating}\n                            autoOk\n                            id={field.key}\n                            name={field.key}\n                            label={t(field.label)}\n                            inputFormat={fieldOptions.dateFormatForView}\n                            disableFuture\n                            openTo={'date'}\n                            views={['year', 'month', 'date']}\n                            value={field.value || moment()}\n                            onChange={(newValue) => handleOnChange(field.key, newValue, field.type)}\n                            renderInput={(props) => {\n                                return (\n                                    <TextField\n                                        {...props}\n                                        fullWidth={fieldOptions.fullWidth.textField}\n                                        size={fieldOptions.size.textField}\n                                        variant={fieldOptions.variant.textField}\n                                        required={field.isRequired}\n                                        error={field.isError}\n                                        helperText={field.isError && field.errorText}\n                                    />\n                                )\n                            }}\n                        />\n                    </LocalizationProvider>\n                )\n            case fieldTypes.upload:\n                return (\n                    <FileUploadAndShow\n                        id={field.key}\n                        name={field.key}\n                        label={t(field.label)}\n                        required={field.isRequired}\n                        disabled={!useClientOrestState || isUpdating || !useClientOrestState.id}\n                        fullWidth={fieldOptions.fullWidth.textField}\n                        size={fieldOptions.size.textField}\n                        variant={fieldOptions.variant.textField}\n                        error={field.isError}\n                        helperText={field.isError && field.errorText}\n                        optionKey={field.optionKey}\n                        defValKey={field.defValKey}\n                        defValue={field.defValKey && useClientOrestState[field.defValKey]}\n                        trgQueryKey={field.defValKey && useClientOrestState[field.trgQueryKey]}\n                    />\n                )\n            case fieldTypes.sign:\n                return(\n                    <SignerPad\n                        id={field.key}\n                        name={field.key}\n                        label={t(field.label)}\n                        required={field.isRequired}\n                        disabled={isUpdating}\n                        fullWidth={fieldOptions.fullWidth.textField}\n                        size={fieldOptions.size.textField}\n                        variant={fieldOptions.variant.textField}\n                        error={field.isError}\n                        helperText={field.isError && field.errorText}\n                        optionLabel={field.optionLabel}\n                        optionKey={field.optionKey}\n                        defValKey={field.defValKey}\n                        defValue={field.defValKey && useOtherGuestResname ? useOtherGuestResname[field.defValKey] : useClientReservation[field.defValKey]}\n                        trgQueryKey={field.defValKey && useOtherGuestResname ? useOtherGuestResname[field.trgQueryKey] : useClientReservation[field.trgQueryKey]}\n                        onUpdateCallBack={()=> {\n                            setUseClientInitialState({\n                                ...useClientInitialState,\n                                [useClientInitialState.signature.key]: {\n                                    ...useClientInitialState[useClientInitialState.signature.key],\n                                    isError: false,\n                                    errorText: ''\n                                },\n                            })\n                        }}\n                    />\n                )\n            default:\n                return\n        }\n    }\n\n    const handleOnVerify = (key, value, type) => {\n        switch (type) {\n            case fieldTypes.email:\n                isEmailExists(key, value)\n                break\n            case fieldTypes.tel:\n                isPhoneExists(key, value)\n                break\n            case fieldTypes.trid:\n                isTrIdValid(key, value)\n                break\n            default:\n                return false\n        }\n    }\n\n    const isCheckInDay = () =>{\n        return !useOtherGuestResname && useClientReservation && useHotelWorkDateTime.workdate === useClientReservation.checkin\n    }\n\n    const isRoomSelectionPossible = () => {\n        return !useOtherGuestResname && useClientReservation && useClientReservation.canroom && !useClientReservation.roomno && GENERAL_SETTINGS.hotelSettings.roomno\n    }\n\n    const isReservationStatusAccepted = () => {\n        const acceptedStatus = ['A', 'I']\n        return !useOtherGuestResname && usePrimaryClientReservation && acceptedStatus.includes(usePrimaryClientReservation.status)\n    }\n\n    const isCheckInPossible = () => {\n        if(useClientReservation && !useClientReservation.canroom && GENERAL_SETTINGS.hotelSettings.roomno){\n            return false\n        }\n        return !useOtherGuestResname && useClientReservation && useClientReservation.canci && isCheckInDay() && GENERAL_SETTINGS.hotelSettings.ci_enable\n    }\n\n    const isEmailExists = (key, val) => {\n        if (val) {\n            if(emailValidation(val)){\n                setIsUpdating(true)\n                UseOrest({\n                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                    endpoint: 'client/email/exists',\n                    token: useToken,\n                    params: {\n                        email: val,\n                        allhotels: true\n                    },\n                }).then((response) => {\n                    if (response.status === 200 && response?.data?.data?.res) {\n                        if (useClientOrestState?.id !== response.data.data.id) {\n                            setUseClientInitialState({\n                                ...useClientInitialState,\n                                [key]: {\n                                    ...useClientInitialState[key],\n                                    isError: true,\n                                    errorText: t('str_emailAlreadyExist'),\n                                },\n                            })\n                        }\n                        setIsUpdating(false)\n                        return true\n                    } else {\n                        setIsUpdating(false)\n                        return false\n                    }\n                }).catch(() => {\n                    setIsUpdating(false)\n                    return false\n                })\n            }else{\n                setUseClientInitialState({\n                    ...useClientInitialState,\n                    [key]: {\n                        ...useClientInitialState[key],\n                        isError: true,\n                        errorText: t('str_invalidEmail'),\n                    },\n                })\n            }\n        }\n    }\n\n    const isPhoneExists = (key, val) => {\n        if(String(val).length > 5){\n            setIsUpdating(true)\n            UseOrest({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: 'client/phone/exists',\n                token: useToken,\n                params: {\n                    tel: mobileTelNoFormat(val),\n                    allhotels: true\n                },\n            }).then((response) => {\n                if (response.status === 200 && response?.data?.data?.res) {\n                    if(useClientOrestState?.id !== response.data.data.id){\n                        setUseClientInitialState({\n                            ...useClientInitialState,\n                            [key]: {\n                                ...useClientInitialState[key],\n                                isError: true,\n                                errorText: t('str_mobileAlreadyExist'),\n                            },\n                        })\n                    }\n                    setIsUpdating(false)\n                    return true\n                } else {\n                    setIsUpdating(false)\n                    return false\n                }\n            }).catch(() => {\n                setIsUpdating(false)\n                return false\n            })\n        }\n    }\n\n    const isTrIdValid = (key, val) => {\n        if(val){\n            setIsUpdating(true)\n            UseOrest({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: 'tools/validate/tridno',\n                token: useToken,\n                params: {\n                    idno: val,\n                    allhotels: true\n                },\n            }).then((response) => {\n                if (response.status === 200 && response?.data?.data?.res) {\n                    setIsUpdating(false)\n                    return true\n                } else {\n                    setUseClientInitialState({\n                        ...useClientInitialState,\n                        [key]: {\n                            ...useClientInitialState[key],\n                            isError: true,\n                            errorText: t('str_pleaseEnterAValidTRIdNo'),\n                        },\n                    })\n                    setIsUpdating(false)\n                    return false\n                }\n            }).catch(() => {\n                setIsUpdating(false)\n                return false\n            })\n        }\n    }\n\n    const getNotecatDataself = (hotelrefno) => {\n        return UseOrest({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: 'notecat/dataself',\n            token: useToken,\n            params: {\n                hotelrefno: hotelrefno\n            }\n        }).then((response) => {\n            if (response.status === 200 && response.data && response.data.data.res) {\n                return response.data.data.res\n            } else {\n                return false\n            }\n        }).catch(() => {\n            return false\n        })\n    }\n\n    const getNotetypeData = (hotelrefno) => {\n        return UseOrest({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: 'notetype/data',\n            token: useToken,\n            params: {\n                hotelrefno: hotelrefno\n            }\n        }).then((response) => {\n            if (response.status === 200 && response.data && response.data.data.res) {\n                return response.data.data.res\n            } else {\n                return false\n            }\n        }).catch(() => {\n            return false\n        })\n    }\n\n    const defNoteData = (hotelrefno) => {\n        return UseOrest({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: 'ranote/def',\n            token: useToken,\n            params: {\n                hotelrefno: hotelrefno\n            }\n        }).then((response) => {\n            if (response.status === 200 && response.data && response.data.data) {\n                return response.data.data\n            } else {\n                return false\n            }\n        }).catch(() => {\n            return false\n        })\n    }\n\n    const setNoteData = (data, hotelrefno) => {\n        return Insert({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: 'ranote',\n            token: useToken,\n            params: {\n                hotelrefno: hotelrefno\n            },\n            data\n        }).then((response) => {\n            return response.status === 200 && response.data && response.data.data;\n        }).catch(() => {\n            return false\n        })\n    }\n\n    const handleRequestProfileInfoChange = async (clientDataDifferences) => {\n        let noteValue = ''\n        clientDataDifferences.map((item) => noteValue += `${item.label}: ${item.oldval} >>> ${item.newval};;;`)\n\n        const noteCatDataselfId = await getNotecatDataself(useClientOrestState.hotelrefno)\n        const noteTypeDataId = await getNotetypeData(useClientOrestState.hotelrefno)\n\n        let getDefaultNote = await defNoteData(useClientOrestState.hotelrefno)\n        getDefaultNote.notecatid = noteCatDataselfId\n        getDefaultNote.notetypeid = noteTypeDataId\n        getDefaultNote.note = noteValue\n        getDefaultNote.masterid = useClientOrestState.mid\n\n        return await setNoteData(getDefaultNote, useClientOrestState.hotelrefno)\n    }\n\n    const isSignatureAvailable = async (code, mid) => {\n        return List({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.RAFILE,\n            token: useToken,\n            params: {\n                query: `code::${code},masterid::${mid}`,\n                limit: 1,\n                allhotels: true,\n            },\n        }).then((rafileListResponse) => {\n            return rafileListResponse.status === 200 && rafileListResponse?.data?.data.length > 0\n        }).catch(() => {\n            return false\n        })\n    }\n\n    const sendHotelNotifyMail = async (changes) => {\n        return await sendGuestChangeNotifyMail(\n            isPrimaryGuest ? !useClientReservation?.gid : true,\n            'client',\n            'upd',\n            useClientOrestState.id,\n            isPrimaryGuest ? useClientReservation?.gid || useClientOrestState.gid : useClientOrestState.gid,\n            {\n                roomno: isReservationStatusAccepted() && usePrimaryClientReservation?.roomno || '',\n                clientname: useClientOrestState.clientname || '',\n                reservno: isReservationStatusAccepted() && usePrimaryClientReservation?.reservno || '',\n                changes: JSON.stringify({ changeItems: changes }),\n            },\n            isPrimaryGuest ? useClientReservation?.hotelrefno || GENERAL_SETTINGS.HOTELREFNO : GENERAL_SETTINGS.HOTELREFNO,\n        )\n    }\n\n    const primaryGuestRequiredFieldCheck = async () => {\n        if(!usePrivacyTransactions.datapolicy.value || !usePrivacyTransactions.pref.value){\n            enqueueSnackbar(t('str_pleaseCheckMandatoryFields'), { variant: 'warning' })\n            setIsUpdating(false)\n            return false\n        }\n\n        let isRequiredFieldMistake = false\n        const newUseClientInitialState = {...useClientInitialState}\n\n        for (let key of Object.keys(newUseClientInitialState)) {\n            const getField = newUseClientInitialState[key]\n            if (getField.isBase && getField.isRequired && !getField.value || getField.isError) {\n                isRequiredFieldMistake = true\n                newUseClientInitialState[key].isError = true\n            }\n        }\n\n        if (useClientInitialState.signature.isRequired) {\n            const signatureAvailable = await isSignatureAvailable(useClientInitialState.signature.optionKey,  useOtherGuestResname ? useOtherGuestResname[useClientInitialState.signature.defValKey] : useClientReservation[useClientInitialState.signature.defValKey])\n            if (!signatureAvailable) {\n                isRequiredFieldMistake = true\n                newUseClientInitialState[useClientInitialState.signature.key].isError = true\n            }\n        }\n\n        if(isRequiredFieldMistake){\n            enqueueSnackbar(t('str_pleaseCheckMandatoryFields'), { variant: 'warning' })\n            setUseClientInitialState(newUseClientInitialState)\n            setIsUpdating(false)\n            return false\n        }\n\n        return true\n    }\n\n    const getOtherGuestsClientIdList = (reservno) => {\n        return ViewList({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.RESNAME,\n            token: useToken,\n            params: {\n                query: `reservno:${reservno}`,\n                allhotels: true,\n            },\n        }).then((resnameResponse) => {\n            if (resnameResponse.status === 200 && resnameResponse?.data?.data && resnameResponse?.data?.data.length > 0) {\n                return resnameResponse.data.data.map((resname) => resname.clientid)\n            } else {\n                return false\n            }\n        }).catch(() => {\n            return false\n        })\n    }\n\n    const getOtherGuestsClientList = (otherGuestsClientIdList) => {\n        return UseOrest({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: 'client/view/list/get/id',\n            method: 'POST',\n            token: useToken,\n            params: {\n                allhotels: true,\n            },\n            data: otherGuestsClientIdList,\n        }).then((clientViewListGetIdResponse) => {\n            if (clientViewListGetIdResponse.status === 200 && clientViewListGetIdResponse?.data?.data) {\n                return clientViewListGetIdResponse.data.data\n            } else {\n                return false\n            }\n        }).catch(() => {\n            return false\n        })\n    }\n\n    const otherGuestRequiredFieldCheck = async (numberOfOtherGuest) => {\n        const otherGuestsClientIdList = await getOtherGuestsClientIdList(useClientReservation.reservno)\n        const otherGuestsClientList = await getOtherGuestsClientList(otherGuestsClientIdList)\n\n        if (GENERAL_SETTINGS.hotelSettings.ci_chkallcards && otherGuestsClientList && otherGuestsClientList.length !== numberOfOtherGuest) {\n            enqueueSnackbar(t('str_otherGuestsInformationIsMandatoryPleaseCheckOtherGuestInformationAndFillInTheRequiredFields'), { variant: 'warning' })\n            setIsOtherGuestsDialog(true)\n            return false\n        }\n\n        let isRequiredFieldMistake = false\n        otherGuestsClientList.map((otherGuest) => {\n            if (!otherGuest.firstname || !otherGuest.lastname || !otherGuest.birthdate || !otherGuest.nationid || !otherGuest.idno && !otherGuest.tridno) {\n                isRequiredFieldMistake = true\n            }\n        })\n\n        if (GENERAL_SETTINGS.hotelSettings.ci_chkallcards && isRequiredFieldMistake) {\n            enqueueSnackbar(t('str_otherGuestsInformationIsMandatoryPleaseCheckOtherGuestInformationAndFillInTheRequiredFields'), { variant: 'warning' })\n            setIsOtherGuestsDialog(true)\n            return false\n        }\n\n        return true\n    }\n\n    const handleClientUpdate = async (showNotificationMessages = true) => {\n        setIsUpdating(true)\n\n        const getPrimaryGuestRequiredFieldCheck = await primaryGuestRequiredFieldCheck()\n        if(!getPrimaryGuestRequiredFieldCheck){\n            return false\n        }\n\n        const newClientData = helper.objectValueEqualizer({ obj1: useClientInitialState })\n        const newClientDataDifferences = helper.objectDifferences({ obj1: newClientData, obj2: useClientOrestState, labelKeys: useClientInitialState, translate: t, langcode: GENERAL_SETTINGS.hotelLocalLangGCode })\n\n        if(newClientDataDifferences.length > 0 || usePrivacyTransactions.pref.isUpdate || usePrivacyTransactions.datapolicy.isUpdate) {\n            if (GENERAL_SETTINGS.hotelSettings.profile_update || isEmpPortal) {\n                const isClientInfoUpdate = await clientInfoUpdate(newClientData, useClientOrestState.gid)\n                if(!isEmpPortal) {\n                    if (useOtherGuestResname) {\n                        await createClientLoginId(useClientOrestState.id)\n                    }\n                    if(useClientOrestState && useClientOrestState?.id){\n                        await sendHotelNotifyMail(newClientDataDifferences)\n                    }\n                }\n                setUsePrivacyTransactions({\n                    ...usePrivacyTransactions,\n                    datapolicy: { ...usePrivacyTransactions.datapolicy, isUpdate: false },\n                    pref: { ...usePrivacyTransactions.pref, isUpdate: false }\n                })\n                if (isClientInfoUpdate) {\n                    if (isPrimaryGuest) {\n                        setOrestState([isEmpPortal ? 'emp' : 'client'], isClientInfoUpdate)\n                    }\n                    if(showNotificationMessages){\n                        enqueueSnackbar(t('str_clientInfoUpdateSuccess'), { variant: 'success' })\n                    }\n                    setIsUpdating(false)\n                    return true\n                } else {\n                    if(showNotificationMessages){\n                        enqueueSnackbar(t('str_unexpectedProblem'), { variant: 'warning' })\n                    }\n                    setIsUpdating(false)\n                    return false\n                }\n            } else {\n                if(useClientOrestState && useClientOrestState.mid){\n                    const isRequestProfileInfoSave = await handleRequestProfileInfoChange(newClientDataDifferences)\n                    await sendHotelNotifyMail(newClientDataDifferences)\n                    setUsePrivacyTransactions({\n                        ...usePrivacyTransactions,\n                        datapolicy: { ...usePrivacyTransactions.datapolicy, isUpdate: false },\n                        pref: { ...usePrivacyTransactions.pref, isUpdate: false }\n                    })\n                    if (isRequestProfileInfoSave) {\n                        if(showNotificationMessages){\n                            enqueueSnackbar(t('str_contactMailSendMsg'), { variant: 'success' })\n                        }\n                        setIsUpdating(false)\n                        return true\n                    } else {\n                        if(showNotificationMessages){\n                            enqueueSnackbar(t('str_unexpectedProblem'), { variant: 'warning' })\n                        }\n                        setIsUpdating(false)\n                        return false\n                    }\n                } else {\n                    enqueueSnackbar(t('str_clientRecordNotFound'), { variant: 'warning' })\n                    setIsUpdating(false)\n                    return true\n                }\n            }\n        }else{\n            if(showNotificationMessages){\n                enqueueSnackbar(t('str_noChangesYet'), { variant: 'warning' })\n            }\n            setIsUpdating(false)\n            return false\n        }\n    }\n\n    const getNumberOfOtherGuest = (useClientReservation) => {\n        return Number((useClientReservation.totalpax + useClientReservation.totalchd) - 1)\n    }\n\n    const handleCheckinConfirmationDialog = async () => {\n\n        if(isRoomSelectionPossible() && GENERAL_SETTINGS.hotelSettings.roomno){\n            setIsRoomSelectionDialog(true)\n            enqueueSnackbar(t('str_youMustChooseARoomBeforeCheckIn'), { variant: 'warning' })\n            return false\n        }\n\n        const numberOfOtherGuest = getNumberOfOtherGuest(useClientReservation)\n        if(numberOfOtherGuest > 0){\n            const getPrimaryGuestRequiredFieldCheck = await primaryGuestRequiredFieldCheck()\n            if (!getPrimaryGuestRequiredFieldCheck) {\n                return false\n            }\n\n            const getOtherGuestRequiredFieldCheck = await otherGuestRequiredFieldCheck(numberOfOtherGuest)\n            if (!getOtherGuestRequiredFieldCheck) {\n                return false\n            }\n        }\n\n        await handleClientUpdate(false)\n        setIsCheckinConfirmationDialog(true)\n        return true\n    }\n\n    const [fieldGroupAccordionExpanded, setFieldGroupAccordionExpanded] = useState(false)\n\n    const handleFieldGroupAccordionChange = (panel) => (event, newExpanded) => {\n        setFieldGroupAccordionExpanded(newExpanded ? panel : false)\n    }\n\n    return (\n        <React.Fragment>\n            {isPrimaryGuest && (isRoomSelectionPossible() || isReservationStatusAccepted()) ?\n                <Grid className={classesTabPanel.gridContainerToolbar} container spacing={1} direction='row' justify='flex-end' alignItems='center'>\n                    {isRoomSelectionPossible() ? (\n                        <Grid item style={{marginRight: 'auto'}}>\n                            <Alert style={{padding: '0px 10px'}} severity=\"info\" variant=\"outlined\">\n                                {isRoomSelectionPossible() && t('str_youMustChooseARoomBeforeCheckIn')}\n                            </Alert>\n                        </Grid>\n                    ): null}\n                    {isRoomSelectionPossible() ?\n                        <Grid item>\n                            <Button\n                                className={classesTabPanel.proceedButton}\n                                startIcon={<Icon>meeting_room</Icon>}\n                                variant='outlined'\n                                disableElevation\n                                size={fieldOptions.size.button}\n                                onClick={() => setIsRoomSelectionDialog(true)}\n                            >\n                                {t('str_selectRoomToStay')}\n                            </Button>\n                            <RoomSelection\n                                confirmClassName={classesTabPanel.proceedButton}\n                                open={isRoomSelectionDialog}\n                                onClose={()=> setIsRoomSelectionDialog(false)}\n                                useClientOrestState={useClientOrestState}\n                                useClientReservation={useClientReservation}\n                            />\n                        </Grid> : null}\n                    {(isReservationStatusAccepted() && getNumberOfOtherGuest(useClientReservation) > 0) ?\n                        <Grid item>\n                            <Button\n                                startIcon={<Icon>people</Icon>}\n                                variant='outlined'\n                                color='primary'\n                                disableElevation\n                                size={fieldOptions.size.button}\n                                onClick={() => setIsOtherGuestsDialog(true)}\n                            >\n                                {t('str_otherGuests')}\n                            </Button>\n                            <OtherGuests\n                                confirmClassName={classesTabPanel.proceedButton}\n                                open={isOtherGuestsDialog}\n                                onClose={()=> setIsOtherGuestsDialog(false)}\n                                useClientOrestState={useClientOrestState}\n                                useClientReservation={useClientReservation}\n                                otherGuestRequiredFieldCheck={otherGuestRequiredFieldCheck}\n                                isCheckInPossible={isCheckInPossible()}\n                                onCallBackCheckInButton={() => handleCheckinConfirmationDialog()}\n                            />\n                        </Grid> : null}\n                </Grid> : null\n            }\n            {fieldGroupAccordions.map((fieldGroupAccordion, i) => {\n                return (\n                    <Accordion\n                        key={i}\n                        expanded={fieldGroupAccordion.defExpand || fieldGroupAccordion.key === fieldGroupAccordionExpanded}\n                        onChange={handleFieldGroupAccordionChange(fieldGroupAccordion.key)}\n                        style={{\n                            marginLeft: 8,\n                            marginRight: 8\n                        }}\n                    >\n                        {fieldGroupAccordion.label !== '' ?\n                            <AccordionSummary\n                                style={{\n                                    borderBottom: '1px solid #ebebeba3'\n                                }}\n                                expandIcon={!fieldGroupAccordion.defExpand ? <ExpandMoreIcon />: null}\n                                aria-controls={`${fieldGroupAccordion.key}-content`}\n                                id={`${fieldGroupAccordion.key}-header`}\n                            >\n                                <Typography style={{\n                                    textAlign: 'left',\n                                    fontSize: 20,\n                                    fontWeight: 300,\n                                    color: '#2F3434',\n                                    lineHeight: 1.2,\n                                    paddingTop: 3,\n                                }}>\n                                    {t(fieldGroupAccordion.label)}\n                                </Typography>\n                            </AccordionSummary> : null}\n                        <AccordionDetails>\n                            <Grid item xs={12}>\n                                {fieldGroupArray.filter(fieldGroup => fieldGroup.accordionKey === fieldGroupAccordion.key).map((fieldGroup, keyIndex) => {\n                                    return (\n                                        <React.Fragment key={keyIndex}>\n                                            {fieldGroup.labelShow ? <TabHeader title={t(fieldGroup.label)} /> : null}\n                                            <Grid className={classesTabPanel.gridContainer} container spacing={2} direction='row' justify='flex-start' alignItems='center'>\n                                                {Object.keys(useClientInitialState).map((fieldItem, keyIndex) => {\n                                                    const useField = useClientInitialState[fieldItem]\n                                                    const useRequired = fieldGroup.key === useField.groupKey && useField.isVisible\n                                                    if (!useClientReservation && useRequired && !useField.isResRequired || useClientReservation && useRequired) {\n                                                        return (\n                                                            <Grid item xs={useField.gridBreakpoints.xs} sm={useField.gridBreakpoints.sm} md={useField.gridBreakpoints.md} key={keyIndex}>\n                                                                {getFormComponent(useField)}\n                                                            </Grid>\n                                                        )\n                                                    }\n                                                })}\n                                            </Grid>\n                                        </React.Fragment>\n                                    )\n                                })}\n                            </Grid>\n                        </AccordionDetails>\n                    </Accordion>\n                )\n            })}\n            <Grid className={classesTabPanel.gridContainer} container spacing={1} direction='row' justify='flex-start' alignItems='center' style={{marginTop: 20, marginLeft: 8}}>\n                <Grid item xs={12}>\n                    <FrameCheckbox\n                        disabled={isUpdating}\n                        required={usePrivacyTransactions.datapolicy.isRequired}\n                        value={usePrivacyTransactions.datapolicy.value}\n                        title=\"str_privacyAndPersonalDataProtectionPolicies\"\n                        linkText=\"str_iAcceptDataPolicy\"\n                        linkTextADesc=\"str_privacyAndPersonalDataProtectionPolicies\"\n                        iframePageUrl={GENERAL_SETTINGS.BASE_URL + `info/${locale || global.common.strDefShortLangCode}/${global.guestWeb.strDataPolicy}?iframe=true`}\n                        isCheck={(e) => setUsePrivacyTransactions({...usePrivacyTransactions, datapolicy: { ...usePrivacyTransactions.datapolicy, value: e, isUpdate: true }})}\n                    />\n                </Grid>\n                {!isEmpPortal && (\n                    <Grid item xs={12}>\n                        <FrameCheckbox\n                            disabled={isUpdating}\n                            required={usePrivacyTransactions.pref.isRequired}\n                            value={usePrivacyTransactions.pref.value}\n                            title=\"str_hygieneAndTravelPolicies\"\n                            linkText=\"str_iAcceptTravelPolicy\"\n                            linkTextADesc=\"str_hygieneAndTravelPolicies\"\n                            ifamePageUrl={GENERAL_SETTINGS.BASE_URL + `info/${locale || global.common.strDefShortLangCode}/${global.guestWeb.strTravelPolicy}?iframe=true`}\n                            isCheck={(e) => setUsePrivacyTransactions({...usePrivacyTransactions, pref: { ...usePrivacyTransactions.pref, value: e, isUpdate: true }})}\n                        />\n                    </Grid>\n                )}\n            </Grid>\n            <Grid className={classesTabPanel.gridContainerToolbar} container spacing={2} direction='row' justify='flex-end' alignItems='center'>\n                <Grid item>\n                    {isPrimaryGuest && isCheckInPossible() ?\n                        <Grid item>\n                            <Button\n                                disabled={isUpdating || !isCheckInDay()}\n                                className={classesTabPanel.proceedButton}\n                                startIcon={<Icon>done</Icon>}\n                                variant='outlined'\n                                disableElevation\n                                size={fieldOptions.size.button}\n                                onClick={() => handleCheckinConfirmationDialog()}\n                            >\n                                {t('str_proceedToCheckin')}\n                            </Button>\n                            <CheckInConfirmation\n                                confirmClassName={classesTabPanel.proceedButton}\n                                open={isCheckinConfirmationDialog}\n                                onClose={()=> setIsCheckinConfirmationDialog(false)}\n                                useClientOrestState={useClientOrestState}\n                                useClientReservation={useClientReservation}\n                            />\n                        </Grid> : <Button disabled={isUpdating} variant=\"contained\" color=\"primary\" disableElevation size={fieldOptions.size.button} onClick={() => handleClientUpdate()}><span style={{paddingRight: '4px'}}>{isUpdating && <LoadingSpinner size={18}/>}</span>{t('str_update')}</Button>\n                    }\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    )\n}\n\nexport default ClientBase"]},"metadata":{},"sourceType":"module"}