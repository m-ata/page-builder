{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/emp-portal/tabs/Abilities/index.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Insert, UseOrest, ViewList, Patch, Delete, Upload } from \"@webcms/orest\";\nimport WebCmsGlobal from \"../../../webcms-global\";\nimport { useSelector } from \"react-redux\";\nimport { isErrorMsg, mobileTelNoFormat, OREST_ENDPOINT } from \"../../../../model/orest/constants\";\nimport { Grid, Typography, Dialog, Checkbox, FormControlLabel, Button, Menu, MenuItem, IconButton } from \"@material-ui/core\";\nimport { useSnackbar } from \"notistack\";\nimport MaterialTableGeneric from \"../../../MaterialTableGeneric\";\nimport { SLASH } from \"../../../../model/globals\";\nimport useTranslation from \"../../../../lib/translations/hooks/useTranslation\";\nimport renderFormElements, { ELEMENT_TYPES } from \"../../../render-form-elements\";\nimport { required } from \"../../../../state/utils/form\";\nimport AddDialogActions from \"../../../AddDialogActions\";\nimport { LocaleContext } from \"../../../../lib/translations/context/LocaleContext\";\nimport LoadingSpinner from \"../../../LoadingSpinner\";\nimport { helper } from \"../../../../@webcms-globals\";\nimport TrackedChangesDialog from \"../../../TrackedChangesDialog\";\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\nimport MaterialTable, { MTableHeader } from \"material-table\";\nimport MaterialTableLocalization from \"../../../MaterialTableLocalization\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport TableColumnText from \"../../../TableColumnText\";\nimport PopupState, { bindMenu, bindTrigger } from \"material-ui-popup-state\";\nimport { CustomToolTip } from \"../../../user-portal/components/CustomToolTip/CustomToolTip\";\nimport CachedIcon from \"@material-ui/icons/Cached\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Fab from \"@material-ui/core/Fab\";\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\nimport { DropzoneDialog } from \"material-ui-dropzone\";\nimport VisibilityOutlinedIcon from \"@material-ui/icons/VisibilityOutlined\";\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\nimport CloudDownloadOutlinedIcon from \"@material-ui/icons/CloudDownloadOutlined\";\nimport { PreviewFile } from \"../../../../model/orest/components/RaFile\";\nimport axios from \"axios\";\nimport MediaViewerDialog from \"../../../../@webcms-ui/core/media-viewer-dialog\";\nconst VARIANT = 'outlined';\n\nfunction Abilities(props) {\n  var _abilityData$abilityi, _abilityData$abilityi2, _abilityData$abilityi3, _abilityData$abilityi4, _abilityData$abilityl, _abilityData$abilityl2, _abilityData$abilityl3, _abilityData$abilityl4, _abilityData$descript, _abilityData$descript2, _abilityData$descript3, _abilityData$descript4;\n\n  //props\n  const {\n    empId\n  } = props; //snackbar\n\n  const {\n    enqueueSnackbar\n  } = useSnackbar(); //context\n\n  const {\n    GENERAL_SETTINGS\n  } = useContext(WebCmsGlobal);\n  const {\n    locale\n  } = useContext(LocaleContext);\n  const {\n    t\n  } = useTranslation();\n  const tableLocalization = MaterialTableLocalization(); //redux state\n\n  const token = useSelector(state => {\n    var _state$orest, _state$orest$currentU, _state$orest$currentU2;\n\n    return (state === null || state === void 0 ? void 0 : (_state$orest = state.orest) === null || _state$orest === void 0 ? void 0 : (_state$orest$currentU = _state$orest.currentUser) === null || _state$orest$currentU === void 0 ? void 0 : (_state$orest$currentU2 = _state$orest$currentU.auth) === null || _state$orest$currentU2 === void 0 ? void 0 : _state$orest$currentU2.access_token) || false;\n  });\n  const hotelRefNo = useSelector(state => {\n    var _state$hotelinfo;\n\n    return (state === null || state === void 0 ? void 0 : (_state$hotelinfo = state.hotelinfo) === null || _state$hotelinfo === void 0 ? void 0 : _state$hotelinfo.currentHotelRefNo) || GENERAL_SETTINGS.HOTELREFNO || false;\n  });\n  const state = useSelector(state => {\n    var _state$orest2, _state$orest2$state, _state$orest2$state$e;\n\n    return (state === null || state === void 0 ? void 0 : (_state$orest2 = state.orest) === null || _state$orest2 === void 0 ? void 0 : (_state$orest2$state = _state$orest2.state) === null || _state$orest2$state === void 0 ? void 0 : (_state$orest2$state$e = _state$orest2$state.emp) === null || _state$orest2$state$e === void 0 ? void 0 : _state$orest2$state$e.mid) || false;\n  }); //locale state\n\n  const initialState = {\n    abilityid: {\n      value: '',\n      isError: false,\n      required: true,\n      helperText: ''\n    },\n    abilitylevel: {\n      value: '',\n      isError: false,\n      required: false,\n      helperText: ''\n    },\n    description: {\n      value: '',\n      isError: false,\n      required: false,\n      helperText: ''\n    },\n    stdfileid: {\n      value: 0,\n      isError: false,\n      required: false,\n      helperText: ''\n    }\n  };\n  const {\n    0: isLoadingList,\n    1: setIsLoadingList\n  } = useState(false);\n  const {\n    0: allHotels,\n    1: setAllHotels\n  } = useState(false);\n  const {\n    0: abilityList,\n    1: setAbilityList\n  } = useState([]);\n  const {\n    0: openAddDialog,\n    1: setOpenAddDialog\n  } = useState(false);\n  const {\n    0: selectedabilityData,\n    1: setSelectedabilityData\n  } = useState(null);\n  const {\n    0: selectedGid,\n    1: setSelectedGid\n  } = useState(false);\n  const {\n    0: getData,\n    1: setGetData\n  } = useState(null);\n  const {\n    0: openTrackedDialog,\n    1: setOpenTrackedDialog\n  } = useState(false);\n  const {\n    0: isDef,\n    1: setIsDef\n  } = useState(false);\n  const {\n    0: isSaving,\n    1: setIsSaving\n  } = useState(false);\n  const {\n    0: abilityData,\n    1: setAbilityData\n  } = useState(initialState);\n  const {\n    0: abilityDataBase,\n    1: setAbilityDataBase\n  } = useState(initialState);\n  const {\n    0: isInitialStateLoad,\n    1: setIsInitialStateLoad\n  } = useState(false);\n  const {\n    0: isDeleting,\n    1: setIsDeleting\n  } = useState(false);\n  const {\n    0: abilityFileUploadStatus,\n    1: setAbilityFileUploadStatus\n  } = useState(false);\n  const {\n    0: abilityFileListLoading,\n    1: setAbilityFileListLoading\n  } = useState(false);\n  const {\n    0: abilityFileList,\n    1: setAbilityFileList\n  } = useState([]);\n  const {\n    0: openPreviewDialog,\n    1: setOpenPreviewDialog\n  } = useState(false);\n  const {\n    0: isPreviewLoading,\n    1: setIsPreviewLoading\n  } = useState(false);\n  const {\n    0: mediaUrl,\n    1: setMediaUrl\n  } = useState('');\n  const {\n    0: fileType,\n    1: setFileType\n  } = useState('');\n  const {\n    0: isFileDeleting,\n    1: setIsFileDeleting\n  } = useState(false);\n  const {\n    0: isFileDownloading,\n    1: setIsFileDownloading\n  } = useState(false);\n  const {\n    0: popupState,\n    1: setPopupState\n  } = useState({});\n  const {\n    0: deleteFileInfo,\n    1: setDeleteFileInfo\n  } = useState(false);\n  const {\n    0: hasRightData,\n    1: setHasRightData\n  } = useState();\n  const {\n    0: file,\n    1: setFile\n  } = useState(null);\n\n  const openDialog = () => {\n    setAbilityFileUploadStatus(true);\n  };\n\n  const formElements = [{\n    type: ELEMENT_TYPES.autoComplete,\n    id: 'abilityid',\n    name: 'abilityid',\n    value: ((_abilityData$abilityi = abilityData.abilityid) === null || _abilityData$abilityi === void 0 ? void 0 : _abilityData$abilityi.value) || null,\n    disabled: isSaving,\n    label: t('str_abilities'),\n    variant: VARIANT,\n    required: (_abilityData$abilityi2 = abilityData.abilityid) === null || _abilityData$abilityi2 === void 0 ? void 0 : _abilityData$abilityi2.isRequired,\n    error: (_abilityData$abilityi3 = abilityData.abilityid) === null || _abilityData$abilityi3 === void 0 ? void 0 : _abilityData$abilityi3.isError,\n    helperText: (_abilityData$abilityi4 = abilityData.abilityid) === null || _abilityData$abilityi4 === void 0 ? void 0 : _abilityData$abilityi4.helperText,\n    onChange: (newValue, name) => handleOnChangeFormElements(newValue, name),\n    onBlur: (e, name) => handleOnBlurFormElements(e, name),\n    onLoad: (initialValue, name) => {\n      const data = _objectSpread({}, abilityData);\n\n      data[name].value = initialValue ? initialValue : null;\n      setAbilityData(data);\n    },\n    endpoint: 'ability/view/list',\n    params: {\n      text: '',\n      limit: 25,\n      field: 'code'\n    },\n    initialId: isInitialStateLoad && (selectedabilityData === null || selectedabilityData === void 0 ? void 0 : selectedabilityData.abilityid) || false,\n    showOptionLabel: 'code',\n    showOption: 'code',\n    searchParam: 'code,description',\n    fullWidth: true,\n    gridProps: {\n      xs: 12,\n      sm: 6\n    }\n  }, {\n    type: ELEMENT_TYPES.textField,\n    id: 'abilitylevel',\n    name: 'abilitylevel',\n    value: (_abilityData$abilityl = abilityData.abilitylevel) === null || _abilityData$abilityl === void 0 ? void 0 : _abilityData$abilityl.value,\n    error: (_abilityData$abilityl2 = abilityData.abilitylevel) === null || _abilityData$abilityl2 === void 0 ? void 0 : _abilityData$abilityl2.isError,\n    required: (_abilityData$abilityl3 = abilityData.abilitylevel) === null || _abilityData$abilityl3 === void 0 ? void 0 : _abilityData$abilityl3.isRequired,\n    disabled: isSaving,\n    label: t('str_level'),\n    helperText: (_abilityData$abilityl4 = abilityData.abilitylevel) === null || _abilityData$abilityl4 === void 0 ? void 0 : _abilityData$abilityl4.helperText,\n    onChange: e => handleOnChangeFormElements(e),\n    onBlur: e => handleOnBlurFormElements(e),\n    variant: VARIANT,\n    fullWidth: true,\n    gridProps: {\n      xs: 12,\n      sm: 6\n    }\n  }, {\n    type: ELEMENT_TYPES.textField,\n    id: 'description',\n    name: 'description',\n    value: (_abilityData$descript = abilityData.description) === null || _abilityData$descript === void 0 ? void 0 : _abilityData$descript.value,\n    error: (_abilityData$descript2 = abilityData.description) === null || _abilityData$descript2 === void 0 ? void 0 : _abilityData$descript2.isError,\n    required: (_abilityData$descript3 = abilityData.description) === null || _abilityData$descript3 === void 0 ? void 0 : _abilityData$descript3.isRequired,\n    disabled: isSaving,\n    label: t('str_description'),\n    helperText: (_abilityData$descript4 = abilityData.description) === null || _abilityData$descript4 === void 0 ? void 0 : _abilityData$descript4.helperText,\n    onChange: e => handleOnChangeFormElements(e),\n    onBlur: e => handleOnBlurFormElements(e),\n    variant: VARIANT,\n    fullWidth: true,\n    gridProps: {\n      xs: 12,\n      sm: 12\n    }\n  }];\n  const abilityColumns = [{\n    title: __jsx(Button, {\n      style: {\n        padding: 0,\n        maxWidth: 25,\n        minWidth: 25\n      },\n      disabled: true,\n      color: 'primary',\n      variant: 'text',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }\n    }, __jsx(MoreVertIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }\n    })),\n    render: props => __jsx(TableColumnText, {\n      minWidth: 30,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }\n    }, __jsx(PopupState, {\n      variant: \"popover\",\n      popupId: \"material-table-action-column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 21\n      }\n    }, popupState => __jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 29\n      }\n    }, __jsx(Button, _extends({\n      style: {\n        padding: 0,\n        maxWidth: 25,\n        minWidth: 25\n      },\n      color: 'primary',\n      variant: 'contained'\n    }, bindTrigger(popupState), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 33\n      }\n    }), __jsx(MoreVertIcon, {\n      size: 'small',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 37\n      }\n    })), __jsx(Menu, _extends({\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"left\"\n      },\n      transformOrigin: {\n        vertical: \"top\",\n        horizontal: \"left\"\n      },\n      getContentAnchorEl: null\n    }, bindMenu(popupState), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 33\n      }\n    }), __jsx(MenuItem, {\n      onClick: () => {\n        setSelectedabilityData(props);\n        setSelectedGid((props === null || props === void 0 ? void 0 : props.gid) || false);\n        handleOpenAddDialog(props);\n        popupState.close();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 37\n      }\n    }, __jsx(EditOutlinedIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 42\n      }\n    }), __jsx(Typography, {\n      style: {\n        paddingLeft: '8px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 41\n      }\n    }, t('str_edit'))), __jsx(MenuItem, {\n      onClick: () => handleDeleteItem(props.gid),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 37\n      }\n    }, __jsx(DeleteIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 41\n      }\n    }), __jsx(Typography, {\n      style: {\n        paddingLeft: '8px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 41\n      }\n    }, t('str_delete')))))))\n  }, {\n    title: t('str_abilities'),\n    field: 'ability',\n    render: props => __jsx(TableColumnText, {\n      minWidth: 150,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 32\n      }\n    }, props === null || props === void 0 ? void 0 : props.ability)\n  }, {\n    title: t('str_level'),\n    field: 'abilitylevel',\n    render: props => __jsx(TableColumnText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 32\n      }\n    }, props === null || props === void 0 ? void 0 : props.abilitylevel)\n  }, {\n    title: t('str_description'),\n    field: 'description',\n    render: props => __jsx(TableColumnText, {\n      minWidth: 150,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 32\n      }\n    }, props === null || props === void 0 ? void 0 : props.description)\n  }, {\n    title: t('str_preview'),\n    field: 'stdfileid',\n    render: props => props !== null && props !== void 0 && props.stdfileid ? __jsx(PopupState, {\n      variant: \"popover\",\n      popupId: \"status-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 29\n      }\n    }, popupState => __jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 37\n      }\n    }, __jsx(MenuItem, {\n      onClick: () => {\n        setOpenPreviewDialog(true);\n        handlePreviewFile(props.mid, 'EMPLANG.CERT');\n      },\n      disabled: isFileDeleting || isFileDownloading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 41\n      }\n    }, __jsx(VisibilityOutlinedIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 45\n      }\n    })))) : null\n  }, {\n    title: t('str_download'),\n    field: 'stdfileid',\n    render: props => props !== null && props !== void 0 && props.stdfileid ? __jsx(PopupState, {\n      variant: \"popover\",\n      popupId: \"status-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 29\n      }\n    }, popupState => __jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 37\n      }\n    }, (hasRightData === null || hasRightData === void 0 ? void 0 : hasRightData.cand) && __jsx(MenuItem, {\n      onClick: () => {\n        setOpenTrackedDialog(true);\n        setDeleteFileInfo(props);\n        setPopupState(popupState);\n      },\n      disabled: isFileDeleting || isFileDownloading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 49\n      }\n    }, isFileDeleting ? __jsx(LoadingSpinner, {\n      size: 18,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 71\n      }\n    }) : __jsx(DeleteOutlinedIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 57\n      }\n    }), __jsx(Typography, {\n      style: {\n        paddingLeft: '8px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 53\n      }\n    }, t('str_delete'))), __jsx(MenuItem, {\n      onClick: () => handleTaskFileDownload(props.mid, 'EMPLANG.CERT', props.description),\n      disabled: isFileDeleting || isFileDownloading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 41\n      }\n    }, isFileDownloading ? __jsx(LoadingSpinner, {\n      size: 18,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 66\n      }\n    }) : __jsx(CloudDownloadOutlinedIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 49\n      }\n    })))) : null\n  }];\n  useEffect(() => {\n    if (token && empId) {\n      getAbilityList();\n    }\n  }, []);\n  useEffect(() => {\n    let isEffect = true;\n\n    if (isEffect && abilityData && getData) {\n      const newClientInitialState = helper.objectMapper(abilityData, getData, ['abilityid']);\n      setAbilityData(newClientInitialState);\n      setAbilityDataBase(newClientInitialState);\n      setIsInitialStateLoad(true);\n    }\n\n    return () => {\n      isEffect = false;\n    };\n  }, [getData]);\n\n  const handleDeleteItem = gid => {\n    setIsDeleting(true);\n    Delete({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.EMPABILITY,\n      token,\n      gid: gid,\n      params: {\n        hotelrefno: GENERAL_SETTINGS.HOTELREFNO\n      }\n    }).then(res => {\n      if (res.status === 200) {\n        getAbilityList();\n      } else {\n        var _error$errorMsg, _error$errorMsg2;\n\n        const error = isErrorMsg(res);\n        enqueueSnackbar(((_error$errorMsg = error.errorMsg) === null || _error$errorMsg === void 0 ? void 0 : _error$errorMsg.length) > 50 ? (_error$errorMsg2 = error.errorMsg) === null || _error$errorMsg2 === void 0 ? void 0 : _error$errorMsg2.substring(0, 50) : error.errorMsg, {\n          variant: 'error'\n        });\n        setIsDeleting(false);\n      }\n    });\n  };\n\n  const getAbilityList = () => {\n    setIsLoadingList(true);\n    ViewList({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.EMPABILITY,\n      token,\n      params: {\n        query: `empid:${empId}`,\n        allhotels: allHotels,\n        hotelrefno: hotelRefNo\n      }\n    }).then(res => {\n      setIsLoadingList(false);\n\n      if (res.status === 200) {\n        if (res.data.count > 0) {\n          setAbilityList(res.data.data);\n        }\n      } else {\n        var _error$errorMsg3, _error$errorMsg4;\n\n        const error = isErrorMsg(res);\n        enqueueSnackbar(((_error$errorMsg3 = error.errorMsg) === null || _error$errorMsg3 === void 0 ? void 0 : _error$errorMsg3.length) > 50 ? (_error$errorMsg4 = error.errorMsg) === null || _error$errorMsg4 === void 0 ? void 0 : _error$errorMsg4.substring(0, 50) : error.errorMsg, {\n          variant: 'error'\n        });\n      }\n    });\n  };\n\n  const handleGetSelectedability = selectedability => {\n    if (selectedability) {\n      setIsDef(true);\n      UseOrest({\n        apiUrl: GENERAL_SETTINGS.OREST_URL,\n        endpoint: OREST_ENDPOINT.EMPABILITY + SLASH + OREST_ENDPOINT.VIEW + SLASH + 'get' + SLASH + selectedability.gid,\n        token\n      }).then(res => {\n        setIsDef(false);\n\n        if (res.status === 200 && res.data.data) {\n          const data = res.data.data;\n          setGetData(data);\n        }\n      });\n    }\n  };\n\n  const handleDefRecord = () => {\n    setIsDef(true);\n    UseOrest({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.EMPABILITY + SLASH + OREST_ENDPOINT.DEF,\n      token,\n      params: {\n        hotelrefno: hotelRefNo\n      }\n    }).then(res => {\n      if (res.status === 200 && res.data.count > 0) {\n        const data = Object.assign({}, res.data.data, abilityData);\n        setAbilityData(data);\n        setAbilityDataBase(data);\n      }\n\n      setIsDef(false);\n    });\n  };\n\n  const handleSave = () => {\n    const data = _objectSpread({}, abilityData);\n\n    Object.keys(initialState).map(key => {\n      data[key] = typeof data[key].value === 'object' ? data[key].value ? data[key].value.id : null : data[key].value;\n    });\n\n    if (empId) {\n      setIsSaving(true);\n\n      if (selectedGid) {\n        Patch({\n          apiUrl: GENERAL_SETTINGS.OREST_URL,\n          endpoint: OREST_ENDPOINT.EMPABILITY,\n          gid: selectedGid,\n          data: data,\n          token\n        }).then(res => {\n          if (file) {\n            Upload({\n              apiUrl: GENERAL_SETTINGS.OREST_URL,\n              token: token,\n              params: {\n                masterid: res.data.data.mid,\n                code: 'EMPLANG.CERT',\n                orsactive: true,\n                hotelrefno: hotelRefNo\n              },\n              files: [file]\n            });\n          }\n\n          if (res.status === 200) {\n            enqueueSnackbar(t('str_processCompletedSuccessfully'), {\n              variant: 'success'\n            });\n            setOpenAddDialog(false);\n            getAbilityList();\n            handleReset();\n          } else {\n            const error = isErrorMsg(res);\n            enqueueSnackbar(error.errorMsg, {\n              variant: 'error'\n            });\n          }\n\n          setIsSaving(false);\n        });\n      } else {\n        data.empid = empId;\n        data.hotelrefno = hotelRefNo;\n        Insert({\n          apiUrl: GENERAL_SETTINGS.OREST_URL,\n          endpoint: OREST_ENDPOINT.EMPABILITY,\n          token,\n          data: data\n        }).then(res => {\n          if (res.status === 200) {\n            if (file) {\n              Upload({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                token: token,\n                params: {\n                  masterid: res.data.data.mid,\n                  code: 'EMPLANG.CERT',\n                  orsactive: true,\n                  hotelrefno: hotelRefNo\n                },\n                files: [file]\n              });\n            }\n\n            enqueueSnackbar(t('str_processCompletedSuccessfully'), {\n              variant: 'success'\n            });\n            setOpenAddDialog(false);\n            getAbilityList();\n            handleReset();\n          } else {\n            const error = isErrorMsg(res);\n            enqueueSnackbar(error.errorMsg, {\n              variant: 'error'\n            });\n          }\n\n          setIsSaving(false);\n        });\n      }\n    }\n  };\n\n  const handleOnChangeFormElements = (event, key, isOnBlur) => {\n    const name = key ? key : event.target.name;\n    const value = event !== null && event !== void 0 && event.target ? event.target.value : event;\n\n    if (isOnBlur) {\n      var _abilityData$name, _abilityData$name2;\n\n      setAbilityData(_objectSpread(_objectSpread({}, abilityData), {}, {\n        [name]: _objectSpread(_objectSpread({}, abilityData[name]), {}, {\n          isError: ((_abilityData$name = abilityData[name]) === null || _abilityData$name === void 0 ? void 0 : _abilityData$name.isRequired) && !!required(value),\n          helperText: ((_abilityData$name2 = abilityData[name]) === null || _abilityData$name2 === void 0 ? void 0 : _abilityData$name2.isRequired) && !!required(value) && t('str_mandatory')\n        })\n      }));\n    } else {\n      var _abilityData$name3, _abilityData$name4;\n\n      setAbilityData(_objectSpread(_objectSpread({}, abilityData), {}, {\n        [name]: _objectSpread(_objectSpread({}, abilityData[name]), {}, {\n          value: value,\n          isError: ((_abilityData$name3 = abilityData[name]) === null || _abilityData$name3 === void 0 ? void 0 : _abilityData$name3.isRequired) && !!required(value),\n          helperText: ((_abilityData$name4 = abilityData[name]) === null || _abilityData$name4 === void 0 ? void 0 : _abilityData$name4.isRequired) && !!required(value) && t('str_mandatory')\n        })\n      }));\n    }\n  };\n\n  const handleOnBlurFormElements = (event, key) => {\n    handleOnChangeFormElements(event, key, true);\n  };\n\n  const handleOpenAddDialog = (selectedability = false) => {\n    if (selectedability) {\n      handleGetSelectedability(selectedability);\n    } else {\n      handleDefRecord();\n    }\n\n    setOpenAddDialog(true);\n  };\n\n  const handleCloseDialog = () => {\n    if (JSON.stringify(abilityData) !== JSON.stringify(abilityDataBase)) {\n      setOpenTrackedDialog(true);\n    } else {\n      setOpenAddDialog(false);\n      handleReset();\n    }\n  };\n\n  const handleReset = () => {\n    setTimeout(() => {\n      setIsInitialStateLoad(false);\n      setGetData(null);\n      setAbilityData(initialState);\n      setAbilityDataBase(initialState);\n      setSelectedabilityData(null);\n      setSelectedGid(null);\n      setFileType('');\n      setMediaUrl('');\n    }, 100);\n  };\n\n  const getabilityFileList = () => {\n    setabilityFileListLoading(true);\n    ViewList({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.RAFILE,\n      token,\n      params: {\n        query: `masterid:${state},isactive:true`,\n        limit: 100,\n        hotelrefno: hotelRefNo\n      }\n    }).then(r => {\n      if (r.status === 200 && r.data.data.length > 0) {\n        setabilityFileList(r.data.data);\n        setabilityFileListLoading(false);\n      } else {\n        setabilityFileList([]);\n        setabilityFileListLoading(false);\n      }\n    });\n  };\n\n  const handlePreviewFile = (mid, code) => {\n    setIsPreviewLoading(true);\n    axios({\n      url: `${GENERAL_SETTINGS.OREST_URL}/tools/file/download`,\n      headers: {\n        'Authorization': `Bearer ${token}`\n      },\n      method: 'get',\n      responseType: 'arraybuffer',\n      params: {\n        mid: mid,\n        code: code,\n        hotelrefno: GENERAL_SETTINGS.HOTELREFNO\n      }\n    }).then(r => {\n      if (r.status === 200) {\n        let blob = new Blob([r.data], {\n          type: r.data.type\n        }),\n            url = URL.createObjectURL(blob);\n        setMediaUrl(url);\n        setIsPreviewLoading(false);\n      }\n    });\n  };\n\n  const handleTaskFileDownload = (mid, code, description) => {\n    axios({\n      url: `${GENERAL_SETTINGS.OREST_URL}/tools/file/download`,\n      headers: {\n        'Authorization': `Bearer ${token}`\n      },\n      method: 'get',\n      responseType: 'blob',\n      params: {\n        mid: mid,\n        code: code,\n        hotelrefno: GENERAL_SETTINGS.HOTELREFNO\n      }\n    }).then(r => {\n      if (r.status === 200) {\n        let blob = new Blob([r.data], {\n          type: r.data.type\n        }),\n            url = URL.createObjectURL(blob),\n            link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', `${description}`.toLowerCase()); //or any other extension\n\n        document.body.appendChild(link);\n        link.click();\n        link.remove();\n      }\n    });\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 631,\n      columnNumber: 9\n    }\n  }, __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 632,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 4,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 21\n    }\n  }, __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 25\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 636,\n      columnNumber: 29\n    }\n  }, __jsx(CustomToolTip, {\n    title: t('str_refresh'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 637,\n      columnNumber: 33\n    }\n  }, __jsx(IconButton, {\n    onClick: () => getAbilityList(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 638,\n      columnNumber: 37\n    }\n  }, __jsx(CachedIcon, {\n    style: {\n      color: \"#F16A4B\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 641,\n      columnNumber: 41\n    }\n  })))), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 645,\n      columnNumber: 29\n    }\n  }, __jsx(CustomToolTip, {\n    title: t('str_add'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 646,\n      columnNumber: 33\n    }\n  }, __jsx(IconButton, {\n    onClick: () => handleOpenAddDialog(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 647,\n      columnNumber: 37\n    }\n  }, __jsx(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 650,\n      columnNumber: 41\n    }\n  })))))), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    sm: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 656,\n      columnNumber: 21\n    }\n  }), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 658,\n      columnNumber: 21\n    }\n  }, __jsx(MaterialTable, {\n    isLoading: isLoadingList,\n    columns: abilityColumns,\n    data: abilityList,\n    localization: tableLocalization,\n    options: {\n      headerStyle: {\n        cursor: 'default',\n        fontWeight: \"bold\",\n        fontSize: \"12px\",\n        color: \"#A3A6B4\",\n        textTransform: \"uppercase\",\n        backgroundColor: \"#F5F6FA\",\n        whiteSpace: 'nowrap',\n        borderLeft: '1px solid #FFF'\n      },\n      cellStyle: {\n        whiteSpace: 'nowrap',\n        borderLeft: '1px solid rgba(224, 224, 224, 1)',\n        fontSize: '13px'\n      },\n      toolbar: false,\n      selection: false,\n      sorting: false,\n      search: false,\n      actionsColumnIndex: 1,\n      selectionColumnIndex: 1\n    },\n    components: {\n      Header: props => {\n        const overrideProps = _objectSpread({}, props);\n\n        overrideProps.draggable = false;\n        return __jsx(MTableHeader, _extends({}, overrideProps, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 692,\n            columnNumber: 41\n          }\n        }));\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 659,\n      columnNumber: 25\n    }\n  }))), __jsx(Dialog, {\n    open: openAddDialog,\n    maxWidth: 'sm',\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 699,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    style: {\n      padding: 24\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 700,\n      columnNumber: 21\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 701,\n      columnNumber: 25\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 702,\n      columnNumber: 29\n    }\n  }, __jsx(Typography, {\n    style: {\n      fontWeight: '600',\n      fontSize: '18px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 703,\n      columnNumber: 33\n    }\n  }, selectedabilityData ? t('str_editAbility') : t('str_addAbilities'))), isDef ? __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 710,\n      columnNumber: 37\n    }\n  }, __jsx(LoadingSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 711,\n      columnNumber: 41\n    }\n  })) : __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 714,\n      columnNumber: 37\n    }\n  }, formElements.map((item, index) => __jsx(Grid, _extends({\n    key: index,\n    item: true\n  }, item.gridProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 717,\n      columnNumber: 49\n    }\n  }), renderFormElements(item))), __jsx(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 722,\n      columnNumber: 41\n    }\n  }, __jsx(Fab, {\n    variant: \"extended\",\n    size: \"18px\",\n    onClick: openDialog,\n    color: \"primary\",\n    style: {\n      fontWeight: '600',\n      fontSize: 'inherit',\n      borderRadius: 7,\n      height: 42\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 723,\n      columnNumber: 45\n    }\n  }, __jsx(CloudUploadIcon, {\n    style: {\n      marginRight: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 735,\n      columnNumber: 49\n    }\n  }), t('str_upload')), __jsx(DropzoneDialog, {\n    open: abilityFileUploadStatus,\n    onSave: file => {\n      setAbilityFileUploadStatus(false);\n      setFile(file[0]);\n    },\n    acceptedFiles: ['image/jpeg', 'image/png', 'image/bmp', 'image/gif', 'video/mp4', 'application/zip'],\n    showPreviews: true,\n    filesLimit: 3,\n    maxFileSize: 5000000,\n    onClose: () => setAbilityFileUploadStatus(false),\n    submitButtonText: t('str_save'),\n    cancelButtonText: t('str_cancel'),\n    dialogTitle: t('str_uploadTheAbilityCertificateFile'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 738,\n      columnNumber: 45\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 761,\n      columnNumber: 41\n    }\n  }, __jsx(AddDialogActions, {\n    disabled: isSaving,\n    loading: isSaving,\n    onCancelClick: handleCloseDialog,\n    onSaveClick: handleSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 762,\n      columnNumber: 45\n    }\n  })))))), __jsx(MediaViewerDialog, {\n    open: openPreviewDialog,\n    maxWidth: 'md',\n    fullWidth: true,\n    loading: isPreviewLoading,\n    fileType: fileType,\n    url: mediaUrl,\n    t: t,\n    onClose: () => {\n      setOpenPreviewDialog(false);\n      setTimeout(() => {\n        handleReset();\n      }, 100);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 775,\n      columnNumber: 17\n    }\n  }), __jsx(TrackedChangesDialog, {\n    open: openTrackedDialog,\n    onPressNo: e => {\n      setOpenTrackedDialog(e);\n    },\n    onPressYes: e => {\n      setOpenTrackedDialog(e);\n      setOpenAddDialog(false);\n      handleReset();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 790,\n      columnNumber: 17\n    }\n  })));\n}\n\nexport default Abilities;","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/emp-portal/tabs/Abilities/index.js"],"names":["React","useState","useEffect","useContext","Insert","UseOrest","ViewList","Patch","Delete","Upload","WebCmsGlobal","useSelector","isErrorMsg","mobileTelNoFormat","OREST_ENDPOINT","Grid","Typography","Dialog","Checkbox","FormControlLabel","Button","Menu","MenuItem","IconButton","useSnackbar","MaterialTableGeneric","SLASH","useTranslation","renderFormElements","ELEMENT_TYPES","required","AddDialogActions","LocaleContext","LoadingSpinner","helper","TrackedChangesDialog","EditOutlinedIcon","MaterialTable","MTableHeader","MaterialTableLocalization","MoreVertIcon","TableColumnText","PopupState","bindMenu","bindTrigger","CustomToolTip","CachedIcon","AddIcon","DeleteIcon","Fab","CloudUploadIcon","DropzoneDialog","VisibilityOutlinedIcon","DeleteOutlinedIcon","CloudDownloadOutlinedIcon","PreviewFile","axios","MediaViewerDialog","VARIANT","Abilities","props","empId","enqueueSnackbar","GENERAL_SETTINGS","locale","t","tableLocalization","token","state","orest","currentUser","auth","access_token","hotelRefNo","hotelinfo","currentHotelRefNo","HOTELREFNO","emp","mid","initialState","abilityid","value","isError","helperText","abilitylevel","description","stdfileid","isLoadingList","setIsLoadingList","allHotels","setAllHotels","abilityList","setAbilityList","openAddDialog","setOpenAddDialog","selectedabilityData","setSelectedabilityData","selectedGid","setSelectedGid","getData","setGetData","openTrackedDialog","setOpenTrackedDialog","isDef","setIsDef","isSaving","setIsSaving","abilityData","setAbilityData","abilityDataBase","setAbilityDataBase","isInitialStateLoad","setIsInitialStateLoad","isDeleting","setIsDeleting","abilityFileUploadStatus","setAbilityFileUploadStatus","abilityFileListLoading","setAbilityFileListLoading","abilityFileList","setAbilityFileList","openPreviewDialog","setOpenPreviewDialog","isPreviewLoading","setIsPreviewLoading","mediaUrl","setMediaUrl","fileType","setFileType","isFileDeleting","setIsFileDeleting","isFileDownloading","setIsFileDownloading","popupState","setPopupState","deleteFileInfo","setDeleteFileInfo","hasRightData","setHasRightData","file","setFile","openDialog","formElements","type","autoComplete","id","name","disabled","label","variant","isRequired","error","onChange","newValue","handleOnChangeFormElements","onBlur","e","handleOnBlurFormElements","onLoad","initialValue","data","endpoint","params","text","limit","field","initialId","showOptionLabel","showOption","searchParam","fullWidth","gridProps","xs","sm","textField","abilityColumns","title","padding","maxWidth","minWidth","render","vertical","horizontal","gid","handleOpenAddDialog","close","paddingLeft","handleDeleteItem","ability","handlePreviewFile","cand","handleTaskFileDownload","getAbilityList","isEffect","newClientInitialState","objectMapper","apiUrl","OREST_URL","EMPABILITY","hotelrefno","then","res","status","errorMsg","length","substring","query","allhotels","count","handleGetSelectedability","selectedability","VIEW","handleDefRecord","DEF","Object","assign","handleSave","keys","map","key","masterid","code","orsactive","files","handleReset","empid","event","isOnBlur","target","handleCloseDialog","JSON","stringify","setTimeout","getabilityFileList","setabilityFileListLoading","RAFILE","r","setabilityFileList","url","headers","method","responseType","blob","Blob","URL","createObjectURL","link","document","createElement","href","setAttribute","toLowerCase","body","appendChild","click","remove","color","headerStyle","cursor","fontWeight","fontSize","textTransform","backgroundColor","whiteSpace","borderLeft","cellStyle","toolbar","selection","sorting","search","actionsColumnIndex","selectionColumnIndex","Header","overrideProps","draggable","item","index","borderRadius","height","marginRight"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext} from 'react';\nimport {Insert, UseOrest, ViewList, Patch, Delete, Upload} from \"@webcms/orest\";\nimport WebCmsGlobal from \"../../../webcms-global\";\nimport {useSelector} from \"react-redux\";\nimport {isErrorMsg, mobileTelNoFormat, OREST_ENDPOINT} from \"../../../../model/orest/constants\";\nimport {\n    Grid,\n    Typography,\n    Dialog,\n    Checkbox, FormControlLabel, Button, Menu, MenuItem, IconButton\n} from \"@material-ui/core\";\nimport {useSnackbar} from \"notistack\";\nimport MaterialTableGeneric from \"../../../MaterialTableGeneric\";\nimport {SLASH} from \"../../../../model/globals\";\nimport useTranslation from \"../../../../lib/translations/hooks/useTranslation\";\nimport renderFormElements, {ELEMENT_TYPES} from \"../../../render-form-elements\";\nimport {required} from \"../../../../state/utils/form\";\nimport AddDialogActions from \"../../../AddDialogActions\";\nimport {LocaleContext} from \"../../../../lib/translations/context/LocaleContext\";\nimport LoadingSpinner from \"../../../LoadingSpinner\";\nimport {helper} from \"../../../../@webcms-globals\";\nimport TrackedChangesDialog from \"../../../TrackedChangesDialog\";\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\nimport MaterialTable, {MTableHeader} from \"material-table\";\nimport MaterialTableLocalization from \"../../../MaterialTableLocalization\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport TableColumnText from \"../../../TableColumnText\";\nimport PopupState, {bindMenu, bindTrigger} from \"material-ui-popup-state\";\nimport {CustomToolTip} from \"../../../user-portal/components/CustomToolTip/CustomToolTip\";\nimport CachedIcon from \"@material-ui/icons/Cached\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Fab from \"@material-ui/core/Fab\";\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\nimport {DropzoneDialog} from \"material-ui-dropzone\";\nimport VisibilityOutlinedIcon from \"@material-ui/icons/VisibilityOutlined\";\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\nimport CloudDownloadOutlinedIcon from \"@material-ui/icons/CloudDownloadOutlined\";\nimport {PreviewFile} from \"../../../../model/orest/components/RaFile\";\nimport axios from \"axios\";\nimport MediaViewerDialog from \"../../../../@webcms-ui/core/media-viewer-dialog\";\n\n\nconst VARIANT = 'outlined'\n\nfunction Abilities(props) {\n\n    //props\n    const {empId} = props\n\n    //snackbar\n    const {enqueueSnackbar} = useSnackbar();\n\n    //context\n    const {GENERAL_SETTINGS} = useContext(WebCmsGlobal)\n    const {locale} = useContext(LocaleContext)\n    const {t} = useTranslation()\n\n    const tableLocalization = MaterialTableLocalization();\n\n    //redux state\n    const token = useSelector((state) => state?.orest?.currentUser?.auth?.access_token || false)\n    const hotelRefNo = useSelector((state) => state?.hotelinfo?.currentHotelRefNo || GENERAL_SETTINGS.HOTELREFNO || false)\n    const state = useSelector((state) => state?.orest?.state?.emp?.mid || false)\n\n    //locale state\n    const initialState = {\n        abilityid: {value: '', isError: false, required: true, helperText: ''},\n        abilitylevel: {value: '', isError: false, required: false, helperText: ''},\n        description: {value: '', isError: false, required: false, helperText: ''},\n        stdfileid: {value: 0, isError: false, required: false, helperText: ''},\n    }\n\n    const [isLoadingList, setIsLoadingList] = useState(false)\n    const [allHotels, setAllHotels] = useState(false)\n    const [abilityList, setAbilityList] = useState([])\n    const [openAddDialog, setOpenAddDialog] = useState(false);\n\n    const [selectedabilityData, setSelectedabilityData] = useState(null)\n    const [selectedGid, setSelectedGid] = useState(false)\n    const [getData, setGetData] = useState(null)\n    const [openTrackedDialog, setOpenTrackedDialog] = useState(false);\n    const [isDef, setIsDef] = useState(false)\n    const [isSaving, setIsSaving] = useState(false)\n    const [abilityData, setAbilityData] = useState(initialState)\n    const [abilityDataBase, setAbilityDataBase] = useState(initialState)\n    const [isInitialStateLoad, setIsInitialStateLoad] = useState(false)\n    const [isDeleting, setIsDeleting] = useState(false)\n    const [abilityFileUploadStatus, setAbilityFileUploadStatus] = useState(false)\n    const [abilityFileListLoading, setAbilityFileListLoading] = useState(false)\n    const [abilityFileList, setAbilityFileList] = useState([])\n    const [openPreviewDialog, setOpenPreviewDialog] = useState(false);\n    const [isPreviewLoading, setIsPreviewLoading] = useState(false);\n    const [mediaUrl, setMediaUrl] = useState('');\n    const [fileType, setFileType] = useState('');\n    const [isFileDeleting, setIsFileDeleting] = useState(false);\n    const [isFileDownloading, setIsFileDownloading] = useState(false);\n    const [popupState, setPopupState] = useState({});\n    const [deleteFileInfo, setDeleteFileInfo] = useState(false);\n    const [hasRightData, setHasRightData] = useState()\n    const [file, setFile] = useState(null)\n\n    const openDialog = () => {\n        setAbilityFileUploadStatus(true)\n    }\n\n    const formElements = [\n        {\n            type: ELEMENT_TYPES.autoComplete,\n            id: 'abilityid',\n            name: 'abilityid',\n            value: abilityData.abilityid?.value || null,\n            disabled: isSaving,\n            label: t('str_abilities'),\n            variant: VARIANT,\n            required: abilityData.abilityid?.isRequired,\n            error: abilityData.abilityid?.isError,\n            helperText: abilityData.abilityid?.helperText,\n            onChange: (newValue, name) => handleOnChangeFormElements(newValue, name),\n            onBlur: (e, name) => handleOnBlurFormElements(e, name),\n            onLoad: (initialValue, name) => {\n                const data = {...abilityData}\n                data[name].value = initialValue ? initialValue : null\n                setAbilityData(data)\n            },\n            endpoint: 'ability/view/list',\n            params: {text: '', limit: 25, field: 'code'},\n            initialId: isInitialStateLoad && selectedabilityData?.abilityid || false,\n            showOptionLabel: 'code',\n            showOption: 'code',\n            searchParam: 'code,description',\n            fullWidth: true,\n            gridProps: {xs: 12, sm: 6}\n        },\n        {\n            type: ELEMENT_TYPES.textField,\n            id: 'abilitylevel',\n            name: 'abilitylevel',\n            value: abilityData.abilitylevel?.value,\n            error: abilityData.abilitylevel?.isError,\n            required: abilityData.abilitylevel?.isRequired,\n            disabled: isSaving,\n            label: t('str_level'),\n            helperText: abilityData.abilitylevel?.helperText,\n            onChange: (e) => handleOnChangeFormElements(e),\n            onBlur: (e) => handleOnBlurFormElements(e),\n            variant: VARIANT,\n            fullWidth: true,\n            gridProps: {xs: 12, sm: 6}\n        },\n        {\n            type: ELEMENT_TYPES.textField,\n            id: 'description',\n            name: 'description',\n            value: abilityData.description?.value,\n            error: abilityData.description?.isError,\n            required: abilityData.description?.isRequired,\n            disabled: isSaving,\n            label: t('str_description'),\n            helperText: abilityData.description?.helperText,\n            onChange: (e) => handleOnChangeFormElements(e),\n            onBlur: (e) => handleOnBlurFormElements(e),\n            variant: VARIANT,\n            fullWidth: true,\n            gridProps: {xs: 12, sm: 12}\n        }\n    ]\n\n    const abilityColumns = [\n        {\n            title: (\n                <Button\n                    style={{padding: 0, maxWidth: 25, minWidth: 25}}\n                    disabled\n                    color={'primary'}\n                    variant={'text'}\n                >\n                    <MoreVertIcon/>\n                </Button>\n            ),\n            render: props => (\n                <TableColumnText minWidth={30}>\n                    <PopupState variant=\"popover\" popupId=\"material-table-action-column\">\n                        {(popupState) => (\n                            <React.Fragment>\n                                <Button\n                                    style={{padding: 0, maxWidth: 25, minWidth: 25}}\n                                    color={'primary'}\n                                    variant={'contained'}\n                                    {...bindTrigger(popupState)}\n                                >\n                                    <MoreVertIcon size={'small'}/>\n                                </Button>\n                                <Menu\n                                    anchorOrigin={{\n                                        vertical: \"bottom\",\n                                        horizontal: \"left\"\n                                    }}\n                                    transformOrigin={{\n                                        vertical: \"top\",\n                                        horizontal: \"left\"\n                                    }}\n                                    getContentAnchorEl={null}\n                                    {...bindMenu(popupState)}\n                                >\n                                    <MenuItem\n                                        onClick={() => {\n                                            setSelectedabilityData(props)\n                                            setSelectedGid(props?.gid || false)\n                                            handleOpenAddDialog(props)\n                                            popupState.close();\n                                        }}\n                                    >\n                                        {<EditOutlinedIcon/>}\n                                        <Typography style={{paddingLeft: '8px'}}>{t('str_edit')}</Typography>\n                                    </MenuItem>\n                                    <MenuItem\n                                        onClick={() => handleDeleteItem(props.gid)}\n                                    >\n                                        <DeleteIcon/>\n                                        <Typography style={{paddingLeft: '8px'}}>{t('str_delete')}</Typography>\n                                    </MenuItem>\n                                </Menu>\n                            </React.Fragment>\n                        )}\n                    </PopupState>\n                </TableColumnText>\n            )\n        },\n        {\n            title: t('str_abilities'),\n            field: 'ability',\n            render: (props) => <TableColumnText minWidth={150}>{props?.ability}</TableColumnText>\n        },\n        {\n            title: t('str_level'),\n            field: 'abilitylevel',\n            render: (props) => <TableColumnText>{props?.abilitylevel}</TableColumnText>\n        },\n        {\n            title: t('str_description'),\n            field: 'description',\n            render: (props) => <TableColumnText minWidth={150}>{props?.description}</TableColumnText>\n        },\n        {\n            title: t('str_preview'),\n            field: 'stdfileid',\n            render: props => (\n                (\n                    props?.stdfileid ?\n                        (\n                            <PopupState variant=\"popover\" popupId=\"status-menu\">\n                                {(popupState) => (\n                                    <React.Fragment>\n                                        <MenuItem\n                                            onClick={() => {\n                                                setOpenPreviewDialog(true);\n                                                handlePreviewFile(props.mid, 'EMPLANG.CERT')\n                                            }}\n                                            disabled={isFileDeleting || isFileDownloading}\n                                        >\n                                            <VisibilityOutlinedIcon/>\n                                        </MenuItem>\n                                    </React.Fragment>\n                                )}\n                            </PopupState>\n                        ) : null\n                )\n            ),\n        },\n        {\n            title: t('str_download'),\n            field: 'stdfileid',\n            render: props => (\n                (\n                    props?.stdfileid ?\n                        (\n                            <PopupState variant=\"popover\" popupId=\"status-menu\">\n                                {(popupState) => (\n                                    <React.Fragment>\n                                        {\n                                            hasRightData?.cand && (\n                                                <MenuItem\n                                                    onClick={() => {\n                                                        setOpenTrackedDialog(true)\n                                                        setDeleteFileInfo(props);\n                                                        setPopupState(popupState);\n                                                    }}\n                                                    disabled={isFileDeleting || isFileDownloading}\n                                                >\n                                                    {isFileDeleting ? <LoadingSpinner size={18}/> :\n                                                        <DeleteOutlinedIcon/>}\n                                                    <Typography\n                                                        style={{paddingLeft: '8px'}}>{t('str_delete')}</Typography>\n                                                </MenuItem>\n                                            )\n                                        }\n                                        <MenuItem\n                                            onClick={() => handleTaskFileDownload(props.mid, 'EMPLANG.CERT', props.description)}\n                                            disabled={isFileDeleting || isFileDownloading}\n                                        >\n                                            {isFileDownloading ? <LoadingSpinner size={18}/> :\n                                                <CloudDownloadOutlinedIcon/>}\n                                        </MenuItem>\n                                    </React.Fragment>\n                                )}\n                            </PopupState>\n                        ) : null\n                )\n            )\n        },\n    ]\n\n    useEffect(() => {\n        if (token && empId) {\n            getAbilityList()\n        }\n    }, [])\n\n    useEffect(() => {\n        let isEffect = true\n        if (isEffect && abilityData && getData) {\n            const newClientInitialState = helper.objectMapper(abilityData, getData, ['abilityid'])\n            setAbilityData(newClientInitialState)\n            setAbilityDataBase(newClientInitialState)\n            setIsInitialStateLoad(true)\n        }\n\n\n        return () => {\n            isEffect = false\n        }\n\n    }, [getData])\n\n    const handleDeleteItem = (gid) => {\n        setIsDeleting(true)\n        Delete({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.EMPABILITY,\n            token,\n            gid: gid,\n            params: {\n                hotelrefno: GENERAL_SETTINGS.HOTELREFNO,\n            }\n        }).then((res) => {\n            if (res.status === 200) {\n                getAbilityList()\n            } else {\n                const error = isErrorMsg(res)\n                enqueueSnackbar(error.errorMsg?.length > 50 ? error.errorMsg?.substring(0, 50) : error.errorMsg, {variant: 'error'})\n                setIsDeleting(false)\n            }\n        })\n    }\n\n    const getAbilityList = () => {\n        setIsLoadingList(true)\n        ViewList({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.EMPABILITY,\n            token,\n            params: {\n                query: `empid:${empId}`,\n                allhotels: allHotels,\n                hotelrefno: hotelRefNo\n            }\n        }).then(res => {\n            setIsLoadingList(false)\n            if (res.status === 200) {\n                if (res.data.count > 0) {\n                    setAbilityList(res.data.data)\n                }\n            } else {\n                const error = isErrorMsg(res)\n                enqueueSnackbar(error.errorMsg?.length > 50 ? error.errorMsg?.substring(0, 50) : error.errorMsg, {variant: 'error'})\n            }\n        })\n    }\n\n    const handleGetSelectedability = (selectedability) => {\n        if (selectedability) {\n            setIsDef(true)\n            UseOrest({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: OREST_ENDPOINT.EMPABILITY + SLASH + OREST_ENDPOINT.VIEW + SLASH + 'get' + SLASH + selectedability.gid,\n                token\n            }).then(res => {\n                setIsDef(false)\n                if (res.status === 200 && res.data.data) {\n                    const data = res.data.data\n                    setGetData(data)\n\n                }\n            })\n        }\n    }\n\n    const handleDefRecord = () => {\n        setIsDef(true)\n        UseOrest({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.EMPABILITY + SLASH + OREST_ENDPOINT.DEF,\n            token,\n            params: {\n                hotelrefno: hotelRefNo\n            }\n        }).then(res => {\n            if (res.status === 200 && res.data.count > 0) {\n                const data = Object.assign({}, res.data.data, abilityData)\n                setAbilityData(data)\n                setAbilityDataBase(data)\n            }\n            setIsDef(false)\n        })\n    }\n\n    const handleSave = () => {\n        const data = {...abilityData}\n        Object.keys(initialState).map((key) => {\n            data[key] = typeof data[key].value === 'object' ? data[key].value ? data[key].value.id : null : data[key].value\n        })\n        if (empId) {\n            setIsSaving(true)\n            if (selectedGid) {\n                Patch({\n                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                    endpoint: OREST_ENDPOINT.EMPABILITY,\n                    gid: selectedGid,\n                    data: data,\n                    token\n                }).then(res => {\n                    if (file) {\n                        Upload({\n                            apiUrl: GENERAL_SETTINGS.OREST_URL,\n                            token: token,\n                            params: {\n                                masterid: res.data.data.mid,\n                                code: 'EMPLANG.CERT',\n                                orsactive: true,\n                                hotelrefno: hotelRefNo\n                            },\n                            files: [file],\n                        })\n                    }\n                    if (res.status === 200) {\n                        enqueueSnackbar(t('str_processCompletedSuccessfully'), {variant: 'success'})\n                        setOpenAddDialog(false)\n                        getAbilityList()\n                        handleReset()\n                    } else {\n                        const error = isErrorMsg(res)\n                        enqueueSnackbar(error.errorMsg, {variant: 'error'})\n                    }\n                    setIsSaving(false)\n                })\n            } else {\n                data.empid = empId\n                data.hotelrefno = hotelRefNo\n                Insert({\n                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                    endpoint: OREST_ENDPOINT.EMPABILITY,\n                    token,\n                    data: data\n                }).then(res => {\n                    if (res.status === 200) {\n                        if (file) {\n                            Upload({\n                                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                                token: token,\n                                params: {\n                                    masterid: res.data.data.mid,\n                                    code: 'EMPLANG.CERT',\n                                    orsactive: true,\n                                    hotelrefno: hotelRefNo\n                                },\n                                files: [file],\n                            })\n                        }\n                        enqueueSnackbar(t('str_processCompletedSuccessfully'), {variant: 'success'})\n                        setOpenAddDialog(false)\n                        getAbilityList()\n                        handleReset()\n                    } else {\n                        const error = isErrorMsg(res)\n                        enqueueSnackbar(error.errorMsg, {variant: 'error'})\n                    }\n                    setIsSaving(false)\n                })\n            }\n        }\n    }\n\n    const handleOnChangeFormElements = (event, key, isOnBlur) => {\n        const name = key ? key : event.target.name\n        const value = event?.target ? event.target.value : event\n\n        if (isOnBlur) {\n            setAbilityData({\n                ...abilityData,\n                [name]: {\n                    ...abilityData[name],\n                    isError: abilityData[name]?.isRequired && !!required(value),\n                    helperText: abilityData[name]?.isRequired && !!required(value) && t('str_mandatory'),\n                }\n            })\n        } else {\n            setAbilityData({\n                ...abilityData,\n                [name]: {\n                    ...abilityData[name],\n                    value: value,\n                    isError: abilityData[name]?.isRequired && !!required(value),\n                    helperText: abilityData[name]?.isRequired && !!required(value) && t('str_mandatory'),\n                }\n            })\n        }\n    }\n\n    const handleOnBlurFormElements = (event, key) => {\n        handleOnChangeFormElements(event, key, true)\n    }\n\n    const handleOpenAddDialog = (selectedability = false) => {\n        if (selectedability) {\n            handleGetSelectedability(selectedability)\n        } else {\n            handleDefRecord()\n        }\n        setOpenAddDialog(true)\n    }\n\n    const handleCloseDialog = () => {\n        if (JSON.stringify(abilityData) !== JSON.stringify(abilityDataBase)) {\n            setOpenTrackedDialog(true)\n        } else {\n            setOpenAddDialog(false)\n            handleReset()\n        }\n    }\n\n    const handleReset = () => {\n        setTimeout(() => {\n            setIsInitialStateLoad(false)\n            setGetData(null)\n            setAbilityData(initialState)\n            setAbilityDataBase(initialState)\n            setSelectedabilityData(null)\n            setSelectedGid(null)\n            setFileType('');\n            setMediaUrl('');\n        }, 100)\n    }\n\n    const getabilityFileList = () => {\n        setabilityFileListLoading(true)\n        ViewList({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.RAFILE,\n            token,\n            params: {\n                query: `masterid:${state},isactive:true`,\n                limit: 100,\n                hotelrefno: hotelRefNo,\n            },\n        }).then((r) => {\n            if (r.status === 200 && r.data.data.length > 0) {\n                setabilityFileList(r.data.data)\n                setabilityFileListLoading(false)\n            } else {\n                setabilityFileList([])\n                setabilityFileListLoading(false)\n            }\n        })\n    }\n\n    const handlePreviewFile = (mid, code) => {\n        setIsPreviewLoading(true)\n        axios({\n            url: `${GENERAL_SETTINGS.OREST_URL}/tools/file/download`,\n            headers: {\n                'Authorization': `Bearer ${token}`,\n            },\n            method: 'get',\n            responseType: 'arraybuffer',\n            params: {\n                mid: mid,\n                code: code,\n                hotelrefno: GENERAL_SETTINGS.HOTELREFNO,\n            },\n        }).then((r) => {\n            if (r.status === 200) {\n                let blob = new Blob([r.data], {type: r.data.type})\n                    , url = URL.createObjectURL(blob)\n\n                setMediaUrl(url)\n                setIsPreviewLoading(false)\n            }\n        })\n    }\n\n    const handleTaskFileDownload = (mid, code, description) => {\n        axios({\n            url: `${GENERAL_SETTINGS.OREST_URL}/tools/file/download`,\n            headers: {\n                'Authorization': `Bearer ${token}`,\n            },\n            method: 'get',\n            responseType: 'blob',\n            params: {\n                mid: mid,\n                code: code,\n                hotelrefno: GENERAL_SETTINGS.HOTELREFNO,\n            },\n        }).then((r) => {\n            if (r.status === 200) {\n                let blob = new Blob([r.data], {type: r.data.type})\n                    , url = URL.createObjectURL(blob)\n                    , link = document.createElement('a')\n\n                link.href = url\n                link.setAttribute('download', `${description}`.toLowerCase()) //or any other extension\n                document.body.appendChild(link)\n                link.click()\n                link.remove()\n            }\n        })\n    }\n\n    return (\n        <div>\n            <React.Fragment>\n                <Grid container>\n                    <Grid item xs={4} sm={3}>\n                        <Grid container>\n                            <Grid item xs={6} sm={3}>\n                                <CustomToolTip title={t('str_refresh')}>\n                                    <IconButton\n                                        onClick={() => getAbilityList()}\n                                    >\n                                        <CachedIcon style={{color: \"#F16A4B\"}}/>\n                                    </IconButton>\n                                </CustomToolTip>\n                            </Grid>\n                            <Grid item xs={6} sm={3}>\n                                <CustomToolTip title={t('str_add')}>\n                                    <IconButton\n                                        onClick={() => handleOpenAddDialog(false)}\n                                    >\n                                        <AddIcon/>\n                                    </IconButton>\n                                </CustomToolTip>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={6} sm={7}>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <MaterialTable\n                            isLoading={isLoadingList}\n                            columns={abilityColumns}\n                            data={abilityList}\n                            localization={tableLocalization}\n                            options={{\n                                headerStyle: {\n                                    cursor: 'default',\n                                    fontWeight: \"bold\",\n                                    fontSize: \"12px\",\n                                    color: \"#A3A6B4\",\n                                    textTransform: \"uppercase\",\n                                    backgroundColor: \"#F5F6FA\",\n                                    whiteSpace: 'nowrap',\n                                    borderLeft: '1px solid #FFF',\n                                },\n                                cellStyle: {\n                                    whiteSpace: 'nowrap',\n                                    borderLeft: '1px solid rgba(224, 224, 224, 1)',\n                                    fontSize: '13px',\n                                },\n                                toolbar: false,\n                                selection: false,\n                                sorting: false,\n                                search: false,\n                                actionsColumnIndex: 1,\n                                selectionColumnIndex: 1\n                            }}\n                            components={{\n                                Header: (props) => {\n                                    const overrideProps = {...props}\n                                    overrideProps.draggable = false\n                                    return (\n                                        <MTableHeader  {...overrideProps}/>\n                                    )\n                                },\n                            }}\n                        />\n                    </Grid>\n                </Grid>\n                <Dialog open={openAddDialog} maxWidth={'sm'} fullWidth>\n                    <div style={{padding: 24}}>\n                        <Grid container spacing={3}>\n                            <Grid item xs={12}>\n                                <Typography style={{\n                                    fontWeight: '600',\n                                    fontSize: '18px'\n                                }}>{selectedabilityData ? t('str_editAbility') : t('str_addAbilities')}</Typography>\n                            </Grid>\n                            {\n                                isDef ? (\n                                    <Grid item xs={12}>\n                                        <LoadingSpinner/>\n                                    </Grid>\n                                ) : (\n                                    <React.Fragment>\n                                        {\n                                            formElements.map((item, index) => (\n                                                <Grid key={index} item {...item.gridProps}>\n                                                    {renderFormElements(item)}\n                                                </Grid>\n                                            ))\n                                        }\n                                        <Grid item xs={4}>\n                                            <Fab\n                                                variant=\"extended\"\n                                                size=\"18px\"\n                                                onClick={openDialog}\n                                                color=\"primary\"\n                                                style={{\n                                                    fontWeight: '600',\n                                                    fontSize: 'inherit',\n                                                    borderRadius: 7,\n                                                    height: 42\n                                                }}\n                                            >\n                                                <CloudUploadIcon style={{marginRight: 10}}/>\n                                                {t('str_upload')}\n                                            </Fab>\n                                            <DropzoneDialog\n                                                open={abilityFileUploadStatus}\n                                                onSave={(file) => {\n                                                    setAbilityFileUploadStatus(false)\n                                                    setFile(file[0])\n                                                }}\n                                                acceptedFiles={[\n                                                    'image/jpeg',\n                                                    'image/png',\n                                                    'image/bmp',\n                                                    'image/gif',\n                                                    'video/mp4',\n                                                    'application/zip',\n                                                ]}\n                                                showPreviews={true}\n                                                filesLimit={3}\n                                                maxFileSize={5000000}\n                                                onClose={() => setAbilityFileUploadStatus(false)}\n                                                submitButtonText={t('str_save')}\n                                                cancelButtonText={t('str_cancel')}\n                                                dialogTitle={t('str_uploadTheAbilityCertificateFile')}\n                                            />\n                                        </Grid>\n                                        <Grid item xs={12}>\n                                            <AddDialogActions\n                                                disabled={isSaving}\n                                                loading={isSaving}\n                                                onCancelClick={handleCloseDialog}\n                                                onSaveClick={handleSave}\n                                            />\n                                        </Grid>\n                                    </React.Fragment>\n                                )\n                            }\n                        </Grid>\n                    </div>\n                </Dialog>\n                <MediaViewerDialog\n                    open={openPreviewDialog}\n                    maxWidth={'md'}\n                    fullWidth\n                    loading={isPreviewLoading}\n                    fileType={fileType}\n                    url={mediaUrl}\n                    t={t}\n                    onClose={() => {\n                        setOpenPreviewDialog(false);\n                        setTimeout(() => {\n                            handleReset();\n                        }, 100)\n                    }}\n                />\n                <TrackedChangesDialog\n                    open={openTrackedDialog}\n                    onPressNo={(e) => {\n                        setOpenTrackedDialog(e);\n                    }}\n                    onPressYes={(e) => {\n                        setOpenTrackedDialog(e);\n                        setOpenAddDialog(false)\n                        handleReset()\n                    }}\n                />\n            </React.Fragment>\n        </div>\n    )\n}\n\nexport default Abilities"]},"metadata":{},"sourceType":"module"}