{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/destination-portal/components/CategoryItemCard/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useContext } from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport { Typography, Card, CardMedia, CardContent, Button, Grid } from '@material-ui/core';\nimport { useRouter } from 'next/router';\nimport { deleteFromState, pushToState, setToState, updateState } from \"../../../../state/actions\";\nimport WebCmsGlobal from \"../../../webcms-global\";\nimport useTranslation from \"../../../../lib/translations/hooks/useTranslation\";\nimport RestaurantReservation from \"../../../guest/public/components/info/event-reservation\";\nimport { FALSE } from \"../../../../model/globals\";\nimport { convertUrlStandard } from \"../../../../model/orest/constants\";\nconst categoryItemCardStyle = makeStyles(theme => ({\n  root: props => ({\n    marginLeft: 10,\n    marginRight: 10,\n    background: '#FFFFFF 0% 0% no-repeat padding-box',\n    border: `2px solid ${props.borderColor}`,\n    borderRadius: 10,\n    opacity: 1,\n    [theme.breakpoints.down('xs')]: {\n      maxWidth: 345,\n      margin: \"auto\"\n    }\n  }),\n  media: {\n    height: 180,\n    [theme.breakpoints.down('sm')]: {\n      height: 150\n    }\n  },\n  itemName: {\n    paddingBottom: \"8px\",\n    fontSize: \"24px\",\n    textTransform: \"capitalize\",\n    fontWeight: 'bold',\n    color: '#716C72',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden'\n  },\n  itemDescription: {\n    fontSize: \"14px\",\n    color: '#716C72',\n    minHeight: \"3em\",\n    height: \"3em\",\n    maxHeight: \"3em\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    display: \"-webkit-box\",\n    WebkitLineClamp: 2,\n    '-webkit-line-clamp': 2,\n    '-webkit-box-orient': \"vertical\"\n  },\n  location: {\n    textTransform: 'capitalize',\n    color: '#716C72',\n    [theme.breakpoints.down('sm')]: {\n      textAlign: 'center'\n    }\n  },\n  icon: {\n    color: '#44B3E4',\n    [theme.breakpoints.down('sm')]: {\n      fontSize: 20\n    }\n  },\n  priceInfo: {\n    color: '#716C72',\n    padding: 5,\n    [theme.breakpoints.down('sm')]: {\n      textAlign: 'center'\n    }\n  },\n  priceDesc: {\n    fontSize: '0.9em'\n  },\n  price: {\n    fontSize: '1em',\n    fontWeight: 'bold'\n  },\n  smTopZero: {\n    [theme.breakpoints.down('sm')]: {\n      paddingTop: 0\n    }\n  },\n  smBottomZero: {\n    [theme.breakpoints.down('sm')]: {\n      paddingBottom: 0\n    }\n  },\n  actionBookButton: {\n    textTransform: 'capitalize',\n    fontWeight: \"bold\"\n  }\n}));\n\nfunction CategoryItemCard(props) {\n  const {\n    GENERAL_SETTINGS,\n    WEBCMS_DATA,\n    locale\n  } = useContext(WebCmsGlobal);\n  const isLogin = !!useSelector(state => state.orest.currentUser && state.orest.currentUser.auth);\n  const classes = categoryItemCardStyle({\n    borderColor: WEBCMS_DATA.assets.colors.primary.main\n  });\n  const {\n    hotelName,\n    imageUrl,\n    description,\n    isPrice,\n    city,\n    price,\n    hotelData,\n    setToState,\n    key,\n    state\n  } = props;\n  const {\n    0: openReservation,\n    1: setOpenReservation\n  } = useState(false);\n  const {\n    0: eventLocData,\n    1: setEventLocData\n  } = useState(null);\n  const {\n    t\n  } = useTranslation();\n  const router = useRouter();\n\n  const handleClickMoreButton = () => {\n    let urlName = \"\";\n    urlName = convertUrlStandard(hotelName === null || hotelName === void 0 ? void 0 : hotelName.removeHtmlTag());\n    setToState(\"destinationPortal\", [\"selectedHotel\"], hotelData);\n\n    if (hotelData.webkey) {\n      setToState(\"destinationPortal\", [\"webKey\"], hotelData.webkey);\n    }\n\n    router.push({\n      pathname: `guest/detail/${urlName}`,\n      query: {\n        lang: router.query.lang || locale,\n        gid: hotelData.gid\n      }\n    });\n  };\n\n  const handleClickBookButton = () => {\n    if (hotelData.noroom) {\n      if (!isLogin) {\n        setTimeout(() => {\n          setToState(\"guest\", [\"openLoginDialog\"], true);\n        }, 200);\n      } else {\n        setToState(\"guest\", [\"changeHotelRefno\"], hotelData.id);\n        setOpenReservation(true);\n      }\n    } else {\n      if (hotelData.webkey) {\n        const win = window.open(`https://${hotelData.webkey}.vimahotels.com/booking`, '_blank');\n\n        if (win != null) {\n          win.focus();\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (hotelData) {\n      const data = {\n        id: hotelData.locid,\n        locid: hotelData.locid,\n        locdepartid: hotelData.locdepartid,\n        lochasres: hotelData.lochasres,\n        locismulti: hotelData.locismulti,\n        lochasmenu: hotelData.lochasmenu,\n        locmid: hotelData.locmid,\n        gapptypeid: hotelData.gapptypeid,\n        localtitle: hotelData.localtitle,\n        locdesc: hotelData.localtitle,\n        hotelrefno: hotelData.id\n      };\n      setEventLocData(data);\n    }\n  }, []);\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, openReservation && eventLocData ? __jsx(RestaurantReservation, {\n    isOpen: openReservation,\n    onClose: e => {\n      setOpenReservation(e);\n      updateState('guest', 'menuGroupAndProductList', FALSE);\n    },\n    sliderTitle: hotelData.localtitle || hotelData.title,\n    sliderImg: hotelData.url,\n    sliderDesc: hotelData.localdesc || hotelData.description,\n    eventLocData: eventLocData,\n    isPortal: true,\n    isFromDetailPage: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 21\n    }\n  }) : null, __jsx(Card, {\n    className: classes.root,\n    variant: \"outlined\",\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }\n  }, __jsx(CardContent, {\n    style: {\n      padding: \"0\",\n      display: \"relative\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }\n  }, __jsx(CardMedia, {\n    className: classes.media,\n    image: GENERAL_SETTINGS.STATIC_URL + imageUrl,\n    title: hotelName === null || hotelName === void 0 ? void 0 : hotelName.removeHtmlTag(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 21\n    }\n  }), __jsx(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 21\n    }\n  }, __jsx(Typography, {\n    align: \"left\",\n    color: \"textSecondary\",\n    className: classes.itemName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 25\n    }\n  }, hotelName === null || hotelName === void 0 ? void 0 : hotelName.removeHtmlTag().toLowerCase()), __jsx(Typography, {\n    className: classes.itemDescription,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 25\n    }\n  }, description === null || description === void 0 ? void 0 : description.removeHtmlTag()), __jsx(\"div\", {\n    style: {\n      paddingTop: '12px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 25\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 29\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    className: classes.smTopZero,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 33\n    }\n  }, __jsx(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 37\n    }\n  }, __jsx(LocationOnIcon, {\n    className: classes.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 41\n    }\n  }), __jsx(Typography, {\n    className: classes.location,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 41\n    }\n  }, city === null || city === void 0 ? void 0 : city.toLowerCase()))), isPrice && __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    className: classes.smBottomZero,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 37\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle2\",\n    align: \"right\",\n    className: classes.priceInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 41\n    }\n  }, __jsx(\"span\", {\n    className: classes.priceDesc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 45\n    }\n  }, \"prices starting from\"), \" \", __jsx(\"span\", {\n    className: classes.price,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 109\n    }\n  }, price))))), __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 25\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 29\n    }\n  }, __jsx(Button, {\n    color: \"primary\",\n    className: classes.actionBookButton,\n    size: 'small',\n    onClick: () => handleClickMoreButton(),\n    variant: \"outlined\",\n    fullWidth: true,\n    disableElevation: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 33\n    }\n  }, t(\"str_discover\"))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 29\n    }\n  }, hotelData.noroom ? hotelData.lochasres && __jsx(Button, {\n    className: classes.actionBookButton,\n    size: 'small',\n    color: \"primary\",\n    variant: \"contained\",\n    onClick: () => handleClickBookButton(),\n    fullWidth: true,\n    disableElevation: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 45\n    }\n  }, t(\"str_book\")) : hotelData.webkey && hotelData.webkey !== \"\" && __jsx(Button, {\n    className: classes.actionBookButton,\n    size: 'small',\n    color: \"primary\",\n    variant: \"contained\",\n    onClick: () => handleClickBookButton(),\n    fullWidth: true,\n    disableElevation: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 45\n    }\n  }, t(\"str_book\"))))))));\n}\n\nconst mapStateToProps = state => {\n  return {\n    state: state.formReducer.destinationPortal\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value)),\n  updateState: (stateType, stateName, value) => dispatch(updateState(stateType, stateName, value)),\n  pushToState: (stateType, stateName, value) => dispatch(pushToState(stateType, stateName, value)),\n  deleteFromState: (stateType, stateName, value) => dispatch(deleteFromState(stateType, stateName, value))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryItemCard);","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/destination-portal/components/CategoryItemCard/index.js"],"names":["React","useState","useEffect","useContext","connect","useSelector","makeStyles","LocationOnIcon","Typography","Card","CardMedia","CardContent","Button","Grid","useRouter","deleteFromState","pushToState","setToState","updateState","WebCmsGlobal","useTranslation","RestaurantReservation","FALSE","convertUrlStandard","categoryItemCardStyle","theme","root","props","marginLeft","marginRight","background","border","borderColor","borderRadius","opacity","breakpoints","down","maxWidth","margin","media","height","itemName","paddingBottom","fontSize","textTransform","fontWeight","color","textOverflow","whiteSpace","overflow","itemDescription","minHeight","maxHeight","display","WebkitLineClamp","location","textAlign","icon","priceInfo","padding","priceDesc","price","smTopZero","paddingTop","smBottomZero","actionBookButton","CategoryItemCard","GENERAL_SETTINGS","WEBCMS_DATA","locale","isLogin","state","orest","currentUser","auth","classes","assets","colors","primary","main","hotelName","imageUrl","description","isPrice","city","hotelData","key","openReservation","setOpenReservation","eventLocData","setEventLocData","t","router","handleClickMoreButton","urlName","removeHtmlTag","webkey","push","pathname","query","lang","gid","handleClickBookButton","noroom","setTimeout","id","win","window","open","focus","data","locid","locdepartid","lochasres","locismulti","lochasmenu","locmid","gapptypeid","localtitle","locdesc","hotelrefno","e","title","url","localdesc","STATIC_URL","toLowerCase","mapStateToProps","formReducer","destinationPortal","mapDispatchToProps","dispatch","stateType","stateName","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\nimport { connect, useSelector } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\nimport LocationOnIcon from '@material-ui/icons/LocationOn'\nimport {\n    Typography,\n    Card,\n    CardMedia,\n    CardContent,\n    Button,\n    Grid,\n} from '@material-ui/core'\nimport { useRouter } from 'next/router';\nimport {deleteFromState, pushToState, setToState, updateState} from \"../../../../state/actions\";\nimport WebCmsGlobal from \"../../../webcms-global\";\nimport useTranslation from \"../../../../lib/translations/hooks/useTranslation\";\nimport RestaurantReservation from \"../../../guest/public/components/info/event-reservation\";\nimport {FALSE} from \"../../../../model/globals\";\nimport {convertUrlStandard} from \"../../../../model/orest/constants\";\n\n\n\nconst categoryItemCardStyle = makeStyles((theme) => ({\n    root: props => ({\n        marginLeft: 10,\n        marginRight: 10,\n        background: '#FFFFFF 0% 0% no-repeat padding-box',\n        border: `2px solid ${props.borderColor}`,\n        borderRadius: 10,\n        opacity: 1,\n        [theme.breakpoints.down('xs')]: {\n            maxWidth: 345,\n            margin: \"auto\"\n        },\n    }),\n    media: {\n        height: 180,\n        [theme.breakpoints.down('sm')]: {\n            height: 150,\n        },\n    },\n    itemName: {\n        paddingBottom: \"8px\",\n        fontSize: \"24px\",\n        textTransform: \"capitalize\",\n        fontWeight: 'bold',\n        color: '#716C72',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n    },\n    itemDescription: {\n        fontSize: \"14px\",\n        color: '#716C72',\n        minHeight: \"3em\",\n        height: \"3em\",\n        maxHeight: \"3em\",\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        display: \"-webkit-box\",\n        WebkitLineClamp: 2,\n        '-webkit-line-clamp': 2,\n        '-webkit-box-orient': \"vertical\",\n    },\n    location: {\n        textTransform: 'capitalize',\n        color: '#716C72',\n        [theme.breakpoints.down('sm')]: {\n            textAlign: 'center',\n        },\n    },\n    icon: {\n        color: '#44B3E4',\n        [theme.breakpoints.down('sm')]: {\n            fontSize: 20,\n        },\n    },\n    priceInfo: {\n        color: '#716C72',\n        padding: 5,\n        [theme.breakpoints.down('sm')]: {\n            textAlign: 'center',\n        },\n    },\n    priceDesc: {\n        fontSize: '0.9em',\n    },\n    price: {\n        fontSize: '1em',\n        fontWeight: 'bold',\n    },\n    smTopZero: {\n        [theme.breakpoints.down('sm')]: {\n            paddingTop: 0,\n        },\n    },\n    smBottomZero: {\n        [theme.breakpoints.down('sm')]: {\n            paddingBottom: 0,\n        },\n    },\n    actionBookButton: {\n        textTransform: 'capitalize',\n        fontWeight: \"bold\",\n    }\n}))\n\nfunction CategoryItemCard(props) {\n    const { GENERAL_SETTINGS, WEBCMS_DATA, locale } = useContext(WebCmsGlobal)\n    const isLogin = !!useSelector((state) => state.orest.currentUser && state.orest.currentUser.auth);\n\n    const classes = categoryItemCardStyle({borderColor: WEBCMS_DATA.assets.colors.primary.main})\n    const { hotelName, imageUrl, description, isPrice, city, price, hotelData, setToState, key, state } = props\n\n    const [openReservation, setOpenReservation] = useState(false);\n    const [eventLocData, setEventLocData] = useState(null);\n\n    const { t } = useTranslation();\n    const router = useRouter();\n\n\n    const handleClickMoreButton = () => {\n        let urlName = \"\";\n        urlName = convertUrlStandard(hotelName?.removeHtmlTag());\n        setToState(\"destinationPortal\", [\"selectedHotel\"], hotelData)\n        if(hotelData.webkey) {\n            setToState(\"destinationPortal\", [\"webKey\"], hotelData.webkey);\n        }\n        router.push({\n            pathname: `guest/detail/${urlName}`,\n            query: {lang: router.query.lang || locale, gid: hotelData.gid}\n        });\n\n    }\n\n    const handleClickBookButton = () => {\n        if(hotelData.noroom) {\n            if(!isLogin) {\n                setTimeout(() => {\n                    setToState(\"guest\", [\"openLoginDialog\"], true);\n                }, 200)\n            } else {\n                setToState(\"guest\", [\"changeHotelRefno\"], hotelData.id)\n                setOpenReservation(true);\n            }\n        } else {\n            if(hotelData.webkey) {\n                const win = window.open(`https://${hotelData.webkey}.vimahotels.com/booking`, '_blank');\n                if (win != null) {\n                    win.focus();\n                }\n            }\n        }\n\n    }\n\n    useEffect(() => {\n        if(hotelData) {\n            const data = {\n                id: hotelData.locid,\n                locid: hotelData.locid,\n                locdepartid: hotelData.locdepartid,\n                lochasres: hotelData.lochasres,\n                locismulti: hotelData.locismulti,\n                lochasmenu: hotelData.lochasmenu,\n                locmid: hotelData.locmid,\n                gapptypeid: hotelData.gapptypeid,\n                localtitle: hotelData.localtitle,\n                locdesc: hotelData.localtitle,\n                hotelrefno: hotelData.id\n            }\n            setEventLocData(data)\n        }\n    }, [])\n\n    return (\n        <React.Fragment>\n            {\n                openReservation && eventLocData ? (\n                    <RestaurantReservation\n                        isOpen={openReservation}\n                        onClose={(e) => {\n                            setOpenReservation(e)\n                            updateState('guest', 'menuGroupAndProductList', FALSE)\n                        }}\n                        sliderTitle={hotelData.localtitle || hotelData.title}\n                        sliderImg={hotelData.url}\n                        sliderDesc={hotelData.localdesc || hotelData.description}\n                        eventLocData={eventLocData}\n                        isPortal\n                        isFromDetailPage={false}\n                    />\n                ) : null\n            }\n            <Card className={classes.root} variant=\"outlined\" key={key}>\n                <CardContent style={{padding: \"0\", display:\"relative\"}}>\n                    <CardMedia\n                        className={classes.media}\n                        image={GENERAL_SETTINGS.STATIC_URL + imageUrl}\n                        title={hotelName?.removeHtmlTag()}\n                    />\n                    <CardContent>\n                        <Typography\n                            align=\"left\"\n                            color=\"textSecondary\"\n                            className={classes.itemName}\n                        >\n                            {hotelName?.removeHtmlTag().toLowerCase()}\n                        </Typography>\n                        <Typography className={classes.itemDescription}>\n                            {description?.removeHtmlTag()}\n                        </Typography>\n                        <div style={{paddingTop: '12px'}}>\n                            <Grid container spacing={1}>\n                                <Grid item xs={12} sm={6} className={classes.smTopZero}>\n                                    <div style={{display: \"flex\"}}>\n                                        <LocationOnIcon className={classes.icon}/>\n                                        <Typography className={classes.location}>\n                                            {city?.toLowerCase()}\n                                        </Typography>\n                                    </div>\n                                </Grid>\n                                {isPrice && (\n                                    <Grid item xs={12} sm={6} className={classes.smBottomZero}>\n                                        <Typography variant=\"subtitle2\" align=\"right\" className={classes.priceInfo}>\n                                            <span className={classes.priceDesc}>prices starting from</span> <span\n                                            className={classes.price}>{price}</span>\n                                        </Typography>\n                                    </Grid>\n                                )}\n                            </Grid>\n                        </div>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12} sm={6}>\n                                <Button color={\"primary\"} className={classes.actionBookButton} size={'small'} onClick={() => handleClickMoreButton()} variant=\"outlined\" fullWidth disableElevation>\n                                    {t(\"str_discover\")}\n                                </Button>\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                {\n                                    hotelData.noroom ? (\n                                        hotelData.lochasres && (\n                                            <Button className={classes.actionBookButton} size={'small'} color={\"primary\"} variant=\"contained\" onClick={() => handleClickBookButton()} fullWidth disableElevation>\n                                                {t(\"str_book\")}\n                                            </Button>\n                                        )\n                                    ) : (\n                                        hotelData.webkey && hotelData.webkey !== \"\" && (\n                                            <Button className={classes.actionBookButton} size={'small'} color={\"primary\"} variant=\"contained\" onClick={() => handleClickBookButton()} fullWidth disableElevation>\n                                                {t(\"str_book\")}\n                                            </Button>\n                                        )\n                                    )\n                                }\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                </CardContent>\n            </Card>\n        </React.Fragment>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        state: state.formReducer.destinationPortal,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value)),\n    updateState: (stateType, stateName, value) => dispatch(updateState(stateType, stateName, value)),\n    pushToState: (stateType, stateName, value) => dispatch(pushToState(stateType, stateName, value)),\n    deleteFromState: (stateType, stateName, value) => dispatch(deleteFromState(stateType, stateName, value)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryItemCard)"]},"metadata":{},"sourceType":"module"}