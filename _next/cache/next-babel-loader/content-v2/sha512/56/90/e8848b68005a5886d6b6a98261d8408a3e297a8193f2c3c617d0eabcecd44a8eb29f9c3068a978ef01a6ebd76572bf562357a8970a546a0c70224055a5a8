{"ast":null,"code":"import _defineProperty from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/components/language/LanguageDropdown.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, memo } from 'react';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport { useSelector } from 'react-redux';\nvar LanguageDropdown = /*#__PURE__*/memo(_c = _s(function (props) {\n  _s();\n\n  var handleChange = props.handleChange,\n      langID = props.langID;\n  var state = useSelector(function (state) {\n    var _state$formReducer;\n\n    return state === null || state === void 0 ? void 0 : (_state$formReducer = state.formReducer) === null || _state$formReducer === void 0 ? void 0 : _state$formReducer.pageBuilder;\n  });\n\n  var _useState = useState({\n    languages: state === null || state === void 0 ? void 0 : state.languages,\n    selectedLang: ''\n  }),\n      localState = _useState[0],\n      setLocalState = _useState[1];\n\n  var languages = localState.languages,\n      selectedLang = localState.selectedLang;\n  useEffect(function () {\n    languages && languages.length > 0 && languages.map(function (lang) {\n      if (lang.id === parseInt(langID)) {\n        setLocalState(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            selectedLang: lang\n          });\n        });\n        handleChange(lang);\n      }\n    });\n  }, []);\n\n  var handleLanguageChange = function handleLanguageChange(e) {\n    setLocalState(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        selectedLang: e.target.value\n      });\n    });\n    handleChange(e.target.value);\n  };\n\n  return __jsx(FormControl, {\n    variant: \"outlined\",\n    style: {\n      \"float\": 'right',\n      marginBottom: 8\n    },\n    size: 'small',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, languages && languages.length > 0 && __jsx(Select, {\n    value: selectedLang,\n    onChange: handleLanguageChange,\n    label: \"Language\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, languages.map(function (lang, index) {\n    return __jsx(MenuItem, {\n      value: lang,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 29\n      }\n    }, ' ', lang.description, ' ');\n  })));\n}, \"JF0hU85KuV7gBjHzFFj7+oeRlm8=\", false, function () {\n  return [useSelector];\n}));\n_c2 = LanguageDropdown;\nexport default LanguageDropdown;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LanguageDropdown$memo\");\n$RefreshReg$(_c2, \"LanguageDropdown\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/components/language/LanguageDropdown.js"],"names":["React","useEffect","useState","memo","Select","MenuItem","FormControl","useSelector","LanguageDropdown","props","handleChange","langID","state","formReducer","pageBuilder","languages","selectedLang","localState","setLocalState","length","map","lang","id","parseInt","prevState","handleLanguageChange","e","target","value","marginBottom","index","description"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,IAArC,QAAiD,OAAjD;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,IAAMC,gBAAgB,gBAAGL,IAAI,SAAC,UAACM,KAAD,EAAW;AAAA;;AAAA,MAC7BC,YAD6B,GACJD,KADI,CAC7BC,YAD6B;AAAA,MACfC,MADe,GACJF,KADI,CACfE,MADe;AAGrC,MAAMC,KAAK,GAAGL,WAAW,CAAC,UAACK,KAAD;AAAA;;AAAA,WAAWA,KAAX,aAAWA,KAAX,6CAAWA,KAAK,CAAEC,WAAlB,uDAAW,mBAAoBC,WAA/B;AAAA,GAAD,CAAzB;;AAHqC,kBAKDZ,QAAQ,CAAC;AACzCa,IAAAA,SAAS,EAAEH,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEG,SADuB;AAEzCC,IAAAA,YAAY,EAAE;AAF2B,GAAD,CALP;AAAA,MAK9BC,UAL8B;AAAA,MAKlBC,aALkB;;AAAA,MAU7BH,SAV6B,GAUDE,UAVC,CAU7BF,SAV6B;AAAA,MAUlBC,YAVkB,GAUDC,UAVC,CAUlBD,YAVkB;AAYrCf,EAAAA,SAAS,CAAC,YAAM;AACZc,IAAAA,SAAS,IACLA,SAAS,CAACI,MAAV,GAAmB,CADvB,IAEIJ,SAAS,CAACK,GAAV,CAAc,UAACC,IAAD,EAAU;AACpB,UAAIA,IAAI,CAACC,EAAL,KAAYC,QAAQ,CAACZ,MAAD,CAAxB,EAAkC;AAC9BO,QAAAA,aAAa,CAAC,UAACM,SAAD;AAAA,iDAAqBA,SAArB;AAAgCR,YAAAA,YAAY,EAAEK;AAA9C;AAAA,SAAD,CAAb;AACAX,QAAAA,YAAY,CAACW,IAAD,CAAZ;AACH;AACJ,KALD,CAFJ;AAQH,GATQ,EASN,EATM,CAAT;;AAWA,MAAMI,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,CAAD,EAAO;AAChCR,IAAAA,aAAa,CAAC,UAACM,SAAD;AAAA,6CAAqBA,SAArB;AAAgCR,QAAAA,YAAY,EAAEU,CAAC,CAACC,MAAF,CAASC;AAAvD;AAAA,KAAD,CAAb;AACAlB,IAAAA,YAAY,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AACH,GAHD;;AAKA,SACI,MAAC,WAAD;AAAa,IAAA,OAAO,EAAC,UAArB;AAAgC,IAAA,KAAK,EAAE;AAAE,eAAO,OAAT;AAAkBC,MAAAA,YAAY,EAAE;AAAhC,KAAvC;AAA4E,IAAA,IAAI,EAAE,OAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKd,SAAS,IAAIA,SAAS,CAACI,MAAV,GAAmB,CAAhC,IACG,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAEH,YAAf;AAA6B,IAAA,QAAQ,EAAES,oBAAvC;AAA6D,IAAA,KAAK,EAAC,UAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKV,SAAS,CAACK,GAAV,CAAc,UAACC,IAAD,EAAOS,KAAP,EAAiB;AAC5B,WACI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAET,IAAjB;AAAuB,MAAA,GAAG,EAAES,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,GADL,EAEKT,IAAI,CAACU,WAFV,EAEuB,GAFvB,CADJ;AAMH,GAPA,CADL,CAFR,CADJ;AAgBH,CA5C4B;AAAA,UAGXxB,WAHW;AAAA,GAA7B;MAAMC,gB;AA8CN,eAAeA,gBAAf","sourcesContent":["import React, { useEffect, useState, memo } from 'react'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport { useSelector } from 'react-redux'\n\nconst LanguageDropdown = memo((props) => {\n    const { handleChange, langID } = props\n\n    const state = useSelector((state) => state?.formReducer?.pageBuilder)\n\n    const [localState, setLocalState] = useState({\n        languages: state?.languages,\n        selectedLang: '',\n    })\n\n    const { languages, selectedLang } = localState\n\n    useEffect(() => {\n        languages &&\n            languages.length > 0 &&\n            languages.map((lang) => {\n                if (lang.id === parseInt(langID)) {\n                    setLocalState((prevState) => ({ ...prevState, selectedLang: lang }))\n                    handleChange(lang)\n                }\n            })\n    }, [])\n\n    const handleLanguageChange = (e) => {\n        setLocalState((prevState) => ({ ...prevState, selectedLang: e.target.value }))\n        handleChange(e.target.value)\n    }\n\n    return (\n        <FormControl variant=\"outlined\" style={{ float: 'right', marginBottom: 8 }} size={'small'}>\n            {languages && languages.length > 0 && (\n                <Select value={selectedLang} onChange={handleLanguageChange} label=\"Language\">\n                    {languages.map((lang, index) => {\n                        return (\n                            <MenuItem value={lang} key={index}>\n                                {' '}\n                                {lang.description}{' '}\n                            </MenuItem>\n                        )\n                    })}\n                </Select>\n            )}\n        </FormControl>\n    )\n})\n\nexport default LanguageDropdown\n"]},"metadata":{},"sourceType":"module"}