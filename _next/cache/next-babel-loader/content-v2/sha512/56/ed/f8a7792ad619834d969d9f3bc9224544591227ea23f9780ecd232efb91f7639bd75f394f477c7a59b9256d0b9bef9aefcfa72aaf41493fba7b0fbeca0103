{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/guest/account/Transactions/BonusHistory.js\";\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport { ViewList } from '@webcms/orest';\nimport { DEFAULT_OREST_TOKEN, isErrorMsg, OREST_ENDPOINT } from 'model/orest/constants';\nimport WebCmsGlobal from 'components/webcms-global';\nimport useNotifications from 'model/notification/useNotifications';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nimport MaterialTable from 'material-table';\nimport moment from 'moment';\nimport { formatPrice } from '@webcms-globals/helpers';\nexport default function BonusHistory(props) {\n  const {\n    isWidget\n  } = props;\n  const {\n    GENERAL_SETTINGS\n  } = useContext(WebCmsGlobal);\n  const {\n    t\n  } = useTranslation(); //redux\n\n  const {\n    showError\n  } = useNotifications();\n  const token = useSelector(state => {\n    var _state$orest, _state$orest$currentU, _state$orest$currentU2;\n\n    return (state === null || state === void 0 ? void 0 : (_state$orest = state.orest) === null || _state$orest === void 0 ? void 0 : (_state$orest$currentU = _state$orest.currentUser) === null || _state$orest$currentU === void 0 ? void 0 : (_state$orest$currentU2 = _state$orest$currentU.auth) === null || _state$orest$currentU2 === void 0 ? void 0 : _state$orest$currentU2.access_token) || false;\n  });\n  const clientBase = useSelector(state => {\n    var _state$orest2, _state$orest2$state;\n\n    return (state === null || state === void 0 ? void 0 : (_state$orest2 = state.orest) === null || _state$orest2 === void 0 ? void 0 : (_state$orest2$state = _state$orest2.state) === null || _state$orest2$state === void 0 ? void 0 : _state$orest2$state.client) || false;\n  }); //state\n\n  const {\n    0: bonusTrans,\n    1: setBonusTrans\n  } = useState([]);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  useEffect(() => {\n    let active = true;\n\n    if (active) {\n      if (isLoading) {\n        return undefined;\n      }\n\n      if (clientBase.id) {\n        setIsLoading(true);\n        ViewList({\n          apiUrl: GENERAL_SETTINGS.OREST_URL,\n          endpoint: OREST_ENDPOINT.BONUSTRANS,\n          token,\n          params: {\n            query: `accid:${clientBase.id}`,\n            allhotels: true\n          }\n        }).then(r => {\n          if (active) {\n            if (r.status === 200) {\n              setBonusTrans(r.data.data);\n              setIsLoading(false);\n            } else {\n              const retErr = isErrorMsg(r);\n              showError(retErr.errorMsg);\n              setIsLoading(false);\n            }\n          }\n        });\n      } else {\n        setIsLoading(false);\n      }\n    }\n\n    return () => {\n      active = false;\n    };\n  }, []);\n  const bonusTransColumns = [{\n    title: t('str_winDate'),\n    field: 'transdate',\n    render: props => props.transdate && moment(props.transdate, 'YYYY-MM-DD').format('ddd, MMM DD, YYYY')\n  }, {\n    title: t('str_hotel'),\n    field: 'hotelname',\n    cellStyle: {\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      minWidth: 200\n    }\n  }, {\n    title: t('str_description'),\n    field: 'bonustpldesc'\n  }, {\n    title: t('str_stay'),\n    field: 'grosstotal',\n    render: props => props.grosstotal && formatPrice(props.grosstotal)\n  }, {\n    title: t('str_balance'),\n    field: 'bonustotal',\n    render: props => props.bonustotal && formatPrice(props.bonustotal)\n  }];\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, __jsx(Container, {\n    maxWidth: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    container: true,\n    justify: 'center',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, __jsx(MaterialTable, {\n    title: \"\",\n    isLoading: isLoading,\n    columns: bonusTransColumns,\n    data: bonusTrans,\n    localization: {\n      body: {\n        emptyDataSourceMessage: t('str_noRecords'),\n        addTooltip: t('str_add'),\n        deleteTooltip: t('str_delete'),\n        editTooltip: t('str_edit'),\n        filterRow: {\n          filterTooltip: t('str_filter')\n        },\n        editRow: {\n          deleteText: t('str_confirmDeleteRecord'),\n          cancelTooltip: t('str_cancel'),\n          saveTooltip: t('str_save')\n        }\n      },\n      toolbar: {\n        searchTooltip: t('str_search'),\n        searchPlaceholder: t('str_search')\n      },\n      pagination: {\n        labelRowsSelect: t('str_line'),\n        labelDisplayedRows: t('str_labelDisplayedRows'),\n        firstTooltip: t('str_firstPage'),\n        previousTooltip: t('str_previousPage'),\n        nextTooltip: t('str_nextPage'),\n        lastTooltip: t('str_lastPage')\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/guest/account/Transactions/BonusHistory.js"],"names":["React","useContext","useEffect","useState","useSelector","Container","Grid","ViewList","DEFAULT_OREST_TOKEN","isErrorMsg","OREST_ENDPOINT","WebCmsGlobal","useNotifications","useTranslation","MaterialTable","moment","formatPrice","BonusHistory","props","isWidget","GENERAL_SETTINGS","t","showError","token","state","orest","currentUser","auth","access_token","clientBase","client","bonusTrans","setBonusTrans","isLoading","setIsLoading","active","undefined","id","apiUrl","OREST_URL","endpoint","BONUSTRANS","params","query","allhotels","then","r","status","data","retErr","errorMsg","bonusTransColumns","title","field","render","transdate","format","cellStyle","textOverflow","whiteSpace","overflow","minWidth","grosstotal","bonustotal","body","emptyDataSourceMessage","addTooltip","deleteTooltip","editTooltip","filterRow","filterTooltip","editRow","deleteText","cancelTooltip","saveTooltip","toolbar","searchTooltip","searchPlaceholder","pagination","labelRowsSelect","labelDisplayedRows","firstTooltip","previousTooltip","nextTooltip","lastTooltip"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\nimport { ViewList } from '@webcms/orest'\nimport { DEFAULT_OREST_TOKEN, isErrorMsg, OREST_ENDPOINT } from 'model/orest/constants'\nimport WebCmsGlobal from 'components/webcms-global'\nimport useNotifications from 'model/notification/useNotifications'\nimport useTranslation from 'lib/translations/hooks/useTranslation'\nimport MaterialTable from 'material-table'\nimport moment from 'moment'\nimport { formatPrice } from '@webcms-globals/helpers'\n\nexport default function BonusHistory(props) {\n    const { isWidget } = props\n    const { GENERAL_SETTINGS } = useContext(WebCmsGlobal)\n    const { t } = useTranslation()\n\n    //redux\n    const { showError } = useNotifications()\n    const token = useSelector((state) => state?.orest?.currentUser?.auth?.access_token || false)\n    const clientBase = useSelector((state) => state?.orest?.state?.client || false)\n\n    //state\n    const [bonusTrans, setBonusTrans] = useState([])\n    const [isLoading, setIsLoading] = useState(false)\n\n    useEffect(() => {\n        let active = true\n        if (active) {\n            if (isLoading) {\n                return undefined\n            }\n\n            if (clientBase.id) {\n                setIsLoading(true)\n                ViewList({\n                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                    endpoint: OREST_ENDPOINT.BONUSTRANS,\n                    token,\n                    params: {\n                        query: `accid:${clientBase.id}`,\n                        allhotels: true\n                    },\n                }).then((r) => {\n                    if (active) {\n                        if (r.status === 200) {\n                            setBonusTrans(r.data.data)\n                            setIsLoading(false)\n                        } else {\n                            const retErr = isErrorMsg(r)\n                            showError(retErr.errorMsg)\n                            setIsLoading(false)\n                        }\n                    }\n                })\n            } else {\n                setIsLoading(false)\n            }\n        }\n\n        return () => {\n            active = false\n        }\n    }, [])\n\n    const bonusTransColumns = [\n        { title: t('str_winDate'), field: 'transdate', render: props => props.transdate && moment(props.transdate, 'YYYY-MM-DD').format('ddd, MMM DD, YYYY')},\n        {\n            title: t('str_hotel'),\n            field: 'hotelname',\n            cellStyle: {\n                textOverflow: 'ellipsis',\n                whiteSpace: 'nowrap',\n                overflow: 'hidden',\n                minWidth: 200,\n            },\n        },\n        { title: t('str_description'), field: 'bonustpldesc' },\n        { title: t('str_stay'), field: 'grosstotal', render: props => props.grosstotal && formatPrice(props.grosstotal) },\n        { title: t('str_balance'), field: 'bonustotal', render: props => props.bonustotal && formatPrice(props.bonustotal) },\n    ]\n\n    return (\n        <React.Fragment>\n            <Container maxWidth=\"md\">\n                <Grid container justify={'center'}>\n                    <Grid item xs={12}>\n                        <MaterialTable\n                            title=\"\"\n                            isLoading={isLoading}\n                            columns={bonusTransColumns}\n                            data={bonusTrans}\n                            localization={{\n                                body: {\n                                    emptyDataSourceMessage: t('str_noRecords'),\n                                    addTooltip: t('str_add'),\n                                    deleteTooltip: t('str_delete'),\n                                    editTooltip: t('str_edit'),\n                                    filterRow: {\n                                        filterTooltip: t('str_filter')\n                                    },\n                                    editRow: {\n                                        deleteText: t('str_confirmDeleteRecord'),\n                                        cancelTooltip: t('str_cancel'),\n                                        saveTooltip: t('str_save')\n                                    }\n                                },\n                                toolbar: {\n                                    searchTooltip: t('str_search'),\n                                    searchPlaceholder: t('str_search')\n                                },\n                                pagination: {\n                                    labelRowsSelect: t('str_line'),\n                                    labelDisplayedRows: t('str_labelDisplayedRows'),\n                                    firstTooltip: t('str_firstPage'),\n                                    previousTooltip: t('str_previousPage'),\n                                    nextTooltip: t('str_nextPage'),\n                                    lastTooltip: t('str_lastPage')\n                                }\n                            }}\n                        />\n                    </Grid>\n                </Grid>\n            </Container>\n        </React.Fragment>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}