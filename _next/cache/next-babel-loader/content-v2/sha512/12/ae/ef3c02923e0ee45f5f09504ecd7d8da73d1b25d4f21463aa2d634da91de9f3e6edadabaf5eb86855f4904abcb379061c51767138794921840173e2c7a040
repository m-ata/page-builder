{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/components/email/body/EditEmailSection.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useContext, useEffect, useState } from 'react'; //material imports\n\nimport Container from '@material-ui/core/Container';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport TextField from \"@material-ui/core/TextField\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Slider from '@material-ui/core/Slider';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useRouter } from \"next/router\";\nimport { withStyles } from '@material-ui/core/styles'; //import toast\n\nimport { toast } from \"react-toastify\"; //custom imports\n\nimport EditImage from \"../../page/sections/image/EditImage\";\nimport EditParagraph from \"../../page/sections/paragraph/EditParagrapgh\";\nimport Alert from \"../../page/sections/AlertDialog\"; //redux import\n\nimport { connect } from 'react-redux';\nimport { setToState } from \"../../../../../../state/actions\"; //integration related imports\n\nimport axios from \"axios\";\nimport WebCmsGlobal from \"../../../../../webcms-global\";\nimport { isErrorMsg, OREST_ENDPOINT, REQUEST_METHOD_CONST } from \"../../../../../../model/orest/constants\";\nimport { Delete, Insert, Patch } from \"@webcms/orest\";\nimport { DELETE_SUCCESS } from \"../../../constants\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nconst useStyle = makeStyles(theme => ({\n  disableSlider: {\n    pointerEvents: \"none\",\n    opacity: 0.5\n  },\n  actionButtons: {\n    display: 'flex',\n    justifyContent: 'flex-start',\n    marginTop: theme.spacing(2)\n  },\n  actionButton: {\n    marginLeft: theme.spacing(1),\n    borderRadius: 20\n  }\n}));\nconst marks = [{\n  value: 0,\n  label: '0'\n}, {\n  value: 10,\n  label: '10%'\n}, {\n  value: 20,\n  label: '20%'\n}, {\n  value: 30,\n  label: '30%'\n}, {\n  value: 40,\n  label: '40%'\n}, {\n  value: 50,\n  label: '50%'\n}, {\n  value: 60,\n  label: '60'\n}, {\n  value: 70,\n  label: '70%'\n}, {\n  value: 80,\n  label: '80%'\n}, {\n  value: 90,\n  label: '90%'\n}, {\n  value: 100,\n  label: '100%'\n}];\nconst iOSBoxShadow = '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.13),0 0 0 1px rgba(0,0,0,0.02)';\nconst CustomSlider = withStyles({\n  root: {\n    // color: COLORS.primary,\n    height: 2,\n    padding: '15px 0'\n  },\n  thumb: {\n    height: 28,\n    width: 28,\n    backgroundColor: '#fff',\n    boxShadow: iOSBoxShadow,\n    marginTop: -14,\n    marginLeft: -14,\n    '&:focus, &:hover, &$active': {\n      boxShadow: '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.3),0 0 0 1px rgba(0,0,0,0.02)',\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        boxShadow: iOSBoxShadow\n      }\n    }\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50% + 11px)',\n    top: -22,\n    '& *': {\n      background: 'transparent',\n      color: '#000'\n    }\n  },\n  track: {\n    height: 2\n  },\n  rail: {\n    height: 2,\n    opacity: 0.5,\n    backgroundColor: '#bfbfbf'\n  },\n  mark: {\n    backgroundColor: '#bfbfbf',\n    height: 8,\n    width: 1,\n    marginTop: -3\n  },\n  markActive: {\n    opacity: 1,\n    backgroundColor: 'currentColor'\n  }\n})(Slider);\n\nconst EditEmailSection = props => {\n  var _state$page, _state$page$sections;\n\n  const {\n    dialogTitle,\n    section,\n    isDialogOpen,\n    state,\n    onEditSection,\n    resetRender,\n    setToState,\n    otherLangSection\n  } = props;\n  const {\n    0: openModal,\n    1: setOpenModal\n  } = useState(isDialogOpen);\n  const {\n    0: activeStep,\n    1: setActiveStep\n  } = useState(0);\n  const {\n    0: sectionType,\n    1: setSectionType\n  } = useState(section.type);\n  const {\n    0: alertType,\n    1: setAlertType\n  } = useState('');\n  const {\n    0: steps,\n    1: setSteps\n  } = useState([]);\n  const {\n    0: consumeWidth,\n    1: setConsumeWidth\n  } = useState(0);\n  const {\n    0: editedSection,\n    1: setEditedSection\n  } = useState(section);\n  const {\n    0: isAlertDialog,\n    1: setAlertDialog\n  } = useState(false);\n  const {\n    0: tmp_sectionType,\n    1: setTempSectionType\n  } = useState('');\n  const {\n    0: isSave,\n    1: setSave\n  } = useState(false);\n  const {\n    0: components,\n    1: setComponents\n  } = useState(section.items);\n  const {\n    0: sectionID,\n    1: setSectionID\n  } = useState(section.id);\n  const {\n    0: selectedComponent,\n    1: setSelectedComponent\n  } = useState(null);\n  const {\n    0: newComponent,\n    1: setNewComponent\n  } = useState(null);\n  const {\n    0: isNextDisable,\n    1: setNextDisable\n  } = useState(false);\n  let index = state.email.body.indexOf(editedSection);\n  const sectionTypes = [{\n    label: 'Full Section',\n    value: 'fullcol'\n  }, {\n    label: '2 Column Section',\n    value: 'twocol'\n  }, {\n    label: '3 Column Section',\n    value: 'threecol'\n  }];\n  const {\n    0: sectionOrder,\n    1: setSectionOrder\n  } = useState(index + 1 || 1);\n  const router = useRouter();\n  const companyId = router.query.companyID;\n  const {\n    GENERAL_SETTINGS,\n    token\n  } = useContext(WebCmsGlobal);\n  const authToken = token || router.query.authToken;\n  const classes = useStyle();\n  useEffect(() => {\n    if (sectionType === 'fullcol') {\n      setSteps(['Type', 'Sub Section 1']);\n    } else if (sectionType === 'twocol') {\n      setSteps(['Type', 'Sub Section 1', 'Sub Section 2']);\n    } else {\n      setSteps(['Type', 'Sub Section 1', 'Sub Section 2', 'Sub Section 3']);\n    }\n  }, [sectionType]);\n  useEffect(() => {\n    handleNextComponentWidth();\n  }, [editedSection, activeStep]);\n\n  const handleComponents = data => {\n    const updatedComponents = [...components];\n    updatedComponents[activeStep - 1] = data;\n    setComponents(updatedComponents);\n  };\n\n  const handleDisable = isDisabled => {\n    setNextDisable(isDisabled);\n  };\n\n  const setModalType = (component, index) => {\n    switch (component.type) {\n      case 'image':\n        return state.langCode === state.defaultLang ? __jsx(EditImage, {\n          imageComponent: component,\n          handleCmponent: handleComponents,\n          handleDisable: handleDisable,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 60\n          }\n        }) : __jsx(EditImage, {\n          imageComponent: component,\n          handleCmponent: handleComponents,\n          otherLangImage: otherLangSection[index],\n          handleDisable: handleDisable,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 26\n          }\n        });\n\n      case 'paragraph':\n        return state.langCode === state.defaultLang ? __jsx(EditParagraph, {\n          paragraphComponent: component,\n          handleCmponent: handleComponents,\n          handleDisable: handleDisable,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }\n        }) : __jsx(EditParagraph, {\n          paragraphComponent: component,\n          handleCmponent: handleComponents,\n          otherLangParagraph: otherLangSection[index],\n          handleDisable: handleDisable,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 25\n          }\n        });\n    }\n  };\n\n  const handleCancel = () => {\n    setOpenModal(false);\n    props.resetRender();\n  };\n\n  const handleApply = () => {\n    if (isSave) {\n      const newSection = {\n        id: sectionID.toLowerCase(),\n        type: sectionType,\n        items: components\n      };\n      onEditSection(newSection, index, sectionOrder);\n      resetRender();\n      setOpenModal(false);\n    }\n  };\n\n  const handleNextSection = () => {\n    if (activeStep === steps.length - 1) {\n      setSave(true);\n      components.map(component => {\n        if (component.type === 'paragraph') {\n          if (component.gid) {\n            Patch({\n              // update into rafile\n              apiUrl: GENERAL_SETTINGS.OREST_URL,\n              endpoint: OREST_ENDPOINT.HCMITEMTXTPAR,\n              token: authToken,\n              gid: component.gid,\n              data: {\n                itemtext: component.service,\n                hotelrefno: Number(companyId)\n              }\n            }).then(res => {\n              if (res.status === 200 && res.data.data) {\n                component.service = 'hcmitemtxtpar';\n              }\n            });\n          } else {\n            Insert({\n              // insert paragraph into hcmitemtxt\n              apiUrl: GENERAL_SETTINGS.OREST_URL,\n              endpoint: OREST_ENDPOINT.HCMITEMTXT,\n              token: authToken,\n              data: {\n                itemid: state.hcmItemId,\n                hotelrefno: Number(companyId)\n              }\n            }).then(res => {\n              if (res.status === 200 && res.data.data) {\n                Insert({\n                  // insert textpar\n                  apiUrl: GENERAL_SETTINGS.OREST_URL,\n                  endpoint: OREST_ENDPOINT.HCMITEMTXTPAR,\n                  token: authToken,\n                  data: {\n                    itemid: res.data.data.id,\n                    itemtext: component.service,\n                    hotelrefno: Number(companyId)\n                  }\n                }).then(res1 => {\n                  if (res1.status === 200 && res1.data.data) {\n                    component.service = 'hcmitemtxtpar';\n                    component.gid = res1.data.data.gid;\n                  }\n                });\n              }\n            });\n          }\n        }\n      });\n    } else {\n      setActiveStep(previousStep => previousStep + 1);\n    }\n  };\n\n  const handleBackSection = () => {\n    setActiveStep(previousStep => previousStep - 1);\n  };\n\n  const handleNextComponentWidth = () => {\n    let totalConsumeWidth = 0;\n    editedSection.items.map((component, index) => {\n      if (index <= activeStep - 1) {\n        totalConsumeWidth += component.width;\n      }\n    });\n    setConsumeWidth(totalConsumeWidth);\n  };\n\n  const handleComponentWidthChange = (e, value) => {\n    setConsumeWidth(value);\n  };\n\n  const handleSectionType = event => {\n    setAlertType('section');\n    setAlertDialog(true);\n    setTempSectionType(event.target.value);\n  };\n\n  const handleComponentType = (event, component) => {\n    if (section.type !== sectionType) {\n      const updatedSections = state.email.body;\n      const componentIndex = updatedSections[index].items.indexOf(component);\n      component.service = handleComponentService(event.target.value);\n      component.type = event.target.value;\n      updatedSections[index].items[componentIndex] = component;\n      setEditedSection(updatedSections[index]);\n      setToState('pageBuilder', ['email', 'body'], updatedSections);\n    } else {\n      setAlertType('component');\n      setAlertDialog(true);\n      setSelectedComponent(component);\n      handleNewComponent(event.target.value);\n    }\n  };\n\n  const handleComponentService = componentType => {\n    if (componentType === 'slider') {\n      return 'hcmitemsld';\n    } else if (componentType === 'image') {\n      return 'hcmitemimg';\n    } else if (componentType === 'widgetbooking') {\n      return 'widgetbooking';\n    } else if (componentType === 'paragraph') {\n      return 'hcmitemtxtpar';\n    } else return null;\n  };\n\n  const handleNewComponent = componenttype => {\n    if (componenttype === 'slider') {\n      setNewComponent({\n        gid: '',\n        service: 'hcmitemsld',\n        type: componenttype,\n        width: 100\n      });\n    }\n\n    if (componenttype === 'image') {\n      setNewComponent({\n        gid: '',\n        service: 'hcmitemimg',\n        type: componenttype,\n        width: 100\n      });\n    }\n\n    if (componenttype === 'paragraph') {\n      setNewComponent({\n        gid: '',\n        service: 'hcmitemtxtpar',\n        type: componenttype,\n        width: 100\n      });\n    }\n\n    if (componenttype === 'widgetbooking') {\n      setNewComponent({\n        service: '',\n        type: 'widgetbooking',\n        width: 100\n      });\n    }\n  };\n\n  const handleAlertActionChange = isDelete => {\n    if (isDelete) {\n      if (alertType === 'section') {\n        handleDeleteSection();\n      }\n\n      if (alertType === 'component') {\n        handleComponentDelete();\n      }\n    }\n\n    setAlertDialog(false);\n  };\n\n  const handleDeleteSection = async () => {\n    const selectedSection = state.email.body[index];\n    let req = [];\n\n    for (let component of selectedSection.items) {\n      if (component.type === 'image') {\n        const REQUEST_OPTIONS_DELETE_HCMITEMIMG = {\n          url: GENERAL_SETTINGS.OREST_URL + OREST_ENDPOINT.SLASH + OREST_ENDPOINT.HCMITEMIMG + OREST_ENDPOINT.SLASH + 'del/' + component.gid,\n          method: REQUEST_METHOD_CONST.DELETE,\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n            'Content-Type': 'application/json'\n          },\n          params: {\n            hotelrefno: Number(companyId)\n          }\n        };\n        const image = await deleteImage(REQUEST_OPTIONS_DELETE_HCMITEMIMG);\n        req.push(image);\n      }\n\n      if (component.type === 'paragraph') {\n        const REQUEST_OPTIONS_DELETE_HCMITEMTXTPAR = {\n          url: GENERAL_SETTINGS.OREST_URL + OREST_ENDPOINT.SLASH + OREST_ENDPOINT.HCMITEMTXTPAR + OREST_ENDPOINT.SLASH + 'del/' + component.gid,\n          method: REQUEST_METHOD_CONST.DELETE,\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n            'Content-Type': 'application/json'\n          },\n          params: {\n            hotelrefno: Number(companyId)\n          }\n        };\n        const paragrapgh = await deleteParagraph(REQUEST_OPTIONS_DELETE_HCMITEMTXTPAR);\n        req.push(paragrapgh);\n      }\n    }\n\n    await Promise.all(req).then(async res => {\n      let isSuccess = true;\n      await res.map(r => {\n        if (r.status !== 200) {\n          isSuccess = false;\n        }\n      });\n\n      if (isSuccess) {\n        setSectionType(tmp_sectionType);\n        handleResetSection();\n        toast.success(DELETE_SUCCESS, {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      } else {\n        toast.error('Something went wrong', {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      }\n    });\n  };\n\n  const handleResetSection = () => {\n    const index = state.email.body.indexOf(section);\n    const updateSections = state.email.body;\n    let newSection = {};\n    let initialComponents = [];\n\n    switch (tmp_sectionType) {\n      case 'fullcol':\n        initialComponents = [{\n          id: 'item-1',\n          service: '',\n          type: '',\n          gid: '',\n          width: 100\n        }];\n        newSection = {\n          id: section.id,\n          type: tmp_sectionType,\n          items: initialComponents\n        };\n        break;\n\n      case 'twocol':\n        [50, 50].map((value, i) => {\n          initialComponents.push({\n            id: 'item-' + (i + 1),\n            service: '',\n            type: '',\n            gid: '',\n            width: value\n          });\n        });\n        newSection = {\n          id: section.id,\n          type: tmp_sectionType,\n          items: initialComponents\n        };\n        break;\n\n      case 'threecol':\n        [30, 30, 40].map((value, i) => {\n          initialComponents.push({\n            id: 'item-' + (i + 1),\n            service: '',\n            type: '',\n            gid: '',\n            width: value\n          });\n        });\n        newSection = {\n          id: section.id,\n          type: tmp_sectionType,\n          items: initialComponents\n        };\n        break;\n    }\n\n    setEditedSection(newSection);\n    updateSections[index] = newSection;\n    setToState('pageBuilder', ['email', 'body'], updateSections);\n  };\n\n  const handleComponentDelete = () => {\n    const updatedSection = _objectSpread({}, section);\n\n    const updatedSections = state.email.body;\n    const componentIndex = updatedSection.items.indexOf(selectedComponent);\n    updatedSection.items[componentIndex] = newComponent;\n\n    if (state.code.toLowerCase() === 'new page') {\n      if (selectedComponent.type === 'image') {\n        Delete({\n          apiUrl: GENERAL_SETTINGS.OREST_URL,\n          endpoint: OREST_ENDPOINT.HCMITEMIMG,\n          token: authToken,\n          gid: selectedComponent.gid,\n          params: {\n            hotelrefno: Number(companyId)\n          }\n        }).then(res => {\n          if (res.status === 200) {\n            toast.success('Image deleted successfully', {\n              position: toast.POSITION.TOP_RIGHT\n            });\n            setEditedSection(updatedSection);\n            updatedSections[index] = updatedSection;\n            setToState('pageBuilder', ['email', 'body'], updatedSections);\n          } else {\n            const retErr = isErrorMsg(res);\n            toast.error(retErr.errorMsg, {\n              position: toast.POSITION.TOP_RIGHT\n            });\n          }\n        });\n      }\n\n      if (selectedComponent.type === 'paragraph') {\n        setEditedSection(updatedSection);\n        updatedSections[index] = updatedSection;\n        setToState('pageBuilder', ['email', 'body'], updatedSections);\n        toast.success('Text deleted successfully', {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      }\n    } else {\n      setEditedSection(updatedSection);\n      updatedSections[index] = updatedSection;\n      setToState('pageBuilder', ['email', 'body'], updatedSections);\n    }\n  };\n\n  const deleteImage = async header => {\n    return new Promise(async resv => {\n      return await axios(header).then(async response => {\n        if (response.status === 200 && response.data && response.data.success) {\n          resv(response);\n        } else {\n          const retErr = isErrorMsg(response);\n          toast.error(retErr.errorMsg, {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n        resv(error.response || {\n          status: 0\n        });\n      });\n    });\n  };\n\n  const deleteParagraph = async header => {\n    return new Promise(async resv => {\n      return await axios(header).then(async response => {\n        if (response.status === 200 && response.data && response.data.success) {\n          resv(response);\n        } else {\n          const retErr = isErrorMsg(response);\n          toast.error(retErr.errorMsg, {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n        resv(error.response || {\n          status: 0\n        });\n      });\n    });\n  };\n\n  const handleSectionID = event => {\n    setSectionID(event.target.value);\n\n    if (state.type === 'email' || state.type === 'emailOnly') {\n      var _state$email, _state$email$body;\n\n      if (state !== null && state !== void 0 && (_state$email = state.email) !== null && _state$email !== void 0 && (_state$email$body = _state$email.body) !== null && _state$email$body !== void 0 && _state$email$body.length) {\n        setNextDisable(state.email.body.some((section, sectionIndex) => {\n          return section.id === event.target.value && sectionIndex !== index;\n        }));\n      }\n    }\n  };\n\n  return __jsx(Dialog, {\n    disableBackdropClick: true,\n    disableEnforceFocus: true,\n    fullWidth: true,\n    maxWidth: \"md\",\n    open: openModal,\n    onClose: handleCancel,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 9\n    }\n  }, __jsx(DialogTitle, {\n    id: \"form-dialog-title\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 623,\n      columnNumber: 13\n    }\n  }, \" \", dialogTitle, __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 17\n    }\n  })), __jsx(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 626,\n      columnNumber: 13\n    }\n  }, __jsx(Stepper, {\n    activeStep: activeStep,\n    alternativeLabel: true // connector={<ColorlibConnector/>}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 17\n    }\n  }, steps.map((label, index) => {\n    return __jsx(Step, {\n      key: `step-${index}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 632,\n        columnNumber: 29\n      }\n    }, __jsx(StepLabel, {\n      color: \"secondary\" // StepIconComponent={() => getStepsIcons(index, (pageStep === index), (pageStep > index), pageBuilderType)}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 33\n      }\n    }, label));\n  })), __jsx(Container, {\n    className: isSave ? classes.disableSlider : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 640,\n      columnNumber: 17\n    }\n  }, activeStep === 0 && __jsx(Grid, {\n    container: true,\n    justify: 'center',\n    spacing: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 29\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 644,\n      columnNumber: 33\n    }\n  }, __jsx(FormControl, {\n    disabled: state.langCode !== state.defaultLang,\n    fullWidth: true,\n    component: \"fieldset\",\n    size: 'small',\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 645,\n      columnNumber: 37\n    }\n  }, (sectionTypes === null || sectionTypes === void 0 ? void 0 : sectionTypes.length) > 0 && __jsx(Select, {\n    value: sectionType,\n    onChange: handleSectionType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 648,\n      columnNumber: 45\n    }\n  }, sectionTypes.map((option, index) => {\n    return __jsx(MenuItem, {\n      disabled: sectionType !== option.value,\n      value: option.value,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 651,\n        columnNumber: 57\n      }\n    }, option.label);\n  })))), __jsx(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 660,\n      columnNumber: 33\n    }\n  }, __jsx(FormControl, {\n    component: 'fieldset',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 661,\n      columnNumber: 37\n    }\n  }, __jsx(TextField, {\n    disabled: state.langCode !== state.defaultLang,\n    label: \"Section ID *\",\n    value: sectionID,\n    onChange: handleSectionID,\n    error: isNextDisable,\n    helperText: isNextDisable ? 'Already Exist' : '',\n    variant: 'outlined',\n    size: 'small',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 662,\n      columnNumber: 41\n    }\n  }))), __jsx(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 673,\n      columnNumber: 33\n    }\n  }, __jsx(FormControl, {\n    fullWidth: true,\n    component: 'fieldset',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 674,\n      columnNumber: 37\n    }\n  }, __jsx(TextField, {\n    label: \"Order\",\n    inputProps: {\n      min: 1,\n      max: (state === null || state === void 0 ? void 0 : (_state$page = state.page) === null || _state$page === void 0 ? void 0 : (_state$page$sections = _state$page.sections) === null || _state$page$sections === void 0 ? void 0 : _state$page$sections.length) + 1\n    },\n    onChange: e => setSectionOrder(e.target.value),\n    disabled: state.langCode !== state.defaultLang,\n    value: sectionOrder,\n    size: 'small',\n    variant: 'outlined',\n    type: 'number',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 675,\n      columnNumber: 41\n    }\n  })))), state.email.body.length > 0 && state.email.body[index] && state.email.body[index].items && state.email.body[index].items.map((value, i) => {\n    return i === activeStep - 1 ? __jsx(\"div\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 695,\n        columnNumber: 33\n      }\n    }, __jsx(CustomSlider // className={classes.disableSlider}\n    , {\n      marks: marks,\n      value: consumeWidth,\n      onChange: handleComponentWidthChange,\n      style: {\n        pointerEvents: 'none',\n        opacity: 0.5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 37\n      }\n    }), __jsx(FormControl, {\n      component: \"fieldset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 703,\n        columnNumber: 37\n      }\n    }, __jsx(RadioGroup, {\n      \"aria-label\": \"component\",\n      name: \"component\",\n      row: true,\n      value: value.type,\n      onChange: e => {\n        handleComponentType(e, value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 706,\n        columnNumber: 41\n      }\n    }, __jsx(FormControlLabel, {\n      value: \"image\",\n      control: __jsx(Radio, {\n        color: 'primary',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 712,\n          columnNumber: 58\n        }\n      }),\n      label: \"Image\",\n      disabled: value.type !== 'image',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 710,\n        columnNumber: 45\n      }\n    }), __jsx(FormControlLabel, {\n      value: \"paragraph\",\n      control: __jsx(Radio, {\n        color: 'primary',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 718,\n          columnNumber: 58\n        }\n      }),\n      label: \"Text\",\n      disabled: value.type !== 'paragraph',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 716,\n        columnNumber: 45\n      }\n    }))), setModalType(value, i)) : null;\n  }), __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"flex-start\",\n    alignItems: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 731,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: classes.actionButtons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 732,\n      columnNumber: 25\n    }\n  }, activeStep !== 0 && __jsx(Button, {\n    onClick: handleBackSection,\n    variant: \"contained\",\n    size: \"small\",\n    \"aria-label\": \"add\",\n    className: classes.actionButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 734,\n      columnNumber: 54\n    }\n  }, \"BACK\"), __jsx(Button, {\n    onClick: handleNextSection,\n    variant: \"contained\",\n    size: \"small\",\n    color: \"primary\",\n    \"aria-label\": \"add\",\n    className: classes.actionButton,\n    disabled: isNextDisable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 744,\n      columnNumber: 29\n    }\n  }, activeStep === steps.length - 1 ? 'SAVE' : 'NEXT')))), isAlertDialog && __jsx(Alert, {\n    handleAlert: handleAlertActionChange,\n    alertType: alertType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 759,\n      columnNumber: 38\n    }\n  })), __jsx(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 762,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    className: classes.actionButton,\n    onClick: handleCancel,\n    variant: \"contained\",\n    size: \"small\",\n    \"aria-label\": \"add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 763,\n      columnNumber: 17\n    }\n  }, \"Cancel\"), __jsx(Button, {\n    onClick: handleApply,\n    className: classes.actionButton,\n    variant: \"contained\",\n    size: \"small\",\n    \"aria-label\": \"add\",\n    color: \"primary\",\n    disabled: !isSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 772,\n      columnNumber: 17\n    }\n  }, \"Apply\")));\n};\n\nconst mapStateToProps = state => {\n  return {\n    state: state.formReducer.pageBuilder\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditEmailSection);","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/components/email/body/EditEmailSection.js"],"names":["React","useContext","useEffect","useState","Container","Dialog","DialogActions","DialogContent","DialogTitle","Button","TextField","Step","StepLabel","Stepper","FormControl","RadioGroup","FormControlLabel","Radio","Grid","Slider","makeStyles","useRouter","withStyles","toast","EditImage","EditParagraph","Alert","connect","setToState","axios","WebCmsGlobal","isErrorMsg","OREST_ENDPOINT","REQUEST_METHOD_CONST","Delete","Insert","Patch","DELETE_SUCCESS","Select","MenuItem","useStyle","theme","disableSlider","pointerEvents","opacity","actionButtons","display","justifyContent","marginTop","spacing","actionButton","marginLeft","borderRadius","marks","value","label","iOSBoxShadow","CustomSlider","root","height","padding","thumb","width","backgroundColor","boxShadow","active","valueLabel","left","top","background","color","track","rail","mark","markActive","EditEmailSection","props","dialogTitle","section","isDialogOpen","state","onEditSection","resetRender","otherLangSection","openModal","setOpenModal","activeStep","setActiveStep","sectionType","setSectionType","type","alertType","setAlertType","steps","setSteps","consumeWidth","setConsumeWidth","editedSection","setEditedSection","isAlertDialog","setAlertDialog","tmp_sectionType","setTempSectionType","isSave","setSave","components","setComponents","items","sectionID","setSectionID","id","selectedComponent","setSelectedComponent","newComponent","setNewComponent","isNextDisable","setNextDisable","index","email","body","indexOf","sectionTypes","sectionOrder","setSectionOrder","router","companyId","query","companyID","GENERAL_SETTINGS","token","authToken","classes","handleNextComponentWidth","handleComponents","data","updatedComponents","handleDisable","isDisabled","setModalType","component","langCode","defaultLang","handleCancel","handleApply","newSection","toLowerCase","handleNextSection","length","map","gid","apiUrl","OREST_URL","endpoint","HCMITEMTXTPAR","itemtext","service","hotelrefno","Number","then","res","status","HCMITEMTXT","itemid","hcmItemId","res1","previousStep","handleBackSection","totalConsumeWidth","handleComponentWidthChange","e","handleSectionType","event","target","handleComponentType","updatedSections","componentIndex","handleComponentService","handleNewComponent","componentType","componenttype","handleAlertActionChange","isDelete","handleDeleteSection","handleComponentDelete","selectedSection","req","REQUEST_OPTIONS_DELETE_HCMITEMIMG","url","SLASH","HCMITEMIMG","method","DELETE","headers","Authorization","params","image","deleteImage","push","REQUEST_OPTIONS_DELETE_HCMITEMTXTPAR","paragrapgh","deleteParagraph","Promise","all","isSuccess","r","handleResetSection","success","position","POSITION","TOP_RIGHT","error","updateSections","initialComponents","i","updatedSection","code","retErr","errorMsg","header","resv","response","catch","console","log","handleSectionID","some","sectionIndex","option","min","max","page","sections","mapStateToProps","formReducer","pageBuilder","mapDispatchToProps","dispatch","stateType","stateName"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAqD,OAArD,C,CACA;;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,0BAA3B,C,CACA;;AACA,SAAQC,KAAR,QAAoB,gBAApB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,qCAAtB;AACA,OAAOC,aAAP,MAA0B,8CAA1B;AACA,OAAOC,KAAP,MAAkB,iCAAlB,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,UAAR,QAAyB,iCAAzB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,SACIC,UADJ,EAEIC,cAFJ,EAGIC,oBAHJ,QAIO,yCAJP;AAKA,SAAQC,MAAR,EAAgBC,MAAhB,EAAwBC,KAAxB,QAAoC,eAApC;AACA,SAAQC,cAAR,QAA6B,oBAA7B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAEA,MAAMC,QAAQ,GAAGpB,UAAU,CAACqB,KAAK,KAAK;AAClCC,EAAAA,aAAa,EAAE;AACXC,IAAAA,aAAa,EAAE,MADJ;AAEXC,IAAAA,OAAO,EAAE;AAFE,GADmB;AAKlCC,EAAAA,aAAa,EAAE;AACXC,IAAAA,OAAO,EAAE,MADE;AAEXC,IAAAA,cAAc,EAAE,YAFL;AAGXC,IAAAA,SAAS,EAAEP,KAAK,CAACQ,OAAN,CAAc,CAAd;AAHA,GALmB;AAUlCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,UAAU,EAAEV,KAAK,CAACQ,OAAN,CAAc,CAAd,CADF;AAEVG,IAAAA,YAAY,EAAE;AAFJ;AAVoB,CAAL,CAAN,CAA3B;AAgBA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,KAAK,EAAE,CAAR;AAAWC,EAAAA,KAAK,EAAE;AAAlB,CAAD,EAAyB;AAACD,EAAAA,KAAK,EAAE,EAAR;AAAYC,EAAAA,KAAK,EAAE;AAAnB,CAAzB,EAAoD;AAACD,EAAAA,KAAK,EAAE,EAAR;AAAYC,EAAAA,KAAK,EAAE;AAAnB,CAApD,EAA+E;AAAED,EAAAA,KAAK,EAAE,EAAT;AAAaC,EAAAA,KAAK,EAAE;AAApB,CAA/E,EACV;AAACD,EAAAA,KAAK,EAAE,EAAR;AAAYC,EAAAA,KAAK,EAAE;AAAnB,CADU,EACiB;AAACD,EAAAA,KAAK,EAAE,EAAR;AAAYC,EAAAA,KAAK,EAAE;AAAnB,CADjB,EAC4C;AAACD,EAAAA,KAAK,EAAE,EAAR;AAAYC,EAAAA,KAAK,EAAE;AAAnB,CAD5C,EACsE;AAACD,EAAAA,KAAK,EAAE,EAAR;AAAYC,EAAAA,KAAK,EAAE;AAAnB,CADtE,EAEV;AAACD,EAAAA,KAAK,EAAE,EAAR;AAAYC,EAAAA,KAAK,EAAE;AAAnB,CAFU,EAEiB;AAAED,EAAAA,KAAK,EAAE,EAAT;AAAaC,EAAAA,KAAK,EAAE;AAApB,CAFjB,EAE6C;AAACD,EAAAA,KAAK,EAAE,GAAR;AAAaC,EAAAA,KAAK,EAAE;AAApB,CAF7C,CAAd;AAIA,MAAMC,YAAY,GACd,iFADJ;AAGA,MAAMC,YAAY,GAAGnC,UAAU,CAAC;AAC5BoC,EAAAA,IAAI,EAAE;AACF;AACAC,IAAAA,MAAM,EAAE,CAFN;AAGFC,IAAAA,OAAO,EAAE;AAHP,GADsB;AAM5BC,EAAAA,KAAK,EAAE;AACHF,IAAAA,MAAM,EAAE,EADL;AAEHG,IAAAA,KAAK,EAAE,EAFJ;AAGHC,IAAAA,eAAe,EAAE,MAHd;AAIHC,IAAAA,SAAS,EAAER,YAJR;AAKHR,IAAAA,SAAS,EAAE,CAAC,EALT;AAMHG,IAAAA,UAAU,EAAE,CAAC,EANV;AAOH,kCAA8B;AAC1Ba,MAAAA,SAAS,EAAE,gFADe;AAE1B;AACA,8BAAwB;AACpBA,QAAAA,SAAS,EAAER;AADS;AAHE;AAP3B,GANqB;AAqB5BS,EAAAA,MAAM,EAAE,EArBoB;AAsB5BC,EAAAA,UAAU,EAAE;AACRC,IAAAA,IAAI,EAAE,mBADE;AAERC,IAAAA,GAAG,EAAE,CAAC,EAFE;AAGR,WAAO;AACHC,MAAAA,UAAU,EAAE,aADT;AAEHC,MAAAA,KAAK,EAAE;AAFJ;AAHC,GAtBgB;AA8B5BC,EAAAA,KAAK,EAAE;AACHZ,IAAAA,MAAM,EAAE;AADL,GA9BqB;AAiC5Ba,EAAAA,IAAI,EAAE;AACFb,IAAAA,MAAM,EAAE,CADN;AAEFf,IAAAA,OAAO,EAAE,GAFP;AAGFmB,IAAAA,eAAe,EAAE;AAHf,GAjCsB;AAsC5BU,EAAAA,IAAI,EAAE;AACFV,IAAAA,eAAe,EAAE,SADf;AAEFJ,IAAAA,MAAM,EAAE,CAFN;AAGFG,IAAAA,KAAK,EAAE,CAHL;AAIFd,IAAAA,SAAS,EAAE,CAAC;AAJV,GAtCsB;AA4C5B0B,EAAAA,UAAU,EAAE;AACR9B,IAAAA,OAAO,EAAE,CADD;AAERmB,IAAAA,eAAe,EAAE;AAFT;AA5CgB,CAAD,CAAV,CAgDlB5C,MAhDkB,CAArB;;AAkDA,MAAMwD,gBAAgB,GAAIC,KAAD,IAAW;AAAA;;AAEhC,QAAM;AACFC,IAAAA,WADE;AAEFC,IAAAA,OAFE;AAGFC,IAAAA,YAHE;AAIFC,IAAAA,KAJE;AAKFC,IAAAA,aALE;AAMFC,IAAAA,WANE;AAOFtD,IAAAA,UAPE;AAQFuD,IAAAA;AARE,MASFP,KATJ;AAWA,QAAM;AAAA,OAACQ,SAAD;AAAA,OAAYC;AAAZ,MAA4BlF,QAAQ,CAAC4E,YAAD,CAA1C;AACA,QAAM;AAAA,OAAEO,UAAF;AAAA,OAAcC;AAAd,MAA+BpF,QAAQ,CAAC,CAAD,CAA7C;AACA,QAAM;AAAA,OAAEqF,WAAF;AAAA,OAAeC;AAAf,MAAkCtF,QAAQ,CAAC2E,OAAO,CAACY,IAAT,CAAhD;AACA,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BzF,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM;AAAA,OAAC0F,KAAD;AAAA,OAAQC;AAAR,MAAoB3F,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAAC4F,YAAD;AAAA,OAAeC;AAAf,MAAkC7F,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM;AAAA,OAAC8F,aAAD;AAAA,OAAgBC;AAAhB,MAAoC/F,QAAQ,CAAC2E,OAAD,CAAlD;AACA,QAAM;AAAA,OAACqB,aAAD;AAAA,OAAgBC;AAAhB,MAAkCjG,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM;AAAA,OAACkG,eAAD;AAAA,OAAkBC;AAAlB,MAAwCnG,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM;AAAA,OAACoG,MAAD;AAAA,OAASC;AAAT,MAAoBrG,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM;AAAA,OAACsG,UAAD;AAAA,OAAaC;AAAb,MAA8BvG,QAAQ,CAAC2E,OAAO,CAAC6B,KAAT,CAA5C;AACA,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4B1G,QAAQ,CAAC2E,OAAO,CAACgC,EAAT,CAA1C;AACA,QAAM;AAAA,OAACC,iBAAD;AAAA,OAAoBC;AAApB,MAA4C7G,QAAQ,CAAC,IAAD,CAA1D;AACA,QAAM;AAAA,OAAC8G,YAAD;AAAA,OAAeC;AAAf,MAAkC/G,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM;AAAA,OAACgH,aAAD;AAAA,OAAgBC;AAAhB,MAAkCjH,QAAQ,CAAC,KAAD,CAAhD;AACA,MAAIkH,KAAK,GAAGrC,KAAK,CAACsC,KAAN,CAAYC,IAAZ,CAAiBC,OAAjB,CAAyBvB,aAAzB,CAAZ;AACA,QAAMwB,YAAY,GAAG,CAAC;AAClBlE,IAAAA,KAAK,EAAE,cADW;AAElBD,IAAAA,KAAK,EAAE;AAFW,GAAD,EAGlB;AACCC,IAAAA,KAAK,EAAE,kBADR;AAECD,IAAAA,KAAK,EAAE;AAFR,GAHkB,EAMlB;AACCC,IAAAA,KAAK,EAAE,kBADR;AAECD,IAAAA,KAAK,EAAE;AAFR,GANkB,CAArB;AAUA,QAAM;AAAA,OAACoE,YAAD;AAAA,OAAeC;AAAf,MAAkCxH,QAAQ,CAACkH,KAAK,GAAG,CAAR,IAAa,CAAd,CAAhD;AAEA,QAAMO,MAAM,GAAGvG,SAAS,EAAxB;AACA,QAAMwG,SAAS,GAAGD,MAAM,CAACE,KAAP,CAAaC,SAA/B;AACA,QAAM;AAACC,IAAAA,gBAAD;AAAmBC,IAAAA;AAAnB,MAA4BhI,UAAU,CAAC6B,YAAD,CAA5C;AACA,QAAMoG,SAAS,GAAGD,KAAK,IAAIL,MAAM,CAACE,KAAP,CAAaI,SAAxC;AAEA,QAAMC,OAAO,GAAG3F,QAAQ,EAAxB;AAEAtC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGsF,WAAW,KAAK,SAAnB,EAA8B;AAC1BM,MAAAA,QAAQ,CAAC,CAAC,MAAD,EAAS,eAAT,CAAD,CAAR;AACH,KAFD,MAEO,IAAGN,WAAW,KAAK,QAAnB,EAA6B;AAChCM,MAAAA,QAAQ,CAAC,CAAC,MAAD,EAAS,eAAT,EAA0B,eAA1B,CAAD,CAAR;AACH,KAFM,MAEA;AACHA,MAAAA,QAAQ,CAAC,CAAC,MAAD,EAAS,eAAT,EAA0B,eAA1B,EAA2C,eAA3C,CAAD,CAAR;AACH;AACJ,GARQ,EAQN,CAACN,WAAD,CARM,CAAT;AAUAtF,EAAAA,SAAS,CAAC,MAAM;AACZkI,IAAAA,wBAAwB;AAC3B,GAFQ,EAEN,CAACnC,aAAD,EAAgBX,UAAhB,CAFM,CAAT;;AAIA,QAAM+C,gBAAgB,GAAIC,IAAD,IAAU;AAC/B,UAAMC,iBAAiB,GAAG,CAAC,GAAG9B,UAAJ,CAA1B;AACA8B,IAAAA,iBAAiB,CAACjD,UAAU,GAAG,CAAd,CAAjB,GAAoCgD,IAApC;AACA5B,IAAAA,aAAa,CAAC6B,iBAAD,CAAb;AACH,GAJD;;AAMA,QAAMC,aAAa,GAAIC,UAAD,IAAgB;AAClCrB,IAAAA,cAAc,CAACqB,UAAD,CAAd;AACH,GAFD;;AAIA,QAAMC,YAAY,GAAG,CAACC,SAAD,EAAYtB,KAAZ,KAAsB;AACvC,YAAQsB,SAAS,CAACjD,IAAlB;AACI,WAAK,OAAL;AACI,eACIV,KAAK,CAAC4D,QAAN,KAAmB5D,KAAK,CAAC6D,WAAzB,GAAuC,MAAC,SAAD;AACnC,UAAA,cAAc,EAAEF,SADmB;AAEnC,UAAA,cAAc,EAAEN,gBAFmB;AAGnC,UAAA,aAAa,EAAEG,aAHoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAvC,GAIK,MAAC,SAAD;AACD,UAAA,cAAc,EAAEG,SADf;AAED,UAAA,cAAc,EAAEN,gBAFf;AAGD,UAAA,cAAc,EAAElD,gBAAgB,CAACkC,KAAD,CAH/B;AAID,UAAA,aAAa,EAAEmB,aAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALT;;AAYJ,WAAK,WAAL;AACI,eACIxD,KAAK,CAAC4D,QAAN,KAAmB5D,KAAK,CAAC6D,WAAzB,GACI,MAAC,aAAD;AACI,UAAA,kBAAkB,EAAEF,SADxB;AAEI,UAAA,cAAc,EAAEN,gBAFpB;AAGI,UAAA,aAAa,EAAEG,aAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,GAMI,MAAC,aAAD;AACI,UAAA,kBAAkB,EAAEG,SADxB;AAEI,UAAA,cAAc,EAAEN,gBAFpB;AAGI,UAAA,kBAAkB,EAAElD,gBAAgB,CAACkC,KAAD,CAHxC;AAII,UAAA,aAAa,EAAEmB,aAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPR;AAfR;AA8BH,GA/BD;;AAiCA,QAAMM,YAAY,GAAG,MAAM;AACvBzD,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAT,IAAAA,KAAK,CAACM,WAAN;AACH,GAHD;;AAKA,QAAM6D,WAAW,GAAG,MAAM;AACtB,QAAGxC,MAAH,EAAW;AACP,YAAMyC,UAAU,GAAG;AACflC,QAAAA,EAAE,EAAEF,SAAS,CAACqC,WAAV,EADW;AAEfvD,QAAAA,IAAI,EAAEF,WAFS;AAGfmB,QAAAA,KAAK,EAAEF;AAHQ,OAAnB;AAKAxB,MAAAA,aAAa,CAAC+D,UAAD,EAAa3B,KAAb,EAAoBK,YAApB,CAAb;AACAxC,MAAAA,WAAW;AACXG,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AACJ,GAXD;;AAaA,QAAM6D,iBAAiB,GAAG,MAAM;AAE5B,QAAG5D,UAAU,KAAKO,KAAK,CAACsD,MAAN,GAAe,CAAjC,EAAoC;AAChC3C,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAC,MAAAA,UAAU,CAAC2C,GAAX,CAAeT,SAAS,IAAI;AACxB,YAAIA,SAAS,CAACjD,IAAV,KAAmB,WAAvB,EAAoC;AAChC,cAAIiD,SAAS,CAACU,GAAd,EAAmB;AACfjH,YAAAA,KAAK,CAAC;AAAE;AACJkH,cAAAA,MAAM,EAAEtB,gBAAgB,CAACuB,SADvB;AAEFC,cAAAA,QAAQ,EAAExH,cAAc,CAACyH,aAFvB;AAGFxB,cAAAA,KAAK,EAAEC,SAHL;AAIFmB,cAAAA,GAAG,EAAEV,SAAS,CAACU,GAJb;AAKFf,cAAAA,IAAI,EAAE;AACFoB,gBAAAA,QAAQ,EAAEf,SAAS,CAACgB,OADlB;AAEFC,gBAAAA,UAAU,EAAEC,MAAM,CAAChC,SAAD;AAFhB;AALJ,aAAD,CAAL,CASGiC,IATH,CASQC,GAAG,IAAI;AACX,kBAAIA,GAAG,CAACC,MAAJ,KAAe,GAAf,IAAsBD,GAAG,CAACzB,IAAJ,CAASA,IAAnC,EAAyC;AACrCK,gBAAAA,SAAS,CAACgB,OAAV,GAAoB,eAApB;AACH;AACJ,aAbD;AAcH,WAfD,MAeO;AACHxH,YAAAA,MAAM,CAAC;AAAE;AACLmH,cAAAA,MAAM,EAAEtB,gBAAgB,CAACuB,SADtB;AAEHC,cAAAA,QAAQ,EAAExH,cAAc,CAACiI,UAFtB;AAGHhC,cAAAA,KAAK,EAAEC,SAHJ;AAIHI,cAAAA,IAAI,EAAE;AACF4B,gBAAAA,MAAM,EAAElF,KAAK,CAACmF,SADZ;AAEFP,gBAAAA,UAAU,EAAEC,MAAM,CAAChC,SAAD;AAFhB;AAJH,aAAD,CAAN,CAQGiC,IARH,CAQQC,GAAG,IAAI;AACX,kBAAGA,GAAG,CAACC,MAAJ,KAAe,GAAf,IAAsBD,GAAG,CAACzB,IAAJ,CAASA,IAAlC,EAAwC;AACpCnG,gBAAAA,MAAM,CAAC;AAAE;AACLmH,kBAAAA,MAAM,EAAEtB,gBAAgB,CAACuB,SADtB;AAEHC,kBAAAA,QAAQ,EAAExH,cAAc,CAACyH,aAFtB;AAGHxB,kBAAAA,KAAK,EAAEC,SAHJ;AAIHI,kBAAAA,IAAI,EAAE;AACF4B,oBAAAA,MAAM,EAAEH,GAAG,CAACzB,IAAJ,CAASA,IAAT,CAAcxB,EADpB;AAEF4C,oBAAAA,QAAQ,EAAEf,SAAS,CAACgB,OAFlB;AAGFC,oBAAAA,UAAU,EAAEC,MAAM,CAAChC,SAAD;AAHhB;AAJH,iBAAD,CAAN,CASGiC,IATH,CASQM,IAAI,IAAI;AACZ,sBAAIA,IAAI,CAACJ,MAAL,KAAgB,GAAhB,IAAuBI,IAAI,CAAC9B,IAAL,CAAUA,IAArC,EAA2C;AACvCK,oBAAAA,SAAS,CAACgB,OAAV,GAAoB,eAApB;AACAhB,oBAAAA,SAAS,CAACU,GAAV,GAAgBe,IAAI,CAAC9B,IAAL,CAAUA,IAAV,CAAee,GAA/B;AACH;AACJ,iBAdD;AAeH;AACJ,aA1BD;AA2BH;AACJ;AACJ,OA/CD;AAgDH,KAlDD,MAkDO;AACH9D,MAAAA,aAAa,CAAC8E,YAAY,IAAIA,YAAY,GAAG,CAAhC,CAAb;AACH;AACJ,GAvDD;;AAyDA,QAAMC,iBAAiB,GAAG,MAAM;AAC5B/E,IAAAA,aAAa,CAAC8E,YAAY,IAAIA,YAAY,GAAG,CAAhC,CAAb;AACH,GAFD;;AAIA,QAAMjC,wBAAwB,GAAG,MAAM;AACnC,QAAImC,iBAAiB,GAAG,CAAxB;AACAtE,IAAAA,aAAa,CAACU,KAAd,CAAoByC,GAApB,CAAwB,CAACT,SAAD,EAAYtB,KAAZ,KAAsB;AAC1C,UAAIA,KAAK,IAAI/B,UAAU,GAAG,CAA1B,EAA6B;AACzBiF,QAAAA,iBAAiB,IAAI5B,SAAS,CAAC7E,KAA/B;AACH;AACJ,KAJD;AAKAkC,IAAAA,eAAe,CAACuE,iBAAD,CAAf;AACH,GARD;;AAUA,QAAMC,0BAA0B,GAAG,CAACC,CAAD,EAAInH,KAAJ,KAAc;AAC7C0C,IAAAA,eAAe,CAAC1C,KAAD,CAAf;AACH,GAFD;;AAIA,QAAMoH,iBAAiB,GAAIC,KAAD,IAAW;AACjC/E,IAAAA,YAAY,CAAC,SAAD,CAAZ;AACAQ,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAE,IAAAA,kBAAkB,CAACqE,KAAK,CAACC,MAAN,CAAatH,KAAd,CAAlB;AACH,GAJD;;AAMA,QAAMuH,mBAAmB,GAAG,CAACF,KAAD,EAAQhC,SAAR,KAAsB;AAC9C,QAAG7D,OAAO,CAACY,IAAR,KAAiBF,WAApB,EAAiC;AAC7B,YAAMsF,eAAe,GAAG9F,KAAK,CAACsC,KAAN,CAAYC,IAApC;AACA,YAAMwD,cAAc,GAAGD,eAAe,CAACzD,KAAD,CAAf,CAAuBV,KAAvB,CAA6Ba,OAA7B,CAAqCmB,SAArC,CAAvB;AACAA,MAAAA,SAAS,CAACgB,OAAV,GAAoBqB,sBAAsB,CAACL,KAAK,CAACC,MAAN,CAAatH,KAAd,CAA1C;AACAqF,MAAAA,SAAS,CAACjD,IAAV,GAAiBiF,KAAK,CAACC,MAAN,CAAatH,KAA9B;AACAwH,MAAAA,eAAe,CAACzD,KAAD,CAAf,CAAuBV,KAAvB,CAA6BoE,cAA7B,IAA+CpC,SAA/C;AACAzC,MAAAA,gBAAgB,CAAC4E,eAAe,CAACzD,KAAD,CAAhB,CAAhB;AACAzF,MAAAA,UAAU,CAAC,aAAD,EAAgB,CAAC,OAAD,EAAU,MAAV,CAAhB,EAAmCkJ,eAAnC,CAAV;AACH,KARD,MAQO;AACHlF,MAAAA,YAAY,CAAC,WAAD,CAAZ;AACAQ,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAY,MAAAA,oBAAoB,CAAC2B,SAAD,CAApB;AACAsC,MAAAA,kBAAkB,CAACN,KAAK,CAACC,MAAN,CAAatH,KAAd,CAAlB;AACH;AACJ,GAfD;;AAiBA,QAAM0H,sBAAsB,GAAIE,aAAD,IAAmB;AAC9C,QAAGA,aAAa,KAAK,QAArB,EAA+B;AAC3B,aAAO,YAAP;AACH,KAFD,MAEO,IAAGA,aAAa,KAAK,OAArB,EAA8B;AACjC,aAAO,YAAP;AACH,KAFM,MAEA,IAAGA,aAAa,KAAK,eAArB,EAAsC;AACzC,aAAO,eAAP;AACH,KAFM,MAEA,IAAGA,aAAa,KAAK,WAArB,EAAkC;AACrC,aAAO,eAAP;AACH,KAFM,MAEA,OAAO,IAAP;AACV,GAVD;;AAYA,QAAMD,kBAAkB,GAAIE,aAAD,IAAmB;AAC1C,QAAGA,aAAa,KAAK,QAArB,EAAgC;AAC5BjE,MAAAA,eAAe,CAAC;AACZmC,QAAAA,GAAG,EAAE,EADO;AAEZM,QAAAA,OAAO,EAAE,YAFG;AAGZjE,QAAAA,IAAI,EAAEyF,aAHM;AAIZrH,QAAAA,KAAK,EAAE;AAJK,OAAD,CAAf;AAMH;;AACD,QAAGqH,aAAa,KAAK,OAArB,EAA+B;AAC3BjE,MAAAA,eAAe,CAAC;AACZmC,QAAAA,GAAG,EAAE,EADO;AAEZM,QAAAA,OAAO,EAAE,YAFG;AAGZjE,QAAAA,IAAI,EAAEyF,aAHM;AAIZrH,QAAAA,KAAK,EAAE;AAJK,OAAD,CAAf;AAMH;;AACD,QAAGqH,aAAa,KAAK,WAArB,EAAmC;AAC/BjE,MAAAA,eAAe,CAAC;AACZmC,QAAAA,GAAG,EAAE,EADO;AAEZM,QAAAA,OAAO,EAAE,eAFG;AAGZjE,QAAAA,IAAI,EAAEyF,aAHM;AAIZrH,QAAAA,KAAK,EAAE;AAJK,OAAD,CAAf;AAMH;;AACD,QAAGqH,aAAa,KAAK,eAArB,EAAuC;AACnCjE,MAAAA,eAAe,CAAC;AACZyC,QAAAA,OAAO,EAAE,EADG;AAEZjE,QAAAA,IAAI,EAAE,eAFM;AAGZ5B,QAAAA,KAAK,EAAE;AAHK,OAAD,CAAf;AAKH;AACJ,GAhCD;;AAkCA,QAAMsH,uBAAuB,GAAIC,QAAD,IAAc;AAC1C,QAAGA,QAAH,EAAa;AACT,UAAG1F,SAAS,KAAK,SAAjB,EAA4B;AACxB2F,QAAAA,mBAAmB;AACtB;;AACD,UAAG3F,SAAS,KAAK,WAAjB,EAA8B;AAC1B4F,QAAAA,qBAAqB;AACxB;AACJ;;AACDnF,IAAAA,cAAc,CAAC,KAAD,CAAd;AACH,GAVD;;AAYA,QAAMkF,mBAAmB,GAAG,YAAY;AACpC,UAAME,eAAe,GAAGxG,KAAK,CAACsC,KAAN,CAAYC,IAAZ,CAAiBF,KAAjB,CAAxB;AACA,QAAIoE,GAAG,GAAG,EAAV;;AACA,SAAK,IAAI9C,SAAT,IAAsB6C,eAAe,CAAC7E,KAAtC,EAA6C;AACzC,UAAIgC,SAAS,CAACjD,IAAV,KAAmB,OAAvB,EAAgC;AAC5B,cAAMgG,iCAAiC,GAAG;AACtCC,UAAAA,GAAG,EACC3D,gBAAgB,CAACuB,SAAjB,GACAvH,cAAc,CAAC4J,KADf,GAEA5J,cAAc,CAAC6J,UAFf,GAGA7J,cAAc,CAAC4J,KAHf,GAIA,MAJA,GAKAjD,SAAS,CAACU,GAPwB;AAQtCyC,UAAAA,MAAM,EAAE7J,oBAAoB,CAAC8J,MARS;AAStCC,UAAAA,OAAO,EAAE;AACLC,YAAAA,aAAa,EAAG,UAAS/D,SAAU,EAD9B;AAEL,4BAAgB;AAFX,WAT6B;AAatCgE,UAAAA,MAAM,EAAE;AACJtC,YAAAA,UAAU,EAAEC,MAAM,CAAChC,SAAD;AADd;AAb8B,SAA1C;AAiBA,cAAMsE,KAAK,GAAG,MAAMC,WAAW,CAACV,iCAAD,CAA/B;AACAD,QAAAA,GAAG,CAACY,IAAJ,CAASF,KAAT;AACH;;AACD,UAAIxD,SAAS,CAACjD,IAAV,KAAmB,WAAvB,EAAoC;AAChC,cAAM4G,oCAAoC,GAAG;AACzCX,UAAAA,GAAG,EACC3D,gBAAgB,CAACuB,SAAjB,GACAvH,cAAc,CAAC4J,KADf,GAEA5J,cAAc,CAACyH,aAFf,GAGAzH,cAAc,CAAC4J,KAHf,GAIA,MAJA,GAKAjD,SAAS,CAACU,GAP2B;AAQzCyC,UAAAA,MAAM,EAAE7J,oBAAoB,CAAC8J,MARY;AASzCC,UAAAA,OAAO,EAAE;AACLC,YAAAA,aAAa,EAAG,UAAS/D,SAAU,EAD9B;AAEL,4BAAgB;AAFX,WATgC;AAazCgE,UAAAA,MAAM,EAAE;AACJtC,YAAAA,UAAU,EAAEC,MAAM,CAAChC,SAAD;AADd;AAbiC,SAA7C;AAiBA,cAAM0E,UAAU,GAAG,MAAMC,eAAe,CAACF,oCAAD,CAAxC;AACAb,QAAAA,GAAG,CAACY,IAAJ,CAASE,UAAT;AACH;AACJ;;AACD,UAAME,OAAO,CAACC,GAAR,CAAYjB,GAAZ,EAAiB3B,IAAjB,CAAsB,MAAOC,GAAP,IAAe;AACvC,UAAI4C,SAAS,GAAG,IAAhB;AACA,YAAM5C,GAAG,CAACX,GAAJ,CAASwD,CAAD,IAAO;AACjB,YAAIA,CAAC,CAAC5C,MAAF,KAAa,GAAjB,EAAsB;AAClB2C,UAAAA,SAAS,GAAG,KAAZ;AACH;AACJ,OAJK,CAAN;;AAKA,UAAIA,SAAJ,EAAe;AACXlH,QAAAA,cAAc,CAACY,eAAD,CAAd;AACAwG,QAAAA,kBAAkB;AAClBtL,QAAAA,KAAK,CAACuL,OAAN,CAAczK,cAAd,EAA8B;AAC1B0K,UAAAA,QAAQ,EAAExL,KAAK,CAACyL,QAAN,CAAeC;AADC,SAA9B;AAGH,OAND,MAMO;AACH1L,QAAAA,KAAK,CAAC2L,KAAN,CAAY,sBAAZ,EAAoC;AAChCH,UAAAA,QAAQ,EAAExL,KAAK,CAACyL,QAAN,CAAeC;AADO,SAApC;AAGH;AACJ,KAlBK,CAAN;AAmBH,GAlED;;AAoEA,QAAMJ,kBAAkB,GAAG,MAAM;AAE7B,UAAMxF,KAAK,GAAGrC,KAAK,CAACsC,KAAN,CAAYC,IAAZ,CAAiBC,OAAjB,CAAyB1C,OAAzB,CAAd;AACA,UAAMqI,cAAc,GAAInI,KAAK,CAACsC,KAAN,CAAYC,IAApC;AACA,QAAIyB,UAAU,GAAE,EAAhB;AACA,QAAIoE,iBAAiB,GAAG,EAAxB;;AACA,YAAQ/G,eAAR;AACI,WAAK,SAAL;AACI+G,QAAAA,iBAAiB,GAAG,CAAC;AACjBtG,UAAAA,EAAE,EAAE,QADa;AAEjB6C,UAAAA,OAAO,EAAE,EAFQ;AAGjBjE,UAAAA,IAAI,EAAE,EAHW;AAIjB2D,UAAAA,GAAG,EAAE,EAJY;AAKjBvF,UAAAA,KAAK,EAAE;AALU,SAAD,CAApB;AAOAkF,QAAAA,UAAU,GAAG;AACTlC,UAAAA,EAAE,EAAEhC,OAAO,CAACgC,EADH;AAETpB,UAAAA,IAAI,EAAEW,eAFG;AAGTM,UAAAA,KAAK,EAAEyG;AAHE,SAAb;AAKA;;AACJ,WAAK,QAAL;AACI,SAAC,EAAD,EAAI,EAAJ,EAAQhE,GAAR,CAAY,CAAC9F,KAAD,EAAQ+J,CAAR,KAAc;AACtBD,UAAAA,iBAAiB,CAACf,IAAlB,CAAuB;AACnBvF,YAAAA,EAAE,EAAE,WAAUuG,CAAC,GAAC,CAAZ,CADe;AAEnB1D,YAAAA,OAAO,EAAE,EAFU;AAGnBjE,YAAAA,IAAI,EAAE,EAHa;AAInB2D,YAAAA,GAAG,EAAE,EAJc;AAKnBvF,YAAAA,KAAK,EAAER;AALY,WAAvB;AAOH,SARD;AASA0F,QAAAA,UAAU,GAAG;AACTlC,UAAAA,EAAE,EAAEhC,OAAO,CAACgC,EADH;AAETpB,UAAAA,IAAI,EAAEW,eAFG;AAGTM,UAAAA,KAAK,EAAEyG;AAHE,SAAb;AAKA;;AACJ,WAAK,UAAL;AACI,SAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,EAAWhE,GAAX,CAAe,CAAC9F,KAAD,EAAQ+J,CAAR,KAAc;AACzBD,UAAAA,iBAAiB,CAACf,IAAlB,CAAuB;AACnBvF,YAAAA,EAAE,EAAE,WAAUuG,CAAC,GAAC,CAAZ,CADe;AAEnB1D,YAAAA,OAAO,EAAE,EAFU;AAGnBjE,YAAAA,IAAI,EAAE,EAHa;AAInB2D,YAAAA,GAAG,EAAE,EAJc;AAKnBvF,YAAAA,KAAK,EAAER;AALY,WAAvB;AAOH,SARD;AASA0F,QAAAA,UAAU,GAAG;AACTlC,UAAAA,EAAE,EAAEhC,OAAO,CAACgC,EADH;AAETpB,UAAAA,IAAI,EAAEW,eAFG;AAGTM,UAAAA,KAAK,EAAEyG;AAHE,SAAb;AAKA;AA9CR;;AAgDAlH,IAAAA,gBAAgB,CAAC8C,UAAD,CAAhB;AACAmE,IAAAA,cAAc,CAAC9F,KAAD,CAAd,GAAuB2B,UAAvB;AACApH,IAAAA,UAAU,CAAC,aAAD,EAAgB,CAAC,OAAD,EAAU,MAAV,CAAhB,EAAmCuL,cAAnC,CAAV;AACH,GAzDD;;AA2DA,QAAM5B,qBAAqB,GAAG,MAAM;AAChC,UAAM+B,cAAc,qBAAOxI,OAAP,CAApB;;AACA,UAAMgG,eAAe,GAAG9F,KAAK,CAACsC,KAAN,CAAYC,IAApC;AACA,UAAMwD,cAAc,GAAGuC,cAAc,CAAC3G,KAAf,CAAqBa,OAArB,CAA6BT,iBAA7B,CAAvB;AACAuG,IAAAA,cAAc,CAAC3G,KAAf,CAAqBoE,cAArB,IAAuC9D,YAAvC;;AACA,QAAGjC,KAAK,CAACuI,IAAN,CAAWtE,WAAX,OAA6B,UAAhC,EAA4C;AACvC,UAAGlC,iBAAiB,CAACrB,IAAlB,KAA2B,OAA9B,EAAuC;AACpCxD,QAAAA,MAAM,CAAC;AACHoH,UAAAA,MAAM,EAAEtB,gBAAgB,CAACuB,SADtB;AAEHC,UAAAA,QAAQ,EAAExH,cAAc,CAAC6J,UAFtB;AAGH5D,UAAAA,KAAK,EAAEC,SAHJ;AAIHmB,UAAAA,GAAG,EAAEtC,iBAAiB,CAACsC,GAJpB;AAKH6C,UAAAA,MAAM,EAAE;AACJtC,YAAAA,UAAU,EAAEC,MAAM,CAAChC,SAAD;AADd;AALL,SAAD,CAAN,CAQGiC,IARH,CAQQC,GAAG,IAAI;AACX,cAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACpBzI,YAAAA,KAAK,CAACuL,OAAN,CAAc,4BAAd,EAA4C;AACxCC,cAAAA,QAAQ,EAAExL,KAAK,CAACyL,QAAN,CAAeC;AADe,aAA5C;AAGA/G,YAAAA,gBAAgB,CAACoH,cAAD,CAAhB;AACAxC,YAAAA,eAAe,CAACzD,KAAD,CAAf,GAAyBiG,cAAzB;AACA1L,YAAAA,UAAU,CAAC,aAAD,EAAgB,CAAC,OAAD,EAAU,MAAV,CAAhB,EAAmCkJ,eAAnC,CAAV;AACH,WAPD,MAOO;AACH,kBAAM0C,MAAM,GAAGzL,UAAU,CAACgI,GAAD,CAAzB;AACAxI,YAAAA,KAAK,CAAC2L,KAAN,CAAYM,MAAM,CAACC,QAAnB,EAA6B;AACzBV,cAAAA,QAAQ,EAAExL,KAAK,CAACyL,QAAN,CAAeC;AADA,aAA7B;AAGH;AACJ,SAtBD;AAuBF;;AACD,UAAGlG,iBAAiB,CAACrB,IAAlB,KAA2B,WAA9B,EAA2C;AACxCQ,QAAAA,gBAAgB,CAACoH,cAAD,CAAhB;AACAxC,QAAAA,eAAe,CAACzD,KAAD,CAAf,GAAyBiG,cAAzB;AACA1L,QAAAA,UAAU,CAAC,aAAD,EAAgB,CAAC,OAAD,EAAU,MAAV,CAAhB,EAAmCkJ,eAAnC,CAAV;AACAvJ,QAAAA,KAAK,CAACuL,OAAN,CAAc,2BAAd,EAA2C;AACvCC,UAAAA,QAAQ,EAAExL,KAAK,CAACyL,QAAN,CAAeC;AADc,SAA3C;AAGH;AACJ,KAlCD,MAkCO;AACH/G,MAAAA,gBAAgB,CAACoH,cAAD,CAAhB;AACAxC,MAAAA,eAAe,CAACzD,KAAD,CAAf,GAAyBiG,cAAzB;AACA1L,MAAAA,UAAU,CAAC,aAAD,EAAgB,CAAC,OAAD,EAAU,MAAV,CAAhB,EAAmCkJ,eAAnC,CAAV;AACH;AACJ,GA5CD;;AA8CA,QAAMsB,WAAW,GAAG,MAAOsB,MAAP,IAAkB;AAClC,WAAO,IAAIjB,OAAJ,CAAY,MAAOkB,IAAP,IAAgB;AAC/B,aAAO,MAAM9L,KAAK,CAAC6L,MAAD,CAAL,CACR5D,IADQ,CACH,MAAO8D,QAAP,IAAoB;AACtB,YAAIA,QAAQ,CAAC5D,MAAT,KAAoB,GAApB,IAA2B4D,QAAQ,CAACtF,IAApC,IAA4CsF,QAAQ,CAACtF,IAAT,CAAcwE,OAA9D,EAAuE;AACnEa,UAAAA,IAAI,CAACC,QAAD,CAAJ;AACH,SAFD,MAEO;AACH,gBAAMJ,MAAM,GAAGzL,UAAU,CAAC6L,QAAD,CAAzB;AACArM,UAAAA,KAAK,CAAC2L,KAAN,CAAYM,MAAM,CAACC,QAAnB,EAA6B;AACzBV,YAAAA,QAAQ,EAAExL,KAAK,CAACyL,QAAN,CAAeC;AADA,WAA7B;AAGH;AACJ,OAVQ,EAWRY,KAXQ,CAWDX,KAAD,IAAW;AACdY,QAAAA,OAAO,CAACC,GAAR,CAAYb,KAAZ;AACAS,QAAAA,IAAI,CAACT,KAAK,CAACU,QAAN,IAAkB;AAAE5D,UAAAA,MAAM,EAAE;AAAV,SAAnB,CAAJ;AACH,OAdQ,CAAb;AAeH,KAhBM,CAAP;AAiBH,GAlBD;;AAoBA,QAAMwC,eAAe,GAAG,MAAOkB,MAAP,IAAkB;AACtC,WAAO,IAAIjB,OAAJ,CAAY,MAAOkB,IAAP,IAAgB;AAC/B,aAAO,MAAM9L,KAAK,CAAC6L,MAAD,CAAL,CACR5D,IADQ,CACH,MAAO8D,QAAP,IAAoB;AACtB,YAAIA,QAAQ,CAAC5D,MAAT,KAAoB,GAApB,IAA2B4D,QAAQ,CAACtF,IAApC,IAA4CsF,QAAQ,CAACtF,IAAT,CAAcwE,OAA9D,EAAuE;AACnEa,UAAAA,IAAI,CAACC,QAAD,CAAJ;AACH,SAFD,MAEO;AACH,gBAAMJ,MAAM,GAAGzL,UAAU,CAAC6L,QAAD,CAAzB;AACArM,UAAAA,KAAK,CAAC2L,KAAN,CAAYM,MAAM,CAACC,QAAnB,EAA6B;AACzBV,YAAAA,QAAQ,EAAExL,KAAK,CAACyL,QAAN,CAAeC;AADA,WAA7B;AAGH;AACJ,OAVQ,EAWRY,KAXQ,CAWDX,KAAD,IAAW;AACdY,QAAAA,OAAO,CAACC,GAAR,CAAYb,KAAZ;AACAS,QAAAA,IAAI,CAACT,KAAK,CAACU,QAAN,IAAkB;AAAE5D,UAAAA,MAAM,EAAE;AAAV,SAAnB,CAAJ;AACH,OAdQ,CAAb;AAeH,KAhBM,CAAP;AAiBH,GAlBD;;AAoBA,QAAMgE,eAAe,GAAIrD,KAAD,IAAW;AAC/B9D,IAAAA,YAAY,CAAC8D,KAAK,CAACC,MAAN,CAAatH,KAAd,CAAZ;;AACA,QAAI0B,KAAK,CAACU,IAAN,KAAe,OAAf,IAA0BV,KAAK,CAACU,IAAN,KAAe,WAA7C,EAA0D;AAAA;;AACtD,UAAIV,KAAJ,aAAIA,KAAJ,+BAAIA,KAAK,CAAEsC,KAAX,8DAAI,aAAcC,IAAlB,8CAAI,kBAAoB4B,MAAxB,EAAgC;AAC5B/B,QAAAA,cAAc,CAACpC,KAAK,CAACsC,KAAN,CAAYC,IAAZ,CAAiB0G,IAAjB,CAAsB,CAACnJ,OAAD,EAAUoJ,YAAV,KAA4B;AAC7D,iBAAQpJ,OAAO,CAACgC,EAAR,KAAe6D,KAAK,CAACC,MAAN,CAAatH,KAA5B,IAAqC4K,YAAY,KAAK7G,KAA9D;AACH,SAFc,CAAD,CAAd;AAGH;AACJ;AACJ,GATD;;AAWA,SACI,MAAC,MAAD;AAAQ,IAAA,oBAAoB,MAA5B;AAA6B,IAAA,mBAAmB,MAAhD;AAAiD,IAAA,SAAS,EAAE,IAA5D;AAAkE,IAAA,QAAQ,EAAC,IAA3E;AAAgF,IAAA,IAAI,EAAEjC,SAAtF;AACQ,IAAA,OAAO,EAAE0D,YADjB;AAC+B,uBAAgB,mBAD/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,MAAC,WAAD;AAAa,IAAA,EAAE,EAAC,mBAAhB;AAAoC,IAAA,KAAK,EAAC,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAwDjE,WAAxD,EACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,EAKI,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,OAAD;AAAS,IAAA,UAAU,EAAES,UAArB;AAAiC,IAAA,gBAAgB,MAAjD,CACI;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGKO,KAAK,CAACuD,GAAN,CAAU,CAAC7F,KAAD,EAAQ8D,KAAR,KAAkB;AACzB,WACI,MAAC,IAAD;AAAM,MAAA,GAAG,EAAG,QAAOA,KAAM,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,SAAD;AAAW,MAAA,KAAK,EAAC,WAAjB,CACI;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE9D,KAFF,CADJ,CADJ;AAOH,GARA,CAHL,CADJ,EAcI,MAAC,SAAD;AAAW,IAAA,SAAS,EAAEgD,MAAM,GAAG4B,OAAO,CAACzF,aAAX,GAA2B,EAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQ4C,UAAU,KAAK,CAAf,IACI,MAAC,IAAD;AAAM,IAAA,SAAS,EAAE,IAAjB;AAAuB,IAAA,OAAO,EAAE,QAAhC;AAA0C,IAAA,OAAO,EAAE,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,WAAD;AAAa,IAAA,QAAQ,EAAEN,KAAK,CAAC4D,QAAN,KAAmB5D,KAAK,CAAC6D,WAAhD;AAA6D,IAAA,SAAS,MAAtE;AAAuE,IAAA,SAAS,EAAC,UAAjF;AAA4F,IAAA,IAAI,EAAE,OAAlG;AAA2G,IAAA,OAAO,EAAC,UAAnH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQ,CAAApB,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAE0B,MAAd,IAAuB,CAAvB,IACA,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAE3D,WAAf;AAA4B,IAAA,QAAQ,EAAEkF,iBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKjD,YAAY,CAAC2B,GAAb,CAAiB,CAAC+E,MAAD,EAAS9G,KAAT,KAAmB;AACjC,WACI,MAAC,QAAD;AAAU,MAAA,QAAQ,EAAE7B,WAAW,KAAK2I,MAAM,CAAC7K,KAA3C;AAAkD,MAAA,KAAK,EAAE6K,MAAM,CAAC7K,KAAhE;AAAuE,MAAA,GAAG,EAAE+D,KAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK8G,MAAM,CAAC5K,KADZ,CADJ;AAKH,GANA,CADL,CAHR,CADJ,CADJ,EAiBI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,WAAD;AAAa,IAAA,SAAS,EAAE,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AACI,IAAA,QAAQ,EAAEyB,KAAK,CAAC4D,QAAN,KAAmB5D,KAAK,CAAC6D,WADvC;AAEI,IAAA,KAAK,EAAC,cAFV;AAEyB,IAAA,KAAK,EAAEjC,SAFhC;AAGI,IAAA,QAAQ,EAAEoH,eAHd;AAII,IAAA,KAAK,EAAE7G,aAJX;AAKI,IAAA,UAAU,EAAEA,aAAa,GAAG,eAAH,GAAqB,EALlD;AAMI,IAAA,OAAO,EAAE,UANb;AAOI,IAAA,IAAI,EAAE,OAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAjBJ,EA8BI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,WAAD;AAAa,IAAA,SAAS,MAAtB;AAAuB,IAAA,SAAS,EAAE,UAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAW,IAAA,KAAK,EAAC,OAAjB;AACW,IAAA,UAAU,EAAE;AAAEiH,MAAAA,GAAG,EAAE,CAAP;AAAUC,MAAAA,GAAG,EAAE,CAAArJ,KAAK,SAAL,IAAAA,KAAK,WAAL,2BAAAA,KAAK,CAAEsJ,IAAP,oFAAaC,QAAb,8EAAuBpF,MAAvB,IAAgC;AAA/C,KADvB;AAEW,IAAA,QAAQ,EAAGsB,CAAD,IAAO9C,eAAe,CAAC8C,CAAC,CAACG,MAAF,CAAStH,KAAV,CAF3C;AAGW,IAAA,QAAQ,EAAE0B,KAAK,CAAC4D,QAAN,KAAmB5D,KAAK,CAAC6D,WAH9C;AAIW,IAAA,KAAK,EAAEnB,YAJlB;AAKW,IAAA,IAAI,EAAE,OALjB;AAMW,IAAA,OAAO,EAAE,UANpB;AAOW,IAAA,IAAI,EAAE,QAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CA9BJ,CAHZ,EAmDQ1C,KAAK,CAACsC,KAAN,CAAYC,IAAZ,CAAiB4B,MAAjB,GAA0B,CAA1B,IAA+BnE,KAAK,CAACsC,KAAN,CAAYC,IAAZ,CAAiBF,KAAjB,CAA/B,IACArC,KAAK,CAACsC,KAAN,CAAYC,IAAZ,CAAiBF,KAAjB,EAAwBV,KADxB,IAEA3B,KAAK,CAACsC,KAAN,CAAYC,IAAZ,CAAiBF,KAAjB,EAAwBV,KAAxB,CAA8ByC,GAA9B,CAAkC,CAAC9F,KAAD,EAAQ+J,CAAR,KAAc;AAC5C,WAAQA,CAAC,KAAK/H,UAAU,GAAG,CAApB,GACH;AAAK,MAAA,GAAG,EAAE+H,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,YAAD,CACI;AADJ;AAEI,MAAA,KAAK,EAAEhK,KAFX;AAGI,MAAA,KAAK,EAAE0C,YAHX;AAII,MAAA,QAAQ,EAAEyE,0BAJd;AAKI,MAAA,KAAK,EAAE;AAAC7H,QAAAA,aAAa,EAAE,MAAhB;AAAwBC,QAAAA,OAAO,EAAE;AAAjC,OALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAQI,MAAC,WAAD;AACI,MAAA,SAAS,EAAC,UADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI,MAAC,UAAD;AAAY,oBAAW,WAAvB;AAAmC,MAAA,IAAI,EAAC,WAAxC;AAAoD,MAAA,GAAG,MAAvD;AAAwD,MAAA,KAAK,EAAEU,KAAK,CAACoC,IAArE;AACY,MAAA,QAAQ,EAAG+E,CAAD,IAAO;AACbI,QAAAA,mBAAmB,CAACJ,CAAD,EAAInH,KAAJ,CAAnB;AACH,OAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII,MAAC,gBAAD;AACI,MAAA,KAAK,EAAC,OADV;AAEI,MAAA,OAAO,EAAE,MAAC,KAAD;AAAO,QAAA,KAAK,EAAE,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFb;AAGI,MAAA,KAAK,EAAC,OAHV;AAII,MAAA,QAAQ,EAAEA,KAAK,CAACoC,IAAN,KAAe,OAJ7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAUI,MAAC,gBAAD;AACI,MAAA,KAAK,EAAC,WADV;AAEI,MAAA,OAAO,EAAE,MAAC,KAAD;AAAO,QAAA,KAAK,EAAE,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFb;AAGI,MAAA,KAAK,EAAC,MAHV;AAII,MAAA,QAAQ,EAAEpC,KAAK,CAACoC,IAAN,KAAe,WAJ7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,CAHJ,CARJ,EA8BQgD,YAAY,CAACpF,KAAD,EAAQ+J,CAAR,CA9BpB,CADG,GAkCH,IAlCJ;AAmCH,GApCD,CArDR,EA2FI,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,EAAC,KAA1B;AAAgC,IAAA,OAAO,EAAC,YAAxC;AAAqD,IAAA,UAAU,EAAC,YAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAElF,OAAO,CAACtF,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQyC,UAAU,KAAK,CAAf,IAAqB,MAAC,MAAD;AACjB,IAAA,OAAO,EAAEgF,iBADQ;AAEjB,IAAA,OAAO,EAAC,WAFS;AAGjB,IAAA,IAAI,EAAC,OAHY;AAIjB,kBAAW,KAJM;AAKjB,IAAA,SAAS,EAAEnC,OAAO,CAACjF,YALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAF7B,EAYI,MAAC,MAAD;AACI,IAAA,OAAO,EAAEgG,iBADb;AAEI,IAAA,OAAO,EAAC,WAFZ;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,KAAK,EAAC,SAJV;AAKI,kBAAW,KALf;AAMI,IAAA,SAAS,EAAEf,OAAO,CAACjF,YANvB;AAOI,IAAA,QAAQ,EAAEiE,aAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASM7B,UAAU,KAAKO,KAAK,CAACsD,MAAN,GAAe,CAA9B,GAAkC,MAAlC,GAA2C,MATjD,CAZJ,CADJ,CA3FJ,CAdJ,EAqIQhD,aAAa,IAAI,MAAC,KAAD;AAAO,IAAA,WAAW,EAAEiF,uBAApB;AAA6C,IAAA,SAAS,EAAEzF,SAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArIzB,CALJ,EA6II,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AACI,IAAA,SAAS,EAAEwC,OAAO,CAACjF,YADvB;AAEI,IAAA,OAAO,EAAE4F,YAFb;AAGI,IAAA,OAAO,EAAC,WAHZ;AAII,IAAA,IAAI,EAAC,OAJT;AAKI,kBAAW,KALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAUI,MAAC,MAAD;AACI,IAAA,OAAO,EAAEC,WADb;AAEI,IAAA,SAAS,EAAEZ,OAAO,CAACjF,YAFvB;AAGI,IAAA,OAAO,EAAC,WAHZ;AAII,IAAA,IAAI,EAAC,OAJT;AAKI,kBAAW,KALf;AAMI,IAAA,KAAK,EAAC,SANV;AAOI,IAAA,QAAQ,EAAE,CAACqD,MAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAVJ,CA7IJ,CADJ;AAsKH,CA7pBD;;AA+pBA,MAAMiI,eAAe,GAAGxJ,KAAK,IAAI;AAC7B,SAAO;AACHA,IAAAA,KAAK,EAAEA,KAAK,CAACyJ,WAAN,CAAkBC;AADtB,GAAP;AAGH,CAJD;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACtChN,EAAAA,UAAU,EAAE,CAACiN,SAAD,EAAYC,SAAZ,EAAuBxL,KAAvB,KAAiCsL,QAAQ,CAAChN,UAAU,CAACiN,SAAD,EAAYC,SAAZ,EAAuBxL,KAAvB,CAAX;AADf,CAAf,CAA3B;;AAKA,eAAe3B,OAAO,CAClB6M,eADkB,EAElBG,kBAFkB,CAAP,CAGbhK,gBAHa,CAAf","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\n//material imports\nimport Container from '@material-ui/core/Container';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport TextField from \"@material-ui/core/TextField\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Slider from '@material-ui/core/Slider';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {useRouter} from \"next/router\";\nimport { withStyles } from '@material-ui/core/styles'\n//import toast\nimport {toast} from \"react-toastify\";\n//custom imports\nimport EditImage from \"../../page/sections/image/EditImage\";\nimport EditParagraph from \"../../page/sections/paragraph/EditParagrapgh\";\nimport Alert from \"../../page/sections/AlertDialog\";\n//redux import\nimport { connect } from 'react-redux';\nimport {setToState} from \"../../../../../../state/actions\";\n//integration related imports\nimport axios from \"axios\";\nimport WebCmsGlobal from \"../../../../../webcms-global\";\nimport {\n    isErrorMsg,\n    OREST_ENDPOINT,\n    REQUEST_METHOD_CONST\n} from \"../../../../../../model/orest/constants\";\nimport {Delete, Insert, Patch} from \"@webcms/orest\";\nimport {DELETE_SUCCESS} from \"../../../constants\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nconst useStyle = makeStyles(theme => ({\n    disableSlider: {\n        pointerEvents: \"none\",\n        opacity: 0.5\n    },\n    actionButtons: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        marginTop: theme.spacing(2)\n    },\n    actionButton: {\n        marginLeft: theme.spacing(1),\n        borderRadius: 20,\n    },\n}))\n\nconst marks = [{value: 0, label: '0'}, {value: 10, label: '10%'}, {value: 20, label: '20%'}, { value: 30, label: '30%'},\n    {value: 40, label: '40%'}, {value: 50, label: '50%'}, {value: 60, label: '60'}, {value: 70, label: '70%'},\n    {value: 80, label: '80%'}, { value: 90, label: '90%'}, {value: 100, label: '100%'},];\n\nconst iOSBoxShadow =\n    '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.13),0 0 0 1px rgba(0,0,0,0.02)';\n\nconst CustomSlider = withStyles({\n    root: {\n        // color: COLORS.primary,\n        height: 2,\n        padding: '15px 0',\n    },\n    thumb: {\n        height: 28,\n        width: 28,\n        backgroundColor: '#fff',\n        boxShadow: iOSBoxShadow,\n        marginTop: -14,\n        marginLeft: -14,\n        '&:focus, &:hover, &$active': {\n            boxShadow: '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.3),0 0 0 1px rgba(0,0,0,0.02)',\n            // Reset on touch devices, it doesn't add specificity\n            '@media (hover: none)': {\n                boxShadow: iOSBoxShadow,\n            },\n        },\n    },\n    active: {},\n    valueLabel: {\n        left: 'calc(-50% + 11px)',\n        top: -22,\n        '& *': {\n            background: 'transparent',\n            color: '#000',\n        },\n    },\n    track: {\n        height: 2,\n    },\n    rail: {\n        height: 2,\n        opacity: 0.5,\n        backgroundColor: '#bfbfbf',\n    },\n    mark: {\n        backgroundColor: '#bfbfbf',\n        height: 8,\n        width: 1,\n        marginTop: -3,\n    },\n    markActive: {\n        opacity: 1,\n        backgroundColor: 'currentColor',\n    },\n})(Slider)\n\nconst EditEmailSection = (props) => {\n\n    const {\n        dialogTitle,\n        section,\n        isDialogOpen,\n        state,\n        onEditSection,\n        resetRender,\n        setToState,\n        otherLangSection\n    } = props;\n\n    const [openModal, setOpenModal] = useState(isDialogOpen);\n    const [ activeStep, setActiveStep] = useState(0);\n    const [ sectionType, setSectionType ] = useState(section.type);\n    const [alertType, setAlertType] = useState('');\n    const [steps, setSteps] = useState([]);\n    const [consumeWidth, setConsumeWidth] = useState(0);\n    const [editedSection, setEditedSection] = useState(section);\n    const [isAlertDialog, setAlertDialog] = useState(false);\n    const [tmp_sectionType, setTempSectionType] = useState('');\n    const [isSave, setSave] = useState(false);\n    const [components, setComponents] = useState(section.items);\n    const [sectionID, setSectionID] = useState(section.id);\n    const [selectedComponent, setSelectedComponent] = useState(null);\n    const [newComponent, setNewComponent] = useState(null);\n    const [isNextDisable, setNextDisable] = useState(false)\n    let index = state.email.body.indexOf(editedSection);\n    const sectionTypes = [{\n        label: 'Full Section',\n        value: 'fullcol'\n    }, {\n        label: '2 Column Section',\n        value: 'twocol'\n    }, {\n        label: '3 Column Section',\n        value: 'threecol'\n    }];\n    const [sectionOrder, setSectionOrder] = useState(index + 1 || 1);\n\n    const router = useRouter();\n    const companyId = router.query.companyID;\n    const {GENERAL_SETTINGS, token} = useContext(WebCmsGlobal);\n    const authToken = token || router.query.authToken;\n\n    const classes = useStyle();\n\n    useEffect(() => {\n        if(sectionType === 'fullcol') {\n            setSteps(['Type', 'Sub Section 1']);\n        } else if(sectionType === 'twocol') {\n            setSteps(['Type', 'Sub Section 1', 'Sub Section 2']);\n        } else {\n            setSteps(['Type', 'Sub Section 1', 'Sub Section 2', 'Sub Section 3']);\n        }\n    }, [sectionType]);\n\n    useEffect(() => {\n        handleNextComponentWidth();\n    }, [editedSection, activeStep]);\n\n    const handleComponents = (data) => {\n        const updatedComponents = [...components];\n        updatedComponents[activeStep - 1] = data;\n        setComponents(updatedComponents);\n    }\n\n    const handleDisable = (isDisabled) => {\n        setNextDisable(isDisabled);\n    }\n\n    const setModalType = (component, index) => {\n        switch (component.type) {\n            case 'image':\n                return (\n                    state.langCode === state.defaultLang ? <EditImage\n                        imageComponent={component}\n                        handleCmponent={handleComponents}\n                        handleDisable={handleDisable}\n                    /> : <EditImage\n                        imageComponent={component}\n                        handleCmponent={handleComponents}\n                        otherLangImage={otherLangSection[index]}\n                        handleDisable={handleDisable}\n                    />\n                )\n            case 'paragraph':\n                return (\n                    state.langCode === state.defaultLang ?\n                        <EditParagraph\n                            paragraphComponent={component}\n                            handleCmponent={handleComponents}\n                            handleDisable={handleDisable}\n                        /> :\n                        <EditParagraph\n                            paragraphComponent={component}\n                            handleCmponent={handleComponents}\n                            otherLangParagraph={otherLangSection[index]}\n                            handleDisable={handleDisable}\n                        />\n                )\n        }\n    }\n\n    const handleCancel = () => {\n        setOpenModal(false);\n        props.resetRender();\n    }\n\n    const handleApply = () => {\n        if(isSave) {\n            const newSection = {\n                id: sectionID.toLowerCase(),\n                type: sectionType,\n                items: components\n            }\n            onEditSection(newSection, index, sectionOrder);\n            resetRender();\n            setOpenModal(false);\n        }\n    }\n\n    const handleNextSection = () => {\n\n        if(activeStep === steps.length - 1) {\n            setSave(true);\n            components.map(component => {\n                if (component.type === 'paragraph') {\n                    if (component.gid) {\n                        Patch({ // update into rafile\n                            apiUrl: GENERAL_SETTINGS.OREST_URL,\n                            endpoint: OREST_ENDPOINT.HCMITEMTXTPAR,\n                            token: authToken,\n                            gid: component.gid,\n                            data: {\n                                itemtext: component.service,\n                                hotelrefno: Number(companyId)\n                            },\n                        }).then(res => {\n                            if (res.status === 200 && res.data.data) {\n                                component.service = 'hcmitemtxtpar'\n                            }\n                        })\n                    } else {\n                        Insert({ // insert paragraph into hcmitemtxt\n                            apiUrl: GENERAL_SETTINGS.OREST_URL,\n                            endpoint: OREST_ENDPOINT.HCMITEMTXT,\n                            token: authToken,\n                            data: {\n                                itemid: state.hcmItemId,\n                                hotelrefno: Number(companyId)\n                            },\n                        }).then(res => {\n                            if(res.status === 200 && res.data.data) {\n                                Insert({ // insert textpar\n                                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                                    endpoint: OREST_ENDPOINT.HCMITEMTXTPAR,\n                                    token: authToken,\n                                    data: {\n                                        itemid: res.data.data.id,\n                                        itemtext: component.service,\n                                        hotelrefno: Number(companyId)\n                                    },\n                                }).then(res1 => {\n                                    if (res1.status === 200 && res1.data.data) {\n                                        component.service = 'hcmitemtxtpar';\n                                        component.gid = res1.data.data.gid;\n                                    }\n                                })\n                            }\n                        });\n                    }\n                }\n            })\n        } else {\n            setActiveStep(previousStep => previousStep + 1);\n        }\n    }\n\n    const handleBackSection = () => {\n        setActiveStep(previousStep => previousStep - 1);\n    }\n\n    const handleNextComponentWidth = () => {\n        let totalConsumeWidth = 0;\n        editedSection.items.map((component, index) => {\n            if (index <= activeStep - 1) {\n                totalConsumeWidth += component.width;\n            }\n        })\n        setConsumeWidth(totalConsumeWidth);\n    }\n\n    const handleComponentWidthChange = (e, value) => {\n        setConsumeWidth(value);\n    }\n\n    const handleSectionType = (event) => {\n        setAlertType('section');\n        setAlertDialog(true);\n        setTempSectionType(event.target.value);\n    }\n\n    const handleComponentType = (event, component) => {\n        if(section.type !== sectionType) {\n            const updatedSections = state.email.body;\n            const componentIndex = updatedSections[index].items.indexOf(component);\n            component.service = handleComponentService(event.target.value);\n            component.type = event.target.value;\n            updatedSections[index].items[componentIndex] = component;\n            setEditedSection(updatedSections[index]);\n            setToState('pageBuilder', ['email', 'body'], updatedSections);\n        } else {\n            setAlertType('component');\n            setAlertDialog(true);\n            setSelectedComponent(component);\n            handleNewComponent(event.target.value);\n        }\n    }\n\n    const handleComponentService = (componentType) => {\n        if(componentType === 'slider') {\n            return 'hcmitemsld'\n        } else if(componentType === 'image') {\n            return 'hcmitemimg'\n        } else if(componentType === 'widgetbooking') {\n            return 'widgetbooking'\n        } else if(componentType === 'paragraph') {\n            return 'hcmitemtxtpar'\n        } else return null;\n    }\n\n    const handleNewComponent = (componenttype) => {\n        if(componenttype === 'slider' ) {\n            setNewComponent({\n                gid: '',\n                service: 'hcmitemsld',\n                type: componenttype,\n                width: 100\n            })\n        }\n        if(componenttype === 'image' ) {\n            setNewComponent({\n                gid: '',\n                service: 'hcmitemimg',\n                type: componenttype,\n                width: 100\n            });\n        }\n        if(componenttype === 'paragraph' ) {\n            setNewComponent({\n                gid: '',\n                service: 'hcmitemtxtpar',\n                type: componenttype,\n                width: 100\n            })\n        }\n        if(componenttype === 'widgetbooking' ) {\n            setNewComponent({\n                service: '',\n                type: 'widgetbooking',\n                width: 100\n            });\n        }\n    }\n\n    const handleAlertActionChange = (isDelete) => {\n        if(isDelete) {\n            if(alertType === 'section') {\n                handleDeleteSection();\n            }\n            if(alertType === 'component') {\n                handleComponentDelete();\n            }\n        }\n        setAlertDialog(false);\n    }\n\n    const handleDeleteSection = async () => {\n        const selectedSection = state.email.body[index]\n        let req = []\n        for (let component of selectedSection.items) {\n            if (component.type === 'image') {\n                const REQUEST_OPTIONS_DELETE_HCMITEMIMG = {\n                    url:\n                        GENERAL_SETTINGS.OREST_URL +\n                        OREST_ENDPOINT.SLASH +\n                        OREST_ENDPOINT.HCMITEMIMG +\n                        OREST_ENDPOINT.SLASH +\n                        'del/' +\n                        component.gid,\n                    method: REQUEST_METHOD_CONST.DELETE,\n                    headers: {\n                        Authorization: `Bearer ${authToken}`,\n                        'Content-Type': 'application/json',\n                    },\n                    params: {\n                        hotelrefno: Number(companyId),\n                    },\n                }\n                const image = await deleteImage(REQUEST_OPTIONS_DELETE_HCMITEMIMG)\n                req.push(image)\n            }\n            if (component.type === 'paragraph') {\n                const REQUEST_OPTIONS_DELETE_HCMITEMTXTPAR = {\n                    url:\n                        GENERAL_SETTINGS.OREST_URL +\n                        OREST_ENDPOINT.SLASH +\n                        OREST_ENDPOINT.HCMITEMTXTPAR +\n                        OREST_ENDPOINT.SLASH +\n                        'del/' +\n                        component.gid,\n                    method: REQUEST_METHOD_CONST.DELETE,\n                    headers: {\n                        Authorization: `Bearer ${authToken}`,\n                        'Content-Type': 'application/json',\n                    },\n                    params: {\n                        hotelrefno: Number(companyId),\n                    },\n                }\n                const paragrapgh = await deleteParagraph(REQUEST_OPTIONS_DELETE_HCMITEMTXTPAR)\n                req.push(paragrapgh)\n            }\n        }\n        await Promise.all(req).then(async (res) => {\n            let isSuccess = true\n            await res.map((r) => {\n                if (r.status !== 200) {\n                    isSuccess = false\n                }\n            })\n            if (isSuccess) {\n                setSectionType(tmp_sectionType);\n                handleResetSection();\n                toast.success(DELETE_SUCCESS, {\n                    position: toast.POSITION.TOP_RIGHT,\n                })\n            } else {\n                toast.error('Something went wrong', {\n                    position: toast.POSITION.TOP_RIGHT,\n                })\n            }\n        })\n    }\n\n    const handleResetSection = () => {\n\n        const index = state.email.body.indexOf(section);\n        const updateSections =  state.email.body;\n        let newSection ={};\n        let initialComponents = []\n        switch (tmp_sectionType) {\n            case 'fullcol':\n                initialComponents = [{\n                    id: 'item-1',\n                    service: '',\n                    type: '',\n                    gid: '',\n                    width: 100\n                }]\n                newSection = {\n                    id: section.id,\n                    type: tmp_sectionType,\n                    items: initialComponents\n                }\n                break;\n            case 'twocol':\n                [50,50].map((value, i) => {\n                    initialComponents.push({\n                        id: 'item-'+ (i+1),\n                        service: '',\n                        type: '',\n                        gid: '',\n                        width: value\n                    });\n                })\n                newSection = {\n                    id: section.id,\n                    type: tmp_sectionType,\n                    items: initialComponents\n                }\n                break;\n            case 'threecol':\n                [30,30,40].map((value, i) => {\n                    initialComponents.push({\n                        id: 'item-'+ (i+1),\n                        service: '',\n                        type: '',\n                        gid: '',\n                        width: value\n                    });\n                })\n                newSection = {\n                    id: section.id,\n                    type: tmp_sectionType,\n                    items: initialComponents\n                }\n                break;\n        }\n        setEditedSection(newSection);\n        updateSections[index]= newSection;\n        setToState('pageBuilder', ['email', 'body'], updateSections);\n    }\n\n    const handleComponentDelete = () => {\n        const updatedSection = {...section};\n        const updatedSections = state.email.body;\n        const componentIndex = updatedSection.items.indexOf(selectedComponent);\n        updatedSection.items[componentIndex] = newComponent;\n        if(state.code.toLowerCase() === 'new page') {\n             if(selectedComponent.type === 'image') {\n                Delete({\n                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                    endpoint: OREST_ENDPOINT.HCMITEMIMG,\n                    token: authToken,\n                    gid: selectedComponent.gid,\n                    params: {\n                        hotelrefno: Number(companyId)\n                    }\n                }).then(res => {\n                    if (res.status === 200) {\n                        toast.success('Image deleted successfully', {\n                            position: toast.POSITION.TOP_RIGHT\n                        });\n                        setEditedSection(updatedSection);\n                        updatedSections[index] = updatedSection;\n                        setToState('pageBuilder', ['email', 'body'], updatedSections);\n                    } else {\n                        const retErr = isErrorMsg(res);\n                        toast.error(retErr.errorMsg, {\n                            position: toast.POSITION.TOP_RIGHT\n                        });\n                    }\n                })\n             }\n             if(selectedComponent.type === 'paragraph') {\n                setEditedSection(updatedSection);\n                updatedSections[index] = updatedSection;\n                setToState('pageBuilder', ['email', 'body'], updatedSections);\n                toast.success('Text deleted successfully', {\n                    position: toast.POSITION.TOP_RIGHT\n                });\n            }\n        } else {\n            setEditedSection(updatedSection);\n            updatedSections[index] = updatedSection;\n            setToState('pageBuilder', ['email', 'body'], updatedSections);\n        }\n    }\n\n    const deleteImage = async (header) => {\n        return new Promise(async (resv) => {\n            return await axios(header)\n                .then(async (response) => {\n                    if (response.status === 200 && response.data && response.data.success) {\n                        resv(response)\n                    } else {\n                        const retErr = isErrorMsg(response);\n                        toast.error(retErr.errorMsg, {\n                            position: toast.POSITION.TOP_RIGHT\n                        });\n                    }\n                })\n                .catch((error) => {\n                    console.log(error)\n                    resv(error.response || { status: 0 })\n                })\n        })\n    }\n\n    const deleteParagraph = async (header) => {\n        return new Promise(async (resv) => {\n            return await axios(header)\n                .then(async (response) => {\n                    if (response.status === 200 && response.data && response.data.success) {\n                        resv(response)\n                    } else {\n                        const retErr = isErrorMsg(response);\n                        toast.error(retErr.errorMsg, {\n                            position: toast.POSITION.TOP_RIGHT\n                        });\n                    }\n                })\n                .catch((error) => {\n                    console.log(error)\n                    resv(error.response || { status: 0 })\n                })\n        })\n    }\n\n    const handleSectionID = (event) => {\n        setSectionID(event.target.value);\n        if (state.type === 'email' || state.type === 'emailOnly') {\n            if (state?.email?.body?.length) {\n                setNextDisable(state.email.body.some((section, sectionIndex ) => {\n                    return (section.id === event.target.value && sectionIndex !== index)\n                }));\n            }\n        }\n    }\n\n    return(\n        <Dialog disableBackdropClick disableEnforceFocus fullWidth={true} maxWidth=\"md\" open={openModal}\n                onClose={handleCancel} aria-labelledby=\"form-dialog-title\">\n            <DialogTitle id=\"form-dialog-title\" color=\"secondary\"> {dialogTitle}\n                <hr/>\n            </DialogTitle>\n            <DialogContent>\n                <Stepper activeStep={activeStep} alternativeLabel\n                    // connector={<ColorlibConnector/>}\n                >\n                    {steps.map((label, index) => {\n                        return (\n                            <Step key={`step-${index}`}>\n                                <StepLabel color=\"secondary\"\n                                    // StepIconComponent={() => getStepsIcons(index, (pageStep === index), (pageStep > index), pageBuilderType)}\n                                >{label}</StepLabel>\n                            </Step>\n                        );\n                    })}\n                </Stepper>\n                <Container className={isSave ? classes.disableSlider : ''}>\n                    {\n                        activeStep === 0 && (\n                            <Grid container={true} justify={'center'} spacing={6} >\n                                <Grid item xs={8}>\n                                    <FormControl disabled={state.langCode !== state.defaultLang} fullWidth component=\"fieldset\" size={'small'} variant=\"outlined\">\n                                        {\n                                            sectionTypes?.length > 0 &&\n                                            <Select value={sectionType} onChange={handleSectionType}>\n                                                {sectionTypes.map((option, index) => {\n                                                    return (\n                                                        <MenuItem disabled={sectionType !== option.value} value={option.value} key={index}>\n                                                            {option.label}\n                                                        </MenuItem>\n                                                    )\n                                                })}\n                                            </Select>\n                                        }\n                                    </FormControl>\n                                </Grid>\n                                <Grid item xs={2}>\n                                    <FormControl component={'fieldset'}>\n                                        <TextField\n                                            disabled={state.langCode !== state.defaultLang}\n                                            label=\"Section ID *\" value={sectionID}\n                                            onChange={handleSectionID}\n                                            error={isNextDisable}\n                                            helperText={isNextDisable ? 'Already Exist' : ''}\n                                            variant={'outlined'}\n                                            size={'small'}\n                                        />\n                                    </FormControl>\n                                </Grid>\n                                <Grid item xs={2}>\n                                    <FormControl fullWidth component={'fieldset'}>\n                                        <TextField label=\"Order\"\n                                                   inputProps={{ min: 1, max: state?.page?.sections?.length + 1 }}\n                                                   onChange={(e) => setSectionOrder(e.target.value)}\n                                                   disabled={state.langCode !== state.defaultLang}\n                                                   value={sectionOrder}\n                                                   size={'small'}\n                                                   variant={'outlined'}\n                                                   type={'number'}\n                                        />\n                                    </FormControl>\n                                </Grid>\n                            </Grid>\n\n                        )\n                    }\n                    {\n                        state.email.body.length > 0 && state.email.body[index] &&\n                        state.email.body[index].items &&\n                        state.email.body[index].items.map((value, i) => {\n                            return (i === activeStep - 1) ? (\n                                <div key={i}>\n                                    <CustomSlider\n                                        // className={classes.disableSlider}\n                                        marks={marks}\n                                        value={consumeWidth}\n                                        onChange={handleComponentWidthChange}\n                                        style={{pointerEvents: 'none', opacity: 0.5}}\n                                    />\n                                    <FormControl\n                                        component=\"fieldset\"\n                                    >\n                                        <RadioGroup aria-label=\"component\" name=\"component\" row value={value.type}\n                                                    onChange={(e) => {\n                                                        handleComponentType(e, value);\n                                                    }}>\n                                            <FormControlLabel\n                                                value=\"image\"\n                                                control={<Radio color={'primary'}/>}\n                                                label=\"Image\"\n                                                disabled={value.type !== 'image'}\n                                            />\n                                            <FormControlLabel\n                                                value=\"paragraph\"\n                                                control={<Radio color={'primary'}/>}\n                                                label=\"Text\"\n                                                disabled={value.type !== 'paragraph'}\n                                            />\n                                        </RadioGroup>\n                                    </FormControl>\n                                    {\n                                        setModalType(value, i)\n                                    }\n                                </div>\n                            ) : null\n                        })\n                    }\n                    <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\n                        <div className={classes.actionButtons}>\n                            {\n                                activeStep !== 0 && (<Button\n                                    onClick={handleBackSection}\n                                    variant=\"contained\"\n                                    size=\"small\"\n                                    aria-label=\"add\"\n                                    className={classes.actionButton}\n                                >\n                                    BACK\n                                </Button>)\n                            }\n                            <Button\n                                onClick={handleNextSection}\n                                variant=\"contained\"\n                                size=\"small\"\n                                color=\"primary\"\n                                aria-label=\"add\"\n                                className={classes.actionButton}\n                                disabled={isNextDisable}\n                            >\n                                { activeStep === steps.length - 1 ? 'SAVE' : 'NEXT' }\n                            </Button>\n                        </div>\n                    </Grid>\n                </Container>\n                {\n                    isAlertDialog && <Alert handleAlert={handleAlertActionChange} alertType={alertType} />\n                }\n            </DialogContent>\n            <DialogActions>\n                <Button\n                    className={classes.actionButton}\n                    onClick={handleCancel}\n                    variant=\"contained\"\n                    size=\"small\"\n                    aria-label=\"add\"\n                >\n                    Cancel\n                </Button>\n                <Button\n                    onClick={handleApply}\n                    className={classes.actionButton}\n                    variant=\"contained\"\n                    size=\"small\"\n                    aria-label=\"add\"\n                    color=\"primary\"\n                    disabled={!isSave}\n                >\n                    Apply\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        state: state.formReducer.pageBuilder\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n    setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value)),\n})\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditEmailSection);\n"]},"metadata":{},"sourceType":"module"}