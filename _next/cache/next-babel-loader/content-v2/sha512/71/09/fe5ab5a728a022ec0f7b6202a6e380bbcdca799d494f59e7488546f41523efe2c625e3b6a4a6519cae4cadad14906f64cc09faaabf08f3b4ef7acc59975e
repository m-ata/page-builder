{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/components/page/sections/slider-gallery/EditSliderGallery.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Delete, Insert, Patch, UseOrest, ViewList } from \"@webcms/orest\";\nimport { FIELDTYPE, isErrorMsg, OREST_ENDPOINT, OREST_UPLOAD, REQUEST_METHOD_CONST } from \"../../../../../../../model/orest/constants\";\nimport { toast } from \"react-toastify\";\nimport WebCmsGlobal from \"components/webcms-global\";\nimport { useRouter } from \"next/router\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { COLORS, DELETE_SUCCESS, PERCENTAGE_VALUES, SAVED_SUCCESS, UPLOAD_SUCCESS, horizontalAlignments, verticalAlignments } from \"../../../../constants\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Button, Card, Container, Divider, FormControl, FormControlLabel, FormLabel, IconButton, MenuItem, Paper, Select, TextField, Typography } from \"@material-ui/core\";\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport validator from \"validator\";\nimport { DropzoneDialog } from \"material-ui-dropzone\";\nimport LoadingSpinner from \"../../../../../../LoadingSpinner\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { PercentageSlider } from \"../../../../../../../model/slider\";\nimport InputColor from \"react-input-color\";\nimport { getSliderImages, patchListSliderImage } from \"../../../../helpers/slider\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\nimport BorderColorSharpIcon from \"@material-ui/icons/BorderColorSharp\";\nimport { toSelfName } from './../../../../../../../lib/helpers/useFunction';\nimport TextEditor from \"../text-editor\";\nimport moment from \"moment\";\nimport { DatePicker, LocalizationProvider } from \"@material-ui/pickers\";\nimport MomentAdapter from \"@date-io/moment\";\nconst useStyles = makeStyles(theme => ({\n  submit: {\n    marginRight: theme.spacing(3),\n    marginTop: theme.spacing(1),\n    borderRadius: 20,\n    float: \"right\"\n  },\n  paperBlock: {\n    height: 350,\n    border: `2px solid ${COLORS === null || COLORS === void 0 ? void 0 : COLORS.secondary}`,\n    overflow: \"auto\"\n  },\n  disableEvent: {\n    pointerEvents: \"none\",\n    opacity: 0.5\n  },\n  uploadButton: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    marginLeft: theme.spacing(1),\n    borderRadius: 20,\n    float: 'right'\n  },\n  card: {\n    height: 200,\n    width: 320,\n    margin: theme.spacing(1),\n    cursor: \"pointer\"\n  },\n  alignText: {\n    textAlign: \"right\",\n    color: \"red\"\n  },\n  text: {\n    marginTop: 16,\n    fontWeight: \"bold\",\n    fontSize: 15\n  }\n}));\n\nconst EditSliderGallery = props => {\n  const {\n    sliderGallery,\n    handleCmponent,\n    langSliderGallery\n  } = props;\n  const {\n    0: localState,\n    1: setLocalState\n  } = useState({\n    isRequested: false,\n    openDialog: false,\n    title: '',\n    description: '',\n    selectedIndex: null,\n    hoverIndex: null,\n    showDeleteButton: false,\n    itemCount: 1,\n    sliderID: null,\n    sliderImages: [],\n    selectedImage: null,\n    isCta: false,\n    ctaTitle: '',\n    ctaLink: '',\n    cta: '',\n    langSliderGalleryImages: [],\n    isOptimizeImages: false,\n    quality: 50,\n    textColor: sliderGallery !== null && sliderGallery !== void 0 && sliderGallery.textColor ? sliderGallery.textColor : '#000000',\n    buttonColor: sliderGallery !== null && sliderGallery !== void 0 && sliderGallery.buttonColor ? sliderGallery.buttonColor : '#000000',\n    isDialogOpen: false,\n    editorValue: '',\n    dialogType: '',\n    ctaVerticalAlignment: '',\n    ctaHorizontalAlignment: '',\n    expiryDate: ''\n  });\n  const {\n    isRequested,\n    openDialog,\n    description,\n    title,\n    selectedIndex,\n    hoverIndex,\n    showDeleteButton,\n    itemCount,\n    sliderID,\n    sliderImages,\n    selectedImage,\n    isCta,\n    ctaLink,\n    ctaTitle,\n    cta,\n    langSliderGalleryImages,\n    quality,\n    isOptimizeImages,\n    buttonColor,\n    textColor,\n    editorValue,\n    dialogType,\n    isDialogOpen,\n    ctaHorizontalAlignment,\n    ctaVerticalAlignment,\n    expiryDate\n  } = localState;\n  const state = useSelector(state => state.formReducer.pageBuilder);\n  const classes = useStyles();\n  const router = useRouter();\n  const companyId = router.query.companyID;\n  const {\n    GENERAL_SETTINGS,\n    token\n  } = useContext(WebCmsGlobal);\n  const authToken = token || router.query.authToken;\n  useEffect(() => {\n    if ((state === null || state === void 0 ? void 0 : state.langCode) === (state === null || state === void 0 ? void 0 : state.defaultLang)) {\n      handleCmponent({\n        service: \"hcmitemsld\",\n        type: \"slider-gallery\",\n        gid: sliderGallery === null || sliderGallery === void 0 ? void 0 : sliderGallery.gid,\n        width: sliderGallery === null || sliderGallery === void 0 ? void 0 : sliderGallery.width,\n        id: sliderGallery === null || sliderGallery === void 0 ? void 0 : sliderGallery.id,\n        textColor: textColor,\n        buttonColor: buttonColor\n      });\n    } else {\n      handleCmponent({\n        sliderGallery: langSliderGalleryImages\n      });\n    }\n  }, [sliderImages, title, description, cta, langSliderGalleryImages, textColor, buttonColor]);\n  useEffect(() => {\n    if (langSliderGallery !== null && langSliderGallery !== void 0 && langSliderGallery.sliderGallery) {\n      setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        langSliderGalleryImages: langSliderGallery.sliderGallery\n      }));\n    }\n  }, [langSliderGallery]);\n  useEffect(() => {\n    if (sliderGallery !== null && sliderGallery !== void 0 && sliderGallery.gid) {\n      setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        isRequested: true\n      }));\n      ViewList({\n        apiUrl: GENERAL_SETTINGS.OREST_URL,\n        endpoint: OREST_ENDPOINT.HCMITEMSLD,\n        token: authToken,\n        params: {\n          query: `gid:${sliderGallery.gid}`,\n          hotelrefno: Number(companyId)\n        }\n      }).then(res => {\n        if ((res === null || res === void 0 ? void 0 : res.status) === 200) {\n          var _res$data3, _res$data3$data$;\n\n          setLocalState(prev => {\n            var _res$data, _res$data$data$, _res$data2, _res$data2$data$;\n\n            return _objectSpread(_objectSpread({}, prev), {}, {\n              sliderID: res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : (_res$data$data$ = _res$data.data[0]) === null || _res$data$data$ === void 0 ? void 0 : _res$data$data$.id,\n              expiryDate: res === null || res === void 0 ? void 0 : (_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : (_res$data2$data$ = _res$data2.data[0]) === null || _res$data2$data$ === void 0 ? void 0 : _res$data2$data$.expiredt\n            });\n          });\n          ViewList({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.HCMITEMIMG,\n            token: authToken,\n            params: {\n              query: `sliderid:${res === null || res === void 0 ? void 0 : (_res$data3 = res.data) === null || _res$data3 === void 0 ? void 0 : (_res$data3$data$ = _res$data3.data[0]) === null || _res$data3$data$ === void 0 ? void 0 : _res$data3$data$.id}`,\n              sort: 'orderno',\n              hotelrefno: Number(companyId)\n            }\n          }).then(res1 => {\n            if ((res1 === null || res1 === void 0 ? void 0 : res1.status) === 200) {\n              var _res1$data3, _res1$data3$data;\n\n              setLocalState(prev => {\n                var _res1$data, _res1$data2, _res1$data2$data$;\n\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  sliderImages: res1 === null || res1 === void 0 ? void 0 : (_res1$data = res1.data) === null || _res1$data === void 0 ? void 0 : _res1$data.data,\n                  isRequested: false,\n                  quality: (res1 === null || res1 === void 0 ? void 0 : (_res1$data2 = res1.data) === null || _res1$data2 === void 0 ? void 0 : (_res1$data2$data$ = _res1$data2.data[0]) === null || _res1$data2$data$ === void 0 ? void 0 : _res1$data2$data$.imgquality) * 100\n                });\n              });\n\n              if ((res1 === null || res1 === void 0 ? void 0 : (_res1$data3 = res1.data) === null || _res1$data3 === void 0 ? void 0 : (_res1$data3$data = _res1$data3.data) === null || _res1$data3$data === void 0 ? void 0 : _res1$data3$data.length) > 0) {\n                var _res1$data5;\n\n                setLocalState(prev => {\n                  var _res1$data4, _res1$data4$data;\n\n                  return _objectSpread(_objectSpread({}, prev), {}, {\n                    selectedIndex: 1,\n                    itemCount: (res1 === null || res1 === void 0 ? void 0 : (_res1$data4 = res1.data) === null || _res1$data4 === void 0 ? void 0 : (_res1$data4$data = _res1$data4.data) === null || _res1$data4$data === void 0 ? void 0 : _res1$data4$data.length) + 1\n                  });\n                });\n                handleSelectedImage(1, res1 === null || res1 === void 0 ? void 0 : (_res1$data5 = res1.data) === null || _res1$data5 === void 0 ? void 0 : _res1$data5.data[0]);\n              } else {\n                setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n                  selectedIndex: null\n                }));\n              }\n            } else {\n              const retErr = isErrorMsg(res1);\n              setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n                isRequested: false\n              }));\n              toast.error(retErr.errorMsg, {\n                position: toast.POSITION.TOP_RIGHT\n              });\n            }\n          });\n        } else {\n          const retErr = isErrorMsg(res);\n          setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n            isRequested: false\n          }));\n          toast.error(retErr.errorMsg, {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        }\n      });\n    }\n  }, [sliderGallery]);\n  useEffect(() => {\n    if (ctaTitle && ctaLink) {\n      setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        cta: `<a target=\"_blank\" href=\"${ctaLink}\" > ${ctaTitle} </a>`\n      }));\n    }\n  }, [ctaTitle, ctaLink]);\n\n  const handleSelectedImage = (index, image) => {\n    setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      selectedIndex: index,\n      selectedImage: image\n    }));\n\n    if ((state === null || state === void 0 ? void 0 : state.langCode) === (state === null || state === void 0 ? void 0 : state.defaultLang)) {\n      ViewList({\n        apiUrl: GENERAL_SETTINGS.OREST_URL,\n        endpoint: OREST_ENDPOINT.HCMITEMIMG,\n        token: authToken,\n        params: {\n          query: `gid:${image === null || image === void 0 ? void 0 : image.gid}`,\n          sort: 'orderno',\n          hotelrefno: Number(companyId)\n        }\n      }).then(res => {\n        if ((res === null || res === void 0 ? void 0 : res.status) === 200) {\n          var _res$data4, _res$data4$data;\n\n          if ((res === null || res === void 0 ? void 0 : (_res$data4 = res.data) === null || _res$data4 === void 0 ? void 0 : (_res$data4$data = _res$data4.data) === null || _res$data4$data === void 0 ? void 0 : _res$data4$data.length) > 0) {\n            setLocalState(prev => {\n              var _res$data$data$2, _res$data$data$3, _res$data$data$4, _res$data$data$5, _res$data$data$6, _res$data$data$7, _res$data$data$8;\n\n              return _objectSpread(_objectSpread({}, prev), {}, {\n                title: (_res$data$data$2 = res.data.data[0]) !== null && _res$data$data$2 !== void 0 && _res$data$data$2.title ? (_res$data$data$3 = res.data.data[0]) === null || _res$data$data$3 === void 0 ? void 0 : _res$data$data$3.title : '',\n                description: (_res$data$data$4 = res.data.data[0]) !== null && _res$data$data$4 !== void 0 && _res$data$data$4.description ? (_res$data$data$5 = res.data.data[0]) === null || _res$data$data$5 === void 0 ? void 0 : _res$data$data$5.description : '',\n                cta: (_res$data$data$6 = res.data.data[0]) === null || _res$data$data$6 === void 0 ? void 0 : _res$data$data$6.cta,\n                ctaVerticalAlignment: (_res$data$data$7 = res.data.data[0]) === null || _res$data$data$7 === void 0 ? void 0 : _res$data$data$7.alignver,\n                ctaHorizontalAlignment: (_res$data$data$8 = res.data.data[0]) === null || _res$data$data$8 === void 0 ? void 0 : _res$data$data$8.alignhor\n              });\n            });\n\n            if (res.data.data[0].cta) {\n              setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n                isCta: true\n              }));\n              const matchs = res.data.data[0].cta.match(/\\bhttps?:\\/\\/\\S+/gi);\n\n              if ((matchs === null || matchs === void 0 ? void 0 : matchs.length) > 0) {\n                const cta_title = res.data.data[0].cta.replace(`<a target=\"_blank\" href=\"`, '').replace(matchs[0], '').replace('>', '').replace('</a>', '').trim();\n                setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n                  ctaLink: matchs[0],\n                  ctaTitle: cta_title\n                }));\n              }\n            } else {\n              setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n                ctaLink: '',\n                ctaTitle: '',\n                isCta: false\n              }));\n            }\n          }\n        } else {\n          const retErr = isErrorMsg(res);\n          toast.error(retErr.errorMsg, {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        }\n      });\n    }\n\n    if ((state === null || state === void 0 ? void 0 : state.langCode) !== (state === null || state === void 0 ? void 0 : state.defaultLang)) {\n      if ((langSliderGalleryImages === null || langSliderGalleryImages === void 0 ? void 0 : langSliderGalleryImages.length) > 0) {\n        var _langSliderGalleryIma3;\n\n        setLocalState(prev => {\n          var _langSliderGalleryIma, _langSliderGalleryIma2;\n\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            title: (_langSliderGalleryIma = langSliderGalleryImages[index - 1]) === null || _langSliderGalleryIma === void 0 ? void 0 : _langSliderGalleryIma.title,\n            description: (_langSliderGalleryIma2 = langSliderGalleryImages[index - 1]) === null || _langSliderGalleryIma2 === void 0 ? void 0 : _langSliderGalleryIma2.description\n          });\n        });\n\n        if ((_langSliderGalleryIma3 = langSliderGalleryImages[index - 1]) !== null && _langSliderGalleryIma3 !== void 0 && _langSliderGalleryIma3.cta) {\n          setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n            isCta: true\n          }));\n          const matchs = langSliderGalleryImages[index - 1].cta.match(/\\bhttps?:\\/\\/\\S+/gi);\n\n          if ((matchs === null || matchs === void 0 ? void 0 : matchs.length) > 0) {\n            const cta_title = langSliderGalleryImages[0].cta.replace(`<a target=\"_blank\" href=\"`, '').replace(matchs[0], '').replace('>', '').replace('</a>', '').trim();\n            setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n              ctaLink: matchs[0],\n              ctaTitle: cta_title\n            }));\n          }\n        } else {\n          setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n            ctaLink: '',\n            ctaTitle: '',\n            isCta: false\n          }));\n        }\n      } else {\n        var _langSliderGallery$sl3;\n\n        setLocalState(prev => {\n          var _langSliderGallery$sl, _langSliderGallery$sl2;\n\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            title: langSliderGallery === null || langSliderGallery === void 0 ? void 0 : (_langSliderGallery$sl = langSliderGallery.sliderGallery[index - 1]) === null || _langSliderGallery$sl === void 0 ? void 0 : _langSliderGallery$sl.title,\n            description: langSliderGallery === null || langSliderGallery === void 0 ? void 0 : (_langSliderGallery$sl2 = langSliderGallery.sliderGallery[index - 1]) === null || _langSliderGallery$sl2 === void 0 ? void 0 : _langSliderGallery$sl2.description\n          });\n        });\n\n        if (langSliderGallery !== null && langSliderGallery !== void 0 && (_langSliderGallery$sl3 = langSliderGallery.sliderGallery[0]) !== null && _langSliderGallery$sl3 !== void 0 && _langSliderGallery$sl3.cta) {\n          setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n            isCta: true\n          }));\n          const matchs = langSliderGallery === null || langSliderGallery === void 0 ? void 0 : langSliderGallery.sliderGallery[0].cta.match(/\\bhttps?:\\/\\/\\S+/gi);\n\n          if ((matchs === null || matchs === void 0 ? void 0 : matchs.length) > 0) {\n            const cta_title = langSliderGallery === null || langSliderGallery === void 0 ? void 0 : langSliderGallery.sliderGallery[0].cta.replace(`<a target=\"_blank\" href=\"`, '').replace(matchs[0], '').replace('>', '').replace('</a>', '').trim();\n            setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n              ctaLink: matchs[0],\n              ctaTitle: cta_title\n            }));\n          }\n        } else {\n          setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n            ctaLink: '',\n            ctaTitle: '',\n            isCta: false\n          }));\n        }\n      }\n    }\n  };\n\n  const ImageUpload = (apiUrl, endPoint, token, masterID, file) => {\n    const url = apiUrl + '/' + endPoint + OREST_UPLOAD;\n    let binaryData = [];\n    binaryData.push(file);\n    let formData = new FormData();\n    formData.append('file', new Blob(binaryData, {\n      type: file.type\n    }), toSelfName(file.name));\n    const options = {\n      url: url,\n      method: 'post',\n      headers: {\n        \"Authorization\": `Bearer ${token}`,\n        'Content-Type': 'multipart/form-data'\n      },\n      params: {\n        orsactive: true,\n        masterid: masterID,\n        hotelrefno: companyId\n      },\n      data: formData\n    };\n    return axios(options).then(response => {\n      return response;\n    }).catch(error => {\n      return error.response || {\n        status: 0\n      };\n    });\n  };\n\n  const asyncUpload = (file, itemTreated, callback) => {\n    if (state.hcmItemId) {\n      setTimeout(() => {\n        Insert({\n          apiUrl: GENERAL_SETTINGS.OREST_URL,\n          endpoint: OREST_ENDPOINT.HCMITEMIMG,\n          token: authToken,\n          data: {\n            itemid: state.hcmItemId,\n            imgtype: FIELDTYPE.IMG,\n            orderno: itemTreated,\n            sliderid: sliderID,\n            hotelrefno: Number(companyId)\n          }\n        }).then(r1 => {\n          var _r1$data;\n\n          if (r1.status === 200 && r1 !== null && r1 !== void 0 && (_r1$data = r1.data) !== null && _r1$data !== void 0 && _r1$data.data) {\n            var _r1$data2;\n\n            let updatedImages = [...sliderImages];\n            updatedImages.push(r1 === null || r1 === void 0 ? void 0 : (_r1$data2 = r1.data) === null || _r1$data2 === void 0 ? void 0 : _r1$data2.data);\n            ImageUpload(GENERAL_SETTINGS.OREST_URL, OREST_ENDPOINT.RAFILE, authToken, r1.data.data.mid, file).then(r => {\n              if (r.status === 200) {\n                callback();\n              } else {\n                callback();\n              }\n            });\n          } else {\n            callback();\n          }\n        });\n      }, 100);\n    }\n  };\n\n  const handleSaveImage = files => {\n    setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      isRequested: true\n    }));\n    let orderNo = itemCount;\n    let requests = files.map(file => {\n      return new Promise(resolve => {\n        asyncUpload(file, orderNo, resolve);\n        orderNo++;\n      });\n    });\n    Promise.all(requests).then(() => {\n      ViewList({\n        apiUrl: GENERAL_SETTINGS.OREST_URL,\n        endpoint: OREST_ENDPOINT.HCMITEMIMG,\n        token: authToken,\n        params: {\n          query: `sliderid:${sliderID}`,\n          sort: 'orderno',\n          hotelrefno: Number(companyId)\n        }\n      }).then(res => {\n        setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n          isRequested: false\n        }));\n\n        if ((res === null || res === void 0 ? void 0 : res.status) === 200) {\n          var _res$data5, _res$data5$data;\n\n          let updatedImages = [];\n          res === null || res === void 0 ? void 0 : (_res$data5 = res.data) === null || _res$data5 === void 0 ? void 0 : (_res$data5$data = _res$data5.data) === null || _res$data5$data === void 0 ? void 0 : _res$data5$data.map(data => {\n            updatedImages.push(data);\n          });\n          setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n            sliderImages: updatedImages,\n            itemCount: updatedImages.length + 1,\n            openDialog: false\n          }));\n          handleSelectedImage(1, updatedImages[0]);\n          toast.success(UPLOAD_SUCCESS, {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        } else {\n          const retErr = isErrorMsg(res);\n          toast.error(retErr.errorMsg, {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        }\n      });\n    });\n  };\n\n  const handleDeleteImage = gid => {\n    setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      isRequested: true\n    }));\n    Delete({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.HCMITEMIMG,\n      token: authToken,\n      gid: gid,\n      params: {\n        hotelrefno: Number(companyId)\n      }\n    }).then(async res => {\n      if (res.status === 200) {\n        const sldImages = await getSliderImages(GENERAL_SETTINGS.OREST_URL, authToken, companyId, sliderID);\n        setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n          isRequested: false\n        }));\n\n        if (sldImages) {\n          let updatedImages = [];\n          sldImages.map((data, index) => {\n            data.orderno = index + 1;\n            updatedImages.push(data);\n          });\n          let requestPassed = true;\n\n          for (const sldImage of sldImages) {\n            const updatedSliderImage = patchListSliderImage(GENERAL_SETTINGS.OREST_URL, authToken, companyId, {\n              orderno: sldImage.orderno\n            }, {\n              hotelrefno: Number(companyId)\n            }, sldImage.gid);\n            updatedSliderImage ? requestPassed = true : requestPassed = false;\n          }\n\n          if (requestPassed) {\n            setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n              sliderImages: updatedImages,\n              selectedIndex: 1,\n              itemCount: updatedImages.length + 1\n            }));\n            handleSelectedImage(1, updatedImages[0]);\n            toast.success(DELETE_SUCCESS, {\n              position: toast.POSITION.TOP_RIGHT\n            });\n          } else {\n            setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n              selectedIndex: null\n            }));\n            toast.error('Something went wrong while deleting image. Please check network tab.', {\n              position: toast.POSITION.TOP_RIGHT\n            });\n          }\n        } else {\n          toast.warn('Something went wrong while deleting image. Please check network tab.', {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        }\n      } else {\n        const retErr = isErrorMsg(res);\n        setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n          isRequested: false\n        }));\n        toast.error(retErr.errorMsg, {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      }\n    });\n  };\n\n  const handleUpdateImage = () => {\n    setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      isRequested: true\n    }));\n\n    if ((state === null || state === void 0 ? void 0 : state.langCode) === (state === null || state === void 0 ? void 0 : state.defaultLang)) {\n      Patch({\n        // update image\n        apiUrl: GENERAL_SETTINGS.OREST_URL,\n        endpoint: OREST_ENDPOINT.HCMITEMIMG,\n        token: authToken,\n        gid: selectedImage === null || selectedImage === void 0 ? void 0 : selectedImage.gid,\n        params: {\n          hotelrefno: Number(companyId)\n        },\n        data: {\n          title: title,\n          description: description,\n          cta: cta,\n          alignhor: ctaHorizontalAlignment,\n          alignver: ctaVerticalAlignment\n        }\n      }).then(res => {\n        if (res.status === 200) {\n          setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n            isRequested: false\n          }));\n          toast.success(SAVED_SUCCESS, {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        } else {\n          setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n            isRequested: false\n          }));\n          const retErr = isErrorMsg(res);\n          toast.error(retErr.errorMsg, {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        }\n      });\n    } else {\n      const updatelangSliderGalleryImages = [...langSliderGalleryImages];\n      updatelangSliderGalleryImages[selectedIndex - 1] = {\n        title: title,\n        description: description,\n        cta: cta\n      };\n      setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        langSliderGalleryImages: updatelangSliderGalleryImages\n      }));\n      setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        isRequested: false\n      }));\n      toast.success(SAVED_SUCCESS, {\n        position: toast.POSITION.TOP_RIGHT\n      });\n    }\n  };\n\n  const handleImageQualityChange = value => {\n    if (value >= 10 && value <= 90 && value % 10 === 0) {\n      if (sliderImages.length) {\n        setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n          isRequested: true\n        }));\n        const gids = sliderImages.map(image => {\n          return {\n            gid: image.gid,\n            imgquality: value / 100,\n            imgscale: value / 100\n          };\n        });\n        UseOrest({\n          apiUrl: GENERAL_SETTINGS.OREST_URL,\n          endpoint: OREST_ENDPOINT.HCMITEMIMG + '/' + OREST_ENDPOINT.LIST + '/' + OREST_ENDPOINT.PATCH,\n          token: authToken,\n          method: REQUEST_METHOD_CONST.PATCH,\n          data: gids,\n          params: {\n            hotelrefno: Number(companyId)\n          }\n        }).then(res => {\n          var _res$data6;\n\n          if ((res === null || res === void 0 ? void 0 : res.status) === 200 && res !== null && res !== void 0 && (_res$data6 = res.data) !== null && _res$data6 !== void 0 && _res$data6.data) {\n            setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n              isRequested: false,\n              quality: value\n            }));\n          } else {\n            const retErr = isErrorMsg(res);\n            toast.error(retErr.errorMsg, {\n              position: toast.POSITION.TOP_RIGHT\n            });\n          }\n        });\n      } else {\n        setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n          quality: value\n        }));\n      }\n    }\n  };\n\n  const handleUpdateOrderNo = async (gid, orderNo, orderType) => {\n    // update order no of slider images\n    if (orderNo <= 0 || orderNo > sliderImages.length) {\n      setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        selectedIndex: null\n      }));\n    } else {\n      const tmpSliderImages = [...sliderImages];\n\n      if (orderType === 'increment') {\n        const tmp = tmpSliderImages[orderNo - 1];\n        tmpSliderImages[orderNo - 1] = tmpSliderImages[orderNo - 2];\n        tmpSliderImages[orderNo - 2] = tmp;\n      } else {\n        const tmp = tmpSliderImages[orderNo - 1];\n        tmpSliderImages[orderNo - 1] = tmpSliderImages[orderNo];\n        tmpSliderImages[orderNo] = tmp;\n      }\n\n      let updatedImages = [];\n      tmpSliderImages.map((data, index) => {\n        data.orderno = index + 1;\n        updatedImages.push(data);\n      });\n      setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        isRequested: true\n      }));\n      let requestPassed = true;\n\n      for (const sldImage of tmpSliderImages) {\n        const updatedSliderImage = patchListSliderImage(GENERAL_SETTINGS.OREST_URL, authToken, companyId, {\n          orderno: sldImage.orderno\n        }, {\n          hotelrefno: Number(companyId)\n        }, sldImage.gid);\n        updatedSliderImage ? requestPassed = true : requestPassed = false;\n      }\n\n      setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        isRequested: false\n      }));\n\n      if (requestPassed) {\n        setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n          sliderImages: updatedImages,\n          itemCount: (updatedImages === null || updatedImages === void 0 ? void 0 : updatedImages.length) + 1\n        }));\n        toast.success('Order No Updated Successfully', {\n          position: toast.POSITION.TOP_RIGHT\n        });\n        handleSelectedImage(1, tmpSliderImages[0]);\n      } else {\n        toast.error('Something went wrong while updating order no. Please check network tab.', {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      }\n    }\n  };\n\n  const handleTextEditorValue = value => {\n    if (dialogType === 'title') {\n      setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        title: value\n      }));\n    }\n\n    if (dialogType === 'description') {\n      setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        description: value\n      }));\n    }\n\n    setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      isDialogOpen: false,\n      dialogType: '',\n      editorValue: ''\n    }));\n  };\n\n  const handleCancelEditor = () => {\n    setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      isDialogOpen: false,\n      dialogType: '',\n      editorValue: ''\n    }));\n  };\n\n  const handleDialogOpen = type => {\n    if (type === 'title') {\n      setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        isDialogOpen: true,\n        dialogType: type,\n        editorValue: title\n      }));\n    }\n\n    if (type === 'description') {\n      setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        isDialogOpen: true,\n        dialogType: type,\n        editorValue: description\n      }));\n    }\n  };\n\n  const handleAlignment = (type, value) => {\n    if (type === 'horizontal') {\n      setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        ctaHorizontalAlignment: value\n      }));\n    }\n\n    if (type === 'vertical') {\n      setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        ctaVerticalAlignment: value\n      }));\n    }\n  };\n\n  const handleChangeDatePicker = date => {\n    const dateValue = moment(date).format(OREST_ENDPOINT.DATEFORMAT_LOCALE);\n    setLocalState(_objectSpread(_objectSpread({}, localState), {}, {\n      expiryDate: dateValue\n    }));\n\n    if (dateValue !== 'Invalid date') {\n      setLocalState(_objectSpread(_objectSpread({}, localState), {}, {\n        isRequested: true\n      }));\n      Patch({\n        // update slider\n        apiUrl: GENERAL_SETTINGS.OREST_URL,\n        endpoint: OREST_ENDPOINT.HCMITEMSLD,\n        token: authToken,\n        gid: sliderGallery === null || sliderGallery === void 0 ? void 0 : sliderGallery.gid,\n        params: {\n          hotelrefno: Number(companyId)\n        },\n        data: {\n          expiredt: dateValue\n        }\n      }).then(res => {\n        setLocalState(_objectSpread(_objectSpread({}, localState), {}, {\n          isRequested: false\n        }));\n\n        if (res.status === 200) {\n          toast.success(SAVED_SUCCESS, {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        } else {\n          console.log(res);\n        }\n      });\n    }\n  };\n\n  useEffect(() => console.log(expiryDate), [expiryDate]);\n\n  if (isRequested) {\n    return __jsx(LoadingSpinner, {\n      size: 50,\n      style: {\n        color: COLORS === null || COLORS === void 0 ? void 0 : COLORS.secondary\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 672,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 676,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 677,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 678,\n      columnNumber: 17\n    }\n  }, __jsx(LocalizationProvider, {\n    dateLibInstance: moment,\n    dateAdapter: MomentAdapter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 679,\n      columnNumber: 21\n    }\n  }, __jsx(DatePicker, {\n    id: \"sliderExpiryDate\",\n    name: \"sliderExpiryDate\",\n    label: 'Select Expiry',\n    value: expiryDate,\n    inputFormat: \"DD/MM/YYYY\",\n    disablePast: true,\n    onChange: handleChangeDatePicker,\n    renderInput: props => __jsx(TextField, _extends({\n      fullWidth: true\n    }, props, {\n      variant: 'filled',\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 688,\n        columnNumber: 53\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 680,\n      columnNumber: 25\n    }\n  })))), __jsx(Grid, {\n    container: true,\n    justify: 'flex-end',\n    className: isRequested ? classes.disableEvent : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 697,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 698,\n      columnNumber: 17\n    }\n  }, __jsx(FormControlLabel, {\n    className: classes.labelFont,\n    disabled: (state === null || state === void 0 ? void 0 : state.langCode) !== (state === null || state === void 0 ? void 0 : state.defaultLang),\n    control: __jsx(Checkbox, {\n      size: 'small',\n      checked: isOptimizeImages,\n      onChange: () => setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        isOptimizeImages: !isOptimizeImages\n      })),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 703,\n        columnNumber: 29\n      }\n    }),\n    label: \"Optimize Images\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 699,\n      columnNumber: 21\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 713,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 714,\n      columnNumber: 21\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 1,\n    style: {\n      marginTop: 6,\n      marginLeft: 16\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 715,\n      columnNumber: 25\n    }\n  }, __jsx(Typography, {\n    component: 'span',\n    style: {\n      marginLeft: -8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 716,\n      columnNumber: 29\n    }\n  }, \"Text\")), __jsx(Grid, {\n    item: true,\n    xs: 2,\n    style: {\n      marginTop: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 718,\n      columnNumber: 25\n    }\n  }, __jsx(InputColor, {\n    onChange: color => setLocalState(prevState => _objectSpread(_objectSpread({}, prevState), {}, {\n      textColor: color.hex\n    })),\n    placement: \"right\",\n    initialValue: textColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 719,\n      columnNumber: 29\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 2,\n    style: {\n      marginTop: 6\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 725,\n      columnNumber: 25\n    }\n  }, __jsx(Typography, {\n    component: 'span',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 726,\n      columnNumber: 29\n    }\n  }, \"Button\")), __jsx(Grid, {\n    item: true,\n    xs: 4,\n    style: {\n      marginTop: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 728,\n      columnNumber: 25\n    }\n  }, __jsx(InputColor, {\n    onChange: color => setLocalState(prevState => _objectSpread(_objectSpread({}, prevState), {}, {\n      buttonColor: color.hex\n    })),\n    placement: \"right\",\n    initialValue: buttonColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 729,\n      columnNumber: 29\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 738,\n      columnNumber: 25\n    }\n  }, __jsx(Button, {\n    onClick: () => setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      openDialog: true\n    })),\n    variant: \"contained\",\n    size: \"small\",\n    color: \"primary\",\n    \"aria-label\": \"upload\",\n    className: classes.uploadButton,\n    disabled: (state === null || state === void 0 ? void 0 : state.langCode) !== (state === null || state === void 0 ? void 0 : state.defaultLang),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 739,\n      columnNumber: 29\n    }\n  }, __jsx(CloudUploadIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 748,\n      columnNumber: 33\n    }\n  }), \"UPLOAD\"))))), isOptimizeImages && __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 756,\n      columnNumber: 37\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 757,\n      columnNumber: 21\n    }\n  }, __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 758,\n      columnNumber: 25\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 759,\n      columnNumber: 29\n    }\n  }, __jsx(PercentageSlider, {\n    marks: PERCENTAGE_VALUES,\n    value: quality,\n    onChange: (e, value) => handleImageQualityChange(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 760,\n      columnNumber: 33\n    }\n  }))))), __jsx(Grid, {\n    container: true,\n    justify: 'flex-start',\n    spacing: 3,\n    className: isRequested ? classes.disableEvent : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 770,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 771,\n      columnNumber: 17\n    }\n  }, __jsx(Paper, {\n    className: classes.paperBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 772,\n      columnNumber: 21\n    }\n  }, (sliderImages === null || sliderImages === void 0 ? void 0 : sliderImages.length) > 0 && sliderImages.map((value, index) => {\n    return __jsx(Grid, {\n      key: index,\n      container: true,\n      justify: 'center',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 776,\n        columnNumber: 37\n      }\n    }, __jsx(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 777,\n        columnNumber: 41\n      }\n    }, __jsx(Card, {\n      className: classes.card,\n      style: {\n        border: index + 1 === selectedIndex ? '2px solid red' : `1px solid ${COLORS === null || COLORS === void 0 ? void 0 : COLORS.secondary}`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 778,\n        columnNumber: 45\n      }\n    }, __jsx(\"div\", {\n      style: {\n        backgroundImage: `url(${GENERAL_SETTINGS.STATIC_URL + value.fileurl})`,\n        height: '100%',\n        width: '100%',\n        backgroundSize: 'cover',\n        borderRadius: 5\n      },\n      onMouseEnter: () => {\n        setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n          showDeleteButton: true,\n          hoverIndex: index\n        }));\n      },\n      onMouseLeave: () => {\n        setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n          showDeleteButton: false,\n          hoverIndex: index\n        }));\n      },\n      onClick: () => handleSelectedImage(index + 1, value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 783,\n        columnNumber: 49\n      }\n    }, showDeleteButton && hoverIndex === index && __jsx(IconButton, {\n      disabled: isRequested,\n      component: \"span\",\n      color: 'primary',\n      className: index === sliderImages.length - 1 || (state === null || state === void 0 ? void 0 : state.langCode) !== (state === null || state === void 0 ? void 0 : state.defaultLang) ? classes.disableEvent : '',\n      onClick: () => handleUpdateOrderNo(value.gid, value.orderno + 1, 'increment'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 807,\n        columnNumber: 101\n      }\n    }, __jsx(AddCircleIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 814,\n        columnNumber: 61\n      }\n    })), showDeleteButton && hoverIndex === index && __jsx(Typography, {\n      component: \"span\",\n      color: 'primary',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 818,\n        columnNumber: 101\n      }\n    }, value.orderno), showDeleteButton && hoverIndex === index && __jsx(IconButton, {\n      disabled: isRequested,\n      component: \"span\",\n      color: 'primary',\n      className: index === 0 || (state === null || state === void 0 ? void 0 : state.langCode) !== (state === null || state === void 0 ? void 0 : state.defaultLang) ? classes.disableEvent : '',\n      onClick: () => handleUpdateOrderNo(value.gid, value.orderno - 1, 'decrement'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 826,\n        columnNumber: 101\n      }\n    }, __jsx(RemoveCircleIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 833,\n        columnNumber: 61\n      }\n    })), showDeleteButton && hoverIndex === index && __jsx(IconButton, {\n      onClick: () => handleDeleteImage(value.gid),\n      disabled: isRequested || (state === null || state === void 0 ? void 0 : state.langCode) !== (state === null || state === void 0 ? void 0 : state.defaultLang),\n      \"aria-label\": \"upload picture\",\n      component: \"span\",\n      style: {\n        float: \"right\"\n      },\n      color: 'primary',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 837,\n        columnNumber: 101\n      }\n    }, __jsx(CancelIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 845,\n        columnNumber: 61\n      }\n    }))))));\n  }))), __jsx(Grid, {\n    item: true,\n    xs: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 857,\n      columnNumber: 17\n    }\n  }, __jsx(Paper, {\n    className: classes.paperBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 858,\n      columnNumber: 21\n    }\n  }, selectedIndex && __jsx(React.Fragment, null, __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 862,\n      columnNumber: 33\n    }\n  }, __jsx(Grid, {\n    container: true,\n    justify: 'flex-start',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 863,\n      columnNumber: 37\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 864,\n      columnNumber: 41\n    }\n  }, __jsx(Typography, {\n    component: 'h6',\n    variant: 'h6',\n    className: classes.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 865,\n      columnNumber: 45\n    }\n  }, \"Title\")), __jsx(Grid, {\n    item: true,\n    xs: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 873,\n      columnNumber: 41\n    }\n  }, __jsx(IconButton, {\n    \"aria-label\": \"Edit Title\",\n    color: \"primary\",\n    onClick: () => handleDialogOpen('title'),\n    style: {\n      float: 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 874,\n      columnNumber: 45\n    }\n  }, __jsx(BorderColorSharpIcon, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 880,\n      columnNumber: 49\n    }\n  }))))), __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 885,\n      columnNumber: 33\n    }\n  }, __jsx(Grid, {\n    container: true,\n    justify: 'flex-start',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 886,\n      columnNumber: 37\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 887,\n      columnNumber: 41\n    }\n  }, __jsx(Typography, {\n    component: 'h6',\n    variant: 'h6',\n    className: classes.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 888,\n      columnNumber: 45\n    }\n  }, \"Description\")), __jsx(Grid, {\n    item: true,\n    xs: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 896,\n      columnNumber: 41\n    }\n  }, __jsx(IconButton, {\n    \"aria-label\": \"Edit Title\",\n    color: \"primary\",\n    onClick: () => handleDialogOpen('description'),\n    style: {\n      float: 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 897,\n      columnNumber: 45\n    }\n  }, __jsx(BorderColorSharpIcon, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 903,\n      columnNumber: 49\n    }\n  }))))), __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 908,\n      columnNumber: 33\n    }\n  }, __jsx(Grid, {\n    container: true,\n    justify: 'flex-start',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 909,\n      columnNumber: 37\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 11,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 910,\n      columnNumber: 41\n    }\n  }, __jsx(Typography, {\n    component: 'h6',\n    variant: 'h6',\n    className: classes.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 911,\n      columnNumber: 45\n    }\n  }, \"Do you want to add button for image ?\")), __jsx(Grid, {\n    item: true,\n    xs: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 919,\n      columnNumber: 41\n    }\n  }, __jsx(Typography, {\n    component: 'div',\n    style: {\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 920,\n      columnNumber: 45\n    }\n  }, __jsx(Switch, {\n    size: 'small',\n    checked: isCta,\n    onChange: () => {\n      setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        cta: '',\n        isCta: !isCta,\n        ctaTitle: '',\n        ctaLink: ''\n      }));\n    },\n    inputProps: {\n      'aria-label': 'secondary checkbox'\n    },\n    color: 'primary',\n    disabled: state.langCode !== (state === null || state === void 0 ? void 0 : state.defaultLang),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 921,\n      columnNumber: 49\n    }\n  }))))), isCta && __jsx(React.Fragment, null, __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 944,\n      columnNumber: 41\n    }\n  }, __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 945,\n      columnNumber: 45\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 946,\n      columnNumber: 49\n    }\n  }, __jsx(FormLabel, {\n    id: \"align-horizontal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 947,\n      columnNumber: 53\n    }\n  }, \"Horizontal Alignment :\")), __jsx(Grid, {\n    item: true,\n    xs: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 949,\n      columnNumber: 49\n    }\n  }, __jsx(FormControl, {\n    variant: \"outlined\",\n    size: 'small',\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 950,\n      columnNumber: 53\n    }\n  }, __jsx(Select, {\n    value: ctaHorizontalAlignment,\n    onChange: e => handleAlignment('horizontal', e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 951,\n      columnNumber: 57\n    }\n  }, horizontalAlignments.map((align, index) => {\n    return __jsx(MenuItem, {\n      value: align.value,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 954,\n        columnNumber: 69\n      }\n    }, ' ', align.text, ' ');\n  }))))), __jsx(Grid, {\n    container: true,\n    style: {\n      marginTop: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 964,\n      columnNumber: 45\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 965,\n      columnNumber: 49\n    }\n  }, __jsx(FormLabel, {\n    id: \"align-vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 966,\n      columnNumber: 53\n    }\n  }, \"Vertical Alignment : \")), __jsx(Grid, {\n    item: true,\n    xs: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 968,\n      columnNumber: 49\n    }\n  }, __jsx(FormControl, {\n    variant: \"outlined\",\n    size: 'small',\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 969,\n      columnNumber: 53\n    }\n  }, __jsx(Select, {\n    value: ctaVerticalAlignment,\n    onChange: e => handleAlignment('vertical', e.target.value),\n    label: \"Vertical Alignment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 970,\n      columnNumber: 57\n    }\n  }, verticalAlignments.map((align, index) => {\n    return __jsx(MenuItem, {\n      value: align.value,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 977,\n        columnNumber: 69\n      }\n    }, ' ', align.text, ' ');\n  })))))), __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 988,\n      columnNumber: 41\n    }\n  }, __jsx(Grid, {\n    container: true,\n    justify: 'flex-start',\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 989,\n      columnNumber: 45\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 990,\n      columnNumber: 49\n    }\n  }, __jsx(TextField, {\n    size: 'small',\n    id: \"button-title\",\n    variant: \"outlined\",\n    label: 'Title',\n    value: ctaTitle,\n    fullWidth: true,\n    onChange: e => {\n      const {\n        value\n      } = e === null || e === void 0 ? void 0 : e.target;\n      setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        ctaTitle: value\n      }));\n    },\n    style: {\n      marginTop: 8\n    },\n    helperText: ctaTitle && __jsx(Typography, {\n      variant: \"caption\",\n      className: classes.alignText,\n      display: \"block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1004,\n        columnNumber: 73\n      }\n    }, `${ctaTitle === null || ctaTitle === void 0 ? void 0 : ctaTitle.length} < 100`),\n    inputProps: {\n      maxLength: 99\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 991,\n      columnNumber: 53\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1015,\n      columnNumber: 49\n    }\n  }, __jsx(TextField, {\n    size: 'small',\n    id: \"button-link\",\n    variant: \"outlined\",\n    label: 'Link',\n    value: ctaLink,\n    error: ctaLink ? !validator.isURL(ctaLink) : false,\n    onChange: e => {\n      const {\n        value\n      } = e === null || e === void 0 ? void 0 : e.target;\n      setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        ctaLink: value\n      }));\n    },\n    style: {\n      marginTop: 8\n    },\n    fullWidth: true,\n    helperText: ctaLink && __jsx(Typography, {\n      variant: \"caption\",\n      className: classes.alignText,\n      display: \"block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1030,\n        columnNumber: 72\n      }\n    }, `${ctaLink === null || ctaLink === void 0 ? void 0 : ctaLink.length} < 100`),\n    inputProps: {\n      maxLength: 99\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1016,\n      columnNumber: 53\n    }\n  }))))), __jsx(Divider, {\n    style: {\n      marginTop: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1045,\n      columnNumber: 33\n    }\n  }), __jsx(Button, {\n    onClick: handleUpdateImage,\n    variant: \"contained\",\n    size: \"small\",\n    color: \"primary\",\n    \"aria-label\": \"add\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1046,\n      columnNumber: 33\n    }\n  }, \"SUBMIT\"))))), __jsx(DropzoneDialog, {\n    open: openDialog,\n    onSave: handleSaveImage,\n    acceptedFiles: ['image/jpeg', 'image/png', 'image/bmp'],\n    showPreviews: true,\n    maxFileSize: 5000000,\n    filesLimit: 5,\n    onClose: () => setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      openDialog: false\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1061,\n      columnNumber: 13\n    }\n  }), isDialogOpen && __jsx(TextEditor, {\n    handleSaveTextEditor: handleTextEditorValue,\n    handleCancelTextEditor: handleCancelEditor,\n    data: editorValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1072,\n      columnNumber: 17\n    }\n  }));\n};\n\nexport default EditSliderGallery;","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/components/page/sections/slider-gallery/EditSliderGallery.js"],"names":["React","useContext","useEffect","useState","Delete","Insert","Patch","UseOrest","ViewList","FIELDTYPE","isErrorMsg","OREST_ENDPOINT","OREST_UPLOAD","REQUEST_METHOD_CONST","toast","WebCmsGlobal","useRouter","makeStyles","COLORS","DELETE_SUCCESS","PERCENTAGE_VALUES","SAVED_SUCCESS","UPLOAD_SUCCESS","horizontalAlignments","verticalAlignments","Grid","Button","Card","Container","Divider","FormControl","FormControlLabel","FormLabel","IconButton","MenuItem","Paper","Select","TextField","Typography","CloudUploadIcon","CancelIcon","Switch","validator","DropzoneDialog","LoadingSpinner","axios","useSelector","Checkbox","PercentageSlider","InputColor","getSliderImages","patchListSliderImage","AddCircleIcon","RemoveCircleIcon","BorderColorSharpIcon","toSelfName","TextEditor","moment","DatePicker","LocalizationProvider","MomentAdapter","useStyles","theme","submit","marginRight","spacing","marginTop","borderRadius","float","paperBlock","height","border","secondary","overflow","disableEvent","pointerEvents","opacity","uploadButton","marginBottom","marginLeft","card","width","margin","cursor","alignText","textAlign","color","text","fontWeight","fontSize","EditSliderGallery","props","sliderGallery","handleCmponent","langSliderGallery","localState","setLocalState","isRequested","openDialog","title","description","selectedIndex","hoverIndex","showDeleteButton","itemCount","sliderID","sliderImages","selectedImage","isCta","ctaTitle","ctaLink","cta","langSliderGalleryImages","isOptimizeImages","quality","textColor","buttonColor","isDialogOpen","editorValue","dialogType","ctaVerticalAlignment","ctaHorizontalAlignment","expiryDate","state","formReducer","pageBuilder","classes","router","companyId","query","companyID","GENERAL_SETTINGS","token","authToken","langCode","defaultLang","service","type","gid","id","prev","apiUrl","OREST_URL","endpoint","HCMITEMSLD","params","hotelrefno","Number","then","res","status","data","expiredt","HCMITEMIMG","sort","res1","imgquality","length","handleSelectedImage","retErr","error","errorMsg","position","POSITION","TOP_RIGHT","index","image","alignver","alignhor","matchs","match","cta_title","replace","trim","ImageUpload","endPoint","masterID","file","url","binaryData","push","formData","FormData","append","Blob","name","options","method","headers","orsactive","masterid","response","catch","asyncUpload","itemTreated","callback","hcmItemId","setTimeout","itemid","imgtype","IMG","orderno","sliderid","r1","updatedImages","RAFILE","mid","r","handleSaveImage","files","orderNo","requests","map","Promise","resolve","all","success","handleDeleteImage","sldImages","requestPassed","sldImage","updatedSliderImage","warn","handleUpdateImage","updatelangSliderGalleryImages","handleImageQualityChange","value","gids","imgscale","LIST","PATCH","handleUpdateOrderNo","orderType","tmpSliderImages","tmp","handleTextEditorValue","handleCancelEditor","handleDialogOpen","handleAlignment","handleChangeDatePicker","date","dateValue","format","DATEFORMAT_LOCALE","console","log","labelFont","prevState","hex","e","backgroundImage","STATIC_URL","fileurl","backgroundSize","target","align","maxLength","isURL"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\nimport {Delete, Insert, Patch, UseOrest, ViewList} from \"@webcms/orest\";\nimport {\n    FIELDTYPE,\n    isErrorMsg,\n    OREST_ENDPOINT,\n    OREST_UPLOAD,\n    REQUEST_METHOD_CONST\n} from \"../../../../../../../model/orest/constants\";\nimport {toast} from \"react-toastify\";\nimport WebCmsGlobal from \"components/webcms-global\";\nimport {useRouter} from \"next/router\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {\n    COLORS,\n    DELETE_SUCCESS,\n    PERCENTAGE_VALUES,\n    SAVED_SUCCESS,\n    UPLOAD_SUCCESS,\n    horizontalAlignments,\n    verticalAlignments\n} from \"../../../../constants\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n    Button,\n    Card,\n    Container,\n    Divider, FormControl,\n    FormControlLabel, FormLabel,\n    IconButton, MenuItem,\n    Paper, Select,\n    TextField,\n    Typography\n} from \"@material-ui/core\";\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport validator from \"validator\";\nimport {DropzoneDialog} from \"material-ui-dropzone\";\nimport LoadingSpinner from \"../../../../../../LoadingSpinner\";\nimport axios from \"axios\";\nimport {useSelector} from \"react-redux\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport {PercentageSlider} from \"../../../../../../../model/slider\";\nimport InputColor from \"react-input-color\";\nimport {getSliderImages, patchListSliderImage} from \"../../../../helpers/slider\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\nimport BorderColorSharpIcon from \"@material-ui/icons/BorderColorSharp\";\nimport { toSelfName } from './../../../../../../../lib/helpers/useFunction';\nimport TextEditor from \"../text-editor\";\nimport moment from \"moment\";\nimport {DatePicker, LocalizationProvider} from \"@material-ui/pickers\";\nimport MomentAdapter from \"@date-io/moment\";\n\nconst useStyles = makeStyles(theme => ({\n    submit: {\n        marginRight: theme.spacing(3),\n        marginTop: theme.spacing(1),\n        borderRadius: 20,\n        float: \"right\"\n    },\n    paperBlock: {\n        height: 350,\n        border: `2px solid ${COLORS?.secondary}`,\n        overflow: \"auto\"\n    },\n    disableEvent: {\n        pointerEvents: \"none\",\n        opacity: 0.5\n    },\n    uploadButton: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n        marginLeft: theme.spacing(1),\n        borderRadius: 20,\n        float: 'right'\n    },\n    card: {\n        height: 200,\n        width: 320,\n        margin: theme.spacing(1),\n        cursor: \"pointer\"\n    },\n    alignText: {\n        textAlign: \"right\",\n        color: \"red\"\n    },\n    text: {\n        marginTop: 16,\n        fontWeight: \"bold\",\n        fontSize: 15\n    }\n}));\n\nconst EditSliderGallery = (props) => {\n\n    const {sliderGallery, handleCmponent, langSliderGallery} = props;\n\n    const [localState, setLocalState] = useState({\n        isRequested: false,\n        openDialog: false,\n        title: '',\n        description: '',\n        selectedIndex: null,\n        hoverIndex: null,\n        showDeleteButton: false,\n        itemCount: 1,\n        sliderID: null,\n        sliderImages: [],\n        selectedImage: null,\n        isCta: false,\n        ctaTitle: '',\n        ctaLink: '',\n        cta: '',\n        langSliderGalleryImages: [],\n        isOptimizeImages: false,\n        quality: 50,\n        textColor: sliderGallery?.textColor ? sliderGallery.textColor : '#000000',\n        buttonColor: sliderGallery?.buttonColor ? sliderGallery.buttonColor : '#000000',\n        isDialogOpen: false,\n        editorValue: '',\n        dialogType: '',\n        ctaVerticalAlignment: '',\n        ctaHorizontalAlignment: '',\n        expiryDate: ''\n    });\n    const {\n        isRequested, openDialog, description, title, selectedIndex,\n        hoverIndex, showDeleteButton, itemCount, sliderID, sliderImages,\n        selectedImage, isCta, ctaLink, ctaTitle, cta, langSliderGalleryImages, quality,\n        isOptimizeImages, buttonColor, textColor, editorValue, dialogType, isDialogOpen,\n        ctaHorizontalAlignment, ctaVerticalAlignment, expiryDate\n    } = localState;\n    const state = useSelector(state => state.formReducer.pageBuilder);\n\n    const classes = useStyles();\n\n    const router = useRouter();\n    const companyId = router.query.companyID;\n    const {GENERAL_SETTINGS, token} = useContext(WebCmsGlobal);\n    const authToken = token || router.query.authToken;\n\n    useEffect(() => {\n        if (state?.langCode === state?.defaultLang) {\n            handleCmponent({\n                service: \"hcmitemsld\",\n                type: \"slider-gallery\",\n                gid: sliderGallery?.gid,\n                width: sliderGallery?.width,\n                id: sliderGallery?.id,\n                textColor: textColor,\n                buttonColor: buttonColor\n            });\n        } else {\n            handleCmponent({\n                sliderGallery: langSliderGalleryImages\n            })\n        }\n    }, [sliderImages, title, description, cta, langSliderGalleryImages, textColor, buttonColor]);\n\n    useEffect(() => {\n        if (langSliderGallery?.sliderGallery) {\n            setLocalState(prev => ({...prev, langSliderGalleryImages: langSliderGallery.sliderGallery}))\n        }\n    }, [langSliderGallery]);\n\n    useEffect(() => {\n        if (sliderGallery?.gid) {\n            setLocalState(prev => ({...prev, isRequested: true}))\n            ViewList({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: OREST_ENDPOINT.HCMITEMSLD,\n                token: authToken,\n                params: {\n                    query: `gid:${sliderGallery.gid}`,\n                    hotelrefno: Number(companyId)\n                }\n            }).then(res => {\n                if (res?.status === 200) {\n                    setLocalState(prev => ({...prev, sliderID: res?.data?.data[0]?.id, expiryDate: res?.data?.data[0]?.expiredt}));\n                    ViewList({\n                        apiUrl: GENERAL_SETTINGS.OREST_URL,\n                        endpoint: OREST_ENDPOINT.HCMITEMIMG,\n                        token: authToken,\n                        params: {\n                            query: `sliderid:${res?.data?.data[0]?.id}`,\n                            sort: 'orderno',\n                            hotelrefno: Number(companyId)\n                        }\n                    }).then(res1 => {\n                        if (res1?.status === 200) {\n                            setLocalState(prev => ({\n                                ...prev,\n                                sliderImages: res1?.data?.data,\n                                isRequested: false,\n                                quality: (res1?.data?.data[0]?.imgquality * 100)\n                            }));\n                            if (res1?.data?.data?.length > 0) {\n                                setLocalState(prev => ({\n                                    ...prev,\n                                    selectedIndex: 1,\n                                    itemCount: res1?.data?.data?.length + 1\n                                }));\n                                handleSelectedImage(1, res1?.data?.data[0]);\n                            } else {\n                                setLocalState(prev => ({...prev, selectedIndex: null}));\n                            }\n                        } else {\n                            const retErr = isErrorMsg(res1);\n                            setLocalState(prev => ({...prev, isRequested: false}))\n                            toast.error(retErr.errorMsg, {\n                                position: toast.POSITION.TOP_RIGHT\n                            });\n                        }\n                    })\n                } else {\n                    const retErr = isErrorMsg(res);\n                    setLocalState(prev => ({...prev, isRequested: false}))\n                    toast.error(retErr.errorMsg, {\n                        position: toast.POSITION.TOP_RIGHT\n                    });\n                }\n            })\n        }\n    }, [sliderGallery]);\n\n    useEffect(() => {\n        if (ctaTitle && ctaLink) {\n            setLocalState(prev => ({...prev, cta: `<a target=\"_blank\" href=\"${ctaLink}\" > ${ctaTitle} </a>`}));\n        }\n    }, [ctaTitle, ctaLink]);\n\n    const handleSelectedImage = (index, image) => {\n        setLocalState(prev => ({...prev, selectedIndex: index, selectedImage: image}));\n        if (state?.langCode === state?.defaultLang) {\n            ViewList({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: OREST_ENDPOINT.HCMITEMIMG,\n                token: authToken,\n                params: {\n                    query: `gid:${image?.gid}`,\n                    sort: 'orderno',\n                    hotelrefno: Number(companyId)\n                }\n            }).then(res => {\n                if (res?.status === 200) {\n                    if (res?.data?.data?.length > 0) {\n                        setLocalState(prev => ({\n                            ...prev, title: res.data.data[0]?.title ? res.data.data[0]?.title : '',\n                            description: res.data.data[0]?.description ? res.data.data[0]?.description : '',\n                            cta: res.data.data[0]?.cta, ctaVerticalAlignment: res.data.data[0]?.alignver,\n                            ctaHorizontalAlignment: res.data.data[0]?.alignhor\n                        }));\n                        if (res.data.data[0].cta) {\n                            setLocalState(prev => ({...prev, isCta: true}));\n                            const matchs = res.data.data[0].cta.match(/\\bhttps?:\\/\\/\\S+/gi)\n                            if (matchs?.length > 0) {\n                                const cta_title = res.data.data[0].cta.replace(`<a target=\"_blank\" href=\"`,\n                                    '').replace(matchs[0], '').replace('>',\n                                    '').replace('</a>', '').trim();\n                                setLocalState(prev => ({...prev, ctaLink: matchs[0], ctaTitle: cta_title}));\n                            }\n                        } else {\n                            setLocalState(prev => ({...prev, ctaLink: '', ctaTitle: '', isCta: false}));\n                        }\n                    }\n                } else {\n                    const retErr = isErrorMsg(res);\n                    toast.error(retErr.errorMsg, {\n                        position: toast.POSITION.TOP_RIGHT\n                    });\n                }\n            })\n        }\n        if (state?.langCode !== state?.defaultLang) {\n            if (langSliderGalleryImages?.length > 0) {\n                setLocalState(prev => ({\n                    ...prev,\n                    title: langSliderGalleryImages[index - 1]?.title,\n                    description: langSliderGalleryImages[index - 1]?.description\n                }))\n                if (langSliderGalleryImages[index - 1]?.cta) {\n                    setLocalState(prev => ({...prev, isCta: true}));\n                    const matchs = langSliderGalleryImages[index - 1].cta.match(/\\bhttps?:\\/\\/\\S+/gi)\n                    if (matchs?.length > 0) {\n                        const cta_title = langSliderGalleryImages[0].cta.replace(`<a target=\"_blank\" href=\"`,\n                            '').replace(matchs[0], '').replace('>',\n                            '').replace('</a>', '').trim();\n                        setLocalState(prev => ({...prev, ctaLink: matchs[0], ctaTitle: cta_title}));\n                    }\n                } else {\n                    setLocalState(prev => ({...prev, ctaLink: '', ctaTitle: '', isCta: false}));\n                }\n            } else {\n                setLocalState(prev => ({\n                    ...prev, title: langSliderGallery?.sliderGallery[index - 1]?.title,\n                    description: langSliderGallery?.sliderGallery[index - 1]?.description\n                }));\n                if (langSliderGallery?.sliderGallery[0]?.cta) {\n                    setLocalState(prev => ({...prev, isCta: true}));\n                    const matchs = langSliderGallery?.sliderGallery[0].cta.match(/\\bhttps?:\\/\\/\\S+/gi)\n                    if (matchs?.length > 0) {\n                        const cta_title = langSliderGallery?.sliderGallery[0].cta.replace(`<a target=\"_blank\" href=\"`,\n                            '').replace(matchs[0], '').replace('>',\n                            '').replace('</a>', '').trim();\n                        setLocalState(prev => ({...prev, ctaLink: matchs[0], ctaTitle: cta_title}));\n                    }\n                } else {\n                    setLocalState(prev => ({...prev, ctaLink: '', ctaTitle: '', isCta: false}));\n                }\n            }\n        }\n    }\n\n    const ImageUpload = (apiUrl, endPoint, token, masterID, file) => {\n        const url = apiUrl + '/' + endPoint + OREST_UPLOAD;\n        let binaryData = [];\n        binaryData.push(file);\n        let formData = new FormData();\n        formData.append('file', new Blob(binaryData, {type: file.type}), toSelfName(file.name));\n\n        const options = {\n            url: url,\n            method: 'post',\n            headers: {\n                \"Authorization\": `Bearer ${token}`,\n                'Content-Type': 'multipart/form-data'\n            },\n            params: {\n                orsactive: true,\n                masterid: masterID,\n                hotelrefno: companyId,\n            },\n            data: formData\n        };\n\n        return axios(options).then(response => {\n            return response\n        }).catch(error => {\n            return error.response || {status: 0};\n        });\n    };\n\n    const asyncUpload = (file, itemTreated, callback) => {\n        if (state.hcmItemId) {\n            setTimeout(() => {\n                Insert({\n                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                    endpoint: OREST_ENDPOINT.HCMITEMIMG,\n                    token: authToken,\n                    data: {\n                        itemid: state.hcmItemId,\n                        imgtype: FIELDTYPE.IMG,\n                        orderno: itemTreated,\n                        sliderid: sliderID,\n                        hotelrefno: Number(companyId)\n                    },\n                }).then(r1 => {\n                    if (r1.status === 200 && r1?.data?.data) {\n                        let updatedImages = [...sliderImages];\n                        updatedImages.push(r1?.data?.data);\n                        ImageUpload(\n                            GENERAL_SETTINGS.OREST_URL,\n                            OREST_ENDPOINT.RAFILE,\n                            authToken,\n                            r1.data.data.mid,\n                            file\n                        ).then(r => {\n                            if (r.status === 200) {\n                                callback();\n                            } else {\n                                callback();\n                            }\n                        });\n                    } else {\n                        callback();\n                    }\n                });\n            }, 100);\n        }\n    }\n\n    const handleSaveImage = (files) => {\n        setLocalState(prev => ({...prev, isRequested: true}))\n        let orderNo = itemCount;\n        let requests = files.map((file) => {\n            return new Promise((resolve) => {\n                asyncUpload(file, orderNo, resolve);\n                orderNo++;\n            });\n        });\n\n        Promise.all(requests).then(() => {\n            ViewList({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: OREST_ENDPOINT.HCMITEMIMG,\n                token: authToken,\n                params: {\n                    query: `sliderid:${sliderID}`,\n                    sort: 'orderno',\n                    hotelrefno: Number(companyId)\n                }\n            }).then(res => {\n                setLocalState(prev => ({...prev, isRequested: false}))\n                if (res?.status === 200) {\n                    let updatedImages = [];\n                    res?.data?.data?.map((data) => {\n                        updatedImages.push(data);\n                    });\n                    setLocalState(prev => ({\n                        ...prev,\n                        sliderImages: updatedImages,\n                        itemCount: updatedImages.length + 1,\n                        openDialog: false\n                    }));\n                    handleSelectedImage(1, updatedImages[0]);\n                    toast.success(UPLOAD_SUCCESS, {\n                        position: toast.POSITION.TOP_RIGHT\n                    });\n                } else {\n                    const retErr = isErrorMsg(res);\n                    toast.error(retErr.errorMsg, {\n                        position: toast.POSITION.TOP_RIGHT\n                    });\n                }\n            });\n        });\n    }\n\n    const handleDeleteImage = (gid) => {\n        setLocalState(prev => ({...prev, isRequested: true}))\n        Delete({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.HCMITEMIMG,\n            token: authToken,\n            gid: gid,\n            params: {\n                hotelrefno: Number(companyId)\n            }\n        }).then(async res => {\n            if (res.status === 200) {\n                const sldImages = await getSliderImages(GENERAL_SETTINGS.OREST_URL, authToken, companyId, sliderID);\n                setLocalState(prev => ({...prev, isRequested: false}));\n                if (sldImages) {\n                    let updatedImages = [];\n                    sldImages.map((data, index) => {\n                        data.orderno = index + 1;\n                        updatedImages.push(data);\n                    });\n                    let requestPassed = true;\n                    for (const sldImage of sldImages) {\n                        const updatedSliderImage = patchListSliderImage(GENERAL_SETTINGS.OREST_URL, authToken, companyId, {orderno: sldImage.orderno}, {hotelrefno: Number(companyId)}, sldImage.gid);\n                        updatedSliderImage ? requestPassed = true : requestPassed = false;\n                    }\n                    if (requestPassed) {\n                        setLocalState(prev => ({\n                            ...prev,\n                            sliderImages: updatedImages,\n                            selectedIndex: 1,\n                            itemCount: updatedImages.length + 1\n                        }));\n                        handleSelectedImage(1, updatedImages[0]);\n                        toast.success(DELETE_SUCCESS, {\n                            position: toast.POSITION.TOP_RIGHT\n                        });\n                    } else {\n                        setLocalState(prev => ({...prev, selectedIndex: null}));\n                        toast.error('Something went wrong while deleting image. Please check network tab.', {\n                            position: toast.POSITION.TOP_RIGHT\n                        });\n                    }\n                } else {\n                    toast.warn('Something went wrong while deleting image. Please check network tab.', {\n                        position: toast.POSITION.TOP_RIGHT\n                    });\n                }\n            } else {\n                const retErr = isErrorMsg(res);\n                setLocalState(prev => ({...prev, isRequested: false}))\n                toast.error(retErr.errorMsg, {\n                    position: toast.POSITION.TOP_RIGHT\n                });\n            }\n        });\n    }\n\n    const handleUpdateImage = () => {\n        setLocalState(prev => ({...prev, isRequested: true}));\n        if (state?.langCode === state?.defaultLang) {\n            Patch({ // update image\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: OREST_ENDPOINT.HCMITEMIMG,\n                token: authToken,\n                gid: selectedImage?.gid,\n                params: {\n                    hotelrefno: Number(companyId),\n                },\n                data: {\n                    title: title,\n                    description: description,\n                    cta: cta,\n                    alignhor: ctaHorizontalAlignment,\n                    alignver: ctaVerticalAlignment\n                }\n            }).then(res => {\n                if (res.status === 200) {\n                    setLocalState(prev => ({...prev, isRequested: false}));\n                    toast.success(SAVED_SUCCESS, {\n                        position: toast.POSITION.TOP_RIGHT\n                    });\n                } else {\n                    setLocalState(prev => ({...prev, isRequested: false}));\n                    const retErr = isErrorMsg(res);\n                    toast.error(retErr.errorMsg, {\n                        position: toast.POSITION.TOP_RIGHT\n                    });\n                }\n            })\n        } else {\n            const updatelangSliderGalleryImages = [...langSliderGalleryImages];\n            updatelangSliderGalleryImages[selectedIndex - 1] = {\n                title: title,\n                description: description,\n                cta: cta\n            }\n            setLocalState(prev => ({...prev, langSliderGalleryImages: updatelangSliderGalleryImages}));\n            setLocalState(prev => ({...prev, isRequested: false}));\n            toast.success(SAVED_SUCCESS, {\n                position: toast.POSITION.TOP_RIGHT\n            });\n        }\n    }\n\n    const handleImageQualityChange = (value) => {\n        if (value >= 10 && value <= 90 && value % 10 === 0) {\n            if (sliderImages.length) {\n                setLocalState(prev => ({...prev, isRequested: true}));\n                const gids = sliderImages.map(image => {\n                    return {gid: image.gid, imgquality: value / 100, imgscale: value / 100};\n                });\n                UseOrest({\n                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                    endpoint: OREST_ENDPOINT.HCMITEMIMG + '/' + OREST_ENDPOINT.LIST + '/' + OREST_ENDPOINT.PATCH,\n                    token: authToken,\n                    method: REQUEST_METHOD_CONST.PATCH,\n                    data: gids,\n                    params: {\n                        hotelrefno: Number(companyId),\n                    },\n                }).then(res => {\n                    if (res?.status === 200 && res?.data?.data) {\n                        setLocalState(prev => ({...prev, isRequested: false, quality: value}))\n                    } else {\n                        const retErr = isErrorMsg(res);\n                        toast.error(retErr.errorMsg, {\n                            position: toast.POSITION.TOP_RIGHT\n                        });\n                    }\n                })\n            } else {\n                setLocalState(prev => ({...prev, quality: value}))\n            }\n        }\n    }\n\n    const handleUpdateOrderNo = async (gid, orderNo, orderType) => { // update order no of slider images\n        if (orderNo <= 0 || orderNo > sliderImages.length) {\n            setLocalState(prev => ({...prev, selectedIndex: null}))\n        } else {\n            const tmpSliderImages = [...sliderImages];\n            if (orderType === 'increment') {\n                const tmp = tmpSliderImages[orderNo - 1];\n                tmpSliderImages[orderNo - 1] = tmpSliderImages[orderNo - 2];\n                tmpSliderImages[orderNo - 2] = tmp;\n            } else {\n                const tmp = tmpSliderImages[orderNo - 1];\n                tmpSliderImages[orderNo - 1] = tmpSliderImages[orderNo];\n                tmpSliderImages[orderNo] = tmp;\n            }\n            let updatedImages = [];\n            tmpSliderImages.map((data, index) => {\n                data.orderno = index + 1;\n                updatedImages.push(data);\n            });\n            setLocalState(prev => ({...prev, isRequested: true}));\n            let requestPassed = true;\n            for (const sldImage of tmpSliderImages) {\n                const updatedSliderImage = patchListSliderImage(GENERAL_SETTINGS.OREST_URL, authToken, companyId, {orderno: sldImage.orderno}, {hotelrefno: Number(companyId)}, sldImage.gid);\n                updatedSliderImage ? requestPassed = true : requestPassed = false;\n            }\n            setLocalState(prev => ({...prev, isRequested: false}));\n            if (requestPassed) {\n                setLocalState(prev => ({...prev, sliderImages: updatedImages, itemCount: updatedImages?.length + 1}));\n                toast.success('Order No Updated Successfully', {\n                    position: toast.POSITION.TOP_RIGHT\n                });\n                handleSelectedImage(1, tmpSliderImages[0]);\n            } else {\n                toast.error('Something went wrong while updating order no. Please check network tab.', {\n                    position: toast.POSITION.TOP_RIGHT\n                });\n            }\n        }\n    }\n\n    const handleTextEditorValue = (value) => {\n        if (dialogType === 'title') {\n            setLocalState(prev => ({...prev, title: value}));\n        }\n        if (dialogType === 'description') {\n            setLocalState(prev => ({...prev, description: value}));\n        }\n        setLocalState(prev => ({...prev, isDialogOpen: false, dialogType: '', editorValue: ''}));\n    }\n\n    const handleCancelEditor = () => {\n        setLocalState(prev => ({...prev, isDialogOpen: false, dialogType: '', editorValue: ''}));\n    }\n\n    const handleDialogOpen = (type) => {\n        if (type === 'title') {\n            setLocalState(prev => ({...prev, isDialogOpen: true, dialogType: type, editorValue: title}));\n        }\n        if (type === 'description') {\n            setLocalState(prev => ({...prev, isDialogOpen: true, dialogType: type, editorValue: description}));\n        }\n    }\n\n    const handleAlignment = (type, value) => {\n        if (type === 'horizontal') {\n            setLocalState(prev => ({...prev, ctaHorizontalAlignment: value}));\n        }\n        if (type === 'vertical') {\n            setLocalState(prev => ({...prev, ctaVerticalAlignment: value}));\n        }\n    }\n\n    const handleChangeDatePicker = (date) => {\n        const dateValue = moment(date).format(OREST_ENDPOINT.DATEFORMAT_LOCALE)\n        setLocalState({...localState, expiryDate: dateValue});\n        if (dateValue !== 'Invalid date') {\n            setLocalState({...localState, isRequested: true});\n            Patch({\n                // update slider\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: OREST_ENDPOINT.HCMITEMSLD,\n                token: authToken,\n                gid: sliderGallery?.gid,\n                params: {\n                    hotelrefno: Number(companyId),\n                },\n                data: {\n                    expiredt: dateValue,\n                },\n            }).then((res) => {\n                setLocalState({...localState, isRequested: false});\n                if (res.status === 200) {\n                    toast.success(SAVED_SUCCESS, {\n                        position: toast.POSITION.TOP_RIGHT,\n                    })\n                } else {\n                    console.log(res)\n                }\n            })\n        }\n    }\n\n    useEffect(() => console.log(expiryDate), [expiryDate]);\n\n    if (isRequested) {\n        return <LoadingSpinner size={50} style={{color: COLORS?.secondary}}/>\n    }\n\n    return (\n        <React.Fragment>\n            <Grid container={true}>\n                <Grid item xs={4}>\n                    <LocalizationProvider dateLibInstance={moment} dateAdapter={MomentAdapter}>\n                        <DatePicker\n                            id=\"sliderExpiryDate\"\n                            name=\"sliderExpiryDate\"\n                            label={'Select Expiry'}\n                            value={expiryDate}\n                            inputFormat=\"DD/MM/YYYY\"\n                            disablePast\n                            onChange={handleChangeDatePicker}\n                            renderInput={(props) => <TextField fullWidth\n                                                               {...props}\n                                                               variant={'filled'}\n                                                               required={true}\n                            />}\n                        />\n                    </LocalizationProvider>\n                </Grid>\n            </Grid>\n            <Grid container={true} justify={'flex-end'} className={isRequested ? classes.disableEvent : ''}>\n                <Grid item xs={5}>\n                    <FormControlLabel\n                        className={classes.labelFont}\n                        disabled={state?.langCode !== state?.defaultLang}\n                        control={\n                            <Checkbox\n                                size={'small'}\n                                checked={isOptimizeImages}\n                                onChange={() => setLocalState(prev => ({...prev, isOptimizeImages: !isOptimizeImages}))}\n                                color=\"primary\"\n                            />\n                        }\n                        label=\"Optimize Images\"\n                    />\n                </Grid>\n                <Grid item xs={7}>\n                    <Grid container>\n                        <Grid item xs={1} style={{marginTop: 6, marginLeft: 16}}>\n                            <Typography component={'span'} style={{marginLeft: -8}}>Text</Typography>\n                        </Grid>\n                        <Grid item xs={2} style={{marginTop: 8}}>\n                            <InputColor\n                                onChange={(color) => setLocalState(prevState => ({...prevState, textColor: color.hex}))}\n                                placement=\"right\"\n                                initialValue={textColor}\n                            />\n                        </Grid>\n                        <Grid item xs={2} style={{marginTop: 6}}>\n                            <Typography component={'span'}>Button</Typography>\n                        </Grid>\n                        <Grid item xs={4} style={{marginTop: 8}}>\n                            <InputColor\n                                onChange={(color) => setLocalState(prevState => ({\n                                    ...prevState,\n                                    buttonColor: color.hex\n                                }))}\n                                placement=\"right\"\n                                initialValue={buttonColor}\n                            />\n                        </Grid>\n                        <Grid item xs={2}>\n                            <Button\n                                onClick={() => setLocalState(prev => ({...prev, openDialog: true}))}\n                                variant=\"contained\"\n                                size=\"small\"\n                                color=\"primary\"\n                                aria-label=\"upload\"\n                                className={classes.uploadButton}\n                                disabled={state?.langCode !== state?.defaultLang}\n                            >\n                                <CloudUploadIcon/>\n                                UPLOAD\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n            {\n                isOptimizeImages && <Grid container>\n                    <Grid item xs={12}>\n                        <Grid container>\n                            <Grid item xs={12}>\n                                <PercentageSlider\n                                    marks={PERCENTAGE_VALUES}\n                                    value={quality}\n                                    onChange={(e, value) => handleImageQualityChange(value)}\n                                />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            }\n            <Grid container justify={'flex-start'} spacing={3} className={isRequested ? classes.disableEvent : ''}>\n                <Grid item xs={5}>\n                    <Paper className={classes.paperBlock}>\n                        {\n                            sliderImages?.length > 0 && sliderImages.map((value, index) => {\n                                return (\n                                    <Grid key={index} container justify={'center'}>\n                                        <Grid item={true}>\n                                            <Card className={classes.card}\n                                                  style={{\n                                                      border: index + 1 === selectedIndex ? '2px solid red' :\n                                                          `1px solid ${COLORS?.secondary}`\n                                                  }}>\n                                                <div style={{\n                                                    backgroundImage: `url(${GENERAL_SETTINGS.STATIC_URL + value.fileurl})`,\n                                                    height: '100%',\n                                                    width: '100%',\n                                                    backgroundSize: 'cover',\n                                                    borderRadius: 5,\n                                                }}\n                                                     onMouseEnter={() => {\n                                                         setLocalState(prev => ({\n                                                             ...prev,\n                                                             showDeleteButton: true,\n                                                             hoverIndex: index\n                                                         }))\n                                                     }}\n                                                     onMouseLeave={() => {\n                                                         setLocalState(prev => ({\n                                                             ...prev,\n                                                             showDeleteButton: false,\n                                                             hoverIndex: index\n                                                         }))\n                                                     }}\n                                                     onClick={() => handleSelectedImage(index + 1, value)}\n                                                >\n                                                    {\n                                                        showDeleteButton && hoverIndex === index && <IconButton\n                                                            disabled={isRequested}\n                                                            component=\"span\"\n                                                            color={'primary'}\n                                                            className={index === sliderImages.length - 1 || state?.langCode !== state?.defaultLang ? classes.disableEvent : ''}\n                                                            onClick={() => handleUpdateOrderNo(value.gid, value.orderno + 1, 'increment')}\n                                                        >\n                                                            <AddCircleIcon/>\n                                                        </IconButton>\n                                                    }\n                                                    {\n                                                        showDeleteButton && hoverIndex === index && <Typography\n                                                            component=\"span\"\n                                                            color={'primary'}\n                                                        >\n                                                            {value.orderno}\n                                                        </Typography>\n                                                    }\n                                                    {\n                                                        showDeleteButton && hoverIndex === index && <IconButton\n                                                            disabled={isRequested}\n                                                            component=\"span\"\n                                                            color={'primary'}\n                                                            className={index === 0 || state?.langCode !== state?.defaultLang ? classes.disableEvent : ''}\n                                                            onClick={() => handleUpdateOrderNo(value.gid, value.orderno - 1, 'decrement')}\n                                                        >\n                                                            <RemoveCircleIcon/>\n                                                        </IconButton>\n                                                    }\n                                                    {\n                                                        showDeleteButton && hoverIndex === index && <IconButton\n                                                            onClick={() => handleDeleteImage(value.gid)}\n                                                            disabled={isRequested || state?.langCode !== state?.defaultLang}\n                                                            aria-label=\"upload picture\"\n                                                            component=\"span\"\n                                                            style={{float: \"right\"}}\n                                                            color={'primary'}\n                                                        >\n                                                            <CancelIcon/>\n                                                        </IconButton>\n                                                    }\n                                                </div>\n                                            </Card>\n                                        </Grid>\n                                    </Grid>\n                                )\n                            })\n                        }\n                    </Paper>\n                </Grid>\n                <Grid item xs={7}>\n                    <Paper className={classes.paperBlock}>\n                        {\n                            selectedIndex &&\n                            <>\n                                <Container>\n                                    <Grid container justify={'flex-start'}>\n                                        <Grid item xs={3}>\n                                            <Typography\n                                                component={'h6'}\n                                                variant={'h6'}\n                                                className={classes.text}\n                                            >\n                                                Title\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item xs={9}>\n                                            <IconButton\n                                                aria-label=\"Edit Title\"\n                                                color=\"primary\"\n                                                onClick={() => handleDialogOpen('title')}\n                                                style={{float: 'right'}}\n                                            >\n                                                <BorderColorSharpIcon color=\"primary\"/>\n                                            </IconButton>\n                                        </Grid>\n                                    </Grid>\n                                </Container>\n                                <Container>\n                                    <Grid container justify={'flex-start'}>\n                                        <Grid item xs={3}>\n                                            <Typography\n                                                component={'h6'}\n                                                variant={'h6'}\n                                                className={classes.text}\n                                            >\n                                                Description\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item xs={9}>\n                                            <IconButton\n                                                aria-label=\"Edit Title\"\n                                                color=\"primary\"\n                                                onClick={() => handleDialogOpen('description')}\n                                                style={{float: 'right'}}\n                                            >\n                                                <BorderColorSharpIcon color=\"primary\"/>\n                                            </IconButton>\n                                        </Grid>\n                                    </Grid>\n                                </Container>\n                                <Container>\n                                    <Grid container justify={'flex-start'}>\n                                        <Grid item xs={11}>\n                                            <Typography\n                                                component={'h6'}\n                                                variant={'h6'}\n                                                className={classes.text}\n                                            >\n                                                Do you want to add button for image ?\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item xs={1}>\n                                            <Typography component={'div'} style={{marginTop: 20}}>\n                                                <Switch\n                                                    size={'small'}\n                                                    checked={isCta}\n                                                    onChange={() => {\n                                                        setLocalState(prev => ({\n                                                            ...prev,\n                                                            cta: '',\n                                                            isCta: !isCta,\n                                                            ctaTitle: '',\n                                                            ctaLink: ''\n                                                        }))\n                                                    }}\n                                                    inputProps={{'aria-label': 'secondary checkbox'}}\n                                                    color={'primary'}\n                                                    disabled={state.langCode !== state?.defaultLang}\n                                                />\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Container>\n                                {\n                                    isCta &&\n                                    <>\n                                        <Container>\n                                            <Grid container>\n                                                <Grid item xs={4}>\n                                                    <FormLabel id=\"align-horizontal\">Horizontal Alignment :</FormLabel>\n                                                </Grid>\n                                                <Grid item xs={8}>\n                                                    <FormControl variant=\"outlined\" size={'small'} fullWidth>\n                                                        <Select value={ctaHorizontalAlignment} onChange={(e) => handleAlignment('horizontal', e.target.value)}>\n                                                            {horizontalAlignments.map((align, index) => {\n                                                                return (\n                                                                    <MenuItem value={align.value} key={index}>\n                                                                        {' '}\n                                                                        {align.text}{' '}\n                                                                    </MenuItem>\n                                                                )\n                                                            })}\n                                                        </Select>\n                                                    </FormControl>\n                                                </Grid>\n                                            </Grid>\n                                            <Grid container style={{marginTop: 4}}>\n                                                <Grid item xs={4}>\n                                                    <FormLabel id=\"align-vertical\">Vertical Alignment : </FormLabel>\n                                                </Grid>\n                                                <Grid item xs={8}>\n                                                    <FormControl variant=\"outlined\" size={'small'} fullWidth>\n                                                        <Select\n                                                            value={ctaVerticalAlignment}\n                                                            onChange={(e) => handleAlignment('vertical', e.target.value)}\n                                                            label=\"Vertical Alignment\"\n                                                        >\n                                                            {verticalAlignments.map((align, index) => {\n                                                                return (\n                                                                    <MenuItem value={align.value} key={index}>\n                                                                        {' '}\n                                                                        {align.text}{' '}\n                                                                    </MenuItem>\n                                                                )\n                                                            })}\n                                                        </Select>\n                                                    </FormControl>\n                                                </Grid>\n                                            </Grid>\n                                        </Container>\n                                        <Container>\n                                            <Grid container justify={'flex-start'} spacing={3}>\n                                                <Grid item xs={6}>\n                                                    <TextField\n                                                        size={'small'}\n                                                        id=\"button-title\"\n                                                        variant={\"outlined\"}\n                                                        label={'Title'}\n                                                        value={ctaTitle}\n                                                        fullWidth\n                                                        onChange={(e) => {\n                                                            const {value} = e?.target;\n                                                            setLocalState(prev => ({...prev, ctaTitle: value}))\n                                                        }}\n                                                        style={{marginTop: 8}}\n                                                        helperText={\n                                                            ctaTitle && <Typography\n                                                                variant=\"caption\"\n                                                                className={classes.alignText}\n                                                                display=\"block\"\n                                                            >\n                                                                {`${ctaTitle?.length} < 100`}\n                                                            </Typography>\n                                                        }\n                                                        inputProps={{maxLength: 99}}\n                                                    />\n                                                </Grid>\n                                                <Grid item xs={6}>\n                                                    <TextField\n                                                        size={'small'}\n                                                        id=\"button-link\"\n                                                        variant={\"outlined\"}\n                                                        label={'Link'}\n                                                        value={ctaLink}\n                                                        error={ctaLink ? !validator.isURL(ctaLink) : false}\n                                                        onChange={(e) => {\n                                                            const {value} = e?.target;\n                                                            setLocalState(prev => ({...prev, ctaLink: value}));\n                                                        }}\n                                                        style={{marginTop: 8}}\n                                                        fullWidth\n                                                        helperText={\n                                                            ctaLink && <Typography\n                                                                variant=\"caption\"\n                                                                className={classes.alignText}\n                                                                display=\"block\"\n                                                            >\n                                                                {`${ctaLink?.length} < 100`}\n                                                            </Typography>\n                                                        }\n                                                        inputProps={{maxLength: 99}}\n                                                    />\n                                                </Grid>\n                                            </Grid>\n                                        </Container>\n                                    </>\n                                }\n                                <Divider style={{marginTop: 8}}/>\n                                <Button\n                                    onClick={handleUpdateImage}\n                                    variant=\"contained\"\n                                    size=\"small\"\n                                    color=\"primary\"\n                                    aria-label=\"add\"\n                                    className={classes.submit}\n                                >\n                                    SUBMIT\n                                </Button>\n                            </>\n                        }\n                    </Paper>\n                </Grid>\n            </Grid>\n            <DropzoneDialog\n                open={openDialog}\n                onSave={handleSaveImage}\n                acceptedFiles={['image/jpeg', 'image/png', 'image/bmp']}\n                showPreviews={true}\n                maxFileSize={5000000}\n                filesLimit={5}\n                onClose={() => setLocalState(prev => ({...prev, openDialog: false}))}\n            />\n            {\n                isDialogOpen &&\n                <TextEditor\n                    handleSaveTextEditor={handleTextEditorValue}\n                    handleCancelTextEditor={handleCancelEditor}\n                    data={editorValue}\n                />\n            }\n        </React.Fragment>\n    )\n}\nexport default EditSliderGallery"]},"metadata":{},"sourceType":"module"}