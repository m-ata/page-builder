{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/components/page/sections/image/EditImage.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect, useContext } from 'react'; //imports from material ui\n\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport Fab from '@material-ui/core/Fab';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider'; //dropzone related imports\n\nimport 'regenerator-runtime/runtime';\nimport { DropzoneDialog } from 'material-ui-dropzone';\nimport { useRouter } from 'next/router';\nimport WebCmsGlobal from '../../../../../../webcms-global';\nimport { Delete, Insert, Patch, ViewList } from '@webcms/orest';\nimport { FIELDTYPE, isErrorMsg, OREST_ENDPOINT, OREST_UPLOAD } from '../../../../../../../model/orest/constants';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { COLORS, UPLOAD_SUCCESS, DELETE_SUCCESS, SAVED_SUCCESS, PERCENTAGE_VALUES } from '../../../../constants';\nimport LoadingSpinner from '../../../../../../LoadingSpinner';\nimport validator from 'validator';\nimport { PercentageSlider } from '../../../../../../../model/slider';\nimport { FormControlLabel } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport InputColor from 'react-input-color';\nimport TextEditor from '../text-editor';\nimport BorderColorSharpIcon from '@material-ui/icons/BorderColorSharp';\nimport { toSelfName } from './../../../../../../../lib/helpers/useFunction';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > .fa': {\n      margin: theme.spacing(2)\n    },\n    card: {\n      maxWidth: 345\n    },\n    media: {\n      height: 0,\n      paddingTop: '56.25%' // 16:9\n\n    }\n  },\n  buttonStyle: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(1)\n  },\n  submit: {\n    marginRight: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    borderRadius: 20,\n    marginTop: theme.spacing(1),\n    float: 'right'\n  },\n  paperBlock: {\n    height: 250,\n    border: `2px solid ${COLORS === null || COLORS === void 0 ? void 0 : COLORS.secondary}`,\n    overflow: 'auto',\n    position: 'relative'\n  },\n  card: {\n    height: 245,\n    width: 415,\n    cursor: 'pointer'\n  },\n  disableEvent: {\n    pointerEvents: 'none',\n    opacity: 0.5\n  },\n  heading: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(2),\n    fontWeight: 'bold',\n    fontSize: 15\n  },\n  textField: {\n    paddingRight: theme.spacing(1),\n    marginTop: theme.spacing(2)\n  },\n  alignText: {\n    textAlign: 'right',\n    color: 'red'\n  }\n}));\n\nconst EditImage = props => {\n  var _state$assets, _state$assets$meta;\n\n  const {\n    imageComponent,\n    handleCmponent,\n    state,\n    otherLangImage,\n    handleDisable\n  } = props;\n  const {\n    0: images,\n    1: setImages\n  } = useState([]);\n  const {\n    0: isDialogOpen,\n    1: setDialogOpen\n  } = useState(false);\n  const {\n    0: imageTitle,\n    1: setImageTitle\n  } = useState('');\n  const {\n    0: imageDescription,\n    1: setImageDescription\n  } = useState('');\n  const {\n    0: itemCount,\n    1: setItemCount\n  } = useState(1);\n  const {\n    0: showDeleteBtn,\n    1: setShowDeleteBtn\n  } = useState(false);\n  const {\n    0: isDeleting,\n    1: setIsDeleting\n  } = useState(false);\n  const {\n    0: isSaving,\n    1: setIsSaving\n  } = useState(false);\n  const {\n    0: cta,\n    1: setCta\n  } = useState('');\n  const {\n    0: isOptimizeImage,\n    1: setOptimizeImage\n  } = useState(false);\n  const {\n    0: quality,\n    1: setQuality\n  } = useState(state !== null && state !== void 0 && (_state$assets = state.assets) !== null && _state$assets !== void 0 && (_state$assets$meta = _state$assets.meta) !== null && _state$assets$meta !== void 0 && _state$assets$meta.imageQuality ? state.assets.meta.imageQuality * 100 : 50);\n  const {\n    0: textColor,\n    1: setTextColor\n  } = useState(imageComponent !== null && imageComponent !== void 0 && imageComponent.textColor ? imageComponent.textColor : '#000000');\n  let imageID = '';\n  const {\n    0: localState,\n    1: setLocalState\n  } = useState({\n    isTextEditorDialogOpen: false,\n    editorValue: '',\n    dialogType: ''\n  });\n  const {\n    dialogType,\n    editorValue,\n    isTextEditorDialogOpen\n  } = localState;\n  const router = useRouter();\n  const companyId = router.query.companyID;\n  const {\n    GENERAL_SETTINGS,\n    token\n  } = useContext(WebCmsGlobal);\n  const authToken = token || router.query.authToken;\n  const classes = useStyles();\n  useEffect(() => {\n    if (images.length > 0) {\n      handleDisable(false);\n\n      if (state.langCode === state.defaultLang) {\n        handleCmponent({\n          service: 'hcmitemimg',\n          type: 'image',\n          gid: images[0].gid,\n          width: imageComponent.width,\n          id: imageComponent.id,\n          textColor: textColor\n        });\n      } else {\n        handleCmponent({\n          image: {\n            title: imageTitle,\n            description: imageDescription\n          }\n        });\n      }\n    } else {\n      handleDisable(true);\n    }\n  }, [images, imageTitle, imageDescription, textColor]);\n  useEffect(() => {\n    if (imageComponent && imageComponent.gid) {\n      setIsSaving(true);\n      ViewList({\n        apiUrl: GENERAL_SETTINGS.OREST_URL,\n        endpoint: OREST_ENDPOINT.HCMITEMIMG,\n        token: authToken,\n        params: {\n          query: `gid:${imageComponent.gid}`,\n          sort: 'orderno',\n          hotelrefno: Number(companyId)\n        }\n      }).then(res => {\n        var _res$data, _res$data$data;\n\n        setIsSaving(false);\n\n        if (res.status === 200 && (res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : (_res$data$data = _res$data.data) === null || _res$data$data === void 0 ? void 0 : _res$data$data.length) > 0) {\n          var _updatedImages$5;\n\n          let updatedImages = [];\n          res.data.data.map(async data => {\n            updatedImages.push(data);\n          });\n          setImages(updatedImages);\n          setQuality(res.data.data[0].imgquality * 100);\n\n          if (state.langCode === state.defaultLang) {\n            if (updatedImages.length > 0) {\n              var _updatedImages$, _updatedImages$2, _updatedImages$3, _updatedImages$4;\n\n              ((_updatedImages$ = updatedImages[0]) === null || _updatedImages$ === void 0 ? void 0 : _updatedImages$.title) && setImageTitle((_updatedImages$2 = updatedImages[0]) === null || _updatedImages$2 === void 0 ? void 0 : _updatedImages$2.title);\n              ((_updatedImages$3 = updatedImages[0]) === null || _updatedImages$3 === void 0 ? void 0 : _updatedImages$3.description) && setImageDescription((_updatedImages$4 = updatedImages[0]) === null || _updatedImages$4 === void 0 ? void 0 : _updatedImages$4.description);\n            }\n          } else {\n            setImageTitle(otherLangImage.image.title);\n            setImageDescription(otherLangImage.image.description);\n          }\n\n          setCta((_updatedImages$5 = updatedImages[0]) === null || _updatedImages$5 === void 0 ? void 0 : _updatedImages$5.cta);\n        } else {\n          const retErr = isErrorMsg(res);\n          toast.error(retErr.errorMsg, {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        }\n      });\n    }\n  }, [imageComponent.gid]);\n\n  const openDialog = () => {\n    //it opens dialog for image upload\n    setDialogOpen(true);\n  };\n\n  const closeDialog = () => {\n    ////it closes dialog for image upload\n    setDialogOpen(false);\n  };\n\n  const ImageUpload = (apiUrl, endPoint, token, masterID, file) => {\n    const url = apiUrl + '/' + endPoint + OREST_UPLOAD;\n    let binaryData = [];\n    binaryData.push(file);\n    let formData = new FormData();\n    formData.append('file', new Blob(binaryData, {\n      type: file.type\n    }), toSelfName(file.name));\n    const options = {\n      url: url,\n      method: 'post',\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'multipart/form-data'\n      },\n      params: {\n        orsactive: true,\n        masterid: masterID,\n        quality: quality / 100,\n        scale: quality / 100,\n        hotelrefno: companyId\n      },\n      data: formData\n    };\n    return axios(options).then(response => {\n      return response;\n    }).catch(error => {\n      return error.response || {\n        status: 0\n      };\n    });\n  };\n\n  function asyncUpload(file, itemTreated, callback) {\n    if (state.hcmItemId) {\n      setTimeout(() => {\n        Insert({\n          apiUrl: GENERAL_SETTINGS.OREST_URL,\n          endpoint: OREST_ENDPOINT.HCMITEMIMG,\n          token: authToken,\n          data: {\n            itemid: state.hcmItemId,\n            imgtype: FIELDTYPE.IMG,\n            orderno: itemTreated,\n            imgquality: quality / 100,\n            imgscale: quality / 100,\n            hotelrefno: Number(companyId)\n          }\n        }).then(r1 => {\n          if (r1.status === 200) {\n            imageID = r1.data.data.id;\n            ImageUpload(GENERAL_SETTINGS.OREST_URL, OREST_ENDPOINT.RAFILE, authToken, r1.data.data.mid, file).then(r => {\n              if (r.status === 200) {\n                callback();\n              } else {\n                callback();\n              }\n            });\n          } else {\n            callback();\n          }\n        });\n      }, 100);\n    }\n  }\n\n  const saveImage = files => {\n    setIsSaving(true);\n    let req = files.map(file => {\n      return new Promise(resolve => {\n        asyncUpload(file, itemCount, resolve);\n        setItemCount(itemCount => itemCount + 1);\n      });\n    });\n    Promise.all(req).then(() => {\n      ViewList({\n        apiUrl: GENERAL_SETTINGS.OREST_URL,\n        endpoint: OREST_ENDPOINT.HCMITEMIMG,\n        token: authToken,\n        params: {\n          query: `id:${imageID}`,\n          sort: 'orderno',\n          hotelrefno: Number(companyId)\n        }\n      }).then(res => {\n        setIsSaving(false);\n\n        if (res.status === 200) {\n          let updatedImages = [...images];\n          res.data.data.map(data => {\n            updatedImages.push(data);\n          });\n          setImages(updatedImages);\n\n          if (updatedImages.length > 0) {\n            setImageTitle(updatedImages[0].title);\n            setImageDescription(updatedImages[0].description);\n          }\n\n          toast.success(UPLOAD_SUCCESS, {\n            position: toast.POSITION.TOP_RIGHT\n          });\n          closeDialog();\n        } else {\n          const retErr = isErrorMsg(res);\n          toast.error(retErr.errorMsg, {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        }\n      });\n    });\n  };\n\n  const deleteImage = () => {\n    setIsDeleting(true);\n    Delete({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.HCMITEMIMG,\n      token: authToken,\n      gid: images[0].gid,\n      params: {\n        hotelrefno: Number(companyId)\n      }\n    }).then(res => {\n      if (res.status === 200) {\n        setIsDeleting(false);\n        setImages([]);\n        setImageTitle('');\n        setImageDescription('');\n        toast.success(DELETE_SUCCESS, {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      } else {\n        const retErr = isErrorMsg(res);\n        toast.error(retErr.errorMsg, {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      }\n    });\n  };\n\n  const handleUpdateTitleDescription = () => {\n    setIsSaving(true);\n\n    if (state.langCode === state.defaultLang) {\n      Patch({\n        // update title and description\n        apiUrl: GENERAL_SETTINGS.OREST_URL,\n        endpoint: OREST_ENDPOINT.HCMITEMIMG,\n        token: authToken,\n        gid: images[0].gid,\n        params: {\n          hotelrefno: Number(companyId)\n        },\n        data: {\n          title: imageTitle,\n          description: imageDescription,\n          cta: cta\n        }\n      }).then(res => {\n        setIsSaving(false);\n\n        if (res.status === 200) {\n          toast.success(SAVED_SUCCESS, {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        } else {\n          const retErr = isErrorMsg(res);\n          toast.error(retErr.errorMsg, {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        }\n      });\n    } else {\n      setTimeout(() => {\n        setIsSaving(false);\n        toast.success(SAVED_SUCCESS, {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      }, 1000);\n    }\n  };\n\n  const handleImageQualityChange = value => {\n    if (value >= 10 && value <= 90 && value % 10 === 0) {\n      if (images !== null && images !== void 0 && images.length) {\n        Patch({\n          // update image\n          apiUrl: GENERAL_SETTINGS.OREST_URL,\n          endpoint: OREST_ENDPOINT.HCMITEMIMG,\n          token: authToken,\n          gid: images[0].gid,\n          params: {\n            hotelrefno: Number(companyId)\n          },\n          data: {\n            imgquality: value / 100,\n            imgscale: value / 100\n          }\n        }).then(res1 => {\n          var _res1$data;\n\n          if ((res1 === null || res1 === void 0 ? void 0 : res1.status) === 200 && res1 !== null && res1 !== void 0 && (_res1$data = res1.data) !== null && _res1$data !== void 0 && _res1$data.data) {\n            setQuality(value);\n          } else {\n            const retErr = isErrorMsg(res);\n            toast.error(retErr.errorMsg, {\n              position: toast.POSITION.TOP_RIGHT\n            });\n          }\n        });\n      } else {\n        setQuality(value);\n      }\n    }\n  };\n\n  const handleDialogOpen = type => {\n    if (type === 'title') {\n      setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        isTextEditorDialogOpen: true,\n        dialogType: type,\n        editorValue: imageTitle\n      }));\n    }\n\n    if (type === 'description') {\n      setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        isTextEditorDialogOpen: true,\n        dialogType: type,\n        editorValue: imageDescription\n      }));\n    }\n  };\n\n  const handleTextEditorValue = value => {\n    if (dialogType === 'title') {\n      setImageTitle(value);\n    }\n\n    if (dialogType === 'description') {\n      setImageDescription(value);\n    }\n\n    setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      isTextEditorDialogOpen: false,\n      dialogType: '',\n      editorValue: ''\n    }));\n  };\n\n  const handleCancelEditor = () => {\n    setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      isTextEditorDialogOpen: false,\n      dialogType: '',\n      editorValue: ''\n    }));\n  };\n\n  if (isSaving) {\n    return __jsx(LoadingSpinner, {\n      style: {\n        color: COLORS.secondary\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 9\n    }\n  }, __jsx(React.Fragment, null, __jsx(Grid, {\n    container: true,\n    justify: 'flex-start',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 21\n    }\n  }, __jsx(FormControlLabel, {\n    className: classes.labelFont,\n    control: __jsx(Checkbox, {\n      size: 'small',\n      checked: isOptimizeImage,\n      onChange: () => setOptimizeImage(!isOptimizeImage),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 33\n      }\n    }),\n    label: \"Optimize Images\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 25\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 21\n    }\n  }, __jsx(Grid, {\n    container: true,\n    justify: 'flex-end',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 25\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 1,\n    style: {\n      marginTop: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 29\n    }\n  }, __jsx(Typography, {\n    component: 'span',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 33\n    }\n  }, \"Text\")), __jsx(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 29\n    }\n  }, __jsx(InputColor, {\n    onChange: color => setTextColor(color.hex),\n    placement: \"right\",\n    initialValue: textColor,\n    style: {\n      marginTop: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 33\n    }\n  }))))), __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 21\n    }\n  }, isOptimizeImage && __jsx(PercentageSlider, {\n    marks: PERCENTAGE_VALUES,\n    value: quality,\n    onChange: (e, value) => handleImageQualityChange(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 29\n    }\n  }))), __jsx(Grid, {\n    container: true,\n    justify: 'flex-start',\n    spacing: 3,\n    className: isDeleting ? classes.disableEvent : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    className: state.langCode !== state.defaultLang ? classes.disableEvent : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 21\n    }\n  }, __jsx(Paper, {\n    className: classes.paperBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 25\n    }\n  }, images.map((value, index) => {\n    return __jsx(Grid, {\n      container: true,\n      key: index,\n      justify: 'center',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 37\n      }\n    }, __jsx(Grid, {\n      key: index,\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 41\n      }\n    }, __jsx(Card, {\n      className: classes.card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 45\n      }\n    }, __jsx(\"div\", {\n      style: {\n        backgroundImage: `url(${GENERAL_SETTINGS.STATIC_URL + value.fileurl})`,\n        height: '100%',\n        width: '100%',\n        backgroundSize: 'cover'\n      },\n      onMouseEnter: () => setShowDeleteBtn(true),\n      onMouseLeave: () => setShowDeleteBtn(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 49\n      }\n    }, showDeleteBtn && __jsx(IconButton, {\n      onClick: deleteImage,\n      className: state.langCode !== state.defaultLang ? classes.disableEvent : '',\n      \"aria-label\": \"upload picture\",\n      component: \"span\",\n      style: {\n        float: 'right'\n      },\n      color: 'primary',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 57\n      }\n    }, __jsx(CancelIcon, {\n      style: {\n        width: 30,\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 61\n      }\n    }))))));\n  }), images.length === 0 && __jsx(Typography, {\n    component: 'div',\n    style: {\n      height: 250,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 33\n    }\n  }, __jsx(Fab, {\n    onClick: openDialog,\n    variant: \"extended\",\n    size: \"small\",\n    color: \"primary\",\n    \"aria-label\": \"add\",\n    className: classes.fabBtn,\n    disabled: images.length > 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 37\n    }\n  }, __jsx(CloudUploadIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 41\n    }\n  }), \"UPLOAD\")), __jsx(DropzoneDialog, {\n    open: isDialogOpen,\n    onSave: saveImage,\n    acceptedFiles: ['image/jpeg', 'image/png', 'image/bmp'],\n    showPreviews: true,\n    maxFileSize: 5000000,\n    onClose: closeDialog,\n    filesLimit: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 29\n    }\n  }))), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 21\n    }\n  }, __jsx(Paper, {\n    className: classes.paperBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 25\n    }\n  }, __jsx(Grid, {\n    container: true,\n    justify: 'flex-start',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 29\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 33\n    }\n  }, __jsx(Typography, {\n    component: 'h6',\n    variant: 'h6',\n    className: classes.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 37\n    }\n  }, \"Title\")), __jsx(Grid, {\n    item: true,\n    xs: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 33\n    }\n  }, __jsx(IconButton, {\n    \"aria-label\": \"Edit Title\",\n    color: \"primary\",\n    onClick: () => handleDialogOpen('title'),\n    style: {\n      float: 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 37\n    }\n  }, __jsx(BorderColorSharpIcon, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 41\n    }\n  })))), __jsx(Grid, {\n    container: true,\n    justify: 'flex-start',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 603,\n      columnNumber: 29\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 604,\n      columnNumber: 33\n    }\n  }, __jsx(Typography, {\n    component: 'h6',\n    variant: 'h6',\n    className: classes.heading,\n    size: 'small',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 605,\n      columnNumber: 37\n    }\n  }, \"Description\")), __jsx(Grid, {\n    item: true,\n    xs: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 614,\n      columnNumber: 33\n    }\n  }, __jsx(IconButton, {\n    \"aria-label\": \"Edit Title\",\n    color: \"primary\",\n    onClick: () => handleDialogOpen('description'),\n    style: {\n      float: 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 615,\n      columnNumber: 37\n    }\n  }, __jsx(BorderColorSharpIcon, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 41\n    }\n  })))), (state.type === 'email' || state.type === 'emailOnly') && __jsx(Grid, {\n    container: true,\n    justify: 'flex-start',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 626,\n      columnNumber: 33\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 37\n    }\n  }, __jsx(Typography, {\n    component: 'h6',\n    variant: 'h6',\n    className: classes.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 628,\n      columnNumber: 41\n    }\n  }, \"Link\")), __jsx(Grid, {\n    item: true,\n    xs: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 632,\n      columnNumber: 37\n    }\n  }, __jsx(TextField, {\n    id: \"image-description\",\n    variant: 'outlined',\n    fullWidth: true,\n    placeholder: 'Please Link here',\n    onChange: e => setCta(e.target.value),\n    size: 'small',\n    className: classes.textField,\n    error: cta && !validator.isURL(cta),\n    value: cta,\n    disabled: state.langCode !== state.defaultLang,\n    helperText: cta && __jsx(Typography, {\n      variant: \"caption\",\n      className: classes.alignText,\n      display: \"block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 646,\n        columnNumber: 53\n      }\n    }, `${cta === null || cta === void 0 ? void 0 : cta.length} < 100`),\n    inputProps: {\n      maxLength: 99\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 41\n    }\n  }))), __jsx(Divider, {\n    style: {\n      marginTop: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 660,\n      columnNumber: 29\n    }\n  }), __jsx(Button, {\n    onClick: handleUpdateTitleDescription,\n    variant: \"contained\",\n    size: \"small\",\n    color: \"primary\",\n    \"aria-label\": \"submit\",\n    className: classes.submit,\n    disabled: !imageTitle && !imageDescription,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 661,\n      columnNumber: 29\n    }\n  }, \"SUBMIT\"))))), isTextEditorDialogOpen && __jsx(TextEditor, {\n    handleSaveTextEditor: handleTextEditorValue,\n    handleCancelTextEditor: handleCancelEditor,\n    data: editorValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 677,\n      columnNumber: 17\n    }\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    state: state.formReducer.pageBuilder\n  };\n};\n\nexport default connect(mapStateToProps)(EditImage);","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/components/page/sections/image/EditImage.js"],"names":["React","useState","useEffect","useContext","Grid","Card","Fab","CloudUploadIcon","TextField","Button","Paper","Typography","IconButton","CancelIcon","makeStyles","Divider","DropzoneDialog","useRouter","WebCmsGlobal","Delete","Insert","Patch","ViewList","FIELDTYPE","isErrorMsg","OREST_ENDPOINT","OREST_UPLOAD","axios","connect","COLORS","UPLOAD_SUCCESS","DELETE_SUCCESS","SAVED_SUCCESS","PERCENTAGE_VALUES","LoadingSpinner","validator","PercentageSlider","FormControlLabel","Checkbox","InputColor","TextEditor","BorderColorSharpIcon","toSelfName","useStyles","theme","root","margin","spacing","card","maxWidth","media","height","paddingTop","buttonStyle","marginTop","marginLeft","submit","marginRight","marginBottom","borderRadius","float","paperBlock","border","secondary","overflow","position","width","cursor","disableEvent","pointerEvents","opacity","heading","fontWeight","fontSize","textField","paddingRight","alignText","textAlign","color","EditImage","props","imageComponent","handleCmponent","state","otherLangImage","handleDisable","images","setImages","isDialogOpen","setDialogOpen","imageTitle","setImageTitle","imageDescription","setImageDescription","itemCount","setItemCount","showDeleteBtn","setShowDeleteBtn","isDeleting","setIsDeleting","isSaving","setIsSaving","cta","setCta","isOptimizeImage","setOptimizeImage","quality","setQuality","assets","meta","imageQuality","textColor","setTextColor","imageID","localState","setLocalState","isTextEditorDialogOpen","editorValue","dialogType","router","companyId","query","companyID","GENERAL_SETTINGS","token","authToken","classes","length","langCode","defaultLang","service","type","gid","id","image","title","description","apiUrl","OREST_URL","endpoint","HCMITEMIMG","params","sort","hotelrefno","Number","then","res","status","data","updatedImages","map","push","imgquality","retErr","toast","error","errorMsg","POSITION","TOP_RIGHT","openDialog","closeDialog","ImageUpload","endPoint","masterID","file","url","binaryData","formData","FormData","append","Blob","name","options","method","headers","Authorization","orsactive","masterid","scale","response","catch","asyncUpload","itemTreated","callback","hcmItemId","setTimeout","itemid","imgtype","IMG","orderno","imgscale","r1","RAFILE","mid","r","saveImage","files","req","Promise","resolve","all","success","deleteImage","handleUpdateTitleDescription","handleImageQualityChange","value","res1","handleDialogOpen","prev","handleTextEditorValue","handleCancelEditor","labelFont","hex","e","index","backgroundImage","STATIC_URL","fileurl","backgroundSize","display","alignItems","justifyContent","fabBtn","target","isURL","maxLength","mapStateToProps","formReducer","pageBuilder"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\n//imports from material ui\nimport Grid from '@material-ui/core/Grid'\nimport Card from '@material-ui/core/Card'\nimport Fab from '@material-ui/core/Fab'\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport CancelIcon from '@material-ui/icons/Cancel'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Divider from '@material-ui/core/Divider'\n//dropzone related imports\nimport 'regenerator-runtime/runtime'\nimport { DropzoneDialog } from 'material-ui-dropzone'\n\nimport { useRouter } from 'next/router'\nimport WebCmsGlobal from '../../../../../../webcms-global'\nimport { Delete, Insert, Patch, ViewList } from '@webcms/orest'\nimport { FIELDTYPE, isErrorMsg, OREST_ENDPOINT, OREST_UPLOAD } from '../../../../../../../model/orest/constants'\n\nimport axios from 'axios'\nimport { connect } from 'react-redux'\nimport { COLORS, UPLOAD_SUCCESS, DELETE_SUCCESS, SAVED_SUCCESS, PERCENTAGE_VALUES } from '../../../../constants'\nimport LoadingSpinner from '../../../../../../LoadingSpinner'\nimport validator from 'validator'\nimport { PercentageSlider } from '../../../../../../../model/slider'\nimport { FormControlLabel } from '@material-ui/core'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport InputColor from 'react-input-color'\nimport TextEditor from '../text-editor'\nimport BorderColorSharpIcon from '@material-ui/icons/BorderColorSharp';\nimport { toSelfName } from './../../../../../../../lib/helpers/useFunction';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > .fa': {\n            margin: theme.spacing(2),\n        },\n        card: {\n            maxWidth: 345,\n        },\n        media: {\n            height: 0,\n            paddingTop: '56.25%', // 16:9\n        },\n    },\n    buttonStyle: {\n        marginTop: theme.spacing(1),\n        marginLeft: theme.spacing(1),\n    },\n    submit: {\n        marginRight: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n        borderRadius: 20,\n        marginTop: theme.spacing(1),\n        float: 'right',\n    },\n    paperBlock: {\n        height: 250,\n        border: `2px solid ${COLORS?.secondary}`,\n        overflow: 'auto',\n        position: 'relative',\n    },\n    card: {\n        height: 245,\n        width: 415,\n        cursor: 'pointer',\n    },\n    disableEvent: {\n        pointerEvents: 'none',\n        opacity: 0.5,\n    },\n    heading: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(2),\n        fontWeight: 'bold',\n        fontSize: 15,\n    },\n    textField: {\n        paddingRight: theme.spacing(1),\n        marginTop: theme.spacing(2),\n    },\n    alignText: {\n        textAlign: 'right',\n        color: 'red',\n    },\n}))\n\nconst EditImage = (props) => {\n    const { imageComponent, handleCmponent, state, otherLangImage, handleDisable } = props\n    const [images, setImages] = useState([])\n    const [isDialogOpen, setDialogOpen] = useState(false)\n    const [imageTitle, setImageTitle] = useState('')\n    const [imageDescription, setImageDescription] = useState('')\n    const [itemCount, setItemCount] = useState(1)\n    const [showDeleteBtn, setShowDeleteBtn] = useState(false)\n    const [isDeleting, setIsDeleting] = useState(false)\n    const [isSaving, setIsSaving] = useState(false)\n    const [cta, setCta] = useState('')\n    const [isOptimizeImage, setOptimizeImage] = useState(false)\n    const [quality, setQuality] = useState(\n        state?.assets?.meta?.imageQuality ? state.assets.meta.imageQuality * 100 : 50\n    )\n    const [textColor, setTextColor] = useState(imageComponent?.textColor ? imageComponent.textColor : '#000000')\n    let imageID = ''\n    const [localState, setLocalState] = useState({\n        isTextEditorDialogOpen: false,\n        editorValue: '',\n        dialogType: '',\n    })\n\n    const { dialogType, editorValue, isTextEditorDialogOpen } = localState\n\n    const router = useRouter()\n    const companyId = router.query.companyID\n    const { GENERAL_SETTINGS, token } = useContext(WebCmsGlobal)\n    const authToken = token || router.query.authToken\n\n    const classes = useStyles()\n\n    useEffect(() => {\n        if (images.length > 0) {\n            handleDisable(false)\n            if (state.langCode === state.defaultLang) {\n                handleCmponent({\n                    service: 'hcmitemimg',\n                    type: 'image',\n                    gid: images[0].gid,\n                    width: imageComponent.width,\n                    id: imageComponent.id,\n                    textColor: textColor,\n                })\n            } else {\n                handleCmponent({\n                    image: {\n                        title: imageTitle,\n                        description: imageDescription,\n                    },\n                })\n            }\n        } else {\n            handleDisable(true)\n        }\n    }, [images, imageTitle, imageDescription, textColor])\n\n    useEffect(() => {\n        if (imageComponent && imageComponent.gid) {\n            setIsSaving(true)\n            ViewList({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: OREST_ENDPOINT.HCMITEMIMG,\n                token: authToken,\n                params: {\n                    query: `gid:${imageComponent.gid}`,\n                    sort: 'orderno',\n                    hotelrefno: Number(companyId),\n                },\n            }).then((res) => {\n                setIsSaving(false)\n                if (res.status === 200 && res?.data?.data?.length > 0) {\n                    let updatedImages = []\n                    res.data.data.map(async (data) => {\n                        updatedImages.push(data)\n                    })\n                    setImages(updatedImages)\n                    setQuality(res.data.data[0].imgquality * 100)\n                    if (state.langCode === state.defaultLang) {\n                        if (updatedImages.length > 0) {\n                            updatedImages[0]?.title && setImageTitle(updatedImages[0]?.title)\n                            updatedImages[0]?.description && setImageDescription(updatedImages[0]?.description)\n                        }\n                    } else {\n                        setImageTitle(otherLangImage.image.title)\n                        setImageDescription(otherLangImage.image.description)\n                    }\n                    setCta(updatedImages[0]?.cta)\n                } else {\n                    const retErr = isErrorMsg(res)\n                    toast.error(retErr.errorMsg, {\n                        position: toast.POSITION.TOP_RIGHT,\n                    })\n                }\n            })\n        }\n    }, [imageComponent.gid])\n\n    const openDialog = () => {\n        //it opens dialog for image upload\n        setDialogOpen(true)\n    }\n\n    const closeDialog = () => {\n        ////it closes dialog for image upload\n        setDialogOpen(false)\n    }\n\n    const ImageUpload = (apiUrl, endPoint, token, masterID, file) => {\n        const url = apiUrl + '/' + endPoint + OREST_UPLOAD\n        let binaryData = []\n        binaryData.push(file)\n        let formData = new FormData()\n        formData.append('file', new Blob(binaryData, { type: file.type }), toSelfName(file.name))\n\n        const options = {\n            url: url,\n            method: 'post',\n            headers: {\n                Authorization: `Bearer ${token}`,\n                'Content-Type': 'multipart/form-data',\n            },\n            params: {\n                orsactive: true,\n                masterid: masterID,\n                quality: quality / 100,\n                scale: quality / 100,\n                hotelrefno: companyId,\n            },\n            data: formData,\n        }\n\n        return axios(options)\n            .then((response) => {\n                return response\n            })\n            .catch((error) => {\n                return error.response || { status: 0 }\n            })\n    }\n\n    function asyncUpload(file, itemTreated, callback) {\n        if (state.hcmItemId) {\n            setTimeout(() => {\n                Insert({\n                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                    endpoint: OREST_ENDPOINT.HCMITEMIMG,\n                    token: authToken,\n                    data: {\n                        itemid: state.hcmItemId,\n                        imgtype: FIELDTYPE.IMG,\n                        orderno: itemTreated,\n                        imgquality: quality / 100,\n                        imgscale: quality / 100,\n                        hotelrefno: Number(companyId),\n                    },\n                }).then((r1) => {\n                    if (r1.status === 200) {\n                        imageID = r1.data.data.id\n                        ImageUpload(\n                            GENERAL_SETTINGS.OREST_URL,\n                            OREST_ENDPOINT.RAFILE,\n                            authToken,\n                            r1.data.data.mid,\n                            file\n                        ).then((r) => {\n                            if (r.status === 200) {\n                                callback()\n                            } else {\n                                callback()\n                            }\n                        })\n                    } else {\n                        callback()\n                    }\n                })\n            }, 100)\n        }\n    }\n\n    const saveImage = (files) => {\n        setIsSaving(true)\n        let req = files.map((file) => {\n            return new Promise((resolve) => {\n                asyncUpload(file, itemCount, resolve)\n                setItemCount((itemCount) => itemCount + 1)\n            })\n        })\n        Promise.all(req).then(() => {\n            ViewList({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: OREST_ENDPOINT.HCMITEMIMG,\n                token: authToken,\n                params: {\n                    query: `id:${imageID}`,\n                    sort: 'orderno',\n                    hotelrefno: Number(companyId),\n                },\n            }).then((res) => {\n                setIsSaving(false)\n                if (res.status === 200) {\n                    let updatedImages = [...images]\n                    res.data.data.map((data) => {\n                        updatedImages.push(data)\n                    })\n                    setImages(updatedImages)\n                    if (updatedImages.length > 0) {\n                        setImageTitle(updatedImages[0].title)\n                        setImageDescription(updatedImages[0].description)\n                    }\n                    toast.success(UPLOAD_SUCCESS, {\n                        position: toast.POSITION.TOP_RIGHT,\n                    })\n                    closeDialog()\n                } else {\n                    const retErr = isErrorMsg(res)\n                    toast.error(retErr.errorMsg, {\n                        position: toast.POSITION.TOP_RIGHT,\n                    })\n                }\n            })\n        })\n    }\n\n    const deleteImage = () => {\n        setIsDeleting(true)\n        Delete({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.HCMITEMIMG,\n            token: authToken,\n            gid: images[0].gid,\n            params: {\n                hotelrefno: Number(companyId),\n            },\n        }).then((res) => {\n            if (res.status === 200) {\n                setIsDeleting(false)\n                setImages([])\n                setImageTitle('')\n                setImageDescription('')\n                toast.success(DELETE_SUCCESS, {\n                    position: toast.POSITION.TOP_RIGHT,\n                })\n            } else {\n                const retErr = isErrorMsg(res)\n                toast.error(retErr.errorMsg, {\n                    position: toast.POSITION.TOP_RIGHT,\n                })\n            }\n        })\n    }\n\n    const handleUpdateTitleDescription = () => {\n        setIsSaving(true)\n        if (state.langCode === state.defaultLang) {\n            Patch({\n                // update title and description\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: OREST_ENDPOINT.HCMITEMIMG,\n                token: authToken,\n                gid: images[0].gid,\n                params: {\n                    hotelrefno: Number(companyId),\n                },\n                data: {\n                    title: imageTitle,\n                    description: imageDescription,\n                    cta: cta,\n                },\n            }).then((res) => {\n                setIsSaving(false)\n                if (res.status === 200) {\n                    toast.success(SAVED_SUCCESS, {\n                        position: toast.POSITION.TOP_RIGHT,\n                    })\n                } else {\n                    const retErr = isErrorMsg(res)\n                    toast.error(retErr.errorMsg, {\n                        position: toast.POSITION.TOP_RIGHT,\n                    })\n                }\n            })\n        } else {\n            setTimeout(() => {\n                setIsSaving(false)\n                toast.success(SAVED_SUCCESS, {\n                    position: toast.POSITION.TOP_RIGHT,\n                })\n            }, 1000)\n        }\n    }\n\n    const handleImageQualityChange = (value) => {\n        if (value >= 10 && value <= 90 && value % 10 === 0) {\n            if (images?.length) {\n                Patch({\n                    // update image\n                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                    endpoint: OREST_ENDPOINT.HCMITEMIMG,\n                    token: authToken,\n                    gid: images[0].gid,\n                    params: {\n                        hotelrefno: Number(companyId),\n                    },\n                    data: {\n                        imgquality: value / 100,\n                        imgscale: value / 100,\n                    },\n                }).then((res1) => {\n                    if (res1?.status === 200 && res1?.data?.data) {\n                        setQuality(value)\n                    } else {\n                        const retErr = isErrorMsg(res)\n                        toast.error(retErr.errorMsg, {\n                            position: toast.POSITION.TOP_RIGHT,\n                        })\n                    }\n                })\n            } else {\n                setQuality(value)\n            }\n        }\n    }\n\n    const handleDialogOpen = (type) => {\n        if (type === 'title') {\n            setLocalState((prev) => ({\n                ...prev,\n                isTextEditorDialogOpen: true,\n                dialogType: type,\n                editorValue: imageTitle,\n            }))\n        }\n        if (type === 'description') {\n            setLocalState((prev) => ({\n                ...prev,\n                isTextEditorDialogOpen: true,\n                dialogType: type,\n                editorValue: imageDescription,\n            }))\n        }\n    }\n\n    const handleTextEditorValue = (value) => {\n        if (dialogType === 'title') {\n            setImageTitle(value)\n        }\n        if (dialogType === 'description') {\n            setImageDescription(value)\n        }\n        setLocalState((prev) => ({ ...prev, isTextEditorDialogOpen: false, dialogType: '', editorValue: '' }))\n    }\n\n    const handleCancelEditor = () => {\n        setLocalState((prev) => ({ ...prev, isTextEditorDialogOpen: false, dialogType: '', editorValue: '' }))\n    }\n\n    if (isSaving) {\n        return <LoadingSpinner style={{ color: COLORS.secondary }} />\n    }\n\n    return (\n        <React.Fragment>\n            <>\n                <Grid container={true} justify={'flex-start'}>\n                    <Grid item xs={6}>\n                        <FormControlLabel\n                            className={classes.labelFont}\n                            control={\n                                <Checkbox\n                                    size={'small'}\n                                    checked={isOptimizeImage}\n                                    onChange={() => setOptimizeImage(!isOptimizeImage)}\n                                    color=\"primary\"\n                                />\n                            }\n                            label=\"Optimize Images\"\n                        />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Grid container={true} justify={'flex-end'}>\n                            <Grid item xs={1} style={{ marginTop: 8 }}>\n                                <Typography component={'span'}>Text</Typography>\n                            </Grid>\n                            <Grid item xs={2}>\n                                <InputColor\n                                    onChange={(color) => setTextColor(color.hex)}\n                                    placement=\"right\"\n                                    initialValue={textColor}\n                                    style={{ marginTop: 8 }}\n                                />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid item xs={12}>\n                        {isOptimizeImage && (\n                            <PercentageSlider\n                                marks={PERCENTAGE_VALUES}\n                                value={quality}\n                                onChange={(e, value) => handleImageQualityChange(value)}\n                            />\n                        )}\n                    </Grid>\n                </Grid>\n                <Grid\n                    container={true}\n                    justify={'flex-start'}\n                    spacing={3}\n                    className={isDeleting ? classes.disableEvent : ''}\n                >\n                    <Grid\n                        item={true}\n                        xs={6}\n                        className={state.langCode !== state.defaultLang ? classes.disableEvent : ''}\n                    >\n                        <Paper className={classes.paperBlock}>\n                            {images.map((value, index) => {\n                                return (\n                                    <Grid container={true} key={index} justify={'center'}>\n                                        <Grid key={index} item>\n                                            <Card className={classes.card}>\n                                                <div\n                                                    style={{\n                                                        backgroundImage: `url(${\n                                                            GENERAL_SETTINGS.STATIC_URL + value.fileurl\n                                                        })`,\n                                                        height: '100%',\n                                                        width: '100%',\n                                                        backgroundSize: 'cover',\n                                                    }}\n                                                    onMouseEnter={() => setShowDeleteBtn(true)}\n                                                    onMouseLeave={() => setShowDeleteBtn(false)}\n                                                >\n                                                    {showDeleteBtn && (\n                                                        <IconButton\n                                                            onClick={deleteImage}\n                                                            className={\n                                                                state.langCode !== state.defaultLang\n                                                                    ? classes.disableEvent\n                                                                    : ''\n                                                            }\n                                                            aria-label=\"upload picture\"\n                                                            component=\"span\"\n                                                            style={{ float: 'right' }}\n                                                            color={'primary'}\n                                                        >\n                                                            <CancelIcon style={{ width: 30, height: 30 }} />\n                                                        </IconButton>\n                                                    )}\n                                                </div>\n                                            </Card>\n                                        </Grid>\n                                    </Grid>\n                                )\n                            })}\n                            {images.length === 0 && (\n                                <Typography\n                                    component={'div'}\n                                    style={{\n                                        height: 250,\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        justifyContent: 'center',\n                                    }}\n                                >\n                                    <Fab\n                                        onClick={openDialog}\n                                        variant=\"extended\"\n                                        size=\"small\"\n                                        color=\"primary\"\n                                        aria-label=\"add\"\n                                        className={classes.fabBtn}\n                                        disabled={images.length > 0}\n                                    >\n                                        <CloudUploadIcon />\n                                        UPLOAD\n                                    </Fab>\n                                </Typography>\n                            )}\n                            <DropzoneDialog\n                                open={isDialogOpen}\n                                onSave={saveImage}\n                                acceptedFiles={['image/jpeg', 'image/png', 'image/bmp']}\n                                showPreviews={true}\n                                maxFileSize={5000000}\n                                onClose={closeDialog}\n                                filesLimit={10}\n                            />\n                        </Paper>\n                    </Grid>\n                    <Grid item={true} xs={6}>\n                        <Paper className={classes.paperBlock}>\n                            <Grid container justify={'flex-start'}>\n                                <Grid item xs={3}>\n                                    <Typography component={'h6'} variant={'h6'} className={classes.heading}>\n                                        Title\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={9}>\n                                    <IconButton\n                                        aria-label=\"Edit Title\"\n                                        color=\"primary\"\n                                        onClick={() => handleDialogOpen('title')}\n                                        style={{ float: 'right' }}\n                                    >\n                                        <BorderColorSharpIcon color=\"primary\" />\n                                    </IconButton>\n                                </Grid>\n                            </Grid>\n                            <Grid container justify={'flex-start'}>\n                                <Grid item xs={3}>\n                                    <Typography\n                                        component={'h6'}\n                                        variant={'h6'}\n                                        className={classes.heading}\n                                        size={'small'}\n                                    >\n                                        Description\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={9}>\n                                    <IconButton\n                                        aria-label=\"Edit Title\"\n                                        color=\"primary\"\n                                        onClick={() => handleDialogOpen('description')}\n                                        style={{ float: 'right' }}\n                                    >\n                                        <BorderColorSharpIcon color=\"primary\" />\n                                    </IconButton>\n                                </Grid>\n                            </Grid>\n                            {(state.type === 'email' || state.type === 'emailOnly') && (\n                                <Grid container justify={'flex-start'}>\n                                    <Grid item xs={3}>\n                                        <Typography component={'h6'} variant={'h6'} className={classes.heading}>\n                                            Link\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item xs={9}>\n                                        <TextField\n                                            id=\"image-description\"\n                                            variant={'outlined'}\n                                            fullWidth\n                                            placeholder={'Please Link here'}\n                                            onChange={(e) => setCta(e.target.value)}\n                                            size={'small'}\n                                            className={classes.textField}\n                                            error={cta && !validator.isURL(cta)}\n                                            value={cta}\n                                            disabled={state.langCode !== state.defaultLang}\n                                            helperText={\n                                                cta && (\n                                                    <Typography\n                                                        variant=\"caption\"\n                                                        className={classes.alignText}\n                                                        display=\"block\"\n                                                    >\n                                                        {`${cta?.length} < 100`}\n                                                    </Typography>\n                                                )\n                                            }\n                                            inputProps={{ maxLength: 99 }}\n                                        />\n                                    </Grid>\n                                </Grid>\n                            )}\n                            <Divider style={{ marginTop: 8 }} />\n                            <Button\n                                onClick={handleUpdateTitleDescription}\n                                variant=\"contained\"\n                                size=\"small\"\n                                color=\"primary\"\n                                aria-label=\"submit\"\n                                className={classes.submit}\n                                disabled={!imageTitle && !imageDescription}\n                            >\n                                SUBMIT\n                            </Button>\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </>\n            {isTextEditorDialogOpen && (\n                <TextEditor\n                    handleSaveTextEditor={handleTextEditorValue}\n                    handleCancelTextEditor={handleCancelEditor}\n                    data={editorValue}\n                />\n            )}\n        </React.Fragment>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        state: state.formReducer.pageBuilder,\n    }\n}\n\nexport default connect(mapStateToProps)(EditImage)\n"]},"metadata":{},"sourceType":"module"}