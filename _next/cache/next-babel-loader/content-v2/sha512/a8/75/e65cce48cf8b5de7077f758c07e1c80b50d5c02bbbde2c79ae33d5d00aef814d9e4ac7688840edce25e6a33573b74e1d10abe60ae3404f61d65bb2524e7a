{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/@webcms-ui/core/card-slider/index.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useCallback, useState } from 'react';\nimport Slider from 'react-slick';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport CardSliderItem from './card-slider-item';\nimport { connect } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport { setToState, updateState } from 'state/actions';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: '95%',\n    marginBottom: 5\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%'\n  },\n  slideBox: {\n    marginBottom: 50\n  },\n  seeMore: {\n    textAlign: 'right'\n  }\n});\n\nconst CardSlider = props => {\n  const classes = useStyles();\n  const {\n    title,\n    slideData,\n    openId,\n    type,\n    setToState,\n    state\n  } = props;\n  const {\n    0: swiped,\n    1: setSwiped\n  } = useState(false);\n  const {\n    0: loadPiority,\n    1: setLoadPiority\n  } = useState(0);\n  const {\n    t\n  } = useTranslation();\n  const router = useRouter();\n  const handleSwiped = useCallback(() => {\n    setSwiped(true);\n  }, [setSwiped]);\n  const handleSwipedStatus = useCallback(e => {\n    if (swiped) {\n      e.stopPropagation();\n      e.preventDefault();\n      setSwiped(false);\n    }\n  }, [swiped]);\n  const settings = {\n    dots: true,\n    speed: 500,\n    lazyLoad: true,\n    slidesToShow: 3,\n    slidesToScroll: 1,\n    centerMode: true,\n    swipeToSlide: true,\n    infinite: slideData.length > 2 ? true : false,\n    afterChange: current => setLoadPiority(current),\n    responsive: [{\n      breakpoint: 768,\n      settings: {\n        slidesToShow: 1\n      }\n    }]\n  };\n\n  if (state.infoListOneGroup.id) {\n    return __jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, __jsx(Paper, {\n      elevation: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, __jsx(Box, {\n      className: classes.slideBox,\n      p: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, __jsx(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"space-between\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    }, __jsx(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 29\n      }\n    }, __jsx(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      className: classes.hotelListTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 33\n      }\n    }, title)), __jsx(Grid, {\n      item: true,\n      xs: 6,\n      className: classes.seeMore,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 29\n      }\n    }, __jsx(Button, {\n      color: \"primary\",\n      onClick: () => {\n        router.push({\n          pathname: router.pathname,\n          query: {\n            menu: 'info'\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 33\n      }\n    }, t('str_seeLess')))), __jsx(Box, {\n      p: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    }, slideData.sort((a, b) => a.orderno - b.orderno).map((item, i) => {\n      return __jsx(Box, {\n        key: i,\n        onClickCapture: handleSwipedStatus,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 37\n        }\n      }, __jsx(CardSliderItem, {\n        openId: Number(openId),\n        rootCls: classes.root,\n        mediaCls: classes.media,\n        sliderData: item,\n        slideIndex: i,\n        type: type,\n        loadPriority: loadPiority === i ? \"true\" : \"false\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 41\n        }\n      }));\n    })))));\n  }\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, __jsx(Paper, {\n    elevation: type !== 'event' ? 3 : 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, __jsx(Box, {\n    className: classes.slideBox,\n    p: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"space-between\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 25\n    }\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    gutterBottom: true,\n    className: classes.hotelListTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 29\n    }\n  }, title)), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    className: classes.seeMore,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 25\n    }\n  }, type !== 'event' ? __jsx(Button, {\n    color: \"primary\",\n    onClick: () => {\n      router.push({\n        pathname: router.pathname,\n        query: {\n          menu: 'info',\n          catid: slideData[0].catid,\n          hotelrefno: slideData[0].hotelrefno\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 33\n    }\n  }, t('str_seeMore')) : null)), __jsx(Box, {\n    p: type !== 'event' ? 3 : 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }, __jsx(Slider, _extends({\n    onSwipe: handleSwiped\n  }, settings, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 25\n    }\n  }), slideData.sort((a, b) => a.orderno - b.orderno).map((item, i) => {\n    return __jsx(Box, {\n      key: i,\n      onClickCapture: handleSwipedStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 37\n      }\n    }, __jsx(CardSliderItem, {\n      openId: Number(openId),\n      rootCls: classes.root,\n      mediaCls: classes.media,\n      sliderData: item,\n      slideIndex: i,\n      type: type,\n      loadPriority: loadPiority === i ? \"true\" : \"false\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 41\n      }\n    }));\n  }))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    state: state.formReducer.guest\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  updateState: (stateType, stateName, value) => dispatch(updateState(stateType, stateName, value)),\n  setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardSlider);","map":{"version":3,"sources":["/Users/mata/app-cloudweb/@webcms-ui/core/card-slider/index.js"],"names":["React","useCallback","useState","Slider","makeStyles","Box","Button","Grid","Paper","Typography","CardSliderItem","connect","useRouter","setToState","updateState","useTranslation","useStyles","root","maxWidth","marginBottom","media","height","paddingTop","slideBox","seeMore","textAlign","CardSlider","props","classes","title","slideData","openId","type","state","swiped","setSwiped","loadPiority","setLoadPiority","t","router","handleSwiped","handleSwipedStatus","e","stopPropagation","preventDefault","settings","dots","speed","lazyLoad","slidesToShow","slidesToScroll","centerMode","swipeToSlide","infinite","length","afterChange","current","responsive","breakpoint","infoListOneGroup","id","hotelListTitle","push","pathname","query","menu","sort","a","b","orderno","map","item","i","Number","catid","hotelrefno","mapStateToProps","formReducer","guest","mapDispatchToProps","dispatch","stateType","stateName","value"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react'\nimport Slider from 'react-slick'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Box from '@material-ui/core/Box'\nimport Button from '@material-ui/core/Button'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport CardSliderItem from './card-slider-item'\nimport { connect } from 'react-redux'\nimport { useRouter } from 'next/router'\nimport { setToState, updateState } from 'state/actions'\nimport useTranslation from 'lib/translations/hooks/useTranslation'\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: '95%',\n        marginBottom: 5,\n    },\n    media: {\n        height: 0,\n        paddingTop: '56.25%',\n    },\n    slideBox: {\n        marginBottom: 50,\n    },\n    seeMore: {\n        textAlign: 'right'\n    }\n})\n\nconst CardSlider = (props) => {\n    const classes = useStyles()\n    const { title, slideData, openId, type, setToState, state } = props\n    const [swiped, setSwiped] = useState(false)\n    const [loadPiority, setLoadPiority] = useState(0)\n    const { t } = useTranslation()\n    const router = useRouter()\n\n    const handleSwiped = useCallback(() => {\n        setSwiped(true)\n    }, [setSwiped])\n\n    const handleSwipedStatus = useCallback((e) => {\n        if (swiped) {\n            e.stopPropagation()\n            e.preventDefault()\n            setSwiped(false)\n        }\n    }, [swiped])\n\n    const settings = {\n        dots: true,\n        speed: 500,\n        lazyLoad: true,\n        slidesToShow: 3,\n        slidesToScroll: 1,\n        centerMode: true,\n        swipeToSlide: true,\n        infinite: slideData.length > 2 ? true : false,\n        afterChange: current => setLoadPiority(current),\n        responsive: [\n            {\n                breakpoint: 768,\n                settings: {\n                    slidesToShow: 1,\n                },\n            },\n        ],\n    }\n\n    if(state.infoListOneGroup.id) {\n        return (\n            <React.Fragment>\n                <Paper elevation={3}>\n                    <Box className={classes.slideBox} p={3}>\n                        <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\n                            <Grid item xs={6}>\n                                <Typography variant=\"h6\" gutterBottom className={classes.hotelListTitle}>\n                                    {title}\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={6} className={classes.seeMore}>\n                                <Button color=\"primary\" onClick={() => {\n                                    router.push({\n                                        pathname: router.pathname,\n                                        query: {\n                                            menu: 'info'\n                                        },\n                                    })\n                                }}>{t('str_seeLess')}</Button>\n                            </Grid>\n                        </Grid>\n                        <Box p={3}>\n                            {slideData.sort((a, b) => a.orderno - b.orderno).map((item, i) => {\n                                return (\n                                    <Box key={i} onClickCapture={handleSwipedStatus}>\n                                        <CardSliderItem\n                                            openId={Number(openId)}\n                                            rootCls={classes.root}\n                                            mediaCls={classes.media}\n                                            sliderData={item}\n                                            slideIndex={i}\n                                            type={type}\n                                            loadPriority={loadPiority === i ? \"true\" : \"false\"}\n                                        />\n                                    </Box>\n                                )\n                            })}\n                        </Box>\n                    </Box>\n                </Paper>\n            </React.Fragment>\n        )\n    }\n\n    return (\n        <React.Fragment>\n            <Paper elevation={type !== 'event' ? 3 : 0}>\n                <Box className={classes.slideBox} p={1}>\n                    <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\n                        <Grid item xs={6}>\n                            <Typography variant=\"h6\" gutterBottom className={classes.hotelListTitle}>\n                                {title}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={6} className={classes.seeMore}>\n                            {type !== 'event' ? (\n                                <Button\n                                    color='primary'\n                                    onClick={() => {\n                                        router.push({\n                                            pathname: router.pathname,\n                                            query: {\n                                                menu: 'info',\n                                                catid: slideData[0].catid,\n                                                hotelrefno: slideData[0].hotelrefno,\n                                            },\n                                        })\n                                    }}>\n                                    {t('str_seeMore')}\n                                </Button>\n                            ) : null}\n                        </Grid>\n                    </Grid>\n                    <Box p={type !== 'event' ? 3 : 1}>\n                        <Slider onSwipe={handleSwiped} {...settings}>\n                            {slideData.sort((a, b) => a.orderno - b.orderno).map((item, i) => {\n                                return (\n                                    <Box key={i} onClickCapture={handleSwipedStatus}>\n                                        <CardSliderItem\n                                            openId={Number(openId)}\n                                            rootCls={classes.root}\n                                            mediaCls={classes.media}\n                                            sliderData={item}\n                                            slideIndex={i}\n                                            type={type}\n                                            loadPriority={loadPiority === i ? \"true\" : \"false\"}\n                                        />\n                                    </Box>\n                                )\n                            })}\n                        </Slider>\n                    </Box>\n                </Box>\n            </Paper>\n        </React.Fragment>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        state: state.formReducer.guest,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    updateState: (stateType, stateName, value) => dispatch(updateState(stateType, stateName, value)),\n    setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardSlider)\n"]},"metadata":{},"sourceType":"module"}