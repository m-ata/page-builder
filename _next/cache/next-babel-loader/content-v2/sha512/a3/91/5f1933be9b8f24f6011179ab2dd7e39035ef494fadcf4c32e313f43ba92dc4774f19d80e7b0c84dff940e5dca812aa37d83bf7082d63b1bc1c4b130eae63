{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/components/faq/qa/AddText.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport dynamic from 'next/dynamic';\nimport { froalaConfig } from \"../../../constants\";\nconst FroalaEditor = dynamic(async () => {\n  const values = await Promise.all([import('react-froala-wysiwyg'), import('froala-editor/js/plugins.pkgd.min'), import('froala-editor/js/froala_editor.min'), import('froala-editor/js/froala_editor.pkgd.min')]);\n  return values[0];\n}, {\n  loading: () => __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 24\n    }\n  }, \"LOADING!!!\"),\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('react-froala-wysiwyg'), require.resolveWeak('froala-editor/js/plugins.pkgd.min'), require.resolveWeak('froala-editor/js/froala_editor.min'), require.resolveWeak('froala-editor/js/froala_editor.pkgd.min')],\n    modules: ['react-froala-wysiwyg', 'froala-editor/js/plugins.pkgd.min', 'froala-editor/js/froala_editor.min', 'froala-editor/js/froala_editor.pkgd.min']\n  }\n});\n\nconst AddText = props => {\n  const {\n    model,\n    onChangeModel\n  } = props;\n  const {\n    0: text,\n    1: setText\n  } = useState(model);\n  const config = froalaConfig;\n\n  const handleTextChange = text => {\n    setText(text);\n    onChangeModel(text);\n  };\n\n  return __jsx(FroalaEditor, {\n    tag: 'textarea',\n    config: config,\n    model: text,\n    onModelChange: handleTextChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }\n  });\n};\n\nexport default AddText;","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/components/faq/qa/AddText.js"],"names":["React","useState","dynamic","froalaConfig","FroalaEditor","values","Promise","all","loading","ssr","AddText","props","model","onChangeModel","text","setText","config","handleTextChange"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,SAAQC,YAAR,QAA2B,oBAA3B;AAEA,MAAMC,YAAY,GAAGF,OAAO,CACxB,YAAY;AACR,QAAMG,MAAM,GAAG,MAAMC,OAAO,CAACC,GAAR,CAAY,CAC7B,OAAO,sBAAP,CAD6B,EAE7B,OAAO,mCAAP,CAF6B,EAG7B,OAAO,oCAAP,CAH6B,EAI7B,OAAO,yCAAP,CAJ6B,CAAZ,CAArB;AAMA,SAAOF,MAAM,CAAC,CAAD,CAAb;AACH,CATuB,EAUxB;AACIG,EAAAA,OAAO,EAAE,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADnB;AAEIC,EAAAA,GAAG,EAAE,KAFT;AAAA;AAAA,wCAPe,sBAOf,uBANe,mCAMf,uBALe,oCAKf,uBAJe,yCAIf;AAAA,cAPe,sBAOf,EANe,mCAMf,EALe,oCAKf,EAJe,yCAIf;AAAA;AAAA,CAVwB,CAA5B;;AAgBA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAEvB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAA2BF,KAAjC;AACA,QAAM;AAAA,OAACG,IAAD;AAAA,OAAOC;AAAP,MAAkBd,QAAQ,CAACW,KAAD,CAAhC;AACA,QAAMI,MAAM,GAAGb,YAAf;;AAEA,QAAMc,gBAAgB,GAAIH,IAAD,IAAU;AAC/BC,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAD,IAAAA,aAAa,CAACC,IAAD,CAAb;AACH,GAHD;;AAKA,SAAO,MAAC,YAAD;AAAc,IAAA,GAAG,EAAE,UAAnB;AAA+B,IAAA,MAAM,EAAEE,MAAvC;AAA+C,IAAA,KAAK,EAAEF,IAAtD;AAA4D,IAAA,aAAa,EAAEG,gBAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH,CAZD;;AAcA,eAAeP,OAAf","sourcesContent":["import React, {useState} from \"react\";\nimport dynamic from 'next/dynamic'\nimport {froalaConfig} from \"../../../constants\";\n\nconst FroalaEditor = dynamic(\n    async () => {\n        const values = await Promise.all([\n            import('react-froala-wysiwyg'),\n            import('froala-editor/js/plugins.pkgd.min'),\n            import('froala-editor/js/froala_editor.min'),\n            import('froala-editor/js/froala_editor.pkgd.min'),\n        ])\n        return values[0]\n    },\n    {\n        loading: () => <p>LOADING!!!</p>,\n        ssr: false,\n    }\n);\n\nconst AddText = (props) => {\n\n    const { model, onChangeModel } = props\n    const [text, setText] = useState(model);\n    const config = froalaConfig;\n\n    const handleTextChange = (text) => {\n        setText(text);\n        onChangeModel(text);\n    }\n\n    return <FroalaEditor tag={'textarea'} config={config} model={text} onModelChange={handleTextChange} />\n}\n\nexport default AddText;"]},"metadata":{},"sourceType":"module"}