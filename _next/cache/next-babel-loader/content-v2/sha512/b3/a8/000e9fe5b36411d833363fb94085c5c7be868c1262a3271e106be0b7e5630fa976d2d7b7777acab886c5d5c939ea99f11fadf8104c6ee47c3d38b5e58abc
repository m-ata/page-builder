{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/components/page/sections/paragraph/EditParagrapgh.js\";\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect, useState } from 'react';\nimport { connect } from \"react-redux\";\nimport dynamic from 'next/dynamic';\nimport Container from '@material-ui/core/Container'; // import FroalaEditor from 'react-froala-wysiwyg' dynamic;\n\nconst FroalaEditor = dynamic(async () => {\n  const values = await Promise.all([import('react-froala-wysiwyg'), import('froala-editor/js/plugins.pkgd.min'), import('froala-editor/js/froala_editor.min'), import('froala-editor/js/froala_editor.pkgd.min')]);\n  return values[0];\n}, {\n  loading: () => __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 24\n    }\n  }, \"LOADING!!!\"),\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('react-froala-wysiwyg'), require.resolveWeak('froala-editor/js/plugins.pkgd.min'), require.resolveWeak('froala-editor/js/froala_editor.min'), require.resolveWeak('froala-editor/js/froala_editor.pkgd.min')],\n    modules: ['react-froala-wysiwyg', 'froala-editor/js/plugins.pkgd.min', 'froala-editor/js/froala_editor.min', 'froala-editor/js/froala_editor.pkgd.min']\n  }\n});\nimport { ViewList } from '@webcms/orest';\nimport { OREST_ENDPOINT } from '../../../../../../../model/orest/constants';\nimport { useRouter } from 'next/router';\nimport WebCmsGlobal from '../../../../../../webcms-global';\nimport { Checkbox, FormControlLabel } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { froalaConfig } from \"../../../../constants\";\n\nconst EditParagraph = props => {\n  const {\n    paragraphComponent,\n    handleCmponent,\n    state,\n    otherLangParagraph,\n    handleDisable\n  } = props;\n  const {\n    0: model,\n    1: setModel\n  } = useState('');\n  const {\n    0: useBgColor,\n    1: setUseBgColor\n  } = useState(false);\n  const config = froalaConfig;\n  const router = useRouter();\n  const companyId = router.query.companyID;\n  const {\n    GENERAL_SETTINGS,\n    token\n  } = useContext(WebCmsGlobal);\n  const authToken = token || router.query.authToken;\n  useEffect(() => {\n    if (paragraphComponent !== null && paragraphComponent !== void 0 && paragraphComponent.gid) {\n      ViewList({\n        apiUrl: GENERAL_SETTINGS.OREST_URL,\n        endpoint: OREST_ENDPOINT.HCMITEMTXTPAR,\n        token: authToken,\n        params: {\n          query: `gid:${paragraphComponent.gid}`,\n          hotelrefno: Number(companyId)\n        }\n      }).then(res => {\n        if (res.status === 200 && res.data.data.length > 0) {\n          if (state.langCode === state.defaultLang) {\n            setModel(res.data.data[0].itemtext);\n          } else {\n            setModel(otherLangParagraph.text);\n          }\n        }\n      });\n    }\n\n    (paragraphComponent === null || paragraphComponent === void 0 ? void 0 : paragraphComponent.useBgColor) && setUseBgColor(paragraphComponent.useBgColor);\n  }, [paragraphComponent, otherLangParagraph]);\n  useEffect(() => {\n    model ? handleDisable(false) : handleDisable(true);\n\n    if (state.langCode === state.defaultLang) {\n      handleCmponent({\n        service: model,\n        type: paragraphComponent.type,\n        gid: paragraphComponent.gid,\n        width: paragraphComponent.width,\n        id: paragraphComponent.id,\n        useBgColor: useBgColor\n      });\n    } else {\n      handleCmponent({\n        text: model\n      });\n    }\n  }, [model, useBgColor]);\n\n  const handleModelChange = model => {\n    setModel(model);\n  };\n\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    component: 'div',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: useBgColor,\n      onChange: () => setUseBgColor(!useBgColor),\n      name: \"background-color\",\n      color: \"primary\",\n      style: {\n        float: 'right'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }\n    }),\n    label: \"Background Color\",\n    disabled: (state === null || state === void 0 ? void 0 : state.langCode) !== (state === null || state === void 0 ? void 0 : state.defaultLang),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  })), __jsx(FroalaEditor, {\n    tag: \"textarea\",\n    config: config,\n    model: model,\n    onModelChange: handleModelChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    state: state.formReducer.pageBuilder\n  };\n};\n\nexport default connect(mapStateToProps)(EditParagraph);","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/components/page/sections/paragraph/EditParagrapgh.js"],"names":["React","useContext","useEffect","useState","connect","dynamic","Container","FroalaEditor","values","Promise","all","loading","ssr","ViewList","OREST_ENDPOINT","useRouter","WebCmsGlobal","Checkbox","FormControlLabel","Typography","froalaConfig","EditParagraph","props","paragraphComponent","handleCmponent","state","otherLangParagraph","handleDisable","model","setModel","useBgColor","setUseBgColor","config","router","companyId","query","companyID","GENERAL_SETTINGS","token","authToken","gid","apiUrl","OREST_URL","endpoint","HCMITEMTXTPAR","params","hotelrefno","Number","then","res","status","data","length","langCode","defaultLang","itemtext","text","service","type","width","id","handleModelChange","float","mapStateToProps","formReducer","pageBuilder"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport {connect} from \"react-redux\";\nimport dynamic from 'next/dynamic'\nimport Container from '@material-ui/core/Container'\n\n// import FroalaEditor from 'react-froala-wysiwyg' dynamic;\nconst FroalaEditor = dynamic(\n    async () => {\n        const values = await Promise.all([\n            import('react-froala-wysiwyg'),\n            import('froala-editor/js/plugins.pkgd.min'),\n            import('froala-editor/js/froala_editor.min'),\n            import('froala-editor/js/froala_editor.pkgd.min'),\n        ])\n        return values[0]\n    },\n    {\n        loading: () => <p>LOADING!!!</p>,\n        ssr: false,\n    }\n);\n\nimport { ViewList } from '@webcms/orest'\nimport { OREST_ENDPOINT } from '../../../../../../../model/orest/constants'\nimport { useRouter } from 'next/router'\nimport WebCmsGlobal from '../../../../../../webcms-global'\nimport {Checkbox, FormControlLabel} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {froalaConfig} from \"../../../../constants\";\n\nconst EditParagraph = (props) => {\n\n    const { paragraphComponent, handleCmponent, state, otherLangParagraph, handleDisable } = props\n\n    const [model, setModel] = useState('');\n    const [useBgColor, setUseBgColor] = useState(false);\n    const config = froalaConfig;\n\n    const router = useRouter();\n    const companyId = router.query.companyID;\n    const { GENERAL_SETTINGS, token } = useContext(WebCmsGlobal);\n    const authToken = token || router.query.authToken;\n\n    useEffect(() => {\n        if (paragraphComponent?.gid) {\n            ViewList({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: OREST_ENDPOINT.HCMITEMTXTPAR,\n                token: authToken,\n                params: {\n                    query: `gid:${paragraphComponent.gid}`,\n                    hotelrefno: Number(companyId),\n                },\n            }).then((res) => {\n                if (res.status === 200 && res.data.data.length > 0) {\n                    if (state.langCode === state.defaultLang) {\n                        setModel(res.data.data[0].itemtext)\n                    } else {\n                        setModel(otherLangParagraph.text);\n                    }\n\n                }\n            })\n        }\n        paragraphComponent?.useBgColor && setUseBgColor(paragraphComponent.useBgColor);\n    }, [paragraphComponent, otherLangParagraph]);\n\n    useEffect(() => {\n        model ? handleDisable(false) : handleDisable(true);\n        if (state.langCode === state.defaultLang) {\n            handleCmponent({\n                service: model,\n                type: paragraphComponent.type,\n                gid: paragraphComponent.gid,\n                width: paragraphComponent.width,\n                id: paragraphComponent.id,\n                useBgColor: useBgColor\n            });\n        } else {\n            handleCmponent({\n                text: model\n            })\n        }\n    }, [model, useBgColor]);\n\n    const handleModelChange = (model) => {\n        setModel(model)\n    }\n\n    return (\n        <Container>\n            <Typography component={'div'}>\n                <FormControlLabel\n                    control={\n                        <Checkbox\n                            checked={useBgColor}\n                            onChange={() => setUseBgColor(!useBgColor)}\n                            name=\"background-color\"\n                            color=\"primary\"\n                            style={{float: 'right'}}\n                        />\n                    }\n                    label=\"Background Color\"\n                    disabled={state?.langCode !== state?.defaultLang}\n                />\n            </Typography>\n            <FroalaEditor\n                tag=\"textarea\"\n                config={config}\n                model={model}\n                onModelChange={handleModelChange}\n            />\n        </Container>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        state: state.formReducer.pageBuilder\n    }\n};\n\nexport default connect(mapStateToProps)(EditParagraph)\n"]},"metadata":{},"sourceType":"module"}