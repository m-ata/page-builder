{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/booking/components/BookingStepper.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Stepper, Step, StepLabel, Hidden, Typography, CircularProgress, Box } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nvar mobileStepper = makeStyles(function () {\n  return {\n    root: {\n      display: 'flex',\n      alignItems: 'flex-start',\n      border: '1px solid #d2d2d26b',\n      '& > div': {\n        textAlign: 'start',\n        padding: '16px 20px 16px 20px',\n        borderLeft: '1px solid #d2d2d26b',\n        '&:first-child': {\n          borderLeft: 'none'\n        }\n      }\n    },\n    progress: {\n      flexGrow: 3,\n      textAlign: 'center!important',\n      padding: '19px 16px 13px 16px!important'\n    },\n    stepper: {\n      flexGrow: 8\n    },\n    circle: {\n      borderRadius: '60%',\n      boxShadow: 'inset 0 0 1px 3px #ebebeb'\n    }\n  };\n});\n\nfunction StepperProgress(props) {\n  var mobileClasses = mobileStepper();\n  return __jsx(Box, {\n    position: \"relative\",\n    display: \"inline-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, __jsx(CircularProgress, {\n    classes: {\n      root: mobileClasses.circle\n    },\n    variant: \"determinate\",\n    value: Math.round(props.value * 100 / props.total),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), __jsx(Box, {\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n    position: \"absolute\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, __jsx(Typography, {\n    variant: \"caption\",\n    component: \"div\",\n    style: {\n      marginLeft: 8,\n      marginTop: 2\n    },\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"\".concat(Math.round(props.value), \" / \").concat(Math.round(props.total)))));\n}\n\n_c = StepperProgress;\n\nvar BookingStepper = function BookingStepper(props) {\n  _s();\n\n  var activeStep = props.activeStep,\n      steps = props.steps,\n      classes = props.classes;\n  var forMobile = ['md', 'lg', 'xl'];\n  var forDesktop = ['xs', 'sm'];\n  var mobileClasses = mobileStepper();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var nextStep = activeStep + 1;\n  var isfinalStep = nextStep === steps.length;\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, __jsx(Hidden, {\n    only: forMobile,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: mobileClasses.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: mobileClasses.progress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, __jsx(StepperProgress, {\n    value: nextStep,\n    total: steps.length,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  })), __jsx(\"div\", {\n    className: mobileClasses.stepper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, __jsx(Typography, {\n    component: \"div\",\n    variant: \"body1\",\n    color: \"textPrimary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, steps[activeStep]), !isfinalStep ? __jsx(Typography, {\n    component: \"div\",\n    variant: \"subtitle2\",\n    color: \"textSecondary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 29\n    }\n  }, t('str_nextStep'), \": \", steps[nextStep]) : __jsx(Typography, {\n    component: \"div\",\n    variant: \"subtitle2\",\n    color: \"textSecondary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 29\n    }\n  }, t('str_youAreInTheLastStep'))))), __jsx(Hidden, {\n    only: forDesktop,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, __jsx(Stepper, {\n    classes: classes,\n    activeStep: isfinalStep ? activeStep + 1 : activeStep,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, steps.map(function (label, index) {\n    return __jsx(Step, {\n      key: label + index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }\n    }, __jsx(StepLabel, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 29\n      }\n    }, label));\n  }))));\n};\n\n_s(BookingStepper, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c2 = BookingStepper;\nexport default BookingStepper;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StepperProgress\");\n$RefreshReg$(_c2, \"BookingStepper\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/booking/components/BookingStepper.js"],"names":["React","Stepper","Step","StepLabel","Hidden","Typography","CircularProgress","Box","makeStyles","useTranslation","mobileStepper","root","display","alignItems","border","textAlign","padding","borderLeft","progress","flexGrow","stepper","circle","borderRadius","boxShadow","StepperProgress","props","mobileClasses","Math","round","value","total","marginLeft","marginTop","BookingStepper","activeStep","steps","classes","forMobile","forDesktop","t","nextStep","isfinalStep","length","map","label","index"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Stepper, Step, StepLabel, Hidden, Typography, CircularProgress, Box } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport useTranslation from 'lib/translations/hooks/useTranslation'\n\nconst mobileStepper = makeStyles(() => ({\n    root: {\n        display: 'flex',\n        alignItems: 'flex-start',\n        border: '1px solid #d2d2d26b',\n        '& > div': {\n            textAlign: 'start',\n            padding: '16px 20px 16px 20px',\n            borderLeft: '1px solid #d2d2d26b',\n            '&:first-child': {\n                borderLeft: 'none',\n            },\n        },\n    },\n    progress: {\n        flexGrow: 3,\n        textAlign: 'center!important',\n        padding: '19px 16px 13px 16px!important'\n    },\n    stepper: {\n        flexGrow: 8,\n    },\n    circle: {\n        borderRadius: '60%',\n        boxShadow: 'inset 0 0 1px 3px #ebebeb'\n    }\n}))\n\nfunction StepperProgress(props) {\n    const mobileClasses = mobileStepper()\n\n    return (\n        <Box position=\"relative\" display=\"inline-flex\">\n            <CircularProgress\n                classes={{\n                    root: mobileClasses.circle,\n                }}\n                variant=\"determinate\" value={Math.round(props.value * 100 / props.total)}/>\n            <Box\n                top={0}\n                left={0}\n                bottom={0}\n                right={0}\n                position=\"absolute\"\n                display=\"flex\"\n                alignItems=\"center\"\n                justify=\"center\"\n            >\n                <Typography variant=\"caption\" component=\"div\" style={{ marginLeft: 8, marginTop: 2 }} color=\"textSecondary\">{`${Math.round(props.value)} / ${Math.round(props.total)}`}</Typography>\n            </Box>\n        </Box>\n    )\n}\n\nconst BookingStepper = (props) => {\n    const { activeStep, steps, classes } = props\n    const forMobile = ['md', 'lg', 'xl']\n    const forDesktop = ['xs', 'sm']\n    const mobileClasses = mobileStepper()\n    const { t } = useTranslation()\n\n    const nextStep = activeStep + 1\n    const isfinalStep = nextStep === steps.length\n\n    return (\n        <React.Fragment>\n            <Hidden only={forMobile}>\n                <div className={mobileClasses.root}>\n                    <div className={mobileClasses.progress}>\n                        <StepperProgress value={nextStep} total={steps.length}/>\n                    </div>\n                    <div className={mobileClasses.stepper}>\n                        <Typography component=\"div\" variant=\"body1\" color=\"textPrimary\">\n                            {steps[activeStep]}\n                        </Typography>\n                        {!isfinalStep ? (\n                            <Typography component=\"div\" variant=\"subtitle2\" color=\"textSecondary\">\n                                {t('str_nextStep')}: {steps[nextStep]}\n                            </Typography>\n                        ) : <Typography component=\"div\" variant=\"subtitle2\" color=\"textSecondary\">\n                            {t('str_youAreInTheLastStep')}\n                        </Typography>\n                        }\n                    </div>\n                </div>\n            </Hidden>\n            <Hidden only={forDesktop}>\n                <Stepper classes={classes} activeStep={isfinalStep ? (activeStep + 1) : activeStep}>\n                    {steps.map((label, index) =>\n                        <Step key={label + index}>\n                            <StepLabel>{label}</StepLabel>\n                        </Step>,\n                    )}\n                </Stepper>\n            </Hidden>\n        </React.Fragment>\n    )\n}\n\nexport default BookingStepper"]},"metadata":{},"sourceType":"module"}