{"ast":null,"code":"import _extends from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/mata/app-cloudweb/components/emp-portal/tabs/Languages/index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Insert, UseOrest, ViewList, Patch, Delete, Upload } from \"@webcms/orest\";\nimport WebCmsGlobal from \"../../../webcms-global\";\nimport { useSelector } from \"react-redux\";\nimport { isErrorMsg, mobileTelNoFormat, OREST_ENDPOINT } from \"../../../../model/orest/constants\";\nimport { Grid, Typography, Dialog, Checkbox, FormControlLabel, Button, Menu, MenuItem, IconButton, DialogTitle, DialogContent, DialogActions } from \"@material-ui/core\";\nimport { useSnackbar } from \"notistack\";\nimport { SLASH } from \"../../../../model/globals\";\nimport useTranslation from \"../../../../lib/translations/hooks/useTranslation\";\nimport renderFormElements, { ELEMENT_TYPES } from \"../../../render-form-elements\";\nimport { required } from \"../../../../state/utils/form\";\nimport AddDialogActions from \"../../../AddDialogActions\";\nimport { LocaleContext } from \"../../../../lib/translations/context/LocaleContext\";\nimport LoadingSpinner from \"../../../LoadingSpinner\";\nimport { helper, orest } from \"../../../../@webcms-globals\";\nimport TrackedChangesDialog from \"../../../TrackedChangesDialog\";\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\nimport MaterialTable, { MTableHeader } from \"material-table\";\nimport MaterialTableLocalization from \"../../../MaterialTableLocalization\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport TableColumnText from \"../../../TableColumnText\";\nimport PopupState, { bindMenu, bindTrigger } from \"material-ui-popup-state\";\nimport { CustomToolTip } from \"../../../user-portal/components/CustomToolTip/CustomToolTip\";\nimport CachedIcon from \"@material-ui/icons/Cached\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport { PhotoCamera } from \"@material-ui/icons\";\nimport { DropzoneDialog } from \"material-ui-dropzone\";\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\nimport Fab from \"@material-ui/core/Fab\";\nvar VARIANT = 'outlined';\n\nfunction Languages(props) {\n  _s();\n\n  var _languageData$langid,\n      _languageData$langid2,\n      _languageData$langid3,\n      _languageData$langid4,\n      _languageData$verbale,\n      _languageData$verbale2,\n      _languageData$verbale3,\n      _languageData$writenl,\n      _languageData$writenl2,\n      _languageData$writenl3,\n      _languageData$readlev,\n      _languageData$readlev2,\n      _languageData$readlev3,\n      _languageData$descrip,\n      _languageData$descrip2,\n      _languageData$descrip3,\n      _languageData$descrip4,\n      _this = this;\n\n  //props\n  var empId = props.empId; //snackbar\n\n  var _useSnackbar = useSnackbar(),\n      enqueueSnackbar = _useSnackbar.enqueueSnackbar; //context\n\n\n  var _useContext = useContext(WebCmsGlobal),\n      GENERAL_SETTINGS = _useContext.GENERAL_SETTINGS;\n\n  var _useContext2 = useContext(LocaleContext),\n      locale = _useContext2.locale;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var tableLocalization = MaterialTableLocalization(); //redux state\n\n  var token = useSelector(function (state) {\n    var _state$orest, _state$orest$currentU, _state$orest$currentU2;\n\n    return (state === null || state === void 0 ? void 0 : (_state$orest = state.orest) === null || _state$orest === void 0 ? void 0 : (_state$orest$currentU = _state$orest.currentUser) === null || _state$orest$currentU === void 0 ? void 0 : (_state$orest$currentU2 = _state$orest$currentU.auth) === null || _state$orest$currentU2 === void 0 ? void 0 : _state$orest$currentU2.access_token) || false;\n  });\n  var hotelRefNo = useSelector(function (state) {\n    var _state$hotelinfo;\n\n    return (state === null || state === void 0 ? void 0 : (_state$hotelinfo = state.hotelinfo) === null || _state$hotelinfo === void 0 ? void 0 : _state$hotelinfo.currentHotelRefNo) || GENERAL_SETTINGS.HOTELREFNO || false;\n  });\n  var state = useSelector(function (state) {\n    var _state$orest2, _state$orest2$state, _state$orest2$state$e;\n\n    return (state === null || state === void 0 ? void 0 : (_state$orest2 = state.orest) === null || _state$orest2 === void 0 ? void 0 : (_state$orest2$state = _state$orest2.state) === null || _state$orest2$state === void 0 ? void 0 : (_state$orest2$state$e = _state$orest2$state.emp) === null || _state$orest2$state$e === void 0 ? void 0 : _state$orest2$state$e.mid) || false;\n  }); //locale state\n\n  var initialState = {\n    langid: {\n      value: '',\n      isError: false,\n      required: true,\n      helperText: ''\n    },\n    verbalevel: {\n      value: 1,\n      isError: false,\n      required: false,\n      helperText: ''\n    },\n    writenlevel: {\n      value: 1,\n      isError: false,\n      required: false,\n      helperText: ''\n    },\n    readlevel: {\n      value: 1,\n      isError: false,\n      required: false,\n      helperText: ''\n    },\n    description: {\n      value: '',\n      isError: false,\n      required: false,\n      helperText: ''\n    }\n  };\n\n  var _useState = useState(false),\n      isLoadingList = _useState[0],\n      setIsLoadingList = _useState[1];\n\n  var _useState2 = useState(false),\n      allHotels = _useState2[0],\n      setAllHotels = _useState2[1];\n\n  var _useState3 = useState([]),\n      languageList = _useState3[0],\n      setLanguageList = _useState3[1];\n\n  var _useState4 = useState(false),\n      openAddDialog = _useState4[0],\n      setOpenAddDialog = _useState4[1];\n\n  var _useState5 = useState(null),\n      selectedLanguageData = _useState5[0],\n      setSelectedLanguageData = _useState5[1];\n\n  var _useState6 = useState(false),\n      selectedGid = _useState6[0],\n      setSelectedGid = _useState6[1];\n\n  var _useState7 = useState(null),\n      getData = _useState7[0],\n      setGetData = _useState7[1];\n\n  var _useState8 = useState(false),\n      openTrackedDialog = _useState8[0],\n      setOpenTrackedDialog = _useState8[1];\n\n  var _useState9 = useState(false),\n      deleteOpenDialog = _useState9[0],\n      setDeleteOpenDialog = _useState9[1];\n\n  var _useState10 = useState(false),\n      isDef = _useState10[0],\n      setIsDef = _useState10[1];\n\n  var _useState11 = useState(false),\n      isSaving = _useState11[0],\n      setIsSaving = _useState11[1];\n\n  var _useState12 = useState(initialState),\n      languageData = _useState12[0],\n      setLanguageData = _useState12[1];\n\n  var _useState13 = useState(initialState),\n      languageDataBase = _useState13[0],\n      setLanguageDataBase = _useState13[1];\n\n  var _useState14 = useState(false),\n      isInitialStateLoad = _useState14[0],\n      setIsInitialStateLoad = _useState14[1];\n\n  var _useState15 = useState(false),\n      isDeleting = _useState15[0],\n      setIsDeleting = _useState15[1];\n\n  var _useState16 = useState(true),\n      open = _useState16[0],\n      setOpen = _useState16[1];\n\n  var _useState17 = useState(false),\n      langFileUploadStatus = _useState17[0],\n      setLangFileUploadStatus = _useState17[1];\n\n  var _useState18 = useState(false),\n      taskFileListLoading = _useState18[0],\n      setLangFileListLoading = _useState18[1];\n\n  var _useState19 = useState([]),\n      taskFileList = _useState19[0],\n      setLangFileList = _useState19[1];\n\n  var _useState20 = useState(null),\n      selectedLanguageGid = _useState20[0],\n      setSelectedLanguageGid = _useState20[1];\n\n  var openDialog = function openDialog() {\n    setLangFileUploadStatus(true);\n  };\n\n  var openTrackDialog = function openTrackDialog(gid) {\n    setSelectedLanguageGid(gid);\n    setDeleteOpenDialog(true);\n  };\n\n  var formElements = [{\n    type: ELEMENT_TYPES.autoComplete,\n    id: 'langid',\n    name: 'langid',\n    value: ((_languageData$langid = languageData.langid) === null || _languageData$langid === void 0 ? void 0 : _languageData$langid.value) || null,\n    disabled: isSaving,\n    label: t('str_language'),\n    variant: VARIANT,\n    required: (_languageData$langid2 = languageData.langid) === null || _languageData$langid2 === void 0 ? void 0 : _languageData$langid2.isRequired,\n    error: (_languageData$langid3 = languageData.langid) === null || _languageData$langid3 === void 0 ? void 0 : _languageData$langid3.isError,\n    helperText: (_languageData$langid4 = languageData.langid) === null || _languageData$langid4 === void 0 ? void 0 : _languageData$langid4.helperText,\n    onChange: function onChange(newValue, name) {\n      return handleOnChangeFormElements(newValue, name);\n    },\n    onBlur: function onBlur(e, name) {\n      return handleOnBlurFormElements(e, name);\n    },\n    onLoad: function onLoad(initialValue, name) {\n      var data = _objectSpread({}, languageData);\n\n      data[name].value = initialValue ? initialValue : null;\n      setLanguageData(data);\n    },\n    endpoint: 'ralang/view/list',\n    params: {\n      text: '',\n      limit: 25,\n      field: 'code'\n    },\n    initialId: isInitialStateLoad && (selectedLanguageData === null || selectedLanguageData === void 0 ? void 0 : selectedLanguageData.langid) || false,\n    showOptionLabel: 'description',\n    showOption: 'description',\n    searchParam: 'description',\n    fullWidth: true,\n    gridProps: {\n      xs: 12,\n      sm: 6\n    }\n  }, {\n    type: ELEMENT_TYPES.spinEdit,\n    id: 'verbalevel',\n    name: 'verbalevel',\n    max: 6,\n    defaultValue: 1,\n    padding: 0,\n    error: (_languageData$verbale = languageData.verbalevel) === null || _languageData$verbale === void 0 ? void 0 : _languageData$verbale.isError,\n    required: (_languageData$verbale2 = languageData.verbalevel) === null || _languageData$verbale2 === void 0 ? void 0 : _languageData$verbale2.isRequired,\n    disabled: isSaving,\n    label: t('str_verbalLevel'),\n    helperText: (_languageData$verbale3 = languageData.verbalevel) === null || _languageData$verbale3 === void 0 ? void 0 : _languageData$verbale3.helperText,\n    onChange: function onChange(e, name) {\n      return handleOnChangeFormElements(e, name);\n    },\n    onBlur: function onBlur(e) {\n      return handleOnBlurFormElements(e);\n    },\n    variant: VARIANT,\n    fullWidth: true,\n    gridProps: {\n      xs: 12,\n      sm: 6\n    }\n  }, {\n    type: ELEMENT_TYPES.spinEdit,\n    id: 'writenlevel',\n    name: 'writenlevel',\n    max: 6,\n    defaultValue: 1,\n    padding: 0,\n    error: (_languageData$writenl = languageData.writenlevel) === null || _languageData$writenl === void 0 ? void 0 : _languageData$writenl.isError,\n    required: (_languageData$writenl2 = languageData.writenlevel) === null || _languageData$writenl2 === void 0 ? void 0 : _languageData$writenl2.isRequired,\n    disabled: isSaving,\n    label: t('str_writingLevel'),\n    helperText: (_languageData$writenl3 = languageData.writenlevel) === null || _languageData$writenl3 === void 0 ? void 0 : _languageData$writenl3.helperText,\n    onChange: function onChange(e, name) {\n      return handleOnChangeFormElements(e, name);\n    },\n    onBlur: function onBlur(e) {\n      return handleOnBlurFormElements(e);\n    },\n    variant: VARIANT,\n    fullWidth: true,\n    gridProps: {\n      xs: 12,\n      sm: 6\n    }\n  }, {\n    type: ELEMENT_TYPES.spinEdit,\n    id: 'readlevel',\n    name: 'readlevel',\n    max: 6,\n    defaultValue: 1,\n    padding: 0,\n    error: (_languageData$readlev = languageData.readlevel) === null || _languageData$readlev === void 0 ? void 0 : _languageData$readlev.isError,\n    required: (_languageData$readlev2 = languageData.readlevel) === null || _languageData$readlev2 === void 0 ? void 0 : _languageData$readlev2.isRequired,\n    disabled: isSaving,\n    label: t('str_readingLevel'),\n    helperText: (_languageData$readlev3 = languageData.readlevel) === null || _languageData$readlev3 === void 0 ? void 0 : _languageData$readlev3.helperText,\n    onChange: function onChange(e, name) {\n      return handleOnChangeFormElements(e, name);\n    },\n    onBlur: function onBlur(e) {\n      return handleOnBlurFormElements(e);\n    },\n    variant: VARIANT,\n    fullWidth: true,\n    gridProps: {\n      xs: 12,\n      sm: 6\n    }\n  }, {\n    type: ELEMENT_TYPES.textField,\n    id: 'description',\n    name: 'description',\n    value: (_languageData$descrip = languageData.description) === null || _languageData$descrip === void 0 ? void 0 : _languageData$descrip.value,\n    error: (_languageData$descrip2 = languageData.description) === null || _languageData$descrip2 === void 0 ? void 0 : _languageData$descrip2.isError,\n    required: (_languageData$descrip3 = languageData.description) === null || _languageData$descrip3 === void 0 ? void 0 : _languageData$descrip3.isRequired,\n    disabled: isSaving,\n    label: t('str_description'),\n    helperText: (_languageData$descrip4 = languageData.description) === null || _languageData$descrip4 === void 0 ? void 0 : _languageData$descrip4.helperText,\n    onChange: function onChange(e) {\n      return handleOnChangeFormElements(e);\n    },\n    onBlur: function onBlur(e) {\n      return handleOnBlurFormElements(e);\n    },\n    variant: VARIANT,\n    fullWidth: true,\n    gridProps: {\n      xs: 12,\n      sm: 12\n    }\n  }];\n  var onClick;\n  var languageColumns = [{\n    title: __jsx(Button, {\n      style: {\n        padding: 0,\n        maxWidth: 25,\n        minWidth: 25\n      },\n      disabled: true,\n      color: 'primary',\n      variant: 'text',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }\n    }, __jsx(MoreVertIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 21\n      }\n    })),\n    render: function render(props) {\n      return __jsx(TableColumnText, {\n        minWidth: 30,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 17\n        }\n      }, __jsx(PopupState, {\n        variant: \"popover\",\n        popupId: \"material-table-action-column\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }\n      }, function (popupState) {\n        return __jsx(React.Fragment, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 29\n          }\n        }, __jsx(Button, _extends({\n          style: {\n            padding: 0,\n            maxWidth: 25,\n            minWidth: 25\n          },\n          color: 'primary',\n          variant: 'contained'\n        }, bindTrigger(popupState), {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 33\n          }\n        }), __jsx(MoreVertIcon, {\n          size: 'small',\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 37\n          }\n        })), __jsx(Menu, _extends({\n          anchorOrigin: {\n            vertical: \"bottom\",\n            horizontal: \"left\"\n          },\n          transformOrigin: {\n            vertical: \"top\",\n            horizontal: \"left\"\n          },\n          getContentAnchorEl: null\n        }, bindMenu(popupState), {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 33\n          }\n        }), __jsx(MenuItem, {\n          onClick: function onClick() {\n            setSelectedLanguageData(props);\n            setSelectedGid((props === null || props === void 0 ? void 0 : props.gid) || false);\n            handleOpenAddDialog(props);\n            popupState.close();\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 37\n          }\n        }, __jsx(EditOutlinedIcon, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 42\n          }\n        }), __jsx(Typography, {\n          style: {\n            paddingLeft: '8px'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 41\n          }\n        }, t('str_edit'))), __jsx(MenuItem, {\n          variant: \"outlined\",\n          onClick: function onClick() {\n            return openTrackDialog(props === null || props === void 0 ? void 0 : props.gid);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 37\n          }\n        }, __jsx(DeleteIcon, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 41\n          }\n        }), __jsx(Typography, {\n          style: {\n            paddingLeft: '8px'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 41\n          }\n        }, t('str_delete')))));\n      }));\n    }\n  }, {\n    title: t('str_language'),\n    field: 'langid',\n    render: function render(props) {\n      return __jsx(TableColumnText, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 32\n        }\n      }, props === null || props === void 0 ? void 0 : props.langcode);\n    }\n  }, {\n    title: t('str_verbalLevel'),\n    field: 'verbalevel',\n    render: function render(props) {\n      return __jsx(TableColumnText, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 32\n        }\n      }, props === null || props === void 0 ? void 0 : props.verbalevel);\n    }\n  }, {\n    title: t('str_writingLevel'),\n    field: 'writenlevel',\n    render: function render(props) {\n      return __jsx(TableColumnText, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 32\n        }\n      }, props === null || props === void 0 ? void 0 : props.writenlevel);\n    }\n  }, {\n    title: t('str_readingLevel'),\n    field: 'readlevel',\n    render: function render(props) {\n      return __jsx(TableColumnText, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 32\n        }\n      }, props === null || props === void 0 ? void 0 : props.readlevel);\n    }\n  }, {\n    title: t('str_description'),\n    field: 'description',\n    render: function render(props) {\n      return __jsx(TableColumnText, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 32\n        }\n      }, props === null || props === void 0 ? void 0 : props.description);\n    }\n  }];\n  useEffect(function () {\n    if (token && empId) {\n      getLanguageList();\n    }\n  }, []);\n  useEffect(function () {\n    var isEffect = true;\n\n    if (isEffect && languageData && getData) {\n      var newClientInitialState = helper.objectMapper(languageData, getData, ['langid']);\n      setLanguageData(newClientInitialState);\n      setLanguageDataBase(newClientInitialState);\n      setIsInitialStateLoad(true);\n    }\n\n    return function () {\n      isEffect = false;\n    };\n  }, [getData]);\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  var handleDeleteItem = function handleDeleteItem(gid) {\n    setIsDeleting(true);\n    setDeleteOpenDialog(false);\n    Delete({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.EMPLANG,\n      token: token,\n      gid: gid,\n      params: {\n        hotelrefno: GENERAL_SETTINGS.HOTELREFNO\n      }\n    }).then(function (res) {\n      if (res.status === 200) {\n        getLanguageList();\n        enqueueSnackbar(t('str_processCompletedSuccessfully'), {\n          variant: 'success'\n        });\n      } else {\n        var _error$errorMsg, _error$errorMsg2;\n\n        var error = isErrorMsg(res);\n        enqueueSnackbar(((_error$errorMsg = error.errorMsg) === null || _error$errorMsg === void 0 ? void 0 : _error$errorMsg.length) > 50 ? (_error$errorMsg2 = error.errorMsg) === null || _error$errorMsg2 === void 0 ? void 0 : _error$errorMsg2.substring(0, 50) : error.errorMsg, {\n          variant: 'error'\n        });\n        setIsDeleting(false);\n      }\n    });\n  };\n\n  var getLanguageList = function getLanguageList() {\n    setIsLoadingList(true);\n    ViewList({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.EMPLANG,\n      token: token,\n      params: {\n        query: \"empid:\".concat(empId),\n        allhotels: allHotels,\n        hotelrefno: hotelRefNo\n      }\n    }).then(function (res) {\n      setIsLoadingList(false);\n\n      if (res.status === 200) {\n        if (res.data.count > 0) {\n          setLanguageList(res.data.data);\n        }\n      } else {\n        var _error$errorMsg3, _error$errorMsg4;\n\n        var error = isErrorMsg(res);\n        enqueueSnackbar(((_error$errorMsg3 = error.errorMsg) === null || _error$errorMsg3 === void 0 ? void 0 : _error$errorMsg3.length) > 50 ? (_error$errorMsg4 = error.errorMsg) === null || _error$errorMsg4 === void 0 ? void 0 : _error$errorMsg4.substring(0, 50) : error.errorMsg, {\n          variant: 'error'\n        });\n      }\n    });\n  };\n\n  var handleGetselectedLanguage = function handleGetselectedLanguage(selectedLanguage) {\n    if (selectedLanguage) {\n      setIsDef(true);\n      UseOrest({\n        apiUrl: GENERAL_SETTINGS.OREST_URL,\n        endpoint: OREST_ENDPOINT.EMPLANG + SLASH + OREST_ENDPOINT.VIEW + SLASH + 'get' + SLASH + selectedLanguage.gid,\n        token: token\n      }).then(function (res) {\n        setIsDef(false);\n\n        if (res.status === 200 && res.data.data) {\n          var data = res.data.data;\n          setGetData(data);\n        }\n      });\n    }\n  };\n\n  var handleDefRecord = function handleDefRecord() {\n    setIsDef(true);\n    UseOrest({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.EMPLANG + SLASH + OREST_ENDPOINT.DEF,\n      token: token,\n      params: {\n        hotelrefno: hotelRefNo\n      }\n    }).then(function (res) {\n      if (res.status === 200 && res.data.count > 0) {\n        var data = Object.assign({}, res.data.data, languageData);\n        setLanguageData(data);\n        setLanguageDataBase(data);\n      }\n\n      setIsDef(false);\n    });\n  };\n\n  var handleSave = function handleSave() {\n    var data = _objectSpread({}, languageData);\n\n    Object.keys(initialState).map(function (key) {\n      data[key] = typeof data[key].value === 'object' ? data[key].value ? data[key].value.id : null : data[key].value;\n    });\n\n    if (empId) {\n      setIsSaving(true);\n\n      if (selectedGid) {\n        Patch({\n          apiUrl: GENERAL_SETTINGS.OREST_URL,\n          endpoint: OREST_ENDPOINT.EMPLANG,\n          gid: selectedGid,\n          data: data,\n          token: token\n        }).then(function (res) {\n          if (res.status === 200) {\n            enqueueSnackbar(t('str_processCompletedSuccessfully'), {\n              variant: 'success'\n            });\n            setOpenAddDialog(false);\n            getLanguageList();\n            handleReset();\n          } else {\n            var error = isErrorMsg(res);\n            enqueueSnackbar(error.errorMsg, {\n              variant: 'error'\n            });\n          }\n\n          setIsSaving(false);\n        });\n      } else {\n        data.empid = empId;\n        data.hotelrefno = hotelRefNo;\n        Insert({\n          apiUrl: GENERAL_SETTINGS.OREST_URL,\n          endpoint: OREST_ENDPOINT.EMPLANG,\n          token: token,\n          data: data\n        }).then(function (res) {\n          if (res.status === 200) {\n            enqueueSnackbar(t('str_processCompletedSuccessfully'), {\n              variant: 'success'\n            });\n            setOpenAddDialog(false);\n            getLanguageList();\n            handleReset();\n          } else {\n            var error = isErrorMsg(res);\n            enqueueSnackbar(error.errorMsg, {\n              variant: 'error'\n            });\n          }\n\n          setIsSaving(false);\n        });\n      }\n    }\n  };\n\n  var handleOnChangeFormElements = function handleOnChangeFormElements(event, key, isOnBlur) {\n    var name = key ? key : event.target.name;\n    var value = event !== null && event !== void 0 && event.target ? event.target.value : event;\n\n    if (isOnBlur) {\n      var _languageData$name, _languageData$name2;\n\n      setLanguageData(_objectSpread(_objectSpread({}, languageData), {}, _defineProperty({}, name, _objectSpread(_objectSpread({}, languageData[name]), {}, {\n        isError: ((_languageData$name = languageData[name]) === null || _languageData$name === void 0 ? void 0 : _languageData$name.isRequired) && !!required(value),\n        helperText: ((_languageData$name2 = languageData[name]) === null || _languageData$name2 === void 0 ? void 0 : _languageData$name2.isRequired) && !!required(value) && t('str_mandatory')\n      }))));\n    } else {\n      var _languageData$name3, _languageData$name4;\n\n      setLanguageData(_objectSpread(_objectSpread({}, languageData), {}, _defineProperty({}, name, _objectSpread(_objectSpread({}, languageData[name]), {}, {\n        value: value,\n        isError: ((_languageData$name3 = languageData[name]) === null || _languageData$name3 === void 0 ? void 0 : _languageData$name3.isRequired) && !!required(value),\n        helperText: ((_languageData$name4 = languageData[name]) === null || _languageData$name4 === void 0 ? void 0 : _languageData$name4.isRequired) && !!required(value) && t('str_mandatory')\n      }))));\n    }\n  };\n\n  var handleOnBlurFormElements = function handleOnBlurFormElements(event, key) {\n    handleOnChangeFormElements(event, key, true);\n  };\n\n  var handleOpenAddDialog = function handleOpenAddDialog() {\n    var selectedLanguage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    if (selectedLanguage) {\n      handleGetselectedLanguage(selectedLanguage);\n    } else {\n      handleDefRecord();\n    }\n\n    setOpenAddDialog(true);\n  };\n\n  var handleCloseDialog = function handleCloseDialog() {\n    if (JSON.stringify(languageData) !== JSON.stringify(languageDataBase)) {\n      setOpenTrackedDialog(true);\n    } else {\n      setOpenAddDialog(false);\n      handleReset();\n    }\n  };\n\n  var handleReset = function handleReset() {\n    setTimeout(function () {\n      setIsInitialStateLoad(false);\n      setGetData(null);\n      setLanguageData(initialState);\n      setLanguageDataBase(initialState);\n      setSelectedLanguageData(null);\n      setSelectedGid(null);\n    }, 100);\n  };\n\n  var getLangFileList = function getLangFileList() {\n    setLangFileListLoading(true);\n    ViewList({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.RAFILE,\n      token: token,\n      params: {\n        query: \"masterid:\".concat(state, \",isactive:true\"),\n        limit: 100,\n        hotelrefno: hotelRefNo\n      }\n    }).then(function (r) {\n      if (r.status === 200 && r.data.data.length > 0) {\n        setLangFileList(r.data.data);\n        setLangFileListLoading(false);\n      } else {\n        setLangFileList([]);\n        setLangFileListLoading(false);\n      }\n    });\n  };\n\n  var handleLangFileUpload = function handleLangFileUpload(file) {\n    Upload({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      token: token,\n      params: {\n        masterid: state,\n        orsactive: true,\n        hotelrefno: hotelRefNo,\n        quality: \"0.1F\"\n      },\n      files: file\n    }).then(function (r) {\n      setLangFileUploadStatus(false);\n\n      if (r.status === 200) {\n        getLangFileList();\n        enqueueSnackbar(t('str_haveBeenUploadedMsg'), {\n          variant: 'success'\n        });\n      } else {\n        var error = isErrorMsg(r);\n        enqueueSnackbar(t(error.errMsg), {\n          variant: 'error'\n        });\n      }\n    });\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 9\n    }\n  }, __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 4,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 21\n    }\n  }, __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 25\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 29\n    }\n  }, __jsx(CustomToolTip, {\n    title: t('str_refresh'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 33\n    }\n  }, __jsx(IconButton, {\n    onClick: function onClick() {\n      return getLanguageList();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 37\n    }\n  }, __jsx(CachedIcon, {\n    style: {\n      color: \"#F16A4B\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 41\n    }\n  })))), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 29\n    }\n  }, __jsx(CustomToolTip, {\n    title: t('str_add'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 33\n    }\n  }, __jsx(IconButton, {\n    onClick: function onClick() {\n      return handleOpenAddDialog(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 37\n    }\n  }, __jsx(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 41\n    }\n  })))))), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    sm: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 21\n    }\n  }), __jsx(Grid, {\n    item: true,\n    xs: 2,\n    sm: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 21\n    }\n  }, __jsx(Fab, {\n    variant: \"extended\",\n    size: \"small\",\n    onClick: openDialog,\n    color: \"primary\",\n    style: {\n      marginLeft: 50,\n      marginTop: 7\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 25\n    }\n  }, __jsx(CloudUploadIcon, {\n    style: {\n      marginRight: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 29\n    }\n  }), t('str_upload')), __jsx(DropzoneDialog, {\n    open: langFileUploadStatus,\n    onSave: handleLangFileUpload,\n    acceptedFiles: ['image/jpeg', 'image/png', 'image/bmp', 'image/gif', 'video/mp4', 'application/zip'],\n    showPreviews: true,\n    filesLimit: 3,\n    maxFileSize: 5000000,\n    onClose: function onClose() {\n      return setLangFileUploadStatus(false);\n    },\n    submitButtonText: t('str_save'),\n    cancelButtonText: t('str_cancel'),\n    dialogTitle: t('str_uploadALanguageCertificateFile'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 25\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 614,\n      columnNumber: 21\n    }\n  }, __jsx(MaterialTable, {\n    isLoading: isLoadingList,\n    columns: languageColumns,\n    data: languageList,\n    localization: tableLocalization,\n    options: {\n      headerStyle: {\n        cursor: 'default',\n        fontWeight: \"bold\",\n        fontSize: \"12px\",\n        color: \"#A3A6B4\",\n        textTransform: \"uppercase\",\n        backgroundColor: \"#F5F6FA\",\n        whiteSpace: 'nowrap',\n        borderLeft: '1px solid #FFF'\n      },\n      cellStyle: {\n        whiteSpace: 'nowrap',\n        borderLeft: '1px solid rgba(224, 224, 224, 1)',\n        fontSize: '13px'\n      },\n      toolbar: false,\n      selection: false,\n      sorting: false,\n      search: false,\n      actionsColumnIndex: 1,\n      selectionColumnIndex: 1\n    },\n    components: {\n      Header: function Header(props) {\n        var overrideProps = _objectSpread({}, props);\n\n        overrideProps.draggable = false;\n        return __jsx(MTableHeader, _extends({}, overrideProps, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 648,\n            columnNumber: 41\n          }\n        }));\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 615,\n      columnNumber: 25\n    }\n  }))), __jsx(Dialog, {\n    open: openAddDialog,\n    maxWidth: 'sm',\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 655,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    style: {\n      padding: 24\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 656,\n      columnNumber: 21\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 657,\n      columnNumber: 25\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 658,\n      columnNumber: 29\n    }\n  }, __jsx(Typography, {\n    style: {\n      fontWeight: '600',\n      fontSize: '18px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 659,\n      columnNumber: 33\n    }\n  }, selectedLanguageData ? t('str_editLanguage') : t('str_addLanguage'))), isDef ? __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 666,\n      columnNumber: 37\n    }\n  }, __jsx(LoadingSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 667,\n      columnNumber: 41\n    }\n  })) : __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 670,\n      columnNumber: 37\n    }\n  }, formElements.map(function (item, index) {\n    return __jsx(Grid, _extends({\n      key: index,\n      item: true\n    }, item.gridProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 673,\n        columnNumber: 49\n      }\n    }), renderFormElements(item));\n  }), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 678,\n      columnNumber: 41\n    }\n  }, __jsx(AddDialogActions, {\n    disabled: isSaving,\n    loading: isSaving,\n    disabledSave: languageData.langid.value.length <= 0,\n    toolTipTitle: __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 684,\n        columnNumber: 53\n      }\n    }, __jsx(Typography, {\n      style: {\n        fontWeight: '600',\n        fontSize: 'inherit'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 57\n      }\n    }, t('str_invalidFields')), languageData.langid.isError || required(languageData.langid.value) && __jsx(Typography, {\n      style: {\n        fontSize: 'inherit'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 691,\n        columnNumber: 65\n      }\n    }, t('str_language'))),\n    onCancelClick: handleCloseDialog,\n    onSaveClick: handleSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 679,\n      columnNumber: 45\n    }\n  })))))), __jsx(TrackedChangesDialog, {\n    open: openTrackedDialog || deleteOpenDialog,\n    onPressNo: function onPressNo(e) {\n      setOpenTrackedDialog(e);\n      setDeleteOpenDialog(e);\n    },\n    dialogTitle: deleteOpenDialog ? t('str_delete') : false,\n    dialogDesc: deleteOpenDialog ? t('str_alertDeleteTitle') : false,\n    onPressYes: function onPressYes(e) {\n      if (deleteOpenDialog) {\n        handleDeleteItem(selectedLanguageGid);\n      } else {\n        setOpenTrackedDialog(e);\n        setOpenAddDialog(false);\n        setDeleteOpenDialog(e);\n        handleReset();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 707,\n      columnNumber: 17\n    }\n  })));\n}\n\n_s(Languages, \"HDQd+/MogRXB2L3B7SzPD5TwYrQ=\", false, function () {\n  return [useSnackbar, useTranslation, useSelector, useSelector, useSelector];\n});\n\n_c = Languages;\nexport default Languages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Languages\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/emp-portal/tabs/Languages/index.js"],"names":["React","useState","useEffect","useContext","Insert","UseOrest","ViewList","Patch","Delete","Upload","WebCmsGlobal","useSelector","isErrorMsg","mobileTelNoFormat","OREST_ENDPOINT","Grid","Typography","Dialog","Checkbox","FormControlLabel","Button","Menu","MenuItem","IconButton","DialogTitle","DialogContent","DialogActions","useSnackbar","SLASH","useTranslation","renderFormElements","ELEMENT_TYPES","required","AddDialogActions","LocaleContext","LoadingSpinner","helper","orest","TrackedChangesDialog","EditOutlinedIcon","MaterialTable","MTableHeader","MaterialTableLocalization","MoreVertIcon","TableColumnText","PopupState","bindMenu","bindTrigger","CustomToolTip","CachedIcon","AddIcon","DeleteIcon","DialogContentText","CloseIcon","CheckIcon","PhotoCamera","DropzoneDialog","CloudUploadIcon","Fab","VARIANT","Languages","props","empId","enqueueSnackbar","GENERAL_SETTINGS","locale","t","tableLocalization","token","state","currentUser","auth","access_token","hotelRefNo","hotelinfo","currentHotelRefNo","HOTELREFNO","emp","mid","initialState","langid","value","isError","helperText","verbalevel","writenlevel","readlevel","description","isLoadingList","setIsLoadingList","allHotels","setAllHotels","languageList","setLanguageList","openAddDialog","setOpenAddDialog","selectedLanguageData","setSelectedLanguageData","selectedGid","setSelectedGid","getData","setGetData","openTrackedDialog","setOpenTrackedDialog","deleteOpenDialog","setDeleteOpenDialog","isDef","setIsDef","isSaving","setIsSaving","languageData","setLanguageData","languageDataBase","setLanguageDataBase","isInitialStateLoad","setIsInitialStateLoad","isDeleting","setIsDeleting","open","setOpen","langFileUploadStatus","setLangFileUploadStatus","taskFileListLoading","setLangFileListLoading","taskFileList","setLangFileList","selectedLanguageGid","setSelectedLanguageGid","openDialog","openTrackDialog","gid","formElements","type","autoComplete","id","name","disabled","label","variant","isRequired","error","onChange","newValue","handleOnChangeFormElements","onBlur","e","handleOnBlurFormElements","onLoad","initialValue","data","endpoint","params","text","limit","field","initialId","showOptionLabel","showOption","searchParam","fullWidth","gridProps","xs","sm","spinEdit","max","defaultValue","padding","textField","onClick","languageColumns","title","maxWidth","minWidth","render","popupState","vertical","horizontal","handleOpenAddDialog","close","paddingLeft","langcode","getLanguageList","isEffect","newClientInitialState","objectMapper","handleClose","handleDeleteItem","apiUrl","OREST_URL","EMPLANG","hotelrefno","then","res","status","errorMsg","length","substring","query","allhotels","count","handleGetselectedLanguage","selectedLanguage","VIEW","handleDefRecord","DEF","Object","assign","handleSave","keys","map","key","handleReset","empid","event","isOnBlur","target","handleCloseDialog","JSON","stringify","setTimeout","getLangFileList","RAFILE","r","handleLangFileUpload","file","masterid","orsactive","quality","files","errMsg","color","marginLeft","marginTop","marginRight","headerStyle","cursor","fontWeight","fontSize","textTransform","backgroundColor","whiteSpace","borderLeft","cellStyle","toolbar","selection","sorting","search","actionsColumnIndex","selectionColumnIndex","Header","overrideProps","draggable","item","index"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext} from 'react';\nimport {Insert, UseOrest, ViewList, Patch, Delete, Upload} from \"@webcms/orest\";\nimport WebCmsGlobal from \"../../../webcms-global\";\nimport {useSelector} from \"react-redux\";\nimport {isErrorMsg, mobileTelNoFormat, OREST_ENDPOINT} from \"../../../../model/orest/constants\";\nimport {\n    Grid,\n    Typography,\n    Dialog,\n    Checkbox, FormControlLabel, Button, Menu, MenuItem, IconButton, DialogTitle, DialogContent, DialogActions\n} from \"@material-ui/core\";\nimport {useSnackbar} from \"notistack\";\nimport {SLASH} from \"../../../../model/globals\";\nimport useTranslation from \"../../../../lib/translations/hooks/useTranslation\";\nimport renderFormElements, {ELEMENT_TYPES} from \"../../../render-form-elements\";\nimport {required} from \"../../../../state/utils/form\";\nimport AddDialogActions from \"../../../AddDialogActions\";\nimport {LocaleContext} from \"../../../../lib/translations/context/LocaleContext\";\nimport LoadingSpinner from \"../../../LoadingSpinner\";\nimport {helper, orest} from \"../../../../@webcms-globals\";\nimport TrackedChangesDialog from \"../../../TrackedChangesDialog\";\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\nimport MaterialTable, {MTableHeader} from \"material-table\";\nimport MaterialTableLocalization from \"../../../MaterialTableLocalization\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport TableColumnText from \"../../../TableColumnText\";\nimport PopupState, {bindMenu, bindTrigger} from \"material-ui-popup-state\";\nimport {CustomToolTip} from \"../../../user-portal/components/CustomToolTip/CustomToolTip\";\nimport CachedIcon from \"@material-ui/icons/Cached\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport {PhotoCamera} from \"@material-ui/icons\";\nimport {DropzoneDialog} from \"material-ui-dropzone\";\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\nimport Fab from \"@material-ui/core/Fab\";\n\nconst VARIANT = 'outlined'\n\nfunction Languages(props) {\n\n    //props\n    const {empId} = props\n\n    //snackbar\n    const {enqueueSnackbar} = useSnackbar();\n\n    //context\n    const {GENERAL_SETTINGS} = useContext(WebCmsGlobal)\n    const {locale} = useContext(LocaleContext)\n    const {t} = useTranslation()\n\n    const tableLocalization = MaterialTableLocalization();\n\n    //redux state\n    const token = useSelector((state) => state?.orest?.currentUser?.auth?.access_token || false)\n    const hotelRefNo = useSelector((state) => state?.hotelinfo?.currentHotelRefNo || GENERAL_SETTINGS.HOTELREFNO || false)\n    const state = useSelector((state) => state?.orest?.state?.emp?.mid || false)\n\n    //locale state\n    const initialState = {\n        langid: {value: '', isError: false, required: true, helperText: ''},\n        verbalevel: {value: 1, isError: false, required: false, helperText: ''},\n        writenlevel: {value: 1, isError: false, required: false, helperText: ''},\n        readlevel: {value: 1, isError: false, required: false, helperText: ''},\n        description: {value: '', isError: false, required: false, helperText: ''},\n    }\n\n    const [isLoadingList, setIsLoadingList] = useState(false)\n    const [allHotels, setAllHotels] = useState(false)\n    const [languageList, setLanguageList] = useState([])\n    const [openAddDialog, setOpenAddDialog] = useState(false);\n\n    const [selectedLanguageData, setSelectedLanguageData] = useState(null)\n    const [selectedGid, setSelectedGid] = useState(false)\n    const [getData, setGetData] = useState(null)\n    const [openTrackedDialog, setOpenTrackedDialog] = useState(false);\n    const [deleteOpenDialog, setDeleteOpenDialog] = useState(false);\n    const [isDef, setIsDef] = useState(false)\n    const [isSaving, setIsSaving] = useState(false)\n    const [languageData, setLanguageData] = useState(initialState)\n    const [languageDataBase, setLanguageDataBase] = useState(initialState)\n    const [isInitialStateLoad, setIsInitialStateLoad] = useState(false)\n    const [isDeleting, setIsDeleting] = useState(false)\n    const [open, setOpen] = useState(true);\n    const [langFileUploadStatus, setLangFileUploadStatus] = useState(false)\n    const [taskFileListLoading, setLangFileListLoading] = useState(false)\n    const [taskFileList, setLangFileList] = useState([])\n    const [selectedLanguageGid, setSelectedLanguageGid] = useState(null)\n\n    const openDialog = () => {\n        setLangFileUploadStatus(true)\n    }\n\n    const openTrackDialog = (gid) => {\n        setSelectedLanguageGid(gid)\n        setDeleteOpenDialog(true)\n    }\n\n    const formElements = [\n        {\n            type: ELEMENT_TYPES.autoComplete,\n            id: 'langid',\n            name: 'langid',\n            value: languageData.langid?.value || null,\n            disabled: isSaving,\n            label: t('str_language'),\n            variant: VARIANT,\n            required: languageData.langid?.isRequired,\n            error: languageData.langid?.isError,\n            helperText: languageData.langid?.helperText,\n            onChange: (newValue, name) => handleOnChangeFormElements(newValue, name),\n            onBlur: (e, name) => handleOnBlurFormElements(e, name),\n            onLoad: (initialValue, name) => {\n                const data = {...languageData}\n                data[name].value = initialValue ? initialValue : null\n                setLanguageData(data)\n            },\n            endpoint: 'ralang/view/list',\n            params: {text: '', limit: 25, field: 'code'},\n            initialId: isInitialStateLoad && selectedLanguageData?.langid || false,\n            showOptionLabel: 'description',\n            showOption: 'description',\n            searchParam: 'description',\n            fullWidth: true,\n            gridProps: {xs: 12, sm: 6}\n        },\n        {\n            type: ELEMENT_TYPES.spinEdit,\n            id: 'verbalevel',\n            name: 'verbalevel',\n            max: 6,\n            defaultValue: 1,\n            padding: 0,\n            error: languageData.verbalevel?.isError,\n            required: languageData.verbalevel?.isRequired,\n            disabled: isSaving,\n            label: t('str_verbalLevel'),\n            helperText: languageData.verbalevel?.helperText,\n            onChange: (e, name) => handleOnChangeFormElements(e, name),\n            onBlur: (e) => handleOnBlurFormElements(e),\n            variant: VARIANT,\n            fullWidth: true,\n            gridProps: {xs: 12, sm: 6}\n        },\n        {\n            type: ELEMENT_TYPES.spinEdit,\n            id: 'writenlevel',\n            name: 'writenlevel',\n            max: 6,\n            defaultValue: 1,\n            padding: 0,\n            error: languageData.writenlevel?.isError,\n            required: languageData.writenlevel?.isRequired,\n            disabled: isSaving,\n            label: t('str_writingLevel'),\n            helperText: languageData.writenlevel?.helperText,\n            onChange: (e, name) => handleOnChangeFormElements(e, name),\n            onBlur: (e) => handleOnBlurFormElements(e),\n            variant: VARIANT,\n            fullWidth: true,\n            gridProps: {xs: 12, sm: 6}\n        },\n        {\n            type: ELEMENT_TYPES.spinEdit,\n            id: 'readlevel',\n            name: 'readlevel',\n            max: 6,\n            defaultValue: 1,\n            padding: 0,\n            error: languageData.readlevel?.isError,\n            required: languageData.readlevel?.isRequired,\n            disabled: isSaving,\n            label: t('str_readingLevel'),\n            helperText: languageData.readlevel?.helperText,\n            onChange: (e, name) => handleOnChangeFormElements(e, name),\n            onBlur: (e) => handleOnBlurFormElements(e),\n            variant: VARIANT,\n            fullWidth: true,\n            gridProps: {xs: 12, sm: 6}\n        },\n        {\n            type: ELEMENT_TYPES.textField,\n            id: 'description',\n            name: 'description',\n            value: languageData.description?.value,\n            error: languageData.description?.isError,\n            required: languageData.description?.isRequired,\n            disabled: isSaving,\n            label: t('str_description'),\n            helperText: languageData.description?.helperText,\n            onChange: (e) => handleOnChangeFormElements(e),\n            onBlur: (e) => handleOnBlurFormElements(e),\n            variant: VARIANT,\n            fullWidth: true,\n            gridProps: {xs: 12, sm: 12}\n        }\n    ]\n\n    let onClick;\n    const languageColumns = [\n        {\n            title: (\n                <Button\n                    style={{padding: 0, maxWidth: 25, minWidth: 25}}\n                    disabled\n                    color={'primary'}\n                    variant={'text'}\n                >\n                    <MoreVertIcon/>\n                </Button>\n            ),\n            render: props => (\n                <TableColumnText minWidth={30}>\n                    <PopupState variant=\"popover\" popupId=\"material-table-action-column\">\n                        {(popupState) => (\n                            <React.Fragment>\n                                <Button\n                                    style={{padding: 0, maxWidth: 25, minWidth: 25}}\n                                    color={'primary'}\n                                    variant={'contained'}\n                                    {...bindTrigger(popupState)}\n                                >\n                                    <MoreVertIcon size={'small'}/>\n                                </Button>\n                                <Menu\n                                    anchorOrigin={{\n                                        vertical: \"bottom\",\n                                        horizontal: \"left\"\n                                    }}\n                                    transformOrigin={{\n                                        vertical: \"top\",\n                                        horizontal: \"left\"\n                                    }}\n                                    getContentAnchorEl={null}\n                                    {...bindMenu(popupState)}\n                                >\n                                    <MenuItem\n                                        onClick={() => {\n                                            setSelectedLanguageData(props)\n                                            setSelectedGid(props?.gid || false)\n                                            handleOpenAddDialog(props)\n                                            popupState.close();\n                                        }}\n                                    >\n                                        {<EditOutlinedIcon/>}\n                                        <Typography style={{paddingLeft: '8px'}}>{t('str_edit')}</Typography>\n                                    </MenuItem>\n                                    <MenuItem\n                                        variant=\"outlined\" onClick={() => openTrackDialog(props?.gid)}\n\n                                    >\n                                        <DeleteIcon/>\n                                        <Typography style={{paddingLeft: '8px'}}>{t('str_delete')}</Typography>\n\n                                    </MenuItem>\n                                </Menu>\n                            </React.Fragment>\n                        )}\n                    </PopupState>\n                </TableColumnText>\n            )\n        },\n        {\n            title: t('str_language'),\n            field: 'langid',\n            render: (props) => <TableColumnText>{props?.langcode}</TableColumnText>\n        },\n        {\n            title: t('str_verbalLevel'),\n            field: 'verbalevel',\n            render: (props) => <TableColumnText>{props?.verbalevel}</TableColumnText>\n        },\n        {\n            title: t('str_writingLevel'),\n            field: 'writenlevel',\n            render: (props) => <TableColumnText>{props?.writenlevel}</TableColumnText>\n        },\n        {\n            title: t('str_readingLevel'),\n            field: 'readlevel',\n            render: (props) => <TableColumnText>{props?.readlevel}</TableColumnText>\n        },\n        {\n            title: t('str_description'),\n            field: 'description',\n            render: (props) => <TableColumnText>{props?.description}</TableColumnText>\n        },\n    ]\n\n    useEffect(() => {\n        if (token && empId) {\n            getLanguageList()\n        }\n    }, [])\n\n    useEffect(() => {\n        let isEffect = true\n        if (isEffect && languageData && getData) {\n            const newClientInitialState = helper.objectMapper(languageData, getData, ['langid'])\n            setLanguageData(newClientInitialState)\n            setLanguageDataBase(newClientInitialState)\n            setIsInitialStateLoad(true)\n        }\n\n        return () => {\n            isEffect = false\n        }\n\n    }, [getData])\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleDeleteItem = (gid) => {\n        setIsDeleting(true)\n        setDeleteOpenDialog(false)\n        Delete({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.EMPLANG,\n            token,\n            gid: gid,\n            params: {\n                hotelrefno: GENERAL_SETTINGS.HOTELREFNO,\n            }\n        }).then((res) => {\n            if (res.status === 200) {\n                getLanguageList()\n                enqueueSnackbar(t('str_processCompletedSuccessfully'), {variant: 'success'})\n            } else {\n                const error = isErrorMsg(res)\n                enqueueSnackbar(error.errorMsg?.length > 50 ? error.errorMsg?.substring(0, 50) : error.errorMsg, {variant: 'error'})\n                setIsDeleting(false)\n            }\n        })\n    }\n\n    const getLanguageList = () => {\n        setIsLoadingList(true)\n        ViewList({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.EMPLANG,\n            token,\n            params: {\n                query: `empid:${empId}`,\n                allhotels: allHotels,\n                hotelrefno: hotelRefNo\n            }\n        }).then(res => {\n            setIsLoadingList(false)\n            if (res.status === 200) {\n                if (res.data.count > 0) {\n                    setLanguageList(res.data.data)\n                }\n            } else {\n                const error = isErrorMsg(res)\n                enqueueSnackbar(error.errorMsg?.length > 50 ? error.errorMsg?.substring(0, 50) : error.errorMsg, {variant: 'error'})\n            }\n        })\n    }\n\n    const handleGetselectedLanguage = (selectedLanguage) => {\n        if (selectedLanguage) {\n            setIsDef(true)\n            UseOrest({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: OREST_ENDPOINT.EMPLANG + SLASH + OREST_ENDPOINT.VIEW + SLASH + 'get' + SLASH + selectedLanguage.gid,\n                token\n            }).then(res => {\n                setIsDef(false)\n                if (res.status === 200 && res.data.data) {\n                    const data = res.data.data\n                    setGetData(data)\n                }\n            })\n        }\n    }\n\n    const handleDefRecord = () => {\n        setIsDef(true)\n        UseOrest({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.EMPLANG + SLASH + OREST_ENDPOINT.DEF,\n            token,\n            params: {\n                hotelrefno: hotelRefNo\n            }\n        }).then(res => {\n            if (res.status === 200 && res.data.count > 0) {\n                const data = Object.assign({}, res.data.data, languageData)\n                setLanguageData(data)\n                setLanguageDataBase(data)\n            }\n            setIsDef(false)\n        })\n    }\n\n    const handleSave = () => {\n        const data = {...languageData}\n        Object.keys(initialState).map((key) => {\n            data[key] = typeof data[key].value === 'object' ? data[key].value ? data[key].value.id : null : data[key].value\n        })\n        if (empId) {\n            setIsSaving(true)\n            if (selectedGid) {\n                Patch({\n                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                    endpoint: OREST_ENDPOINT.EMPLANG,\n                    gid: selectedGid,\n                    data: data,\n                    token\n                }).then(res => {\n                    if (res.status === 200) {\n                        enqueueSnackbar(t('str_processCompletedSuccessfully'), {variant: 'success'})\n                        setOpenAddDialog(false)\n                        getLanguageList()\n                        handleReset()\n                    } else {\n                        const error = isErrorMsg(res)\n                        enqueueSnackbar(error.errorMsg, {variant: 'error'})\n                    }\n                    setIsSaving(false)\n                })\n            } else {\n                data.empid = empId\n                data.hotelrefno = hotelRefNo\n                Insert({\n                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                    endpoint: OREST_ENDPOINT.EMPLANG,\n                    token,\n                    data: data\n                }).then(res => {\n                    if (res.status === 200) {\n                        enqueueSnackbar(t('str_processCompletedSuccessfully'), {variant: 'success'})\n                        setOpenAddDialog(false)\n                        getLanguageList()\n                        handleReset()\n                    } else {\n                        const error = isErrorMsg(res)\n                        enqueueSnackbar(error.errorMsg, {variant: 'error'})\n                    }\n                    setIsSaving(false)\n                })\n            }\n        }\n    }\n\n    const handleOnChangeFormElements = (event, key, isOnBlur) => {\n        const name = key ? key : event.target.name\n        const value = event?.target ? event.target.value : event\n\n        if (isOnBlur) {\n            setLanguageData({\n                ...languageData,\n                [name]: {\n                    ...languageData[name],\n                    isError: languageData[name]?.isRequired && !!required(value),\n                    helperText: languageData[name]?.isRequired && !!required(value) && t('str_mandatory'),\n                }\n            })\n        } else {\n            setLanguageData({\n                ...languageData,\n                [name]: {\n                    ...languageData[name],\n                    value: value,\n                    isError: languageData[name]?.isRequired && !!required(value),\n                    helperText: languageData[name]?.isRequired && !!required(value) && t('str_mandatory'),\n                }\n            })\n        }\n    }\n\n    const handleOnBlurFormElements = (event, key) => {\n        handleOnChangeFormElements(event, key, true)\n    }\n\n    const handleOpenAddDialog = (selectedLanguage = false) => {\n        if (selectedLanguage) {\n            handleGetselectedLanguage(selectedLanguage)\n        } else {\n            handleDefRecord()\n        }\n        setOpenAddDialog(true)\n    }\n\n    const handleCloseDialog = () => {\n        if (JSON.stringify(languageData) !== JSON.stringify(languageDataBase)) {\n            setOpenTrackedDialog(true)\n        } else {\n            setOpenAddDialog(false)\n            handleReset()\n        }\n    }\n\n    const handleReset = () => {\n        setTimeout(() => {\n            setIsInitialStateLoad(false)\n            setGetData(null)\n            setLanguageData(initialState)\n            setLanguageDataBase(initialState)\n            setSelectedLanguageData(null)\n            setSelectedGid(null)\n        }, 100)\n    }\n\n    const getLangFileList = () => {\n        setLangFileListLoading(true)\n        ViewList({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.RAFILE,\n            token,\n            params: {\n                query: `masterid:${state},isactive:true`,\n                limit: 100,\n                hotelrefno: hotelRefNo,\n            },\n        }).then((r) => {\n            if (r.status === 200 && r.data.data.length > 0) {\n                setLangFileList(r.data.data)\n                setLangFileListLoading(false)\n            } else {\n                setLangFileList([])\n                setLangFileListLoading(false)\n            }\n        })\n    }\n\n    const handleLangFileUpload = (file) => {\n        Upload({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            token,\n            params: {\n                masterid: state,\n                orsactive: true,\n                hotelrefno: hotelRefNo,\n                quality: \"0.1F\"\n            },\n            files: file,\n        }).then((r) => {\n            setLangFileUploadStatus(false)\n            if (r.status === 200) {\n                getLangFileList()\n                enqueueSnackbar(t('str_haveBeenUploadedMsg'), {variant: 'success'})\n            } else {\n                const error = isErrorMsg(r);\n                enqueueSnackbar(t(error.errMsg), {variant: 'error'})\n            }\n        })\n    }\n\n    return (\n        <div>\n            <React.Fragment>\n                <Grid container>\n                    <Grid item xs={4} sm={3}>\n                        <Grid container>\n                            <Grid item xs={6} sm={3}>\n                                <CustomToolTip title={t('str_refresh')}>\n                                    <IconButton\n                                        onClick={() => getLanguageList()}\n                                    >\n                                        <CachedIcon style={{color: \"#F16A4B\"}}/>\n                                    </IconButton>\n                                </CustomToolTip>\n                            </Grid>\n                            <Grid item xs={6} sm={3}>\n                                <CustomToolTip title={t('str_add')}>\n                                    <IconButton\n                                        onClick={() => handleOpenAddDialog(false)}\n                                    >\n                                        <AddIcon/>\n                                    </IconButton>\n                                </CustomToolTip>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={6} sm={7}>\n                    </Grid>\n                    <Grid item xs={2} sm={2}>\n                        <Fab\n                            variant=\"extended\"\n                            size=\"small\"\n                            onClick={openDialog}\n                            color=\"primary\"\n                            style={{marginLeft: 50, marginTop: 7}}\n                        >\n                            <CloudUploadIcon style={{marginRight: 10}}/>\n                            {t('str_upload')}\n                        </Fab>\n                        <DropzoneDialog\n                            open={langFileUploadStatus}\n                            onSave={handleLangFileUpload}\n                            acceptedFiles={[\n                                'image/jpeg',\n                                'image/png',\n                                'image/bmp',\n                                'image/gif',\n                                'video/mp4',\n                                'application/zip',\n                            ]}\n                            showPreviews={true}\n                            filesLimit={3}\n                            maxFileSize={5000000}\n                            onClose={() => setLangFileUploadStatus(false)}\n                            submitButtonText={t('str_save')}\n                            cancelButtonText={t('str_cancel')}\n                            dialogTitle={t('str_uploadALanguageCertificateFile')}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <MaterialTable\n                            isLoading={isLoadingList}\n                            columns={languageColumns}\n                            data={languageList}\n                            localization={tableLocalization}\n                            options={{\n                                headerStyle: {\n                                    cursor: 'default',\n                                    fontWeight: \"bold\",\n                                    fontSize: \"12px\",\n                                    color: \"#A3A6B4\",\n                                    textTransform: \"uppercase\",\n                                    backgroundColor: \"#F5F6FA\",\n                                    whiteSpace: 'nowrap',\n                                    borderLeft: '1px solid #FFF',\n                                },\n                                cellStyle: {\n                                    whiteSpace: 'nowrap',\n                                    borderLeft: '1px solid rgba(224, 224, 224, 1)',\n                                    fontSize: '13px',\n                                },\n                                toolbar: false,\n                                selection: false,\n                                sorting: false,\n                                search: false,\n                                actionsColumnIndex: 1,\n                                selectionColumnIndex: 1\n                            }}\n                            components={{\n                                Header: (props) => {\n                                    const overrideProps = {...props}\n                                    overrideProps.draggable = false\n                                    return (\n                                        <MTableHeader  {...overrideProps}/>\n                                    )\n                                },\n                            }}\n                        />\n                    </Grid>\n                </Grid>\n                <Dialog open={openAddDialog} maxWidth={'sm'} fullWidth>\n                    <div style={{padding: 24}}>\n                        <Grid container spacing={3}>\n                            <Grid item xs={12}>\n                                <Typography style={{\n                                    fontWeight: '600',\n                                    fontSize: '18px'\n                                }}>{selectedLanguageData ? t('str_editLanguage') : t('str_addLanguage')}</Typography>\n                            </Grid>\n                            {\n                                isDef ? (\n                                    <Grid item xs={12}>\n                                        <LoadingSpinner/>\n                                    </Grid>\n                                ) : (\n                                    <React.Fragment>\n                                        {\n                                            formElements.map((item, index) => (\n                                                <Grid key={index} item {...item.gridProps}>\n                                                    {renderFormElements(item)}\n                                                </Grid>\n                                            ))\n                                        }\n                                        <Grid item xs={12}>\n                                            <AddDialogActions\n                                                disabled={isSaving}\n                                                loading={isSaving}\n                                                disabledSave={languageData.langid.value.length <= 0}\n                                                toolTipTitle={\n                                                    <div>\n                                                        <Typography style={{\n                                                            fontWeight: '600',\n                                                            fontSize: 'inherit'\n                                                        }}>{t('str_invalidFields')}</Typography>\n                                                        {\n                                                            languageData.langid.isError || required(languageData.langid.value) && (\n                                                                <Typography\n                                                                    style={{fontSize: 'inherit'}}>{t('str_language')}</Typography>\n                                                            )\n                                                        }\n                                                    </div>\n                                                }\n                                                onCancelClick={handleCloseDialog}\n                                                onSaveClick={handleSave}\n                                            />\n                                        </Grid>\n                                    </React.Fragment>\n                                )\n                            }\n                        </Grid>\n                    </div>\n                </Dialog>\n                <TrackedChangesDialog\n                    open={openTrackedDialog || deleteOpenDialog}\n                    onPressNo={(e) => {\n                        setOpenTrackedDialog(e);\n                        setDeleteOpenDialog(e)\n                    }}\n                    dialogTitle={deleteOpenDialog ? t('str_delete') : false}\n                    dialogDesc={deleteOpenDialog ? t('str_alertDeleteTitle') : false}\n                    onPressYes={(e) => {\n                        if(deleteOpenDialog) {\n                            handleDeleteItem(selectedLanguageGid)\n                        } else {\n                            setOpenTrackedDialog(e);\n                            setOpenAddDialog(false)\n                            setDeleteOpenDialog(e)\n                            handleReset()\n                        }\n                    }}\n                />\n            </React.Fragment>\n        </div>\n    )\n}\n\nexport default Languages"]},"metadata":{},"sourceType":"module"}