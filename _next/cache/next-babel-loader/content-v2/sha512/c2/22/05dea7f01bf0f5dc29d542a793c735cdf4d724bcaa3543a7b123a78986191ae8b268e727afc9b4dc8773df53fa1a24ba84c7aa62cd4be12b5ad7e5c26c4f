{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/components/page/sections/slider-only/Slider.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect, useState } from 'react';\nimport Carousel from 'react-bootstrap/Carousel';\nimport { ViewList } from \"@webcms/orest\";\nimport { isErrorMsg, OREST_ENDPOINT } from \"../../../../../../../model/orest/constants\";\nimport WebCmsGlobal from \"components/webcms-global\";\nimport { useRouter } from \"next/router\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PrevIcon from '@material-ui/icons/KeyboardArrowLeft';\nimport NextIcon from '@material-ui/icons/KeyboardArrowRight';\nimport { Typography, Button } from \"@material-ui/core\";\nimport Image from 'next/image';\nimport LoadingSpinner from \"../../../../../../LoadingSpinner\";\nimport { toast } from \"react-toastify\";\nimport { COLORS } from \"../../../../constants\";\nimport { useSelector } from \"react-redux\";\nimport ThumbnailSliderModal from \"../../../../../../website/pages/SliderModal\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    box: {\n      position: \"relative\",\n      textAlign: \"center\",\n      color: \"white\"\n    },\n    title: {\n      fontSize: 30,\n      fontFamily: 'sans-serif',\n      fontWeight: 'bolder',\n      \"-webkit-text-fill-color\": \"#ffffff\",\n      \"-webkit-text-stroke-width\": \"0.8px\",\n      \"-webkit-text-stroke-color\": \"#000000\"\n    },\n    description: {\n      fontSize: 22,\n      fontFamily: 'sans-serif',\n      fontWeight: 'bolder',\n      \"-webkit-text-fill-color\": \"#ffffff\",\n      \"-webkit-text-stroke-width\": \"0.8px\",\n      \"-webkit-text-stroke-color\": \"#000000\"\n    },\n    ctaButton: {\n      marginRight: theme.spacing(1),\n      marginTop: theme.spacing(1),\n      borderRadius: 20,\n      backgroundColor: \"white\"\n    },\n    sliderBg: {\n      border: '1px solid white',\n      backgroundColor: '#FFFFFF',\n      borderRadius: '50%'\n    },\n    sliderArrow: {\n      color: \"#000000\",\n      fontSize: 40\n    },\n    cursorPointer: {\n      cursor: \"pointer\"\n    }\n  };\n});\n\nvar SliderOnlyPreview = function SliderOnlyPreview(props) {\n  _s();\n\n  var masterid = props.masterid,\n      handleDisable = props.handleDisable;\n\n  var _useContext = useContext(WebCmsGlobal),\n      GENERAL_SETTINGS = _useContext.GENERAL_SETTINGS,\n      token = _useContext.token; //local variable\n\n\n  var _useState = useState([]),\n      sliderImages = _useState[0],\n      setSliderImages = _useState[1];\n\n  var _useState2 = useState({}),\n      sliderObj = _useState2[0],\n      setSliderObj = _useState2[1];\n\n  var _useState3 = useState(false),\n      isImageCta = _useState3[0],\n      setImageCta = _useState3[1];\n\n  var _useState4 = useState(false),\n      isImageTitleDesc = _useState4[0],\n      setImageTitleDesc = _useState4[1];\n\n  var _useState5 = useState(false),\n      isLoaded = _useState5[0],\n      setIsLoaded = _useState5[1];\n\n  var _useState6 = useState(false),\n      isOpenSlider = _useState6[0],\n      setIsOpenSlider = _useState6[1];\n\n  var classes = useStyles();\n  var router = useRouter();\n  var clientToken = useSelector(function (state) {\n    return state.orest.currentUser !== null ? state.orest.currentUser.auth.access_token : router.query.authToken;\n  });\n  var companyId = router.query.companyID || GENERAL_SETTINGS.HOTELREFNO;\n  var authToken = token || clientToken || router.query.authToken;\n  useEffect(function () {\n    if (masterid) {\n      resetSlider();\n      setIsLoaded(false);\n      ViewList({\n        apiUrl: GENERAL_SETTINGS.OREST_URL,\n        endpoint: OREST_ENDPOINT.HCMITEMSLD,\n        token: authToken,\n        params: {\n          query: \"masterid:\".concat(masterid),\n          hotelrefno: Number(companyId)\n        }\n      }).then(function (res1) {\n        setIsLoaded(true);\n\n        if (res1.status === 200) {\n          var _res1$data, _res1$data$data;\n\n          if ((res1 === null || res1 === void 0 ? void 0 : (_res1$data = res1.data) === null || _res1$data === void 0 ? void 0 : (_res1$data$data = _res1$data.data) === null || _res1$data$data === void 0 ? void 0 : _res1$data$data.length) > 0) {\n            setIsLoaded(false);\n            setSliderObj(res1.data.data[0]);\n            ViewList({\n              apiUrl: GENERAL_SETTINGS.OREST_URL,\n              endpoint: OREST_ENDPOINT.HCMITEMIMG,\n              token: authToken,\n              params: {\n                query: \"sliderid:\".concat(res1.data.data[0].id),\n                sort: 'orderno',\n                hotelrefno: Number(companyId)\n              }\n            }).then(function (res2) {\n              setIsLoaded(true);\n\n              if (res2.status === 200) {\n                if (res2.data.data.length > 0) {\n                  var updatedImages = [];\n                  res2.data.data.map(function (data) {\n                    updatedImages.push(data);\n                  });\n\n                  for (var _i = 0, _updatedImages = updatedImages; _i < _updatedImages.length; _i++) {\n                    var img = _updatedImages[_i];\n                    if (img.cta) setImageCta(true);\n\n                    if (img.title || img.description) {\n                      setImageTitleDesc(true);\n                    }\n                  }\n\n                  setSliderImages(updatedImages);\n                } else {\n                  toast.error('Image not found against the slider. Please add images first!', {\n                    position: toast.POSITION.TOP_RIGHT\n                  });\n                }\n              } else {\n                var retErr = isErrorMsg(res2);\n                toast.error(retErr.errorMsg, {\n                  position: toast.POSITION.TOP_RIGHT\n                });\n              }\n            });\n          } else {\n            toast.error('Slider not found against the selection. Please add slider first!', {\n              position: toast.POSITION.TOP_RIGHT\n            });\n          }\n        } else {\n          var retErr = isErrorMsg(res1);\n          toast.error(retErr.errorMsg, {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        }\n      });\n    }\n  }, [masterid]);\n  useEffect(function () {\n    if (handleDisable) {\n      sliderImages.length > 0 ? handleDisable(false) : handleDisable(true);\n    }\n  }, [sliderImages]);\n\n  var resetSlider = function resetSlider() {\n    setSliderImages([]);\n    setSliderObj({});\n    setImageCta(false);\n    setImageTitleDesc(false);\n  };\n\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, !isLoaded ? __jsx(LoadingSpinner, {\n    size: 40,\n    style: {\n      color: COLORS.secondary\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 29\n    }\n  }) : __jsx(Typography, {\n    component: 'div',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  }, sliderImages.length > 0 && __jsx(Carousel, {\n    slide: true,\n    nextIcon: __jsx(Typography, {\n      component: 'div',\n      className: classes.sliderBg,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 49\n      }\n    }, __jsx(NextIcon, {\n      className: classes.sliderArrow,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 108\n      }\n    })),\n    prevIcon: __jsx(Typography, {\n      component: 'div',\n      className: classes.sliderBg,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 49\n      }\n    }, __jsx(PrevIcon, {\n      className: classes.sliderArrow,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 108\n      }\n    })),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 29\n    }\n  }, sliderImages.map(function (image, index) {\n    return __jsx(Carousel.Item, {\n      key: \"crousel-item-\".concat(index),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 45\n      }\n    }, __jsx(Image, {\n      src: GENERAL_SETTINGS.STATIC_URL + image.fileurl,\n      alt: 'Slider Image',\n      layout: 'responsive',\n      onClick: function onClick() {\n        return setIsOpenSlider(true);\n      },\n      className: classes.cursorPointer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 49\n      }\n    }), __jsx(Carousel.Caption, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 49\n      }\n    }, isImageTitleDesc ? __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: classes.title,\n      dangerouslySetInnerHTML: {\n        __html: image === null || image === void 0 ? void 0 : image.title\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 61\n      }\n    }), __jsx(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: image === null || image === void 0 ? void 0 : image.description\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 61\n      }\n    })) : __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: classes.title,\n      dangerouslySetInnerHTML: {\n        __html: sliderObj === null || sliderObj === void 0 ? void 0 : sliderObj.title\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 61\n      }\n    }), __jsx(\"div\", {\n      className: classes.description,\n      dangerouslySetInnerHTML: {\n        __html: sliderObj === null || sliderObj === void 0 ? void 0 : sliderObj.description\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 61\n      }\n    })), isImageCta ? __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 70\n      }\n    }, image.cta && __jsx(Button, {\n      variant: \"contained\",\n      size: \"small\",\n      color: \"primary\",\n      \"aria-label\": \"add\",\n      className: classes.ctaButton,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 78\n      }\n    }, __jsx(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: image.cta\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 69\n      }\n    }))) : __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 66\n      }\n    }, sliderObj.cta && __jsx(Button, {\n      variant: \"contained\",\n      size: \"small\",\n      color: \"primary\",\n      \"aria-label\": \"add\",\n      className: classes.ctaButton,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 82\n      }\n    }, __jsx(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: sliderObj.cta\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 69\n      }\n    })))));\n  })), __jsx(ThumbnailSliderModal, {\n    open: isOpenSlider,\n    sliderTitle: sliderObj === null || sliderObj === void 0 ? void 0 : sliderObj.title,\n    sliderDesc: sliderObj === null || sliderObj === void 0 ? void 0 : sliderObj.description,\n    onClose: function onClose(e) {\n      return setIsOpenSlider(e);\n    },\n    sliderImages: sliderImages,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 25\n    }\n  })));\n};\n\n_s(SliderOnlyPreview, \"LjH8/uDlfTBxPahzVEbDDo/oaJ0=\", false, function () {\n  return [useStyles, useRouter, useSelector];\n});\n\n_c = SliderOnlyPreview;\nexport default SliderOnlyPreview;\n\nvar _c;\n\n$RefreshReg$(_c, \"SliderOnlyPreview\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/components/page/sections/slider-only/Slider.js"],"names":["React","useContext","useEffect","useState","Carousel","ViewList","isErrorMsg","OREST_ENDPOINT","WebCmsGlobal","useRouter","makeStyles","PrevIcon","NextIcon","Typography","Button","Image","LoadingSpinner","toast","COLORS","useSelector","ThumbnailSliderModal","useStyles","theme","box","position","textAlign","color","title","fontSize","fontFamily","fontWeight","description","ctaButton","marginRight","spacing","marginTop","borderRadius","backgroundColor","sliderBg","border","sliderArrow","cursorPointer","cursor","SliderOnlyPreview","props","masterid","handleDisable","GENERAL_SETTINGS","token","sliderImages","setSliderImages","sliderObj","setSliderObj","isImageCta","setImageCta","isImageTitleDesc","setImageTitleDesc","isLoaded","setIsLoaded","isOpenSlider","setIsOpenSlider","classes","router","clientToken","state","orest","currentUser","auth","access_token","query","authToken","companyId","companyID","HOTELREFNO","resetSlider","apiUrl","OREST_URL","endpoint","HCMITEMSLD","params","hotelrefno","Number","then","res1","status","data","length","HCMITEMIMG","id","sort","res2","updatedImages","map","push","img","cta","error","POSITION","TOP_RIGHT","retErr","errorMsg","secondary","image","index","STATIC_URL","fileurl","__html","e"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport Carousel from 'react-bootstrap/Carousel'\nimport { ViewList } from \"@webcms/orest\";\nimport {isErrorMsg, OREST_ENDPOINT} from \"../../../../../../../model/orest/constants\";\nimport WebCmsGlobal from \"components/webcms-global\";\nimport { useRouter } from \"next/router\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PrevIcon from '@material-ui/icons/KeyboardArrowLeft';\nimport NextIcon from '@material-ui/icons/KeyboardArrowRight';\nimport {Typography, Button} from \"@material-ui/core\";\nimport Image from 'next/image'\nimport LoadingSpinner from \"../../../../../../LoadingSpinner\";\nimport {toast} from \"react-toastify\";\nimport {COLORS} from \"../../../../constants\";\nimport {useSelector} from \"react-redux\";\nimport ThumbnailSliderModal from \"../../../../../../website/pages/SliderModal\";\n\nconst useStyles = makeStyles(theme => ({\n    box: {\n        position: \"relative\",\n        textAlign: \"center\",\n        color: \"white\"\n    },\n    title: {\n        fontSize: 30,\n        fontFamily: 'sans-serif',\n        fontWeight: 'bolder',\n        \"-webkit-text-fill-color\": \"#ffffff\",\n        \"-webkit-text-stroke-width\": \"0.8px\",\n        \"-webkit-text-stroke-color\": \"#000000\"\n    },\n    description: {\n        fontSize: 22,\n        fontFamily: 'sans-serif',\n        fontWeight: 'bolder',\n        \"-webkit-text-fill-color\": \"#ffffff\",\n        \"-webkit-text-stroke-width\": \"0.8px\",\n        \"-webkit-text-stroke-color\": \"#000000\"\n    },\n    ctaButton: {\n        marginRight: theme.spacing(1),\n        marginTop: theme.spacing(1),\n        borderRadius: 20,\n        backgroundColor: \"white\"\n    },\n    sliderBg: {\n        border: '1px solid white',\n        backgroundColor: '#FFFFFF',\n        borderRadius: '50%'\n    },\n    sliderArrow: {\n        color: \"#000000\",\n        fontSize: 40,\n    },\n    cursorPointer: {\n        cursor: \"pointer\"\n    }\n}))\n\nconst SliderOnlyPreview = (props) => {\n\n    const { masterid, handleDisable } = props;\n    const { GENERAL_SETTINGS, token } = useContext(WebCmsGlobal);\n    //local variable\n    const [sliderImages, setSliderImages] = useState([]);\n    const [sliderObj, setSliderObj] = useState({});\n    const [isImageCta, setImageCta] = useState(false);\n    const [isImageTitleDesc, setImageTitleDesc] = useState(false);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [ isOpenSlider, setIsOpenSlider ] = useState(false)\n\n    const classes = useStyles();\n\n    const router = useRouter();\n    const clientToken = useSelector((state) => state.orest.currentUser !== null ? state.orest.currentUser.auth.access_token : router.query.authToken)\n    const companyId = router.query.companyID || GENERAL_SETTINGS.HOTELREFNO;\n    const authToken = token || clientToken || router.query.authToken;\n\n    useEffect(() => {\n        if (masterid) {\n            resetSlider();\n            setIsLoaded(false);\n            ViewList({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: OREST_ENDPOINT.HCMITEMSLD,\n                token: authToken,\n                params: {\n                    query: `masterid:${masterid}`,\n                    hotelrefno: Number(companyId)\n                }\n            }).then(res1 => {\n                setIsLoaded(true);\n                if (res1.status === 200) {\n                    if (res1?.data?.data?.length > 0) {\n                        setIsLoaded(false);\n                        setSliderObj(res1.data.data[0]);\n                        ViewList({\n                            apiUrl: GENERAL_SETTINGS.OREST_URL,\n                            endpoint: OREST_ENDPOINT.HCMITEMIMG,\n                            token: authToken,\n                            params: {\n                                query: `sliderid:${res1.data.data[0].id}`,\n                                sort: 'orderno',\n                                hotelrefno: Number(companyId)\n                            }\n                        }).then(res2 => {\n                            setIsLoaded(true);\n                            if (res2.status === 200) {\n                                if (res2.data.data.length > 0) {\n                                    let updatedImages = [];\n                                    res2.data.data.map((data) => {\n                                        updatedImages.push(data);\n                                    });\n                                    for (const img of updatedImages) {\n                                        if (img.cta) setImageCta(true);\n                                        if (img.title || img.description) {\n                                            setImageTitleDesc(true);\n                                        }\n                                    }\n                                    setSliderImages(updatedImages);\n                                } else {\n                                    toast.error('Image not found against the slider. Please add images first!', {\n                                        position: toast.POSITION.TOP_RIGHT\n                                    });\n                                }\n                            } else {\n                                const retErr = isErrorMsg(res2);\n                                toast.error(retErr.errorMsg, {\n                                    position: toast.POSITION.TOP_RIGHT\n                                });\n                            }\n                        })\n                    } else {\n                        toast.error('Slider not found against the selection. Please add slider first!', {\n                            position: toast.POSITION.TOP_RIGHT\n                        });\n                    }\n                } else {\n                    const retErr = isErrorMsg(res1);\n                    toast.error(retErr.errorMsg, {\n                        position: toast.POSITION.TOP_RIGHT\n                    });\n                }\n            })\n        }\n    }, [masterid]);\n\n    useEffect(() => {\n        if (handleDisable)\n        {\n            sliderImages.length > 0 ? handleDisable(false) : handleDisable(true);\n        }\n    }, [sliderImages]);\n\n    const resetSlider = () => {\n        setSliderImages([]);\n        setSliderObj({});\n        setImageCta(false);\n        setImageTitleDesc(false);\n    }\n\n    return (\n        <React.Fragment>\n            {\n                !isLoaded ? <LoadingSpinner size={40} style={{color: COLORS.secondary}} /> :\n                    <Typography component={'div'}>\n                    {\n                        sliderImages.length > 0 &&\n                            <Carousel slide={true}\n                                      nextIcon={<Typography component={'div'} className={classes.sliderBg}><NextIcon\n                                          className={classes.sliderArrow}/></Typography>}\n                                      prevIcon={<Typography component={'div'} className={classes.sliderBg}><PrevIcon\n                                          className={classes.sliderArrow}/></Typography>}\n                            >\n                                {\n                                    sliderImages.map((image, index) => {\n                                        return (\n                                            <Carousel.Item key={`crousel-item-${index}`}>\n                                                <Image\n                                                    src={GENERAL_SETTINGS.STATIC_URL + image.fileurl}\n                                                    alt={'Slider Image'}\n                                                    layout={'responsive'}\n                                                    onClick={()=> setIsOpenSlider(true)}\n                                                    className={classes.cursorPointer}\n                                                />\n                                                <Carousel.Caption>\n                                                    {\n                                                        isImageTitleDesc ? <>\n                                                            <div className={classes.title} dangerouslySetInnerHTML={{__html: image?.title}}></div>\n                                                            <div dangerouslySetInnerHTML={{__html: image?.description}}></div>\n                                                        </> : <>\n                                                            <div className={classes.title} dangerouslySetInnerHTML={{__html: sliderObj?.title}}></div>\n                                                            <div className={classes.description} dangerouslySetInnerHTML={{__html: sliderObj?.description}}></div>\n                                                        </>\n                                                    }\n                                                    {\n                                                        isImageCta ? <div>\n                                                            {\n                                                                image.cta && <Button\n                                                                    variant=\"contained\"\n                                                                    size=\"small\"\n                                                                    color=\"primary\"\n                                                                    aria-label=\"add\"\n                                                                    className={classes.ctaButton}\n                                                                >\n                                                                    <div dangerouslySetInnerHTML={{ __html: image.cta }}></div>\n                                                                </Button>\n                                                            }\n                                                        </div> : <div>\n                                                            {\n                                                                sliderObj.cta && <Button\n                                                                    variant=\"contained\"\n                                                                    size=\"small\"\n                                                                    color=\"primary\"\n                                                                    aria-label=\"add\"\n                                                                    className={classes.ctaButton}\n                                                                >\n                                                                    <div dangerouslySetInnerHTML={{ __html: sliderObj.cta }}></div>\n                                                                </Button>\n                                                            }\n                                                        </div>\n                                                    }\n                                                </Carousel.Caption>\n                                            </Carousel.Item>\n                                        )\n                                    })\n                                }\n                            </Carousel>\n                    }\n                        <ThumbnailSliderModal open={isOpenSlider} sliderTitle={sliderObj?.title} sliderDesc={sliderObj?.description} onClose={(e)=> setIsOpenSlider(e)} sliderImages={sliderImages} />\n                </Typography>\n            }\n        </React.Fragment>\n    )\n\n}\n\nexport default SliderOnlyPreview;"]},"metadata":{},"sourceType":"module"}