{"ast":null,"code":"import _extends from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/mata/app-cloudweb/components/CustomDatePicker/CustomDatePicker.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport moment from 'moment';\nimport MomentAdapter from '@date-io/moment';\nimport { DatePicker, LocalizationProvider } from '@material-ui/pickers';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nimport { ClickAwayListener } from \"@material-ui/core\";\nimport { LocaleContext } from \"../../lib/translations/context/LocaleContext\";\nimport EventIcon from '@material-ui/icons/Event';\n\nfunction CustomDatePicker(props) {\n  _s();\n\n  var _this = this;\n\n  var minDate = props.minDate,\n      value = props.value,\n      onChange = props.onChange,\n      onError = props.onError,\n      label = props.label,\n      id = props.id,\n      name = props.name,\n      disablePast = props.disablePast,\n      disableFuture = props.disableFuture,\n      helperText = props.helperText,\n      fullWidth = props.fullWidth,\n      required = props.required,\n      error = props.error,\n      variant = props.variant,\n      _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useContext = useContext(LocaleContext),\n      locale = _useContext.locale;\n\n  var inputFormat = moment.localeData(locale).longDateFormat('L');\n  var mask = inputFormat.replaceAll('D', '_').replaceAll('M', '_').replaceAll('Y', '_');\n\n  var _useState = useState(false),\n      openDatePicker = _useState[0],\n      setOpenDatePicker = _useState[1];\n\n  var handleOnChange = function handleOnChange(newDate, name) {\n    if (typeof onChange === \"function\") onChange(newDate, name);\n  };\n\n  var handleOnError = function handleOnError(error) {\n    if (typeof onError === \"function\") onError(error);\n  };\n\n  return __jsx(LocalizationProvider, {\n    dateLibInstance: moment,\n    dateAdapter: MomentAdapter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, __jsx(ClickAwayListener, {\n    onClickAway: function onClickAway() {\n      return setOpenDatePicker(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, __jsx(DatePicker, {\n    autoOk: true,\n    id: id,\n    name: name,\n    open: openDatePicker,\n    label: label || t('str_date'),\n    minDate: minDate,\n    mask: mask,\n    value: value,\n    error: error,\n    allowKeyboardControl: true,\n    inputFormat: moment.localeData(locale).longDateFormat('L'),\n    disableFuture: disableFuture,\n    disablePast: disablePast,\n    openTo: 'date',\n    views: ['year', 'month', 'date'],\n    onClose: function onClose() {\n      setOpenDatePicker(false);\n    },\n    onError: function onError(e) {\n      return handleOnError(e);\n    },\n    onChange: function onChange(newDate) {\n      return handleOnChange(newDate, name);\n    },\n    renderInput: function renderInput(props) {\n      return __jsx(TextField, _extends({}, props, {\n        id: id,\n        name: name,\n        fullWidth: fullWidth,\n        required: required,\n        variant: variant || 'outlined',\n        helperText: helperText && \"(\".concat(helperText, \")\") || (props === null || props === void 0 ? void 0 : props.error) && inputFormat && \"(\".concat(inputFormat, \")\") || '',\n        InputProps: _objectSpread(_objectSpread({}, props.InputProps), {}, {\n          endAdornment: __jsx(React.Fragment, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 45\n            }\n          }, __jsx(\"span\", {\n            onClick: function onClick() {\n              setOpenDatePicker(true);\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 46\n            }\n          }, __jsx(EventIcon, {\n            size: 'small',\n            style: {\n              color: 'inherit',\n              cursor: 'pointer'\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 51\n            }\n          })))\n        }),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 33\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }))));\n}\n\n_s(CustomDatePicker, \"CLhBbIFWs6w8WfokIlhbtLz3SSM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = CustomDatePicker;\nCustomDatePicker.propTypes = {\n  value: PropTypes.object,\n  minDate: PropTypes.object,\n  label: PropTypes.string,\n  onError: PropTypes.func,\n  onChange: PropTypes.func\n};\nexport default CustomDatePicker;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomDatePicker\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/CustomDatePicker/CustomDatePicker.js"],"names":["React","useContext","useState","PropTypes","TextField","moment","MomentAdapter","DatePicker","LocalizationProvider","useTranslation","ClickAwayListener","LocaleContext","EventIcon","CustomDatePicker","props","minDate","value","onChange","onError","label","id","name","disablePast","disableFuture","helperText","fullWidth","required","error","variant","t","locale","inputFormat","localeData","longDateFormat","mask","replaceAll","openDatePicker","setOpenDatePicker","handleOnChange","newDate","handleOnError","e","InputProps","endAdornment","color","cursor","propTypes","object","string","func"],"mappings":"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","sourcesContent":["import React, {useContext, useState} from 'react'\nimport PropTypes from 'prop-types'\nimport TextField from '@material-ui/core/TextField'\nimport moment from 'moment'\nimport MomentAdapter from '@date-io/moment'\nimport { DatePicker, LocalizationProvider } from '@material-ui/pickers'\nimport useTranslation from 'lib/translations/hooks/useTranslation'\nimport {ClickAwayListener} from \"@material-ui/core\";\nimport {LocaleContext} from \"../../lib/translations/context/LocaleContext\";\nimport EventIcon from '@material-ui/icons/Event';\n\nfunction CustomDatePicker(props) {\n    const { minDate, value, onChange, onError, label, id, name, disablePast, disableFuture, helperText, fullWidth, required, error, variant } = props\n        , { t } = useTranslation()\n\n    const { locale } = useContext(LocaleContext)\n    const inputFormat = moment.localeData(locale).longDateFormat('L')\n    const mask = inputFormat.replaceAll('D', '_').replaceAll('M', '_').replaceAll('Y', '_')\n    const [openDatePicker, setOpenDatePicker] = useState(false);\n\n    const handleOnChange = (newDate, name) => {\n        if(typeof onChange === \"function\") onChange(newDate, name)\n    }\n\n    const handleOnError = (error) => {\n        if(typeof onError === \"function\") onError(error)\n    }\n\n    return (\n        <LocalizationProvider dateLibInstance={moment} dateAdapter={MomentAdapter}>\n            <ClickAwayListener onClickAway={() => setOpenDatePicker(false)}>\n                <div>\n                    <DatePicker\n                        autoOk\n                        id={id}\n                        name={name}\n                        open={openDatePicker}\n                        label={label || t('str_date')}\n                        minDate={minDate}\n                        mask={mask}\n                        value={value}\n                        error={error}\n                        allowKeyboardControl\n                        inputFormat={moment.localeData(locale).longDateFormat('L')}\n                        disableFuture={disableFuture}\n                        disablePast={disablePast}\n                        openTo={'date'}\n                        views={['year', 'month', 'date']}\n                        onClose={() => {setOpenDatePicker(false)}}\n                        onError={(e) => handleOnError(e)}\n                        onChange={(newDate) => handleOnChange(newDate, name)}\n                        renderInput={(props) => {\n                            return (\n                                <TextField\n                                    {...props}\n                                    id={id}\n                                    name={name}\n                                    fullWidth={fullWidth}\n                                    required={required}\n                                    variant={variant || 'outlined'}\n                                    helperText={helperText && `(${helperText})` || props?.error && inputFormat && `(${inputFormat})` || ''}\n                                    InputProps={{\n                                        ...props.InputProps,\n                                        endAdornment: (\n                                            <React.Fragment>\n                                             <span onClick={() => {setOpenDatePicker(true)}}>\n                                                 {<EventIcon size={'small'} style={{color: 'inherit', cursor: 'pointer'}}/>}\n                                             </span>\n                                            </React.Fragment>\n                                        ),\n                                    }}\n                                />\n                            )\n                        }}\n                    />\n                </div>\n            </ClickAwayListener>\n        </LocalizationProvider>\n    )\n}\n\nCustomDatePicker.propTypes = {\n    value: PropTypes.object,\n    minDate: PropTypes.object,\n    label: PropTypes.string,\n    onError: PropTypes.func,\n    onChange: PropTypes.func,\n}\n\nexport default CustomDatePicker\n"]},"metadata":{},"sourceType":"module"}