{"ast":null,"code":"import _defineProperty from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/mata/app-cloudweb/components/guest/account/AccountKiosk/components/Map.js\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useContext, useEffect } from 'react';\nimport { Container, Grid, Icon, List, ListSubheader, ListItem, ListItemText, Box, Typography, Button } from '@material-ui/core';\nimport GoogleMapReact from 'google-map-react';\nimport WebCmsGlobal from '../../../../webcms-global';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { defaultLocale } from '../../../../../lib/translations/config';\nimport { jsonGroupBy } from '../../../../../model/orest/constants';\nimport { connect, useSelector } from 'react-redux';\nimport { setToState as _setToState, updateState as _updateState } from '../../../../../state/actions';\nimport clsx from 'clsx';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport LoadingSpinner from '../../../../LoadingSpinner';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport useTranslation from '../../../../../lib/translations/hooks/useTranslation';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      width: '100%',\n      backgroundColor: theme.palette.background.paper,\n      position: 'relative',\n      overflow: 'auto',\n      maxHeight: 'calc(100vh - 250px)'\n    },\n    listSection: {\n      backgroundColor: 'inherit'\n    },\n    ul: {\n      backgroundColor: 'inherit',\n      padding: 0\n    },\n    subHeader: {\n      background: '#f7f7f7'\n    },\n    locItem: {\n      cursor: 'pointer',\n      boxShadow: 'inset 0 -1px 0px 0px #d6d6d6'\n    },\n    locItemOnSelect: {\n      backgroundColor: '#dee8f1',\n      boxShadow: 'inset 0 -2px 0px 0px #2196f3'\n    },\n    listLocIcon: {\n      color: '#5EC0E8'\n    },\n    markerMyLocIcon: {\n      color: '#E91E62'\n    },\n    markerLocIcon: {\n      marginTop: -25,\n      marginLeft: -15,\n      color: '#5EC0E8'\n    },\n    markerLocIconOnSelect: {\n      color: '#1A5588',\n      animation: '$bounce 0.6s ease-out',\n      animationIterationCount: 'infinite',\n      animationDelay: '0.6s'\n    },\n    \"@keyframes bounce\": {\n      \"0%\": {\n        transform: \"translateY(-2px)\"\n      },\n      \"25%, 75%\": {\n        transform: \"translateY(-5px)\"\n      },\n      \"50%\": {\n        transform: \"translateY(-10px)\"\n      },\n      \"90%\": {\n        transform: \"translateY(-2px)\"\n      },\n      \"100%\": {\n        transform: \"translateY(0)\"\n      }\n    },\n    myLocButton: {\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      margin: 10,\n      backgroundColor: '#2196f3',\n      padding: '10px 15px 10px 15px',\n      color: '#ffffff',\n      \"&:hover \": {\n        color: '#ffffff',\n        backgroundColor: '#137bcd'\n      }\n    }\n  };\n});\n\nvar geoFormat = function geoFormat(number) {\n  var str = String(number);\n  var $1 = str.substr(0, 2);\n  var $2 = str.substr(2, str.length);\n  var res = \"\".concat($1, \".\").concat($2);\n  return parseFloat(res);\n};\n\nvar getDistanceFromLatLonInKm = function getDistanceFromLatLonInKm(lat1, lon1, lat2, lon2) {\n  var R = 6371e3; // metres\n\n  var $lat1 = lat1 * Math.PI / 180; // φ, λ in radians\n\n  var $lat2 = lat2 * Math.PI / 180;\n  var $lat = (lat2 - lat1) * Math.PI / 180;\n  var $lon = (lon2 - lon1) * Math.PI / 180;\n  var a = Math.sin($lat / 2) * Math.sin($lat / 2) + Math.cos($lat1) * Math.cos($lat2) * Math.sin($lon / 2) * Math.sin($lon / 2);\n  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  var d = R * c; // in metres\n\n  return d;\n};\n\nvar intlFormat = function intlFormat(num) {\n  return new Intl.NumberFormat().format(num);\n};\n\nvar metricFormat = function metricFormat(num) {\n  if (Math.round(num) >= 1000) {\n    return intlFormat(num / 1000).slice(0, 4) + 'km';\n  } else {\n    return parseFloat(intlFormat(num)) + 'm';\n  }\n\n  return intlFormat(num);\n};\n\nvar hashSelect = function hashSelect(select, lat, lng) {\n  var $s1 = String(select[0]).replace('.', '');\n  var $s2 = String(select[1]).replace('.', '');\n  var $r1 = \"\".concat($s1, \"-\").concat($s2);\n  var $lat = String(lat).replace('.', '');\n  var $lng = String(lng).replace('.', '');\n  var $r2 = \"\".concat($lat, \"-\").concat($lng);\n  return $r1 === $r2;\n};\n\nvar Marker = function Marker(props) {\n  _s();\n\n  var isMyLoc = props.isMyLoc,\n      isSelect = props.isSelect,\n      name = props.name;\n  var classes = useStyles();\n\n  if (isMyLoc) {\n    return __jsx(Icon, {\n      title: name,\n      className: clsx(classes.markerMyLocIcon, _defineProperty({}, classes.markerLocIconOnSelect, isSelect)),\n      fontSize: \"large\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, \"person_pin\");\n  }\n\n  return __jsx(Icon, {\n    title: name,\n    className: clsx(classes.markerLocIcon, _defineProperty({}, classes.markerLocIconOnSelect, isSelect)),\n    fontSize: \"large\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, \"location_on\");\n};\n\n_s(Marker, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Marker;\n\nvar Map = function Map(props) {\n  _s2();\n\n  var state = props.state,\n      setToState = props.setToState;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useContext = useContext(WebCmsGlobal),\n      GENERAL_SETTINGS = _useContext.GENERAL_SETTINGS,\n      locale = _useContext.locale;\n\n  var loginfo = useSelector(function (state) {\n    return state.orest.currentUser && state.orest.currentUser.loginfo;\n  });\n  var classes = useStyles();\n\n  var _useState = useState(false),\n      myLocation = _useState[0],\n      setMyLocation = _useState[1];\n\n  var _useState2 = useState({\n    lat: GENERAL_SETTINGS.hotelLocation.lat,\n    lng: GENERAL_SETTINGS.hotelLocation.lng\n  }),\n      mapCenter = _useState2[0],\n      setMapCenter = _useState2[1];\n\n  var _useState3 = useState(18),\n      mapZoom = _useState3[0],\n      setMapZoom = _useState3[1];\n\n  var _useState4 = useState(false),\n      locSelect = _useState4[0],\n      setLocSelect = _useState4[1];\n\n  var _useState5 = useState(false),\n      myLocSelect = _useState5[0],\n      setMyLocSelect = _useState5[1];\n\n  var _useState6 = useState(false),\n      isLoading = _useState6[0],\n      setIsLoading = _useState6[1];\n\n  var clientParams = {};\n  clientParams.hotelrefno = loginfo && loginfo.hotelrefno || GENERAL_SETTINGS.HOTELREFNO;\n  useEffect(function () {\n    var active = true;\n\n    if (active) {\n      var isChainHotelChange = false;\n\n      if (GENERAL_SETTINGS.ISCHAIN && state.changeHotelRefno !== false) {\n        clientParams.ischain = true;\n        clientParams.chainid = state.changeHotelRefno;\n        clientParams.hotelrefno = GENERAL_SETTINGS.HOTELREFNO;\n\n        if (clientParams.chainid !== state.mapInfoList.chainid) {\n          isChainHotelChange = true;\n        }\n      } else {\n        clientParams.ischain = false;\n        clientParams.chainid = false;\n      }\n\n      var isLangChange = false;\n\n      if (state.mapInfoList.langcode !== locale) {\n        isLangChange = true;\n        clientParams.langcode = locale;\n      }\n\n      var isRequest;\n\n      if (GENERAL_SETTINGS.ISCHAIN) {\n        isRequest = state.mapInfoList.data === false && GENERAL_SETTINGS.ISCHAIN && state.changeHotelRefno !== false;\n      } else {\n        isRequest = state.mapInfoList.data === false && GENERAL_SETTINGS.ISCHAIN === false;\n      }\n\n      if ((isRequest || isLangChange || isChainHotelChange) && isLoading === false) {\n        setIsLoading(true);\n        axios({\n          url: GENERAL_SETTINGS.BASE_URL + 'api/guestweb/hotel-info',\n          method: 'post',\n          params: {\n            langcode: clientParams.langcode || defaultLocale,\n            chainid: clientParams.chainid,\n            hotelrefno: clientParams.hotelrefno,\n            ischain: clientParams.ischain\n          }\n        }).then(function (infoResponse) {\n          var infoData = infoResponse.data;\n\n          if (infoData.success && infoData.data.length > 0) {\n            setIsLoading(false);\n            var useData = infoData.data.filter(function (item) {\n              return item.locid && item.loclat && item.loclng;\n            });\n            setToState('guest', ['mapInfoList', 'data'], useData.length > 0 ? jsonGroupBy(useData, 'localcatdesc') : null);\n            setToState('guest', ['mapInfoList', 'langcode'], locale);\n            setToState('guest', ['mapInfoList', 'chainid'], clientParams.chainid);\n          } else {\n            setIsLoading(false);\n            setToState('guest', ['mapInfoList', 'data'], null);\n            setToState('guest', ['mapInfoList', 'langcode'], locale);\n            setToState('guest', ['mapInfoList', 'chainid'], clientParams.chainid);\n          }\n        })[\"catch\"](function () {\n          setIsLoading(false);\n          setToState('guest', ['mapInfoList', 'data'], null);\n          setToState('guest', ['mapInfoList', 'langcode'], locale);\n          setToState('guest', ['mapInfoList', 'chainid'], clientParams.chainid);\n        });\n      }\n    }\n\n    return function () {\n      active = false;\n    };\n  }, [state.changeHotelRefno, locale]);\n  useEffect(function () {\n    var active = true;\n\n    if (active && navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        setMapCenter({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        });\n\n        if (!myLocation) {\n          setMyLocation({\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          });\n        }\n      });\n    }\n  }, [navigator && navigator.geolocation]);\n\n  var handleMyLocation = function handleMyLocation() {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      var lat = Number(String(position.coords.latitude).replace('.', ''));\n      var lng = Number(String(position.coords.longitude).replace('.', ''));\n      setLocSelect([lat, lng]);\n      setMyLocSelect(true);\n    });\n  };\n\n  if (state.mapInfoList.data === false || isLoading === true) {\n    return __jsx(Container, {\n      maxWidth: \"lg\",\n      style: {\n        padding: 0\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 13\n      }\n    }, __jsx(Box, {\n      p: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }\n    }, __jsx(LoadingSpinner, {\n      size: 40,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 21\n      }\n    })));\n  }\n\n  if (state.mapInfoList.data === null && isLoading === false) {\n    return __jsx(Box, {\n      p: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 13\n      }\n    }, __jsx(Typography, {\n      variant: \"h6\",\n      align: \"center\",\n      gutterBottom: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }\n    }, t('str_noDataAvailable')), GENERAL_SETTINGS.ISCHAIN && __jsx(Typography, {\n      variant: \"h6\",\n      align: \"center\",\n      gutterBottom: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 21\n      }\n    }, t('str_ifYouWishYouCanChangeTheHotelAndTryAgain'), __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 76\n      }\n    }), __jsx(Button, {\n      startIcon: __jsx(BusinessIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 44\n        }\n      }),\n      onClick: function onClick() {\n        return setToState(\"guest\", [\"isHotelListOpen\"], true);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 25\n      }\n    }, state.changeHotelRefno ? state.changeHotelName : t('str_chooseHotel'))));\n  }\n\n  return __jsx(Container, {\n    fixed: true,\n    maxWidth: \"lg\",\n    style: {\n      padding: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 17\n    }\n  }, __jsx(List, {\n    className: classes.root,\n    subheader: __jsx(\"li\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 63\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 21\n    }\n  }, state.mapInfoList.data && Object.keys(state.mapInfoList.data).map(function (sectionId) {\n    return __jsx(\"li\", {\n      key: \"section-\".concat(sectionId),\n      className: classes.listSection,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 29\n      }\n    }, __jsx(\"ul\", {\n      className: classes.ul,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 33\n      }\n    }, __jsx(ListSubheader, {\n      className: classes.subHeader,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 36\n      }\n    }, \"\".concat(sectionId)), state.mapInfoList.data[sectionId] && state.mapInfoList.data[sectionId].map(function (item) {\n      return __jsx(ListItem, {\n        key: \"item-\".concat(sectionId, \"-\").concat(item.title),\n        className: clsx(classes.locItem, _defineProperty({}, classes.locItemOnSelect, hashSelect(locSelect, item.loclat, item.loclng))),\n        onClick: function onClick() {\n          if (hashSelect(locSelect, item.loclat, item.loclng)) {\n            setLocSelect(false);\n            setMyLocSelect(false);\n          } else {\n            setLocSelect([item.loclat, item.loclng]);\n            setMyLocSelect(false);\n          }\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 41\n        }\n      }, __jsx(ListItemAvatar, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 45\n        }\n      }, __jsx(Icon, {\n        className: classes.listLocIcon,\n        fontSize: \"large\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 49\n        }\n      }, \"location_on\")), __jsx(ListItemText, {\n        primary: \"\".concat(item.title),\n        secondary: \"\".concat(metricFormat(getDistanceFromLatLonInKm(myLocation.lat, myLocation.lng, geoFormat(item.loclat), geoFormat(item.loclng)))),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 45\n        }\n      }));\n    })));\n  }))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    style: {\n      position: 'relative',\n      height: 'calc(100vh - 250px)'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 21\n    }\n  }, __jsx(GoogleMapReact, {\n    bootstrapURLKeys: {\n      key: process.env.GOOGLE_MAP_API_KEY,\n      libraries: ['places', 'geometry']\n    },\n    options: {\n      scrollwheel: false,\n      gestureHandling: \"none\",\n      fullscreenControl: false,\n      zoomControl: false,\n      draggingCursor: \"default\",\n      draggableCursor: \"default\"\n    },\n    center: locSelect && locSelect[0] && locSelect[1] && {\n      lat: geoFormat(locSelect[0]),\n      lng: geoFormat(locSelect[1])\n    } || mapCenter,\n    zoom: mapZoom,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 25\n    }\n  }, __jsx(Marker, {\n    isSelect: myLocSelect,\n    lat: myLocation.lat,\n    lng: myLocation.lng,\n    isMyLoc: true,\n    name: t('str_myLocation'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 29\n    }\n  }), state.mapInfoList.data && Object.keys(state.mapInfoList.data).map(function (sectionId) {\n    return state.mapInfoList.data[sectionId] && state.mapInfoList.data[sectionId].map(function (item, i) {\n      return __jsx(Marker, {\n        key: i,\n        lat: geoFormat(item.loclat),\n        lng: geoFormat(item.loclng),\n        name: item.title,\n        isSelect: hashSelect(locSelect, item.loclat, item.loclng),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 37\n        }\n      });\n    });\n  })), __jsx(Button, {\n    onClick: function onClick() {\n      return handleMyLocation();\n    },\n    variant: \"outlined\",\n    color: \"primary\",\n    className: classes.myLocButton,\n    startIcon: __jsx(Icon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 40\n      }\n    }, \"my_location\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 25\n    }\n  }, t('str_myLocation'))))));\n};\n\n_s2(Map, \"y6v9jppBAyQykiGSYKvd9ewBmqY=\", false, function () {\n  return [useTranslation, useSelector, useStyles];\n});\n\n_c2 = Map;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    state: state.formReducer.guest\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateState: function updateState(stateType, stateName, value) {\n      return dispatch(_updateState(stateType, stateName, value));\n    },\n    setToState: function setToState(stateType, stateName, value) {\n      return dispatch(_setToState(stateType, stateName, value));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Map);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Marker\");\n$RefreshReg$(_c2, \"Map\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/guest/account/AccountKiosk/components/Map.js"],"names":["React","useState","useContext","useEffect","Container","Grid","Icon","List","ListSubheader","ListItem","ListItemText","Box","Typography","Button","GoogleMapReact","WebCmsGlobal","axios","makeStyles","defaultLocale","jsonGroupBy","connect","useSelector","setToState","updateState","clsx","ListItemAvatar","LoadingSpinner","BusinessIcon","useTranslation","useStyles","theme","root","width","backgroundColor","palette","background","paper","position","overflow","maxHeight","listSection","ul","padding","subHeader","locItem","cursor","boxShadow","locItemOnSelect","listLocIcon","color","markerMyLocIcon","markerLocIcon","marginTop","marginLeft","markerLocIconOnSelect","animation","animationIterationCount","animationDelay","transform","myLocButton","top","right","margin","geoFormat","number","str","String","$1","substr","$2","length","res","parseFloat","getDistanceFromLatLonInKm","lat1","lon1","lat2","lon2","R","$lat1","Math","PI","$lat2","$lat","$lon","a","sin","cos","c","atan2","sqrt","d","intlFormat","num","Intl","NumberFormat","format","metricFormat","round","slice","hashSelect","select","lat","lng","$s1","replace","$s2","$r1","$lng","$r2","Marker","props","isMyLoc","isSelect","name","classes","Map","state","t","GENERAL_SETTINGS","locale","loginfo","orest","currentUser","myLocation","setMyLocation","hotelLocation","mapCenter","setMapCenter","mapZoom","setMapZoom","locSelect","setLocSelect","myLocSelect","setMyLocSelect","isLoading","setIsLoading","clientParams","hotelrefno","HOTELREFNO","active","isChainHotelChange","ISCHAIN","changeHotelRefno","ischain","chainid","mapInfoList","isLangChange","langcode","isRequest","data","url","BASE_URL","method","params","then","infoResponse","infoData","success","useData","filter","item","locid","loclat","loclng","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","handleMyLocation","Number","changeHotelName","Object","keys","map","sectionId","title","height","key","process","env","GOOGLE_MAP_API_KEY","libraries","scrollwheel","gestureHandling","fullscreenControl","zoomControl","draggingCursor","draggableCursor","i","mapStateToProps","formReducer","guest","mapDispatchToProps","dispatch","stateType","stateName","value"],"mappings":"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","sourcesContent":["import React, {useState, useContext, useEffect} from 'react'\nimport { Container, Grid, Icon, List, ListSubheader, ListItem, ListItemText, Box, Typography, Button  } from '@material-ui/core'\nimport GoogleMapReact from 'google-map-react'\nimport WebCmsGlobal from '../../../../webcms-global'\nimport axios from 'axios'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { defaultLocale } from '../../../../../lib/translations/config'\nimport { jsonGroupBy } from '../../../../../model/orest/constants'\nimport { connect, useSelector } from 'react-redux'\nimport { setToState, updateState } from '../../../../../state/actions'\nimport clsx from 'clsx'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport LoadingSpinner from '../../../../LoadingSpinner'\nimport BusinessIcon from '@material-ui/icons/Business'\nimport useTranslation from '../../../../../lib/translations/hooks/useTranslation'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        backgroundColor: theme.palette.background.paper,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 'calc(100vh - 250px)',\n    },\n    listSection: {\n        backgroundColor: 'inherit',\n    },\n    ul: {\n        backgroundColor: 'inherit',\n        padding: 0,\n    },\n    subHeader: {\n        background: '#f7f7f7'\n    },\n    locItem:{\n        cursor: 'pointer',\n        boxShadow: 'inset 0 -1px 0px 0px #d6d6d6'\n    },\n    locItemOnSelect: {\n        backgroundColor: '#dee8f1',\n        boxShadow: 'inset 0 -2px 0px 0px #2196f3'\n    },\n    listLocIcon: {\n        color: '#5EC0E8'\n    },\n    markerMyLocIcon: {\n        color: '#E91E62'\n    },\n    markerLocIcon: {\n        marginTop: -25,\n        marginLeft: -15,\n        color: '#5EC0E8'\n    },\n    markerLocIconOnSelect: {\n        color: '#1A5588',\n        animation: '$bounce 0.6s ease-out',\n        animationIterationCount: 'infinite',\n        animationDelay: '0.6s'\n    },\n    \"@keyframes bounce\": {\n        \"0%\": { transform: \"translateY(-2px)\" },\n        \"25%, 75%\": { transform: \"translateY(-5px)\" },\n        \"50%\": { transform: \"translateY(-10px)\" },\n        \"90%\": { transform: \"translateY(-2px)\" },\n        \"100%\": { transform: \"translateY(0)\" }\n    },\n    myLocButton: {\n        position: 'absolute',\n        top: 0,\n        right: 0,\n        margin: 10,\n        backgroundColor: '#2196f3',\n        padding: '10px 15px 10px 15px',\n        color: '#ffffff',\n        \"&:hover \": {\n            color: '#ffffff',\n            backgroundColor: '#137bcd'\n        }\n    }\n}))\n\nconst geoFormat = (number) => {\n    const str = String(number)\n    const $1 = str.substr(0, 2)\n    const $2 = str.substr(2, str.length)\n    const res = `${$1}.${$2}`\n\n    return parseFloat(res)\n}\n\nconst getDistanceFromLatLonInKm = (lat1, lon1, lat2, lon2) => {\n    const R = 6371e3; // metres\n    const $lat1 = lat1 * Math.PI/180; // φ, λ in radians\n    const $lat2 = lat2 * Math.PI/180;\n    const $lat = (lat2-lat1) * Math.PI/180;\n    const $lon = (lon2-lon1) * Math.PI/180;\n\n    const a = Math.sin($lat/2) * Math.sin($lat/2) + Math.cos($lat1) * Math.cos($lat2) * Math.sin($lon/2) * Math.sin($lon/2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n\n    const d = R * c; // in metres\n    return d\n}\n\nconst intlFormat = (num) =>{\n    return new Intl.NumberFormat().format(num);\n}\n\nconst metricFormat = (num) =>{\n    if(Math.round(num) >= 1000){\n        return intlFormat(num/1000).slice(0,4)+'km';\n    }else{\n        return parseFloat(intlFormat(num))+'m';\n    }\n    return intlFormat(num);\n}\n\nconst hashSelect = (select, lat, lng) => {\n    const $s1 = String(select[0]).replace('.','')\n    const $s2 = String(select[1]).replace('.','')\n    const $r1 = `${$s1}-${$s2}`\n\n    const $lat = String(lat).replace('.','')\n    const $lng = String(lng).replace('.','')\n    const $r2 = `${$lat}-${$lng}`\n\n    return $r1 === $r2\n}\n\nconst Marker = props => {\n    const { isMyLoc, isSelect, name } = props\n    const classes = useStyles()\n\n    if(isMyLoc){\n        return (<Icon title={name} className={clsx(classes.markerMyLocIcon, { [classes.markerLocIconOnSelect]: isSelect})} fontSize='large'>person_pin</Icon>)\n    }\n\n    return (<Icon title={name} className={clsx(classes.markerLocIcon, { [classes.markerLocIconOnSelect]: isSelect})} fontSize='large'>location_on</Icon>)\n}\n\nconst Map = (props) => {\n    const { state, setToState } = props\n    const { t } = useTranslation()\n    const { GENERAL_SETTINGS, locale } = useContext(WebCmsGlobal)\n    const loginfo = useSelector((state) => state.orest.currentUser && state.orest.currentUser.loginfo)\n\n    const classes = useStyles()\n    const [myLocation, setMyLocation] = useState(false)\n    const [mapCenter, setMapCenter] = useState({ lat: GENERAL_SETTINGS.hotelLocation.lat, lng: GENERAL_SETTINGS.hotelLocation.lng, })\n    const [mapZoom, setMapZoom] = useState(18)\n    const [locSelect, setLocSelect] = useState(false)\n    const [myLocSelect, setMyLocSelect] = useState(false)\n    const [isLoading, setIsLoading] = useState(false)\n\n    let clientParams = {}\n    clientParams.hotelrefno = loginfo && loginfo.hotelrefno || GENERAL_SETTINGS.HOTELREFNO\n\n    useEffect(() => {\n        let active = true\n        if(active){\n            let isChainHotelChange = false\n            if (GENERAL_SETTINGS.ISCHAIN && state.changeHotelRefno !== false) {\n                clientParams.ischain = true\n                clientParams.chainid = state.changeHotelRefno\n                clientParams.hotelrefno = GENERAL_SETTINGS.HOTELREFNO\n\n                if(clientParams.chainid !== state.mapInfoList.chainid){\n                    isChainHotelChange = true\n                }\n\n            } else {\n                clientParams.ischain = false\n                clientParams.chainid = false\n            }\n\n            let isLangChange = false\n            if (state.mapInfoList.langcode !== locale) {\n                isLangChange = true\n                clientParams.langcode = locale\n            }\n\n            let isRequest\n            if (GENERAL_SETTINGS.ISCHAIN) {\n                isRequest = state.mapInfoList.data === false && GENERAL_SETTINGS.ISCHAIN && state.changeHotelRefno !== false\n            } else {\n                isRequest = state.mapInfoList.data === false && GENERAL_SETTINGS.ISCHAIN === false\n            }\n\n            if ((isRequest || isLangChange || isChainHotelChange) && isLoading === false) {\n                setIsLoading(true)\n                axios({\n                    url: GENERAL_SETTINGS.BASE_URL + 'api/guestweb/hotel-info',\n                    method: 'post',\n                    params: {\n                        langcode: clientParams.langcode || defaultLocale,\n                        chainid: clientParams.chainid,\n                        hotelrefno: clientParams.hotelrefno,\n                        ischain: clientParams.ischain,\n                    },\n                }).then((infoResponse) => {\n                    const infoData = infoResponse.data\n                    if (infoData.success && infoData.data.length > 0) {\n                        setIsLoading(false)\n                        const useData = infoData.data.filter(item => item.locid && item.loclat && item.loclng)\n                        setToState('guest', ['mapInfoList', 'data'], useData.length > 0 ? jsonGroupBy(useData, 'localcatdesc') : null)\n                        setToState('guest', ['mapInfoList', 'langcode'], locale)\n                        setToState('guest', ['mapInfoList', 'chainid'], clientParams.chainid)\n                    } else {\n                        setIsLoading(false)\n                        setToState('guest', ['mapInfoList', 'data'], null)\n                        setToState('guest', ['mapInfoList', 'langcode'], locale)\n                        setToState('guest', ['mapInfoList', 'chainid'], clientParams.chainid)\n                    }\n                }).catch(()=> {\n                    setIsLoading(false)\n                    setToState('guest', ['mapInfoList', 'data'], null)\n                    setToState('guest', ['mapInfoList', 'langcode'], locale)\n                    setToState('guest', ['mapInfoList', 'chainid'], clientParams.chainid)\n                })\n            }\n        }\n\n        return () => {\n            active = false\n        }\n    }, [state.changeHotelRefno, locale])\n\n    useEffect(()=> {\n        let active = true\n        if (active && navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(function(position) {\n                setMapCenter({\n                    lat: position.coords.latitude,\n                    lng: position.coords.longitude\n                })\n\n                if(!myLocation){\n                    setMyLocation({\n                        lat: position.coords.latitude,\n                        lng: position.coords.longitude\n                    })\n                }\n            })\n        }\n\n    }, [navigator && navigator.geolocation])\n\n    const handleMyLocation = () => {\n        navigator.geolocation.getCurrentPosition(function(position) {\n            const lat = Number(String(position.coords.latitude).replace('.',''))\n            const lng = Number(String(position.coords.longitude).replace('.',''))\n            setLocSelect([lat, lng])\n            setMyLocSelect(true)\n        })\n    }\n\n    if (state.mapInfoList.data === false || isLoading === true) {\n        return (\n            <Container maxWidth=\"lg\" style={{ padding: 0 }}>\n                <Box p={4}>\n                    <LoadingSpinner size={40} />\n                </Box>\n            </Container>\n        )\n    }\n\n    if (state.mapInfoList.data === null && isLoading === false) {\n        return (\n            <Box p={4}>\n                <Typography variant=\"h6\" align=\"center\" gutterBottom>\n                    {t('str_noDataAvailable')}\n                </Typography>\n                {GENERAL_SETTINGS.ISCHAIN && (\n                    <Typography variant=\"h6\" align=\"center\" gutterBottom>\n                        {t('str_ifYouWishYouCanChangeTheHotelAndTryAgain')}<br/>\n                        <Button startIcon={<BusinessIcon />} onClick={()=> setToState(\"guest\", [\"isHotelListOpen\"], true)}>\n                            {state.changeHotelRefno ? state.changeHotelName : t('str_chooseHotel')}\n                        </Button>\n                    </Typography>\n                )}\n            </Box>\n        )\n    }\n\n    return (\n        <Container fixed maxWidth=\"lg\" style={{ padding: 0 }}>\n            <Grid container spacing={3}>\n                <Grid item xs={12} sm={3}>\n                    <List className={classes.root} subheader={<li />}>\n                        {state.mapInfoList.data && Object.keys(state.mapInfoList.data).map((sectionId) => (\n                            <li key={`section-${sectionId}`} className={classes.listSection}>\n                                <ul className={classes.ul}>\n                                   <ListSubheader className={classes.subHeader}>{`${sectionId}`}</ListSubheader>\n                                   {state.mapInfoList.data[sectionId] && state.mapInfoList.data[sectionId].map((item) => (\n                                        <ListItem key={`item-${sectionId}-${item.title}`}\n                                           className={clsx(classes.locItem, { [classes.locItemOnSelect]: hashSelect(locSelect, item.loclat, item.loclng)})}\n                                           onClick={()=> {\n                                               if(hashSelect(locSelect, item.loclat, item.loclng)){\n                                                   setLocSelect(false)\n                                                   setMyLocSelect(false)\n                                               }else{\n                                                   setLocSelect([item.loclat, item.loclng])\n                                                   setMyLocSelect(false)\n                                               }\n                                           }}>\n                                            <ListItemAvatar>\n                                                <Icon className={classes.listLocIcon} fontSize='large' >location_on</Icon>\n                                            </ListItemAvatar>\n                                            <ListItemText primary={`${item.title}`} secondary={`${metricFormat(getDistanceFromLatLonInKm(myLocation.lat, myLocation.lng, geoFormat(item.loclat), geoFormat(item.loclng)))}`}/>\n                                        </ListItem>\n                                    ))}\n                                </ul>\n                            </li>\n                        ))}\n                    </List>\n                </Grid>\n                <Grid item xs={12} sm={8}>\n                    <div style={{ position: 'relative', height: 'calc(100vh - 250px)'}}>\n                        <GoogleMapReact\n                            bootstrapURLKeys={{\n                                key: process.env.GOOGLE_MAP_API_KEY,\n                                libraries: ['places', 'geometry']\n                            }}\n                            options={{\n                                scrollwheel: false,\n                                gestureHandling: \"none\",\n                                fullscreenControl:false,\n                                zoomControl: false,\n                                draggingCursor: \"default\",\n                                draggableCursor: \"default\"\n                            }}\n                            center={locSelect && locSelect[0] && locSelect[1] && { lat: geoFormat(locSelect[0]), lng: geoFormat(locSelect[1]) } || mapCenter}\n                            zoom={mapZoom}\n                        >\n                            <Marker\n                                isSelect={myLocSelect}\n                                lat={myLocation.lat}\n                                lng={myLocation.lng}\n                                isMyLoc={true}\n                                name={t('str_myLocation')}\n                            />\n                            {state.mapInfoList.data && Object.keys(state.mapInfoList.data).map((sectionId) =>\n                                state.mapInfoList.data[sectionId] && state.mapInfoList.data[sectionId].map((item, i) => (\n                                    <Marker\n                                        key={i}\n                                        lat={geoFormat(item.loclat)}\n                                        lng={geoFormat(item.loclng)}\n                                        name={item.title}\n                                        isSelect={hashSelect(locSelect, item.loclat, item.loclng)}\n                                    />\n                                ))\n                            )}\n                        </GoogleMapReact>\n                        <Button\n                            onClick={()=> handleMyLocation()}\n                            variant=\"outlined\"\n                            color=\"primary\"\n                            className={classes.myLocButton}\n                            startIcon={<Icon>my_location</Icon>}\n                        >\n                            {t('str_myLocation')}\n                        </Button>\n                    </div>\n                </Grid>\n            </Grid>\n        </Container>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        state: state.formReducer.guest,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    updateState: (stateType, stateName, value) => dispatch(updateState(stateType, stateName, value)),\n    setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Map)\n"]},"metadata":{},"sourceType":"module"}