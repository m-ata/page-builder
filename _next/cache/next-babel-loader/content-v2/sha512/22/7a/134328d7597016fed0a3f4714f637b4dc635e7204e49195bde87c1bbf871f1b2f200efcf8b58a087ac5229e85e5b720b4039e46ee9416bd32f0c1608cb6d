{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/components/page/sections/EditSection.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useContext, useEffect, useState } from 'react'; //material imports\n\nimport Container from '@material-ui/core/Container';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport TextField from \"@material-ui/core/TextField\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport StepConnector from '@material-ui/core/StepConnector';\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Slider from '@material-ui/core/Slider';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport CategoryIcon from '@material-ui/icons/Category';\nimport CreateIcon from '@material-ui/icons/Create';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Typography from \"@material-ui/core/Typography\"; //import toast\n\nimport { toast } from \"react-toastify\"; //custom imports\n\nimport EditSlider from \"./slider/EditSlider\";\nimport EditImage from \"./image/EditImage\";\nimport EditParagraph from \"./paragraph/EditParagrapgh\";\nimport WidgetBooking from \"components/ibe/widget/booking\";\nimport EditContactForm from \"./contact-form/EditContactForm\";\nimport EditSliderOnly from './slider-only/EditSectionOnly';\nimport Alert from \"./AlertDialog\";\nimport EditSliderGallery from \"./slider-gallery/EditSliderGallery\";\nimport WrappedMap from \"./map/Map\"; //redux import\n\nimport { connect } from 'react-redux';\nimport { setToState } from \"../../../../../../state/actions\"; //integration related imports\n\nimport axios from \"axios\";\nimport WebCmsGlobal from \"../../../../../webcms-global\";\nimport { isErrorMsg, OREST_ENDPOINT, REQUEST_METHOD_CONST } from \"../../../../../../model/orest/constants\";\nimport { Delete, Insert, Patch, UseOrest, ViewList } from \"@webcms/orest\";\nimport { COLORS, DELETE_SUCCESS, froalaConfig } from \"../../../constants\";\nimport { useRouter } from \"next/router\";\nimport clsx from \"clsx\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\"; //Froala editor improts\n\nimport dynamic from 'next/dynamic';\nimport EditCardSlider from \"./card-type-slider/EditCardSlider\";\nimport EditVideo from './video/EditVideo';\nconst FroalaEditor = dynamic(async () => {\n  const values = await Promise.all([import('react-froala-wysiwyg'), import('froala-editor/js/plugins.pkgd.min'), import('froala-editor/js/froala_editor.min'), import('froala-editor/js/froala_editor.pkgd.min')]);\n  return values[0];\n}, {\n  loading: () => __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 24\n    }\n  }, \"LOADING!!!\"),\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('react-froala-wysiwyg'), require.resolveWeak('froala-editor/js/plugins.pkgd.min'), require.resolveWeak('froala-editor/js/froala_editor.min'), require.resolveWeak('froala-editor/js/froala_editor.pkgd.min')],\n    modules: ['react-froala-wysiwyg', 'froala-editor/js/plugins.pkgd.min', 'froala-editor/js/froala_editor.min', 'froala-editor/js/froala_editor.pkgd.min']\n  }\n});\nconst useStyle = makeStyles(theme => ({\n  disableSlider: {\n    pointerEvents: \"none\",\n    opacity: 0.5\n  },\n  actionButtons: {\n    display: 'flex',\n    justifyContent: 'flex-start',\n    marginTop: theme.spacing(2)\n  },\n  actionButton: {\n    marginLeft: theme.spacing(1),\n    borderRadius: 20\n  }\n}));\nconst ColorlibConnector = withStyles({\n  alternativeLabel: {\n    top: 30,\n    left: 'calc(-50% + 10px)',\n    right: 'calc(50% + 10px)'\n  },\n  active: {\n    '& $line': {\n      background: 'transparent linear-gradient(270deg, #269DD4 0%, #0F4571 100%) 0% 0% no-repeat padding-box'\n    }\n  },\n  completed: {\n    '& $line': {\n      backgroundColor: COLORS.primary\n    }\n  },\n  line: {\n    height: 4,\n    border: 0,\n    backgroundColor: '#eaeaf0',\n    borderRadius: 1\n  }\n})(StepConnector);\nconst useColorStepIconStyle = makeStyles(() => ({\n  root: {\n    backgroundColor: '#ccc',\n    zIndex: 1,\n    color: '#fff',\n    width: 50,\n    height: 50,\n    display: 'flex',\n    borderRadius: '50%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    '& img': {\n      width: 35\n    }\n  },\n  iconSize: {\n    height: 30,\n    width: 30\n  },\n  active: {\n    backgroundColor: COLORS === null || COLORS === void 0 ? void 0 : COLORS.secondary,\n    boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)'\n  },\n  completed: {\n    backgroundColor: COLORS === null || COLORS === void 0 ? void 0 : COLORS.primary,\n    color: '#fff'\n  }\n}));\n\nconst getSectionStepsIcons = (type, isActive, isCompleted, step) => {\n  const icon_classes = useColorStepIconStyle();\n  let icons = {};\n\n  switch (type) {\n    case 'fullcol':\n      icons = {\n        0: __jsx(CategoryIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 20\n          }\n        }),\n        1: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 20\n          }\n        })\n      };\n      break;\n\n    case 'twocol':\n      icons = {\n        0: __jsx(CategoryIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 20\n          }\n        }),\n        1: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 20\n          }\n        }),\n        2: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 20\n          }\n        })\n      };\n      break;\n\n    case 'threecol':\n      icons = {\n        0: __jsx(CategoryIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 20\n          }\n        }),\n        1: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 20\n          }\n        }),\n        2: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 20\n          }\n        }),\n        3: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 20\n          }\n        })\n      };\n      break;\n\n    default:\n      icons = {\n        0: __jsx(CategoryIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 20\n          }\n        }),\n        1: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 20\n          }\n        })\n      };\n      break;\n  }\n\n  return __jsx(\"div\", {\n    className: clsx(icon_classes.root, {\n      [icon_classes.active]: isActive,\n      [icon_classes.completed]: isCompleted\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }, icons[step]);\n};\n\nconst marks = [{\n  value: 0,\n  label: '0'\n}, {\n  value: 10,\n  label: '10%'\n}, {\n  value: 20,\n  label: '20%'\n}, {\n  value: 30,\n  label: '30%'\n}, {\n  value: 40,\n  label: '40%'\n}, {\n  value: 50,\n  label: '50%'\n}, {\n  value: 60,\n  label: '60'\n}, {\n  value: 70,\n  label: '70%'\n}, {\n  value: 80,\n  label: '80%'\n}, {\n  value: 90,\n  label: '90%'\n}, {\n  value: 100,\n  label: '100%'\n}];\nconst iOSBoxShadow = '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.13),0 0 0 1px rgba(0,0,0,0.02)';\nconst CustomSlider = withStyles({\n  root: {\n    // color: COLORS.primary,\n    height: 2,\n    padding: '15px 0'\n  },\n  thumb: {\n    height: 28,\n    width: 28,\n    backgroundColor: '#fff',\n    boxShadow: iOSBoxShadow,\n    marginTop: -14,\n    marginLeft: -14,\n    '&:focus, &:hover, &$active': {\n      boxShadow: '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.3),0 0 0 1px rgba(0,0,0,0.02)',\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        boxShadow: iOSBoxShadow\n      }\n    }\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50% + 11px)',\n    top: -22,\n    '& *': {\n      background: 'transparent',\n      color: '#000'\n    }\n  },\n  track: {\n    height: 2\n  },\n  rail: {\n    height: 2,\n    opacity: 0.5,\n    backgroundColor: '#bfbfbf'\n  },\n  mark: {\n    backgroundColor: '#bfbfbf',\n    height: 8,\n    width: 1,\n    marginTop: -3\n  },\n  markActive: {\n    opacity: 1,\n    backgroundColor: 'currentColor'\n  }\n})(Slider);\n\nconst EditSection = props => {\n  var _state$page2, _state$page2$sections, _state$page3, _state$page3$sections, _state$page3$sections2;\n\n  const {\n    dialogTitle,\n    section,\n    isDialogOpen,\n    state,\n    onEditSection,\n    resetRender,\n    setToState,\n    otherLangSection\n  } = props;\n  const {\n    0: openModal,\n    1: setOpenModal\n  } = useState(isDialogOpen);\n  const {\n    0: activeStep,\n    1: setActiveStep\n  } = useState(0);\n  const {\n    0: sectionType,\n    1: setSectionType\n  } = useState(section.type);\n  const {\n    0: alertType,\n    1: setAlertType\n  } = useState('');\n  const {\n    0: steps,\n    1: setSteps\n  } = useState([]);\n  const {\n    0: consumeWidth,\n    1: setConsumeWidth\n  } = useState(0);\n  const {\n    0: editedSection,\n    1: setEditedSection\n  } = useState(section);\n  const {\n    0: isAlertDialog,\n    1: setAlertDialog\n  } = useState(false);\n  const {\n    0: tmp_sectionType,\n    1: setTempSectionType\n  } = useState('');\n  const {\n    0: isSave,\n    1: setSave\n  } = useState(false);\n  const {\n    0: components,\n    1: setComponents\n  } = useState(section.items);\n  const {\n    0: sectionID,\n    1: setSectionID\n  } = useState(section.id);\n  const {\n    0: selectedComponent,\n    1: setSelectedComponent\n  } = useState(null);\n  const {\n    0: newComponent,\n    1: setNewComponent\n  } = useState(null);\n  const {\n    0: isNextDisable,\n    1: setNextDisable\n  } = useState(false);\n  const {\n    0: subSectionOptions,\n    1: setSubsectionOptions\n  } = useState([]);\n  const {\n    0: hasSectionTitle,\n    1: setHasSectionTitle\n  } = useState(false);\n  const {\n    0: sectionTitle,\n    1: setSectionTitle\n  } = useState('');\n  let index = state.page.sections.indexOf(editedSection);\n  const sectionTypes = [{\n    label: 'Full Section',\n    value: 'fullcol'\n  }, {\n    label: '2 Column Section',\n    value: 'twocol'\n  }, {\n    label: '3 Column Section',\n    value: 'threecol'\n  }];\n  const {\n    0: sectionOrder,\n    1: setSectionOrder\n  } = useState(index + 1 || 1);\n  const router = useRouter();\n  const companyId = router.query.companyID;\n  const {\n    GENERAL_SETTINGS,\n    token\n  } = useContext(WebCmsGlobal);\n  const authToken = token || router.query.authToken;\n  const classes = useStyle();\n  const config = froalaConfig;\n  useEffect(() => {\n    if (section !== null && section !== void 0 && section.title) {\n      setHasSectionTitle(true);\n      (state === null || state === void 0 ? void 0 : state.langCode) === (state === null || state === void 0 ? void 0 : state.defaultLang) ? setSectionTitle(section.title) : setSectionTitle(otherLangSection === null || otherLangSection === void 0 ? void 0 : otherLangSection.title);\n    }\n  }, [section]);\n  useEffect(() => {\n    if (sectionType === 'fullcol') {\n      var _editedSection$items$;\n\n      setSteps(['Type', `Sub Section 1 (${editedSection === null || editedSection === void 0 ? void 0 : (_editedSection$items$ = editedSection.items[0]) === null || _editedSection$items$ === void 0 ? void 0 : _editedSection$items$.width}%)`]);\n    } else if (sectionType === 'twocol') {\n      var _editedSection$items$2, _editedSection$items$3;\n\n      setSteps(['Type', `Sub Section 1 (${editedSection === null || editedSection === void 0 ? void 0 : (_editedSection$items$2 = editedSection.items[0]) === null || _editedSection$items$2 === void 0 ? void 0 : _editedSection$items$2.width}%)`, `Sub Section 2 (${editedSection === null || editedSection === void 0 ? void 0 : (_editedSection$items$3 = editedSection.items[1]) === null || _editedSection$items$3 === void 0 ? void 0 : _editedSection$items$3.width}%)`]);\n    } else {\n      var _editedSection$items$4, _editedSection$items$5, _editedSection$items$6;\n\n      setSteps(['Type', `Sub Section 1 (${editedSection === null || editedSection === void 0 ? void 0 : (_editedSection$items$4 = editedSection.items[0]) === null || _editedSection$items$4 === void 0 ? void 0 : _editedSection$items$4.width}%)`, `Sub Section 2 (${editedSection === null || editedSection === void 0 ? void 0 : (_editedSection$items$5 = editedSection.items[1]) === null || _editedSection$items$5 === void 0 ? void 0 : _editedSection$items$5.width}%)`, `Sub Section 3 (${editedSection === null || editedSection === void 0 ? void 0 : (_editedSection$items$6 = editedSection.items[2]) === null || _editedSection$items$6 === void 0 ? void 0 : _editedSection$items$6.width}%)`]);\n    }\n  }, [sectionType]);\n  useEffect(() => {\n    switch (state === null || state === void 0 ? void 0 : state.type) {\n      case 'webPage':\n        if (sectionType === 'fullcol') {\n          setSubsectionOptions([{\n            value: 'video',\n            label: 'Video'\n          }, {\n            value: 'slider',\n            label: 'Slider'\n          }, {\n            value: 'sliderOnly',\n            label: 'SliderOnly'\n          }, {\n            value: 'slider-gallery',\n            label: 'Slider Gallery'\n          }, {\n            value: 'card-slider',\n            label: 'Card Slider'\n          }, {\n            value: 'image',\n            label: 'Image'\n          }, {\n            value: 'paragraph',\n            label: 'Text'\n          }, {\n            value: 'widgetbooking',\n            label: 'Booking Engine'\n          }, {\n            value: 'contactForm',\n            label: 'Contact Form'\n          }, {\n            value: 'map',\n            label: 'Map'\n          }]);\n        } else {\n          setSubsectionOptions([{\n            value: 'sliderOnly',\n            label: 'SliderOnly'\n          }, {\n            value: 'image',\n            label: 'Image'\n          }, {\n            value: 'paragraph',\n            label: 'Text'\n          }, {\n            value: 'contactForm',\n            label: 'Contact Form'\n          }, {\n            value: 'map',\n            label: 'Map'\n          }]);\n        }\n\n        break;\n\n      case 'email':\n        setSubsectionOptions([{\n          value: 'image',\n          label: 'Image'\n        }, {\n          value: 'paragraph',\n          label: 'Text'\n        }]);\n        break;\n\n      case 'emailOnly':\n        setSubsectionOptions([{\n          value: 'image',\n          label: 'Image'\n        }, {\n          value: 'paragraph',\n          label: 'Text'\n        }]);\n        break;\n\n      default:\n        setSubsectionOptions([]);\n    }\n  }, [state === null || state === void 0 ? void 0 : state.type, sectionType]);\n  useEffect(() => {\n    handleNextComponentWidth();\n  }, [editedSection, activeStep]);\n\n  const handleComponents = data => {\n    const updatedComponents = [...components];\n    updatedComponents[activeStep - 1] = data;\n    setComponents(updatedComponents);\n  };\n\n  const handleDisable = isDisable => {\n    setNextDisable(isDisable);\n  };\n\n  const setModalType = (component, index) => {\n    switch (component.type) {\n      case 'video':\n        return __jsx(EditVideo, {\n          handleCmponent: handleComponents,\n          videoComponent: component,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 24\n          }\n        });\n\n      case 'slider':\n        return state.langCode === state.defaultLang ? __jsx(EditSlider, {\n          sliderComponent: component,\n          handleDisable: handleDisable,\n          sectionID: sectionID,\n          handleCmponent: handleComponents,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 60\n          }\n        }) : __jsx(EditSlider, {\n          sliderComponent: component,\n          handleDisable: handleDisable,\n          sectionID: sectionID,\n          otherLangSlider: otherLangSection.subItems[index],\n          handleCmponent: handleComponents,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 26\n          }\n        });\n\n      case 'card-slider':\n        return state.langCode === state.defaultLang ? __jsx(EditCardSlider, {\n          cardSlider: component,\n          handleCmponent: handleComponents,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 21\n          }\n        }) : __jsx(EditCardSlider, {\n          cardSlider: component,\n          handleCmponent: handleComponents,\n          langCardSlider: otherLangSection.subItems[index],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 21\n          }\n        });\n\n      case 'slider-gallery':\n        return state.langCode === state.defaultLang ? __jsx(EditSliderGallery, {\n          sliderGallery: component,\n          handleCmponent: handleComponents,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 21\n          }\n        }) : __jsx(EditSliderGallery, {\n          sliderGallery: component,\n          langSliderGallery: otherLangSection.subItems[index],\n          handleCmponent: handleComponents,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 21\n          }\n        });\n\n      case 'sliderOnly':\n        return __jsx(EditSliderOnly, {\n          sliderOnlyCmp: component,\n          handleComponent: handleComponents,\n          langCode: state.langCode,\n          defaultCode: state.defaultLang,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 21\n          }\n        });\n\n      case 'image':\n        return state.langCode === state.defaultLang ? __jsx(EditImage, {\n          imageComponent: component,\n          handleCmponent: handleComponents,\n          handleDisable: handleDisable,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 60\n          }\n        }) : __jsx(EditImage, {\n          imageComponent: component,\n          handleCmponent: handleComponents,\n          otherLangImage: otherLangSection.subItems[index],\n          handleDisable: handleDisable,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 26\n          }\n        });\n\n      case 'paragraph':\n        return state.langCode === state.defaultLang ? __jsx(EditParagraph, {\n          paragraphComponent: component,\n          handleCmponent: handleComponents,\n          handleDisable: handleDisable,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 60\n          }\n        }) : __jsx(EditParagraph, {\n          paragraphComponent: component,\n          handleCmponent: handleComponents,\n          otherLangParagraph: otherLangSection.subItems[index],\n          handleDisable: handleDisable,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 26\n          }\n        });\n\n      case 'widgetbooking':\n        return __jsx(Typography, {\n          component: 'div',\n          style: {\n            pointerEvents: 'none'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 24\n          }\n        }, __jsx(WidgetBooking, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 21\n          }\n        }));\n\n      case 'contactForm':\n        return state.langCode === state.defaultLang ? __jsx(EditContactForm, {\n          handleComponent: handleComponents,\n          contactFormComponent: component,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 60\n          }\n        }) : __jsx(EditContactForm, {\n          handleComponent: handleComponents,\n          contactFormComponent: component,\n          otherLangContactForm: otherLangSection.subItems[index],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 26\n          }\n        });\n\n      case 'map':\n        return __jsx(WrappedMap, {\n          handleCmponent: handleComponents,\n          langCode: state.langCode,\n          defaultCode: state.defaultLang,\n          googleMapURL: `https://maps.googleapis.com/maps/api/js?key=${process.env.GOOGLE_MAP_API_KEY}`,\n          loadingElement: __jsx(\"div\", {\n            style: {\n              height: `100%`\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 52\n            }\n          }),\n          containerElement: __jsx(\"div\", {\n            style: {\n              height: `350px`,\n              borderRadius: 10\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 54\n            }\n          }),\n          mapElement: __jsx(\"div\", {\n            style: {\n              height: `100%`\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 48\n            }\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 24\n          }\n        });\n    }\n  };\n\n  const handleCancel = () => {\n    setOpenModal(false);\n    resetRender();\n  };\n\n  const handleApply = () => {\n    if (isSave) {\n      const newSection = {\n        id: sectionID.toLowerCase(),\n        type: sectionType,\n        title: sectionTitle,\n        items: components\n      };\n      onEditSection(newSection, index, sectionOrder);\n      resetRender();\n      setOpenModal(false);\n    }\n  };\n\n  const handleNextSection = () => {\n    if (activeStep === steps.length - 1) {\n      setSave(true);\n      state.langCode === state.defaultLang && components.map(component => {\n        if (component.type === 'paragraph') {\n          if (component.gid) {\n            ViewList({\n              apiUrl: GENERAL_SETTINGS.OREST_URL,\n              endpoint: OREST_ENDPOINT.HCMITEMTXTPAR,\n              token: authToken,\n              params: {\n                query: `gid:${component.gid}`,\n                hotelrefno: Number(companyId)\n              }\n            }).then(res => {\n              var _res$data, _res$data$data;\n\n              if (res.status === 200 && res !== null && res !== void 0 && (_res$data = res.data) !== null && _res$data !== void 0 && (_res$data$data = _res$data.data) !== null && _res$data$data !== void 0 && _res$data$data.length) {\n                var _res$data$data$;\n\n                Patch({\n                  // update into rafile\n                  apiUrl: GENERAL_SETTINGS.OREST_URL,\n                  endpoint: OREST_ENDPOINT.HCMITEMTXTPAR,\n                  token: authToken,\n                  gid: component.gid,\n                  params: {\n                    hotelrefno: Number(companyId)\n                  },\n                  data: {\n                    itemid: (_res$data$data$ = res.data.data[0]) === null || _res$data$data$ === void 0 ? void 0 : _res$data$data$.itemid,\n                    itemtext: component.service\n                  }\n                }).then(res1 => {\n                  if (res1.status === 200 && res1.data.data) {\n                    component.service = 'hcmitemtxtpar';\n                  } else {\n                    const retErr = isErrorMsg(res1);\n                    toast.error(retErr.errorMsg, {\n                      position: toast.POSITION.TOP_RIGHT\n                    });\n                  }\n                });\n              } else {\n                const retErr = isErrorMsg(res);\n                toast.error(retErr.errorMsg, {\n                  position: toast.POSITION.TOP_RIGHT\n                });\n              }\n            });\n          } else {\n            Insert({\n              // insert paragraph into hcmitemtxt\n              apiUrl: GENERAL_SETTINGS.OREST_URL,\n              endpoint: OREST_ENDPOINT.HCMITEMTXT,\n              token: authToken,\n              data: {\n                itemid: state.hcmItemId,\n                hotelrefno: Number(companyId)\n              }\n            }).then(res => {\n              if (res.status === 200 && res.data.data) {\n                Insert({\n                  // insert textpar\n                  apiUrl: GENERAL_SETTINGS.OREST_URL,\n                  endpoint: OREST_ENDPOINT.HCMITEMTXTPAR,\n                  token: authToken,\n                  data: {\n                    itemid: res.data.data.id,\n                    itemtext: component.service,\n                    hotelrefno: Number(companyId)\n                  }\n                }).then(res1 => {\n                  if (res1.status === 200 && res1.data.data) {\n                    component.service = 'hcmitemtxtpar';\n                    component.gid = res1.data.data.gid;\n                  }\n                });\n              }\n            });\n          }\n        }\n      });\n    } else {\n      setActiveStep(previousStep => previousStep + 1);\n    }\n  };\n\n  const handleBackSection = () => {\n    setActiveStep(previousStep => previousStep - 1);\n  };\n\n  const handleNextComponentWidth = () => {\n    let totalConsumeWidth = 0;\n    editedSection.items.map((component, index) => {\n      if (index <= activeStep - 1) {\n        totalConsumeWidth += component.width;\n      }\n    });\n    setConsumeWidth(totalConsumeWidth);\n  };\n\n  const handleComponentWidthChange = (e, value) => {\n    setConsumeWidth(value);\n  };\n\n  const handleSectionType = event => {\n    setAlertType('section');\n    setAlertDialog(true);\n    setTempSectionType(event.target.value);\n  };\n\n  const handleComponentType = (event, component) => {\n    if (section.type !== sectionType) {\n      const updatedSections = state.page.sections;\n      const componentIndex = updatedSections[index].items.indexOf(component);\n      component.service = handleComponentService(event.target.value);\n      component.type = event.target.value;\n\n      if (event.target.value === 'contactForm') {\n        component.gid = [{\n          id: 'label-1',\n          type: 'refcode',\n          label: 'Type',\n          isActive: true,\n          isEditMode: false\n        }, {\n          id: 'label-2',\n          type: 'company',\n          label: 'Company Name',\n          isActive: true,\n          isEditMode: false\n        }, {\n          id: 'label-3',\n          type: 'firstname',\n          label: 'First Name',\n          isActive: true,\n          isEditMode: false\n        }, {\n          id: 'label-4',\n          type: 'lastname',\n          label: 'Last Name',\n          isActive: true,\n          isEditMode: false\n        }, {\n          id: 'label-5',\n          type: 'workemail',\n          label: 'Email',\n          isActive: true,\n          isEditMode: false\n        }, {\n          id: 'label-6',\n          type: 'mobiletel',\n          label: 'Phone',\n          isActive: true,\n          isEditMode: false\n        }, {\n          id: 'label-7',\n          type: 'salesnote',\n          label: 'Message',\n          isActive: true,\n          isEditMode: false\n        }, {\n          id: 'label-8',\n          type: 'recaptcha',\n          label: '',\n          isActive: true,\n          isEditMode: false\n        }];\n      }\n\n      updatedSections[index].items[componentIndex] = component;\n      setEditedSection(updatedSections[index]);\n      setToState('pageBuilder', ['page', 'sections'], updatedSections);\n    } else {\n      setAlertType('component');\n      setAlertDialog(true);\n      setSelectedComponent(component);\n      handleNewComponent(event.target.value, component);\n    }\n  };\n\n  const handleComponentService = componentType => {\n    let type = '';\n\n    switch (componentType) {\n      case 'slider':\n        type = 'hcmitemsld';\n        break;\n\n      case 'sliderOnly':\n        type = 'eventloc';\n        break;\n\n      case 'image':\n        type = 'hcmitemimg';\n        break;\n\n      case 'widgetbooking':\n        type = 'widgetbooking';\n        break;\n\n      case 'paragraph':\n        type = 'hcmitemtxtpar';\n        break;\n\n      case 'contactForm':\n        type = 'pbook';\n        break;\n\n      case 'map':\n        type = 'map';\n        break;\n\n      default:\n        type = '';\n    }\n\n    return type;\n  };\n\n  const handleNewComponent = (componenttype, component) => {\n    if (componenttype === 'slider') {\n      setNewComponent({\n        gid: '',\n        service: 'hcmitemsld',\n        type: componenttype,\n        width: component.width\n      });\n    }\n\n    if (componenttype === 'slider-gallery') {\n      setNewComponent({\n        gid: '',\n        service: 'hcmitemsld',\n        type: componenttype,\n        width: component.width\n      });\n    }\n\n    if (componenttype === 'sliderOnly') {\n      setNewComponent({\n        masterid: '',\n        service: 'eventloc',\n        type: componenttype,\n        width: component.width\n      });\n    }\n\n    if (componenttype === 'image') {\n      setNewComponent({\n        gid: '',\n        service: 'hcmitemimg',\n        type: componenttype,\n        width: component.width\n      });\n    }\n\n    if (componenttype === 'paragraph') {\n      setNewComponent({\n        gid: '',\n        service: 'hcmitemtxtpar',\n        type: componenttype,\n        width: component.width\n      });\n    }\n\n    if (componenttype === 'widgetbooking') {\n      setNewComponent({\n        service: 'hcmwidgetbooking',\n        type: 'widgetbooking',\n        width: component.width\n      });\n    }\n\n    if (componenttype === 'contactForm') {\n      setNewComponent({\n        service: 'pbook',\n        type: 'contactForm',\n        width: component.width,\n        gid: [{\n          id: 'label-1',\n          type: 'refcode',\n          label: 'Type',\n          isActive: true,\n          isEditMode: false\n        }, {\n          id: 'label-2',\n          type: 'company',\n          label: 'Company Name',\n          isActive: true,\n          isEditMode: false\n        }, {\n          id: 'label-3',\n          type: 'firstname',\n          label: 'First Name',\n          isActive: true,\n          isEditMode: false\n        }, {\n          id: 'label-4',\n          type: 'lastname',\n          label: 'Last Name',\n          isActive: true,\n          isEditMode: false\n        }, {\n          id: 'label-5',\n          type: 'workemail',\n          label: 'Email',\n          isActive: true,\n          isEditMode: false\n        }, {\n          id: 'label-6',\n          type: 'mobiletel',\n          label: 'Phone',\n          isActive: true,\n          isEditMode: false\n        }, {\n          id: 'label-7',\n          type: 'salesnote',\n          label: 'Message',\n          isActive: true,\n          isEditMode: false\n        }, {\n          id: 'label-8',\n          type: 'recaptcha',\n          label: '',\n          isActive: true,\n          isEditMode: false\n        }]\n      });\n    }\n\n    if (componenttype === 'map') {\n      setNewComponent({\n        service: 'map',\n        type: 'map',\n        width: component.width\n      });\n    }\n  };\n\n  const handleAlertActionChange = isDelete => {\n    if (isDelete) {\n      if (alertType === 'section') {\n        handleDeleteSection();\n      }\n\n      if (alertType === 'component') {\n        handleComponentDelete();\n      }\n    }\n\n    setAlertDialog(false);\n  };\n\n  const handleDeleteSection = async () => {\n    const selectedSection = state.page.sections[index];\n    let req = [];\n\n    for (let component of selectedSection.items) {\n      if (component.type === 'slider' || component.type === 'slider-gallery') {\n        const REQUEST_OPTIONS_VIEWLIST_HCMITEMSLD = {\n          url: GENERAL_SETTINGS.OREST_URL + '/hcmitemsld/view/list',\n          method: 'get',\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n            'Content-Type': 'application/json'\n          },\n          params: {\n            query: `gid:${component.gid}`,\n            hotelrefno: Number(companyId)\n          }\n        };\n        const slider = await deleteSlider(REQUEST_OPTIONS_VIEWLIST_HCMITEMSLD, component.gid);\n        req.push(slider);\n      }\n\n      if (component.type === 'image') {\n        const REQUEST_OPTIONS_DELETE_HCMITEMIMG = {\n          url: GENERAL_SETTINGS.OREST_URL + OREST_ENDPOINT.SLASH + OREST_ENDPOINT.HCMITEMIMG + OREST_ENDPOINT.SLASH + 'del/' + component.gid,\n          method: REQUEST_METHOD_CONST.DELETE,\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n            'Content-Type': 'application/json'\n          },\n          params: {\n            hotelrefno: Number(companyId)\n          }\n        };\n        const image = await deleteImage(REQUEST_OPTIONS_DELETE_HCMITEMIMG);\n        req.push(image);\n      }\n\n      if (component.type === 'paragraph') {\n        const REQUEST_OPTIONS_DELETE_HCMITEMTXTPAR = {\n          url: GENERAL_SETTINGS.OREST_URL + OREST_ENDPOINT.SLASH + OREST_ENDPOINT.HCMITEMTXTPAR + OREST_ENDPOINT.SLASH + 'del/' + component.gid,\n          method: REQUEST_METHOD_CONST.DELETE,\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n            'Content-Type': 'application/json'\n          },\n          params: {\n            hotelrefno: Number(companyId)\n          }\n        };\n        const paragrapgh = await deleteParagraph(REQUEST_OPTIONS_DELETE_HCMITEMTXTPAR);\n        req.push(paragrapgh);\n      }\n\n      if (component.type === 'widgetbooking') {\n        const booking = await deleteReadyUsedComponent();\n        req.push(booking);\n      }\n\n      if (component.type === 'contactForm') {\n        const contact = await deleteReadyUsedComponent();\n        req.push(contact);\n      }\n\n      if (component.type === 'map') {\n        const map = await deleteReadyUsedComponent();\n        req.push(map);\n      }\n\n      if (component.type === 'sliderOnly') {\n        const sliderOnly = await deleteReadyUsedComponent();\n        req.push(sliderOnly);\n      }\n    }\n\n    await Promise.all(req).then(async res => {\n      let isSuccess = true;\n      await res.map(r => {\n        if (r.status !== 200) {\n          isSuccess = false;\n        }\n      });\n\n      if (isSuccess) {\n        setSectionType(tmp_sectionType);\n        handleResetSection();\n        toast.success(DELETE_SUCCESS, {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      } else {\n        toast.error('Something went wrong', {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      }\n    });\n  };\n\n  const handleResetSection = () => {\n    const index = state.page.sections.indexOf(section);\n    const updateSections = state.page.sections;\n    let newSection = {};\n    let initialComponents = [];\n\n    switch (tmp_sectionType) {\n      case 'fullcol':\n        initialComponents = [{\n          id: 'item-1',\n          service: 'hcmitemsld',\n          type: 'slider',\n          gid: '',\n          width: 100\n        }];\n        newSection = {\n          id: section.id,\n          type: tmp_sectionType,\n          items: initialComponents\n        };\n        break;\n\n      case 'twocol':\n        [50, 50].map((value, i) => {\n          initialComponents.push({\n            id: 'item-' + (i + 1),\n            service: 'hcmitemimg',\n            type: 'image',\n            gid: '',\n            width: value\n          });\n        });\n        newSection = {\n          id: section.id,\n          type: tmp_sectionType,\n          items: initialComponents\n        };\n        break;\n\n      case 'threecol':\n        [30, 30, 40].map((value, i) => {\n          initialComponents.push({\n            id: 'item-' + (i + 1),\n            service: 'hcmitemimg',\n            type: 'image',\n            gid: '',\n            width: value\n          });\n        });\n        newSection = {\n          id: section.id,\n          type: tmp_sectionType,\n          items: initialComponents\n        };\n        break;\n    }\n\n    setComponents(initialComponents);\n    setEditedSection(newSection);\n    updateSections[index] = newSection;\n    setToState('pageBuilder', ['page', 'sections'], updateSections);\n  };\n\n  const handleComponentDelete = () => {\n    const updatedSection = _objectSpread({}, editedSection);\n\n    const updatedSections = state.page.sections;\n    const componentIndex = updatedSection.items.indexOf(selectedComponent);\n    updatedSection.items[componentIndex] = newComponent;\n\n    if (state.code.toLowerCase() === 'new page') {\n      if (selectedComponent.type === 'slider' || selectedComponent.type === 'slider-gallery') {\n        ViewList({\n          apiUrl: GENERAL_SETTINGS.OREST_URL,\n          endpoint: OREST_ENDPOINT.HCMITEMIMG,\n          token: authToken,\n          params: {\n            query: `sliderid:${selectedComponent.gid}`,\n            sort: 'orderno',\n            hotelrefno: Number(companyId)\n          }\n        }).then(async res => {\n          if (res.status === 200) {\n            let componentData = [];\n            await res.data.data.map(async data => {\n              componentData.push(data);\n            });\n            const data = [];\n\n            for (let gid in componentData) {\n              data.push({\n                gid: componentData[gid].gid\n              });\n            }\n\n            UseOrest({\n              apiUrl: GENERAL_SETTINGS.OREST_URL,\n              endpoint: OREST_ENDPOINT.HCMITEMIMG + '/' + OREST_ENDPOINT.LIST + '/' + OREST_ENDPOINT.DEL,\n              token: authToken,\n              method: REQUEST_METHOD_CONST.DELETE,\n              data: data,\n              params: {\n                hotelrefno: Number(companyId)\n              }\n            }).then(response => {\n              if (response.status === 200) {\n                Delete({\n                  apiUrl: GENERAL_SETTINGS.OREST_URL,\n                  endpoint: OREST_ENDPOINT.HCMITEMSLD,\n                  token: authToken,\n                  gid: selectedComponent.gid,\n                  params: {\n                    hotelrefno: Number(companyId)\n                  }\n                }).then(res => {\n                  if (res.status === 200) {\n                    setEditedSection(updatedSection);\n                    setComponents(updatedSection.items);\n                    updatedSections[index] = updatedSection;\n                    setToState('pageBuilder', ['page', 'sections'], updatedSections);\n                    toast.success(DELETE_SUCCESS, {\n                      position: toast.POSITION.TOP_RIGHT\n                    });\n                  } else {\n                    const retErr = isErrorMsg(res);\n                    toast.error(retErr.errorMsg, {\n                      position: toast.POSITION.TOP_RIGHT\n                    });\n                  }\n                });\n              }\n            });\n          } else {\n            console.log(res);\n          }\n        });\n      } else if (selectedComponent.type === 'image') {\n        Delete({\n          apiUrl: GENERAL_SETTINGS.OREST_URL,\n          endpoint: OREST_ENDPOINT.HCMITEMIMG,\n          token: authToken,\n          gid: selectedComponent.gid,\n          params: {\n            hotelrefno: Number(companyId)\n          }\n        }).then(res => {\n          if (res.status === 200) {\n            toast.success(DELETE_SUCCESS, {\n              position: toast.POSITION.TOP_RIGHT\n            });\n            setEditedSection(updatedSection);\n            setComponents(updatedSection.items);\n            updatedSections[index] = updatedSection;\n            setToState('pageBuilder', ['page', 'sections'], updatedSections);\n          } else {\n            const retErr = isErrorMsg(res);\n            toast.error(retErr.errorMsg, {\n              position: toast.POSITION.TOP_RIGHT\n            });\n          }\n        });\n      } else if (selectedComponent.type === 'paragraph') {\n        Delete({\n          apiUrl: GENERAL_SETTINGS.OREST_URL,\n          endpoint: OREST_ENDPOINT.HCMITEMTXTPAR,\n          token: authToken,\n          gid: selectedComponent.gid,\n          params: {\n            hotelrefno: Number(companyId)\n          }\n        }).then(res => {\n          if (res.status === 200) {\n            toast.success(DELETE_SUCCESS, {\n              position: toast.POSITION.TOP_RIGHT\n            });\n            setEditedSection(updatedSection);\n            setComponents(updatedSection.items);\n            updatedSections[index] = updatedSection;\n            setToState('pageBuilder', ['page', 'sections'], updatedSections);\n          } else {\n            const retErr = isErrorMsg(res);\n            toast.error(retErr.errorMsg, {\n              position: toast.POSITION.TOP_RIGHT\n            });\n          }\n        });\n      } else {\n        setEditedSection(updatedSection);\n        setComponents(updatedSection.items);\n        updatedSections[index] = updatedSection;\n        setToState('pageBuilder', ['page', 'sections'], updatedSections);\n        toast.success(DELETE_SUCCESS, {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      }\n    } else {\n      setEditedSection(updatedSection);\n      setComponents(updatedSection.items);\n      updatedSections[index] = updatedSection;\n      setToState('pageBuilder', ['page', 'sections'], updatedSections);\n    }\n  };\n\n  const deleteImage = async header => {\n    return new Promise(async resv => {\n      return await axios(header).then(async response => {\n        if (response.status === 200 && response.data && response.data.success) {\n          resv(response);\n        } else {\n          const retErr = isErrorMsg(response);\n          toast.error(retErr.errorMsg, {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n        resv(error.response || {\n          status: 0\n        });\n      });\n    });\n  };\n\n  const deleteSlider = async (header, sliderGID) => {\n    return new Promise(async resv => {\n      return await axios(header).then(async response => {\n        if (response.status === 200 && response.data) {\n          const REQUEST_OPTIONS_VIEWLIST_HCMITEMIMG = {\n            url: GENERAL_SETTINGS.OREST_URL + '/hcmitemimg/view/list',\n            method: 'get',\n            headers: {\n              Authorization: `Bearer ${authToken}`,\n              'Content-Type': 'application/json'\n            },\n            params: {\n              query: `sliderid:${response.data.data[0].id}`,\n              hotelrefno: Number(companyId)\n            }\n          };\n          return await axios(REQUEST_OPTIONS_VIEWLIST_HCMITEMIMG).then(async res => {\n            let gids = [];\n            let data = [];\n            await res.data.data.map(d => {\n              data.push(d);\n            });\n\n            for (let gid in data) {\n              gids.push({\n                gid: data[gid].gid\n              });\n            }\n\n            const REQUEST_OPTIONS_DELETE_HCMITEMIMG = {\n              url: GENERAL_SETTINGS.OREST_URL + OREST_ENDPOINT.SLASH + OREST_ENDPOINT.HCMITEMIMG + OREST_ENDPOINT.SLASH + OREST_ENDPOINT.LIST + OREST_ENDPOINT.SLASH + OREST_ENDPOINT.DEL,\n              method: REQUEST_METHOD_CONST.DELETE,\n              headers: {\n                Authorization: `Bearer ${authToken}`,\n                'Content-Type': 'application/json'\n              },\n              data: gids\n            };\n            return await axios(REQUEST_OPTIONS_DELETE_HCMITEMIMG).then(async response1 => {\n              if (response1.status === 200 && response1.data && response1.data.success) {\n                const REQUEST_OPTIONS_DELETE_HCMITEMSLD = {\n                  url: GENERAL_SETTINGS.OREST_URL + OREST_ENDPOINT.SLASH + OREST_ENDPOINT.HCMITEMSLD + OREST_ENDPOINT.SLASH + 'del/' + sliderGID,\n                  method: REQUEST_METHOD_CONST.DELETE,\n                  headers: {\n                    Authorization: `Bearer ${authToken}`,\n                    'Content-Type': 'application/json'\n                  },\n                  params: {\n                    hotelrefno: Number(companyId)\n                  }\n                };\n                return await axios(REQUEST_OPTIONS_DELETE_HCMITEMSLD).then(async response2 => {\n                  if (response2.status === 200 && response2.data && response2.data.success) {\n                    resv(response2);\n                  } else {\n                    const retErr = isErrorMsg(response2);\n                    toast.error(retErr.errorMsg, {\n                      position: toast.POSITION.TOP_RIGHT\n                    });\n                  }\n                });\n              } else {\n                const retErr = isErrorMsg(response1);\n                toast.error(retErr.errorMsg, {\n                  position: toast.POSITION.TOP_RIGHT\n                });\n              }\n            });\n          });\n        } else {\n          const retErr = isErrorMsg(response);\n          toast.error(retErr.errorMsg, {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n        resv(error.response || {\n          status: 0\n        });\n      });\n    });\n  };\n\n  const deleteParagraph = async header => {\n    return new Promise(async resv => {\n      return await axios(header).then(async response => {\n        if (response.status === 200 && response.data && response.data.success) {\n          resv(response);\n        } else {\n          const retErr = isErrorMsg(response);\n          toast.error(retErr.errorMsg, {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n        resv(error.response || {\n          status: 0\n        });\n      });\n    });\n  };\n\n  const deleteReadyUsedComponent = async () => {\n    return new Promise(async resv => {\n      resv({\n        status: 200,\n        msg: 'delete successfully'\n      });\n    });\n  };\n\n  const handleSectionID = event => {\n    setSectionID(event.target.value);\n\n    if ((state === null || state === void 0 ? void 0 : state.type) === 'webPage') {\n      var _state$page, _state$page$sections;\n\n      if (state !== null && state !== void 0 && (_state$page = state.page) !== null && _state$page !== void 0 && (_state$page$sections = _state$page.sections) !== null && _state$page$sections !== void 0 && _state$page$sections.length) {\n        setNextDisable(state.page.sections.some((section, sectionIndex) => {\n          return section.id === event.target.value && sectionIndex !== index;\n        }));\n      }\n    }\n  };\n\n  return __jsx(Dialog, {\n    disableBackdropClick: true,\n    disableEnforceFocus: true,\n    fullWidth: true,\n    maxWidth: \"md\",\n    open: openModal,\n    onClose: handleCancel,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1301,\n      columnNumber: 9\n    }\n  }, __jsx(DialogTitle, {\n    id: \"form-dialog-title\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1303,\n      columnNumber: 13\n    }\n  }, \" \", dialogTitle, __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1304,\n      columnNumber: 17\n    }\n  })), __jsx(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1306,\n      columnNumber: 13\n    }\n  }, __jsx(Stepper, {\n    activeStep: activeStep,\n    alternativeLabel: true,\n    connector: __jsx(ColorlibConnector, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1308,\n        columnNumber: 28\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1307,\n      columnNumber: 17\n    }\n  }, steps.map((label, index) => {\n    return __jsx(Step, {\n      key: `step-${index}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1312,\n        columnNumber: 29\n      }\n    }, __jsx(StepLabel, {\n      color: \"secondary\",\n      StepIconComponent: () => getSectionStepsIcons(sectionType, activeStep === index, activeStep > index, index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1313,\n        columnNumber: 33\n      }\n    }, label));\n  })), __jsx(Container, {\n    className: isSave ? classes.disableSlider : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1322,\n      columnNumber: 17\n    }\n  }, activeStep === 0 && __jsx(React.Fragment, null, __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1326,\n      columnNumber: 33\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1327,\n      columnNumber: 37\n    }\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      size: 'small',\n      checked: hasSectionTitle,\n      onChange: () => {\n        setHasSectionTitle(!hasSectionTitle);\n        !hasSectionTitle ? setSectionTitle(sectionTitle) : setSectionTitle('');\n      },\n      name: \"title\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1330,\n        columnNumber: 49\n      }\n    }),\n    label: \"Add Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1328,\n      columnNumber: 41\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1344,\n      columnNumber: 37\n    }\n  }, __jsx(FormControl, {\n    disabled: state.langCode !== state.defaultLang,\n    fullWidth: true,\n    component: \"fieldset\",\n    size: 'small',\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1345,\n      columnNumber: 41\n    }\n  }, (sectionTypes === null || sectionTypes === void 0 ? void 0 : sectionTypes.length) > 0 && __jsx(Select, {\n    value: sectionType,\n    onChange: handleSectionType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1347,\n      columnNumber: 77\n    }\n  }, sectionTypes.map((option, index) => {\n    return __jsx(MenuItem, {\n      value: option.value,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1353,\n        columnNumber: 61\n      }\n    }, option.label);\n  })))), __jsx(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1362,\n      columnNumber: 37\n    }\n  }, __jsx(FormControl, {\n    fullWidth: true,\n    component: 'fieldset',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1363,\n      columnNumber: 41\n    }\n  }, __jsx(TextField, {\n    label: \"Section ID *\",\n    value: sectionID,\n    disabled: state.langCode !== state.defaultLang,\n    onChange: handleSectionID,\n    helperText: isNextDisable ? \"Already Exist\" : \"\",\n    error: isNextDisable,\n    variant: 'outlined',\n    size: 'small',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1364,\n      columnNumber: 45\n    }\n  }))), __jsx(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1375,\n      columnNumber: 37\n    }\n  }, __jsx(FormControl, {\n    fullWidth: true,\n    component: 'fieldset',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1376,\n      columnNumber: 41\n    }\n  }, __jsx(TextField, {\n    label: \"Order\",\n    inputProps: {\n      min: 1,\n      max: (state === null || state === void 0 ? void 0 : (_state$page2 = state.page) === null || _state$page2 === void 0 ? void 0 : (_state$page2$sections = _state$page2.sections) === null || _state$page2$sections === void 0 ? void 0 : _state$page2$sections.length) + 1\n    },\n    onChange: e => setSectionOrder(e.target.value),\n    disabled: state.langCode !== state.defaultLang,\n    value: sectionOrder,\n    size: 'small',\n    variant: 'outlined',\n    type: 'number',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1377,\n      columnNumber: 45\n    }\n  })))), hasSectionTitle && __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1391,\n      columnNumber: 37\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1392,\n      columnNumber: 41\n    }\n  }, __jsx(FroalaEditor, {\n    tag: \"textarea\",\n    config: config,\n    model: sectionTitle,\n    onModelChange: model => setSectionTitle(model),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1393,\n      columnNumber: 45\n    }\n  })))), (state === null || state === void 0 ? void 0 : (_state$page3 = state.page) === null || _state$page3 === void 0 ? void 0 : (_state$page3$sections = _state$page3.sections[index]) === null || _state$page3$sections === void 0 ? void 0 : (_state$page3$sections2 = _state$page3$sections.items) === null || _state$page3$sections2 === void 0 ? void 0 : _state$page3$sections2.length) > 0 && state.page.sections[index].items.map((value, i) => {\n    return i === activeStep - 1 ? __jsx(\"div\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1407,\n        columnNumber: 33\n      }\n    }, __jsx(\"span\", {\n      className: state.langCode !== state.defaultLang ? classes.disableSlider : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1408,\n        columnNumber: 37\n      }\n    }, __jsx(CustomSlider, {\n      marks: marks,\n      value: consumeWidth,\n      onChange: handleComponentWidthChange,\n      className: activeStep === steps.length - 1 ? classes.disableSlider : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1409,\n        columnNumber: 41\n      }\n    })), __jsx(FormControl, {\n      component: \"fieldset\",\n      size: 'small',\n      variant: 'outlined',\n      disabled: state.langCode !== state.defaultLang,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1416,\n        columnNumber: 37\n      }\n    }, (subSectionOptions === null || subSectionOptions === void 0 ? void 0 : subSectionOptions.length) > 0 && __jsx(Select, {\n      value: value.type,\n      onChange: e => {\n        handleComponentType(e, value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1423,\n        columnNumber: 78\n      }\n    }, subSectionOptions.map((option, index) => {\n      return __jsx(MenuItem, {\n        value: option.value,\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1431,\n          columnNumber: 57\n        }\n      }, option.label);\n    }))), __jsx(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1439,\n        columnNumber: 37\n      }\n    }), setModalType(value, i)) : null;\n  }), __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"flex-start\",\n    alignItems: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1447,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: classes.actionButtons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1448,\n      columnNumber: 25\n    }\n  }, activeStep !== 0 && __jsx(Button, {\n    onClick: handleBackSection,\n    variant: \"contained\",\n    size: \"small\",\n    \"aria-label\": \"add\",\n    className: classes.actionButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1450,\n      columnNumber: 54\n    }\n  }, \"BACK\"), __jsx(Button, {\n    onClick: handleNextSection,\n    variant: \"contained\",\n    size: \"small\",\n    color: \"primary\",\n    \"aria-label\": \"add\",\n    className: classes.actionButton,\n    disabled: isNextDisable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1460,\n      columnNumber: 29\n    }\n  }, activeStep === steps.length - 1 ? 'SAVE' : 'NEXT')))), isAlertDialog && __jsx(Alert, {\n    handleAlert: handleAlertActionChange,\n    alertType: alertType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1475,\n      columnNumber: 38\n    }\n  })), __jsx(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1478,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    className: classes.actionButton,\n    onClick: handleCancel,\n    variant: \"contained\",\n    size: \"small\",\n    \"aria-label\": \"add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1479,\n      columnNumber: 17\n    }\n  }, \"Cancel\"), __jsx(Button, {\n    onClick: handleApply,\n    className: classes.actionButton,\n    variant: \"contained\",\n    size: \"small\",\n    \"aria-label\": \"add\",\n    color: \"primary\",\n    disabled: !isSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1488,\n      columnNumber: 17\n    }\n  }, \"Apply\")));\n};\n\nconst mapStateToProps = state => {\n  return {\n    state: state.formReducer.pageBuilder\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditSection);","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/components/page/sections/EditSection.js"],"names":["React","useContext","useEffect","useState","Container","Dialog","DialogActions","DialogContent","DialogTitle","Button","TextField","Step","StepLabel","Stepper","StepConnector","FormControl","FormControlLabel","Grid","Slider","makeStyles","withStyles","CategoryIcon","CreateIcon","Checkbox","Typography","toast","EditSlider","EditImage","EditParagraph","WidgetBooking","EditContactForm","EditSliderOnly","Alert","EditSliderGallery","WrappedMap","connect","setToState","axios","WebCmsGlobal","isErrorMsg","OREST_ENDPOINT","REQUEST_METHOD_CONST","Delete","Insert","Patch","UseOrest","ViewList","COLORS","DELETE_SUCCESS","froalaConfig","useRouter","clsx","Select","MenuItem","dynamic","EditCardSlider","EditVideo","FroalaEditor","values","Promise","all","loading","ssr","useStyle","theme","disableSlider","pointerEvents","opacity","actionButtons","display","justifyContent","marginTop","spacing","actionButton","marginLeft","borderRadius","ColorlibConnector","alternativeLabel","top","left","right","active","background","completed","backgroundColor","primary","line","height","border","useColorStepIconStyle","root","zIndex","color","width","alignItems","iconSize","secondary","boxShadow","getSectionStepsIcons","type","isActive","isCompleted","step","icon_classes","icons","marks","value","label","iOSBoxShadow","CustomSlider","padding","thumb","valueLabel","track","rail","mark","markActive","EditSection","props","dialogTitle","section","isDialogOpen","state","onEditSection","resetRender","otherLangSection","openModal","setOpenModal","activeStep","setActiveStep","sectionType","setSectionType","alertType","setAlertType","steps","setSteps","consumeWidth","setConsumeWidth","editedSection","setEditedSection","isAlertDialog","setAlertDialog","tmp_sectionType","setTempSectionType","isSave","setSave","components","setComponents","items","sectionID","setSectionID","id","selectedComponent","setSelectedComponent","newComponent","setNewComponent","isNextDisable","setNextDisable","subSectionOptions","setSubsectionOptions","hasSectionTitle","setHasSectionTitle","sectionTitle","setSectionTitle","index","page","sections","indexOf","sectionTypes","sectionOrder","setSectionOrder","router","companyId","query","companyID","GENERAL_SETTINGS","token","authToken","classes","config","title","langCode","defaultLang","handleNextComponentWidth","handleComponents","data","updatedComponents","handleDisable","isDisable","setModalType","component","subItems","process","env","GOOGLE_MAP_API_KEY","handleCancel","handleApply","newSection","toLowerCase","handleNextSection","length","map","gid","apiUrl","OREST_URL","endpoint","HCMITEMTXTPAR","params","hotelrefno","Number","then","res","status","itemid","itemtext","service","res1","retErr","error","errorMsg","position","POSITION","TOP_RIGHT","HCMITEMTXT","hcmItemId","previousStep","handleBackSection","totalConsumeWidth","handleComponentWidthChange","e","handleSectionType","event","target","handleComponentType","updatedSections","componentIndex","handleComponentService","isEditMode","handleNewComponent","componentType","componenttype","masterid","handleAlertActionChange","isDelete","handleDeleteSection","handleComponentDelete","selectedSection","req","REQUEST_OPTIONS_VIEWLIST_HCMITEMSLD","url","method","headers","Authorization","slider","deleteSlider","push","REQUEST_OPTIONS_DELETE_HCMITEMIMG","SLASH","HCMITEMIMG","DELETE","image","deleteImage","REQUEST_OPTIONS_DELETE_HCMITEMTXTPAR","paragrapgh","deleteParagraph","booking","deleteReadyUsedComponent","contact","sliderOnly","isSuccess","r","handleResetSection","success","updateSections","initialComponents","i","updatedSection","code","sort","componentData","LIST","DEL","response","HCMITEMSLD","console","log","header","resv","catch","sliderGID","REQUEST_OPTIONS_VIEWLIST_HCMITEMIMG","gids","d","response1","REQUEST_OPTIONS_DELETE_HCMITEMSLD","response2","msg","handleSectionID","some","sectionIndex","option","min","max","model","mapStateToProps","formReducer","pageBuilder","mapDispatchToProps","dispatch","stateType","stateName"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\n//material imports\nimport Container from '@material-ui/core/Container';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport TextField from \"@material-ui/core/TextField\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport StepConnector from '@material-ui/core/StepConnector';\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Slider from '@material-ui/core/Slider';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport CategoryIcon from '@material-ui/icons/Category';\nimport CreateIcon from '@material-ui/icons/Create';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Typography from \"@material-ui/core/Typography\";\n//import toast\nimport { toast } from \"react-toastify\";\n//custom imports\nimport EditSlider from \"./slider/EditSlider\";\nimport EditImage from \"./image/EditImage\";\nimport EditParagraph from \"./paragraph/EditParagrapgh\";\nimport WidgetBooking from \"components/ibe/widget/booking\";\nimport EditContactForm from \"./contact-form/EditContactForm\";\nimport EditSliderOnly from './slider-only/EditSectionOnly';\nimport Alert from \"./AlertDialog\";\nimport EditSliderGallery from \"./slider-gallery/EditSliderGallery\";\nimport WrappedMap from \"./map/Map\";\n//redux import\nimport { connect } from 'react-redux';\nimport { setToState } from \"../../../../../../state/actions\";\n//integration related imports\nimport axios from \"axios\";\nimport WebCmsGlobal from \"../../../../../webcms-global\";\nimport {\n    isErrorMsg,\n    OREST_ENDPOINT,\n    REQUEST_METHOD_CONST\n} from \"../../../../../../model/orest/constants\";\nimport { Delete, Insert, Patch, UseOrest, ViewList } from \"@webcms/orest\";\nimport {COLORS, DELETE_SUCCESS, froalaConfig} from \"../../../constants\";\nimport { useRouter } from \"next/router\";\nimport clsx from \"clsx\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n//Froala editor improts\nimport dynamic from 'next/dynamic';\nimport EditCardSlider from \"./card-type-slider/EditCardSlider\";\nimport EditVideo from './video/EditVideo';\nconst FroalaEditor = dynamic(\n    async () => {\n        const values = await Promise.all([\n            import('react-froala-wysiwyg'),\n            import('froala-editor/js/plugins.pkgd.min'),\n            import('froala-editor/js/froala_editor.min'),\n            import('froala-editor/js/froala_editor.pkgd.min'),\n        ])\n        return values[0]\n    },\n    {\n        loading: () => <p>LOADING!!!</p>,\n        ssr: false,\n    }\n)\n\nconst useStyle = makeStyles(theme => ({\n    disableSlider: {\n        pointerEvents: \"none\",\n        opacity: 0.5\n    },\n    actionButtons: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        marginTop: theme.spacing(2)\n    },\n    actionButton: {\n        marginLeft: theme.spacing(1),\n        borderRadius: 20,\n    },\n}))\n\nconst ColorlibConnector =  withStyles({\n    alternativeLabel: {\n        top: 30,\n        left: 'calc(-50% + 10px)',\n        right: 'calc(50% + 10px)',\n    },\n    active: {\n        '& $line': {\n            background: 'transparent linear-gradient(270deg, #269DD4 0%, #0F4571 100%) 0% 0% no-repeat padding-box',\n        },\n    },\n    completed: {\n        '& $line': {\n            backgroundColor: COLORS.primary,\n        },\n    },\n    line: {\n        height: 4,\n        border: 0,\n        backgroundColor: '#eaeaf0',\n        borderRadius: 1,\n    },\n})(StepConnector);\n\nconst useColorStepIconStyle = makeStyles(() => ({\n    root: {\n        backgroundColor: '#ccc',\n        zIndex: 1,\n        color: '#fff',\n        width: 50,\n        height: 50,\n        display: 'flex',\n        borderRadius: '50%',\n        justifyContent: 'center',\n        alignItems: 'center',\n        '& img': {\n            width: 35,\n        },\n    },\n    iconSize: {\n        height: 30,\n        width: 30,\n    },\n    active: {\n        backgroundColor: COLORS?.secondary,\n        boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)',\n    },\n    completed: {\n        backgroundColor: COLORS?.primary,\n        color: '#fff',\n    },\n}));\n\nconst getSectionStepsIcons = (type, isActive, isCompleted, step) => {\n    const icon_classes = useColorStepIconStyle()\n    let icons = {}\n    switch (type) {\n        case 'fullcol':\n            icons = {\n                0: <CategoryIcon className={icon_classes.iconSize} />,\n                1: <CreateIcon className={icon_classes.iconSize} />,\n            }\n            break\n        case 'twocol':\n            icons = {\n                0: <CategoryIcon className={icon_classes.iconSize} />,\n                1: <CreateIcon className={icon_classes.iconSize} />,\n                2: <CreateIcon className={icon_classes.iconSize} />,\n            }\n            break\n        case 'threecol':\n            icons = {\n                0: <CategoryIcon className={icon_classes.iconSize} />,\n                1: <CreateIcon className={icon_classes.iconSize} />,\n                2: <CreateIcon className={icon_classes.iconSize} />,\n                3: <CreateIcon className={icon_classes.iconSize} />,\n            }\n            break\n        default:\n            icons = {\n                0: <CategoryIcon className={icon_classes.iconSize} />,\n                1: <CreateIcon className={icon_classes.iconSize} />,\n            }\n            break\n    }\n\n    return (\n        <div\n            className={clsx(icon_classes.root, {\n                [icon_classes.active]: isActive,\n                [icon_classes.completed]: isCompleted,\n            })}\n        >\n            {icons[step]}\n        </div>\n    )\n}\n\nconst marks = [{ value: 0, label: '0' }, { value: 10, label: '10%' }, { value: 20, label: '20%' }, { value: 30, label: '30%' },\n{ value: 40, label: '40%' }, { value: 50, label: '50%' }, { value: 60, label: '60' }, { value: 70, label: '70%' },\n{ value: 80, label: '80%' }, { value: 90, label: '90%' }, { value: 100, label: '100%' },];\n\nconst iOSBoxShadow =\n    '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.13),0 0 0 1px rgba(0,0,0,0.02)';\n\nconst CustomSlider = withStyles({\n    root: {\n        // color: COLORS.primary,\n        height: 2,\n        padding: '15px 0',\n    },\n    thumb: {\n        height: 28,\n        width: 28,\n        backgroundColor: '#fff',\n        boxShadow: iOSBoxShadow,\n        marginTop: -14,\n        marginLeft: -14,\n        '&:focus, &:hover, &$active': {\n            boxShadow: '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.3),0 0 0 1px rgba(0,0,0,0.02)',\n            // Reset on touch devices, it doesn't add specificity\n            '@media (hover: none)': {\n                boxShadow: iOSBoxShadow,\n            },\n        },\n    },\n    active: {},\n    valueLabel: {\n        left: 'calc(-50% + 11px)',\n        top: -22,\n        '& *': {\n            background: 'transparent',\n            color: '#000',\n        },\n    },\n    track: {\n        height: 2,\n    },\n    rail: {\n        height: 2,\n        opacity: 0.5,\n        backgroundColor: '#bfbfbf',\n    },\n    mark: {\n        backgroundColor: '#bfbfbf',\n        height: 8,\n        width: 1,\n        marginTop: -3,\n    },\n    markActive: {\n        opacity: 1,\n        backgroundColor: 'currentColor',\n    },\n})(Slider);\n\nconst EditSection = (props) => {\n\n    const {\n        dialogTitle,\n        section,\n        isDialogOpen,\n        state,\n        onEditSection,\n        resetRender,\n        setToState,\n        otherLangSection\n    } = props;\n\n    const [openModal, setOpenModal] = useState(isDialogOpen);\n    const [activeStep, setActiveStep] = useState(0);\n    const [sectionType, setSectionType] = useState(section.type);\n    const [alertType, setAlertType] = useState('');\n    const [steps, setSteps] = useState([]);\n    const [consumeWidth, setConsumeWidth] = useState(0);\n    const [editedSection, setEditedSection] = useState(section);\n    const [isAlertDialog, setAlertDialog] = useState(false);\n    const [tmp_sectionType, setTempSectionType] = useState('');\n    const [isSave, setSave] = useState(false);\n    const [components, setComponents] = useState(section.items);\n    const [sectionID, setSectionID] = useState(section.id);\n    const [selectedComponent, setSelectedComponent] = useState(null);\n    const [newComponent, setNewComponent] = useState(null);\n    const [isNextDisable, setNextDisable] = useState(false);\n    const [subSectionOptions, setSubsectionOptions] = useState([]);\n    const [hasSectionTitle, setHasSectionTitle] = useState(false);\n    const [sectionTitle, setSectionTitle] = useState('');\n    let index = state.page.sections.indexOf(editedSection);\n    const sectionTypes = [{\n        label: 'Full Section',\n        value: 'fullcol'\n    }, {\n        label: '2 Column Section',\n        value: 'twocol'\n    }, {\n        label: '3 Column Section',\n        value: 'threecol'\n    }];\n    const [sectionOrder, setSectionOrder] = useState(index + 1 || 1);\n\n    const router = useRouter();\n    const companyId = router.query.companyID;\n    const { GENERAL_SETTINGS, token } = useContext(WebCmsGlobal);\n    const authToken = token || router.query.authToken;\n\n    const classes = useStyle();\n\n    const config = froalaConfig;\n\n    useEffect(() => {\n        if (section?.title) {\n            setHasSectionTitle(true);\n            state?.langCode === state?.defaultLang ? setSectionTitle(section.title) : setSectionTitle(otherLangSection?.title);\n        }\n    }, [section]);\n\n    useEffect(() => {\n        if (sectionType === 'fullcol') {\n            setSteps(['Type', `Sub Section 1 (${editedSection?.items[0]?.width}%)`]);\n        } else if (sectionType === 'twocol') {\n            setSteps(['Type', `Sub Section 1 (${editedSection?.items[0]?.width}%)`, `Sub Section 2 (${editedSection?.items[1]?.width}%)`]);\n        } else {\n            setSteps(['Type', `Sub Section 1 (${editedSection?.items[0]?.width}%)`, `Sub Section 2 (${editedSection?.items[1]?.width}%)`, `Sub Section 3 (${editedSection?.items[2]?.width}%)`]);\n        }\n    }, [sectionType]);\n\n    useEffect(() => {\n        switch (state?.type) {\n            case 'webPage':\n                if (sectionType === 'fullcol') {\n                    setSubsectionOptions([{\n                        value: 'video',\n                        label: 'Video'\n                    }, {\n                        value: 'slider',\n                        label: 'Slider'\n                    }, {\n                        value: 'sliderOnly',\n                        label: 'SliderOnly'\n                    },{\n                        value: 'slider-gallery',\n                        label: 'Slider Gallery'\n                    }, {\n                        value: 'card-slider',\n                        label: 'Card Slider'\n                    }, {\n                        value: 'image',\n                        label: 'Image'\n                    }, {\n                        value: 'paragraph',\n                        label: 'Text'\n                    }, {\n                        value: 'widgetbooking',\n                        label: 'Booking Engine'\n                    }, {\n                        value: 'contactForm',\n                        label: 'Contact Form'\n                    }, {\n                        value: 'map',\n                        label: 'Map'\n                    }]);\n                } else {\n                    setSubsectionOptions([{\n                        value: 'sliderOnly',\n                        label: 'SliderOnly'\n                    }, {\n                        value: 'image',\n                        label: 'Image'\n                    }, {\n                        value: 'paragraph',\n                        label: 'Text'\n                    }, {\n                        value: 'contactForm',\n                        label: 'Contact Form'\n                    }, {\n                        value: 'map',\n                        label: 'Map'\n                    }]);\n                }\n                break\n            case 'email':\n                setSubsectionOptions([ {\n                    value: 'image',\n                    label: 'Image'\n                }, {\n                    value: 'paragraph',\n                    label: 'Text'\n                }]);\n                break\n            case 'emailOnly':\n                setSubsectionOptions([ {\n                    value: 'image',\n                    label: 'Image'\n                }, {\n                    value: 'paragraph',\n                    label: 'Text'\n                }]);\n                break\n            default:\n                setSubsectionOptions([])\n        }\n    }, [state?.type, sectionType]);\n\n    useEffect(() => {\n        handleNextComponentWidth();\n    }, [editedSection, activeStep]);\n\n    const handleComponents = (data) => {\n        const updatedComponents = [...components];\n        updatedComponents[activeStep - 1] = data;\n        setComponents(updatedComponents);\n    }\n\n    const handleDisable = (isDisable) => {\n        setNextDisable(isDisable);\n    }\n\n    const setModalType = (component, index) => {\n        switch (component.type) {\n            case 'video': \n                return <EditVideo handleCmponent={handleComponents} videoComponent={component} />\n            case 'slider':\n                return (\n                    state.langCode === state.defaultLang ? <EditSlider\n                        sliderComponent={component}\n                        handleDisable={handleDisable}\n                        sectionID={sectionID}\n                        handleCmponent={handleComponents}\n                    /> : <EditSlider\n                            sliderComponent={component}\n                            handleDisable={handleDisable}\n                            sectionID={sectionID}\n                            otherLangSlider={otherLangSection.subItems[index]}\n                            handleCmponent={handleComponents}\n                        />\n                )\n            case 'card-slider' :\n                return state.langCode === state.defaultLang ?\n                    <EditCardSlider cardSlider={component}\n                                    handleCmponent={handleComponents} /> :\n                    <EditCardSlider cardSlider={component}\n                                    handleCmponent={handleComponents}\n                                    langCardSlider={otherLangSection.subItems[index]} />\n            case 'slider-gallery':\n                return state.langCode === state.defaultLang ?\n                    <EditSliderGallery sliderGallery={component}\n                                       handleCmponent={handleComponents} /> :\n                    <EditSliderGallery sliderGallery={component}\n                                       langSliderGallery={otherLangSection.subItems[index]}\n                                       handleCmponent={handleComponents}\n                    />\n            case 'sliderOnly':\n                return (\n                    <EditSliderOnly\n                        sliderOnlyCmp={component}\n                        handleComponent={handleComponents}\n                        langCode={state.langCode}\n                        defaultCode={state.defaultLang}\n                    />\n                )\n            case 'image':\n                return (\n                    state.langCode === state.defaultLang ? <EditImage\n                        imageComponent={component}\n                        handleCmponent={handleComponents}\n                        handleDisable={handleDisable}\n                    /> : <EditImage\n                            imageComponent={component}\n                            handleCmponent={handleComponents}\n                            otherLangImage={otherLangSection.subItems[index]}\n                            handleDisable={handleDisable}\n                        />\n                )\n            case 'paragraph':\n                return (\n                    state.langCode === state.defaultLang ? <EditParagraph\n                        paragraphComponent={component}\n                        handleCmponent={handleComponents}\n                        handleDisable={handleDisable}\n                    /> : <EditParagraph\n                            paragraphComponent={component}\n                            handleCmponent={handleComponents}\n                            otherLangParagraph={otherLangSection.subItems[index]}\n                            handleDisable={handleDisable}\n                        />\n                )\n            case 'widgetbooking':\n                return <Typography component={'div'} style={{pointerEvents: 'none'}}>\n                    <WidgetBooking/>\n                </Typography>\n            case 'contactForm':\n                return (\n                    state.langCode === state.defaultLang ? <EditContactForm\n                        handleComponent={handleComponents}\n                        contactFormComponent={component}\n                    /> : <EditContactForm\n                            handleComponent={handleComponents}\n                            contactFormComponent={component}\n                            otherLangContactForm={otherLangSection.subItems[index]}\n                        />\n                )\n            case 'map':\n                return <WrappedMap handleCmponent={handleComponents}\n                                   langCode={state.langCode}\n                                   defaultCode={state.defaultLang}\n                                   googleMapURL={`https://maps.googleapis.com/maps/api/js?key=${process.env.GOOGLE_MAP_API_KEY}`}\n                                   loadingElement={<div style={{height: `100%`}}/>}\n                                   containerElement={<div style={{height: `350px`, borderRadius: 10}}/>}\n                                   mapElement={<div style={{height: `100%`}}/>}\n                />\n        }\n    }\n\n    const handleCancel = () => {\n        setOpenModal(false);\n        resetRender();\n    }\n\n    const handleApply = () => {\n        if (isSave) {\n            const newSection = {\n                id: sectionID.toLowerCase(),\n                type: sectionType,\n                title: sectionTitle,\n                items: components\n            }\n            onEditSection(newSection, index, sectionOrder);\n            resetRender();\n            setOpenModal(false);\n        }\n    }\n\n    const handleNextSection = () => {\n\n        if (activeStep === steps.length - 1) {\n            setSave(true);\n            state.langCode === state.defaultLang && components.map(component => {\n                if (component.type === 'paragraph') {\n                    if (component.gid) {\n                        ViewList({\n                            apiUrl: GENERAL_SETTINGS.OREST_URL,\n                            endpoint: OREST_ENDPOINT.HCMITEMTXTPAR,\n                            token: authToken,\n                            params: {\n                                query: `gid:${component.gid}`,\n                                hotelrefno:  Number(companyId)\n                            }\n                        }).then(res => {\n                            if (res.status === 200 && res?.data?.data?.length) {\n                                Patch({ // update into rafile\n                                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                                    endpoint: OREST_ENDPOINT.HCMITEMTXTPAR,\n                                    token: authToken,\n                                    gid: component.gid,\n                                    params: {\n                                        hotelrefno: Number(companyId)\n                                    },\n                                    data: {\n                                        itemid: res.data.data[0]?.itemid,\n                                        itemtext: component.service,\n                                    },\n                                }).then(res1 => {\n                                    if (res1.status === 200 && res1.data.data) {\n                                        component.service = 'hcmitemtxtpar'\n                                    } else {\n                                        const retErr = isErrorMsg(res1);\n                                        toast.error(retErr.errorMsg, {\n                                            position: toast.POSITION.TOP_RIGHT\n                                        });\n                                    }\n                                })\n                            } else {\n                                const retErr = isErrorMsg(res);\n                                toast.error(retErr.errorMsg, {\n                                    position: toast.POSITION.TOP_RIGHT\n                                });\n                            }\n                        })\n                    } else {\n                        Insert({ // insert paragraph into hcmitemtxt\n                            apiUrl: GENERAL_SETTINGS.OREST_URL,\n                            endpoint: OREST_ENDPOINT.HCMITEMTXT,\n                            token: authToken,\n                            data: {\n                                itemid: state.hcmItemId,\n                                hotelrefno: Number(companyId)\n                            },\n                        }).then(res => {\n                            if (res.status === 200 && res.data.data) {\n                                Insert({ // insert textpar\n                                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                                    endpoint: OREST_ENDPOINT.HCMITEMTXTPAR,\n                                    token: authToken,\n                                    data: {\n                                        itemid: res.data.data.id,\n                                        itemtext: component.service,\n                                        hotelrefno: Number(companyId)\n                                    },\n                                }).then(res1 => {\n                                    if (res1.status === 200 && res1.data.data) {\n                                        component.service = 'hcmitemtxtpar';\n                                        component.gid = res1.data.data.gid;\n                                    }\n                                })\n                            }\n                        });\n                    }\n                }\n            })\n        } else {\n            setActiveStep(previousStep => previousStep + 1);\n        }\n    }\n\n    const handleBackSection = () => {\n        setActiveStep(previousStep => previousStep - 1);\n    }\n\n    const handleNextComponentWidth = () => {\n        let totalConsumeWidth = 0;\n        editedSection.items.map((component, index) => {\n            if (index <= activeStep - 1) {\n                totalConsumeWidth += component.width;\n            }\n        })\n        setConsumeWidth(totalConsumeWidth);\n    }\n\n    const handleComponentWidthChange = (e, value) => {\n        setConsumeWidth(value);\n    }\n\n    const handleSectionType = (event) => {\n        setAlertType('section');\n        setAlertDialog(true);\n        setTempSectionType(event.target.value);\n    }\n\n    const handleComponentType = (event, component) => {\n        if (section.type !== sectionType) {\n            const updatedSections = state.page.sections;\n            const componentIndex = updatedSections[index].items.indexOf(component);\n            component.service = handleComponentService(event.target.value);\n            component.type = event.target.value;\n            if (event.target.value === 'contactForm') {\n                component.gid = [\n                    {\n                        id: 'label-1',\n                        type: 'refcode',\n                        label: 'Type',\n                        isActive: true,\n                        isEditMode: false\n                    }, {\n                        id: 'label-2',\n                        type: 'company',\n                        label: 'Company Name',\n                        isActive: true,\n                        isEditMode: false\n                    }, {\n                        id: 'label-3',\n                        type: 'firstname',\n                        label: 'First Name',\n                        isActive: true,\n                        isEditMode: false\n                    }, {\n                        id: 'label-4',\n                        type: 'lastname',\n                        label: 'Last Name',\n                        isActive: true,\n                        isEditMode: false\n                    }, {\n                        id: 'label-5',\n                        type: 'workemail',\n                        label: 'Email',\n                        isActive: true,\n                        isEditMode: false\n                    }, {\n                        id: 'label-6',\n                        type: 'mobiletel',\n                        label: 'Phone',\n                        isActive: true,\n                        isEditMode: false\n                    }, {\n                        id: 'label-7',\n                        type: 'salesnote',\n                        label: 'Message',\n                        isActive: true,\n                        isEditMode: false\n                    }, {\n                        id: 'label-8',\n                        type: 'recaptcha',\n                        label: '',\n                        isActive: true,\n                        isEditMode: false\n                    }\n                ]\n            }\n            updatedSections[index].items[componentIndex] = component;\n            setEditedSection(updatedSections[index]);\n            setToState('pageBuilder', ['page', 'sections'], updatedSections);\n        } else {\n            setAlertType('component');\n            setAlertDialog(true);\n            setSelectedComponent(component);\n            handleNewComponent(event.target.value, component);\n        }\n    }\n\n    const handleComponentService = (componentType) => {\n        let type = '';\n        switch (componentType) {\n            case 'slider':\n                type = 'hcmitemsld';\n                break;\n            case 'sliderOnly':\n                type = 'eventloc';\n                break\n            case 'image':\n                type = 'hcmitemimg';\n                break;\n            case 'widgetbooking':\n                type = 'widgetbooking';\n                break;\n            case 'paragraph':\n                type = 'hcmitemtxtpar';\n                break;\n            case 'contactForm':\n                type = 'pbook';\n                break;\n            case 'map':\n                type = 'map';\n                break;\n            default:\n                type = ''\n        }\n        return type;\n    }\n\n    const handleNewComponent = (componenttype, component) => {\n        if (componenttype === 'slider') {\n            setNewComponent({\n                gid: '',\n                service: 'hcmitemsld',\n                type: componenttype,\n                width: component.width\n            })\n        }\n        if (componenttype === 'slider-gallery') {\n            setNewComponent({\n                gid: '',\n                service: 'hcmitemsld',\n                type: componenttype,\n                width: component.width\n            })\n        }\n        if (componenttype === 'sliderOnly') {\n            setNewComponent({\n                masterid: '',\n                service: 'eventloc',\n                type: componenttype,\n                width: component.width\n            })\n        }\n        if (componenttype === 'image') {\n            setNewComponent({\n                gid: '',\n                service: 'hcmitemimg',\n                type: componenttype,\n                width: component.width\n            });\n        }\n        if (componenttype === 'paragraph') {\n            setNewComponent({\n                gid: '',\n                service: 'hcmitemtxtpar',\n                type: componenttype,\n                width: component.width\n            })\n        }\n        if (componenttype === 'widgetbooking') {\n            setNewComponent({\n                service: 'hcmwidgetbooking',\n                type: 'widgetbooking',\n                width: component.width\n            });\n        }\n        if (componenttype === 'contactForm') {\n            setNewComponent({\n                service: 'pbook',\n                type: 'contactForm',\n                width: component.width,\n                gid: [\n                    {\n                        id: 'label-1',\n                        type: 'refcode',\n                        label: 'Type',\n                        isActive: true,\n                        isEditMode: false\n                    }, {\n                        id: 'label-2',\n                        type: 'company',\n                        label: 'Company Name',\n                        isActive: true,\n                        isEditMode: false\n                    }, {\n                        id: 'label-3',\n                        type: 'firstname',\n                        label: 'First Name',\n                        isActive: true,\n                        isEditMode: false\n                    }, {\n                        id: 'label-4',\n                        type: 'lastname',\n                        label: 'Last Name',\n                        isActive: true,\n                        isEditMode: false\n                    }, {\n                        id: 'label-5',\n                        type: 'workemail',\n                        label: 'Email',\n                        isActive: true,\n                        isEditMode: false\n                    }, {\n                        id: 'label-6',\n                        type: 'mobiletel',\n                        label: 'Phone',\n                        isActive: true,\n                        isEditMode: false\n                    }, {\n                        id: 'label-7',\n                        type: 'salesnote',\n                        label: 'Message',\n                        isActive: true,\n                        isEditMode: false\n                    }, {\n                        id: 'label-8',\n                        type: 'recaptcha',\n                        label: '',\n                        isActive: true,\n                        isEditMode: false\n                    }\n                ]\n            });\n        }\n        if (componenttype === 'map') {\n            setNewComponent({\n                service: 'map',\n                type: 'map',\n                width: component.width\n            });\n        }\n    }\n\n    const handleAlertActionChange = (isDelete) => {\n        if (isDelete) {\n            if (alertType === 'section') {\n                handleDeleteSection();\n            }\n            if (alertType === 'component') {\n                handleComponentDelete();\n            }\n        }\n        setAlertDialog(false);\n    }\n\n    const handleDeleteSection = async () => {\n        const selectedSection = state.page.sections[index]\n        let req = []\n        for (let component of selectedSection.items) {\n            if (component.type === 'slider' || component.type === 'slider-gallery') {\n                const REQUEST_OPTIONS_VIEWLIST_HCMITEMSLD = {\n                    url: GENERAL_SETTINGS.OREST_URL + '/hcmitemsld/view/list',\n                    method: 'get',\n                    headers: {\n                        Authorization: `Bearer ${authToken}`,\n                        'Content-Type': 'application/json',\n                    },\n                    params: {\n                        query: `gid:${component.gid}`,\n                        hotelrefno: Number(companyId),\n                    },\n                }\n                const slider = await deleteSlider(REQUEST_OPTIONS_VIEWLIST_HCMITEMSLD, component.gid)\n                req.push(slider)\n            }\n            if (component.type === 'image') {\n                const REQUEST_OPTIONS_DELETE_HCMITEMIMG = {\n                    url:\n                        GENERAL_SETTINGS.OREST_URL +\n                        OREST_ENDPOINT.SLASH +\n                        OREST_ENDPOINT.HCMITEMIMG +\n                        OREST_ENDPOINT.SLASH +\n                        'del/' +\n                        component.gid,\n                    method: REQUEST_METHOD_CONST.DELETE,\n                    headers: {\n                        Authorization: `Bearer ${authToken}`,\n                        'Content-Type': 'application/json',\n                    },\n                    params: {\n                        hotelrefno: Number(companyId),\n                    },\n                }\n                const image = await deleteImage(REQUEST_OPTIONS_DELETE_HCMITEMIMG)\n                req.push(image)\n            }\n            if (component.type === 'paragraph') {\n                const REQUEST_OPTIONS_DELETE_HCMITEMTXTPAR = {\n                    url:\n                        GENERAL_SETTINGS.OREST_URL +\n                        OREST_ENDPOINT.SLASH +\n                        OREST_ENDPOINT.HCMITEMTXTPAR +\n                        OREST_ENDPOINT.SLASH +\n                        'del/' +\n                        component.gid,\n                    method: REQUEST_METHOD_CONST.DELETE,\n                    headers: {\n                        Authorization: `Bearer ${authToken}`,\n                        'Content-Type': 'application/json',\n                    },\n                    params: {\n                        hotelrefno: Number(companyId),\n                    },\n                }\n                const paragrapgh = await deleteParagraph(REQUEST_OPTIONS_DELETE_HCMITEMTXTPAR)\n                req.push(paragrapgh)\n            }\n            if (component.type === 'widgetbooking') {\n                const booking = await deleteReadyUsedComponent();\n                req.push(booking);\n            }\n            if (component.type === 'contactForm') {\n                const contact = await deleteReadyUsedComponent();\n                req.push(contact);\n            }\n            if (component.type === 'map') {\n                const map = await deleteReadyUsedComponent();\n                req.push(map);\n            }\n            if (component.type === 'sliderOnly') {\n                const sliderOnly = await deleteReadyUsedComponent();\n                req.push(sliderOnly);\n            }\n        }\n        await Promise.all(req).then(async (res) => {\n            let isSuccess = true\n            await res.map((r) => {\n                if (r.status !== 200) {\n                    isSuccess = false\n                }\n            })\n            if (isSuccess) {\n                setSectionType(tmp_sectionType);\n                handleResetSection();\n                toast.success(DELETE_SUCCESS, {\n                    position: toast.POSITION.TOP_RIGHT,\n                })\n            } else {\n                toast.error('Something went wrong', {\n                    position: toast.POSITION.TOP_RIGHT,\n                })\n            }\n        })\n    }\n\n    const handleResetSection = () => {\n\n        const index = state.page.sections.indexOf(section);\n        const updateSections = state.page.sections;\n        let newSection = {};\n        let initialComponents = []\n        switch (tmp_sectionType) {\n            case 'fullcol':\n                initialComponents = [{\n                    id: 'item-1',\n                    service: 'hcmitemsld',\n                    type: 'slider',\n                    gid: '',\n                    width: 100\n                }]\n                newSection = {\n                    id: section.id,\n                    type: tmp_sectionType,\n                    items: initialComponents\n                }\n                break;\n            case 'twocol':\n                [50, 50].map((value, i) => {\n                    initialComponents.push({\n                        id: 'item-' + (i + 1),\n                        service: 'hcmitemimg',\n                        type: 'image',\n                        gid: '',\n                        width: value\n                    });\n                })\n                newSection = {\n                    id: section.id,\n                    type: tmp_sectionType,\n                    items: initialComponents\n                }\n                break;\n            case 'threecol':\n                [30, 30, 40].map((value, i) => {\n                    initialComponents.push({\n                        id: 'item-' + (i + 1),\n                        service: 'hcmitemimg',\n                        type: 'image',\n                        gid: '',\n                        width: value\n                    });\n                })\n                newSection = {\n                    id: section.id,\n                    type: tmp_sectionType,\n                    items: initialComponents\n                }\n                break;\n        }\n        setComponents(initialComponents);\n        setEditedSection(newSection);\n        updateSections[index] = newSection;\n        setToState('pageBuilder', ['page', 'sections'], updateSections);\n    }\n\n    const handleComponentDelete = () => {\n        const updatedSection = { ...editedSection };\n        const updatedSections = state.page.sections;\n        const componentIndex = updatedSection.items.indexOf(selectedComponent);\n        updatedSection.items[componentIndex] = newComponent;\n        if (state.code.toLowerCase() === 'new page') {\n            if (selectedComponent.type === 'slider' || selectedComponent.type === 'slider-gallery') {\n                ViewList({\n                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                    endpoint: OREST_ENDPOINT.HCMITEMIMG,\n                    token: authToken,\n                    params: {\n                        query: `sliderid:${selectedComponent.gid}`,\n                        sort: 'orderno',\n                        hotelrefno: Number(companyId)\n                    }\n                }).then(async res => {\n                    if (res.status === 200) {\n                        let componentData = [];\n                        await res.data.data.map(async (data) => {\n                            componentData.push(data);\n                        });\n                        const data = [];\n                        for (let gid in componentData) {\n                            data.push({ gid: componentData[gid].gid })\n                        }\n                        UseOrest({\n                            apiUrl: GENERAL_SETTINGS.OREST_URL,\n                            endpoint: OREST_ENDPOINT.HCMITEMIMG + '/' + OREST_ENDPOINT.LIST + '/' + OREST_ENDPOINT.DEL,\n                            token: authToken,\n                            method: REQUEST_METHOD_CONST.DELETE,\n                            data: data,\n                            params: {\n                                hotelrefno: Number(companyId)\n                            },\n                        }).then(response => {\n                            if (response.status === 200) {\n                                Delete({\n                                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                                    endpoint: OREST_ENDPOINT.HCMITEMSLD,\n                                    token: authToken,\n                                    gid: selectedComponent.gid,\n                                    params: {\n                                        hotelrefno: Number(companyId)\n                                    }\n                                }).then(res => {\n                                    if (res.status === 200) {\n                                        setEditedSection(updatedSection);\n                                        setComponents(updatedSection.items);\n                                        updatedSections[index] = updatedSection;\n                                        setToState('pageBuilder', ['page', 'sections'], updatedSections);\n                                        toast.success(DELETE_SUCCESS, {\n                                            position: toast.POSITION.TOP_RIGHT\n                                        });\n                                    } else {\n                                        const retErr = isErrorMsg(res);\n                                        toast.error(retErr.errorMsg, {\n                                            position: toast.POSITION.TOP_RIGHT\n                                        });\n                                    }\n                                })\n                            }\n                        });\n\n                    } else {\n                        console.log(res);\n                    }\n                });\n            } else if (selectedComponent.type === 'image') {\n                Delete({\n                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                    endpoint: OREST_ENDPOINT.HCMITEMIMG,\n                    token: authToken,\n                    gid: selectedComponent.gid,\n                    params: {\n                        hotelrefno: Number(companyId)\n                    }\n                }).then(res => {\n                    if (res.status === 200) {\n                        toast.success(DELETE_SUCCESS, {\n                            position: toast.POSITION.TOP_RIGHT\n                        });\n                        setEditedSection(updatedSection);\n                        setComponents(updatedSection.items);\n                        updatedSections[index] = updatedSection;\n                        setToState('pageBuilder', ['page', 'sections'], updatedSections);\n                    } else {\n                        const retErr = isErrorMsg(res);\n                        toast.error(retErr.errorMsg, {\n                            position: toast.POSITION.TOP_RIGHT\n                        });\n                    }\n                })\n            } else if (selectedComponent.type === 'paragraph') {\n                Delete({\n                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                    endpoint: OREST_ENDPOINT.HCMITEMTXTPAR,\n                    token: authToken,\n                    gid: selectedComponent.gid,\n                    params: {\n                        hotelrefno: Number(companyId)\n                    }\n                }).then(res => {\n                    if (res.status === 200) {\n                        toast.success(DELETE_SUCCESS, {\n                            position: toast.POSITION.TOP_RIGHT\n                        });\n                        setEditedSection(updatedSection);\n                        setComponents(updatedSection.items);\n                        updatedSections[index] = updatedSection;\n                        setToState('pageBuilder', ['page', 'sections'], updatedSections);\n                    } else {\n                        const retErr = isErrorMsg(res);\n                        toast.error(retErr.errorMsg, {\n                            position: toast.POSITION.TOP_RIGHT\n                        });\n                    }\n                })\n            } else {\n                setEditedSection(updatedSection);\n                setComponents(updatedSection.items);\n                updatedSections[index] = updatedSection;\n                setToState('pageBuilder', ['page', 'sections'], updatedSections);\n                toast.success(DELETE_SUCCESS, {\n                    position: toast.POSITION.TOP_RIGHT\n                });\n            }\n        } else {\n            setEditedSection(updatedSection);\n            setComponents(updatedSection.items);\n            updatedSections[index] = updatedSection;\n            setToState('pageBuilder', ['page', 'sections'], updatedSections);\n        }\n    }\n\n    const deleteImage = async (header) => {\n        return new Promise(async (resv) => {\n            return await axios(header)\n                .then(async (response) => {\n                    if (response.status === 200 && response.data && response.data.success) {\n                        resv(response)\n                    } else {\n                        const retErr = isErrorMsg(response);\n                        toast.error(retErr.errorMsg, {\n                            position: toast.POSITION.TOP_RIGHT\n                        });\n                    }\n                })\n                .catch((error) => {\n                    console.log(error)\n                    resv(error.response || { status: 0 })\n                })\n        })\n    }\n\n    const deleteSlider = async (header, sliderGID) => {\n        return new Promise(async (resv) => {\n            return await axios(header)\n                .then(async (response) => {\n                    if (response.status === 200 && response.data) {\n                        const REQUEST_OPTIONS_VIEWLIST_HCMITEMIMG = {\n                            url: GENERAL_SETTINGS.OREST_URL + '/hcmitemimg/view/list',\n                            method: 'get',\n                            headers: {\n                                Authorization: `Bearer ${authToken}`,\n                                'Content-Type': 'application/json',\n                            },\n                            params: {\n                                query: `sliderid:${response.data.data[0].id}`,\n                                hotelrefno: Number(companyId),\n                            },\n                        }\n                        return await axios(REQUEST_OPTIONS_VIEWLIST_HCMITEMIMG).then(async (res) => {\n                            let gids = []\n                            let data = []\n                            await res.data.data.map((d) => {\n                                data.push(d)\n                            })\n                            for (let gid in data) {\n                                gids.push({ gid: data[gid].gid })\n                            }\n                            const REQUEST_OPTIONS_DELETE_HCMITEMIMG = {\n                                url:\n                                    GENERAL_SETTINGS.OREST_URL +\n                                    OREST_ENDPOINT.SLASH +\n                                    OREST_ENDPOINT.HCMITEMIMG +\n                                    OREST_ENDPOINT.SLASH +\n                                    OREST_ENDPOINT.LIST +\n                                    OREST_ENDPOINT.SLASH +\n                                    OREST_ENDPOINT.DEL,\n                                method: REQUEST_METHOD_CONST.DELETE,\n                                headers: {\n                                    Authorization: `Bearer ${authToken}`,\n                                    'Content-Type': 'application/json',\n                                },\n                                data: gids,\n                            }\n                            return await axios(REQUEST_OPTIONS_DELETE_HCMITEMIMG).then(async (response1) => {\n                                if (response1.status === 200 && response1.data && response1.data.success) {\n                                    const REQUEST_OPTIONS_DELETE_HCMITEMSLD = {\n                                        url:\n                                            GENERAL_SETTINGS.OREST_URL +\n                                            OREST_ENDPOINT.SLASH +\n                                            OREST_ENDPOINT.HCMITEMSLD +\n                                            OREST_ENDPOINT.SLASH +\n                                            'del/' +\n                                            sliderGID,\n                                        method: REQUEST_METHOD_CONST.DELETE,\n                                        headers: {\n                                            Authorization: `Bearer ${authToken}`,\n                                            'Content-Type': 'application/json',\n                                        },\n                                        params: {\n                                            hotelrefno: Number(companyId),\n                                        },\n                                    }\n                                    return await axios(REQUEST_OPTIONS_DELETE_HCMITEMSLD).then(async (response2) => {\n                                        if (response2.status === 200 && response2.data && response2.data.success) {\n                                            resv(response2)\n                                        } else {\n                                            const retErr = isErrorMsg(response2);\n                                            toast.error(retErr.errorMsg, {\n                                                position: toast.POSITION.TOP_RIGHT\n                                            });\n                                        }\n                                    })\n                                } else {\n                                    const retErr = isErrorMsg(response1);\n                                    toast.error(retErr.errorMsg, {\n                                        position: toast.POSITION.TOP_RIGHT\n                                    });\n                                }\n                            })\n                        })\n                    } else {\n                        const retErr = isErrorMsg(response);\n                        toast.error(retErr.errorMsg, {\n                            position: toast.POSITION.TOP_RIGHT\n                        });\n                    }\n                })\n                .catch((error) => {\n                    console.log(error)\n                    resv(error.response || { status: 0 })\n                })\n        })\n    }\n\n    const deleteParagraph = async (header) => {\n        return new Promise(async (resv) => {\n            return await axios(header)\n                .then(async (response) => {\n                    if (response.status === 200 && response.data && response.data.success) {\n                        resv(response)\n                    } else {\n                        const retErr = isErrorMsg(response);\n                        toast.error(retErr.errorMsg, {\n                            position: toast.POSITION.TOP_RIGHT\n                        });\n                    }\n                })\n                .catch((error) => {\n                    console.log(error)\n                    resv(error.response || { status: 0 })\n                })\n        })\n    }\n\n    const deleteReadyUsedComponent = async () => {\n        return new Promise(async (resv) => {\n            resv({\n                status: 200,\n                msg: 'delete successfully',\n            })\n        })\n    }\n\n    const handleSectionID = (event) => {\n        setSectionID(event.target.value);\n        if (state?.type === 'webPage') {\n            if (state?.page?.sections?.length) {\n                setNextDisable(state.page.sections.some((section, sectionIndex ) => {\n                    return (section.id === event.target.value && sectionIndex !== index)\n                }));\n            }\n        }\n    }\n\n    return (\n        <Dialog disableBackdropClick disableEnforceFocus fullWidth={true} maxWidth=\"md\" open={openModal}\n            onClose={handleCancel} aria-labelledby=\"form-dialog-title\">\n            <DialogTitle id=\"form-dialog-title\" color=\"secondary\"> {dialogTitle}\n                <hr />\n            </DialogTitle>\n            <DialogContent>\n                <Stepper activeStep={activeStep} alternativeLabel\n                connector={<ColorlibConnector/>}\n                >\n                    {steps.map((label, index) => {\n                        return (\n                            <Step key={`step-${index}`}>\n                                <StepLabel\n                                    color=\"secondary\"\n                                    StepIconComponent={() => getSectionStepsIcons(sectionType, (activeStep === index), (activeStep > index), index)}>\n                                    {label}\n                                </StepLabel>\n                            </Step>\n                        );\n                    })}\n                </Stepper>\n                <Container className={isSave ? classes.disableSlider : ''}>\n                    {\n                        activeStep === 0 && (\n                            <>\n                                <Grid container={true} spacing={1}>\n                                    <Grid item={true} xs={2}>\n                                        <FormControlLabel\n                                            control={\n                                                <Checkbox\n                                                    size={'small'}\n                                                    checked={hasSectionTitle}\n                                                    onChange={() => {\n                                                          setHasSectionTitle(!hasSectionTitle);\n                                                        !hasSectionTitle ? setSectionTitle(sectionTitle) : setSectionTitle('')\n                                                    }}\n                                                    name=\"title\"\n                                                    color=\"primary\"\n                                                />\n                                            }\n                                            label=\"Add Title\"\n                                        />\n                                    </Grid>\n                                    <Grid item xs={5}>\n                                        <FormControl disabled={state.langCode !== state.defaultLang} fullWidth component=\"fieldset\" size={'small'} variant=\"outlined\">\n                                            {\n                                                sectionTypes?.length > 0 && <Select\n                                                    value={sectionType}\n                                                    onChange={handleSectionType}\n                                                >\n                                                    {sectionTypes.map((option, index) => {\n                                                        return (\n                                                            <MenuItem value={option.value} key={index}>\n                                                                {option.label}\n                                                            </MenuItem>\n                                                        )\n                                                    })}\n                                                </Select>\n                                            }\n                                        </FormControl>\n                                    </Grid>\n                                    <Grid item xs={3}>\n                                        <FormControl fullWidth component={'fieldset'}>\n                                            <TextField\n                                                label=\"Section ID *\" value={sectionID}\n                                                disabled={state.langCode !== state.defaultLang}\n                                                onChange={handleSectionID}\n                                                helperText={isNextDisable ? \"Already Exist\" : \"\"}\n                                                error={isNextDisable}\n                                                variant={'outlined'}\n                                                size={'small'}\n                                            />\n                                        </FormControl>\n                                    </Grid>\n                                    <Grid item xs={2}>\n                                        <FormControl fullWidth component={'fieldset'}>\n                                            <TextField label=\"Order\"\n                                                       inputProps={{ min: 1, max: state?.page?.sections?.length + 1 }}\n                                                       onChange={(e) => setSectionOrder(e.target.value)}\n                                                       disabled={state.langCode !== state.defaultLang}\n                                                       value={sectionOrder}\n                                                       size={'small'}\n                                                       variant={'outlined'}\n                                                       type={'number'}\n                                            />\n                                        </FormControl>\n                                    </Grid>\n                                </Grid>\n                                {\n                                    hasSectionTitle &&\n                                    <Grid container={true}>\n                                        <Grid item={true} xs={12}>\n                                            <FroalaEditor tag=\"textarea\"\n                                                          config={config}\n                                                          model={sectionTitle}\n                                                          onModelChange={(model) => setSectionTitle(model)}/>\n                                        </Grid>\n                                    </Grid>\n                                }\n                            </>\n                        )\n                    }\n                    {\n                        state?.page?.sections[index]?.items?.length > 0 &&\n                        state.page.sections[index].items.map((value, i) => {\n                            return (i === activeStep - 1) ? (\n                                <div key={i}>\n                                    <span className={state.langCode !== state.defaultLang ? classes.disableSlider : ''}>\n                                        <CustomSlider\n                                            marks={marks}\n                                            value={consumeWidth}\n                                            onChange={handleComponentWidthChange}\n                                            className={activeStep === steps.length - 1 ? classes.disableSlider : ''}\n                                        />\n                                    </span>\n                                    <FormControl\n                                        component=\"fieldset\"\n                                        size={'small'}\n                                        variant={'outlined'}\n                                        disabled={state.langCode !== state.defaultLang}\n                                    >\n                                        {\n                                            subSectionOptions?.length > 0 && <Select\n                                                value={value.type}\n                                                onChange={(e) => {\n                                                    handleComponentType(e, value);\n                                                }}\n                                            >\n                                                {subSectionOptions.map((option, index) => {\n                                                    return (\n                                                        <MenuItem value={option.value} key={index}>\n                                                            {option.label}\n                                                        </MenuItem>\n                                                    )\n                                                })}\n                                            </Select>\n                                        }\n                                    </FormControl>\n                                    <hr />\n                                    {\n                                        setModalType(value, i)\n                                    }\n                                </div>\n                            ) : null\n                        })\n                    }\n                    <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\n                        <div className={classes.actionButtons}>\n                            {\n                                activeStep !== 0 && (<Button\n                                    onClick={handleBackSection}\n                                    variant=\"contained\"\n                                    size=\"small\"\n                                    aria-label=\"add\"\n                                    className={classes.actionButton}\n                                >\n                                    BACK\n                                </Button>)\n                            }\n                            <Button\n                                onClick={handleNextSection}\n                                variant=\"contained\"\n                                size=\"small\"\n                                color=\"primary\"\n                                aria-label=\"add\"\n                                className={classes.actionButton}\n                                disabled={isNextDisable}\n                            >\n                                {activeStep === steps.length - 1 ? 'SAVE' : 'NEXT'}\n                            </Button>\n                        </div>\n                    </Grid>\n                </Container>\n                {\n                    isAlertDialog && <Alert handleAlert={handleAlertActionChange} alertType={alertType} />\n                }\n            </DialogContent>\n            <DialogActions>\n                <Button\n                    className={classes.actionButton}\n                    onClick={handleCancel}\n                    variant=\"contained\"\n                    size=\"small\"\n                    aria-label=\"add\"\n                >\n                    Cancel\n                    </Button>\n                <Button\n                    onClick={handleApply}\n                    className={classes.actionButton}\n                    variant=\"contained\"\n                    size=\"small\"\n                    aria-label=\"add\"\n                    color=\"primary\"\n                    disabled={!isSave}\n                >\n                    Apply\n                    </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        state: state.formReducer.pageBuilder\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n    setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value)),\n})\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditSection);\n"]},"metadata":{},"sourceType":"module"}