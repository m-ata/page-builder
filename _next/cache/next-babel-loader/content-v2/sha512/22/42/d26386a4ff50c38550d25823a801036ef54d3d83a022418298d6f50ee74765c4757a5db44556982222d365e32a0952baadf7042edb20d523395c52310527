{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/mata/app-cloudweb/components/guest/account/Details/OtherGuests/index.js\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { UseOrest, ViewList } from '@webcms/orest';\nimport { connect, useSelector } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Icon from '@material-ui/core/Icon';\nimport WebCmsGlobal from 'components/webcms-global';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nimport { useSnackbar } from 'notistack';\nimport { OREST_ENDPOINT } from 'model/orest/constants';\nimport { updateState as _updateState } from 'state/actions';\nimport MaterialTable from 'material-table';\nimport { Alert } from '@material-ui/lab';\nimport ClientBase from '../ClientBase';\nimport { clientInitialState } from '../clientInitialState';\nimport LoadingSpinner from '../../../../LoadingSpinner';\n\nvar OtherGuestDetails = function OtherGuestDetails(_ref) {\n  _s();\n\n  var resNameInfo = _ref.resNameInfo,\n      clientInfo = _ref.clientInfo,\n      onClose = _ref.onClose,\n      usePrimaryClientReservation = _ref.usePrimaryClientReservation;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t; //For Other Guest\n\n\n  var _useState = useState(clientInitialState),\n      useClientInitialState = _useState[0],\n      setUseClientInitialState = _useState[1];\n\n  var useClientOrestState = clientInfo || false;\n  var useClientResName = resNameInfo || false;\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      return onClose();\n    },\n    style: {\n      marginLeft: 10,\n      marginBottom: 10\n    },\n    startIcon: __jsx(Icon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 103\n      }\n    }, \"arrow_back\"),\n    variant: \"outlined\",\n    color: \"primary\",\n    disableElevation: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, t('str_back')), __jsx(ClientBase, {\n    isPrimaryGuest: false,\n    useClientInitialState: useClientInitialState,\n    setUseClientInitialState: setUseClientInitialState,\n    useClientOrestState: useClientOrestState,\n    useClientReservation: useClientResName,\n    usePrimaryClientReservation: usePrimaryClientReservation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }));\n};\n\n_s(OtherGuestDetails, \"Rl43MI2GN3NvtLLtFPttG6rs4kE=\", false, function () {\n  return [useTranslation];\n});\n\n_c = OtherGuestDetails;\n\nvar getNumberOfOtherGuest = function getNumberOfOtherGuest(useClientReservation) {\n  return Number(useClientReservation.totalpax + useClientReservation.totalchd - 1);\n};\n\nvar OtherGuests = function OtherGuests(_ref2) {\n  _s2();\n\n  var open = _ref2.open,\n      _onClose = _ref2.onClose,\n      useClientReservation = _ref2.useClientReservation,\n      isCheckInPossible = _ref2.isCheckInPossible,\n      onCallBackCheckInButton = _ref2.onCallBackCheckInButton,\n      otherGuestRequiredFieldCheck = _ref2.otherGuestRequiredFieldCheck,\n      confirmClassName = _ref2.confirmClassName;\n\n  var _useTranslation2 = useTranslation(),\n      t = _useTranslation2.t;\n\n  var _useContext = useContext(WebCmsGlobal),\n      GENERAL_SETTINGS = _useContext.GENERAL_SETTINGS;\n\n  var _useSnackbar = useSnackbar(),\n      enqueueSnackbar = _useSnackbar.enqueueSnackbar;\n\n  var _useState2 = useState(false),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      useResNameList = _useState3[0],\n      setUseResNameList = _useState3[1];\n\n  var _useState4 = useState(false),\n      useResNameInfo = _useState4[0],\n      setUseResNameInfo = _useState4[1];\n\n  var _useState5 = useState([]),\n      useOtherGuestsClientList = _useState5[0],\n      setUseOtherGuestsClientList = _useState5[1];\n\n  var _useState6 = useState(false),\n      useSelectClientIndex = _useState6[0],\n      setUseSelectClientIndex = _useState6[1];\n\n  var useToken = useSelector(function (state) {\n    var _state$orest, _state$orest$currentU, _state$orest$currentU2;\n\n    return (state === null || state === void 0 ? void 0 : (_state$orest = state.orest) === null || _state$orest === void 0 ? void 0 : (_state$orest$currentU = _state$orest.currentUser) === null || _state$orest$currentU === void 0 ? void 0 : (_state$orest$currentU2 = _state$orest$currentU.auth) === null || _state$orest$currentU2 === void 0 ? void 0 : _state$orest$currentU2.access_token) || false;\n  });\n  var numberOfOtherGuest = getNumberOfOtherGuest(useClientReservation);\n  var isRequired = GENERAL_SETTINGS.hotelSettings.ci_chkallcards || false;\n  useEffect(function () {\n    var isEffect = true;\n\n    if (isEffect && open && useClientReservation) {\n      getClientLoader(useClientReservation.reservno);\n    }\n\n    return function () {\n      isEffect = false;\n    };\n  }, [open]);\n\n  var getClientLoader = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(reservno) {\n      var otherGuestsClientIdList, otherGuestsClientList;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setIsLoading(true);\n              _context.next = 3;\n              return getOtherGuestsClientIdList(reservno);\n\n            case 3:\n              otherGuestsClientIdList = _context.sent;\n\n              if (!otherGuestsClientIdList) {\n                _context.next = 12;\n                break;\n              }\n\n              _context.next = 7;\n              return getOtherGuestsClientList(otherGuestsClientIdList);\n\n            case 7:\n              otherGuestsClientList = _context.sent;\n              setUseOtherGuestsClientList(otherGuestsClientList);\n              setIsLoading(false);\n              _context.next = 13;\n              break;\n\n            case 12:\n              setIsLoading(false);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getClientLoader(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var getOtherGuestsClientIdList = function getOtherGuestsClientIdList(reservno) {\n    return ViewList({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.RESNAME,\n      token: useToken,\n      params: {\n        query: \"reservno:\".concat(reservno),\n        allhotels: true\n      }\n    }).then(function (resnameResponse) {\n      var _resnameResponse$data, _resnameResponse$data2;\n\n      if (resnameResponse.status === 200 && resnameResponse !== null && resnameResponse !== void 0 && (_resnameResponse$data = resnameResponse.data) !== null && _resnameResponse$data !== void 0 && _resnameResponse$data.data && (resnameResponse === null || resnameResponse === void 0 ? void 0 : (_resnameResponse$data2 = resnameResponse.data) === null || _resnameResponse$data2 === void 0 ? void 0 : _resnameResponse$data2.data.length) > 0) {\n        setUseResNameList(resnameResponse.data.data);\n        return resnameResponse.data.data.map(function (resname) {\n          return resname.clientid;\n        });\n      } else {\n        return false;\n      }\n    })[\"catch\"](function () {\n      return false;\n    });\n  };\n\n  var getOtherGuestsClientList = function getOtherGuestsClientList(otherGuestsClientIdList) {\n    return UseOrest({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: 'client/view/list/get/id',\n      method: 'POST',\n      token: useToken,\n      params: {\n        allhotels: true\n      },\n      data: otherGuestsClientIdList\n    }).then(function (clientViewListGetIdResponse) {\n      var _clientViewListGetIdR;\n\n      if (clientViewListGetIdResponse.status === 200 && clientViewListGetIdResponse !== null && clientViewListGetIdResponse !== void 0 && (_clientViewListGetIdR = clientViewListGetIdResponse.data) !== null && _clientViewListGetIdR !== void 0 && _clientViewListGetIdR.data) {\n        return clientViewListGetIdResponse.data.data;\n      } else {\n        return false;\n      }\n    })[\"catch\"](function () {\n      return false;\n    });\n  };\n\n  var createClient = function createClient(numberOfClient) {\n    var getList = Array.from({\n      length: numberOfClient\n    }).map(function () {\n      return {\n        firstname: '',\n        lastname: '',\n        hotelrefno: GENERAL_SETTINGS.HOTELREFNO\n      };\n    });\n    return UseOrest({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: 'client/list/ins',\n      method: 'POST',\n      token: useToken,\n      params: {\n        hotelrefno: GENERAL_SETTINGS.HOTELREFNO\n      },\n      data: getList\n    }).then(function (clientListInsResponse) {\n      var _clientListInsRespons;\n\n      if (clientListInsResponse.status === 200 && clientListInsResponse !== null && clientListInsResponse !== void 0 && (_clientListInsRespons = clientListInsResponse.data) !== null && _clientListInsRespons !== void 0 && _clientListInsRespons.data) {\n        return clientListInsResponse.data.data;\n      } else {\n        return false;\n      }\n    })[\"catch\"](function () {\n      return false;\n    });\n  };\n\n  var createClientLoginId = function createClientLoginId(clientId) {\n    return UseOrest({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: 'client/loginid',\n      method: 'PUT',\n      token: useToken,\n      params: {\n        id: clientId,\n        pref: true,\n        datapolicy: true,\n        force: true\n      }\n    }).then(function (clientLoginIdResponse) {\n      var _clientLoginIdRespons;\n\n      return !!(clientLoginIdResponse.status === 200 && clientLoginIdResponse !== null && clientLoginIdResponse !== void 0 && (_clientLoginIdRespons = clientLoginIdResponse.data) !== null && _clientLoginIdRespons !== void 0 && _clientLoginIdRespons.data);\n    })[\"catch\"](function () {\n      return false;\n    });\n  };\n\n  var createClientLoginIdList = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(getClientList) {\n      var _iterator, _step, client;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _iterator = _createForOfIteratorHelper(getClientList);\n              _context2.prev = 1;\n\n              _iterator.s();\n\n            case 3:\n              if ((_step = _iterator.n()).done) {\n                _context2.next = 9;\n                break;\n              }\n\n              client = _step.value;\n              _context2.next = 7;\n              return createClientLoginId(client.id);\n\n            case 7:\n              _context2.next = 3;\n              break;\n\n            case 9:\n              _context2.next = 14;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](1);\n\n              _iterator.e(_context2.t0);\n\n            case 14:\n              _context2.prev = 14;\n\n              _iterator.f();\n\n              return _context2.finish(14);\n\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 11, 14, 17]]);\n    }));\n\n    return function createClientLoginIdList(_x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var createResName = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(getClientList, reservno) {\n      var getList;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              getList = getClientList.map(function (client) {\n                return {\n                  firstname: '',\n                  lastname: '',\n                  clientid: client.id,\n                  reservno: reservno,\n                  hotelrefno: GENERAL_SETTINGS.HOTELREFNO\n                };\n              });\n              _context3.next = 3;\n              return createClientLoginIdList(getClientList);\n\n            case 3:\n              return _context3.abrupt(\"return\", UseOrest({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: '/resname/list/ins',\n                method: 'POST',\n                token: useToken,\n                params: {\n                  hotelrefno: GENERAL_SETTINGS.HOTELREFNO\n                },\n                data: getList\n              }).then(function (resnameListInsResponse) {\n                var _resnameListInsRespon;\n\n                return !!(resnameListInsResponse.status === 200 && resnameListInsResponse !== null && resnameListInsResponse !== void 0 && (_resnameListInsRespon = resnameListInsResponse.data) !== null && _resnameListInsRespon !== void 0 && _resnameListInsRespon.data);\n              })[\"catch\"](function () {\n                return false;\n              }));\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function createResName(_x3, _x4) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var createMissingGuests = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(numberOfOtherGuest) {\n      var getClientList, isCreateResName;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              setIsLoading(true);\n              _context4.next = 3;\n              return createClient(numberOfOtherGuest);\n\n            case 3:\n              getClientList = _context4.sent;\n              _context4.next = 6;\n              return createResName(getClientList, useClientReservation.reservno);\n\n            case 6:\n              isCreateResName = _context4.sent;\n\n              if (!isCreateResName) {\n                _context4.next = 14;\n                break;\n              }\n\n              _context4.next = 10;\n              return getClientLoader(useClientReservation.reservno);\n\n            case 10:\n              enqueueSnackbar(t('str_missingGuestRecordsHaveBeenCreatedYouCanEditNewlyAddedRecords'), {\n                variant: 'success'\n              });\n              setIsLoading(false);\n              _context4.next = 15;\n              break;\n\n            case 14:\n              setIsLoading(false);\n\n            case 15:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function createMissingGuests(_x5) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var otherGuestColumns = [{\n    title: \"\".concat(t('str_firstName'), \" \").concat(isRequired ? \"*\" : ''),\n    field: 'firstname',\n    render: function render(state) {\n      return __jsx(React.Fragment, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 17\n        }\n      }, state.firstname || \"-\");\n    }\n  }, {\n    title: \"\".concat(t('str_lastName'), \" \").concat(isRequired ? \"*\" : ''),\n    field: 'lastname',\n    render: function render(state) {\n      return __jsx(React.Fragment, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 17\n        }\n      }, state.lastname || \"-\");\n    }\n  }, {\n    title: \"\".concat(t('str_birthDate'), \" \").concat(isRequired ? \"*\" : ''),\n    field: 'birthdate',\n    type: 'date',\n    render: function render(state) {\n      return __jsx(React.Fragment, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 17\n        }\n      }, state.birthdate || \"-\");\n    }\n  }, {\n    title: \"\".concat(t('str_nationality'), \" \").concat(isRequired ? \"*\" : ''),\n    field: 'nationdesc',\n    render: function render(state) {\n      return __jsx(React.Fragment, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 17\n        }\n      }, state.nationdesc || \"-\");\n    }\n  }, {\n    title: \"\".concat(t('str_idNumber'), \" \").concat(isRequired ? \"*\" : ''),\n    field: 'idno',\n    render: function render(state) {\n      return __jsx(React.Fragment, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 17\n        }\n      }, state.idno || state.tridno || \"-\");\n    }\n  }];\n\n  var handleOnClose = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              setUseSelectClientIndex(false);\n\n              _onClose();\n\n              return _context5.abrupt(\"return\", true);\n\n            case 3:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function handleOnClose() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  var handleOnCallBackCheckInButton = /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      var getOtherGuestRequiredFieldCheck;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return otherGuestRequiredFieldCheck(numberOfOtherGuest);\n\n            case 2:\n              getOtherGuestRequiredFieldCheck = _context6.sent;\n\n              if (getOtherGuestRequiredFieldCheck) {\n                _context6.next = 5;\n                break;\n              }\n\n              return _context6.abrupt(\"return\", false);\n\n            case 5:\n              onCallBackCheckInButton();\n\n              _onClose();\n\n              return _context6.abrupt(\"return\", true);\n\n            case 8:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function handleOnCallBackCheckInButton() {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n\n  var showCreateMissingGuestsAlert = function showCreateMissingGuestsAlert(useOtherGuestsClientList, numberOfOtherGuest) {\n    return useOtherGuestsClientList && useOtherGuestsClientList.length !== numberOfOtherGuest && useOtherGuestsClientList.length <= numberOfOtherGuest;\n  };\n\n  return __jsx(Dialog, {\n    fullWidth: true,\n    maxWidth: \"md\",\n    open: open,\n    onClose: function onClose() {\n      return _onClose();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 9\n    }\n  }, __jsx(DialogTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 13\n    }\n  }, t('str_otherGuests')), __jsx(DialogContent, {\n    dividers: true,\n    style: {\n      overflowX: 'hidden',\n      overflowY: 'scroll'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 13\n    }\n  }, isLoading ? __jsx(LoadingSpinner, {\n    size: 40,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 21\n    }\n  }) : __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 21\n    }\n  }, useSelectClientIndex !== false && useSelectClientIndex >= 0 ? __jsx(OtherGuestDetails, {\n    usePrimaryClientReservation: useClientReservation,\n    resNameInfo: useResNameInfo,\n    clientInfo: useOtherGuestsClientList[useSelectClientIndex],\n    onClose: /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              setUseSelectClientIndex(false);\n              _context7.next = 3;\n              return getClientLoader(useClientReservation.reservno);\n\n            case 3:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    })),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 29\n    }\n  }) : __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 29\n    }\n  }, showCreateMissingGuestsAlert(useOtherGuestsClientList, numberOfOtherGuest) ? __jsx(Alert, {\n    severity: \"info\",\n    action: __jsx(Button, {\n      onClick: function onClick() {\n        return createMissingGuests(numberOfOtherGuest - useOtherGuestsClientList.length);\n      },\n      variant: \"outlined\",\n      color: \"inherit\",\n      size: \"small\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 68\n      }\n    }, t('str_yes')),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 37\n    }\n  }, t('str_theNumberOfGuestsInTheReservationIsNotEqualToTheNumberOfRegisteredGuestsWouldYouLikeToAddTheMissingRecordsToTheList')) : null, __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 33\n    }\n  }), __jsx(MaterialTable, {\n    title: t('str_guestList'),\n    columns: otherGuestColumns,\n    data: useOtherGuestsClientList,\n    options: {\n      search: false\n    },\n    isLoading: isLoading,\n    actions: [{\n      icon: 'edit',\n      onClick: function onClick(e, rowData) {\n        var getResName = useResNameList.find(function (resname) {\n          return resname.clientid === rowData.id;\n        });\n        setUseResNameInfo(getResName);\n        setUseSelectClientIndex(rowData.tableData.id);\n      }\n    }],\n    localization: {\n      body: {\n        emptyDataSourceMessage: t('str_noRecords'),\n        addTooltip: t('str_add'),\n        deleteTooltip: t('str_delete'),\n        editTooltip: t('str_edit'),\n        filterRow: {\n          filterTooltip: t('str_filter')\n        },\n        editRow: {\n          deleteText: t('str_confirmDeleteRecord'),\n          cancelTooltip: t('str_cancel'),\n          saveTooltip: t('str_save')\n        }\n      },\n      toolbar: {\n        searchTooltip: t('str_search'),\n        searchPlaceholder: t('str_search')\n      },\n      pagination: {\n        labelRowsSelect: t('str_line'),\n        labelDisplayedRows: t('str_labelDisplayedRows'),\n        firstTooltip: t('str_firstPage'),\n        previousTooltip: t('str_previousPage'),\n        nextTooltip: t('str_nextPage'),\n        lastTooltip: t('str_lastPage')\n      },\n      header: {\n        actions: ''\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 33\n    }\n  })))), __jsx(DialogActions, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    disabled: isLoading,\n    color: \"primary\",\n    onClick: function onClick() {\n      return handleOnClose();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 17\n    }\n  }, t('str_close')), isCheckInPossible ? __jsx(Button, {\n    disabled: isLoading,\n    className: confirmClassName,\n    onClick: function onClick() {\n      return handleOnCallBackCheckInButton();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 21\n    }\n  }, t('str_proceedToCheckin')) : null));\n};\n\n_s2(OtherGuests, \"JjPAlDJwo4aiwNc/cgwOXQ7N/dY=\", false, function () {\n  return [useTranslation, useSnackbar, useSelector];\n});\n\n_c2 = OtherGuests;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    state: state.formReducer.guest\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateState: function updateState(stateType, stateName, value) {\n      return dispatch(_updateState(stateType, stateName, value));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OtherGuests);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"OtherGuestDetails\");\n$RefreshReg$(_c2, \"OtherGuests\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/guest/account/Details/OtherGuests/index.js"],"names":["React","useContext","useEffect","useState","UseOrest","ViewList","connect","useSelector","Button","Dialog","DialogActions","DialogContent","DialogTitle","Icon","WebCmsGlobal","useTranslation","useSnackbar","OREST_ENDPOINT","updateState","MaterialTable","Alert","ClientBase","clientInitialState","LoadingSpinner","OtherGuestDetails","resNameInfo","clientInfo","onClose","usePrimaryClientReservation","t","useClientInitialState","setUseClientInitialState","useClientOrestState","useClientResName","marginLeft","marginBottom","getNumberOfOtherGuest","useClientReservation","Number","totalpax","totalchd","OtherGuests","open","isCheckInPossible","onCallBackCheckInButton","otherGuestRequiredFieldCheck","confirmClassName","GENERAL_SETTINGS","enqueueSnackbar","isLoading","setIsLoading","useResNameList","setUseResNameList","useResNameInfo","setUseResNameInfo","useOtherGuestsClientList","setUseOtherGuestsClientList","useSelectClientIndex","setUseSelectClientIndex","useToken","state","orest","currentUser","auth","access_token","numberOfOtherGuest","isRequired","hotelSettings","ci_chkallcards","isEffect","getClientLoader","reservno","getOtherGuestsClientIdList","otherGuestsClientIdList","getOtherGuestsClientList","otherGuestsClientList","apiUrl","OREST_URL","endpoint","RESNAME","token","params","query","allhotels","then","resnameResponse","status","data","length","map","resname","clientid","method","clientViewListGetIdResponse","createClient","numberOfClient","getList","Array","from","firstname","lastname","hotelrefno","HOTELREFNO","clientListInsResponse","createClientLoginId","clientId","id","pref","datapolicy","force","clientLoginIdResponse","createClientLoginIdList","getClientList","client","createResName","resnameListInsResponse","createMissingGuests","isCreateResName","variant","otherGuestColumns","title","field","render","type","birthdate","nationdesc","idno","tridno","handleOnClose","handleOnCallBackCheckInButton","getOtherGuestRequiredFieldCheck","showCreateMissingGuestsAlert","overflowX","overflowY","search","icon","onClick","e","rowData","getResName","find","tableData","body","emptyDataSourceMessage","addTooltip","deleteTooltip","editTooltip","filterRow","filterTooltip","editRow","deleteText","cancelTooltip","saveTooltip","toolbar","searchTooltip","searchPlaceholder","pagination","labelRowsSelect","labelDisplayedRows","firstTooltip","previousTooltip","nextTooltip","lastTooltip","header","actions","mapStateToProps","formReducer","guest","mapDispatchToProps","dispatch","stateType","stateName","value"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport { UseOrest, ViewList } from '@webcms/orest'\nimport { connect, useSelector } from 'react-redux'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Icon from '@material-ui/core/Icon'\nimport WebCmsGlobal from 'components/webcms-global'\nimport useTranslation from 'lib/translations/hooks/useTranslation'\nimport { useSnackbar } from 'notistack'\nimport { OREST_ENDPOINT } from 'model/orest/constants'\nimport { updateState } from 'state/actions'\nimport MaterialTable from 'material-table'\nimport { Alert } from '@material-ui/lab'\nimport ClientBase from '../ClientBase'\nimport { clientInitialState } from '../clientInitialState'\nimport LoadingSpinner from '../../../../LoadingSpinner'\n\nconst OtherGuestDetails = ({ resNameInfo, clientInfo, onClose, usePrimaryClientReservation }) => {\n    const {t} = useTranslation()\n\n    //For Other Guest\n    const [useClientInitialState, setUseClientInitialState] = useState(clientInitialState)\n    const useClientOrestState = clientInfo || false\n    const useClientResName = resNameInfo || false\n\n    return (\n        <React.Fragment>\n            <Button onClick={() => onClose()} style={{ marginLeft: 10, marginBottom: 10 }} startIcon={<Icon>arrow_back</Icon>} variant='outlined' color='primary' disableElevation>\n                {t('str_back')}\n            </Button>\n            <ClientBase\n                isPrimaryGuest={false}\n                useClientInitialState={useClientInitialState}\n                setUseClientInitialState={setUseClientInitialState}\n                useClientOrestState={useClientOrestState}\n                useClientReservation={useClientResName}\n                usePrimaryClientReservation={usePrimaryClientReservation}\n            />\n        </React.Fragment>\n    )\n}\n\nconst getNumberOfOtherGuest = (useClientReservation) => {\n    return Number((useClientReservation.totalpax + useClientReservation.totalchd) - 1)\n}\n\nconst OtherGuests = ({ open, onClose, useClientReservation, isCheckInPossible, onCallBackCheckInButton, otherGuestRequiredFieldCheck, confirmClassName }) => {\n    const { t } = useTranslation()\n    const { GENERAL_SETTINGS } = useContext(WebCmsGlobal)\n    const { enqueueSnackbar } = useSnackbar()\n    const [isLoading, setIsLoading] = useState(false)\n    const [useResNameList, setUseResNameList] = useState(false)\n    const [useResNameInfo, setUseResNameInfo] = useState(false)\n    const [useOtherGuestsClientList, setUseOtherGuestsClientList] = useState([])\n    const [useSelectClientIndex, setUseSelectClientIndex] = useState(false)\n    const useToken = useSelector((state) => state?.orest?.currentUser?.auth?.access_token || false)\n    const numberOfOtherGuest = getNumberOfOtherGuest(useClientReservation)\n    const isRequired = GENERAL_SETTINGS.hotelSettings.ci_chkallcards || false\n\n    useEffect(() => {\n        let isEffect = true\n\n        if (isEffect && open && useClientReservation) {\n            getClientLoader(useClientReservation.reservno)\n        }\n\n        return () => {\n            isEffect = false\n        }\n    }, [open])\n\n    const getClientLoader = async (reservno) => {\n        setIsLoading(true)\n        const otherGuestsClientIdList = await getOtherGuestsClientIdList(reservno)\n        if (otherGuestsClientIdList) {\n            const otherGuestsClientList = await getOtherGuestsClientList(otherGuestsClientIdList)\n            setUseOtherGuestsClientList(otherGuestsClientList)\n            setIsLoading(false)\n        } else {\n            setIsLoading(false)\n        }\n    }\n\n    const getOtherGuestsClientIdList = (reservno) => {\n        return ViewList({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.RESNAME,\n            token: useToken,\n            params: {\n                query: `reservno:${reservno}`,\n                allhotels: true,\n            },\n        }).then((resnameResponse) => {\n            if (resnameResponse.status === 200 && resnameResponse?.data?.data && resnameResponse?.data?.data.length > 0) {\n                setUseResNameList(resnameResponse.data.data)\n                return resnameResponse.data.data.map((resname) => resname.clientid)\n            } else {\n                return false\n            }\n        }).catch(() => {\n            return false\n        })\n    }\n\n    const getOtherGuestsClientList = (otherGuestsClientIdList) => {\n        return UseOrest({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: 'client/view/list/get/id',\n            method: 'POST',\n            token: useToken,\n            params: {\n                allhotels: true,\n            },\n            data: otherGuestsClientIdList,\n        }).then((clientViewListGetIdResponse) => {\n            if (clientViewListGetIdResponse.status === 200 && clientViewListGetIdResponse?.data?.data) {\n                return clientViewListGetIdResponse.data.data\n            } else {\n                return false\n            }\n        }).catch(() => {\n            return false\n        })\n    }\n\n    const createClient = (numberOfClient) => {\n        const getList = Array.from({ length: numberOfClient }).map(() => {\n            return {\n                firstname: '',\n                lastname: '',\n                hotelrefno: GENERAL_SETTINGS.HOTELREFNO,\n            }\n        })\n\n        return UseOrest({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: 'client/list/ins',\n            method: 'POST',\n            token: useToken,\n            params: {\n                hotelrefno: GENERAL_SETTINGS.HOTELREFNO\n            },\n            data: getList,\n        }).then((clientListInsResponse) => {\n            if (clientListInsResponse.status === 200 && clientListInsResponse?.data?.data) {\n                return clientListInsResponse.data.data\n            } else {\n                return false\n            }\n        }).catch(() => {\n            return false\n        })\n    }\n\n    const createClientLoginId = (clientId) => {\n        return UseOrest({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: 'client/loginid',\n            method: 'PUT',\n            token: useToken,\n            params: {\n                id: clientId,\n                pref: true,\n                datapolicy: true,\n                force: true\n            }\n        }).then((clientLoginIdResponse) => {\n            return !!(clientLoginIdResponse.status === 200 && clientLoginIdResponse?.data?.data);\n        }).catch(() => {\n            return false\n        })\n    }\n\n    const createClientLoginIdList = async (getClientList) => {\n        for (let client of getClientList) {\n            await createClientLoginId(client.id)\n        }\n    }\n\n    const createResName = async (getClientList, reservno) => {\n        const getList = getClientList.map((client) => {\n            return {\n                firstname: '',\n                lastname: '',\n                clientid: client.id,\n                reservno: reservno,\n                hotelrefno: GENERAL_SETTINGS.HOTELREFNO,\n            }\n        })\n\n        await createClientLoginIdList(getClientList)\n\n        return UseOrest({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: '/resname/list/ins',\n            method: 'POST',\n            token: useToken,\n            params: {\n                hotelrefno: GENERAL_SETTINGS.HOTELREFNO\n            },\n            data: getList,\n        }).then((resnameListInsResponse) => {\n            return !!(resnameListInsResponse.status === 200 && resnameListInsResponse?.data?.data)\n        }).catch(() => {\n            return false\n        })\n    }\n\n    const createMissingGuests = async (numberOfOtherGuest) => {\n        setIsLoading(true)\n        const getClientList = await createClient(numberOfOtherGuest)\n        const isCreateResName = await createResName(getClientList, useClientReservation.reservno)\n\n        if(isCreateResName){\n            await getClientLoader(useClientReservation.reservno)\n            enqueueSnackbar(t('str_missingGuestRecordsHaveBeenCreatedYouCanEditNewlyAddedRecords'), { variant: 'success' });\n            setIsLoading(false)\n        }else {\n            setIsLoading(false)\n        }\n    }\n\n    const otherGuestColumns = [\n        {\n            title: `${t('str_firstName')} ${isRequired ? `*` : ''}`,\n            field: 'firstname',\n            render: (state) => (\n                <React.Fragment>{state.firstname || \"-\"}</React.Fragment>\n            ),\n        },\n        {\n            title: `${t('str_lastName')} ${isRequired ? `*` : ''}`,\n            field: 'lastname',\n            render: (state) => (\n                <React.Fragment>{state.lastname || \"-\"}</React.Fragment>\n            ),\n        },\n        {\n            title: `${t('str_birthDate')} ${isRequired ? `*` : ''}`,\n            field: 'birthdate',\n            type: 'date',\n            render: (state) => (\n                <React.Fragment>{state.birthdate || \"-\"}</React.Fragment>\n            ),\n        },\n        {\n            title: `${t('str_nationality')} ${isRequired ? `*` : ''}`,\n            field: 'nationdesc',\n            render: (state) => (\n                <React.Fragment>{state.nationdesc || \"-\"}</React.Fragment>\n            ),\n        },\n        {\n            title: `${t('str_idNumber')} ${isRequired ? `*` : ''}`,\n            field: 'idno',\n            render: (state) => (\n                <React.Fragment>{state.idno || state.tridno || \"-\"}</React.Fragment>\n            ),\n        },\n    ]\n\n    const handleOnClose = async () =>{\n        setUseSelectClientIndex(false)\n        onClose()\n        return true\n    }\n\n    const handleOnCallBackCheckInButton = async () =>{\n        const getOtherGuestRequiredFieldCheck = await otherGuestRequiredFieldCheck(numberOfOtherGuest)\n        if (!getOtherGuestRequiredFieldCheck) {\n            return false\n        }\n\n        onCallBackCheckInButton()\n        onClose()\n        return true\n    }\n\n    const showCreateMissingGuestsAlert = (useOtherGuestsClientList, numberOfOtherGuest) => {\n        return useOtherGuestsClientList && useOtherGuestsClientList.length !== numberOfOtherGuest && useOtherGuestsClientList.length <= numberOfOtherGuest\n    }\n\n    return (\n        <Dialog fullWidth maxWidth='md' open={open} onClose={() => onClose()}>\n            <DialogTitle>{t('str_otherGuests')}</DialogTitle>\n            <DialogContent dividers style={{ overflowX: 'hidden', overflowY: 'scroll' }}>\n                {isLoading ? (\n                    <LoadingSpinner size={40} />\n                ): (\n                    <React.Fragment>\n                        {useSelectClientIndex !== false && useSelectClientIndex >= 0 ? (\n                            <OtherGuestDetails\n                                usePrimaryClientReservation={useClientReservation}\n                                resNameInfo={useResNameInfo}\n                                clientInfo={useOtherGuestsClientList[useSelectClientIndex]}\n                                onClose={async () => {\n                                    setUseSelectClientIndex(false)\n                                    await getClientLoader(useClientReservation.reservno)\n                                }}\n                            />\n                        ) : (\n                            <React.Fragment>\n                                {showCreateMissingGuestsAlert(useOtherGuestsClientList, numberOfOtherGuest) ? (\n                                    <Alert severity=\"info\" action={<Button onClick={() => createMissingGuests(numberOfOtherGuest - useOtherGuestsClientList.length)} variant=\"outlined\" color=\"inherit\" size=\"small\">{t('str_yes')}</Button>}>\n                                        {t('str_theNumberOfGuestsInTheReservationIsNotEqualToTheNumberOfRegisteredGuestsWouldYouLikeToAddTheMissingRecordsToTheList')}\n                                    </Alert>\n                                ): null}\n                                <br />\n                                <MaterialTable\n                                    title={t('str_guestList')}\n                                    columns={otherGuestColumns}\n                                    data={useOtherGuestsClientList}\n                                    options={{ search: false }}\n                                    isLoading={isLoading}\n                                    actions={[\n                                        {\n                                            icon: 'edit',\n                                            onClick: (e, rowData) => {\n                                                const getResName = useResNameList.find(resname => resname.clientid === rowData.id)\n                                                setUseResNameInfo(getResName)\n                                                setUseSelectClientIndex(rowData.tableData.id)\n                                            },\n                                        },\n                                    ]}\n                                    localization={{\n                                        body: {\n                                            emptyDataSourceMessage: t('str_noRecords'),\n                                            addTooltip: t('str_add'),\n                                            deleteTooltip: t('str_delete'),\n                                            editTooltip: t('str_edit'),\n                                            filterRow: {\n                                                filterTooltip: t('str_filter'),\n                                            },\n                                            editRow: {\n                                                deleteText: t('str_confirmDeleteRecord'),\n                                                cancelTooltip: t('str_cancel'),\n                                                saveTooltip: t('str_save'),\n                                            },\n                                        },\n                                        toolbar: {\n                                            searchTooltip: t('str_search'),\n                                            searchPlaceholder: t('str_search'),\n                                        },\n                                        pagination: {\n                                            labelRowsSelect: t('str_line'),\n                                            labelDisplayedRows: t('str_labelDisplayedRows'),\n                                            firstTooltip: t('str_firstPage'),\n                                            previousTooltip: t('str_previousPage'),\n                                            nextTooltip: t('str_nextPage'),\n                                            lastTooltip: t('str_lastPage'),\n                                        },\n                                        header: {\n                                            actions: '',\n                                        },\n                                    }}\n                                />\n                            </React.Fragment>\n                          )}\n                    </React.Fragment>\n                )}\n            </DialogContent>\n            <DialogActions>\n                <Button\n                    disabled={isLoading}\n                    color='primary'\n                    onClick={() => handleOnClose()}\n                >\n                    {t('str_close')}\n                </Button>\n                {isCheckInPossible ?\n                    <Button\n                        disabled={isLoading}\n                        className={confirmClassName}\n                        onClick={() => handleOnCallBackCheckInButton()}\n                    >\n                        {t('str_proceedToCheckin')}\n                    </Button>: null\n                }\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        state: state.formReducer.guest,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    updateState: (stateType, stateName, value) => dispatch(updateState(stateType, stateName, value)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OtherGuests)"]},"metadata":{},"sourceType":"module"}