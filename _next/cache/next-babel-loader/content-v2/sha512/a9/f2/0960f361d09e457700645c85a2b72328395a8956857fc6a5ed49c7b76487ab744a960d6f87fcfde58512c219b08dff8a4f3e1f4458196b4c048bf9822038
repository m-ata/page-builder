{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/survey/surveytree/options/Score.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Rating from '@material-ui/lab/Rating';\nimport useSurveyAction from '../../../../model/survey/useSurveyAction';\nimport { useSelector } from 'react-redux';\nimport SentimentVeryDissatisfiedIcon from '@material-ui/icons/SentimentVeryDissatisfied';\nimport SentimentDissatisfiedIcon from '@material-ui/icons/SentimentDissatisfied';\nimport SentimentSatisfiedIcon from '@material-ui/icons/SentimentSatisfied';\nimport SentimentSatisfiedAltIcon from '@material-ui/icons/SentimentSatisfiedAltOutlined';\nimport SentimentVerySatisfiedIcon from '@material-ui/icons/SentimentVerySatisfied';\nimport { makeStyles } from '@material-ui/core/styles';\nimport styles from '../../style/SurveyOptions.style';\nimport SurveyTooltip from 'components/survey/helper/SurveyTooltip';\nconst useStyles = makeStyles(styles);\n\nfunction IconContainer(props) {\n  const {\n    value,\n    classes\n  } = props,\n        other = _objectWithoutProperties(props, [\"value\", \"classes\"]);\n\n  const customIcons = {\n    1: {\n      icon: __jsx(SentimentVeryDissatisfiedIcon, {\n        className: classes.scoreIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 19\n        }\n      }),\n      label: 'Very Dissatisfied'\n    },\n    2: {\n      icon: __jsx(SentimentDissatisfiedIcon, {\n        className: classes.scoreIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 19\n        }\n      }),\n      label: 'Dissatisfied'\n    },\n    3: {\n      icon: __jsx(SentimentSatisfiedIcon, {\n        className: classes.scoreIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 19\n        }\n      }),\n      label: 'Neutral'\n    },\n    4: {\n      icon: __jsx(SentimentSatisfiedAltIcon, {\n        className: classes.scoreIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 19\n        }\n      }),\n      label: 'Satisfied'\n    },\n    5: {\n      icon: __jsx(SentimentVerySatisfiedIcon, {\n        className: classes.scoreIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 19\n        }\n      }),\n      label: 'Very Satisfied'\n    }\n  };\n  return __jsx(\"span\", _extends({}, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }\n  }), customIcons[value].icon);\n}\n\nIconContainer.propTypes = {\n  value: PropTypes.number.isRequired\n};\nexport default function ScoreOption(props) {\n  const {\n    option,\n    optionTyp\n  } = props; //style\n\n  const classes = useStyles(); //redux\n\n  const {\n    setSurveyAnswerMulti,\n    deleteSurveyAnswer\n  } = useSurveyAction();\n  const surveyTrans = useSelector(state => state.survey.trans);\n  const surveyIsValid = useSelector(state => state.survey.isValid);\n  const oldAnswer = useSelector(state => state.survey.answers[surveyTrans] && state.survey.answers[surveyTrans][option.parentid] && state.survey.answers[surveyTrans][option.parentid][option.id]); //state\n\n  const {\n    0: optionValue,\n    1: setOptionValue\n  } = useState(oldAnswer ? oldAnswer.valuefloat : 0);\n\n  const handleChangeOption = (event, value, option) => {\n    setOptionValue(value);\n\n    if (value && value !== '' && value !== 0) {\n      setSurveyAnswerMulti(surveyTrans, option.parentid, option.id, {\n        typ: optionTyp,\n        parentid: option.parentid,\n        valuefloat: value\n      });\n    } else {\n      deleteSurveyAnswer(surveyTrans, option.parentid, option.id);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: classes.optionContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, __jsx(SurveyTooltip, {\n    title: option && option.note || '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, __jsx(Rating, {\n    onChange: (event, newValue) => handleChangeOption(event, newValue, option),\n    value: optionValue,\n    name: String(option.id),\n    disabled: surveyIsValid,\n    IconContainerComponent: props => IconContainer(_objectSpread(_objectSpread({}, props), {}, {\n      classes\n    })),\n    style: {\n      flexWrap: 'wrap'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/survey/surveytree/options/Score.js"],"names":["React","useState","PropTypes","Rating","useSurveyAction","useSelector","SentimentVeryDissatisfiedIcon","SentimentDissatisfiedIcon","SentimentSatisfiedIcon","SentimentSatisfiedAltIcon","SentimentVerySatisfiedIcon","makeStyles","styles","SurveyTooltip","useStyles","IconContainer","props","value","classes","other","customIcons","icon","scoreIcon","label","propTypes","number","isRequired","ScoreOption","option","optionTyp","setSurveyAnswerMulti","deleteSurveyAnswer","surveyTrans","state","survey","trans","surveyIsValid","isValid","oldAnswer","answers","parentid","id","optionValue","setOptionValue","valuefloat","handleChangeOption","event","typ","optionContainer","note","newValue","String","flexWrap"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport Rating from '@material-ui/lab/Rating'\nimport useSurveyAction from '../../../../model/survey/useSurveyAction'\nimport { useSelector } from 'react-redux'\nimport SentimentVeryDissatisfiedIcon from '@material-ui/icons/SentimentVeryDissatisfied'\nimport SentimentDissatisfiedIcon from '@material-ui/icons/SentimentDissatisfied'\nimport SentimentSatisfiedIcon from '@material-ui/icons/SentimentSatisfied'\nimport SentimentSatisfiedAltIcon from '@material-ui/icons/SentimentSatisfiedAltOutlined'\nimport SentimentVerySatisfiedIcon from '@material-ui/icons/SentimentVerySatisfied'\nimport { makeStyles } from '@material-ui/core/styles'\nimport styles from '../../style/SurveyOptions.style'\nimport SurveyTooltip from 'components/survey/helper/SurveyTooltip'\n\nconst useStyles = makeStyles(styles)\n\nfunction IconContainer(props) {\n    const { value, classes, ...other } = props\n\n    const customIcons = {\n        1: {\n            icon: <SentimentVeryDissatisfiedIcon className={classes.scoreIcon}/>,\n            label: 'Very Dissatisfied',\n        },\n        2: {\n            icon: <SentimentDissatisfiedIcon className={classes.scoreIcon}/>,\n            label: 'Dissatisfied',\n        },\n        3: {\n            icon: <SentimentSatisfiedIcon className={classes.scoreIcon}/>,\n            label: 'Neutral',\n        },\n        4: {\n            icon: <SentimentSatisfiedAltIcon className={classes.scoreIcon}/>,\n            label: 'Satisfied',\n        },\n        5: {\n            icon: <SentimentVerySatisfiedIcon className={classes.scoreIcon}/>,\n            label: 'Very Satisfied',\n        },\n    }\n\n    return <span {...other}>{customIcons[value].icon}</span>\n}\n\nIconContainer.propTypes = {\n    value: PropTypes.number.isRequired,\n}\n\nexport default function ScoreOption(props) {\n    const { option, optionTyp } = props\n\n    //style\n    const classes = useStyles()\n\n    //redux\n    const { setSurveyAnswerMulti, deleteSurveyAnswer } = useSurveyAction()\n    const surveyTrans = useSelector((state) => state.survey.trans)\n    const surveyIsValid = useSelector((state) => state.survey.isValid)\n    const oldAnswer = useSelector(\n        (state) =>\n            state.survey.answers[surveyTrans] &&\n            state.survey.answers[surveyTrans][option.parentid] &&\n            state.survey.answers[surveyTrans][option.parentid][option.id],\n    )\n\n    //state\n    const [optionValue, setOptionValue] = useState(oldAnswer ? oldAnswer.valuefloat : 0)\n\n    const handleChangeOption = (event, value, option) => {\n        setOptionValue(value)\n\n        if (value && value !== '' && value !== 0) {\n            setSurveyAnswerMulti(surveyTrans, option.parentid, option.id, {\n                typ: optionTyp,\n                parentid: option.parentid,\n                valuefloat: value,\n            })\n        } else {\n            deleteSurveyAnswer(surveyTrans, option.parentid, option.id)\n        }\n    }\n\n    return (\n        <div className={classes.optionContainer}>\n            <SurveyTooltip title={option && option.note || ''}>\n                <Rating\n                    onChange={(event, newValue) => handleChangeOption(event, newValue, option)}\n                    value={optionValue}\n                    name={String(option.id)}\n                    disabled={surveyIsValid}\n                    IconContainerComponent={(props) => IconContainer({ ...props, classes })}\n                    style={{ flexWrap: 'wrap' }}\n                />\n            </SurveyTooltip>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}