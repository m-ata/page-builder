{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport WebSiteHeader from 'components/website/header/WebsiteHeader';\nimport WebsiteFooter from 'components/website/footer/WebsiteFooter';\nimport WebsitePage from 'components/website/pages/WebPage';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ScrollToTop from 'react-scroll-to-top';\nimport { connect, useSelector } from 'react-redux';\nimport { updateState } from 'state/actions';\nimport { toast } from 'react-toastify';\nimport NextNProgress from 'nextjs-progressbar';\nimport { useRouter } from 'next/router';\n\nconst Index = props => {\n  var _websiteData$assets, _websiteData$assets$c, _websiteData$assets$c2, _websiteData$assets2;\n\n  const {\n    websiteData,\n    updateState\n  } = props;\n  const website = useSelector(state => {\n    var _state$formReducer;\n\n    return state === null || state === void 0 ? void 0 : (_state$formReducer = state.formReducer) === null || _state$formReducer === void 0 ? void 0 : _state$formReducer.website;\n  });\n  const router = useRouter();\n  useEffect(() => {\n    var _websiteData$default, _websiteData$default2, _websiteData$default3, _websiteData$langsFil, _websiteData$langsFil2, _websiteData$langsFil3;\n\n    console.log('website data ==> ', websiteData);\n\n    if (websiteData !== null && websiteData !== void 0 && websiteData.defaultLanguage) {\n      var _websiteData$defaultL, _websiteData$defaultL2;\n\n      let defaultLangCode = websiteData === null || websiteData === void 0 ? void 0 : (_websiteData$defaultL = websiteData.defaultLanguage) === null || _websiteData$defaultL === void 0 ? void 0 : (_websiteData$defaultL2 = _websiteData$defaultL.code) === null || _websiteData$defaultL2 === void 0 ? void 0 : _websiteData$defaultL2.toLowerCase(),\n          selectedLangCode = false,\n          queryLangCode = router.query.lang;\n\n      if (websiteData !== null && websiteData !== void 0 && websiteData.languages && (websiteData === null || websiteData === void 0 ? void 0 : websiteData.languages.length) > 0 && queryLangCode) {\n        var _websiteData$language;\n\n        selectedLangCode = (websiteData === null || websiteData === void 0 ? void 0 : (_websiteData$language = websiteData.languages.find(langItem => langItem.shortcode === router.query.lang)) === null || _websiteData$language === void 0 ? void 0 : _websiteData$language.code.toLowerCase()) || false;\n      }\n\n      if (!selectedLangCode) {\n        selectedLangCode = defaultLangCode;\n      }\n\n      updateState('website', 'defaultLangCode', defaultLangCode);\n      updateState('website', 'selectedLangCode', selectedLangCode);\n    } else {\n      toast.error('Default language not set yet', {\n        position: toast.POSITION.TOP_RIGHT\n      });\n    }\n\n    updateState('website', 'defaultHeader', websiteData === null || websiteData === void 0 ? void 0 : (_websiteData$default = websiteData.default) === null || _websiteData$default === void 0 ? void 0 : _websiteData$default.header);\n    updateState('website', 'defaultFooter', websiteData === null || websiteData === void 0 ? void 0 : (_websiteData$default2 = websiteData.default) === null || _websiteData$default2 === void 0 ? void 0 : _websiteData$default2.footer);\n    updateState('website', 'languages', websiteData === null || websiteData === void 0 ? void 0 : websiteData.languages);\n    updateState('website', 'defaultPages', websiteData === null || websiteData === void 0 ? void 0 : (_websiteData$default3 = websiteData.default) === null || _websiteData$default3 === void 0 ? void 0 : _websiteData$default3.pages);\n    updateState('website', 'otherLangHeader', websiteData === null || websiteData === void 0 ? void 0 : (_websiteData$langsFil = websiteData.langsFile) === null || _websiteData$langsFil === void 0 ? void 0 : _websiteData$langsFil.header);\n    updateState('website', 'otherLangPages', websiteData === null || websiteData === void 0 ? void 0 : (_websiteData$langsFil2 = websiteData.langsFile) === null || _websiteData$langsFil2 === void 0 ? void 0 : _websiteData$langsFil2.pages);\n    updateState('website', 'otherLangFooter', websiteData === null || websiteData === void 0 ? void 0 : (_websiteData$langsFil3 = websiteData.langsFile) === null || _websiteData$langsFil3 === void 0 ? void 0 : _websiteData$langsFil3.footer);\n    updateState('website', 'assets', websiteData === null || websiteData === void 0 ? void 0 : websiteData.assets);\n    updateState('website', 'ccTel', websiteData === null || websiteData === void 0 ? void 0 : websiteData.ccTel);\n  }, [websiteData]);\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, __jsx(NextNProgress, {\n    height: 4,\n    color: websiteData !== null && websiteData !== void 0 && (_websiteData$assets = websiteData.assets) !== null && _websiteData$assets !== void 0 && (_websiteData$assets$c = _websiteData$assets.colors) !== null && _websiteData$assets$c !== void 0 && (_websiteData$assets$c2 = _websiteData$assets$c.primary) !== null && _websiteData$assets$c2 !== void 0 && _websiteData$assets$c2.light ? (_websiteData$assets2 = websiteData.assets) === null || _websiteData$assets2 === void 0 ? void 0 : _websiteData$assets2.colors.primary.light : '#FFFFFF',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    style: {\n      overflowX: 'hidden',\n      overflowY: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, (website === null || website === void 0 ? void 0 : website.defaultHeader) && __jsx(WebSiteHeader, {\n    assets: websiteData === null || websiteData === void 0 ? void 0 : websiteData.assets,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 44\n    }\n  }), __jsx(\"div\", {\n    style: {\n      minHeight: 800\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, __jsx(WebsitePage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  })), __jsx(WebsiteFooter, {\n    assets: websiteData === null || websiteData === void 0 ? void 0 : websiteData.assets,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 18\n    }\n  })), __jsx(ScrollToTop, {\n    smooth: true,\n    component: __jsx(ArrowUpwardIcon, {\n      style: {\n        fontSize: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 44\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport const getServerSideProps = async ctx => {\n  var _websiteData$default4;\n\n  const {\n    req,\n    res\n  } = ctx;\n  const websiteData = await res.REDIS_WEBCMS_DATA;\n\n  if (websiteData !== null && websiteData !== void 0 && (_websiteData$default4 = websiteData.default) !== null && _websiteData$default4 !== void 0 && _websiteData$default4.pages && Object.keys(websiteData.default.pages).length) {\n    return {\n      props: {\n        websiteData: JSON.parse(JSON.stringify(websiteData))\n      }\n    };\n  } else if (req.headers.host === 'docs.hotech.systems') {\n    res.setHeader('location', '/userdoc');\n    res.statusCode = 302;\n    res.end();\n    return {\n      props: {}\n    };\n  } else if (req.headers.host === 'portal.hotech.systems') {\n    res.setHeader('location', '/hup');\n    res.statusCode = 302;\n    res.end();\n    return {\n      props: {}\n    };\n  } else {\n    res.setHeader('location', '/guest');\n    res.statusCode = 302;\n    res.end();\n    return {\n      props: {}\n    };\n  }\n};\n\nconst mapDispatchToProps = dispatch => ({\n  updateState: (stateType, stateName, value) => dispatch(updateState(stateType, stateName, value))\n});\n\nexport default connect(null, mapDispatchToProps)(Index);","map":{"version":3,"sources":["/Users/mata/app-cloudweb/pages/index.js"],"names":["React","useEffect","WebSiteHeader","WebsiteFooter","WebsitePage","ArrowUpwardIcon","ScrollToTop","connect","useSelector","updateState","toast","NextNProgress","useRouter","Index","props","websiteData","website","state","formReducer","router","console","log","defaultLanguage","defaultLangCode","code","toLowerCase","selectedLangCode","queryLangCode","query","lang","languages","length","find","langItem","shortcode","error","position","POSITION","TOP_RIGHT","default","header","footer","pages","langsFile","assets","ccTel","colors","primary","light","overflowX","overflowY","defaultHeader","minHeight","fontSize","getServerSideProps","ctx","req","res","REDIS_WEBCMS_DATA","Object","keys","JSON","parse","stringify","headers","host","setHeader","statusCode","end","mapDispatchToProps","dispatch","stateType","stateName","value"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport WebSiteHeader from 'components/website/header/WebsiteHeader'\nimport WebsiteFooter from 'components/website/footer/WebsiteFooter'\nimport WebsitePage from 'components/website/pages/WebPage'\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\nimport ScrollToTop from 'react-scroll-to-top'\nimport { connect, useSelector } from 'react-redux'\nimport { updateState } from 'state/actions'\nimport { toast } from 'react-toastify'\nimport NextNProgress from 'nextjs-progressbar'\nimport { useRouter } from 'next/router'\n\nconst Index = (props) => {\n    const { websiteData, updateState } = props\n    const website = useSelector(state => state?.formReducer?.website);\n    const router = useRouter()\n\n    useEffect(() => {\n        console.log('website data ==> ', websiteData)\n        if (websiteData?.defaultLanguage) {\n            let defaultLangCode = websiteData?.defaultLanguage?.code?.toLowerCase(),\n                selectedLangCode = false,\n                queryLangCode = router.query.lang\n\n            if (websiteData?.languages && websiteData?.languages.length > 0 && queryLangCode) {\n                selectedLangCode = websiteData?.languages.find(langItem => langItem.shortcode === router.query.lang)?.code.toLowerCase() || false\n            }\n\n            if (!selectedLangCode) {\n                selectedLangCode = defaultLangCode\n            }\n\n            updateState('website', 'defaultLangCode', defaultLangCode)\n            updateState('website', 'selectedLangCode', selectedLangCode)\n        } else {\n            toast.error('Default language not set yet', { position: toast.POSITION.TOP_RIGHT })\n        }\n        updateState('website', 'defaultHeader', websiteData?.default?.header)\n        updateState('website', 'defaultFooter', websiteData?.default?.footer)\n        updateState('website', 'languages', websiteData?.languages)\n        updateState('website', 'defaultPages', websiteData?.default?.pages)\n        updateState('website', 'otherLangHeader', websiteData?.langsFile?.header)\n        updateState('website', 'otherLangPages', websiteData?.langsFile?.pages)\n        updateState('website', 'otherLangFooter', websiteData?.langsFile?.footer)\n        updateState('website', 'assets', websiteData?.assets)\n        updateState('website', 'ccTel', websiteData?.ccTel)\n    }, [websiteData])\n\n    return (\n        <React.Fragment>\n            <NextNProgress\n                height={4}\n                color={websiteData?.assets?.colors?.primary?.light ? websiteData.assets?.colors.primary.light : '#FFFFFF'}\n            />\n            <div style={{overflowX: 'hidden', overflowY: 'auto'}}>\n                {website?.defaultHeader && <WebSiteHeader assets={websiteData?.assets} />}\n                <div style={{minHeight: 800}}>\n                    <WebsitePage/>\n                </div>\n                {<WebsiteFooter assets={websiteData?.assets} />}\n            </div>\n            <ScrollToTop smooth component={<ArrowUpwardIcon style={{fontSize: 30}} />} />\n        </React.Fragment>\n    )\n}\n\nexport const getServerSideProps = async (ctx) => {\n    const { req, res } = ctx\n    const websiteData = await res.REDIS_WEBCMS_DATA\n\n    if (websiteData?.default?.pages && Object.keys(websiteData.default.pages).length) {\n        return {\n            props: {\n                websiteData: JSON.parse(JSON.stringify(websiteData)),\n            },\n        }\n    } else if (req.headers.host === 'docs.hotech.systems') {\n        res.setHeader('location', '/userdoc')\n        res.statusCode = 302\n        res.end()\n        return { props: {} }\n    } else if (req.headers.host === 'portal.hotech.systems') {\n        res.setHeader('location', '/hup')\n        res.statusCode = 302\n        res.end()\n        return { props: {} }\n    } else {\n        res.setHeader('location', '/guest')\n        res.statusCode = 302\n        res.end()\n        return { props: {} }\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    updateState: (stateType, stateName, value) => dispatch(updateState(stateType, stateName, value)),\n})\n\nexport default connect(null, mapDispatchToProps)(Index)\n"]},"metadata":{},"sourceType":"module"}