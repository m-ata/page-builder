{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/guest/public/Info.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { connect, useSelector } from 'react-redux';\nimport { setToState as _setToState, updateState as _updateState } from 'state/actions';\nimport { Container, Divider, Box, Typography } from '@material-ui/core';\nimport CardSlider from '@webcms-ui/core/card-slider';\nimport { DEFAULT_OREST_TOKEN, jsonGroupBy } from 'model/orest/constants';\nimport { useRouter } from 'next/router';\nimport WebCmsGlobal from 'components/webcms-global';\nimport { FALSE, NULL } from 'model/globals';\nimport LoadingSpinner from 'components/LoadingSpinner';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nimport SelectHotel from './SelectHotel';\nimport { defaultLocale } from 'lib/translations/config';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport Button from '@material-ui/core/Button';\nimport { LocaleContext } from 'lib/translations/context/LocaleContext';\n\nvar Info = function Info(props) {\n  _s();\n\n  var _router$query;\n\n  var router = useRouter();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var state = props.state,\n      setToState = props.setToState,\n      onlyRes = props.onlyRes;\n\n  var _useContext = useContext(WebCmsGlobal),\n      GENERAL_SETTINGS = _useContext.GENERAL_SETTINGS;\n\n  var _useContext2 = useContext(LocaleContext),\n      locale = _useContext2.locale;\n\n  var loginfo = useSelector(function (state) {\n    return state.orest.currentUser && state.orest.currentUser.loginfo;\n  });\n  var changeHotelRefno = useSelector(function (state) {\n    return state.formReducer.guest.changeHotelRefno && state.formReducer.guest.changeHotelRefno;\n  });\n\n  var _useState = useState(false),\n      isLoading = _useState[0],\n      setIsLoading = _useState[1];\n\n  var catIdParam = (router === null || router === void 0 ? void 0 : (_router$query = router.query) === null || _router$query === void 0 ? void 0 : _router$query.catid) || false;\n  var clientParams = {};\n  clientParams.hotelrefno = loginfo && loginfo.hotelrefno || GENERAL_SETTINGS.HOTELREFNO;\n  useEffect(function () {\n    if (!Boolean(catIdParam)) {\n      setToState('guest', ['infoListOneGroup', 'id'], false);\n      setToState('guest', ['infoListOneGroup', 'groupName'], false);\n      setToState('guest', ['infoListOneGroup', 'data'], false);\n      setToState('guest', ['infoListOneGroup', 'langcode'], false);\n      setToState('guest', ['infoListOneGroup', 'chainid'], false);\n    }\n\n    var isChainHotelChange = false;\n\n    if (GENERAL_SETTINGS.ISCHAIN && changeHotelRefno !== false) {\n      clientParams.ischain = true;\n      clientParams.chainid = changeHotelRefno;\n      clientParams.hotelrefno = GENERAL_SETTINGS.HOTELREFNO;\n\n      if (clientParams.chainid !== state.infoList.chainid) {\n        isChainHotelChange = true;\n      }\n    } else if (GENERAL_SETTINGS.ISCHAIN && changeHotelRefno === false) {\n      return;\n    } else {\n      clientParams.ischain = false;\n      clientParams.chainid = false;\n    }\n\n    var isLangChange = false;\n\n    if (state.infoList.langcode !== locale) {\n      isLangChange = true;\n      setToState('guest', ['infoList', 'langcode'], locale);\n    }\n\n    var isRequest;\n\n    if (GENERAL_SETTINGS.ISCHAIN) {\n      isRequest = state.infoList.data === false && GENERAL_SETTINGS.ISCHAIN && changeHotelRefno !== false;\n    } else {\n      isRequest = state.infoList.data === false && GENERAL_SETTINGS.ISCHAIN === false;\n    }\n\n    if ((isRequest || isLangChange || isChainHotelChange || String(catIdParam) !== String(state.infoListOneGroup.id)) && isLoading === false) {\n      setIsLoading(true);\n      axios({\n        url: GENERAL_SETTINGS.BASE_URL + 'api/guestweb/hotel-info',\n        method: 'post',\n        params: {\n          onlyres: onlyRes || false,\n          langcode: locale || defaultLocale,\n          chainid: clientParams.chainid,\n          hotelrefno: clientParams.hotelrefno,\n          ischain: clientParams.ischain\n        }\n      }).then(function (infoResponse) {\n        var infoData = infoResponse.data;\n\n        if (infoData.success && infoData.data.length > 0) {\n          var useData = infoData.data;\n\n          if (onlyRes) {\n            useData = useData.filter(function (item) {\n              return item.islocres && item.isorsactive;\n            });\n          } else {\n            useData = useData.filter(function (item) {\n              return item.isorsactive;\n            });\n          }\n\n          setToState('guest', ['infoList', 'data'], useData.length > 0 ? jsonGroupBy(useData, 'localcatdesc') : null);\n          setToState('guest', ['infoList', 'langcode'], locale);\n          setToState('guest', ['infoList', 'chainid'], clientParams.chainid);\n          setIsLoading(false);\n\n          if (catIdParam) {\n            var _getGrpData;\n\n            var getGrpData, catId, catDesc;\n            getGrpData = useData.find(function (item) {\n              return Number(item.catid) === Number(catIdParam);\n            });\n\n            if ((_getGrpData = getGrpData) !== null && _getGrpData !== void 0 && _getGrpData.catid) {\n              catId = getGrpData.catid;\n              catDesc = t(getGrpData.localcatdesc);\n            } else {\n              getGrpData = useData.find(function (item) {\n                return Number(item.locid) === Number(catIdParam);\n              });\n              catId = getGrpData.locid;\n              catDesc = t(getGrpData.localdesc);\n            }\n\n            if (getGrpData) {\n              setToState('guest', ['infoListOneGroup', 'id'], catId);\n              setToState('guest', ['infoListOneGroup', 'groupName'], catDesc);\n            }\n          }\n        } else {\n          setToState('guest', ['infoList', 'data'], null);\n          setToState('guest', ['infoList', 'langcode'], locale);\n          setToState('guest', ['infoList', 'chainid'], clientParams.chainid);\n          setIsLoading(false);\n        }\n      });\n    }\n  }, [router.query.catid, changeHotelRefno, locale]);\n  useEffect(function () {\n    var isChainHotelChange = false;\n\n    if (GENERAL_SETTINGS.ISCHAIN && changeHotelRefno !== false) {\n      clientParams.ischain = true;\n      clientParams.chainid = changeHotelRefno;\n      clientParams.hotelrefno = GENERAL_SETTINGS.HOTELREFNO;\n\n      if (clientParams.chainid !== state.infoListOneGroup.chainid) {\n        isChainHotelChange = true;\n      }\n    } else if (GENERAL_SETTINGS.ISCHAIN && changeHotelRefno === false) {\n      return;\n    } else {\n      clientParams.ischain = false;\n      clientParams.chainid = false;\n    }\n\n    clientParams.catid = state.infoListOneGroup.id;\n    var isLangChange = false;\n\n    if (state.infoListOneGroup.langcode !== locale) {\n      isLangChange = true;\n      setToState('guest', ['infoList', 'langcode'], locale);\n      clientParams.langcode = locale || defaultLocale;\n    }\n\n    var isRequest;\n\n    if (GENERAL_SETTINGS.ISCHAIN) {\n      isRequest = state.infoListOneGroup.data === false && GENERAL_SETTINGS.ISCHAIN && changeHotelRefno !== false;\n    } else {\n      isRequest = state.infoListOneGroup.data === false && GENERAL_SETTINGS.ISCHAIN === false;\n    }\n\n    if (state.infoListOneGroup.id && (isRequest || isLangChange || isChainHotelChange) && isLoading === false) {\n      setIsLoading(true);\n      axios({\n        url: GENERAL_SETTINGS.BASE_URL + 'api/guestweb/hotel-info',\n        method: 'post',\n        params: clientParams\n      }).then(function (infoResponse) {\n        var infoData = infoResponse.data;\n\n        if (infoData.success && infoData.data.length > 0) {\n          var useData = infoData.data;\n\n          if (onlyRes) {\n            useData = useData.filter(function (item) {\n              return item.islocres && item.isorsactive;\n            });\n          } else {\n            useData = useData.filter(function (item) {\n              return item.isorsactive;\n            });\n          }\n\n          setToState('guest', ['infoListOneGroup', 'data'], useData.length > 0 ? useData : null);\n          setToState('guest', ['infoListOneGroup', 'langcode'], locale);\n          setToState('guest', ['infoListOneGroup', 'chainid'], clientParams.chainid);\n          setIsLoading(false);\n        } else {\n          setToState('guest', ['infoListOneGroup', 'data'], null);\n          setToState('guest', ['infoListOneGroup', 'langcode'], locale);\n          setToState('guest', ['infoListOneGroup', 'chainid'], clientParams.chainid);\n          setIsLoading(false);\n        }\n      });\n    }\n  }, [state.infoListOneGroup.id, locale]);\n\n  if (GENERAL_SETTINGS.ISCHAIN && changeHotelRefno === false || GENERAL_SETTINGS.ISCHAIN && state.infoList.chainid === null) {\n    if (state.clientReservIsLoading) {\n      return __jsx(Container, {\n        maxWidth: \"lg\",\n        style: {\n          padding: 0\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 17\n        }\n      }, __jsx(Box, {\n        p: 4,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }\n      }, __jsx(LoadingSpinner, {\n        size: 40,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 25\n        }\n      })));\n    }\n\n    return __jsx(Container, {\n      maxWidth: \"lg\",\n      style: {\n        padding: 0\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 13\n      }\n    }, __jsx(Box, {\n      p: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }\n    }, __jsx(SelectHotel, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 21\n      }\n    })));\n  }\n\n  if (state.infoList.data === false || isLoading === true) {\n    return __jsx(Container, {\n      maxWidth: \"lg\",\n      style: {\n        padding: 0\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 13\n      }\n    }, __jsx(Box, {\n      p: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }\n    }, __jsx(LoadingSpinner, {\n      size: 40,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 21\n      }\n    })));\n  }\n\n  if (state.infoList.data === null) {\n    return __jsx(Container, {\n      maxWidth: \"lg\",\n      style: {\n        padding: 0\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 13\n      }\n    }, __jsx(Box, {\n      p: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }\n    }, __jsx(Typography, {\n      variant: \"h6\",\n      align: \"center\",\n      gutterBottom: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 21\n      }\n    }, t('str_noDataAvailable')), GENERAL_SETTINGS.ISCHAIN && __jsx(Typography, {\n      variant: \"h6\",\n      align: \"center\",\n      gutterBottom: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 25\n      }\n    }, t('str_ifYouWishYouCanChangeTheHotelAndTryAgain'), __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 80\n      }\n    }), __jsx(Button, {\n      startIcon: __jsx(BusinessIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 48\n        }\n      }),\n      onClick: function onClick() {\n        return setToState(\"guest\", [\"isHotelListOpen\"], true);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 29\n      }\n    }, changeHotelRefno ? state.changeHotelName : t('str_chooseHotel')))));\n  }\n\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }\n  }, __jsx(Container, {\n    maxWidth: \"lg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }\n  }, state.infoListOneGroup.id && state.infoListOneGroup.data && state.infoListOneGroup.data.length > 0 ? __jsx(CardSlider, {\n    title: state.infoListOneGroup.groupName,\n    openId: Number(router.query.eventlocid) || NULL,\n    slideData: state.infoListOneGroup.data,\n    type: \"infoOneGroup\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 21\n    }\n  }) : state.infoListOneGroup.id && state.infoListOneGroup.data === null ? __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 21\n    }\n  }, __jsx(Box, {\n    p: 3,\n    style: {\n      textAlign: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 25\n    }\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    align: \"center\",\n    gutterBottom: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 29\n    }\n  }, t('str_noRecordsToDisplay')), __jsx(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: function onClick() {\n      setToState('guest', ['infoListOneGroup', 'id'], false);\n      setToState('guest', ['infoListOneGroup', 'groupName'], false);\n      setToState('guest', ['infoListOneGroup', 'data'], false);\n      setToState('guest', ['infoListOneGroup', 'langcode'], false);\n      setToState('guest', ['infoListOneGroup', 'chainid'], false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 29\n    }\n  }, t('str_back')))) : null, !state.infoListOneGroup.id && state.infoList.data && Object.keys(state.infoList.data).map(function (groupName, index) {\n    return __jsx(React.Fragment, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 29\n      }\n    }, __jsx(CardSlider, {\n      title: groupName,\n      openId: Number(router.query.eventlocid) || NULL,\n      slideData: state.infoList.data[groupName],\n      type: \"info\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 33\n      }\n    }));\n  })));\n};\n\n_s(Info, \"NUtGfPOa53AfwyLbgiKYHcgjvIo=\", false, function () {\n  return [useRouter, useTranslation, useSelector, useSelector];\n});\n\n_c = Info;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    state: state.formReducer.guest\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateState: function updateState(stateType, stateName, value) {\n      return dispatch(_updateState(stateType, stateName, value));\n    },\n    setToState: function setToState(stateType, stateName, value) {\n      return dispatch(_setToState(stateType, stateName, value));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Info);\n\nvar _c;\n\n$RefreshReg$(_c, \"Info\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/guest/public/Info.js"],"names":["React","useState","useEffect","useContext","axios","connect","useSelector","setToState","updateState","Container","Divider","Box","Typography","CardSlider","DEFAULT_OREST_TOKEN","jsonGroupBy","useRouter","WebCmsGlobal","FALSE","NULL","LoadingSpinner","useTranslation","SelectHotel","defaultLocale","BusinessIcon","Button","LocaleContext","Info","props","router","t","state","onlyRes","GENERAL_SETTINGS","locale","loginfo","orest","currentUser","changeHotelRefno","formReducer","guest","isLoading","setIsLoading","catIdParam","query","catid","clientParams","hotelrefno","HOTELREFNO","Boolean","isChainHotelChange","ISCHAIN","ischain","chainid","infoList","isLangChange","langcode","isRequest","data","String","infoListOneGroup","id","url","BASE_URL","method","params","onlyres","then","infoResponse","infoData","success","length","useData","filter","item","islocres","isorsactive","getGrpData","catId","catDesc","find","Number","localcatdesc","locid","localdesc","clientReservIsLoading","padding","changeHotelName","groupName","eventlocid","textAlign","Object","keys","map","index","mapStateToProps","mapDispatchToProps","dispatch","stateType","stateName","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\nimport axios from 'axios'\nimport { connect, useSelector } from 'react-redux'\nimport { setToState, updateState } from 'state/actions'\nimport { Container, Divider, Box, Typography } from '@material-ui/core'\nimport CardSlider from '@webcms-ui/core/card-slider'\nimport { DEFAULT_OREST_TOKEN, jsonGroupBy } from 'model/orest/constants'\nimport { useRouter } from 'next/router'\nimport WebCmsGlobal from 'components/webcms-global'\nimport { FALSE, NULL } from 'model/globals'\nimport LoadingSpinner from 'components/LoadingSpinner'\nimport useTranslation from 'lib/translations/hooks/useTranslation'\nimport SelectHotel from './SelectHotel'\nimport { defaultLocale } from 'lib/translations/config'\nimport BusinessIcon from '@material-ui/icons/Business'\nimport Button from  '@material-ui/core/Button'\nimport { LocaleContext } from 'lib/translations/context/LocaleContext'\n\nconst Info = (props) => {\n    const router = useRouter()\n    const { t } = useTranslation()\n    const { state, setToState, onlyRes } = props\n    const { GENERAL_SETTINGS } = useContext(WebCmsGlobal)\n    const { locale } = useContext(LocaleContext)\n    const loginfo = useSelector((state) => state.orest.currentUser && state.orest.currentUser.loginfo)\n    const changeHotelRefno = useSelector((state) => state.formReducer.guest.changeHotelRefno && state.formReducer.guest.changeHotelRefno)\n    const [isLoading, setIsLoading] = useState(false)\n    const catIdParam = router?.query?.catid || false\n\n    let clientParams = {}\n    clientParams.hotelrefno = loginfo && loginfo.hotelrefno || GENERAL_SETTINGS.HOTELREFNO\n\n    useEffect(() => {\n        if (!Boolean(catIdParam)) {\n            setToState('guest', ['infoListOneGroup', 'id'], false)\n            setToState('guest', ['infoListOneGroup', 'groupName'], false)\n            setToState('guest', ['infoListOneGroup', 'data'], false)\n            setToState('guest', ['infoListOneGroup', 'langcode'], false)\n            setToState('guest', ['infoListOneGroup', 'chainid'], false)\n        }\n\n        let isChainHotelChange = false\n        if (GENERAL_SETTINGS.ISCHAIN && changeHotelRefno !== false) {\n            clientParams.ischain = true\n            clientParams.chainid = changeHotelRefno\n            clientParams.hotelrefno = GENERAL_SETTINGS.HOTELREFNO\n\n            if (clientParams.chainid !== state.infoList.chainid) {\n                isChainHotelChange = true\n            }\n\n        } else if (GENERAL_SETTINGS.ISCHAIN && changeHotelRefno === false) {\n            return\n        } else {\n            clientParams.ischain = false\n            clientParams.chainid = false\n        }\n\n        let isLangChange = false\n        if (state.infoList.langcode !== locale) {\n            isLangChange = true\n            setToState('guest', ['infoList', 'langcode'], locale)\n        }\n\n        let isRequest\n        if (GENERAL_SETTINGS.ISCHAIN) {\n            isRequest = state.infoList.data === false && GENERAL_SETTINGS.ISCHAIN && changeHotelRefno !== false\n        } else {\n            isRequest = state.infoList.data === false && GENERAL_SETTINGS.ISCHAIN === false\n        }\n\n        if ((isRequest || isLangChange || isChainHotelChange || String(catIdParam) !== String(state.infoListOneGroup.id)) && isLoading === false) {\n            setIsLoading(true)\n            axios({\n                url: GENERAL_SETTINGS.BASE_URL + 'api/guestweb/hotel-info',\n                method: 'post',\n                params: {\n                    onlyres: onlyRes || false,\n                    langcode: locale || defaultLocale,\n                    chainid: clientParams.chainid,\n                    hotelrefno: clientParams.hotelrefno,\n                    ischain: clientParams.ischain,\n                },\n            }).then((infoResponse) => {\n                const infoData = infoResponse.data\n                if (infoData.success && infoData.data.length > 0) {\n                    let useData = infoData.data\n                    if (onlyRes) {\n                        useData = useData.filter(item => item.islocres && item.isorsactive)\n                    } else {\n                        useData = useData.filter(item => item.isorsactive)\n                    }\n                    setToState('guest', ['infoList', 'data'], useData.length > 0 ? jsonGroupBy(useData, 'localcatdesc') : null)\n                    setToState('guest', ['infoList', 'langcode'], locale)\n                    setToState('guest', ['infoList', 'chainid'], clientParams.chainid)\n                    setIsLoading(false)\n                    if (catIdParam) {\n                        let getGrpData, catId, catDesc\n                        getGrpData = useData.find(item => Number(item.catid) === Number(catIdParam))\n\n                        if(getGrpData?.catid){\n                            catId = getGrpData.catid\n                            catDesc = t(getGrpData.localcatdesc)\n                        }else{\n                            getGrpData = useData.find(item => Number(item.locid) === Number(catIdParam))\n                            catId = getGrpData.locid\n                            catDesc = t(getGrpData.localdesc)\n                        }\n\n                        if (getGrpData) {\n                            setToState('guest', ['infoListOneGroup', 'id'], catId)\n                            setToState('guest', ['infoListOneGroup', 'groupName'], catDesc)\n                        }\n                    }\n                } else {\n                    setToState('guest', ['infoList', 'data'], null)\n                    setToState('guest', ['infoList', 'langcode'], locale)\n                    setToState('guest', ['infoList', 'chainid'], clientParams.chainid)\n                    setIsLoading(false)\n                }\n            })\n        }\n\n    }, [router.query.catid, changeHotelRefno, locale])\n\n    useEffect(() => {\n        let isChainHotelChange = false\n        if (GENERAL_SETTINGS.ISCHAIN && changeHotelRefno !== false) {\n            clientParams.ischain = true\n            clientParams.chainid = changeHotelRefno\n            clientParams.hotelrefno = GENERAL_SETTINGS.HOTELREFNO\n\n            if(clientParams.chainid !== state.infoListOneGroup.chainid){\n                isChainHotelChange = true\n            }\n\n        } else if(GENERAL_SETTINGS.ISCHAIN && changeHotelRefno === false){\n            return;\n        }else {\n            clientParams.ischain = false\n            clientParams.chainid = false\n        }\n\n        clientParams.catid = state.infoListOneGroup.id\n\n        let isLangChange = false\n        if (state.infoListOneGroup.langcode !== locale) {\n            isLangChange = true\n            setToState('guest', ['infoList', 'langcode'], locale)\n            clientParams.langcode = locale || defaultLocale\n        }\n\n        let isRequest\n        if (GENERAL_SETTINGS.ISCHAIN) {\n            isRequest = state.infoListOneGroup.data === false && GENERAL_SETTINGS.ISCHAIN && changeHotelRefno !== false\n        } else {\n            isRequest = state.infoListOneGroup.data === false && GENERAL_SETTINGS.ISCHAIN === false\n        }\n\n        if (state.infoListOneGroup.id && (isRequest || isLangChange || isChainHotelChange) && isLoading === false) {\n            setIsLoading(true)\n            axios({\n                url: GENERAL_SETTINGS.BASE_URL + 'api/guestweb/hotel-info',\n                method: 'post',\n                params: clientParams,\n            }).then((infoResponse) => {\n                const infoData = infoResponse.data\n\n                if (infoData.success && infoData.data.length > 0) {\n                    let useData = infoData.data\n                    if(onlyRes){\n                        useData = useData.filter(item => item.islocres && item.isorsactive)\n                    }else{\n                        useData = useData.filter(item => item.isorsactive)\n                    }\n\n                    setToState('guest', ['infoListOneGroup', 'data'], useData.length > 0 ? useData : null)\n                    setToState('guest', ['infoListOneGroup', 'langcode'], locale)\n                    setToState('guest', ['infoListOneGroup', 'chainid'], clientParams.chainid)\n                    setIsLoading(false)\n                } else {\n                    setToState('guest', ['infoListOneGroup', 'data'], null)\n                    setToState('guest', ['infoListOneGroup', 'langcode'], locale)\n                    setToState('guest', ['infoListOneGroup', 'chainid'], clientParams.chainid)\n                    setIsLoading(false)\n                }\n            })\n        }\n\n    }, [state.infoListOneGroup.id, locale])\n\n    if ((GENERAL_SETTINGS.ISCHAIN && changeHotelRefno === false) || (GENERAL_SETTINGS.ISCHAIN && state.infoList.chainid === null)) {\n        if(state.clientReservIsLoading){\n            return (\n                <Container maxWidth=\"lg\" style={{ padding: 0 }}>\n                    <Box p={4}>\n                        <LoadingSpinner size={40} />\n                    </Box>\n                </Container>\n            )\n        }\n\n        return (\n            <Container maxWidth=\"lg\" style={{ padding: 0 }}>\n                <Box p={4}>\n                    <SelectHotel/>\n                </Box>\n            </Container>\n        )\n    }\n\n    if (state.infoList.data === false || isLoading === true) {\n        return (\n            <Container maxWidth=\"lg\" style={{ padding: 0 }}>\n                <Box p={4}>\n                    <LoadingSpinner size={40} />\n                </Box>\n            </Container>\n        )\n    }\n\n    if (state.infoList.data === null) {\n        return (\n            <Container maxWidth=\"lg\" style={{ padding: 0 }}>\n                <Box p={4}>\n                    <Typography variant=\"h6\" align=\"center\" gutterBottom>\n                        {t('str_noDataAvailable')}\n                    </Typography>\n                    {GENERAL_SETTINGS.ISCHAIN && (\n                        <Typography variant=\"h6\" align=\"center\" gutterBottom>\n                            {t('str_ifYouWishYouCanChangeTheHotelAndTryAgain')}<br/>\n                            <Button startIcon={<BusinessIcon />} onClick={()=> setToState(\"guest\", [\"isHotelListOpen\"], true)}>\n                                {changeHotelRefno ? state.changeHotelName : t('str_chooseHotel')}\n                            </Button>\n                        </Typography>\n                    )}\n                </Box>\n            </Container>\n        )\n    }\n\n    return (\n        <React.Fragment>\n            <Container maxWidth=\"lg\">\n                {(state.infoListOneGroup.id && state.infoListOneGroup.data && state.infoListOneGroup.data.length > 0) ? (\n                    <CardSlider\n                        title={state.infoListOneGroup.groupName}\n                        openId={Number(router.query.eventlocid) || NULL}\n                        slideData={state.infoListOneGroup.data}\n                        type='infoOneGroup'\n                    />\n                ): state.infoListOneGroup.id && state.infoListOneGroup.data === null? (\n                    <React.Fragment>\n                        <Box p={3} style={{ textAlign: 'center' }}>\n                            <Typography variant=\"h5\" align=\"center\" gutterBottom>\n                                {t('str_noRecordsToDisplay')}\n                            </Typography>\n                            <Button variant=\"outlined\" color=\"primary\" onClick={()=> {\n                                setToState('guest', ['infoListOneGroup', 'id'], false)\n                                setToState('guest', ['infoListOneGroup', 'groupName'], false)\n                                setToState('guest', ['infoListOneGroup', 'data'], false)\n                                setToState('guest', ['infoListOneGroup', 'langcode'], false)\n                                setToState('guest', ['infoListOneGroup', 'chainid'], false)\n                            }}>\n                                {t('str_back')}\n                            </Button>\n                        </Box>\n                    </React.Fragment>\n                ): null}\n                {!state.infoListOneGroup.id && state.infoList.data &&\n                    Object.keys(state.infoList.data).map((groupName, index) => {\n                        return (\n                            <React.Fragment key={index}>\n                                <CardSlider\n                                    title={groupName}\n                                    openId={Number(router.query.eventlocid) || NULL}\n                                    slideData={state.infoList.data[groupName]}\n                                    type=\"info\"\n                                />\n                            </React.Fragment>\n                        )\n                    },)}\n            </Container>\n        </React.Fragment>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        state: state.formReducer.guest,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    updateState: (stateType, stateName, value) => dispatch(updateState(stateType, stateName, value)),\n    setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Info)\n"]},"metadata":{},"sourceType":"module"}