{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/steps/webpage/Page.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//react imports\nimport React, { useCallback, useContext, useEffect, useState } from 'react'; //material imports\n\nimport { Container } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport BorderColorSharpIcon from '@material-ui/icons/BorderColorSharp';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography'; //redux imports\n\nimport { connect } from 'react-redux';\nimport { updateState, pushToState, deleteFromState, setToState } from '../../../../../state/actions'; //custom  components imports\n\nimport Slider from '../../components/page/sections/slider/Slider';\nimport Image from '../../components/page/sections/image/Image';\nimport Paragraph from '../../components/page/sections/paragraph/Paragraph';\nimport WidgetBooking from '../../../../ibe/widget/booking';\nimport EditSection from '../../components/page/sections/EditSection';\nimport AddSection from '../../components/page/sections/AddSection';\nimport ContactForm from '../../components/page/sections/contact-form/ContactForm';\nimport WrappedMap from '../../components/page/sections/map/Map';\nimport SliderOnlyPreview from '../../components/page/sections/slider-only/Slider';\nimport LanguageDropdown from '../../components/language/LanguageDropdown';\nimport { AlertDialog } from '../../components/alert';\nimport LoadingSpinner from '../../../../LoadingSpinner';\nimport SliderGallery from '../../components/page/sections/slider-gallery/SliderGallery';\nimport CardSlider from '../../components/page/sections/card-type-slider/CardSlider';\nimport Video from '../../components/page/sections/video/Video';\nimport WebCmsGlobal from 'components/webcms-global';\nimport { useRouter } from 'next/router';\nimport { FIELDTYPE, isErrorMsg, OREST_ENDPOINT, OREST_UPLOAD, REQUEST_METHOD_CONST } from '../../../../../model/orest/constants';\nimport { toast } from 'react-toastify';\nimport axios from 'axios';\nimport { Insert, ViewList } from '@webcms/orest';\nimport { COLORS, DELETE_SUCCESS } from '../../constants';\nimport clsx from 'clsx';\nimport { now } from 'moment';\nimport { array } from \"prop-types\";\nconst useStyles = makeStyles(theme => ({\n  centreContent: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  cursorPointer: {\n    cursor: 'pointer',\n    color: 'silver'\n  },\n  langFormControl: {\n    minWidth: 250,\n    marginRight: theme.spacing(1),\n    marginTop: theme.spacing(2),\n    float: 'right'\n  },\n  titleButton: {\n    marginLeft: theme.spacing(2),\n    marginTop: theme.spacing(3),\n    borderRadius: 20\n  },\n  disabledSectionTxt: {\n    pointerEvents: 'none',\n    opacity: 0.5\n  }\n}));\nconst defaultProps = {\n  bgcolor: 'background.paper',\n  border: 1,\n  borderColor: 'silver'\n};\n\nconst Page = props => {\n  var _state$page2, _state$page2$sections, _state$page8, _state$page8$sections;\n\n  const {\n    state,\n    deleteFromState,\n    setToState,\n    updateState\n  } = props;\n  const {\n    0: renderDialog,\n    1: setRenderDialog\n  } = useState('');\n  const [isAlert, setAlert] = React.useState(false);\n  const {\n    0: alertDialogType,\n    1: setAlertDialogType\n  } = useState('');\n  const {\n    0: deletedIndex,\n    1: setDeletedIndex\n  } = useState('');\n  const {\n    0: isDeleting,\n    1: setIsDeleting\n  } = useState(false);\n  const {\n    0: isRequestSend,\n    1: setRequestSend\n  } = useState(false);\n  const {\n    0: isLoaded,\n    1: setIsLoaded\n  } = useState(true);\n  const classes = useStyles();\n  const router = useRouter();\n  const companyId = router.query.companyID;\n  const {\n    GENERAL_SETTINGS,\n    token\n  } = useContext(WebCmsGlobal);\n  const authToken = token || router.query.authToken;\n  useEffect(() => {\n    //getting web page from rafile\n    ViewList({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.RAFILE,\n      token: authToken,\n      params: {\n        hotelrefno: Number(companyId),\n        query: `filetype:WEBPAGE`\n      }\n    }).then(res => {\n      if (res.status === 200 && res.data && res.data.data) {\n        const page = {\n          id: `page-${res.data.data.length + 1}`,\n          sections: state.page.sections\n        };\n        setToState('pageBuilder', ['page'], page);\n      }\n    });\n\n    if (state.isTemplate) {\n      (state === null || state === void 0 ? void 0 : state.previousStep) === 0 ? handleGenerateNewTemplate() : null;\n    }\n  }, []);\n\n  const handleGenerateNewTemplate = async () => {\n    setIsLoaded(false);\n    let updatedSections = [...state.page.sections];\n    let revampedSections = [];\n\n    for (let section of updatedSections) {\n      let updatedSection = _objectSpread({}, section);\n\n      for (let item of section.items) {\n        const itemIndex = section.items.indexOf(item);\n\n        const updatedItem = _objectSpread({}, item);\n\n        if ((item === null || item === void 0 ? void 0 : item.type) === 'paragraph') {\n          const textGid = await handleParagraphCopy(item);\n          updatedItem['gid'] = textGid;\n          updatedSection.items[itemIndex] = _objectSpread({}, updatedItem);\n        }\n\n        if ((item === null || item === void 0 ? void 0 : item.type) === 'image') {\n          const imageGid = await handleImageCopy(item);\n          updatedItem['gid'] = imageGid;\n          updatedSection.items[itemIndex] = _objectSpread({}, updatedItem);\n        }\n\n        if ((item === null || item === void 0 ? void 0 : item.type) === 'slider' || (item === null || item === void 0 ? void 0 : item.type) === 'slider-gallery' || (item === null || item === void 0 ? void 0 : item.type) === 'card-slider') {\n          const sliderGid = await handleSliderCopy(item);\n          updatedItem['gid'] = sliderGid;\n          updatedSection.items[itemIndex] = _objectSpread({}, updatedItem);\n        }\n      }\n\n      revampedSections.push(updatedSection);\n    }\n\n    setToState('pageBuilder', ['page', 'sections'], revampedSections);\n    setIsLoaded(true);\n  };\n\n  const handleSliderCopy = async item => {\n    const HCMITEMSLD_OPTION = {\n      url: GENERAL_SETTINGS.OREST_URL + OREST_ENDPOINT.SLASH + OREST_ENDPOINT.HCMITEMSLD + OREST_ENDPOINT.SLASH + 'view/list',\n      method: REQUEST_METHOD_CONST.GET,\n      headers: {\n        Authorization: `Bearer ${authToken}`,\n        'Content-Type': 'application/json'\n      },\n      params: {\n        hotelrefno: Number(companyId),\n        query: `gid::${item.gid}`\n      }\n    };\n    const slider = await getData(HCMITEMSLD_OPTION);\n    const HCMITEMSLDINS_OPTIONS = {\n      url: GENERAL_SETTINGS.OREST_URL + OREST_ENDPOINT.SLASH + OREST_ENDPOINT.HCMITEMSLD + OREST_ENDPOINT.SLASH + 'ins',\n      method: REQUEST_METHOD_CONST.POST,\n      headers: {\n        Authorization: `Bearer ${authToken}`,\n        'Content-Type': 'application/json'\n      },\n      data: {\n        itemid: state.hcmItemId,\n        hotelrefno: Number(companyId)\n      }\n    };\n    const insSlider = await handleInsertData(HCMITEMSLDINS_OPTIONS);\n    const HCMITEMIMG_OPTION = {\n      url: GENERAL_SETTINGS.OREST_URL + OREST_ENDPOINT.SLASH + OREST_ENDPOINT.HCMITEMIMG + OREST_ENDPOINT.SLASH + 'view/list',\n      method: REQUEST_METHOD_CONST.GET,\n      headers: {\n        Authorization: `Bearer ${authToken}`,\n        'Content-Type': 'application/json'\n      },\n      params: {\n        hotelrefno: Number(companyId),\n        query: `sliderid::${slider[0].id}`\n      }\n    };\n    const images = await getData(HCMITEMIMG_OPTION);\n\n    for (let image of images) {\n      const insertedImage = await handleImageCopy(image, insSlider === null || insSlider === void 0 ? void 0 : insSlider.id);\n    }\n\n    return (insSlider === null || insSlider === void 0 ? void 0 : insSlider.gid) || null;\n  };\n\n  const handleImageCopy = async (item, sliderID) => {\n    const HCMITEMIMG_OPTION = {\n      url: GENERAL_SETTINGS.OREST_URL + OREST_ENDPOINT.SLASH + OREST_ENDPOINT.HCMITEMIMG + OREST_ENDPOINT.SLASH + 'view/list',\n      method: REQUEST_METHOD_CONST.GET,\n      headers: {\n        Authorization: `Bearer ${authToken}`,\n        'Content-Type': 'application/json'\n      },\n      params: {\n        hotelrefno: Number(companyId),\n        query: `gid::${item.gid}`\n      }\n    };\n    const image = await getData(HCMITEMIMG_OPTION);\n\n    if ((image === null || image === void 0 ? void 0 : image.length) > 0) {\n      const FILEGET_OPTION = {\n        url: GENERAL_SETTINGS.OREST_URL + OREST_ENDPOINT.SLASH + OREST_ENDPOINT.RAFILE + OREST_ENDPOINT.SLASH + 'view/list',\n        method: REQUEST_METHOD_CONST.GET,\n        headers: {\n          Authorization: `Bearer ${authToken}`,\n          'Content-Type': '0000510'\n        },\n        params: {\n          hotelrefno: Number(companyId),\n          query: `masterid::${image[0].mid}`\n        }\n      };\n      const file = await getData(FILEGET_OPTION);\n\n      if (file.length > 0) {\n        var _file$, _downloadedFile$data, _file$2, _image$, _image$2, _image$3, _image$4, _image$5, _image$6;\n\n        const downloadedFile = await fileDownload({\n          url: `${GENERAL_SETTINGS.OREST_URL}/tools/file/download`,\n          headers: {\n            Authorization: `Bearer ${authToken}`\n          },\n          method: 'get',\n          responseType: 'arraybuffer',\n          params: {\n            gid: (_file$ = file[0]) === null || _file$ === void 0 ? void 0 : _file$.gid,\n            hotelrefno: companyId\n          }\n        });\n        let blob = new Blob([downloadedFile === null || downloadedFile === void 0 ? void 0 : downloadedFile.data], {\n          type: downloadedFile === null || downloadedFile === void 0 ? void 0 : (_downloadedFile$data = downloadedFile.data) === null || _downloadedFile$data === void 0 ? void 0 : _downloadedFile$data.type\n        });\n        const imageUrl = GENERAL_SETTINGS.STATIC_URL + ((_file$2 = file[0]) === null || _file$2 === void 0 ? void 0 : _file$2.url.replace('/var/otello', '').replace('/public', ''));\n        const m = imageUrl.replace(/^.*[\\\\\\/]/, '');\n        const imageType = m.split('.')[1];\n        const fileObject = new File([blob], m, {\n          lastModified: new Date(now()),\n          type: 'image/' + imageType\n        });\n        let data = {};\n        sliderID ? data = {\n          itemid: state.hcmItemId,\n          imgtype: FIELDTYPE.IMG,\n          title: (_image$ = image[0]) === null || _image$ === void 0 ? void 0 : _image$.title,\n          description: (_image$2 = image[0]) === null || _image$2 === void 0 ? void 0 : _image$2.description,\n          cta: (_image$3 = image[0]) === null || _image$3 === void 0 ? void 0 : _image$3.cta,\n          orderno: 1,\n          hotelrefno: Number(companyId),\n          sliderid: sliderID\n        } : data = {\n          itemid: state.hcmItemId,\n          imgtype: FIELDTYPE.IMG,\n          title: (_image$4 = image[0]) === null || _image$4 === void 0 ? void 0 : _image$4.title,\n          description: (_image$5 = image[0]) === null || _image$5 === void 0 ? void 0 : _image$5.description,\n          cta: (_image$6 = image[0]) === null || _image$6 === void 0 ? void 0 : _image$6.cta,\n          orderno: 1,\n          hotelrefno: Number(companyId)\n        };\n        const HCMITEMINS = {\n          url: GENERAL_SETTINGS.OREST_URL + OREST_ENDPOINT.SLASH + OREST_ENDPOINT.HCMITEMIMG + OREST_ENDPOINT.SLASH + 'ins',\n          method: REQUEST_METHOD_CONST.POST,\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n            'Content-Type': 'application/json'\n          },\n          data: data\n        };\n        const imageInsert = await handleInsertData(HCMITEMINS);\n\n        if (imageInsert) {\n          let binaryData = [];\n          binaryData.push(fileObject);\n          let formData = new FormData();\n          formData.append('file', new Blob(binaryData, {\n            type: fileObject.type\n          }), fileObject.name);\n          const uploadOptions = {\n            url: GENERAL_SETTINGS.OREST_URL + OREST_ENDPOINT.SLASH + OREST_ENDPOINT.RAFILE + OREST_UPLOAD,\n            method: 'post',\n            headers: {\n              Authorization: `Bearer ${authToken}`,\n              'Content-Type': 'multipart/form-data'\n            },\n            params: {\n              orsactive: true,\n              masterid: imageInsert === null || imageInsert === void 0 ? void 0 : imageInsert.mid,\n              hotelrefno: companyId\n            },\n            data: formData\n          };\n          const uploadedFile = await handleInsertData(uploadOptions);\n\n          if (uploadedFile !== null && uploadedFile !== void 0 && uploadedFile.url) {\n            return imageInsert === null || imageInsert === void 0 ? void 0 : imageInsert.gid;\n          }\n\n          return null;\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (state !== null && state !== void 0 && state.hcmItemId) {\n      setRequestSend(true);\n      ViewList({\n        apiUrl: GENERAL_SETTINGS.OREST_URL,\n        endpoint: OREST_ENDPOINT.HCMITEMLANG,\n        token: authToken,\n        params: {\n          hotelrefno: Number(companyId),\n          query: `langid::${state === null || state === void 0 ? void 0 : state.langId},itemid::${state === null || state === void 0 ? void 0 : state.hcmItemId}`\n        }\n      }).then(res => {\n        if (res.status === 200) {\n          var _res$data, _res$data$data;\n\n          if ((res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : (_res$data$data = _res$data.data) === null || _res$data$data === void 0 ? void 0 : _res$data$data.length) === 0) {\n            // insert hcmitemlang for default language\n            Insert({\n              apiUrl: GENERAL_SETTINGS.OREST_URL,\n              endpoint: OREST_ENDPOINT.HCMITEMLANG,\n              token: authToken,\n              data: {\n                itemid: state === null || state === void 0 ? void 0 : state.hcmItemId,\n                hotelrefno: Number(companyId),\n                langid: state === null || state === void 0 ? void 0 : state.langId\n              }\n            }).then(res1 => {\n              if (res1.status === 200) {\n                var _res$data2, _res$data3;\n\n                if (res !== null && res !== void 0 && (_res$data2 = res.data) !== null && _res$data2 !== void 0 && _res$data2.success && res !== null && res !== void 0 && (_res$data3 = res.data) !== null && _res$data3 !== void 0 && _res$data3.data) {\n                  setRequestSend(false);\n                }\n              } else {\n                const retErr = isErrorMsg(res1);\n                toast.error(retErr.errorMsg, {\n                  position: toast.POSITION.TOP_RIGHT\n                });\n              }\n            });\n          } else {\n            setRequestSend(false);\n          }\n        } else {\n          setRequestSend(false);\n          const retErr = isErrorMsg(res);\n          toast.error(retErr.errorMsg, {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        }\n      });\n    }\n  }, [state === null || state === void 0 ? void 0 : state.hcmItemId]);\n\n  const handleParagraphCopy = async item => {\n    const HCMITEMTXTPAR_OPTION = {\n      url: GENERAL_SETTINGS.OREST_URL + OREST_ENDPOINT.SLASH + OREST_ENDPOINT.HCMITEMTXTPAR + OREST_ENDPOINT.SLASH + 'view/list',\n      method: REQUEST_METHOD_CONST.GET,\n      headers: {\n        Authorization: `Bearer ${authToken}`,\n        'Content-Type': 'application/json'\n      },\n      params: {\n        hotelrefno: Number(companyId),\n        query: `gid::${item.gid}`\n      }\n    };\n    const paragraph = await getData(HCMITEMTXTPAR_OPTION);\n\n    if ((paragraph === null || paragraph === void 0 ? void 0 : paragraph.length) > 0) {\n      var _paragraph$;\n\n      const HCMITEM_OPTION = {\n        url: GENERAL_SETTINGS.OREST_URL + OREST_ENDPOINT.SLASH + OREST_ENDPOINT.HCMITEMTXT + OREST_ENDPOINT.SLASH + 'ins',\n        method: REQUEST_METHOD_CONST.POST,\n        headers: {\n          Authorization: `Bearer ${authToken}`,\n          'Content-Type': 'application/json'\n        },\n        data: {\n          itemid: state === null || state === void 0 ? void 0 : state.hcmItemId,\n          hotelrefno: Number(companyId)\n        }\n      };\n      const hcmitem = await handleInsertData(HCMITEM_OPTION);\n      const HCMITEMTXTPAR_OPTION = {\n        url: GENERAL_SETTINGS.OREST_URL + OREST_ENDPOINT.SLASH + OREST_ENDPOINT.HCMITEMTXTPAR + OREST_ENDPOINT.SLASH + 'ins',\n        method: REQUEST_METHOD_CONST.POST,\n        headers: {\n          Authorization: `Bearer ${authToken}`,\n          'Content-Type': 'application/json'\n        },\n        data: {\n          itemid: hcmitem === null || hcmitem === void 0 ? void 0 : hcmitem.id,\n          itemtext: (_paragraph$ = paragraph[0]) === null || _paragraph$ === void 0 ? void 0 : _paragraph$.itemtext,\n          hotelrefno: Number(companyId)\n        }\n      };\n      const hcmItemTxtPar = await handleInsertData(HCMITEMTXTPAR_OPTION);\n      return (hcmItemTxtPar === null || hcmItemTxtPar === void 0 ? void 0 : hcmItemTxtPar.gid) || null;\n    }\n  };\n\n  const getData = option => {\n    return new Promise(async resv => {\n      return await axios(option).then(async response => {\n        if (response.status === 200) {\n          var _response$data;\n\n          if (response !== null && response !== void 0 && (_response$data = response.data) !== null && _response$data !== void 0 && _response$data.data) resv(response.data.data);\n        } else {\n          const retErr = isErrorMsg(response);\n          toast.error(retErr.errorMsg, {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n        resv(error.response || {\n          status: 0\n        });\n      });\n    });\n  };\n\n  const handleInsertData = option => {\n    return new Promise(async resv => {\n      return await axios(option).then(async response => {\n        if (response.status === 200) {\n          var _response$data2;\n\n          if (response !== null && response !== void 0 && (_response$data2 = response.data) !== null && _response$data2 !== void 0 && _response$data2.data) resv(response.data.data);\n        } else {\n          const retErr = isErrorMsg(response);\n          toast.error(retErr.errorMsg, {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n        resv(error.response || {\n          status: 0\n        });\n      });\n    });\n  };\n\n  const fileDownload = option => {\n    return new Promise(async resv => {\n      return await axios(option).then(async response => {\n        if (response.status === 200) {\n          resv(response);\n        } else {\n          const retErr = isErrorMsg(response);\n          toast.error(retErr.errorMsg, {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n        resv(error.response || {\n          status: 0\n        });\n      });\n    });\n  };\n\n  const onAddSection = (section, order) => {\n    var _updatedPage$sections;\n\n    const updatedPage = _objectSpread({}, state === null || state === void 0 ? void 0 : state.page);\n\n    updatedPage === null || updatedPage === void 0 ? void 0 : (_updatedPage$sections = updatedPage.sections) === null || _updatedPage$sections === void 0 ? void 0 : _updatedPage$sections.splice(order - 1, 0, section);\n    updateState('pageBuilder', 'page', updatedPage);\n  };\n\n  const resetRender = () => {\n    setRenderDialog('');\n  };\n\n  const addSectionDialog = () => {\n    setRenderDialog(__jsx(AddSection, {\n      onAddSection: onAddSection,\n      resetRender: resetRender,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 25\n      }\n    }));\n  };\n\n  const onEditSection = (newSection, index, order) => {\n    if (state.langCode === state.defaultLang) {\n      let updatedSections = [...state.page.sections];\n      updatedSections.splice(index, 1);\n      updatedSections.splice(order - 1, 0, newSection);\n      setToState('pageBuilder', ['page', 'sections'], updatedSections);\n    } else {\n      if (Object.keys(state.langsFile[state.langCode]).length > 0) {\n        const updatedLangs = _objectSpread({}, state.langsFile);\n\n        const updatedItems = state.langsFile[state.langCode].items;\n        const items = {\n          title: newSection === null || newSection === void 0 ? void 0 : newSection.title,\n          subItems: newSection.items\n        };\n        updatedItems[index] = items;\n        updatedLangs[state.langCode].items = updatedItems;\n        updateState('pageBuilder', 'langsFile', updatedLangs);\n      }\n    }\n  };\n\n  const editSectionDialog = (section, otherLangSection) => {\n    setRenderDialog(__jsx(EditSection, {\n      section: section,\n      onEditSection: onEditSection,\n      dialogTitle: \"Edit Section\",\n      isDialogOpen: true,\n      resetRender: resetRender,\n      otherLangSection: otherLangSection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 13\n      }\n    }));\n  };\n\n  const handleDeleteSection = async index => {\n    const section = state.page.sections[index];\n    setIsDeleting(true);\n    let req = [];\n\n    for (let component of section.items) {\n      if (component.type === 'slider' || component.type === 'slider-gallery' || component.type === 'card-slider') {\n        const REQUEST_OPTIONS_VIEWLIST_HCMITEMSLD = {\n          url: GENERAL_SETTINGS.OREST_URL + '/hcmitemsld/view/list',\n          method: 'get',\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n            'Content-Type': 'application/json'\n          },\n          params: {\n            query: `gid:${component.gid}`,\n            chkselfish: false,\n            hotelrefno: Number(companyId)\n          }\n        };\n        const slider = await deleteSlider(REQUEST_OPTIONS_VIEWLIST_HCMITEMSLD, component.gid);\n        req.push(slider);\n      }\n\n      if (component.type === 'image') {\n        const REQUEST_OPTIONS_DELETE_HCMITEMIMG = {\n          url: GENERAL_SETTINGS.OREST_URL + OREST_ENDPOINT.SLASH + OREST_ENDPOINT.HCMITEMIMG + OREST_ENDPOINT.SLASH + 'del/' + component.gid,\n          method: REQUEST_METHOD_CONST.DELETE,\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n            'Content-Type': 'application/json'\n          },\n          params: {\n            hotelrefno: Number(companyId)\n          }\n        };\n        const image = await deleteImage(REQUEST_OPTIONS_DELETE_HCMITEMIMG);\n        req.push(image);\n      }\n\n      if (component.type === 'paragraph') {\n        const REQUEST_OPTIONS_DELETE_HCMITEMTXTPAR = {\n          url: GENERAL_SETTINGS.OREST_URL + OREST_ENDPOINT.SLASH + OREST_ENDPOINT.HCMITEMTXTPAR + OREST_ENDPOINT.SLASH + 'del/' + component.gid,\n          method: REQUEST_METHOD_CONST.DELETE,\n          headers: {\n            Authorization: `Bearer ${authToken}`,\n            'Content-Type': 'application/json'\n          },\n          params: {\n            hotelrefno: Number(companyId)\n          }\n        };\n        const paragrapgh = await deleteParagraph(REQUEST_OPTIONS_DELETE_HCMITEMTXTPAR);\n        req.push(paragrapgh);\n      }\n\n      if (component.type === 'widgetbooking') {\n        const booking = await deleteBooking();\n        req.push(booking);\n      }\n    }\n\n    await Promise.all(req).then(async res => {\n      let isSuccess = true;\n      await res.map(r => {\n        if (r.status !== 200) {\n          isSuccess = false;\n          return;\n        }\n      });\n      setIsDeleting(false);\n\n      if (isSuccess) {\n        deleteFromState('pageBuilder', ['page', 'sections'], [index, 1]);\n        const updatedOtherLangs = state.langsFile;\n\n        for (const lang in updatedOtherLangs) {\n          if (updatedOtherLangs[lang].items && updatedOtherLangs[lang].items.length > 0) {\n            updatedOtherLangs[lang].items.splice(index, 1);\n          }\n        }\n\n        updateState('pageBuilder', 'langsFile', updatedOtherLangs);\n        toast.success(DELETE_SUCCESS, {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      } else {\n        toast.error('Something went wrong', {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      }\n    });\n  };\n\n  const deleteImage = async header => {\n    return new Promise(async (resv, rej) => {\n      return await axios(header).then(async response => {\n        if (response.status === 200 && response.data && response.data.success) {\n          resv(response);\n        } else {\n          const retErr = isErrorMsg(response);\n          toast.error(retErr.errorMsg, {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n        resv(error.response || {\n          status: 0\n        });\n      });\n    });\n  };\n\n  const deleteSlider = async (header, sliderGID) => {\n    return new Promise(async (resv, rej) => {\n      return await axios(header).then(async response => {\n        if (response.status === 200) {\n          var _response$data3, _response$data3$data;\n\n          if (response !== null && response !== void 0 && (_response$data3 = response.data) !== null && _response$data3 !== void 0 && (_response$data3$data = _response$data3.data) !== null && _response$data3$data !== void 0 && _response$data3$data.length) {\n            const REQUEST_OPTIONS_VIEWLIST_HCMITEMIMG = {\n              url: GENERAL_SETTINGS.OREST_URL + '/hcmitemimg/view/list',\n              method: 'get',\n              headers: {\n                Authorization: `Bearer ${authToken}`,\n                'Content-Type': 'application/json'\n              },\n              params: {\n                query: `sliderid:${response.data.data[0].id}`,\n                chkselfish: false,\n                hotelrefno: Number(companyId)\n              }\n            };\n            return await axios(REQUEST_OPTIONS_VIEWLIST_HCMITEMIMG).then(async res => {\n              let gids = [];\n              let data = [];\n              await res.data.data.map(d => {\n                data.push(d);\n              });\n\n              for (let gid in data) {\n                gids.push({\n                  gid: data[gid].gid\n                });\n              }\n\n              const REQUEST_OPTIONS_DELETE_HCMITEMIMG = {\n                url: GENERAL_SETTINGS.OREST_URL + OREST_ENDPOINT.SLASH + OREST_ENDPOINT.HCMITEMIMG + OREST_ENDPOINT.SLASH + OREST_ENDPOINT.LIST + OREST_ENDPOINT.SLASH + OREST_ENDPOINT.DEL,\n                method: REQUEST_METHOD_CONST.DELETE,\n                headers: {\n                  Authorization: `Bearer ${authToken}`,\n                  'Content-Type': 'application/json'\n                },\n                data: gids\n              };\n              return await axios(REQUEST_OPTIONS_DELETE_HCMITEMIMG).then(async response1 => {\n                if (response1.status === 200 && response1.data && response1.data.success) {\n                  const REQUEST_OPTIONS_DELETE_HCMITEMSLD = {\n                    url: GENERAL_SETTINGS.OREST_URL + OREST_ENDPOINT.SLASH + OREST_ENDPOINT.HCMITEMSLD + OREST_ENDPOINT.SLASH + 'del/' + sliderGID,\n                    method: REQUEST_METHOD_CONST.DELETE,\n                    headers: {\n                      Authorization: `Bearer ${authToken}`,\n                      'Content-Type': 'application/json'\n                    },\n                    params: {\n                      hotelrefno: Number(companyId)\n                    }\n                  };\n                  return await axios(REQUEST_OPTIONS_DELETE_HCMITEMSLD).then(async response2 => {\n                    if (response2.status === 200 && response2.data && response2.data.success) {\n                      resv(response2);\n                    } else {\n                      const retErr = isErrorMsg(response2);\n                      toast.error(retErr.errorMsg, {\n                        position: toast.POSITION.TOP_RIGHT\n                      });\n                    }\n                  });\n                } else {\n                  const retErr = isErrorMsg(response1);\n                  toast.error(retErr.errorMsg, {\n                    position: toast.POSITION.TOP_RIGHT\n                  });\n                }\n              });\n            });\n          } else {\n            resv(response);\n          }\n        } else {\n          const retErr = isErrorMsg(response);\n          toast.error(retErr.errorMsg, {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n        resv(error.response || {\n          status: 0\n        });\n      });\n    });\n  };\n\n  const deleteParagraph = async header => {\n    return new Promise(async (resv, rej) => {\n      return await axios(header).then(async response => {\n        if (response.status === 200 && response.data && response.data.success) {\n          resv(response);\n        } else {\n          const retErr = isErrorMsg(response);\n          toast.error(retErr.errorMsg, {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n        resv(error.response || {\n          status: 0\n        });\n      });\n    });\n  };\n\n  const deleteBooking = async () => {\n    return new Promise(async (resv, rej) => {\n      resv({\n        status: 200,\n        msg: 'delete successfully'\n      });\n    });\n  };\n\n  const getColumnWidth = width => {\n    return Math.floor(width / 100 * 12);\n  };\n\n  const handleDelete = (type, isDelete) => {\n    if (isDelete) {\n      handleDeleteSection(deletedIndex);\n    }\n\n    setAlert(false);\n  };\n\n  const handleLanguageChange = useCallback(lang => {\n    setIsDeleting(true);\n    ViewList({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.HCMITEMLANG,\n      token: authToken,\n      params: {\n        hotelrefno: Number(companyId),\n        query: `langid::${lang === null || lang === void 0 ? void 0 : lang.id},itemid::${state === null || state === void 0 ? void 0 : state.hcmItemId}`\n      }\n    }).then(res => {\n      if (res.status === 200) {\n        var _res$data4, _res$data4$data;\n\n        if ((res === null || res === void 0 ? void 0 : (_res$data4 = res.data) === null || _res$data4 === void 0 ? void 0 : (_res$data4$data = _res$data4.data) === null || _res$data4$data === void 0 ? void 0 : _res$data4$data.length) === 0) {\n          var _lang$code;\n\n          if ((lang === null || lang === void 0 ? void 0 : (_lang$code = lang.code) === null || _lang$code === void 0 ? void 0 : _lang$code.toLowerCase()) !== (state === null || state === void 0 ? void 0 : state.defaultLang)) {\n            //insert specific language into hcmitemlang\n            Insert({\n              apiUrl: GENERAL_SETTINGS.OREST_URL,\n              endpoint: OREST_ENDPOINT.HCMITEMLANG,\n              token: authToken,\n              data: {\n                itemid: state.hcmItemId,\n                hotelrefno: Number(companyId),\n                langid: lang === null || lang === void 0 ? void 0 : lang.id\n              }\n            }).then(res1 => {\n              setIsDeleting(false);\n\n              if (res1.status === 200) {\n                var _res$data5, _res$data6;\n\n                if (res !== null && res !== void 0 && (_res$data5 = res.data) !== null && _res$data5 !== void 0 && _res$data5.success && res !== null && res !== void 0 && (_res$data6 = res.data) !== null && _res$data6 !== void 0 && _res$data6.data) {\n                  handleSetLangContent(lang);\n                }\n              } else {\n                const retErr = isErrorMsg(res1);\n                toast.error(retErr.errorMsg, {\n                  position: toast.POSITION.TOP_RIGHT\n                });\n              }\n            });\n          } else {\n            setIsDeleting(false);\n          }\n        } else {\n          setIsDeleting(false);\n          handleSetLangContent(lang);\n        }\n      } else {\n        setIsDeleting(false);\n        const retErr = isErrorMsg(res);\n        toast.error(retErr.errorMsg, {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      }\n    });\n  }, [state.langId]);\n\n  const handleSetLangContent = async lang => {\n    const code = lang === null || lang === void 0 ? void 0 : lang.code.toLowerCase();\n    updateState('pageBuilder', 'langCode', code);\n    updateState('pageBuilder', 'langId', lang === null || lang === void 0 ? void 0 : lang.id);\n\n    const updatelangsFile = _objectSpread({}, state.langsFile);\n\n    if (code !== state.defaultLang) {\n      if (!updatelangsFile[code]) {\n        if (state.page.sections.length > 0) {\n          updatelangsFile[code] = {\n            items: []\n          };\n\n          for (let section of state.page.sections) {\n            const sectionIndex = state.page.sections.indexOf(section);\n            updatelangsFile[code].items.push({\n              title: section === null || section === void 0 ? void 0 : section.title,\n              subItems: []\n            });\n\n            for (let item of section.items) {\n              const itemIndex = section.items.indexOf(item);\n\n              if (item.type === 'image') {\n                const REQUEST_OPTION_GET_IMAGE = {\n                  url: GENERAL_SETTINGS.OREST_URL + '/' + OREST_ENDPOINT.HCMITEMIMG + '/view/list',\n                  method: 'get',\n                  headers: {\n                    Authorization: `Bearer ${authToken}`,\n                    'Content-Type': 'application/json'\n                  },\n                  params: {\n                    hotelrefno: Number(companyId),\n                    chkselfish: false,\n                    query: `gid:${item.gid}`\n                  }\n                };\n                const img = await getImageData(REQUEST_OPTION_GET_IMAGE);\n                updatelangsFile[code].items[sectionIndex].subItems[itemIndex] = {\n                  image: {\n                    title: img.title,\n                    description: img.description\n                  }\n                };\n              }\n\n              if (item.type === 'paragraph') {\n                const REQUEST_OPTION_GET_TEXT = {\n                  url: GENERAL_SETTINGS.OREST_URL + '/' + OREST_ENDPOINT.HCMITEMTXTPAR + '/view/list',\n                  method: 'get',\n                  headers: {\n                    Authorization: `Bearer ${authToken}`,\n                    'Content-Type': 'application/json'\n                  },\n                  params: {\n                    hotelrefno: Number(companyId),\n                    chkselfish: false,\n                    query: `gid:${item.gid}`\n                  }\n                };\n                const text = await getTextData(REQUEST_OPTION_GET_TEXT);\n                updatelangsFile[code].items[sectionIndex].subItems[itemIndex] = {\n                  text: text\n                };\n              }\n\n              if (item.type === 'slider-gallery' || item.type === 'card-slider') {\n                const REQUEST_OPTION_GET_SLD = {\n                  url: GENERAL_SETTINGS.OREST_URL + '/' + OREST_ENDPOINT.HCMITEMSLD + '/view/list',\n                  method: 'get',\n                  headers: {\n                    Authorization: `Bearer ${authToken}`,\n                    'Content-Type': 'application/json'\n                  },\n                  params: {\n                    hotelrefno: Number(companyId),\n                    chkselfish: false,\n                    query: `gid:${item.gid}`\n                  }\n                };\n                const slider = await getSliderData(REQUEST_OPTION_GET_SLD);\n\n                if (item.type === 'slider-gallery') {\n                  updatelangsFile[code].items[sectionIndex].subItems[itemIndex] = {\n                    sliderGallery: slider\n                  };\n                } else {\n                  updatelangsFile[code].items[sectionIndex].subItems[itemIndex] = {\n                    cardSlider: slider\n                  };\n                }\n              }\n\n              if (item.type === 'slider') {\n                const REQUEST_OPTION_GET_SLD = {\n                  url: GENERAL_SETTINGS.OREST_URL + '/' + OREST_ENDPOINT.HCMITEMSLD + '/view/list',\n                  method: 'get',\n                  headers: {\n                    Authorization: `Bearer ${authToken}`,\n                    'Content-Type': 'application/json'\n                  },\n                  params: {\n                    hotelrefno: Number(companyId),\n                    chkselfish: false,\n                    query: `gid:${item.gid}`\n                  }\n                };\n                const slider = await getSliderData(REQUEST_OPTION_GET_SLD);\n\n                if (slider instanceof Array) {\n                  updatelangsFile[code].items[sectionIndex].subItems[itemIndex] = {\n                    sliderImages: slider\n                  };\n                } else {\n                  if (slider instanceof Object) {\n                    updatelangsFile[code].items[sectionIndex].subItems[itemIndex] = {\n                      slider: slider\n                    };\n                  }\n                }\n              }\n\n              if (item.type === 'widgetbooking') {\n                updatelangsFile[code].items[sectionIndex].subItems[itemIndex] = {\n                  booking: true\n                };\n              }\n\n              if (item.type === 'contactForm') {\n                let labels = [];\n\n                if (item.gid && item.gid.length > 0) {\n                  for (const gid of item.gid) {\n                    gid.isActive && labels.push({\n                      id: gid.id,\n                      label: gid.label\n                    });\n                  }\n                }\n\n                updatelangsFile[code].items[sectionIndex].subItems[itemIndex] = {\n                  contactForm: {\n                    labels: labels\n                  }\n                };\n              }\n\n              if (item.type === 'map') {\n                updatelangsFile[code].items[sectionIndex].subItems[itemIndex] = {\n                  map: true\n                };\n              }\n\n              if (item.type === 'sliderOnly') {\n                updatelangsFile[code].items[sectionIndex].subItems[itemIndex] = {\n                  sliderOnly: true\n                };\n              }\n            }\n\n            updateState('pageBuilder', 'langsFile', updatelangsFile);\n          }\n        }\n      } else {\n        if (updatelangsFile[code].items.length !== state.page.sections) {\n          for (let i = 0; i < state.page.sections.length; i++) {\n            var _updatelangsFile$code, _updatelangsFile$code2;\n\n            if (i > ((_updatelangsFile$code = updatelangsFile[code]) === null || _updatelangsFile$code === void 0 ? void 0 : (_updatelangsFile$code2 = _updatelangsFile$code.items) === null || _updatelangsFile$code2 === void 0 ? void 0 : _updatelangsFile$code2.length) - 1) {\n              var _state$page, _state$page$sections$;\n\n              updatelangsFile[code].items.push({\n                title: state === null || state === void 0 ? void 0 : (_state$page = state.page) === null || _state$page === void 0 ? void 0 : (_state$page$sections$ = _state$page.sections[i]) === null || _state$page$sections$ === void 0 ? void 0 : _state$page$sections$.title,\n                subItems: []\n              });\n            } else {\n              updatelangsFile[code].items[i].subItems.length = state.page.sections[i].items.length;\n            }\n\n            for (let item of state.page.sections[i].items) {\n              const itemIndex = state.page.sections[i].items.indexOf(item);\n\n              if (item.type === 'image') {\n                var _updatelangsFile$code3, _updatelangsFile$code4, _updatelangsFile$code5;\n\n                const REQUEST_OPTION_GET_IMAGE = {\n                  url: GENERAL_SETTINGS.OREST_URL + '/' + OREST_ENDPOINT.HCMITEMIMG + '/view/list',\n                  method: 'get',\n                  headers: {\n                    Authorization: `Bearer ${authToken}`,\n                    'Content-Type': 'application/json'\n                  },\n                  params: {\n                    hotelrefno: Number(companyId),\n                    chkselfish: false,\n                    query: `gid:${item.gid}`\n                  }\n                };\n                const img = await getImageData(REQUEST_OPTION_GET_IMAGE);\n\n                if (!((_updatelangsFile$code3 = updatelangsFile[code]) !== null && _updatelangsFile$code3 !== void 0 && (_updatelangsFile$code4 = _updatelangsFile$code3.items[i]) !== null && _updatelangsFile$code4 !== void 0 && (_updatelangsFile$code5 = _updatelangsFile$code4.subItems[itemIndex]) !== null && _updatelangsFile$code5 !== void 0 && _updatelangsFile$code5.image)) {\n                  updatelangsFile[code].items[i].subItems[itemIndex] = {\n                    image: {\n                      title: img.title,\n                      description: img.description\n                    }\n                  };\n                }\n              }\n\n              if (item.type === 'paragraph') {\n                var _updatelangsFile$code6, _updatelangsFile$code7, _updatelangsFile$code8;\n\n                const REQUEST_OPTION_GET_TEXT = {\n                  url: GENERAL_SETTINGS.OREST_URL + '/' + OREST_ENDPOINT.HCMITEMTXTPAR + '/view/list',\n                  method: 'get',\n                  headers: {\n                    Authorization: `Bearer ${authToken}`,\n                    'Content-Type': 'application/json'\n                  },\n                  params: {\n                    hotelrefno: Number(companyId),\n                    chkselfish: false,\n                    query: `gid:${item.gid}`\n                  }\n                };\n                const text = await getTextData(REQUEST_OPTION_GET_TEXT);\n\n                if (!((_updatelangsFile$code6 = updatelangsFile[code]) !== null && _updatelangsFile$code6 !== void 0 && (_updatelangsFile$code7 = _updatelangsFile$code6.items[i]) !== null && _updatelangsFile$code7 !== void 0 && (_updatelangsFile$code8 = _updatelangsFile$code7.subItems[itemIndex]) !== null && _updatelangsFile$code8 !== void 0 && _updatelangsFile$code8.text)) {\n                  updatelangsFile[code].items[i].subItems[itemIndex] = {\n                    text: text\n                  };\n                }\n              }\n\n              if (item.type === 'slider-gallery' || item.type === 'card-slider') {\n                const REQUEST_OPTION_GET_SLD = {\n                  url: GENERAL_SETTINGS.OREST_URL + '/' + OREST_ENDPOINT.HCMITEMSLD + '/view/list',\n                  method: 'get',\n                  headers: {\n                    Authorization: `Bearer ${authToken}`,\n                    'Content-Type': 'application/json'\n                  },\n                  params: {\n                    hotelrefno: Number(companyId),\n                    chkselfish: false,\n                    query: `gid:${item.gid}`\n                  }\n                };\n                const slider = await getSliderData(REQUEST_OPTION_GET_SLD);\n\n                if (item.type === 'slider-gallery') {\n                  var _updatelangsFile$code9, _updatelangsFile$code10, _updatelangsFile$code11;\n\n                  if (!((_updatelangsFile$code9 = updatelangsFile[code]) !== null && _updatelangsFile$code9 !== void 0 && (_updatelangsFile$code10 = _updatelangsFile$code9.items[i]) !== null && _updatelangsFile$code10 !== void 0 && (_updatelangsFile$code11 = _updatelangsFile$code10.subItems[itemIndex]) !== null && _updatelangsFile$code11 !== void 0 && _updatelangsFile$code11.sliderGallery)) {\n                    updatelangsFile[code].items[i].subItems[itemIndex] = {\n                      sliderGallery: slider\n                    };\n                  }\n                } else {\n                  var _updatelangsFile$code12, _updatelangsFile$code13, _updatelangsFile$code14;\n\n                  if (!((_updatelangsFile$code12 = updatelangsFile[code]) !== null && _updatelangsFile$code12 !== void 0 && (_updatelangsFile$code13 = _updatelangsFile$code12.items[i]) !== null && _updatelangsFile$code13 !== void 0 && (_updatelangsFile$code14 = _updatelangsFile$code13.subItems[itemIndex]) !== null && _updatelangsFile$code14 !== void 0 && _updatelangsFile$code14.cardSlider)) {\n                    updatelangsFile[code].items[i].subItems[itemIndex] = {\n                      cardSlider: slider\n                    };\n                  }\n                }\n              }\n\n              if (item.type === 'slider') {\n                const REQUEST_OPTION_GET_SLD = {\n                  url: GENERAL_SETTINGS.OREST_URL + '/' + OREST_ENDPOINT.HCMITEMSLD + '/view/list',\n                  method: 'get',\n                  headers: {\n                    Authorization: `Bearer ${authToken}`,\n                    'Content-Type': 'application/json'\n                  },\n                  params: {\n                    hotelrefno: Number(companyId),\n                    chkselfish: false,\n                    query: `gid:${item.gid}`\n                  }\n                };\n                const slider = await getSliderData(REQUEST_OPTION_GET_SLD);\n\n                if (slider instanceof Array) {\n                  var _updatelangsFile$code15, _updatelangsFile$code16, _updatelangsFile$code17;\n\n                  if (!((_updatelangsFile$code15 = updatelangsFile[code]) !== null && _updatelangsFile$code15 !== void 0 && (_updatelangsFile$code16 = _updatelangsFile$code15.items[i]) !== null && _updatelangsFile$code16 !== void 0 && (_updatelangsFile$code17 = _updatelangsFile$code16.subItems[itemIndex]) !== null && _updatelangsFile$code17 !== void 0 && _updatelangsFile$code17.sliderImages)) {\n                    updatelangsFile[code].items[i].subItems[itemIndex] = {\n                      sliderImages: slider\n                    };\n                  }\n                } else {\n                  if (slider instanceof Object) {\n                    var _updatelangsFile$code18, _updatelangsFile$code19, _updatelangsFile$code20;\n\n                    if (!((_updatelangsFile$code18 = updatelangsFile[code]) !== null && _updatelangsFile$code18 !== void 0 && (_updatelangsFile$code19 = _updatelangsFile$code18.items[i]) !== null && _updatelangsFile$code19 !== void 0 && (_updatelangsFile$code20 = _updatelangsFile$code19.subItems[itemIndex]) !== null && _updatelangsFile$code20 !== void 0 && _updatelangsFile$code20.slider)) {\n                      updatelangsFile[code].items[i].subItems[itemIndex] = {\n                        slider: slider\n                      };\n                    }\n                  }\n                }\n              }\n\n              if (item.type === 'widgetbooking') {\n                var _updatelangsFile$code21, _updatelangsFile$code22, _updatelangsFile$code23;\n\n                if (!((_updatelangsFile$code21 = updatelangsFile[code]) !== null && _updatelangsFile$code21 !== void 0 && (_updatelangsFile$code22 = _updatelangsFile$code21.items[i]) !== null && _updatelangsFile$code22 !== void 0 && (_updatelangsFile$code23 = _updatelangsFile$code22.subItems[itemIndex]) !== null && _updatelangsFile$code23 !== void 0 && _updatelangsFile$code23.booking)) {\n                  updatelangsFile[code].items[i].subItems[itemIndex] = {\n                    booking: true\n                  };\n                }\n              }\n\n              if (item.type === 'map') {\n                var _updatelangsFile$code24, _updatelangsFile$code25, _updatelangsFile$code26;\n\n                if (!((_updatelangsFile$code24 = updatelangsFile[code]) !== null && _updatelangsFile$code24 !== void 0 && (_updatelangsFile$code25 = _updatelangsFile$code24.items[i]) !== null && _updatelangsFile$code25 !== void 0 && (_updatelangsFile$code26 = _updatelangsFile$code25.subItems[itemIndex]) !== null && _updatelangsFile$code26 !== void 0 && _updatelangsFile$code26.map)) {\n                  updatelangsFile[code].items[i].subItems[itemIndex] = {\n                    map: true\n                  };\n                }\n              }\n\n              if (item.type === 'sliderOnly') {\n                var _updatelangsFile$code27, _updatelangsFile$code28, _updatelangsFile$code29;\n\n                if (!((_updatelangsFile$code27 = updatelangsFile[code]) !== null && _updatelangsFile$code27 !== void 0 && (_updatelangsFile$code28 = _updatelangsFile$code27.items[i]) !== null && _updatelangsFile$code28 !== void 0 && (_updatelangsFile$code29 = _updatelangsFile$code28.subItems[itemIndex]) !== null && _updatelangsFile$code29 !== void 0 && _updatelangsFile$code29.sliderOnly)) {\n                  updatelangsFile[code].items[i].subItems[itemIndex] = {\n                    sliderOnly: true\n                  };\n                }\n              }\n\n              if (item.type === 'contactForm') {\n                var _updatelangsFile$code30, _updatelangsFile$code31, _updatelangsFile$code32;\n\n                let labels = [];\n\n                if (item.gid && item.gid.length > 0) {\n                  for (const gid of item.gid) {\n                    gid.isActive && labels.push({\n                      id: gid.id,\n                      label: gid.label\n                    });\n                  }\n                }\n\n                if (!((_updatelangsFile$code30 = updatelangsFile[code]) !== null && _updatelangsFile$code30 !== void 0 && (_updatelangsFile$code31 = _updatelangsFile$code30.items[i]) !== null && _updatelangsFile$code31 !== void 0 && (_updatelangsFile$code32 = _updatelangsFile$code31.subItems[itemIndex]) !== null && _updatelangsFile$code32 !== void 0 && _updatelangsFile$code32.contactForm)) {\n                  updatelangsFile[code].items[i].subItems[itemIndex] = {\n                    contactForm: {\n                      labels: labels\n                    }\n                  };\n                }\n              }\n            }\n          }\n\n          updateState('pageBuilder', 'langsFile', updatelangsFile);\n        }\n      }\n    }\n  };\n\n  const getImageData = async header => {\n    return new Promise(async (resv, rej) => {\n      return await axios(header).then(async response => {\n        if (response.status === 200 && response.data && response.data.data.length > 0) {\n          resv({\n            title: response.data.data[0].title,\n            description: response.data.data[0].description\n          });\n        } else {\n          const retErr = isErrorMsg(response);\n          toast.error(retErr.errorMsg, {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n        resv(error.response || {\n          status: 0\n        });\n      });\n    });\n  };\n\n  const getTextData = async header => {\n    return new Promise(async (resv, rej) => {\n      return await axios(header).then(async response => {\n        if (response.status === 200 && response.data && response.data.data.length > 0) {\n          resv(response.data.data[0].itemtext);\n        } else {\n          const retErr = isErrorMsg(response);\n          toast.error(retErr.errorMsg, {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n        resv(error.response || {\n          status: 0\n        });\n      });\n    });\n  };\n\n  const getSliderData = async header => {\n    return new Promise(async (resv, rej) => {\n      return await axios(header).then(async response => {\n        if (response.status === 200 && response.data && response.data.data.length > 0) {\n          if (response.data.data[0].title || response.data.data[0].description || response.data.data[0].cta) {\n            resv({\n              title: response.data.data[0].title,\n              description: response.data.data[0].description,\n              cta: response.data.data[0].cta\n            });\n          } else {\n            const REQUEST_OPTIONS_GET_HCMITEMIMG = {\n              url: GENERAL_SETTINGS.OREST_URL + '/hcmitemimg/view/list',\n              method: 'get',\n              headers: {\n                Authorization: `Bearer ${authToken}`,\n                'Content-Type': 'application/json'\n              },\n              params: {\n                query: `sliderid:${response.data.data[0].id}`,\n                hotelrefno: Number(companyId),\n                chkselfish: false,\n                sort: 'orderno'\n              }\n            };\n            return await axios(REQUEST_OPTIONS_GET_HCMITEMIMG).then(async res => {\n              if (res.status === 200 && res.data && res.data.data.length > 0) {\n                let updatedSliderImages = [];\n                await res.data.data.map(r => {\n                  updatedSliderImages.push({\n                    title: r.title,\n                    description: r.description,\n                    cta: r.cta\n                  });\n                });\n                resv(updatedSliderImages);\n              }\n            });\n          }\n        } else {\n          const retErr = isErrorMsg(response);\n          toast.error(retErr.errorMsg, {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n        resv(error.response || {\n          status: 0\n        });\n      });\n    });\n  };\n\n  if (isRequestSend || !isLoaded) {\n    return __jsx(LoadingSpinner, {\n      style: {\n        color: COLORS.secondary\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1297,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return __jsx(Container, {\n    className: isDeleting ? classes.disabledSectionTxt : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1301,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    style: {\n      display: 'flex',\n      justifyContent: 'flex-end'\n    },\n    component: 'div',\n    className: (state === null || state === void 0 ? void 0 : (_state$page2 = state.page) === null || _state$page2 === void 0 ? void 0 : (_state$page2$sections = _state$page2.sections) === null || _state$page2$sections === void 0 ? void 0 : _state$page2$sections.length) === 0 ? classes.disabledSectionTxt : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1302,\n      columnNumber: 13\n    }\n  }, __jsx(LanguageDropdown, {\n    handleChange: handleLanguageChange,\n    langID: state === null || state === void 0 ? void 0 : state.langId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1310,\n      columnNumber: 17\n    }\n  })), __jsx(Box, _extends({}, defaultProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1312,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    style: {\n      minHeight: '50vh'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1313,\n      columnNumber: 17\n    }\n  }, state.langCode !== state.defaultLang && state.langsFile[state.langCode] && state.langsFile[state.langCode].items.length > 0 && state.langsFile[state.langCode].items.map((item, index) => {\n    return __jsx(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1319,\n        columnNumber: 33\n      }\n    }, __jsx(IconButton, {\n      \"aria-label\": \"Edit item\",\n      color: \"primary\",\n      onClick: () => editSectionDialog(state.page.sections[index], item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1320,\n        columnNumber: 37\n      }\n    }, __jsx(BorderColorSharpIcon, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1325,\n        columnNumber: 41\n      }\n    })), __jsx(Container, {\n      style: {\n        pointerEvents: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1327,\n        columnNumber: 37\n      }\n    }, (item === null || item === void 0 ? void 0 : item.title) && __jsx(Grid, {\n      container: true,\n      spacing: 1,\n      justify: 'flex-start',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1329,\n        columnNumber: 45\n      }\n    }, __jsx(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1330,\n        columnNumber: 49\n      }\n    }, __jsx(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: item.title\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1331,\n        columnNumber: 53\n      }\n    }))), __jsx(Grid, {\n      container: true,\n      spacing: 1,\n      justify: 'flex-start',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1335,\n        columnNumber: 41\n      }\n    }, item.subItems.length > 0 && item.subItems.map((subItem, i) => {\n      var _state$page3, _state$page3$sections, _state$page3$sections2, _state$page4, _state$page4$sections, _state$page4$sections2, _state$page5, _state$page5$sections, _state$page6, _state$page6$sections, _state$page6$sections2, _state$assets, _state$assets$colors, _state$assets$colors$, _state$page7, _state$page7$sections, _state$page7$sections2, _state$assets2, _state$assets2$colors, _state$assets2$colors2;\n\n      return __jsx(Grid, {\n        key: i,\n        item: true,\n        xs: getColumnWidth(state === null || state === void 0 ? void 0 : (_state$page3 = state.page) === null || _state$page3 === void 0 ? void 0 : (_state$page3$sections = _state$page3.sections[index]) === null || _state$page3$sections === void 0 ? void 0 : (_state$page3$sections2 = _state$page3$sections.items[i]) === null || _state$page3$sections2 === void 0 ? void 0 : _state$page3$sections2.width),\n        style: {\n          minWidth: (state === null || state === void 0 ? void 0 : (_state$page4 = state.page) === null || _state$page4 === void 0 ? void 0 : (_state$page4$sections = _state$page4.sections[index]) === null || _state$page4$sections === void 0 ? void 0 : (_state$page4$sections2 = _state$page4$sections.items[i]) === null || _state$page4$sections2 === void 0 ? void 0 : _state$page4$sections2.width) + '%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1339,\n          columnNumber: 57\n        }\n      }, 'image' in subItem && __jsx(Image, {\n        imageComponent: state.page.sections[index].items[i],\n        otherLangsImage: subItem.image,\n        sectionType: state === null || state === void 0 ? void 0 : (_state$page5 = state.page) === null || _state$page5 === void 0 ? void 0 : (_state$page5$sections = _state$page5.sections[index]) === null || _state$page5$sections === void 0 ? void 0 : _state$page5$sections.type,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1351,\n          columnNumber: 65\n        }\n      }), 'text' in subItem && __jsx(\"div\", {\n        style: {\n          backgroundColor: state !== null && state !== void 0 && (_state$page6 = state.page) !== null && _state$page6 !== void 0 && (_state$page6$sections = _state$page6.sections[index]) !== null && _state$page6$sections !== void 0 && (_state$page6$sections2 = _state$page6$sections.items[i]) !== null && _state$page6$sections2 !== void 0 && _state$page6$sections2.useBgColor ? state === null || state === void 0 ? void 0 : (_state$assets = state.assets) === null || _state$assets === void 0 ? void 0 : (_state$assets$colors = _state$assets.colors) === null || _state$assets$colors === void 0 ? void 0 : (_state$assets$colors$ = _state$assets$colors.message) === null || _state$assets$colors$ === void 0 ? void 0 : _state$assets$colors$.main : 'white',\n          height: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1358,\n          columnNumber: 65\n        }\n      }, __jsx(Paragraph, {\n        paragraph: subItem.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1367,\n          columnNumber: 69\n        }\n      })), 'sliderGallery' in subItem && __jsx(SliderGallery, {\n        sliderGallery: state.page.sections[index].items[i],\n        otherLangSliderGallery: subItem.sliderGallery,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1371,\n          columnNumber: 65\n        }\n      }), 'cardSlider' in subItem && __jsx(CardSlider, {\n        cardSlider: state.page.sections[index].items[i],\n        otherLangCardSlider: subItem.cardSlider,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1377,\n          columnNumber: 65\n        }\n      }), 'slider' in subItem && __jsx(Slider, {\n        sliderComponent: state.page.sections[index].items[i],\n        slider: subItem.slider,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1383,\n          columnNumber: 65\n        }\n      }), 'sliderImages' in subItem && __jsx(Slider, {\n        sliderComponent: state.page.sections[index].items[i],\n        otherLangSliderImages: subItem.sliderImages,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1391,\n          columnNumber: 65\n        }\n      }), ('booking' in subItem || (subItem === null || subItem === void 0 ? void 0 : subItem.service) === 'hcmwidgetbooking') && __jsx(WidgetBooking, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1398,\n          columnNumber: 131\n        }\n      }), 'contactForm' in subItem && __jsx(\"div\", {\n        style: {\n          backgroundColor: state !== null && state !== void 0 && (_state$page7 = state.page) !== null && _state$page7 !== void 0 && (_state$page7$sections = _state$page7.sections[index]) !== null && _state$page7$sections !== void 0 && (_state$page7$sections2 = _state$page7$sections.items[i]) !== null && _state$page7$sections2 !== void 0 && _state$page7$sections2.useBgColor ? state === null || state === void 0 ? void 0 : (_state$assets2 = state.assets) === null || _state$assets2 === void 0 ? void 0 : (_state$assets2$colors = _state$assets2.colors) === null || _state$assets2$colors === void 0 ? void 0 : (_state$assets2$colors2 = _state$assets2$colors.message) === null || _state$assets2$colors2 === void 0 ? void 0 : _state$assets2$colors2.main : 'white',\n          height: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1400,\n          columnNumber: 65\n        }\n      }, __jsx(ContactForm, {\n        formData: state.page.sections[index].items[i],\n        otherLangFormData: subItem.contactForm.labels,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1409,\n          columnNumber: 69\n        }\n      })), 'map' in subItem && __jsx(WrappedMap, {\n        googleMapURL: `https://maps.googleapis.com/maps/api/js?key=${process.env.GOOGLE_MAP_API_KEY}`,\n        loadingElement: __jsx(\"div\", {\n          style: {\n            height: `100%`\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1418,\n            columnNumber: 85\n          }\n        }),\n        containerElement: __jsx(\"div\", {\n          style: {\n            height: `350px`,\n            borderRadius: 10\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1420,\n            columnNumber: 73\n          }\n        }),\n        mapElement: __jsx(\"div\", {\n          style: {\n            height: `100%`\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1427,\n            columnNumber: 81\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1416,\n          columnNumber: 65\n        }\n      }), 'sliderOnly' in subItem && __jsx(SliderOnlyPreview, {\n        masterid: state.page.sections[index].items[i].masterid,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1431,\n          columnNumber: 65\n        }\n      }));\n    }))), __jsx(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1442,\n        columnNumber: 37\n      }\n    }));\n  }), state.langCode === state.defaultLang && state.page.sections.length > 0 ? __jsx(React.Fragment, null, (state === null || state === void 0 ? void 0 : (_state$page8 = state.page) === null || _state$page8 === void 0 ? void 0 : (_state$page8$sections = _state$page8.sections) === null || _state$page8$sections === void 0 ? void 0 : _state$page8$sections.length) > 0 && state.page.sections.map((section, i) => {\n    var _section$items;\n\n    return (section === null || section === void 0 ? void 0 : (_section$items = section.items) === null || _section$items === void 0 ? void 0 : _section$items.length) > 0 && __jsx(\"div\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1452,\n        columnNumber: 45\n      }\n    }, __jsx(IconButton, {\n      \"aria-label\": \"Edit item\",\n      color: \"primary\",\n      onClick: () => editSectionDialog(section),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1453,\n        columnNumber: 49\n      }\n    }, __jsx(BorderColorSharpIcon, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1458,\n        columnNumber: 53\n      }\n    })), __jsx(IconButton, {\n      \"aria-label\": \"Delete item\",\n      color: \"primary\",\n      onClick: () => {\n        setDeletedIndex(i);\n        setAlert(true);\n        setAlertDialogType('section');\n      },\n      className: state.langCode !== state.defaultLang ? classes.disabledSectionTxt : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1460,\n        columnNumber: 49\n      }\n    }, __jsx(DeleteIcon, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1474,\n        columnNumber: 53\n      }\n    })), __jsx(Container, {\n      style: {\n        pointerEvents: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1476,\n        columnNumber: 49\n      }\n    }, (section === null || section === void 0 ? void 0 : section.title) && __jsx(Grid, {\n      container: true,\n      spacing: 1,\n      justify: 'flex-start',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1478,\n        columnNumber: 57\n      }\n    }, __jsx(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1479,\n        columnNumber: 61\n      }\n    }, __jsx(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: section.title\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1480,\n        columnNumber: 65\n      }\n    }))), __jsx(Grid, {\n      container: true,\n      spacing: 1,\n      justify: 'flex-start',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1486,\n        columnNumber: 53\n      }\n    }, section.items.map((component, index) => {\n      var _state$assets3, _state$assets3$colors, _state$assets3$colors2, _state$assets4, _state$assets4$colors, _state$assets4$colors2;\n\n      return __jsx(Grid, {\n        style: {\n          minWidth: (component === null || component === void 0 ? void 0 : component.width) + '%'\n        },\n        item: true,\n        xs: getColumnWidth(component === null || component === void 0 ? void 0 : component.width),\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1489,\n          columnNumber: 65\n        }\n      }, (component === null || component === void 0 ? void 0 : component.type) === 'slider' && __jsx(Slider, {\n        sliderComponent: component,\n        sectionID: section.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1496,\n          columnNumber: 73\n        }\n      }), (component === null || component === void 0 ? void 0 : component.type) === 'slider-gallery' && __jsx(SliderGallery, {\n        sliderGallery: component,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1502,\n          columnNumber: 73\n        }\n      }), (component === null || component === void 0 ? void 0 : component.type) === 'card-slider' && __jsx(CardSlider, {\n        cardSlider: component,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1505,\n          columnNumber: 73\n        }\n      }), (component === null || component === void 0 ? void 0 : component.type) === 'video' && __jsx(Video, {\n        videoComponent: component,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1508,\n          columnNumber: 73\n        }\n      }), (component === null || component === void 0 ? void 0 : component.type) === 'sliderOnly' && __jsx(SliderOnlyPreview, {\n        masterid: component.masterid,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1511,\n          columnNumber: 73\n        }\n      }), (component === null || component === void 0 ? void 0 : component.type) === 'image' && __jsx(Image, {\n        imageComponent: component,\n        sectionType: section === null || section === void 0 ? void 0 : section.type,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1516,\n          columnNumber: 73\n        }\n      }), (component === null || component === void 0 ? void 0 : component.type) === 'paragraph' && __jsx(\"div\", {\n        style: {\n          backgroundColor: component !== null && component !== void 0 && component.useBgColor ? state === null || state === void 0 ? void 0 : (_state$assets3 = state.assets) === null || _state$assets3 === void 0 ? void 0 : (_state$assets3$colors = _state$assets3.colors) === null || _state$assets3$colors === void 0 ? void 0 : (_state$assets3$colors2 = _state$assets3$colors.message) === null || _state$assets3$colors2 === void 0 ? void 0 : _state$assets3$colors2.main : 'white',\n          height: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1522,\n          columnNumber: 73\n        }\n      }, __jsx(Paragraph, {\n        paragraph: component,\n        sectionID: section.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1531,\n          columnNumber: 77\n        }\n      })), (component === null || component === void 0 ? void 0 : component.type) === 'widgetbooking' && __jsx(WidgetBooking, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1538,\n          columnNumber: 73\n        }\n      }), (component === null || component === void 0 ? void 0 : component.type) === 'contactForm' && __jsx(\"div\", {\n        style: {\n          backgroundColor: component !== null && component !== void 0 && component.useBgColor ? state === null || state === void 0 ? void 0 : (_state$assets4 = state.assets) === null || _state$assets4 === void 0 ? void 0 : (_state$assets4$colors = _state$assets4.colors) === null || _state$assets4$colors === void 0 ? void 0 : (_state$assets4$colors2 = _state$assets4$colors.message) === null || _state$assets4$colors2 === void 0 ? void 0 : _state$assets4$colors2.main : 'white',\n          height: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1541,\n          columnNumber: 73\n        }\n      }, __jsx(ContactForm, {\n        formData: component,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1550,\n          columnNumber: 77\n        }\n      })), (component === null || component === void 0 ? void 0 : component.type) === 'map' && __jsx(WrappedMap, {\n        googleMapURL: `https://maps.googleapis.com/maps/api/js?key=${process.env.GOOGLE_MAP_API_KEY}`,\n        loadingElement: __jsx(\"div\", {\n          style: {\n            height: `100%`\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1557,\n            columnNumber: 81\n          }\n        }),\n        containerElement: __jsx(\"div\", {\n          style: {\n            height: `350px`,\n            borderRadius: 10\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1560,\n            columnNumber: 81\n          }\n        }),\n        mapElement: __jsx(\"div\", {\n          style: {\n            height: `100%`\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1568,\n            columnNumber: 81\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1554,\n          columnNumber: 73\n        }\n      }));\n    }))), __jsx(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1577,\n        columnNumber: 49\n      }\n    }));\n  }), __jsx(\"h3\", {\n    className: classes.centreContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1582,\n      columnNumber: 29\n    }\n  }, __jsx(\"span\", {\n    onClick: () => addSectionDialog(),\n    className: clsx({\n      [classes.cursorPointer]: true,\n      [classes.disabledSectionTxt]: state.langCode !== state.defaultLang ? true : false\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1583,\n      columnNumber: 33\n    }\n  }, \"Click to define Section\"))) : __jsx(\"h3\", {\n    className: classes.centreContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1596,\n      columnNumber: 25\n    }\n  }, __jsx(\"span\", {\n    onClick: () => addSectionDialog(),\n    className: clsx({\n      [classes.cursorPointer]: true,\n      [classes.disabledSectionTxt]: state.langCode !== state.defaultLang ? true : false\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1597,\n      columnNumber: 29\n    }\n  }, \"Click to define Section\")), __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1608,\n      columnNumber: 21\n    }\n  }))), renderDialog, isAlert && __jsx(AlertDialog, {\n    handleDelete: handleDelete,\n    alertDialogType: alertDialogType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1612,\n      columnNumber: 25\n    }\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    state: state.formReducer.pageBuilder\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  updateState: (stateType, stateName, value) => dispatch(updateState(stateType, stateName, value)),\n  pushToState: (stateType, stateName, value) => dispatch(pushToState(stateType, stateName, value)),\n  deleteFromState: (stateType, stateName, value) => dispatch(deleteFromState(stateType, stateName, value)),\n  setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Page);","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/steps/webpage/Page.js"],"names":["React","useCallback","useContext","useEffect","useState","Container","makeStyles","Box","BorderColorSharpIcon","DeleteIcon","IconButton","Grid","Typography","connect","updateState","pushToState","deleteFromState","setToState","Slider","Image","Paragraph","WidgetBooking","EditSection","AddSection","ContactForm","WrappedMap","SliderOnlyPreview","LanguageDropdown","AlertDialog","LoadingSpinner","SliderGallery","CardSlider","Video","WebCmsGlobal","useRouter","FIELDTYPE","isErrorMsg","OREST_ENDPOINT","OREST_UPLOAD","REQUEST_METHOD_CONST","toast","axios","Insert","ViewList","COLORS","DELETE_SUCCESS","clsx","now","array","useStyles","theme","centreContent","display","justifyContent","cursorPointer","cursor","color","langFormControl","minWidth","marginRight","spacing","marginTop","float","titleButton","marginLeft","borderRadius","disabledSectionTxt","pointerEvents","opacity","defaultProps","bgcolor","border","borderColor","Page","props","state","renderDialog","setRenderDialog","isAlert","setAlert","alertDialogType","setAlertDialogType","deletedIndex","setDeletedIndex","isDeleting","setIsDeleting","isRequestSend","setRequestSend","isLoaded","setIsLoaded","classes","router","companyId","query","companyID","GENERAL_SETTINGS","token","authToken","apiUrl","OREST_URL","endpoint","RAFILE","params","hotelrefno","Number","then","res","status","data","page","id","length","sections","isTemplate","previousStep","handleGenerateNewTemplate","updatedSections","revampedSections","section","updatedSection","item","items","itemIndex","indexOf","updatedItem","type","textGid","handleParagraphCopy","imageGid","handleImageCopy","sliderGid","handleSliderCopy","push","HCMITEMSLD_OPTION","url","SLASH","HCMITEMSLD","method","GET","headers","Authorization","gid","slider","getData","HCMITEMSLDINS_OPTIONS","POST","itemid","hcmItemId","insSlider","handleInsertData","HCMITEMIMG_OPTION","HCMITEMIMG","images","image","insertedImage","sliderID","FILEGET_OPTION","mid","file","downloadedFile","fileDownload","responseType","blob","Blob","imageUrl","STATIC_URL","replace","m","imageType","split","fileObject","File","lastModified","Date","imgtype","IMG","title","description","cta","orderno","sliderid","HCMITEMINS","imageInsert","binaryData","formData","FormData","append","name","uploadOptions","orsactive","masterid","uploadedFile","HCMITEMLANG","langId","langid","res1","success","retErr","error","errorMsg","position","POSITION","TOP_RIGHT","HCMITEMTXTPAR_OPTION","HCMITEMTXTPAR","paragraph","HCMITEM_OPTION","HCMITEMTXT","hcmitem","itemtext","hcmItemTxtPar","option","Promise","resv","response","catch","console","log","onAddSection","order","updatedPage","splice","resetRender","addSectionDialog","onEditSection","newSection","index","langCode","defaultLang","Object","keys","langsFile","updatedLangs","updatedItems","subItems","editSectionDialog","otherLangSection","handleDeleteSection","req","component","REQUEST_OPTIONS_VIEWLIST_HCMITEMSLD","chkselfish","deleteSlider","REQUEST_OPTIONS_DELETE_HCMITEMIMG","DELETE","deleteImage","REQUEST_OPTIONS_DELETE_HCMITEMTXTPAR","paragrapgh","deleteParagraph","booking","deleteBooking","all","isSuccess","map","r","updatedOtherLangs","lang","header","rej","sliderGID","REQUEST_OPTIONS_VIEWLIST_HCMITEMIMG","gids","d","LIST","DEL","response1","REQUEST_OPTIONS_DELETE_HCMITEMSLD","response2","msg","getColumnWidth","width","Math","floor","handleDelete","isDelete","handleLanguageChange","code","toLowerCase","handleSetLangContent","updatelangsFile","sectionIndex","REQUEST_OPTION_GET_IMAGE","img","getImageData","REQUEST_OPTION_GET_TEXT","text","getTextData","REQUEST_OPTION_GET_SLD","getSliderData","sliderGallery","cardSlider","Array","sliderImages","labels","isActive","label","contactForm","sliderOnly","i","REQUEST_OPTIONS_GET_HCMITEMIMG","sort","updatedSliderImages","secondary","minHeight","__html","subItem","backgroundColor","useBgColor","assets","colors","message","main","height","service","process","env","GOOGLE_MAP_API_KEY","mapStateToProps","formReducer","pageBuilder","mapDispatchToProps","dispatch","stateType","stateName","value"],"mappings":"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","sourcesContent":["//react imports\nimport React, { useCallback, useContext, useEffect, useState } from 'react'\n//material imports\nimport { Container } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Box from '@material-ui/core/Box'\nimport BorderColorSharpIcon from '@material-ui/icons/BorderColorSharp'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport IconButton from '@material-ui/core/IconButton'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n//redux imports\nimport { connect } from 'react-redux'\nimport { updateState, pushToState, deleteFromState, setToState } from '../../../../../state/actions'\n//custom  components imports\nimport Slider from '../../components/page/sections/slider/Slider'\nimport Image from '../../components/page/sections/image/Image'\nimport Paragraph from '../../components/page/sections/paragraph/Paragraph'\nimport WidgetBooking from '../../../../ibe/widget/booking'\nimport EditSection from '../../components/page/sections/EditSection'\nimport AddSection from '../../components/page/sections/AddSection'\nimport ContactForm from '../../components/page/sections/contact-form/ContactForm'\nimport WrappedMap from '../../components/page/sections/map/Map'\nimport SliderOnlyPreview from '../../components/page/sections/slider-only/Slider'\nimport LanguageDropdown from '../../components/language/LanguageDropdown'\nimport { AlertDialog } from '../../components/alert'\nimport LoadingSpinner from '../../../../LoadingSpinner'\nimport SliderGallery from '../../components/page/sections/slider-gallery/SliderGallery'\nimport CardSlider from '../../components/page/sections/card-type-slider/CardSlider'\nimport Video from '../../components/page/sections/video/Video'\n\nimport WebCmsGlobal from 'components/webcms-global'\nimport { useRouter } from 'next/router'\nimport {\n    FIELDTYPE,\n    isErrorMsg,\n    OREST_ENDPOINT,\n    OREST_UPLOAD,\n    REQUEST_METHOD_CONST,\n} from '../../../../../model/orest/constants'\nimport { toast } from 'react-toastify'\nimport axios from 'axios'\nimport { Insert, ViewList } from '@webcms/orest'\nimport { COLORS, DELETE_SUCCESS } from '../../constants'\nimport clsx from 'clsx'\nimport { now } from 'moment'\nimport {array} from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n    centreContent: {\n        display: 'flex',\n        justifyContent: 'center',\n    },\n    cursorPointer: {\n        cursor: 'pointer',\n        color: 'silver',\n    },\n    langFormControl: {\n        minWidth: 250,\n        marginRight: theme.spacing(1),\n        marginTop: theme.spacing(2),\n        float: 'right',\n    },\n    titleButton: {\n        marginLeft: theme.spacing(2),\n        marginTop: theme.spacing(3),\n        borderRadius: 20,\n    },\n    disabledSectionTxt: {\n        pointerEvents: 'none',\n        opacity: 0.5,\n    },\n}))\n\nconst defaultProps = {\n    bgcolor: 'background.paper',\n    border: 1,\n    borderColor: 'silver',\n}\n\nconst Page = (props) => {\n    const { state, deleteFromState, setToState, updateState } = props\n\n    const [renderDialog, setRenderDialog] = useState('')\n    const [isAlert, setAlert] = React.useState(false)\n    const [alertDialogType, setAlertDialogType] = useState('')\n    const [deletedIndex, setDeletedIndex] = useState('')\n    const [isDeleting, setIsDeleting] = useState(false)\n    const [isRequestSend, setRequestSend] = useState(false)\n    const [isLoaded, setIsLoaded] = useState(true)\n\n    const classes = useStyles()\n\n    const router = useRouter()\n    const companyId = router.query.companyID\n    const { GENERAL_SETTINGS, token } = useContext(WebCmsGlobal)\n    const authToken = token || router.query.authToken\n\n    useEffect(() => {\n        //getting web page from rafile\n        ViewList({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.RAFILE,\n            token: authToken,\n            params: {\n                hotelrefno: Number(companyId),\n                query: `filetype:WEBPAGE`,\n            },\n        }).then((res) => {\n            if (res.status === 200 && res.data && res.data.data) {\n                const page = {\n                    id: `page-${res.data.data.length + 1}`,\n                    sections: state.page.sections,\n                }\n                setToState('pageBuilder', ['page'], page)\n            }\n        })\n        if (state.isTemplate) {\n            state?.previousStep === 0 ? handleGenerateNewTemplate() : null\n        }\n    }, [])\n\n    const handleGenerateNewTemplate = async () => {\n        setIsLoaded(false)\n        let updatedSections = [...state.page.sections]\n        let revampedSections = []\n        for (let section of updatedSections) {\n            let updatedSection = { ...section }\n            for (let item of section.items) {\n                const itemIndex = section.items.indexOf(item)\n                const updatedItem = { ...item }\n                if (item?.type === 'paragraph') {\n                    const textGid = await handleParagraphCopy(item)\n                    updatedItem['gid'] = textGid\n                    updatedSection.items[itemIndex] = { ...updatedItem }\n                }\n                if (item?.type === 'image') {\n                    const imageGid = await handleImageCopy(item)\n                    updatedItem['gid'] = imageGid\n                    updatedSection.items[itemIndex] = { ...updatedItem }\n                }\n                if (item?.type === 'slider' || item?.type === 'slider-gallery' || item?.type === 'card-slider') {\n                    const sliderGid = await handleSliderCopy(item)\n                    updatedItem['gid'] = sliderGid\n                    updatedSection.items[itemIndex] = { ...updatedItem }\n                }\n            }\n            revampedSections.push(updatedSection)\n        }\n        setToState('pageBuilder', ['page', 'sections'], revampedSections)\n        setIsLoaded(true)\n    }\n\n    const handleSliderCopy = async (item) => {\n        const HCMITEMSLD_OPTION = {\n            url:\n                GENERAL_SETTINGS.OREST_URL +\n                OREST_ENDPOINT.SLASH +\n                OREST_ENDPOINT.HCMITEMSLD +\n                OREST_ENDPOINT.SLASH +\n                'view/list',\n            method: REQUEST_METHOD_CONST.GET,\n            headers: {\n                Authorization: `Bearer ${authToken}`,\n                'Content-Type': 'application/json',\n            },\n            params: {\n                hotelrefno: Number(companyId),\n                query: `gid::${item.gid}`,\n            },\n        }\n        const slider = await getData(HCMITEMSLD_OPTION)\n        const HCMITEMSLDINS_OPTIONS = {\n            url:\n                GENERAL_SETTINGS.OREST_URL +\n                OREST_ENDPOINT.SLASH +\n                OREST_ENDPOINT.HCMITEMSLD +\n                OREST_ENDPOINT.SLASH +\n                'ins',\n            method: REQUEST_METHOD_CONST.POST,\n            headers: {\n                Authorization: `Bearer ${authToken}`,\n                'Content-Type': 'application/json',\n            },\n            data: {\n                itemid: state.hcmItemId,\n                hotelrefno: Number(companyId),\n            },\n        }\n\n        const insSlider = await handleInsertData(HCMITEMSLDINS_OPTIONS)\n\n        const HCMITEMIMG_OPTION = {\n            url:\n                GENERAL_SETTINGS.OREST_URL +\n                OREST_ENDPOINT.SLASH +\n                OREST_ENDPOINT.HCMITEMIMG +\n                OREST_ENDPOINT.SLASH +\n                'view/list',\n            method: REQUEST_METHOD_CONST.GET,\n            headers: {\n                Authorization: `Bearer ${authToken}`,\n                'Content-Type': 'application/json',\n            },\n            params: {\n                hotelrefno: Number(companyId),\n                query: `sliderid::${slider[0].id}`,\n            },\n        }\n        const images = await getData(HCMITEMIMG_OPTION)\n        for (let image of images) {\n            const insertedImage = await handleImageCopy(image, insSlider?.id)\n        }\n        return insSlider?.gid || null\n    }\n\n    const handleImageCopy = async (item, sliderID) => {\n        const HCMITEMIMG_OPTION = {\n            url:\n                GENERAL_SETTINGS.OREST_URL +\n                OREST_ENDPOINT.SLASH +\n                OREST_ENDPOINT.HCMITEMIMG +\n                OREST_ENDPOINT.SLASH +\n                'view/list',\n            method: REQUEST_METHOD_CONST.GET,\n            headers: {\n                Authorization: `Bearer ${authToken}`,\n                'Content-Type': 'application/json',\n            },\n            params: {\n                hotelrefno: Number(companyId),\n                query: `gid::${item.gid}`,\n            },\n        }\n        const image = await getData(HCMITEMIMG_OPTION)\n        if (image?.length > 0) {\n            const FILEGET_OPTION = {\n                url:\n                    GENERAL_SETTINGS.OREST_URL +\n                    OREST_ENDPOINT.SLASH +\n                    OREST_ENDPOINT.RAFILE +\n                    OREST_ENDPOINT.SLASH +\n                    'view/list',\n                method: REQUEST_METHOD_CONST.GET,\n                headers: {\n                    Authorization: `Bearer ${authToken}`,\n                    'Content-Type': '0000510',\n                },\n                params: {\n                    hotelrefno: Number(companyId),\n                    query: `masterid::${image[0].mid}`,\n                },\n            }\n            const file = await getData(FILEGET_OPTION)\n            if (file.length > 0) {\n                const downloadedFile = await fileDownload({\n                    url: `${GENERAL_SETTINGS.OREST_URL}/tools/file/download`,\n                    headers: {\n                        Authorization: `Bearer ${authToken}`,\n                    },\n                    method: 'get',\n                    responseType: 'arraybuffer',\n                    params: {\n                        gid: file[0]?.gid,\n                        hotelrefno: companyId,\n                    },\n                })\n                let blob = new Blob([downloadedFile?.data], { type: downloadedFile?.data?.type })\n                const imageUrl =\n                    GENERAL_SETTINGS.STATIC_URL + file[0]?.url.replace('/var/otello', '').replace('/public', '')\n                const m = imageUrl.replace(/^.*[\\\\\\/]/, '')\n                const imageType = m.split('.')[1]\n                const fileObject = new File([blob], m, {\n                    lastModified: new Date(now()),\n                    type: 'image/' + imageType,\n                })\n                let data = {}\n                sliderID\n                    ? (data = {\n                          itemid: state.hcmItemId,\n                          imgtype: FIELDTYPE.IMG,\n                          title: image[0]?.title,\n                          description: image[0]?.description,\n                          cta: image[0]?.cta,\n                          orderno: 1,\n                          hotelrefno: Number(companyId),\n                          sliderid: sliderID,\n                      })\n                    : (data = {\n                          itemid: state.hcmItemId,\n                          imgtype: FIELDTYPE.IMG,\n                          title: image[0]?.title,\n                          description: image[0]?.description,\n                          cta: image[0]?.cta,\n                          orderno: 1,\n                          hotelrefno: Number(companyId),\n                      })\n                const HCMITEMINS = {\n                    url:\n                        GENERAL_SETTINGS.OREST_URL +\n                        OREST_ENDPOINT.SLASH +\n                        OREST_ENDPOINT.HCMITEMIMG +\n                        OREST_ENDPOINT.SLASH +\n                        'ins',\n                    method: REQUEST_METHOD_CONST.POST,\n                    headers: {\n                        Authorization: `Bearer ${authToken}`,\n                        'Content-Type': 'application/json',\n                    },\n                    data: data,\n                }\n                const imageInsert = await handleInsertData(HCMITEMINS)\n                if (imageInsert) {\n                    let binaryData = []\n                    binaryData.push(fileObject)\n                    let formData = new FormData()\n                    formData.append('file', new Blob(binaryData, { type: fileObject.type }), fileObject.name)\n                    const uploadOptions = {\n                        url: GENERAL_SETTINGS.OREST_URL + OREST_ENDPOINT.SLASH + OREST_ENDPOINT.RAFILE + OREST_UPLOAD,\n                        method: 'post',\n                        headers: {\n                            Authorization: `Bearer ${authToken}`,\n                            'Content-Type': 'multipart/form-data',\n                        },\n                        params: {\n                            orsactive: true,\n                            masterid: imageInsert?.mid,\n                            hotelrefno: companyId,\n                        },\n                        data: formData,\n                    }\n                    const uploadedFile = await handleInsertData(uploadOptions)\n                    if (uploadedFile?.url) {\n                        return imageInsert?.gid\n                    }\n                    return null\n                }\n            }\n        }\n    }\n\n    useEffect(() => {\n        if (state?.hcmItemId) {\n            setRequestSend(true)\n            ViewList({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: OREST_ENDPOINT.HCMITEMLANG,\n                token: authToken,\n                params: {\n                    hotelrefno: Number(companyId),\n                    query: `langid::${state?.langId},itemid::${state?.hcmItemId}`,\n                },\n            }).then((res) => {\n                if (res.status === 200) {\n                    if (res?.data?.data?.length === 0) {\n                        // insert hcmitemlang for default language\n                        Insert({\n                            apiUrl: GENERAL_SETTINGS.OREST_URL,\n                            endpoint: OREST_ENDPOINT.HCMITEMLANG,\n                            token: authToken,\n                            data: {\n                                itemid: state?.hcmItemId,\n                                hotelrefno: Number(companyId),\n                                langid: state?.langId,\n                            },\n                        }).then((res1) => {\n                            if (res1.status === 200) {\n                                if (res?.data?.success && res?.data?.data) {\n                                    setRequestSend(false)\n                                }\n                            } else {\n                                const retErr = isErrorMsg(res1)\n                                toast.error(retErr.errorMsg, {\n                                    position: toast.POSITION.TOP_RIGHT,\n                                })\n                            }\n                        })\n                    } else {\n                        setRequestSend(false)\n                    }\n                } else {\n                    setRequestSend(false)\n                    const retErr = isErrorMsg(res)\n                    toast.error(retErr.errorMsg, {\n                        position: toast.POSITION.TOP_RIGHT,\n                    })\n                }\n            })\n        }\n    }, [state?.hcmItemId])\n\n    const handleParagraphCopy = async (item) => {\n        const HCMITEMTXTPAR_OPTION = {\n            url:\n                GENERAL_SETTINGS.OREST_URL +\n                OREST_ENDPOINT.SLASH +\n                OREST_ENDPOINT.HCMITEMTXTPAR +\n                OREST_ENDPOINT.SLASH +\n                'view/list',\n            method: REQUEST_METHOD_CONST.GET,\n            headers: {\n                Authorization: `Bearer ${authToken}`,\n                'Content-Type': 'application/json',\n            },\n            params: {\n                hotelrefno: Number(companyId),\n                query: `gid::${item.gid}`,\n            },\n        }\n        const paragraph = await getData(HCMITEMTXTPAR_OPTION)\n        if (paragraph?.length > 0) {\n            const HCMITEM_OPTION = {\n                url:\n                    GENERAL_SETTINGS.OREST_URL +\n                    OREST_ENDPOINT.SLASH +\n                    OREST_ENDPOINT.HCMITEMTXT +\n                    OREST_ENDPOINT.SLASH +\n                    'ins',\n                method: REQUEST_METHOD_CONST.POST,\n                headers: {\n                    Authorization: `Bearer ${authToken}`,\n                    'Content-Type': 'application/json',\n                },\n                data: {\n                    itemid: state?.hcmItemId,\n                    hotelrefno: Number(companyId),\n                },\n            }\n            const hcmitem = await handleInsertData(HCMITEM_OPTION)\n            const HCMITEMTXTPAR_OPTION = {\n                url:\n                    GENERAL_SETTINGS.OREST_URL +\n                    OREST_ENDPOINT.SLASH +\n                    OREST_ENDPOINT.HCMITEMTXTPAR +\n                    OREST_ENDPOINT.SLASH +\n                    'ins',\n                method: REQUEST_METHOD_CONST.POST,\n                headers: {\n                    Authorization: `Bearer ${authToken}`,\n                    'Content-Type': 'application/json',\n                },\n                data: {\n                    itemid: hcmitem?.id,\n                    itemtext: paragraph[0]?.itemtext,\n                    hotelrefno: Number(companyId),\n                },\n            }\n            const hcmItemTxtPar = await handleInsertData(HCMITEMTXTPAR_OPTION)\n            return hcmItemTxtPar?.gid || null\n        }\n    }\n\n    const getData = (option) => {\n        return new Promise(async (resv) => {\n            return await axios(option)\n                .then(async (response) => {\n                    if (response.status === 200) {\n                        if (response?.data?.data) resv(response.data.data)\n                    } else {\n                        const retErr = isErrorMsg(response)\n                        toast.error(retErr.errorMsg, {\n                            position: toast.POSITION.TOP_RIGHT,\n                        })\n                    }\n                })\n                .catch((error) => {\n                    console.log(error)\n                    resv(error.response || { status: 0 })\n                })\n        })\n    }\n\n    const handleInsertData = (option) => {\n        return new Promise(async (resv) => {\n            return await axios(option)\n                .then(async (response) => {\n                    if (response.status === 200) {\n                        if (response?.data?.data) resv(response.data.data)\n                    } else {\n                        const retErr = isErrorMsg(response)\n                        toast.error(retErr.errorMsg, {\n                            position: toast.POSITION.TOP_RIGHT,\n                        })\n                    }\n                })\n                .catch((error) => {\n                    console.log(error)\n                    resv(error.response || { status: 0 })\n                })\n        })\n    }\n\n    const fileDownload = (option) => {\n        return new Promise(async (resv) => {\n            return await axios(option)\n                .then(async (response) => {\n                    if (response.status === 200) {\n                        resv(response)\n                    } else {\n                        const retErr = isErrorMsg(response)\n                        toast.error(retErr.errorMsg, {\n                            position: toast.POSITION.TOP_RIGHT,\n                        })\n                    }\n                })\n                .catch((error) => {\n                    console.log(error)\n                    resv(error.response || { status: 0 })\n                })\n        })\n    }\n\n    const onAddSection = (section, order) => {\n        const updatedPage = { ...state?.page }\n        updatedPage?.sections?.splice(order - 1, 0, section)\n        updateState('pageBuilder', 'page', updatedPage);\n    }\n\n    const resetRender = () => {\n        setRenderDialog('')\n    }\n\n    const addSectionDialog = () => {\n        setRenderDialog(<AddSection onAddSection={onAddSection} resetRender={resetRender} />)\n    }\n\n    const onEditSection = (newSection, index, order) => {\n        if (state.langCode === state.defaultLang) {\n            let updatedSections = [...state.page.sections]\n            updatedSections.splice(index, 1)\n            updatedSections.splice(order - 1, 0, newSection)\n            setToState('pageBuilder', ['page', 'sections'], updatedSections)\n        } else {\n            if (Object.keys(state.langsFile[state.langCode]).length > 0) {\n                const updatedLangs = { ...state.langsFile }\n                const updatedItems = state.langsFile[state.langCode].items\n                const items = {\n                    title: newSection?.title,\n                    subItems: newSection.items,\n                }\n                updatedItems[index] = items\n                updatedLangs[state.langCode].items = updatedItems\n                updateState('pageBuilder', 'langsFile', updatedLangs)\n            }\n        }\n    }\n\n    const editSectionDialog = (section, otherLangSection) => {\n        setRenderDialog(\n            <EditSection\n                section={section}\n                onEditSection={onEditSection}\n                dialogTitle=\"Edit Section\"\n                isDialogOpen={true}\n                resetRender={resetRender}\n                otherLangSection={otherLangSection}\n            />\n        )\n    }\n\n    const handleDeleteSection = async (index) => {\n        const section = state.page.sections[index]\n        setIsDeleting(true)\n        let req = []\n        for (let component of section.items) {\n            if (component.type === 'slider' || component.type === 'slider-gallery' || component.type === 'card-slider') {\n                const REQUEST_OPTIONS_VIEWLIST_HCMITEMSLD = {\n                    url: GENERAL_SETTINGS.OREST_URL + '/hcmitemsld/view/list',\n                    method: 'get',\n                    headers: {\n                        Authorization: `Bearer ${authToken}`,\n                        'Content-Type': 'application/json',\n                    },\n                    params: {\n                        query: `gid:${component.gid}`,\n                        chkselfish: false,\n                        hotelrefno: Number(companyId),\n                    },\n                }\n                const slider = await deleteSlider(REQUEST_OPTIONS_VIEWLIST_HCMITEMSLD, component.gid)\n                req.push(slider)\n            }\n            if (component.type === 'image') {\n                const REQUEST_OPTIONS_DELETE_HCMITEMIMG = {\n                    url:\n                        GENERAL_SETTINGS.OREST_URL +\n                        OREST_ENDPOINT.SLASH +\n                        OREST_ENDPOINT.HCMITEMIMG +\n                        OREST_ENDPOINT.SLASH +\n                        'del/' +\n                        component.gid,\n                    method: REQUEST_METHOD_CONST.DELETE,\n                    headers: {\n                        Authorization: `Bearer ${authToken}`,\n                        'Content-Type': 'application/json',\n                    },\n                    params: {\n                        hotelrefno: Number(companyId),\n                    },\n                }\n                const image = await deleteImage(REQUEST_OPTIONS_DELETE_HCMITEMIMG)\n                req.push(image)\n            }\n            if (component.type === 'paragraph') {\n                const REQUEST_OPTIONS_DELETE_HCMITEMTXTPAR = {\n                    url:\n                        GENERAL_SETTINGS.OREST_URL +\n                        OREST_ENDPOINT.SLASH +\n                        OREST_ENDPOINT.HCMITEMTXTPAR +\n                        OREST_ENDPOINT.SLASH +\n                        'del/' +\n                        component.gid,\n                    method: REQUEST_METHOD_CONST.DELETE,\n                    headers: {\n                        Authorization: `Bearer ${authToken}`,\n                        'Content-Type': 'application/json',\n                    },\n                    params: {\n                        hotelrefno: Number(companyId),\n                    },\n                }\n                const paragrapgh = await deleteParagraph(REQUEST_OPTIONS_DELETE_HCMITEMTXTPAR)\n                req.push(paragrapgh)\n            }\n            if (component.type === 'widgetbooking') {\n                const booking = await deleteBooking()\n                req.push(booking)\n            }\n        }\n        await Promise.all(req).then(async (res) => {\n            let isSuccess = true\n            await res.map((r) => {\n                if (r.status !== 200) {\n                    isSuccess = false\n                    return\n                }\n            })\n            setIsDeleting(false)\n            if (isSuccess) {\n                deleteFromState('pageBuilder', ['page', 'sections'], [index, 1])\n                const updatedOtherLangs = state.langsFile\n                for (const lang in updatedOtherLangs) {\n                    if (updatedOtherLangs[lang].items && updatedOtherLangs[lang].items.length > 0) {\n                        updatedOtherLangs[lang].items.splice(index, 1)\n                    }\n                }\n                updateState('pageBuilder', 'langsFile', updatedOtherLangs)\n                toast.success(DELETE_SUCCESS, {\n                    position: toast.POSITION.TOP_RIGHT,\n                })\n            } else {\n                toast.error('Something went wrong', {\n                    position: toast.POSITION.TOP_RIGHT,\n                })\n            }\n        })\n    }\n\n    const deleteImage = async (header) => {\n        return new Promise(async (resv, rej) => {\n            return await axios(header)\n                .then(async (response) => {\n                    if (response.status === 200 && response.data && response.data.success) {\n                        resv(response)\n                    } else {\n                        const retErr = isErrorMsg(response)\n                        toast.error(retErr.errorMsg, {\n                            position: toast.POSITION.TOP_RIGHT,\n                        })\n                    }\n                })\n                .catch((error) => {\n                    console.log(error)\n                    resv(error.response || { status: 0 })\n                })\n        })\n    }\n\n    const deleteSlider = async (header, sliderGID) => {\n        return new Promise(async (resv, rej) => {\n            return await axios(header)\n                .then(async (response) => {\n                    if (response.status === 200) {\n                        if (response?.data?.data?.length) {\n                            const REQUEST_OPTIONS_VIEWLIST_HCMITEMIMG = {\n                                url: GENERAL_SETTINGS.OREST_URL + '/hcmitemimg/view/list',\n                                method: 'get',\n                                headers: {\n                                    Authorization: `Bearer ${authToken}`,\n                                    'Content-Type': 'application/json',\n                                },\n                                params: {\n                                    query: `sliderid:${response.data.data[0].id}`,\n                                    chkselfish: false,\n                                    hotelrefno: Number(companyId),\n                                },\n                            }\n                            return await axios(REQUEST_OPTIONS_VIEWLIST_HCMITEMIMG).then(async (res) => {\n                                let gids = []\n                                let data = []\n                                await res.data.data.map((d) => {\n                                    data.push(d)\n                                })\n                                for (let gid in data) {\n                                    gids.push({ gid: data[gid].gid })\n                                }\n                                const REQUEST_OPTIONS_DELETE_HCMITEMIMG = {\n                                    url:\n                                        GENERAL_SETTINGS.OREST_URL +\n                                        OREST_ENDPOINT.SLASH +\n                                        OREST_ENDPOINT.HCMITEMIMG +\n                                        OREST_ENDPOINT.SLASH +\n                                        OREST_ENDPOINT.LIST +\n                                        OREST_ENDPOINT.SLASH +\n                                        OREST_ENDPOINT.DEL,\n                                    method: REQUEST_METHOD_CONST.DELETE,\n                                    headers: {\n                                        Authorization: `Bearer ${authToken}`,\n                                        'Content-Type': 'application/json',\n                                    },\n                                    data: gids,\n                                }\n                                return await axios(REQUEST_OPTIONS_DELETE_HCMITEMIMG).then(async (response1) => {\n                                    if (response1.status === 200 && response1.data && response1.data.success) {\n                                        const REQUEST_OPTIONS_DELETE_HCMITEMSLD = {\n                                            url:\n                                                GENERAL_SETTINGS.OREST_URL +\n                                                OREST_ENDPOINT.SLASH +\n                                                OREST_ENDPOINT.HCMITEMSLD +\n                                                OREST_ENDPOINT.SLASH +\n                                                'del/' +\n                                                sliderGID,\n                                            method: REQUEST_METHOD_CONST.DELETE,\n                                            headers: {\n                                                Authorization: `Bearer ${authToken}`,\n                                                'Content-Type': 'application/json',\n                                            },\n                                            params: {\n                                                hotelrefno: Number(companyId),\n                                            },\n                                        }\n                                        return await axios(REQUEST_OPTIONS_DELETE_HCMITEMSLD).then(\n                                            async (response2) => {\n                                                if (\n                                                    response2.status === 200 &&\n                                                    response2.data &&\n                                                    response2.data.success\n                                                ) {\n                                                    resv(response2)\n                                                } else {\n                                                    const retErr = isErrorMsg(response2)\n                                                    toast.error(retErr.errorMsg, {\n                                                        position: toast.POSITION.TOP_RIGHT,\n                                                    })\n                                                }\n                                            }\n                                        )\n                                    } else {\n                                        const retErr = isErrorMsg(response1)\n                                        toast.error(retErr.errorMsg, {\n                                            position: toast.POSITION.TOP_RIGHT,\n                                        })\n                                    }\n                                })\n                            })\n                        } else {\n                            resv(response)\n                        }\n                    } else {\n                        const retErr = isErrorMsg(response)\n                        toast.error(retErr.errorMsg, {\n                            position: toast.POSITION.TOP_RIGHT,\n                        })\n                    }\n                })\n                .catch((error) => {\n                    console.log(error)\n                    resv(error.response || { status: 0 })\n                })\n        })\n    }\n\n    const deleteParagraph = async (header) => {\n        return new Promise(async (resv, rej) => {\n            return await axios(header)\n                .then(async (response) => {\n                    if (response.status === 200 && response.data && response.data.success) {\n                        resv(response)\n                    } else {\n                        const retErr = isErrorMsg(response)\n                        toast.error(retErr.errorMsg, {\n                            position: toast.POSITION.TOP_RIGHT,\n                        })\n                    }\n                })\n                .catch((error) => {\n                    console.log(error)\n                    resv(error.response || { status: 0 })\n                })\n        })\n    }\n\n    const deleteBooking = async () => {\n        return new Promise(async (resv, rej) => {\n            resv({\n                status: 200,\n                msg: 'delete successfully',\n            })\n        })\n    }\n\n    const getColumnWidth = (width) => {\n        return Math.floor((width / 100) * 12)\n    }\n\n    const handleDelete = (type, isDelete) => {\n        if (isDelete) {\n            handleDeleteSection(deletedIndex)\n        }\n        setAlert(false)\n    }\n\n    const handleLanguageChange = useCallback(\n        (lang) => {\n            setIsDeleting(true)\n            ViewList({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: OREST_ENDPOINT.HCMITEMLANG,\n                token: authToken,\n                params: {\n                    hotelrefno: Number(companyId),\n                    query: `langid::${lang?.id},itemid::${state?.hcmItemId}`,\n                },\n            }).then((res) => {\n                if (res.status === 200) {\n                    if (res?.data?.data?.length === 0) {\n                        if (lang?.code?.toLowerCase() !== state?.defaultLang) {\n                            //insert specific language into hcmitemlang\n                            Insert({\n                                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                                endpoint: OREST_ENDPOINT.HCMITEMLANG,\n                                token: authToken,\n                                data: {\n                                    itemid: state.hcmItemId,\n                                    hotelrefno: Number(companyId),\n                                    langid: lang?.id,\n                                },\n                            }).then((res1) => {\n                                setIsDeleting(false)\n                                if (res1.status === 200) {\n                                    if (res?.data?.success && res?.data?.data) {\n                                        handleSetLangContent(lang)\n                                    }\n                                } else {\n                                    const retErr = isErrorMsg(res1)\n                                    toast.error(retErr.errorMsg, {\n                                        position: toast.POSITION.TOP_RIGHT,\n                                    })\n                                }\n                            })\n                        } else {\n                            setIsDeleting(false)\n                        }\n                    } else {\n                        setIsDeleting(false)\n                        handleSetLangContent(lang)\n                    }\n                } else {\n                    setIsDeleting(false)\n                    const retErr = isErrorMsg(res)\n                    toast.error(retErr.errorMsg, {\n                        position: toast.POSITION.TOP_RIGHT,\n                    })\n                }\n            })\n        },\n        [state.langId]\n    )\n\n    const handleSetLangContent = async (lang) => {\n        const code = lang?.code.toLowerCase()\n        updateState('pageBuilder', 'langCode', code)\n        updateState('pageBuilder', 'langId', lang?.id)\n        const updatelangsFile = { ...state.langsFile }\n        if (code !== state.defaultLang) {\n            if (!updatelangsFile[code]) {\n                if (state.page.sections.length > 0) {\n                    updatelangsFile[code] = {\n                        items: [],\n                    }\n                    for (let section of state.page.sections) {\n                        const sectionIndex = state.page.sections.indexOf(section)\n                        updatelangsFile[code].items.push({\n                            title: section?.title,\n                            subItems: [],\n                        })\n                        for (let item of section.items) {\n                            const itemIndex = section.items.indexOf(item)\n                            if (item.type === 'image') {\n                                const REQUEST_OPTION_GET_IMAGE = {\n                                    url: GENERAL_SETTINGS.OREST_URL + '/' + OREST_ENDPOINT.HCMITEMIMG + '/view/list',\n                                    method: 'get',\n                                    headers: {\n                                        Authorization: `Bearer ${authToken}`,\n                                        'Content-Type': 'application/json',\n                                    },\n                                    params: {\n                                        hotelrefno: Number(companyId),\n                                        chkselfish: false,\n                                        query: `gid:${item.gid}`,\n                                    },\n                                }\n                                const img = await getImageData(REQUEST_OPTION_GET_IMAGE)\n                                updatelangsFile[code].items[sectionIndex].subItems[itemIndex] = {\n                                    image: {\n                                        title: img.title,\n                                        description: img.description,\n                                    },\n                                }\n                            }\n                            if (item.type === 'paragraph') {\n                                const REQUEST_OPTION_GET_TEXT = {\n                                    url: GENERAL_SETTINGS.OREST_URL + '/' + OREST_ENDPOINT.HCMITEMTXTPAR + '/view/list',\n                                    method: 'get',\n                                    headers: {\n                                        Authorization: `Bearer ${authToken}`,\n                                        'Content-Type': 'application/json',\n                                    },\n                                    params: {\n                                        hotelrefno: Number(companyId),\n                                        chkselfish: false,\n                                        query: `gid:${item.gid}`,\n                                    },\n                                }\n                                const text = await getTextData(REQUEST_OPTION_GET_TEXT)\n                                updatelangsFile[code].items[sectionIndex].subItems[itemIndex] = {\n                                    text: text,\n                                }\n                            }\n                            if (item.type === 'slider-gallery' || item.type === 'card-slider') {\n                                const REQUEST_OPTION_GET_SLD = {\n                                    url: GENERAL_SETTINGS.OREST_URL + '/' + OREST_ENDPOINT.HCMITEMSLD + '/view/list',\n                                    method: 'get',\n                                    headers: {\n                                        Authorization: `Bearer ${authToken}`,\n                                        'Content-Type': 'application/json',\n                                    },\n                                    params: {\n                                        hotelrefno: Number(companyId),\n                                        chkselfish: false,\n                                        query: `gid:${item.gid}`,\n                                    },\n                                }\n                                const slider = await getSliderData(REQUEST_OPTION_GET_SLD)\n                                if (item.type === 'slider-gallery') {\n                                    updatelangsFile[code].items[sectionIndex].subItems[itemIndex] = {\n                                        sliderGallery: slider,\n                                    }\n                                } else {\n                                    updatelangsFile[code].items[sectionIndex].subItems[itemIndex] = {\n                                        cardSlider: slider,\n                                    }\n                                }\n                            }\n                            if (item.type === 'slider') {\n                                const REQUEST_OPTION_GET_SLD = {\n                                    url: GENERAL_SETTINGS.OREST_URL + '/' + OREST_ENDPOINT.HCMITEMSLD + '/view/list',\n                                    method: 'get',\n                                    headers: {\n                                        Authorization: `Bearer ${authToken}`,\n                                        'Content-Type': 'application/json',\n                                    },\n                                    params: {\n                                        hotelrefno: Number(companyId),\n                                        chkselfish: false,\n                                        query: `gid:${item.gid}`,\n                                    },\n                                }\n                                const slider = await getSliderData(REQUEST_OPTION_GET_SLD)\n                                if (slider instanceof Array) {\n                                    updatelangsFile[code].items[sectionIndex].subItems[itemIndex] = {\n                                        sliderImages: slider,\n                                    }\n                                } else {\n                                    if (slider instanceof Object) {\n                                        updatelangsFile[code].items[sectionIndex].subItems[itemIndex] = {\n                                            slider: slider,\n                                        }\n                                    }\n                                }\n                            }\n                            if (item.type === 'widgetbooking') {\n                                updatelangsFile[code].items[sectionIndex].subItems[itemIndex] = {\n                                    booking: true,\n                                }\n                            }\n                            if (item.type === 'contactForm') {\n                                let labels = []\n                                if (item.gid && item.gid.length > 0) {\n                                    for (const gid of item.gid) {\n                                        gid.isActive &&\n                                            labels.push({\n                                                id: gid.id,\n                                                label: gid.label,\n                                            })\n                                    }\n                                }\n                                updatelangsFile[code].items[sectionIndex].subItems[itemIndex] = {\n                                    contactForm: {\n                                        labels: labels,\n                                    },\n                                }\n                            }\n                            if (item.type === 'map') {\n                                updatelangsFile[code].items[sectionIndex].subItems[itemIndex] = {\n                                    map: true,\n                                }\n                            }\n                            if (item.type === 'sliderOnly') {\n                                updatelangsFile[code].items[sectionIndex].subItems[itemIndex] = {\n                                    sliderOnly: true,\n                                }\n                            }\n                        }\n                        updateState('pageBuilder', 'langsFile', updatelangsFile)\n                    }\n                }\n\n            } else {\n                if (updatelangsFile[code].items.length !== state.page.sections) {\n                    for(let i = 0; i < state.page.sections.length; i++ ) {\n                        if (i > updatelangsFile[code]?.items?.length - 1) {\n                            updatelangsFile[code].items.push({\n                                title: state?.page?.sections[i]?.title,\n                                subItems: [],\n                            })\n                        } else {\n                            updatelangsFile[code].items[i].subItems.length = state.page.sections[i].items.length;\n                        }\n                        for (let item of state.page.sections[i].items) {\n                            const itemIndex = state.page.sections[i].items.indexOf(item);\n                            if (item.type === 'image') {\n                                const REQUEST_OPTION_GET_IMAGE = {\n                                    url: GENERAL_SETTINGS.OREST_URL + '/' + OREST_ENDPOINT.HCMITEMIMG + '/view/list',\n                                    method: 'get',\n                                    headers: {\n                                        Authorization: `Bearer ${authToken}`,\n                                        'Content-Type': 'application/json',\n                                    },\n                                    params: {\n                                        hotelrefno: Number(companyId),\n                                        chkselfish: false,\n                                        query: `gid:${item.gid}`,\n                                    },\n                                }\n                                const img = await getImageData(REQUEST_OPTION_GET_IMAGE);\n                                if (!updatelangsFile[code]?.items[i]?.subItems[itemIndex]?.image) {\n                                    updatelangsFile[code].items[i].subItems[itemIndex] = {\n                                        image: {\n                                            title: img.title,\n                                            description: img.description,\n                                        },\n                                    }\n                                }\n                            }\n                            if (item.type === 'paragraph') {\n                                const REQUEST_OPTION_GET_TEXT = {\n                                    url: GENERAL_SETTINGS.OREST_URL + '/' + OREST_ENDPOINT.HCMITEMTXTPAR + '/view/list',\n                                    method: 'get',\n                                    headers: {\n                                        Authorization: `Bearer ${authToken}`,\n                                        'Content-Type': 'application/json',\n                                    },\n                                    params: {\n                                        hotelrefno: Number(companyId),\n                                        chkselfish: false,\n                                        query: `gid:${item.gid}`,\n                                    },\n                                }\n                                const text = await getTextData(REQUEST_OPTION_GET_TEXT);\n                                if (!updatelangsFile[code]?.items[i]?.subItems[itemIndex]?.text) {\n                                    updatelangsFile[code].items[i].subItems[itemIndex] = {\n                                        text: text,\n                                    }\n                                }\n                            }\n                            if (item.type === 'slider-gallery' || item.type === 'card-slider') {\n                                const REQUEST_OPTION_GET_SLD = {\n                                    url: GENERAL_SETTINGS.OREST_URL + '/' + OREST_ENDPOINT.HCMITEMSLD + '/view/list',\n                                    method: 'get',\n                                    headers: {\n                                        Authorization: `Bearer ${authToken}`,\n                                        'Content-Type': 'application/json',\n                                    },\n                                    params: {\n                                        hotelrefno: Number(companyId),\n                                        chkselfish: false,\n                                        query: `gid:${item.gid}`,\n                                    },\n                                }\n                                const slider = await getSliderData(REQUEST_OPTION_GET_SLD)\n                                if (item.type === 'slider-gallery') {\n                                    if (!updatelangsFile[code]?.items[i]?.subItems[itemIndex]?.sliderGallery) {\n                                        updatelangsFile[code].items[i].subItems[itemIndex] = {\n                                            sliderGallery: slider,\n                                        }\n                                    }\n                                } else {\n                                    if (!updatelangsFile[code]?.items[i]?.subItems[itemIndex]?.cardSlider) {\n                                        updatelangsFile[code].items[i].subItems[itemIndex] = {\n                                            cardSlider: slider,\n                                        }\n                                    }\n                                }\n                            }\n                            if (item.type === 'slider') {\n                                const REQUEST_OPTION_GET_SLD = {\n                                    url: GENERAL_SETTINGS.OREST_URL + '/' + OREST_ENDPOINT.HCMITEMSLD + '/view/list',\n                                    method: 'get',\n                                    headers: {\n                                        Authorization: `Bearer ${authToken}`,\n                                        'Content-Type': 'application/json',\n                                    },\n                                    params: {\n                                        hotelrefno: Number(companyId),\n                                        chkselfish: false,\n                                        query: `gid:${item.gid}`,\n                                    },\n                                }\n                                const slider = await getSliderData(REQUEST_OPTION_GET_SLD)\n                                if (slider instanceof Array) {\n                                    if (!updatelangsFile[code]?.items[i]?.subItems[itemIndex]?.sliderImages) {\n                                        updatelangsFile[code].items[i].subItems[itemIndex] = {\n                                            sliderImages: slider,\n                                        }\n                                    }\n                                } else {\n                                    if (slider instanceof Object) {\n                                        if (!updatelangsFile[code]?.items[i]?.subItems[itemIndex]?.slider) {\n                                            updatelangsFile[code].items[i].subItems[itemIndex] = {\n                                                slider: slider,\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            if (item.type === 'widgetbooking') {\n                                if (!updatelangsFile[code]?.items[i]?.subItems[itemIndex]?.booking) {\n                                    updatelangsFile[code].items[i].subItems[itemIndex] = {\n                                        booking: true,\n                                    }\n                                }\n                            }\n                            if (item.type === 'map') {\n                                if (!updatelangsFile[code]?.items[i]?.subItems[itemIndex]?.map) {\n                                    updatelangsFile[code].items[i].subItems[itemIndex] = {\n                                        map: true,\n                                    }\n                                }\n                            }\n                            if (item.type === 'sliderOnly') {\n                                if (!updatelangsFile[code]?.items[i]?.subItems[itemIndex]?.sliderOnly) {\n                                    updatelangsFile[code].items[i].subItems[itemIndex] = {\n                                        sliderOnly: true,\n                                    }\n                                }\n                            }\n                            if (item.type === 'contactForm') {\n                                let labels = []\n                                if (item.gid && item.gid.length > 0) {\n                                    for (const gid of item.gid) {\n                                        gid.isActive &&\n                                        labels.push({\n                                            id: gid.id,\n                                            label: gid.label,\n                                        })\n                                    }\n                                }\n                                if (!updatelangsFile[code]?.items[i]?.subItems[itemIndex]?.contactForm) {\n                                    updatelangsFile[code].items[i].subItems[itemIndex] = {\n                                        contactForm: {\n                                            labels: labels,\n                                        },\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    updateState('pageBuilder', 'langsFile', updatelangsFile)\n                }\n            }\n        }\n    }\n\n    const getImageData = async (header) => {\n        return new Promise(async (resv, rej) => {\n            return await axios(header)\n                .then(async (response) => {\n                    if (response.status === 200 && response.data && response.data.data.length > 0) {\n                        resv({\n                            title: response.data.data[0].title,\n                            description: response.data.data[0].description,\n                        })\n                    } else {\n                        const retErr = isErrorMsg(response)\n                        toast.error(retErr.errorMsg, {\n                            position: toast.POSITION.TOP_RIGHT,\n                        })\n                    }\n                })\n                .catch((error) => {\n                    console.log(error)\n                    resv(error.response || { status: 0 })\n                })\n        })\n    }\n\n    const getTextData = async (header) => {\n        return new Promise(async (resv, rej) => {\n            return await axios(header)\n                .then(async (response) => {\n                    if (response.status === 200 && response.data && response.data.data.length > 0) {\n                        resv(response.data.data[0].itemtext)\n                    } else {\n                        const retErr = isErrorMsg(response)\n                        toast.error(retErr.errorMsg, {\n                            position: toast.POSITION.TOP_RIGHT,\n                        })\n                    }\n                })\n                .catch((error) => {\n                    console.log(error)\n                    resv(error.response || { status: 0 })\n                })\n        })\n    }\n\n    const getSliderData = async (header) => {\n        return new Promise(async (resv, rej) => {\n            return await axios(header)\n                .then(async (response) => {\n                    if (response.status === 200 && response.data && response.data.data.length > 0) {\n                        if (\n                            response.data.data[0].title ||\n                            response.data.data[0].description ||\n                            response.data.data[0].cta\n                        ) {\n                            resv({\n                                title: response.data.data[0].title,\n                                description: response.data.data[0].description,\n                                cta: response.data.data[0].cta,\n                            })\n                        } else {\n                            const REQUEST_OPTIONS_GET_HCMITEMIMG = {\n                                url: GENERAL_SETTINGS.OREST_URL + '/hcmitemimg/view/list',\n                                method: 'get',\n                                headers: {\n                                    Authorization: `Bearer ${authToken}`,\n                                    'Content-Type': 'application/json',\n                                },\n                                params: {\n                                    query: `sliderid:${response.data.data[0].id}`,\n                                    hotelrefno: Number(companyId),\n                                    chkselfish: false,\n                                    sort: 'orderno',\n                                },\n                            }\n                            return await axios(REQUEST_OPTIONS_GET_HCMITEMIMG).then(async (res) => {\n                                if (res.status === 200 && res.data && res.data.data.length > 0) {\n                                    let updatedSliderImages = []\n                                    await res.data.data.map((r) => {\n                                        updatedSliderImages.push({\n                                            title: r.title,\n                                            description: r.description,\n                                            cta: r.cta,\n                                        })\n                                    })\n                                    resv(updatedSliderImages)\n                                }\n                            })\n                        }\n                    } else {\n                        const retErr = isErrorMsg(response)\n                        toast.error(retErr.errorMsg, {\n                            position: toast.POSITION.TOP_RIGHT,\n                        })\n                    }\n                })\n                .catch((error) => {\n                    console.log(error)\n                    resv(error.response || { status: 0 })\n                })\n        })\n    }\n\n    if (isRequestSend || !isLoaded) {\n        return <LoadingSpinner style={{ color: COLORS.secondary }} />\n    }\n\n    return (\n        <Container className={isDeleting ? classes.disabledSectionTxt : ''}>\n            <Typography\n                style={{\n                    display: 'flex',\n                    justifyContent: 'flex-end',\n                }}\n                component={'div'}\n                className={state?.page?.sections?.length === 0 ? classes.disabledSectionTxt : ''}\n            >\n                <LanguageDropdown handleChange={handleLanguageChange} langID={state?.langId} />\n            </Typography>\n            <Box {...defaultProps}>\n                <div style={{ minHeight: '50vh' }}>\n                    {state.langCode !== state.defaultLang &&\n                        state.langsFile[state.langCode] &&\n                        state.langsFile[state.langCode].items.length > 0 &&\n                        state.langsFile[state.langCode].items.map((item, index) => {\n                            return (\n                                <div key={index}>\n                                    <IconButton\n                                        aria-label=\"Edit item\"\n                                        color=\"primary\"\n                                        onClick={() => editSectionDialog(state.page.sections[index], item)}\n                                    >\n                                        <BorderColorSharpIcon color=\"primary\" />\n                                    </IconButton>\n                                    <Container style={{ pointerEvents: 'none' }}>\n                                        {item?.title && (\n                                            <Grid container spacing={1} justify={'flex-start'}>\n                                                <Grid item xs={12}>\n                                                    <div dangerouslySetInnerHTML={{ __html: item.title }}></div>\n                                                </Grid>\n                                            </Grid>\n                                        )}\n                                        <Grid container spacing={1} justify={'flex-start'}>\n                                            {item.subItems.length > 0 &&\n                                                item.subItems.map((subItem, i) => {\n                                                    return (\n                                                        <Grid\n                                                            key={i}\n                                                            item\n                                                            xs={getColumnWidth(\n                                                                state?.page?.sections[index]?.items[i]?.width\n                                                            )}\n                                                            style={{\n                                                                minWidth:\n                                                                    state?.page?.sections[index]?.items[i]?.width + '%',\n                                                            }}\n                                                        >\n                                                            {'image' in subItem && (\n                                                                <Image\n                                                                    imageComponent={state.page.sections[index].items[i]}\n                                                                    otherLangsImage={subItem.image}\n                                                                    sectionType={state?.page?.sections[index]?.type}\n                                                                />\n                                                            )}\n                                                            {'text' in subItem && (\n                                                                <div\n                                                                    style={{\n                                                                        backgroundColor: state?.page?.sections[index]\n                                                                            ?.items[i]?.useBgColor\n                                                                            ? state?.assets?.colors?.message?.main\n                                                                            : 'white',\n                                                                        height: '100%',\n                                                                    }}\n                                                                >\n                                                                    <Paragraph paragraph={subItem.text} />\n                                                                </div>\n                                                            )}\n                                                            {'sliderGallery' in subItem && (\n                                                                <SliderGallery\n                                                                    sliderGallery={state.page.sections[index].items[i]}\n                                                                    otherLangSliderGallery={subItem.sliderGallery}\n                                                                />\n                                                            )}\n                                                            {'cardSlider' in subItem && (\n                                                                <CardSlider\n                                                                    cardSlider={state.page.sections[index].items[i]}\n                                                                    otherLangCardSlider={subItem.cardSlider}\n                                                                />\n                                                            )}\n                                                            {'slider' in subItem && (\n                                                                <Slider\n                                                                    sliderComponent={\n                                                                        state.page.sections[index].items[i]\n                                                                    }\n                                                                    slider={subItem.slider}\n                                                                />\n                                                            )}\n                                                            {'sliderImages' in subItem && (\n                                                                <Slider\n                                                                    sliderComponent={\n                                                                        state.page.sections[index].items[i]\n                                                                    }\n                                                                    otherLangSliderImages={subItem.sliderImages}\n                                                                />\n                                                            )}\n                                                            {('booking' in subItem || subItem?.service === 'hcmwidgetbooking') && <WidgetBooking />}\n                                                            {'contactForm' in subItem && (\n                                                                <div\n                                                                    style={{\n                                                                        backgroundColor: state?.page?.sections[index]\n                                                                            ?.items[i]?.useBgColor\n                                                                            ? state?.assets?.colors?.message?.main\n                                                                            : 'white',\n                                                                        height: '100%',\n                                                                    }}\n                                                                >\n                                                                    <ContactForm\n                                                                        formData={state.page.sections[index].items[i]}\n                                                                        otherLangFormData={subItem.contactForm.labels}\n                                                                    />\n                                                                </div>\n                                                            )}\n                                                            {'map' in subItem && (\n                                                                <WrappedMap\n                                                                    googleMapURL={`https://maps.googleapis.com/maps/api/js?key=${process.env.GOOGLE_MAP_API_KEY}`}\n                                                                    loadingElement={<div style={{ height: `100%` }} />}\n                                                                    containerElement={\n                                                                        <div\n                                                                            style={{\n                                                                                height: `350px`,\n                                                                                borderRadius: 10,\n                                                                            }}\n                                                                        />\n                                                                    }\n                                                                    mapElement={<div style={{ height: `100%` }} />}\n                                                                />\n                                                            )}\n                                                            {'sliderOnly' in subItem && (\n                                                                <SliderOnlyPreview\n                                                                    masterid={\n                                                                        state.page.sections[index].items[i].masterid\n                                                                    }\n                                                                />\n                                                            )}\n                                                        </Grid>\n                                                    )\n                                                })}\n                                        </Grid>\n                                    </Container>\n                                    <hr />\n                                </div>\n                            )\n                        })}\n                    {state.langCode === state.defaultLang && state.page.sections.length > 0 ? (\n                        <>\n                            {state?.page?.sections?.length > 0 &&\n                                state.page.sections.map((section, i) => {\n                                    return (\n                                        section?.items?.length > 0 && (\n                                            <div key={i}>\n                                                <IconButton\n                                                    aria-label=\"Edit item\"\n                                                    color=\"primary\"\n                                                    onClick={() => editSectionDialog(section)}\n                                                >\n                                                    <BorderColorSharpIcon color=\"primary\" />\n                                                </IconButton>\n                                                <IconButton\n                                                    aria-label=\"Delete item\"\n                                                    color=\"primary\"\n                                                    onClick={() => {\n                                                        setDeletedIndex(i)\n                                                        setAlert(true)\n                                                        setAlertDialogType('section')\n                                                    }}\n                                                    className={\n                                                        state.langCode !== state.defaultLang\n                                                            ? classes.disabledSectionTxt\n                                                            : ''\n                                                    }\n                                                >\n                                                    <DeleteIcon color=\"primary\" />\n                                                </IconButton>\n                                                <Container style={{ pointerEvents: 'none' }}>\n                                                    {section?.title && (\n                                                        <Grid container spacing={1} justify={'flex-start'}>\n                                                            <Grid item xs={12}>\n                                                                <div\n                                                                    dangerouslySetInnerHTML={{ __html: section.title }}\n                                                                ></div>\n                                                            </Grid>\n                                                        </Grid>\n                                                    )}\n                                                    <Grid container spacing={1} justify={'flex-start'}>\n                                                        {section.items.map((component, index) => {\n                                                            return (\n                                                                <Grid\n                                                                    style={{ minWidth: component?.width + '%' }}\n                                                                    item\n                                                                    xs={getColumnWidth(component?.width)}\n                                                                    key={index}\n                                                                >\n                                                                    {component?.type === 'slider' && (\n                                                                        <Slider\n                                                                            sliderComponent={component}\n                                                                            sectionID={section.id}\n                                                                        />\n                                                                    )}\n                                                                    {component?.type === 'slider-gallery' && (\n                                                                        <SliderGallery sliderGallery={component} />\n                                                                    )}\n                                                                    {component?.type === 'card-slider' && (\n                                                                        <CardSlider cardSlider={component} />\n                                                                    )}\n                                                                    {component?.type === 'video' && (\n                                                                        <Video videoComponent={component} />\n                                                                    )}\n                                                                    {component?.type === 'sliderOnly' && (\n                                                                        <SliderOnlyPreview\n                                                                            masterid={component.masterid}\n                                                                        />\n                                                                    )}\n                                                                    {component?.type === 'image' && (\n                                                                        <Image\n                                                                            imageComponent={component}\n                                                                            sectionType={section?.type}\n                                                                        />\n                                                                    )}\n                                                                    {component?.type === 'paragraph' && (\n                                                                        <div\n                                                                            style={{\n                                                                                backgroundColor: component?.useBgColor\n                                                                                    ? state?.assets?.colors?.message\n                                                                                          ?.main\n                                                                                    : 'white',\n                                                                                height: '100%',\n                                                                            }}\n                                                                        >\n                                                                            <Paragraph\n                                                                                paragraph={component}\n                                                                                sectionID={section.id}\n                                                                            />\n                                                                        </div>\n                                                                    )}\n                                                                    {component?.type === 'widgetbooking' && (\n                                                                        <WidgetBooking />\n                                                                    )}\n                                                                    {component?.type === 'contactForm' && (\n                                                                        <div\n                                                                            style={{\n                                                                                backgroundColor: component?.useBgColor\n                                                                                    ? state?.assets?.colors?.message\n                                                                                          ?.main\n                                                                                    : 'white',\n                                                                                height: '100%',\n                                                                            }}\n                                                                        >\n                                                                            <ContactForm formData={component} />\n                                                                        </div>\n                                                                    )}\n                                                                    {component?.type === 'map' && (\n                                                                        <WrappedMap\n                                                                            googleMapURL={`https://maps.googleapis.com/maps/api/js?key=${process.env.GOOGLE_MAP_API_KEY}`}\n                                                                            loadingElement={\n                                                                                <div style={{ height: `100%` }} />\n                                                                            }\n                                                                            containerElement={\n                                                                                <div\n                                                                                    style={{\n                                                                                        height: `350px`,\n                                                                                        borderRadius: 10,\n                                                                                    }}\n                                                                                />\n                                                                            }\n                                                                            mapElement={\n                                                                                <div style={{ height: `100%` }} />\n                                                                            }\n                                                                        />\n                                                                    )}\n                                                                </Grid>\n                                                            )\n                                                        })}\n                                                    </Grid>\n                                                </Container>\n                                                <hr />\n                                            </div>\n                                        )\n                                    )\n                                })}\n                            <h3 className={classes.centreContent}>\n                                <span\n                                    onClick={() => addSectionDialog()}\n                                    className={clsx({\n                                        [classes.cursorPointer]: true,\n                                        [classes.disabledSectionTxt]:\n                                            state.langCode !== state.defaultLang ? true : false,\n                                    })}\n                                >\n                                    Click to define Section\n                                </span>\n                            </h3>\n                        </>\n                    ) : (\n                        <h3 className={classes.centreContent}>\n                            <span\n                                onClick={() => addSectionDialog()}\n                                className={clsx({\n                                    [classes.cursorPointer]: true,\n                                    [classes.disabledSectionTxt]: state.langCode !== state.defaultLang ? true : false,\n                                })}\n                            >\n                                Click to define Section\n                            </span>\n                        </h3>\n                    )}\n                    <hr />\n                </div>\n            </Box>\n            {renderDialog}\n            {isAlert && <AlertDialog handleDelete={handleDelete} alertDialogType={alertDialogType} />}\n        </Container>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        state: state.formReducer.pageBuilder,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    updateState: (stateType, stateName, value) => dispatch(updateState(stateType, stateName, value)),\n    pushToState: (stateType, stateName, value) => dispatch(pushToState(stateType, stateName, value)),\n    deleteFromState: (stateType, stateName, value) => dispatch(deleteFromState(stateType, stateName, value)),\n    setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Page)\n"]},"metadata":{},"sourceType":"module"}