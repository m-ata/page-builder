{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/TableColumnText/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useRef } from 'react';\nimport { Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { CustomToolTip } from \"../user-portal/components/CustomToolTip/CustomToolTip\";\nimport PropTypes from \"prop-types\";\nconst useStyles = makeStyles(theme => ({\n  root: props => ({\n    overflow: 'hidden',\n    fontSize: (props === null || props === void 0 ? void 0 : props.fontSize) || 'inherit',\n    fontWeight: (props === null || props === void 0 ? void 0 : props.fontWeight) || '500',\n    textTransform: (props === null || props === void 0 ? void 0 : props.textTransform) || 'none',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    textAlign: props.textAlign,\n    maxWidth: (props === null || props === void 0 ? void 0 : props.maxWidth) > 0 ? props.maxWidth : 'unset',\n    minWidth: (props === null || props === void 0 ? void 0 : props.minWidth) > 0 ? props.minWidth : 'unset'\n  })\n}));\n\nfunction TableColumnText(props) {\n  //props\n  const {\n    maxWidth,\n    minWidth,\n    textAlign,\n    showToolTip,\n    fontSize,\n    fontWeight,\n    textTransform\n  } = props; //getStyle\n\n  const classes = useStyles({\n    maxWidth,\n    minWidth,\n    textAlign,\n    fontSize,\n    fontWeight,\n    textTransform\n  }); //state\n\n  const {\n    0: open,\n    1: setOpen\n  } = useState(false); //ref\n\n  const ref = useRef();\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    var _ref$current, _ref$current2;\n\n    if (showToolTip && (ref === null || ref === void 0 ? void 0 : (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.scrollWidth) > (ref === null || ref === void 0 ? void 0 : (_ref$current2 = ref.current) === null || _ref$current2 === void 0 ? void 0 : _ref$current2.offsetWidth)) {\n      setOpen(true);\n    }\n  };\n\n  return __jsx(CustomToolTip, {\n    open: open,\n    onClose: handleClose,\n    onOpen: handleOpen,\n    title: props.children,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    className: classes.root,\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, props.children));\n}\n\nexport default TableColumnText;\nTableColumnText.defaultProps = {\n  showToolTip: false,\n  minWidth: 100,\n  textAlign: 'left'\n};\nTableColumnText.propTypes = {\n  showToolTip: PropTypes.bool,\n  maxWidth: PropTypes.number,\n  minWidth: PropTypes.number,\n  textAlign: PropTypes.string,\n  fontSize: PropTypes.any,\n  fontWeight: PropTypes.any,\n  textTransform: PropTypes.string\n};","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/TableColumnText/index.js"],"names":["React","useState","useRef","Typography","makeStyles","CustomToolTip","PropTypes","useStyles","theme","root","props","overflow","fontSize","fontWeight","textTransform","textOverflow","whiteSpace","textAlign","maxWidth","minWidth","TableColumnText","showToolTip","classes","open","setOpen","ref","handleClose","handleOpen","current","scrollWidth","offsetWidth","children","defaultProps","propTypes","bool","number","string","any"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\nimport {\n    Typography\n} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {CustomToolTip} from \"../user-portal/components/CustomToolTip/CustomToolTip\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: props => ({\n        overflow: 'hidden',\n        fontSize: props?.fontSize || 'inherit',\n        fontWeight: props?.fontWeight || '500',\n        textTransform: props?.textTransform || 'none',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        textAlign: props.textAlign,\n        maxWidth: props?.maxWidth > 0 ? props.maxWidth : 'unset',\n        minWidth: props?.minWidth > 0 ? props.minWidth : 'unset'\n    })\n\n}))\n\n\nfunction TableColumnText(props) {\n\n    //props\n    const { maxWidth, minWidth, textAlign, showToolTip, fontSize, fontWeight, textTransform } = props\n\n    //getStyle\n    const classes = useStyles({maxWidth, minWidth, textAlign, fontSize, fontWeight, textTransform});\n\n    //state\n    const [open, setOpen] = useState(false);\n\n    //ref\n    const ref = useRef()\n\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleOpen = () => {\n        if(showToolTip && ref?.current?.scrollWidth > ref?.current?.offsetWidth) {\n            setOpen(true);\n        }\n    };\n\n    return(\n        <CustomToolTip open={open} onClose={handleClose} onOpen={handleOpen} title={props.children}>\n            <Typography className={classes.root} ref={ref}>{props.children}</Typography>\n        </CustomToolTip>\n    )\n}\n\nexport default TableColumnText;\n\nTableColumnText.defaultProps = {\n    showToolTip: false,\n    minWidth: 100,\n    textAlign: 'left'\n}\n\nTableColumnText.propTypes = {\n    showToolTip: PropTypes.bool,\n    maxWidth: PropTypes.number,\n    minWidth: PropTypes.number,\n    textAlign: PropTypes.string,\n    fontSize: PropTypes.any,\n    fontWeight: PropTypes.any,\n    textTransform: PropTypes.string\n}"]},"metadata":{},"sourceType":"module"}