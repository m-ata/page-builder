{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/booking/GuestDetailsPage.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Box, Button, Checkbox, Divider, FormControlLabel, FormGroup, Grid, TextField, Typography } from '@material-ui/core';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MomentAdapter from '@date-io/moment';\nimport { DatePicker, LocalizationProvider } from '@material-ui/pickers';\nimport { setToState } from 'state/actions';\nimport { connect, useSelector } from 'react-redux';\nimport PhoneInput from '@webcms-ui/core/phone-input';\nimport OtherGuestInfo from './OtherGuestInfo';\nimport PaymentInformation from './components/PaymentInformation';\nimport { required, validateEmail } from 'state/utils/form';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nimport { useSnackbar } from 'notistack';\nimport clsx from 'clsx';\nimport IconButton from '@material-ui/core/IconButton';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport WebCmsGlobal from '../webcms-global';\nimport LoginDialog from '../LoginComponent/LoginDialog';\nimport { UseOrest } from '@webcms/orest';\nimport ProgressButton from './components/ProgressButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { useRouter } from 'next/router';\nimport { useOrestAction } from '../../model/orest';\nimport TrackedChangesDialog from '../TrackedChangesDialog';\nimport TagManager from '../../@webcms-globals/tag-manager';\nimport { REQUEST_METHOD_CONST } from '../../model/orest/constants';\nconst useStyles = makeStyles(() => ({\n  root: {\n    marginTop: 16,\n    border: '1px solid #ddd',\n    background: '#F5F5F5'\n  },\n  infoTextField: {\n    background: '#FFFFFF',\n    '& fieldset': {\n      borderRadius: 0\n    }\n  },\n  createAccountHelperText: {\n    textAlign: 'right'\n  },\n  textRed: {\n    color: 'red'\n  }\n}));\n\nfunction mandatoryFieldMarker(contactInfo, mandatoryField) {\n  const useMandatoryField = mandatoryField && mandatoryField.split(',') || false;\n\n  if (!Array.isArray(useMandatoryField)) {\n    return contactInfo;\n  }\n\n  let newContactInfo = _objectSpread({}, contactInfo);\n\n  Object.keys(contactInfo).map(key => {\n    if (mandatoryField.includes(contactInfo[key].key)) {\n      newContactInfo[key].isrequired = true;\n    }\n  });\n  return newContactInfo;\n}\n\nconst GuestDetailsPage = props => {\n  var _GENERAL_SETTINGS$hot, _GENERAL_SETTINGS$hot2;\n\n  const classes = useStyles();\n  const {\n    state,\n    setToState\n  } = props;\n  const {\n    t\n  } = useTranslation();\n  const {\n    GENERAL_SETTINGS,\n    WEBCMS_DATA,\n    locale\n  } = useContext(WebCmsGlobal);\n  const {\n    0: isLoginDialog,\n    1: setIsLoginDialog\n  } = useState(false);\n  const {\n    0: isOpenLoginDialog,\n    1: setIsOpenLoginDialog\n  } = useState(false);\n  const {\n    0: emailIsAlreadyExistsDialog,\n    1: setEmailIsAlreadyExistsDialog\n  } = useState(false);\n  const loginfo = useSelector(state => state.orest.currentUser && state.orest.currentUser.loginfo);\n  const token = useSelector(state => {\n    var _state$orest, _state$orest$currentU;\n\n    return (state === null || state === void 0 ? void 0 : (_state$orest = state.orest) === null || _state$orest === void 0 ? void 0 : (_state$orest$currentU = _state$orest.currentUser) === null || _state$orest$currentU === void 0 ? void 0 : _state$orest$currentU.auth.access_token) || false;\n  });\n  const clientBase = useSelector(state => {\n    var _state$orest2, _state$orest2$state;\n\n    return (state === null || state === void 0 ? void 0 : (_state$orest2 = state.orest) === null || _state$orest2 === void 0 ? void 0 : (_state$orest2$state = _state$orest2.state) === null || _state$orest2$state === void 0 ? void 0 : _state$orest2$state.client) || false;\n  });\n  const router = useRouter();\n  const iframe = router.query.iframe === 'true';\n  const isLogoutButton = token && iframe;\n  const {\n    deleteOrestCurrentUserInfo,\n    resetOrestState\n  } = useOrestAction();\n  useEffect(() => {\n    var _WEBCMS_DATA$assets, _WEBCMS_DATA$assets$m;\n\n    let isEffect = true;\n\n    if (isEffect && WEBCMS_DATA !== null && WEBCMS_DATA !== void 0 && (_WEBCMS_DATA$assets = WEBCMS_DATA.assets) !== null && _WEBCMS_DATA$assets !== void 0 && (_WEBCMS_DATA$assets$m = _WEBCMS_DATA$assets.meta) !== null && _WEBCMS_DATA$assets$m !== void 0 && _WEBCMS_DATA$assets$m.googleTag) {\n      var _WEBCMS_DATA$assets2, _WEBCMS_DATA$assets2$;\n\n      TagManager.page.setChange({\n        hotelName: WEBCMS_DATA === null || WEBCMS_DATA === void 0 ? void 0 : (_WEBCMS_DATA$assets2 = WEBCMS_DATA.assets) === null || _WEBCMS_DATA$assets2 === void 0 ? void 0 : (_WEBCMS_DATA$assets2$ = _WEBCMS_DATA$assets2.meta) === null || _WEBCMS_DATA$assets2$ === void 0 ? void 0 : _WEBCMS_DATA$assets2$.title,\n        hotelId: GENERAL_SETTINGS.HOTELREFNO,\n        pageTitle: window.document.title,\n        pagePath: location.href,\n        pageStep: 'Guest Details'\n      });\n    }\n\n    return () => {\n      isEffect = false;\n    };\n  }, []);\n  useEffect(() => {\n    window.handleContinueByGuestDetailPage = () => {\n      return handleContinue();\n    };\n  }, [state.selectedPaymentTypeId]);\n  useEffect(() => {\n    if (loginfo) {\n      setIsLoginDialog(true);\n      UseOrest({\n        apiUrl: GENERAL_SETTINGS.OREST_URL,\n        endpoint: 'auth/checktoken',\n        token: token,\n        method: REQUEST_METHOD_CONST.POST,\n        params: {\n          token: token,\n          hotelrefno: ''\n        }\n      }).then(checkTokenResponse => {\n        var _checkTokenResponse$d;\n\n        if (checkTokenResponse !== null && checkTokenResponse !== void 0 && (_checkTokenResponse$d = checkTokenResponse.data) !== null && _checkTokenResponse$d !== void 0 && _checkTokenResponse$d.active) {\n          if (clientBase && clientBase !== null && clientBase !== void 0 && clientBase.id) {\n            setClientInfo(clientBase);\n          } else if (loginfo.accid && token) {\n            UseOrest({\n              apiUrl: GENERAL_SETTINGS.OREST_URL,\n              endpoint: 'client/getbyid',\n              token,\n              params: {\n                key: loginfo.accid,\n                allhotels: true\n              }\n            }).then(client => {\n              if (client.status === 200 && client.data.count > 0) {\n                setClientInfo(client.data.data);\n              }\n            });\n          }\n        } else {\n          enqueueSnackbar(t('str_sessionTimeoutLoginAgain'), {\n            variant: 'info'\n          });\n          deleteOrestCurrentUserInfo();\n        }\n      }).catch(() => {\n        enqueueSnackbar(t('str_sessionTimeoutLoginAgain'), {\n          variant: 'info'\n        });\n        deleteOrestCurrentUserInfo();\n      });\n    } else {\n      setIsLoginDialog(false);\n    }\n  }, [clientBase, loginfo]);\n\n  const setClientInfo = clientInfoData => {\n    let newContactInfo = state.contactInfo;\n    newContactInfo.firstName.value = clientInfoData.firstname;\n    newContactInfo.firstName.iserror = false;\n    selectedRooms[0].guestList[0].firstName.value = clientInfoData.firstname;\n    newContactInfo.lastName.value = clientInfoData.lastname;\n    newContactInfo.lastName.iserror = false;\n    selectedRooms[0].guestList[0].lastName.value = clientInfoData.lastname;\n    newContactInfo.mail.value = clientInfoData.email;\n    newContactInfo.mail.iserror = false;\n    selectedRooms[0].guestList[0].mail.value = clientInfoData.email;\n    newContactInfo.birthDate.value = clientInfoData.birthdate;\n    newContactInfo.birthDate.iserror = false;\n    selectedRooms[0].guestList[0].birthDate.value = clientInfoData.birthdate;\n    newContactInfo.healthcode.value = clientInfoData.healthcode;\n    newContactInfo.healthcode.iserror = false;\n    selectedRooms[0].guestList[0].healthcode.value = clientInfoData.healthcode;\n    newContactInfo.phone.value = clientInfoData.mobiletel;\n    newContactInfo.phone.iserror = false;\n    selectedRooms[0].guestList[0].phone.value = clientInfoData.mobiletel;\n    setToState('ibe', ['selectedRooms'], selectedRooms);\n    setToState('ibe', ['contactInfo'], newContactInfo);\n  };\n\n  const {\n    0: createAccount,\n    1: setCreateAccount\n  } = useState({\n    isActive: false,\n    password: '',\n    showPassword: false,\n    isError: false\n  });\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const contactInfoSettings = {\n    spacing: 2,\n    margin: 'none',\n    variant: 'outlined'\n  };\n\n  const hasPayType = async (id, filter) => {\n    const payType = state.hotelPaymentType && state.hotelPaymentType.paymentypes.length > 0 && state.hotelPaymentType.paymentypes.filter(item => item[filter])[0];\n    return Boolean(payType && Number(id) === Number(payType.id));\n  };\n\n  let selectedRooms = state.selectedRooms;\n  let contactInfo = mandatoryFieldMarker(state.contactInfo, GENERAL_SETTINGS.hotelSettings.ci_reqflds);\n\n  const changeFirstName = e => {\n    contactInfo.firstName.value = e.currentTarget.value;\n    contactInfo.firstName.iserror = false;\n    selectedRooms[0].guestList[0].firstName.value = e.currentTarget.value;\n    setToState('ibe', ['selectedRooms'], selectedRooms);\n    setToState('ibe', ['contactInfo'], contactInfo);\n  };\n\n  const changeLastName = e => {\n    contactInfo.lastName.value = e.currentTarget.value;\n    contactInfo.lastName.iserror = false;\n    selectedRooms[0].guestList[0].lastName.value = e.currentTarget.value;\n    setToState('ibe', ['selectedRooms'], selectedRooms);\n    setToState('ibe', ['contactInfo'], contactInfo);\n  };\n\n  const changeMail = e => {\n    setToState('ibe', ['continueWithoutClientRecord'], false);\n    contactInfo.mail.value = e.currentTarget.value;\n    contactInfo.mail.iserror = false;\n    selectedRooms[0].guestList[0].mail.value = e.currentTarget.value;\n    setToState('ibe', ['selectedRooms'], selectedRooms);\n    setToState('ibe', ['contactInfo'], contactInfo);\n  };\n\n  const changeHealtCode = e => {\n    contactInfo.healthcode.value = e.currentTarget.value;\n    contactInfo.healthcode.iserror = false;\n    selectedRooms[0].guestList[0].healthcode.value = e.currentTarget.value;\n    setToState('ibe', ['selectedRooms'], selectedRooms);\n    setToState('ibe', ['contactInfo'], contactInfo);\n  };\n\n  const changePhoneNumber = e => {\n    contactInfo.phone.value = e;\n    contactInfo.phone.iserror = false;\n    selectedRooms[0].guestList[0].phone.value = e;\n    setToState('ibe', ['selectedRooms'], selectedRooms);\n    setToState('ibe', ['contactInfo'], contactInfo);\n  };\n\n  const changeDateOfBirth = date => {\n    if (date) {\n      if (date._isValid) {\n        contactInfo.birthDate.value = date._d;\n        selectedRooms[0].guestList[0].birthDate.value = date._d;\n      } else {\n        contactInfo.birthDate.value = date._d;\n        selectedRooms[0].guestList[0].birthDate.value = date._d;\n      }\n\n      contactInfo.birthDate.iserror = false;\n      setToState('ibe', ['selectedRooms'], selectedRooms);\n      setToState('ibe', ['contactInfo'], contactInfo);\n    }\n  };\n\n  const changeNote = e => {\n    contactInfo.note.value = e.currentTarget.value;\n    selectedRooms[0].guestList[0].note.value = e.currentTarget.value;\n    setToState('ibe', ['selectedRooms'], selectedRooms);\n    setToState('ibe', ['contactInfo'], contactInfo);\n  };\n\n  const emailValidation = email => {\n    return axios({\n      url: `${GENERAL_SETTINGS.BASE_URL}api/ors/guest/email/valid`,\n      method: 'post',\n      data: {\n        email: email\n      }\n    }).then(response => {\n      return response.data;\n    });\n  };\n\n  const handleContinue = async continueWithoutClientRecord => {\n    setToState('ibe', ['isHandleContinue'], true);\n    let isRequiredError = false,\n        isEmailError = false;\n    Object.keys(contactInfo).forEach(function (key) {\n      if (contactInfo[key].isrequired) {\n        if (required(contactInfo[key].value)) {\n          contactInfo[key].iserror = true;\n          isRequiredError = true;\n        }\n      }\n    });\n\n    if (createAccount.isActive && (createAccount.password === '' || createAccount.password.length < 6)) {\n      setCreateAccount(_objectSpread(_objectSpread({}, createAccount), {}, {\n        isError: true\n      }));\n      enqueueSnackbar(t('str_pleaseCheckYourPassword'), {\n        variant: 'error'\n      });\n      isRequiredError = true;\n    } else {\n      setCreateAccount(_objectSpread(_objectSpread({}, createAccount), {}, {\n        isError: false\n      }));\n    }\n\n    const contactEmail = await emailValidation(contactInfo.mail.value);\n\n    if (!continueWithoutClientRecord && contactEmail.exits && !loginfo) {\n      isEmailError = true;\n      contactInfo['mail'].iserror = true;\n      setEmailIsAlreadyExistsDialog(true);\n      setToState('ibe', ['isHandleContinue'], false);\n    }\n\n    if (!contactEmail.validation) {\n      isEmailError = true;\n      contactInfo['mail'].iserror = true;\n    }\n\n    if (!Number(state.selectedPaymentTypeId) > 0) {\n      enqueueSnackbar(t('str_pleaseSelectAPaymentMethodToContinue'), {\n        variant: 'warning'\n      });\n      setToState('ibe', ['isHandleContinue'], false);\n      return;\n    }\n\n    const checkPayTypeIsMailOrder = await hasPayType(state.selectedPaymentTypeId, 'ismailorder');\n\n    if (checkPayTypeIsMailOrder && !state.mailOrderInfo.cardIsValid) {\n      enqueueSnackbar(t('str_pleaseCheckYourCardInformation'), {\n        variant: 'warning'\n      });\n      setToState('ibe', ['isHandleContinue'], false);\n      return;\n    }\n\n    setToState('ibe', ['contactInfo'], contactInfo);\n    selectedRooms.map((room, roomIndex) => {\n      if (roomIndex !== 0 || roomIndex === 0 && room.totalpax > 1) {\n        Array.from({\n          length: room.totalpax\n        }).map((pax, paxIndex) => {\n          if (roomIndex > 0 || roomIndex === 0 && paxIndex > 0) {\n            let guestList = selectedRooms[roomIndex].guestList[paxIndex];\n            Object.keys(guestList).forEach(function (key) {\n              if (guestList[key].isrequired) {\n                if (required(guestList[key].value)) {\n                  guestList[key].iserror = true;\n                  isRequiredError = true;\n                }\n              }\n\n              if (guestList['mail'].value) {\n                if (validateEmail(guestList['mail'].value)) {\n                  guestList['mail'].iserror = true;\n                  isEmailError = true;\n                }\n              }\n            });\n            setToState('ibe', ['selectedRooms', roomIndex, 'guestList', paxIndex], guestList);\n          }\n        });\n      }\n    });\n\n    if (isRequiredError || isEmailError) {\n      setToState('ibe', ['isHandleContinue'], false);\n\n      if (!createAccount.isError && !contactEmail.exits) {\n        enqueueSnackbar(t('str_pleaseCheckMandatoryFields'), {\n          variant: 'error'\n        });\n      }\n    } else {\n      setToState('ibe', ['isHandleContinue'], false);\n\n      if (createAccount.isActive) {\n        setToState('ibe', ['clientPassword'], createAccount.password);\n      }\n\n      setToState('ibe', ['bookingActiveStep'], state.bookingActiveStep + 1);\n    }\n  };\n\n  const handleLogout = () => {\n    deleteOrestCurrentUserInfo();\n    resetOrestState();\n  };\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 9\n    }\n  }, __jsx(TrackedChangesDialog, {\n    isContainedNo: false,\n    dialogTitle: t('str_info'),\n    dialogDesc: t('str_thisEmailAddressHasBeenUsedBeforeYouCanContinueTheReservationByLoggingIn'),\n    labelYes: t('str_logInHere'),\n    labelNo: t('str_continueWithoutLogin'),\n    open: emailIsAlreadyExistsDialog,\n    onPressNo: () => {\n      contactInfo['mail'].iserror = false;\n      setToState('ibe', ['contactInfo'], contactInfo);\n      setToState('ibe', ['continueWithoutClientRecord'], true);\n      setEmailIsAlreadyExistsDialog(false);\n      handleContinue(true);\n    },\n    onPressYes: () => {\n      setEmailIsAlreadyExistsDialog(false);\n      setIsOpenLoginDialog(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 13\n    }\n  }), !isLoginDialog ? __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 17\n    }\n  }, __jsx(LoginDialog, {\n    open: isOpenLoginDialog,\n    onClose: status => setIsOpenLoginDialog(status),\n    locationName: \"booking\",\n    isLoginWrapper: true,\n    disableRegister: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 21\n    }\n  }), __jsx(Box, {\n    p: 3,\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 21\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: contactInfoSettings.spacing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 25\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 29\n    }\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 33\n    }\n  }, t('str_signInForAFasterBooking'))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 29\n    }\n  }, __jsx(Button, {\n    onClick: () => setIsOpenLoginDialog(true),\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    disableElevation: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 33\n    }\n  }, t('str_login')))))) : null, !!isLoginDialog && isLogoutButton ? __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 17\n    }\n  }, __jsx(Box, {\n    p: 3,\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 21\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: contactInfoSettings.spacing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 25\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 29\n    }\n  }, __jsx(Button, {\n    onClick: () => handleLogout(),\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    disableElevation: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 33\n    }\n  }, t('str_logout')))))) : null, __jsx(Box, {\n    p: 3,\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: contactInfoSettings.spacing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 21\n    }\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 25\n    }\n  }, t('str_contactInfo'))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 21\n    }\n  }, __jsx(TextField, {\n    disabled: Boolean(loginfo),\n    className: classes.infoTextField,\n    margin: contactInfoSettings.margin,\n    variant: contactInfoSettings.variant,\n    required: state.contactInfo.firstName.isrequired,\n    id: \"firstName\",\n    name: \"firstName\",\n    label: t('str_firstName'),\n    fullWidth: true,\n    onChange: e => changeFirstName(e),\n    value: state.contactInfo.firstName.value || '',\n    error: state.contactInfo.firstName.iserror,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 25\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 21\n    }\n  }, __jsx(TextField, {\n    disabled: Boolean(loginfo),\n    className: classes.infoTextField,\n    margin: contactInfoSettings.margin,\n    variant: contactInfoSettings.variant,\n    required: state.contactInfo.lastName.isrequired,\n    id: \"lastName\",\n    name: \"lastName\",\n    label: t('str_lastName'),\n    fullWidth: true,\n    onChange: e => changeLastName(e),\n    value: state.contactInfo.lastName.value || '',\n    error: state.contactInfo.lastName.iserror,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 25\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 21\n    }\n  }, __jsx(TextField, {\n    disabled: Boolean(loginfo),\n    className: classes.infoTextField,\n    margin: contactInfoSettings.margin,\n    variant: contactInfoSettings.variant,\n    required: state.contactInfo.mail.isrequired,\n    id: \"mail\",\n    name: \"mail\",\n    label: t('str_email'),\n    fullWidth: true,\n    onChange: e => changeMail(e),\n    value: state.contactInfo.mail.value || '',\n    error: state.contactInfo.mail.iserror,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 25\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 21\n    }\n  }, __jsx(PhoneInput, {\n    disabled: Boolean(loginfo),\n    className: classes.infoTextField,\n    defaultCountry: locale === 'en' ? 'us' : locale,\n    preferredCountries: ['it', 'ie', 'de', 'fr', 'es', 'gb'],\n    regions: ['america', 'europe', 'asia', 'oceania', 'africa'],\n    id: \"phone\",\n    name: \"phone\",\n    label: t('str_phone'),\n    fullWidth: true,\n    margin: contactInfoSettings.margin,\n    variant: contactInfoSettings.variant,\n    onChange: e => changePhoneNumber(e),\n    required: state.contactInfo.phone.isrequired,\n    value: state.contactInfo.phone.value || '',\n    error: state.contactInfo.phone.iserror,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 25\n    }\n  })), (GENERAL_SETTINGS === null || GENERAL_SETTINGS === void 0 ? void 0 : (_GENERAL_SETTINGS$hot = GENERAL_SETTINGS.hotelSettings) === null || _GENERAL_SETTINGS$hot === void 0 ? void 0 : _GENERAL_SETTINGS$hot.reg_birthdate) && __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 25\n    }\n  }, __jsx(LocalizationProvider, {\n    dateLibInstance: moment,\n    dateAdapter: MomentAdapter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 29\n    }\n  }, __jsx(DatePicker, {\n    disabled: Boolean(loginfo),\n    autoOk: true,\n    id: \"birthdate\",\n    name: \"birthdate\",\n    fullWidth: true,\n    disableFuture: true,\n    openTo: 'date',\n    views: ['year', 'month', 'date'],\n    inputFormat: \"DD/MM/YYYY\",\n    label: t('str_birthDate'),\n    onChange: e => changeDateOfBirth(e),\n    value: state.contactInfo.birthDate.value ? moment(state.contactInfo.birthDate.value) : moment().subtract(state.maxChildAge > 0 ? state.maxChildAge : 12, 'years'),\n    renderInput: props => __jsx(TextField, _extends({}, props, {\n      className: classes.infoTextField,\n      margin: contactInfoSettings.margin,\n      variant: contactInfoSettings.variant,\n      fullWidth: true,\n      helperText: \"\",\n      required: state.contactInfo.birthDate.isrequired,\n      error: state.contactInfo.birthDate.iserror,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 41\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 33\n    }\n  }))), (GENERAL_SETTINGS === null || GENERAL_SETTINGS === void 0 ? void 0 : (_GENERAL_SETTINGS$hot2 = GENERAL_SETTINGS.hotelSettings) === null || _GENERAL_SETTINGS$hot2 === void 0 ? void 0 : _GENERAL_SETTINGS$hot2.reg_healthcode) && __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 25\n    }\n  }, __jsx(TextField, {\n    disabled: Boolean(loginfo),\n    className: classes.infoTextField,\n    margin: contactInfoSettings.margin,\n    variant: contactInfoSettings.variant,\n    required: state.contactInfo.healthcode.isrequired,\n    id: \"healtcode\",\n    name: \"healtcode\",\n    label: t('str_healthCode'),\n    fullWidth: true,\n    onChange: e => changeHealtCode(e),\n    value: state.contactInfo.healthcode.value || '',\n    error: state.contactInfo.healthcode.iserror,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 29\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 21\n    }\n  }, __jsx(TextField, {\n    className: classes.infoTextField,\n    margin: \"dense\",\n    variant: \"outlined\",\n    id: \"note\",\n    name: \"note\",\n    label: t('str_note'),\n    fullWidth: true,\n    multiline: true,\n    rows: 4,\n    onChange: e => changeNote(e),\n    required: state.contactInfo.note.isrequired,\n    value: state.contactInfo.note.value || '',\n    error: state.contactInfo.note.iserror,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 25\n    }\n  })), !state.continueWithoutClientRecord && !isLoginDialog ? __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 25\n    }\n  }, __jsx(Divider, {\n    variant: \"fullWidth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 29\n    }\n  }), __jsx(FormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 29\n    }\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      name: \"create-account\",\n      color: \"primary\",\n      value: createAccount,\n      onClick: () => setCreateAccount(_objectSpread(_objectSpread({}, createAccount), {}, {\n        isActive: !createAccount.isActive\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 46\n      }\n    }),\n    label: t('str_iWouldLikeToCreateAnAccount'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 33\n    }\n  })), createAccount.isActive && __jsx(Box, {\n    component: \"span\",\n    display: createAccount.isActive ? 'block' : 'none',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 33\n    }\n  }, __jsx(FormControl, {\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 37\n    }\n  }, __jsx(InputLabel, {\n    htmlFor: \"create-account-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 41\n    }\n  }, t('str_password')), __jsx(OutlinedInput, {\n    className: classes.infoTextField,\n    id: \"create-account-password\",\n    type: createAccount.showPassword ? 'text' : 'password',\n    value: createAccount.password,\n    onChange: e => setCreateAccount(_objectSpread(_objectSpread({}, createAccount), {}, {\n      password: e.target.value\n    })),\n    \"aria-describedby\": \"create-account-password-helper-text\",\n    labelWidth: 70,\n    endAdornment: __jsx(InputAdornment, {\n      position: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 49\n      }\n    }, __jsx(IconButton, {\n      \"aria-label\": \"toggle password visibility\",\n      onClick: () => setCreateAccount(_objectSpread(_objectSpread({}, createAccount), {}, {\n        showPassword: !createAccount.showPassword\n      })),\n      onMouseDown: e => e.preventDefault(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 607,\n        columnNumber: 53\n      }\n    }, createAccount.showPassword ? __jsx(Visibility, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 612,\n        columnNumber: 87\n      }\n    }) : __jsx(VisibilityOff, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 612,\n        columnNumber: 103\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 597,\n      columnNumber: 41\n    }\n  }), __jsx(FormHelperText, {\n    id: \"create-account-password-helper-text\",\n    className: clsx(classes.createAccountHelperText, {\n      [classes.textRed]: createAccount.isError\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 617,\n      columnNumber: 41\n    }\n  }, createAccount.isError ? t('str_yourPasswordMustBeAMinOf6Characters') : t('str_bookFasterOptional'))))) : null)), state.selectedRooms.length > 1 || state.selectedRooms.length >= 1 && state.selectedRooms[0].guestList.length > 1 ? __jsx(Box, {\n    p: 3,\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 626,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: contactInfoSettings.spacing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 21\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 628,\n      columnNumber: 25\n    }\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 29\n    }\n  }, t('str_otherGuests'))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 25\n    }\n  }, state.selectedRooms && state.selectedRooms.map((room, roomIndex) => {\n    let roomNo = roomIndex + 1;\n    const numberOfGuests = Number(room.totalpax) + Number(room.totalchd);\n\n    if (roomIndex !== 0 || roomIndex === 0 && numberOfGuests > 1) {\n      return __jsx(\"div\", {\n        key: roomIndex,\n        style: {\n          marginBottom: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 45\n        }\n      }, __jsx(Typography, {\n        variant: \"subtitle1\",\n        style: {\n          marginBottom: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 49\n        }\n      }, roomNo, \".\", ' ', t('str_room'), \" (\", state.roomAvailabilityList && state.roomAvailabilityList.length > 0 && state.roomAvailabilityList.find(item => item.id === room.roomtypeid).description, \")\"), Array.from({\n        length: numberOfGuests\n      }).map((pax, paxIndex) => {\n        if (roomIndex > 0 || roomIndex === 0 && paxIndex > 0) {\n          let paxNo = paxIndex + 1;\n          return __jsx(\"div\", {\n            key: paxIndex,\n            style: {\n              marginBottom: 10\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 647,\n              columnNumber: 61\n            }\n          }, __jsx(Typography, {\n            variant: \"caption\",\n            display: \"block\",\n            style: {\n              marginBottom: 10\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 648,\n              columnNumber: 65\n            }\n          }, paxNo, \".\", ' ', t('str_guest')), __jsx(OtherGuestInfo, {\n            roomIndex: roomIndex,\n            paxIndex: paxIndex,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 651,\n              columnNumber: 65\n            }\n          }));\n        }\n      }));\n    }\n  })))) : null, __jsx(Box, {\n    p: 3,\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 665,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: contactInfoSettings.spacing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 666,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 667,\n      columnNumber: 21\n    }\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 668,\n      columnNumber: 25\n    }\n  }, t('str_paymentInformation'))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 672,\n      columnNumber: 21\n    }\n  }, __jsx(PaymentInformation, {\n    textFieldsClass: classes.infoTextField,\n    onChange: e => setToState('ibe', ['creditCardInfo'], e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 673,\n      columnNumber: 25\n    }\n  })))), __jsx(Box, {\n    p: 3,\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 680,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"flex-end\",\n    alignItems: \"center\",\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 681,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 682,\n      columnNumber: 21\n    }\n  }, __jsx(Button, {\n    disabled: state.isHandleContinue,\n    variant: \"outlined\",\n    color: \"secondary\",\n    size: \"large\",\n    disableElevation: true,\n    startIcon: __jsx(ArrowBackIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 689,\n        columnNumber: 40\n      }\n    }),\n    onClick: () => setToState('ibe', ['bookingActiveStep'], state.bookingActiveStep - 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 683,\n      columnNumber: 25\n    }\n  }, t('str_back'))), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 695,\n      columnNumber: 21\n    }\n  }, __jsx(ProgressButton, {\n    isLoading: state.isHandleContinue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 696,\n      columnNumber: 25\n    }\n  }, __jsx(Button, {\n    disabled: state.isHandleContinue,\n    onClick: () => handleContinue(),\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    disableElevation: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 697,\n      columnNumber: 29\n    }\n  }, t('str_continueReservation')))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    state: state.formReducer.ibe\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GuestDetailsPage);","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/booking/GuestDetailsPage.js"],"names":["React","useContext","useEffect","useState","Box","Button","Checkbox","Divider","FormControlLabel","FormGroup","Grid","TextField","Typography","axios","moment","makeStyles","MomentAdapter","DatePicker","LocalizationProvider","setToState","connect","useSelector","PhoneInput","OtherGuestInfo","PaymentInformation","required","validateEmail","useTranslation","useSnackbar","clsx","IconButton","OutlinedInput","InputLabel","InputAdornment","FormHelperText","FormControl","Visibility","VisibilityOff","WebCmsGlobal","LoginDialog","UseOrest","ProgressButton","ArrowBackIcon","useRouter","useOrestAction","TrackedChangesDialog","TagManager","REQUEST_METHOD_CONST","useStyles","root","marginTop","border","background","infoTextField","borderRadius","createAccountHelperText","textAlign","textRed","color","mandatoryFieldMarker","contactInfo","mandatoryField","useMandatoryField","split","Array","isArray","newContactInfo","Object","keys","map","key","includes","isrequired","GuestDetailsPage","props","classes","state","t","GENERAL_SETTINGS","WEBCMS_DATA","locale","isLoginDialog","setIsLoginDialog","isOpenLoginDialog","setIsOpenLoginDialog","emailIsAlreadyExistsDialog","setEmailIsAlreadyExistsDialog","loginfo","orest","currentUser","token","auth","access_token","clientBase","client","router","iframe","query","isLogoutButton","deleteOrestCurrentUserInfo","resetOrestState","isEffect","assets","meta","googleTag","page","setChange","hotelName","title","hotelId","HOTELREFNO","pageTitle","window","document","pagePath","location","href","pageStep","handleContinueByGuestDetailPage","handleContinue","selectedPaymentTypeId","apiUrl","OREST_URL","endpoint","method","POST","params","hotelrefno","then","checkTokenResponse","data","active","id","setClientInfo","accid","allhotels","status","count","enqueueSnackbar","variant","catch","clientInfoData","firstName","value","firstname","iserror","selectedRooms","guestList","lastName","lastname","mail","email","birthDate","birthdate","healthcode","phone","mobiletel","createAccount","setCreateAccount","isActive","password","showPassword","isError","contactInfoSettings","spacing","margin","hasPayType","filter","payType","hotelPaymentType","paymentypes","length","item","Boolean","Number","hotelSettings","ci_reqflds","changeFirstName","e","currentTarget","changeLastName","changeMail","changeHealtCode","changePhoneNumber","changeDateOfBirth","date","_isValid","_d","changeNote","note","emailValidation","url","BASE_URL","response","continueWithoutClientRecord","isRequiredError","isEmailError","forEach","contactEmail","exits","validation","checkPayTypeIsMailOrder","mailOrderInfo","cardIsValid","room","roomIndex","totalpax","from","pax","paxIndex","bookingActiveStep","handleLogout","reg_birthdate","subtract","maxChildAge","reg_healthcode","target","preventDefault","roomNo","numberOfGuests","totalchd","marginBottom","roomAvailabilityList","find","roomtypeid","description","paxNo","isHandleContinue","mapStateToProps","formReducer","ibe","mapDispatchToProps","dispatch","stateType","stateName"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport {\n    Box,\n    Button,\n    Checkbox,\n    Divider,\n    FormControlLabel,\n    FormGroup,\n    Grid,\n    TextField,\n    Typography,\n} from '@material-ui/core'\nimport axios from 'axios'\nimport moment from 'moment'\nimport { makeStyles } from '@material-ui/core/styles'\nimport MomentAdapter from '@date-io/moment'\nimport { DatePicker, LocalizationProvider } from '@material-ui/pickers'\nimport { setToState } from 'state/actions'\nimport { connect, useSelector } from 'react-redux'\nimport PhoneInput from '@webcms-ui/core/phone-input'\nimport OtherGuestInfo from './OtherGuestInfo'\nimport PaymentInformation from './components/PaymentInformation'\nimport { required, validateEmail } from 'state/utils/form'\nimport useTranslation from 'lib/translations/hooks/useTranslation'\nimport { useSnackbar } from 'notistack'\nimport clsx from 'clsx'\nimport IconButton from '@material-ui/core/IconButton'\nimport OutlinedInput from '@material-ui/core/OutlinedInput'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport FormControl from '@material-ui/core/FormControl'\nimport Visibility from '@material-ui/icons/Visibility'\nimport VisibilityOff from '@material-ui/icons/VisibilityOff'\nimport WebCmsGlobal from '../webcms-global'\nimport LoginDialog from '../LoginComponent/LoginDialog'\nimport { UseOrest } from '@webcms/orest'\nimport ProgressButton from './components/ProgressButton'\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\nimport { useRouter } from 'next/router'\nimport { useOrestAction } from '../../model/orest'\nimport TrackedChangesDialog from '../TrackedChangesDialog'\nimport TagManager from '../../@webcms-globals/tag-manager'\nimport { REQUEST_METHOD_CONST } from '../../model/orest/constants'\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        marginTop: 16,\n        border: '1px solid #ddd',\n        background: '#F5F5F5',\n    },\n    infoTextField: {\n        background: '#FFFFFF',\n        '& fieldset': {\n            borderRadius: 0,\n        },\n    },\n    createAccountHelperText: {\n        textAlign: 'right',\n    },\n    textRed: {\n        color: 'red'\n    }\n}))\n\nfunction mandatoryFieldMarker(contactInfo, mandatoryField) {\n    const useMandatoryField = mandatoryField && mandatoryField.split(',') || false\n    if(!Array.isArray(useMandatoryField)){\n        return contactInfo\n    }\n\n    let newContactInfo = {...contactInfo}\n    Object.keys(contactInfo).map((key) => {\n        if(mandatoryField.includes(contactInfo[key].key)){\n            newContactInfo[key].isrequired = true\n        }\n    })\n    return newContactInfo\n}\n\nconst GuestDetailsPage = (props) => {\n    const classes = useStyles()\n    const { state, setToState } = props\n    const { t } = useTranslation()\n\n    const { GENERAL_SETTINGS, WEBCMS_DATA, locale } = useContext(WebCmsGlobal)\n    const [isLoginDialog, setIsLoginDialog] = useState(false)\n    const [isOpenLoginDialog, setIsOpenLoginDialog] = useState(false)\n    const [emailIsAlreadyExistsDialog, setEmailIsAlreadyExistsDialog] = useState(false)\n    const loginfo = useSelector((state) => state.orest.currentUser && state.orest.currentUser.loginfo)\n    const token = useSelector((state) => state?.orest?.currentUser?.auth.access_token || false)\n    const clientBase = useSelector((state) => state?.orest?.state?.client || false)\n    const router = useRouter()\n    const iframe = router.query.iframe === 'true'\n    const isLogoutButton = (token && iframe)\n    const { deleteOrestCurrentUserInfo, resetOrestState } = useOrestAction()\n\n    useEffect(() => {\n        let isEffect = true\n\n        if (isEffect && WEBCMS_DATA?.assets?.meta?.googleTag) {\n            TagManager.page.setChange({\n                hotelName: WEBCMS_DATA?.assets?.meta?.title,\n                hotelId: GENERAL_SETTINGS.HOTELREFNO,\n                pageTitle: window.document.title,\n                pagePath: location.href,\n                pageStep: 'Guest Details',\n            })\n        }\n\n        return () => {\n            isEffect = false\n        }\n    }, [])\n\n    useEffect(()=> {\n        window.handleContinueByGuestDetailPage = () => {\n            return handleContinue()\n        }\n    }, [state.selectedPaymentTypeId])\n\n    useEffect(() => {\n        if (loginfo) {\n            setIsLoginDialog(true)\n            UseOrest({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: 'auth/checktoken',\n                token: token,\n                method: REQUEST_METHOD_CONST.POST,\n                params: {\n                    token: token,\n                    hotelrefno: '',\n                },\n            }).then((checkTokenResponse) => {\n                if (checkTokenResponse?.data?.active) {\n                    if (clientBase && clientBase?.id) {\n                        setClientInfo(clientBase)\n                    } else if (loginfo.accid && token) {\n                        UseOrest({\n                            apiUrl: GENERAL_SETTINGS.OREST_URL,\n                            endpoint: 'client/getbyid',\n                            token,\n                            params: {\n                                key: loginfo.accid,\n                                allhotels: true,\n                            },\n                        }).then((client) => {\n                            if (client.status === 200 && client.data.count > 0) {\n                                setClientInfo(client.data.data)\n                            }\n                        })\n                    }\n                }else{\n                    enqueueSnackbar(t('str_sessionTimeoutLoginAgain'), { variant: 'info' })\n                    deleteOrestCurrentUserInfo()\n                }\n            }).catch(() => {\n                enqueueSnackbar(t('str_sessionTimeoutLoginAgain'), { variant: 'info' })\n                deleteOrestCurrentUserInfo()\n            })\n        } else {\n            setIsLoginDialog(false)\n        }\n    }, [clientBase, loginfo])\n\n    const setClientInfo = (clientInfoData) => {\n        let newContactInfo = state.contactInfo\n\n        newContactInfo.firstName.value = clientInfoData.firstname\n        newContactInfo.firstName.iserror = false\n        selectedRooms[0].guestList[0].firstName.value = clientInfoData.firstname\n\n        newContactInfo.lastName.value = clientInfoData.lastname\n        newContactInfo.lastName.iserror = false\n        selectedRooms[0].guestList[0].lastName.value = clientInfoData.lastname\n\n        newContactInfo.mail.value = clientInfoData.email\n        newContactInfo.mail.iserror = false\n        selectedRooms[0].guestList[0].mail.value = clientInfoData.email\n\n\n        newContactInfo.birthDate.value = clientInfoData.birthdate\n        newContactInfo.birthDate.iserror = false\n        selectedRooms[0].guestList[0].birthDate.value = clientInfoData.birthdate\n\n        newContactInfo.healthcode.value = clientInfoData.healthcode\n        newContactInfo.healthcode.iserror = false\n        selectedRooms[0].guestList[0].healthcode.value = clientInfoData.healthcode\n\n        newContactInfo.phone.value = clientInfoData.mobiletel\n        newContactInfo.phone.iserror = false\n        selectedRooms[0].guestList[0].phone.value = clientInfoData.mobiletel\n\n        setToState('ibe', ['selectedRooms'], selectedRooms)\n        setToState('ibe', ['contactInfo'], newContactInfo)\n    }\n\n    const [createAccount, setCreateAccount] = useState({\n        isActive: false,\n        password: '',\n        showPassword: false,\n        isError: false\n    })\n\n    const { enqueueSnackbar } = useSnackbar()\n\n    const contactInfoSettings = {\n        spacing: 2,\n        margin: 'none',\n        variant: 'outlined',\n    }\n\n    const hasPayType = async (id, filter) => {\n        const payType = state.hotelPaymentType && state.hotelPaymentType.paymentypes.length > 0 && state.hotelPaymentType.paymentypes.filter((item) => item[filter])[0]\n        return Boolean(payType && Number(id) === Number(payType.id))\n    }\n\n    let selectedRooms = state.selectedRooms\n    let contactInfo = mandatoryFieldMarker(state.contactInfo, GENERAL_SETTINGS.hotelSettings.ci_reqflds)\n\n    const changeFirstName = (e) => {\n        contactInfo.firstName.value = e.currentTarget.value\n        contactInfo.firstName.iserror = false\n        selectedRooms[0].guestList[0].firstName.value = e.currentTarget.value\n        setToState('ibe', ['selectedRooms'], selectedRooms)\n        setToState('ibe', ['contactInfo'], contactInfo)\n    }\n\n    const changeLastName = (e) => {\n        contactInfo.lastName.value = e.currentTarget.value\n        contactInfo.lastName.iserror = false\n        selectedRooms[0].guestList[0].lastName.value = e.currentTarget.value\n        setToState('ibe', ['selectedRooms'], selectedRooms)\n        setToState('ibe', ['contactInfo'], contactInfo)\n    }\n\n    const changeMail = (e) => {\n        setToState('ibe', ['continueWithoutClientRecord'], false)\n        contactInfo.mail.value = e.currentTarget.value\n        contactInfo.mail.iserror = false\n        selectedRooms[0].guestList[0].mail.value = e.currentTarget.value\n        setToState('ibe', ['selectedRooms'], selectedRooms)\n        setToState('ibe', ['contactInfo'], contactInfo)\n    }\n\n    const changeHealtCode = (e) => {\n        contactInfo.healthcode.value = e.currentTarget.value\n        contactInfo.healthcode.iserror = false\n        selectedRooms[0].guestList[0].healthcode.value = e.currentTarget.value\n        setToState('ibe', ['selectedRooms'], selectedRooms)\n        setToState('ibe', ['contactInfo'], contactInfo)\n    }\n\n    const changePhoneNumber = (e) => {\n        contactInfo.phone.value = e\n        contactInfo.phone.iserror = false\n        selectedRooms[0].guestList[0].phone.value = e\n        setToState('ibe', ['selectedRooms'], selectedRooms)\n        setToState('ibe', ['contactInfo'], contactInfo)\n    }\n\n    const changeDateOfBirth = (date) => {\n        if (date) {\n            if (date._isValid) {\n                contactInfo.birthDate.value = date._d\n                selectedRooms[0].guestList[0].birthDate.value = date._d\n            } else {\n                contactInfo.birthDate.value = date._d\n                selectedRooms[0].guestList[0].birthDate.value = date._d\n            }\n            contactInfo.birthDate.iserror = false\n            setToState('ibe', ['selectedRooms'], selectedRooms)\n            setToState('ibe', ['contactInfo'], contactInfo)\n        }\n    }\n\n    const changeNote = (e) => {\n        contactInfo.note.value = e.currentTarget.value\n        selectedRooms[0].guestList[0].note.value = e.currentTarget.value\n        setToState('ibe', ['selectedRooms'], selectedRooms)\n        setToState('ibe', ['contactInfo'], contactInfo)\n    }\n\n    const emailValidation = (email) => {\n        return axios({\n            url: `${GENERAL_SETTINGS.BASE_URL}api/ors/guest/email/valid`,\n            method: 'post',\n            data: {\n                email: email\n            }\n        }).then((response)=> {\n            return response.data\n        })\n    }\n\n    const handleContinue = async (continueWithoutClientRecord) => {\n        setToState('ibe', ['isHandleContinue'], true)\n        let isRequiredError = false, isEmailError = false\n\n        Object.keys(contactInfo).forEach(function(key) {\n            if (contactInfo[key].isrequired) {\n                if (required(contactInfo[key].value)) {\n                    contactInfo[key].iserror = true\n                    isRequiredError = true\n                }\n            }\n        })\n\n        if(createAccount.isActive && (createAccount.password === '' || createAccount.password.length < 6)){\n            setCreateAccount({ ...createAccount, isError: true })\n            enqueueSnackbar(t('str_pleaseCheckYourPassword'), { variant: 'error' })\n            isRequiredError = true\n        }else{\n            setCreateAccount({ ...createAccount, isError: false })\n        }\n\n        const contactEmail = await emailValidation(contactInfo.mail.value)\n        if(!continueWithoutClientRecord && contactEmail.exits && !loginfo){\n            isEmailError = true\n            contactInfo['mail'].iserror = true\n            setEmailIsAlreadyExistsDialog(true)\n            setToState('ibe', ['isHandleContinue'], false)\n        }\n\n        if(!contactEmail.validation){\n            isEmailError = true\n            contactInfo['mail'].iserror = true\n        }\n\n        if(!Number(state.selectedPaymentTypeId) > 0){\n            enqueueSnackbar(t('str_pleaseSelectAPaymentMethodToContinue'), { variant: 'warning' })\n            setToState('ibe', ['isHandleContinue'], false)\n            return;\n        }\n\n        const checkPayTypeIsMailOrder = await hasPayType(state.selectedPaymentTypeId, 'ismailorder')\n        if(checkPayTypeIsMailOrder && (!state.mailOrderInfo.cardIsValid)){\n            enqueueSnackbar(t('str_pleaseCheckYourCardInformation'), { variant: 'warning' })\n            setToState('ibe', ['isHandleContinue'], false)\n            return;\n        }\n\n        setToState('ibe', ['contactInfo'], contactInfo)\n        selectedRooms.map((room, roomIndex) => {\n            if (roomIndex !== 0 || (roomIndex === 0 && room.totalpax > 1)) {\n                Array.from({ length: room.totalpax }).map((pax, paxIndex) => {\n                    if (roomIndex > 0 || (roomIndex === 0 && paxIndex > 0)) {\n                        let guestList = selectedRooms[roomIndex].guestList[paxIndex]\n                        Object.keys(guestList).forEach(function(key) {\n                            if (guestList[key].isrequired) {\n                                if (required(guestList[key].value)) {\n                                    guestList[key].iserror = true\n                                    isRequiredError = true\n                                }\n                            }\n\n                            if (guestList['mail'].value) {\n                                if (validateEmail(guestList['mail'].value)) {\n                                    guestList['mail'].iserror = true\n                                    isEmailError = true\n                                }\n                            }\n                        })\n\n                        setToState('ibe', ['selectedRooms', roomIndex, 'guestList', paxIndex], guestList)\n                    }\n                })\n            }\n        })\n\n        if(isRequiredError || isEmailError){\n            setToState('ibe', ['isHandleContinue'], false)\n            if(!createAccount.isError && !contactEmail.exits){\n                enqueueSnackbar(t('str_pleaseCheckMandatoryFields'), { variant: 'error' })\n            }\n        }else{\n            setToState('ibe', ['isHandleContinue'], false)\n            if(createAccount.isActive){\n                setToState('ibe', ['clientPassword'], createAccount.password)\n            }\n            setToState('ibe', ['bookingActiveStep'], state.bookingActiveStep + 1)\n        }\n    }\n\n    const handleLogout = () => {\n        deleteOrestCurrentUserInfo()\n        resetOrestState()\n    }\n\n    return (\n        <React.Fragment>\n            <TrackedChangesDialog\n                isContainedNo={false}\n                dialogTitle={t('str_info')}\n                dialogDesc={t('str_thisEmailAddressHasBeenUsedBeforeYouCanContinueTheReservationByLoggingIn')}\n                labelYes={t('str_logInHere')}\n                labelNo={t('str_continueWithoutLogin')}\n                open={emailIsAlreadyExistsDialog}\n                onPressNo={() => {\n                    contactInfo['mail'].iserror = false\n                    setToState('ibe', ['contactInfo'], contactInfo)\n                    setToState('ibe', ['continueWithoutClientRecord'], true)\n                    setEmailIsAlreadyExistsDialog(false)\n                    handleContinue(true)\n                }}\n                onPressYes={() => {\n                    setEmailIsAlreadyExistsDialog(false)\n                    setIsOpenLoginDialog(true)\n                }}\n            />\n            {(!isLoginDialog) ? (\n                <React.Fragment>\n                    <LoginDialog open={isOpenLoginDialog} onClose={(status) => setIsOpenLoginDialog(status)} locationName='booking' isLoginWrapper disableRegister/>\n                    <Box p={3} className={classes.root}>\n                        <Grid container spacing={contactInfoSettings.spacing}>\n                            <Grid item xs={12}>\n                                <Typography variant='h6' gutterBottom>\n                                    {t('str_signInForAFasterBooking')}\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Button onClick={() => setIsOpenLoginDialog(true)} variant='contained' color='primary' size='large' disableElevation>\n                                    {t('str_login')}\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                </React.Fragment>\n            ): null}\n            {(!!isLoginDialog && isLogoutButton) ? (\n                <React.Fragment>\n                    <Box p={3} className={classes.root}>\n                        <Grid container spacing={contactInfoSettings.spacing}>\n                            <Grid item xs={12}>\n                                <Button onClick={() => handleLogout()} variant='contained' color='primary' size='large' disableElevation>\n                                    {t('str_logout')}\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                </React.Fragment>\n            ) : null}\n            <Box p={3} className={classes.root}>\n                <Grid container spacing={contactInfoSettings.spacing}>\n                    <Grid item xs={12}>\n                        <Typography variant=\"h6\" gutterBottom>\n                            {t('str_contactInfo')}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <TextField\n                            disabled={Boolean(loginfo)}\n                            className={classes.infoTextField}\n                            margin={contactInfoSettings.margin}\n                            variant={contactInfoSettings.variant}\n                            required={state.contactInfo.firstName.isrequired}\n                            id=\"firstName\"\n                            name=\"firstName\"\n                            label={t('str_firstName')}\n                            fullWidth\n                            onChange={(e)=> changeFirstName(e)}\n                            value={state.contactInfo.firstName.value || ''}\n                            error={state.contactInfo.firstName.iserror}\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <TextField\n                            disabled={Boolean(loginfo)}\n                            className={classes.infoTextField}\n                            margin={contactInfoSettings.margin}\n                            variant={contactInfoSettings.variant}\n                            required={state.contactInfo.lastName.isrequired}\n                            id=\"lastName\"\n                            name=\"lastName\"\n                            label={t('str_lastName')}\n                            fullWidth\n                            onChange={(e)=> changeLastName(e)}\n                            value={state.contactInfo.lastName.value || ''}\n                            error={state.contactInfo.lastName.iserror}\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <TextField\n                            disabled={Boolean(loginfo)}\n                            className={classes.infoTextField}\n                            margin={contactInfoSettings.margin}\n                            variant={contactInfoSettings.variant}\n                            required={state.contactInfo.mail.isrequired}\n                            id=\"mail\"\n                            name=\"mail\"\n                            label={t('str_email')}\n                            fullWidth\n                            onChange={(e)=> changeMail(e)}\n                            value={state.contactInfo.mail.value || ''}\n                            error={state.contactInfo.mail.iserror}\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <PhoneInput\n                            disabled={Boolean(loginfo)}\n                            className={classes.infoTextField}\n                            defaultCountry={locale === 'en' ? 'us': locale}\n                            preferredCountries={['it', 'ie', 'de', 'fr', 'es', 'gb']}\n                            regions={['america', 'europe', 'asia', 'oceania', 'africa']}\n                            id=\"phone\"\n                            name=\"phone\"\n                            label={t('str_phone')}\n                            fullWidth\n                            margin={contactInfoSettings.margin}\n                            variant={contactInfoSettings.variant}\n                            onChange={(e)=> changePhoneNumber(e)}\n                            required={state.contactInfo.phone.isrequired}\n                            value={state.contactInfo.phone.value || ''}\n                            error={state.contactInfo.phone.iserror}\n                        />\n                    </Grid>\n                    {GENERAL_SETTINGS?.hotelSettings?.reg_birthdate && (\n                        <Grid item xs={12} sm={6}>\n                            <LocalizationProvider dateLibInstance={moment} dateAdapter={MomentAdapter}>\n                                <DatePicker\n                                    disabled={Boolean(loginfo)}\n                                    autoOk\n                                    id=\"birthdate\"\n                                    name=\"birthdate\"\n                                    fullWidth\n                                    disableFuture\n                                    openTo={'date'}\n                                    views={['year', 'month', 'date']}\n                                    inputFormat=\"DD/MM/YYYY\"\n                                    label={t('str_birthDate')}\n                                    onChange={(e) => changeDateOfBirth(e)}\n                                    value={state.contactInfo.birthDate.value ? moment(state.contactInfo.birthDate.value) : moment().subtract(state.maxChildAge > 0 ? state.maxChildAge : 12, 'years')}\n                                    renderInput={(props) =>\n                                        <TextField\n                                            {...props}\n                                            className={classes.infoTextField}\n                                            margin={contactInfoSettings.margin}\n                                            variant={contactInfoSettings.variant}\n                                            fullWidth\n                                            helperText=\"\"\n                                            required={state.contactInfo.birthDate.isrequired}\n                                            error={state.contactInfo.birthDate.iserror}\n                                        />\n                                    }\n                                />\n                            </LocalizationProvider>\n                        </Grid>\n                    )}\n                    {GENERAL_SETTINGS?.hotelSettings?.reg_healthcode && (\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                disabled={Boolean(loginfo)}\n                                className={classes.infoTextField}\n                                margin={contactInfoSettings.margin}\n                                variant={contactInfoSettings.variant}\n                                required={state.contactInfo.healthcode.isrequired}\n                                id=\"healtcode\"\n                                name=\"healtcode\"\n                                label={t('str_healthCode')}\n                                fullWidth\n                                onChange={(e)=> changeHealtCode(e)}\n                                value={state.contactInfo.healthcode.value || ''}\n                                error={state.contactInfo.healthcode.iserror}\n                            />\n                        </Grid>\n                    )}\n                    <Grid item xs={12}>\n                        <TextField\n                            className={classes.infoTextField}\n                            margin=\"dense\"\n                            variant=\"outlined\"\n                            id=\"note\"\n                            name=\"note\"\n                            label={t('str_note')}\n                            fullWidth\n                            multiline\n                            rows={4}\n                            onChange={(e)=> changeNote(e)}\n                            required={state.contactInfo.note.isrequired}\n                            value={state.contactInfo.note.value || ''}\n                            error={state.contactInfo.note.iserror}\n                        />\n                    </Grid>\n                    {(!state.continueWithoutClientRecord && !isLoginDialog) ? (\n                        <Grid item xs={12}>\n                            <Divider variant=\"fullWidth\" />\n                            <FormGroup row>\n                                <FormControlLabel\n                                    control={<Checkbox name=\"create-account\" color=\"primary\" value={createAccount} onClick={()=> setCreateAccount({ ...createAccount, isActive: !createAccount.isActive })}/>}\n                                    label={t('str_iWouldLikeToCreateAnAccount')}\n                                />\n                            </FormGroup>\n                            {createAccount.isActive && (\n                                <Box component=\"span\" display={createAccount.isActive ? 'block' : 'none'}>\n                                    <FormControl variant=\"outlined\">\n                                        <InputLabel htmlFor=\"create-account-password\">{t('str_password')}</InputLabel>\n                                        <OutlinedInput\n                                            className={classes.infoTextField}\n                                            id=\"create-account-password\"\n                                            type={createAccount.showPassword ? 'text' : 'password'}\n                                            value={createAccount.password}\n                                            onChange={(e) => setCreateAccount({ ...createAccount, password: e.target.value, })}\n                                            aria-describedby=\"create-account-password-helper-text\"\n                                            labelWidth={70}\n                                            endAdornment={\n                                                <InputAdornment position=\"end\">\n                                                    <IconButton\n                                                        aria-label=\"toggle password visibility\"\n                                                        onClick={() => setCreateAccount({ ...createAccount, showPassword: !createAccount.showPassword, })}\n                                                        onMouseDown={(e) => e.preventDefault()}\n                                                    >\n                                                        {createAccount.showPassword ? <Visibility/> : <VisibilityOff/>}\n                                                    </IconButton>\n                                                </InputAdornment>\n                                            }\n                                        />\n                                        <FormHelperText id=\"create-account-password-helper-text\" className={clsx(classes.createAccountHelperText, { [classes.textRed]: createAccount.isError } )}>{createAccount.isError ? t('str_yourPasswordMustBeAMinOf6Characters') : t('str_bookFasterOptional')}</FormHelperText>\n                                    </FormControl>\n                                </Box>\n                            )}\n                        </Grid>\n                    ): null}\n                </Grid>\n            </Box>\n            {state.selectedRooms.length > 1 || (state.selectedRooms.length >= 1 && state.selectedRooms[0].guestList.length > 1) ? (\n                <Box p={3} className={classes.root}>\n                    <Grid container spacing={contactInfoSettings.spacing}>\n                        <Grid item xs={12}>\n                            <Typography variant=\"h6\" gutterBottom>\n                                {t('str_otherGuests')}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                            {state.selectedRooms && state.selectedRooms.map((room, roomIndex) => {\n                                    let roomNo = roomIndex + 1\n                                    const numberOfGuests = Number(room.totalpax) + Number(room.totalchd)\n                                    if (roomIndex !== 0 || (roomIndex === 0 && numberOfGuests > 1)) {\n                                        return (\n                                            <div key={roomIndex} style={{ marginBottom: 10 }}>\n                                                <Typography variant='subtitle1' style={{ marginBottom: 10 }}>\n                                                    {roomNo}.{' '}{t('str_room')} ({state.roomAvailabilityList && state.roomAvailabilityList.length > 0 && state.roomAvailabilityList.find((item) => item.id === room.roomtypeid).description})\n                                                </Typography>\n                                                {Array.from({ length: numberOfGuests }).map((pax, paxIndex) => {\n                                                    if (roomIndex > 0 || (roomIndex === 0 && paxIndex > 0)) {\n                                                        let paxNo = paxIndex + 1\n                                                        return (\n                                                            <div key={paxIndex} style={{ marginBottom: 10 }}>\n                                                                <Typography variant='caption' display='block' style={{ marginBottom: 10 }}>\n                                                                    {paxNo}.{' '}{t('str_guest')}\n                                                                </Typography>\n                                                                <OtherGuestInfo roomIndex={roomIndex} paxIndex={paxIndex} />\n                                                            </div>\n                                                        )\n                                                    }\n                                                })}\n                                            </div>\n                                        )\n                                    }\n                                },\n                            )}\n                        </Grid>\n                    </Grid>\n                </Box>\n            ) : null}\n            <Box p={3} className={classes.root}>\n                <Grid container spacing={contactInfoSettings.spacing}>\n                    <Grid item xs={12}>\n                        <Typography variant=\"h6\" gutterBottom>\n                            {t('str_paymentInformation')}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <PaymentInformation\n                            textFieldsClass={classes.infoTextField}\n                            onChange={(e)=> setToState('ibe', ['creditCardInfo'], e)}\n                        />\n                    </Grid>\n                </Grid>\n            </Box>\n            <Box p={3} className={classes.root}>\n                <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"center\" spacing={3}>\n                    <Grid item>\n                        <Button\n                            disabled={state.isHandleContinue}\n                            variant='outlined'\n                            color='secondary'\n                            size='large'\n                            disableElevation\n                            startIcon={<ArrowBackIcon />}\n                            onClick={() =>  setToState('ibe', ['bookingActiveStep'], state.bookingActiveStep - 1)}\n                        >\n                            {t('str_back')}\n                        </Button>\n                    </Grid>\n                    <Grid item>\n                        <ProgressButton isLoading={state.isHandleContinue}>\n                            <Button\n                                disabled={state.isHandleContinue}\n                                onClick={()=> handleContinue()}\n                                variant=\"contained\"\n                                color=\"primary\"\n                                size=\"large\"\n                                disableElevation\n                            >\n                                {t('str_continueReservation')}\n                            </Button>\n                        </ProgressButton>\n                    </Grid>\n                </Grid>\n            </Box>\n        </React.Fragment>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        state: state.formReducer.ibe,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GuestDetailsPage)\n\n"]},"metadata":{},"sourceType":"module"}