{"ast":null,"code":"import _extends from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/mata/app-cloudweb/components/guest/account/Client/Update.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useContext, useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport styles from 'components/guest/register/style/Register.style';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DatePicker, LocalizationProvider } from '@material-ui/pickers';\nimport { UseOrest } from '@webcms/orest';\nimport MomentAdapter from '@date-io/moment';\nimport WebCmsGlobal from 'components/webcms-global';\nimport axios from 'axios';\nimport { OREST_ENDPOINT, REQUEST_METHOD_CONST } from 'model/orest/constants';\nimport moment from 'moment';\nimport { required, validateEmail } from 'state/utils/form';\nimport Button from '@material-ui/core/Button';\nimport GenderSelect from 'components/guest/register/selects/GenderSelect';\nimport NationSelect from 'components/guest/register/selects/NationSelect';\nimport CountrySelect from 'components/guest/register/selects/CountrySelect';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nimport FrameCheckbox from '@webcms-ui/core/frame-checkbox';\nimport * as global from '@webcms-globals';\nimport { LocaleContext } from 'lib/translations/context/LocaleContext';\nimport PhoneInput from '@webcms-ui/core/phone-input';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { useSnackbar } from 'notistack';\nimport { connect } from 'react-redux';\nimport { updateState as _updateState } from 'state/actions';\nvar useStyles = makeStyles(styles);\nvar VARIANT = 'filled';\n\nvar Update = function Update(props) {\n  _s();\n\n  var classes = useStyles();\n\n  var _useContext = useContext(WebCmsGlobal),\n      GENERAL_SETTINGS = _useContext.GENERAL_SETTINGS;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useContext2 = useContext(LocaleContext),\n      locale = _useContext2.locale;\n\n  var _useSnackbar = useSnackbar(),\n      enqueueSnackbar = _useSnackbar.enqueueSnackbar;\n\n  var open = props.open,\n      auth = props.auth,\n      logInfo = props.logInfo,\n      locationName = props.locationName,\n      onCallback = props.onCallback,\n      updateState = props.updateState;\n  var token = auth.access_token; //state\n\n  var _useState = useState(false),\n      isRegistering = _useState[0],\n      setIsRegistering = _useState[1];\n\n  var _useState2 = useState(false),\n      clientInfoData = _useState2[0],\n      setClientInfoData = _useState2[1];\n\n  var isReqField = locationName !== 'survey' ? true : false;\n\n  var _useState3 = useState({\n    firstname: {\n      value: '',\n      isRequired: true,\n      isError: false,\n      errorText: ''\n    },\n    lastname: {\n      value: '',\n      isRequired: true,\n      isError: false,\n      errorText: ''\n    },\n    birthdate: {\n      value: '',\n      isRequired: true,\n      isError: false,\n      errorText: ''\n    },\n    gender: {\n      value: '',\n      isRequired: false,\n      isError: false,\n      errorText: ''\n    },\n    email: {\n      value: '',\n      isRequired: true,\n      isError: false,\n      errorText: ''\n    },\n    mobiletel: {\n      value: '',\n      isRequired: false,\n      isError: false,\n      errorText: ''\n    },\n    nationid: {\n      value: '',\n      isRequired: false,\n      isError: false,\n      errorText: ''\n    },\n    country: {\n      value: '',\n      isRequired: false,\n      isError: false,\n      errorText: ''\n    },\n    address1: {\n      value: '',\n      isRequired: false,\n      isError: false,\n      errorText: ''\n    },\n    city: {\n      value: '',\n      isRequired: false,\n      isError: false,\n      errorText: ''\n    },\n    zip: {\n      value: '',\n      isRequired: false,\n      isError: false,\n      errorText: ''\n    },\n    hasdatapolicy: {\n      value: false,\n      isRequired: true,\n      isError: false,\n      errorText: ''\n    },\n    haspref: {\n      value: false,\n      isRequired: isReqField,\n      isError: false,\n      errorText: ''\n    }\n  }),\n      client = _useState3[0],\n      setClient = _useState3[1];\n\n  useEffect(function () {\n    updateState('guest', 'loginTo', 60);\n    UseOrest({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: 'client/getbyid',\n      token: token,\n      params: {\n        key: logInfo.refid,\n        allhotels: true\n      }\n    }).then(function (clientResponse) {\n      if (clientResponse.status === 200 && clientResponse.data.count > 0) {\n        var clientResponseData = clientResponse.data.data;\n        setClientInfoData(clientResponseData);\n        clientResponseData.hasdatapolicy = logInfo.hasdatapolicy || false;\n        clientResponseData.haspref = logInfo.haspref || false;\n        var newClient = client;\n        Object.keys(newClient).forEach(function (key) {\n          var value = clientResponseData[key];\n\n          if (value) {\n            newClient = _objectSpread(_objectSpread({}, newClient), {}, _defineProperty({}, key, _objectSpread(_objectSpread({}, newClient[key]), {}, {\n              value: value || ''\n            })));\n          }\n        });\n        setClient(newClient);\n      }\n    });\n  }, []);\n\n  var handleChangeTextField = function handleChangeTextField(event, type) {\n    var key, value;\n\n    if (type === 'phone') {\n      key = 'mobiletel';\n      value = event.replace(/ /g, '');\n    } else {\n      event.preventDefault();\n      key = event.target.name;\n      value = event.target.value;\n    }\n\n    setClient(_objectSpread(_objectSpread({}, client), {}, _defineProperty({}, key, _objectSpread(_objectSpread({}, client[key]), {}, {\n      value: value,\n      isError: client[key].isRequired && !!required(value),\n      errorText: client[key].isRequired && required(value)\n    }))));\n  };\n\n  var handleChangeDatePicker = function handleChangeDatePicker(date) {\n    var dateValue = moment(date).format(OREST_ENDPOINT.DATEFORMAT);\n    setClient(_objectSpread(_objectSpread({}, client), {}, {\n      birthdate: _objectSpread(_objectSpread({}, client.birthdate), {}, {\n        value: dateValue,\n        isError: dateValue === 'Invalid date',\n        errorText: '*Invalid date'\n      })\n    }));\n  };\n\n  var handleChangeSelect = function handleChangeSelect(event) {\n    setClient(_objectSpread(_objectSpread({}, client), {}, _defineProperty({}, event.target.name, _objectSpread(_objectSpread({}, client[event.target.name]), {}, {\n      value: event.target.value,\n      isError: client[event.target.name].isRequired && !!required(event.target.value),\n      errorText: client[event.target.name].isRequired && required(event.target.value)\n    }))));\n  };\n\n  var handleClickDataPolicyButtons = function handleClickDataPolicyButtons(isAccept) {\n    setClient(_objectSpread(_objectSpread({}, client), {}, {\n      hasdatapolicy: _objectSpread(_objectSpread({}, client.hasdatapolicy), {}, {\n        value: isAccept,\n        isError: client.hasdatapolicy.isRequired && !!required(isAccept),\n        errorText: client.hasdatapolicy.isRequired && required(isAccept)\n      })\n    }));\n  };\n\n  var handleClickTravelPolicyButtons = function handleClickTravelPolicyButtons(isAccept) {\n    setClient(_objectSpread(_objectSpread({}, client), {}, {\n      haspref: _objectSpread(_objectSpread({}, client.haspref), {}, {\n        value: isAccept,\n        isError: client.haspref.isRequired && !!required(isAccept),\n        errorText: client.haspref.isRequired && required(isAccept)\n      })\n    }));\n  };\n\n  var handleClickRegister = function handleClickRegister() {\n    var isRequiredError = false;\n    var isEmailError = false;\n    var clientData = client;\n    Object.keys(clientData).forEach(function (key) {\n      if (clientData[key].isRequired) {\n        if (required(clientData[key].value)) {\n          clientData[key].isError = true;\n          clientData[key].errorText = '*Required';\n          isRequiredError = true;\n        }\n      }\n    });\n\n    if (validateEmail(client.email.value)) {\n      clientData.email.isError = true;\n      clientData.email.errorText = '*Invalid email address';\n      isEmailError = true;\n    }\n\n    setClient(_objectSpread({}, client));\n\n    if (!isEmailError && !isRequiredError) {\n      setIsRegistering(true);\n      axios({\n        url: GENERAL_SETTINGS.BASE_URL + 'api/ors/user/update',\n        method: REQUEST_METHOD_CONST.POST,\n        data: {\n          firstname: client.firstname.value,\n          lastname: client.lastname.value,\n          birthdate: client.birthdate.value,\n          gender: client.gender.value,\n          email: client.email.value,\n          mobiletel: client.mobiletel.value,\n          nationid: client.nationid.value,\n          country: client.country.value,\n          address1: client.address1.value,\n          city: client.city.value,\n          zip: client.zip.value,\n          hasdatapolicy: client.hasdatapolicy.value,\n          haspref: client.haspref.value,\n          refid: logInfo.refid,\n          refgid: clientInfoData.gid,\n          updatetoken: token,\n          location: locationName,\n          clienthotelrefno: clientInfoData.hotelrefno || logInfo.hoteltopid || logInfo.hotelpid || logInfo.hotelrefno,\n          hotelrefno: GENERAL_SETTINGS.HOTELREFNO\n        }\n      }).then(function (response) {\n        if (response.data && response.data.success) {\n          UseOrest({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: 'info/login',\n            token: token,\n            method: REQUEST_METHOD_CONST.GET\n          }).then(function (infoLoginResponse) {\n            if (infoLoginResponse.data && infoLoginResponse.data.success) {\n              onCallback(auth, infoLoginResponse.data.data);\n              enqueueSnackbar(t('str_clientInfoUpdateSuccess'), {\n                variant: 'success'\n              });\n            }\n          });\n        } else {\n          var _response$data;\n\n          if ((response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.msg) === 'client_duplicate_mail') {\n            setIsRegistering(false);\n            enqueueSnackbar(t('str_thisEmailAddressHasBeenUsedBefore'), {\n              variant: 'error'\n            });\n          } else {\n            enqueueSnackbar(t('str_unexpectedProblem'), {\n              variant: 'error'\n            });\n          }\n        }\n      });\n    } else {\n      setIsRegistering(false);\n      enqueueSnackbar(t('str_fillRequiredFields'), {\n        variant: 'error'\n      });\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: classes.registerContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }\n  }, __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 17\n    }\n  }, __jsx(Dialog, {\n    open: open,\n    \"aria-labelledby\": \"form-dialog-title\",\n    maxWidth: \"md\",\n    disableEscapeKeyDown: true,\n    disableBackdropClick: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 21\n    }\n  }, __jsx(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 25\n    }\n  }, t('str_updateYourInformation')), __jsx(DialogContent, {\n    dividers: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 25\n    }\n  }, __jsx(Grid, {\n    container: true,\n    className: classes.gridContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 29\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 33\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 3,\n    className: classes.grid,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 37\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 41\n    }\n  }, __jsx(TextField, {\n    id: \"firstname\",\n    name: \"firstname\",\n    label: t('str_firstName'),\n    required: client.firstname.isRequired,\n    fullWidth: true,\n    variant: VARIANT,\n    disabled: isRegistering,\n    value: client.firstname.value,\n    onChange: handleChangeTextField,\n    error: client.firstname.isError,\n    helperText: client.firstname.isError && client.firstname.errorText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 45\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 41\n    }\n  }, __jsx(TextField, {\n    id: \"lastname\",\n    name: \"lastname\",\n    label: t('str_lastName'),\n    required: client.lastname.isRequired,\n    fullWidth: true,\n    variant: VARIANT,\n    disabled: isRegistering,\n    value: client.lastname.value,\n    onChange: handleChangeTextField,\n    error: client.lastname.isError,\n    helperText: client.lastname.isError && client.lastname.errorText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 45\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 41\n    }\n  }, __jsx(TextField, {\n    id: \"email\",\n    name: \"email\",\n    label: t('str_email'),\n    required: client.email.isRequired,\n    fullWidth: true,\n    variant: VARIANT,\n    disabled: isRegistering,\n    value: client.email.value,\n    onChange: function onChange(event) {\n      handleChangeTextField(event);\n    },\n    error: client.email.isError,\n    helperText: client.email.isError && client.email.errorText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 45\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 41\n    }\n  }, __jsx(LocalizationProvider, {\n    dateLibInstance: moment,\n    dateAdapter: MomentAdapter,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 45\n    }\n  }, __jsx(DatePicker, {\n    id: \"birthdate\",\n    name: \"birthdate\",\n    label: t('str_birthDate'),\n    value: client.birthdate.value,\n    inputFormat: \"DD/MM/YYYY\",\n    required: client.birthdate.isRequired,\n    disableFuture: true,\n    disabled: isRegistering,\n    onChange: handleChangeDatePicker,\n    renderInput: function renderInput(props) {\n      return __jsx(TextField, _extends({}, props, {\n        fullWidth: true,\n        variant: VARIANT,\n        required: client.lastname.isRequired,\n        error: client.birthdate.isError,\n        helperText: client.birthdate.isError && client.birthdate.errorText,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 77\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 49\n    }\n  }))), locationName !== \"survey\" && __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 45\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 49\n    }\n  }, __jsx(GenderSelect, {\n    id: \"gender\",\n    name: \"gender\",\n    inputLabel: t('str_gender'),\n    value: client.gender.value,\n    onChange: handleChangeSelect,\n    disabled: isRegistering,\n    variant: VARIANT,\n    error: client.gender.isError,\n    helperText: client.gender.isError && client.gender.errorText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 53\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 49\n    }\n  }, __jsx(PhoneInput, {\n    defaultCountry: locale === 'en' ? 'us' : locale,\n    preferredCountries: ['it', 'ie', 'de', 'fr', 'es', 'gb'],\n    regions: ['america', 'europe', 'asia', 'oceania', 'africa'],\n    variant: VARIANT,\n    id: \"mobiletel\",\n    name: \"mobiletel\",\n    label: t('str_phone'),\n    fullWidth: true,\n    disabled: isRegistering,\n    value: client.mobiletel.value,\n    onChange: function onChange(e) {\n      return handleChangeTextField(e, 'phone');\n    },\n    error: client.mobiletel.isError,\n    helperText: client.mobiletel.isError && client.mobiletel.errorText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 53\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 49\n    }\n  }, __jsx(NationSelect, {\n    id: \"nationid\",\n    name: \"nationid\",\n    inputLabel: t('str_nationality'),\n    value: client.nationid.value,\n    onChange: handleChangeSelect,\n    disabled: isRegistering,\n    variant: VARIANT,\n    error: client.nationid.isError,\n    helperText: client.nationid.isError && client.nationid.errorText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 53\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 49\n    }\n  }, __jsx(CountrySelect, {\n    id: \"country\",\n    name: \"country\",\n    inputLabel: t('str_country'),\n    value: client.country.value,\n    onChange: handleChangeSelect,\n    disabled: isRegistering,\n    variant: VARIANT,\n    error: client.country.isError,\n    helperText: client.country.isError && client.country.errorText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 53\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 49\n    }\n  }, __jsx(TextField, {\n    id: \"address1\",\n    name: \"address1\",\n    label: t('str_address'),\n    required: client.address1.isRequired,\n    fullWidth: true,\n    variant: VARIANT,\n    disabled: isRegistering,\n    value: client.address1.value,\n    onChange: handleChangeTextField,\n    error: client.address1.isError,\n    helperText: client.address1.isError && client.address1.errorText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 53\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 49\n    }\n  }, __jsx(TextField, {\n    id: \"city\",\n    name: \"city\",\n    label: t('str_city'),\n    required: client.city.isRequired,\n    fullWidth: true,\n    variant: VARIANT,\n    disabled: isRegistering,\n    value: client.city.value,\n    onChange: handleChangeTextField,\n    error: client.city.isError,\n    helperText: client.city.isError && client.city.errorText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 53\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 49\n    }\n  }, __jsx(TextField, {\n    id: \"zip\",\n    name: \"zip\",\n    label: t('str_zip'),\n    required: client.zip.isRequired,\n    fullWidth: true,\n    variant: VARIANT,\n    disabled: isRegistering,\n    value: client.zip.value,\n    onChange: handleChangeTextField,\n    error: client.zip.isError,\n    helperText: client.zip.isError && client.zip.errorText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 53\n    }\n  })))))), __jsx(Grid, {\n    container: true,\n    className: classes.gridContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 29\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 33\n    }\n  }, __jsx(Grid, {\n    container: true,\n    className: classes.grid,\n    style: {\n      margin: '12px 0'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 37\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 41\n    }\n  }, __jsx(\"div\", {\n    style: {\n      paddingLeft: 18\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 45\n    }\n  }, __jsx(FrameCheckbox, {\n    required: true,\n    value: client.hasdatapolicy.value || false,\n    title: \"str_privacyAndPersonalDataProtectionPolicies\",\n    linkText: \"str_iAcceptDataPolicy\",\n    linkTextADesc: \"str_privacyAndPersonalDataProtectionPolicies\",\n    ifamePageUrl: GENERAL_SETTINGS.BASE_URL + \"info/\".concat(locale || global.common.strDefShortLangCode, \"/\").concat(global.guestWeb.strDataPolicy, \"?iframe=true\"),\n    isCheck: function isCheck(e) {\n      return handleClickDataPolicyButtons(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 49\n    }\n  }))), locationName !== \"survey\" && __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 45\n    }\n  }, __jsx(\"div\", {\n    style: {\n      paddingLeft: 18\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 49\n    }\n  }, __jsx(FrameCheckbox, {\n    required: true,\n    value: client.haspref.value || false,\n    title: \"str_hygieneAndTravelPolicies\",\n    linkText: \"str_iAcceptTravelPolicy\",\n    linkTextADesc: \"str_hygieneAndTravelPolicies\",\n    ifamePageUrl: GENERAL_SETTINGS.BASE_URL + \"info/\".concat(locale || global.common.strDefShortLangCode, \"/\").concat(global.guestWeb.strTravelPolicy, \"?iframe=true\"),\n    isCheck: function isCheck(e) {\n      return handleClickTravelPolicyButtons(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 53\n    }\n  })))))), __jsx(Grid, {\n    container: true,\n    className: classes.gridContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 29\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 33\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 3,\n    className: classes.grid,\n    justify: 'center',\n    style: {\n      textAlign: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 37\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 41\n    }\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      return handleClickRegister();\n    },\n    disabled: isRegistering,\n    fullWidth: true,\n    variant: \"contained\",\n    className: classes.submit,\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 45\n    }\n  }, t('str_update'))))))))));\n};\n\n_s(Update, \"Fy0rMjWQ6LWbGMHh8m3WhMa1Ic0=\", false, function () {\n  return [useStyles, useTranslation, useSnackbar];\n});\n\n_c = Update;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    state: state.formReducer.guest\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateState: function updateState(stateType, stateName, value) {\n      return dispatch(_updateState(stateType, stateName, value));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Update);\n\nvar _c;\n\n$RefreshReg$(_c, \"Update\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/guest/account/Client/Update.js"],"names":["React","useEffect","useContext","useState","Grid","TextField","styles","makeStyles","DatePicker","LocalizationProvider","UseOrest","MomentAdapter","WebCmsGlobal","axios","OREST_ENDPOINT","REQUEST_METHOD_CONST","moment","required","validateEmail","Button","GenderSelect","NationSelect","CountrySelect","useTranslation","FrameCheckbox","global","LocaleContext","PhoneInput","Dialog","DialogContent","DialogTitle","useSnackbar","connect","updateState","useStyles","VARIANT","Update","props","classes","GENERAL_SETTINGS","t","locale","enqueueSnackbar","open","auth","logInfo","locationName","onCallback","token","access_token","isRegistering","setIsRegistering","clientInfoData","setClientInfoData","isReqField","firstname","value","isRequired","isError","errorText","lastname","birthdate","gender","email","mobiletel","nationid","country","address1","city","zip","hasdatapolicy","haspref","client","setClient","apiUrl","OREST_URL","endpoint","params","key","refid","allhotels","then","clientResponse","status","data","count","clientResponseData","newClient","Object","keys","forEach","handleChangeTextField","event","type","replace","preventDefault","target","name","handleChangeDatePicker","date","dateValue","format","DATEFORMAT","handleChangeSelect","handleClickDataPolicyButtons","isAccept","handleClickTravelPolicyButtons","handleClickRegister","isRequiredError","isEmailError","clientData","url","BASE_URL","method","POST","refgid","gid","updatetoken","location","clienthotelrefno","hotelrefno","hoteltopid","hotelpid","HOTELREFNO","response","success","GET","infoLoginResponse","variant","msg","registerContainer","gridContainer","grid","e","margin","paddingLeft","common","strDefShortLangCode","guestWeb","strDataPolicy","strTravelPolicy","textAlign","submit","mapStateToProps","state","formReducer","guest","mapDispatchToProps","dispatch","stateType","stateName"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext, useState } from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\nimport styles from 'components/guest/register/style/Register.style'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { DatePicker, LocalizationProvider } from '@material-ui/pickers'\nimport { UseOrest } from '@webcms/orest'\nimport MomentAdapter from '@date-io/moment'\nimport WebCmsGlobal from 'components/webcms-global'\nimport axios from 'axios'\nimport { OREST_ENDPOINT, REQUEST_METHOD_CONST, } from 'model/orest/constants'\nimport moment from 'moment'\nimport { required, validateEmail } from 'state/utils/form'\nimport Button from '@material-ui/core/Button'\nimport GenderSelect from 'components/guest/register/selects/GenderSelect'\nimport NationSelect from 'components/guest/register/selects/NationSelect'\nimport CountrySelect from 'components/guest/register/selects/CountrySelect'\nimport useTranslation from 'lib/translations/hooks/useTranslation'\nimport FrameCheckbox from '@webcms-ui/core/frame-checkbox'\nimport * as global from '@webcms-globals'\nimport { LocaleContext } from 'lib/translations/context/LocaleContext'\nimport PhoneInput from '@webcms-ui/core/phone-input'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport { useSnackbar } from 'notistack'\nimport { connect } from 'react-redux'\nimport { updateState } from 'state/actions'\n\nconst useStyles = makeStyles(styles)\nconst VARIANT = 'filled'\n\nconst Update = (props) =>{\n    const classes = useStyles()\n    const { GENERAL_SETTINGS } = useContext(WebCmsGlobal)\n    const { t } = useTranslation()\n    const { locale } = useContext(LocaleContext)\n    const { enqueueSnackbar } = useSnackbar()\n\n    const { open, auth, logInfo, locationName, onCallback, updateState } = props\n    const token = auth.access_token\n\n    //state\n    const [isRegistering, setIsRegistering] = useState(false)\n    const [clientInfoData, setClientInfoData] = useState(false)\n    const isReqField = (locationName !== 'survey' ? true : false)\n    const [client, setClient] = useState({\n        firstname: { value: '', isRequired: true, isError: false, errorText: '' },\n        lastname: { value: '', isRequired: true, isError: false, errorText: '' },\n        birthdate: { value: '', isRequired: true, isError: false, errorText: '' },\n        gender: { value: '', isRequired: false, isError: false, errorText: '' },\n        email: { value: '', isRequired: true, isError: false, errorText: '' },\n        mobiletel: { value: '', isRequired: false, isError: false, errorText: '' },\n        nationid: { value: '', isRequired: false, isError: false, errorText: '' },\n        country: { value: '', isRequired: false, isError: false, errorText: '' },\n        address1: { value: '', isRequired: false, isError: false, errorText: '' },\n        city: { value: '', isRequired: false, isError: false, errorText: '' },\n        zip: { value: '', isRequired: false, isError: false, errorText: '' },\n        hasdatapolicy: { value: false, isRequired: true, isError: false, errorText: '' },\n        haspref: { value: false, isRequired: isReqField, isError: false, errorText: '' },\n    })\n\n    useEffect(() => {\n        updateState('guest', 'loginTo', 60)\n        UseOrest({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: 'client/getbyid',\n            token,\n            params: {\n                key: logInfo.refid,\n                allhotels: true\n            },\n        }).then((clientResponse) => {\n            if (clientResponse.status === 200 && clientResponse.data.count > 0) {\n                let clientResponseData = clientResponse.data.data\n                setClientInfoData(clientResponseData)\n                clientResponseData.hasdatapolicy = logInfo.hasdatapolicy || false\n                clientResponseData.haspref = logInfo.haspref || false\n\n                let newClient = client\n                Object.keys(newClient).forEach((key) => {\n                    const value = clientResponseData[key]\n                    if (value) {\n                        newClient = {\n                            ...newClient,\n                            [key]: {\n                                ...newClient[key],\n                                value: value || '',\n                            },\n                        }\n                    }\n                })\n\n                setClient(newClient)\n            }\n        })\n    }, [])\n\n    const handleChangeTextField = (event, type) => {\n\n        let key, value\n        if (type === 'phone') {\n            key = 'mobiletel'\n            value = event.replace(/ /g, '')\n        } else {\n            event.preventDefault()\n            key = event.target.name\n            value = event.target.value\n        }\n\n        setClient({\n            ...client,\n            [key]: {\n                ...client[key],\n                value: value,\n                isError: client[key].isRequired && !!required(value),\n                errorText: client[key].isRequired && required(value),\n            },\n        })\n    }\n\n    const handleChangeDatePicker = (date) => {\n        const dateValue = moment(date).format(OREST_ENDPOINT.DATEFORMAT)\n        setClient({\n            ...client,\n            birthdate: {\n                ...client.birthdate,\n                value: dateValue,\n                isError: dateValue === 'Invalid date',\n                errorText: '*Invalid date',\n            },\n        })\n    }\n\n    const handleChangeSelect = (event) => {\n        setClient({\n            ...client,\n            [event.target.name]: {\n                ...client[event.target.name],\n                value: event.target.value,\n                isError: client[event.target.name].isRequired && !!required(event.target.value),\n                errorText: client[event.target.name].isRequired && required(event.target.value),\n            },\n        })\n    }\n\n    const handleClickDataPolicyButtons = (isAccept) => {\n        setClient({\n            ...client,\n            hasdatapolicy: {\n                ...client.hasdatapolicy,\n                value: isAccept,\n                isError: client.hasdatapolicy.isRequired && !!required(isAccept),\n                errorText: client.hasdatapolicy.isRequired && required(isAccept),\n            },\n        })\n    }\n\n    const handleClickTravelPolicyButtons = (isAccept) => {\n        setClient({\n            ...client,\n            haspref: {\n                ...client.haspref,\n                value: isAccept,\n                isError: client.haspref.isRequired && !!required(isAccept),\n                errorText: client.haspref.isRequired && required(isAccept),\n            },\n        })\n    }\n\n    const handleClickRegister = () => {\n        let isRequiredError = false\n        let isEmailError = false\n        const clientData = client\n\n        Object.keys(clientData).forEach(function(key) {\n            if (clientData[key].isRequired) {\n                if (required(clientData[key].value)) {\n                    clientData[key].isError = true\n                    clientData[key].errorText = '*Required'\n                    isRequiredError = true\n                }\n            }\n        })\n\n        if (validateEmail(client.email.value)) {\n            clientData.email.isError = true\n            clientData.email.errorText = '*Invalid email address'\n            isEmailError = true\n        }\n\n        setClient({ ...client })\n        if (!isEmailError && !isRequiredError) {\n            setIsRegistering(true)\n            axios({\n                url: GENERAL_SETTINGS.BASE_URL + 'api/ors/user/update',\n                method: REQUEST_METHOD_CONST.POST,\n                data: {\n                    firstname: client.firstname.value,\n                    lastname: client.lastname.value,\n                    birthdate: client.birthdate.value,\n                    gender: client.gender.value,\n                    email: client.email.value,\n                    mobiletel: client.mobiletel.value,\n                    nationid: client.nationid.value,\n                    country: client.country.value,\n                    address1: client.address1.value,\n                    city: client.city.value,\n                    zip: client.zip.value,\n                    hasdatapolicy: client.hasdatapolicy.value,\n                    haspref: client.haspref.value,\n                    refid: logInfo.refid,\n                    refgid: clientInfoData.gid,\n                    updatetoken: token,\n                    location: locationName,\n                    clienthotelrefno: clientInfoData.hotelrefno || logInfo.hoteltopid || logInfo.hotelpid || logInfo.hotelrefno,\n                    hotelrefno: GENERAL_SETTINGS.HOTELREFNO\n                },\n            }).then((response) => {\n                if (response.data && response.data.success) {\n                    UseOrest({\n                        apiUrl: GENERAL_SETTINGS.OREST_URL,\n                        endpoint: 'info/login',\n                        token: token,\n                        method: REQUEST_METHOD_CONST.GET,\n                    }).then((infoLoginResponse) => {\n                        if (infoLoginResponse.data && infoLoginResponse.data.success) {\n                            onCallback(auth, infoLoginResponse.data.data)\n                            enqueueSnackbar(t('str_clientInfoUpdateSuccess'), { variant: 'success' })\n                        }\n                    })\n                } else {\n                    if(response?.data?.msg === 'client_duplicate_mail'){\n                        setIsRegistering(false)\n                        enqueueSnackbar(t('str_thisEmailAddressHasBeenUsedBefore'), { variant: 'error' })\n                    }else{\n                        enqueueSnackbar(t('str_unexpectedProblem'), { variant: 'error' })\n                    }\n                }\n            })\n        } else {\n            setIsRegistering(false)\n            enqueueSnackbar(t('str_fillRequiredFields'), { variant: 'error' })\n        }\n    }\n\n    return (\n        <div className={classes.registerContainer}>\n                <React.Fragment>\n                    <Dialog open={open} aria-labelledby=\"form-dialog-title\" maxWidth=\"md\" disableEscapeKeyDown disableBackdropClick>\n                        <DialogTitle id=\"form-dialog-title\">{t('str_updateYourInformation')}</DialogTitle>\n                        <DialogContent dividers={true}>\n                            <Grid container className={classes.gridContainer}>\n                                <Grid item xs={12}>\n                                    <Grid container spacing={3} className={classes.grid}>\n                                        <Grid item xs={12} sm={6}>\n                                            <TextField\n                                                id=\"firstname\"\n                                                name=\"firstname\"\n                                                label={t('str_firstName')}\n                                                required={client.firstname.isRequired}\n                                                fullWidth\n                                                variant={VARIANT}\n                                                disabled={isRegistering}\n                                                value={client.firstname.value}\n                                                onChange={handleChangeTextField}\n                                                error={client.firstname.isError}\n                                                helperText={client.firstname.isError && client.firstname.errorText}\n                                            />\n                                        </Grid>\n                                        <Grid item xs={12} sm={6}>\n                                            <TextField\n                                                id=\"lastname\"\n                                                name=\"lastname\"\n                                                label={t('str_lastName')}\n                                                required={client.lastname.isRequired}\n                                                fullWidth\n                                                variant={VARIANT}\n                                                disabled={isRegistering}\n                                                value={client.lastname.value}\n                                                onChange={handleChangeTextField}\n                                                error={client.lastname.isError}\n                                                helperText={client.lastname.isError && client.lastname.errorText}\n                                            />\n                                        </Grid>\n                                        <Grid item xs={12} sm={6}>\n                                            <TextField\n                                                id=\"email\"\n                                                name=\"email\"\n                                                label={t('str_email')}\n                                                required={client.email.isRequired}\n                                                fullWidth\n                                                variant={VARIANT}\n                                                disabled={isRegistering}\n                                                value={client.email.value}\n                                                onChange={(event) => {\n                                                    handleChangeTextField(event)\n                                                }}\n                                                error={client.email.isError}\n                                                helperText={client.email.isError && client.email.errorText}\n                                            />\n                                        </Grid>\n                                        <Grid item xs={12} md={6}>\n                                            <LocalizationProvider dateLibInstance={moment} dateAdapter={MomentAdapter}>\n                                                <DatePicker\n                                                    id=\"birthdate\"\n                                                    name=\"birthdate\"\n                                                    label={t('str_birthDate')}\n                                                    value={client.birthdate.value}\n                                                    inputFormat=\"DD/MM/YYYY\"\n                                                    required={client.birthdate.isRequired}\n                                                    disableFuture\n                                                    disabled={isRegistering}\n                                                    onChange={handleChangeDatePicker}\n                                                    renderInput={(props) => <TextField {...props} fullWidth variant={VARIANT} required={client.lastname.isRequired} error={client.birthdate.isError} helperText={client.birthdate.isError && client.birthdate.errorText}/>}\n                                                />\n                                            </LocalizationProvider>\n                                        </Grid>\n                                        {locationName !== \"survey\" && (\n                                            <React.Fragment>\n                                                <Grid item xs={12} sm={6}>\n                                                    <GenderSelect\n                                                        id=\"gender\"\n                                                        name=\"gender\"\n                                                        inputLabel={t('str_gender')}\n                                                        value={client.gender.value}\n                                                        onChange={handleChangeSelect}\n                                                        disabled={isRegistering}\n                                                        variant={VARIANT}\n                                                        error={client.gender.isError}\n                                                        helperText={client.gender.isError && client.gender.errorText}\n                                                    />\n                                                </Grid>\n                                                <Grid item xs={12} sm={6}>\n                                                    <PhoneInput\n                                                        defaultCountry={locale === 'en' ? 'us': locale}\n                                                        preferredCountries={[\n                                                            'it',\n                                                            'ie',\n                                                            'de',\n                                                            'fr',\n                                                            'es',\n                                                            'gb',\n                                                        ]}\n                                                        regions={[\n                                                            'america',\n                                                            'europe',\n                                                            'asia',\n                                                            'oceania',\n                                                            'africa',\n                                                        ]}\n                                                        variant={VARIANT}\n                                                        id=\"mobiletel\"\n                                                        name=\"mobiletel\"\n                                                        label={t('str_phone')}\n                                                        fullWidth\n                                                        disabled={isRegistering}\n                                                        value={client.mobiletel.value}\n                                                        onChange={e => handleChangeTextField(e, 'phone')}\n                                                        error={client.mobiletel.isError}\n                                                        helperText={client.mobiletel.isError && client.mobiletel.errorText}\n                                                    />\n                                                </Grid>\n                                                <Grid item xs={12} sm={6}>\n                                                    <NationSelect\n                                                        id=\"nationid\"\n                                                        name=\"nationid\"\n                                                        inputLabel={t('str_nationality')}\n                                                        value={client.nationid.value}\n                                                        onChange={handleChangeSelect}\n                                                        disabled={isRegistering}\n                                                        variant={VARIANT}\n                                                        error={client.nationid.isError}\n                                                        helperText={client.nationid.isError && client.nationid.errorText}\n                                                    />\n                                                </Grid>\n                                                <Grid item xs={12} sm={6}>\n                                                    <CountrySelect\n                                                        id=\"country\"\n                                                        name=\"country\"\n                                                        inputLabel={t('str_country')}\n                                                        value={client.country.value}\n                                                        onChange={handleChangeSelect}\n                                                        disabled={isRegistering}\n                                                        variant={VARIANT}\n                                                        error={client.country.isError}\n                                                        helperText={client.country.isError && client.country.errorText}\n                                                    />\n                                                </Grid>\n                                                <Grid item xs={12} sm={6}>\n                                                    <TextField\n                                                        id=\"address1\"\n                                                        name=\"address1\"\n                                                        label={t('str_address')}\n                                                        required={client.address1.isRequired}\n                                                        fullWidth\n                                                        variant={VARIANT}\n                                                        disabled={isRegistering}\n                                                        value={client.address1.value}\n                                                        onChange={handleChangeTextField}\n                                                        error={client.address1.isError}\n                                                        helperText={client.address1.isError && client.address1.errorText}\n                                                    />\n                                                </Grid>\n                                                <Grid item xs={12} sm={6}>\n                                                    <TextField\n                                                        id=\"city\"\n                                                        name=\"city\"\n                                                        label={t('str_city')}\n                                                        required={client.city.isRequired}\n                                                        fullWidth\n                                                        variant={VARIANT}\n                                                        disabled={isRegistering}\n                                                        value={client.city.value}\n                                                        onChange={handleChangeTextField}\n                                                        error={client.city.isError}\n                                                        helperText={client.city.isError && client.city.errorText}\n                                                    />\n                                                </Grid>\n                                                <Grid item xs={12} sm={6}>\n                                                    <TextField\n                                                        id=\"zip\"\n                                                        name=\"zip\"\n                                                        label={t('str_zip')}\n                                                        required={client.zip.isRequired}\n                                                        fullWidth\n                                                        variant={VARIANT}\n                                                        disabled={isRegistering}\n                                                        value={client.zip.value}\n                                                        onChange={handleChangeTextField}\n                                                        error={client.zip.isError}\n                                                        helperText={client.zip.isError && client.zip.errorText}\n                                                    />\n                                                </Grid>\n                                            </React.Fragment>\n                                        )}\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid container className={classes.gridContainer}>\n                                <Grid item xs={12}>\n                                    <Grid container className={classes.grid} style={{ margin: '12px 0' }}>\n                                        <Grid item xs={12}>\n                                            <div style={{ paddingLeft: 18 }}>\n                                                <FrameCheckbox\n                                                    required={true}\n                                                    value={client.hasdatapolicy.value || false}\n                                                    title=\"str_privacyAndPersonalDataProtectionPolicies\"\n                                                    linkText=\"str_iAcceptDataPolicy\"\n                                                    linkTextADesc=\"str_privacyAndPersonalDataProtectionPolicies\"\n                                                    ifamePageUrl={GENERAL_SETTINGS.BASE_URL + `info/${locale || global.common.strDefShortLangCode}/${global.guestWeb.strDataPolicy}?iframe=true`}\n                                                    isCheck={(e) => handleClickDataPolicyButtons(e)}\n                                                />\n                                            </div>\n                                        </Grid>\n                                        {locationName !== \"survey\" && (\n                                            <Grid item xs={12}>\n                                                <div style={{ paddingLeft: 18 }}>\n                                                    <FrameCheckbox\n                                                        required={true}\n                                                        value={client.haspref.value || false}\n                                                        title=\"str_hygieneAndTravelPolicies\"\n                                                        linkText=\"str_iAcceptTravelPolicy\"\n                                                        linkTextADesc=\"str_hygieneAndTravelPolicies\"\n                                                        ifamePageUrl={GENERAL_SETTINGS.BASE_URL + `info/${locale || global.common.strDefShortLangCode}/${global.guestWeb.strTravelPolicy}?iframe=true`}\n                                                        isCheck={(e) => handleClickTravelPolicyButtons(e)}\n                                                    />\n                                                </div>\n                                            </Grid>\n                                        )}\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid container className={classes.gridContainer}>\n                                <Grid item xs={12}>\n                                    <Grid\n                                        container\n                                        spacing={3}\n                                        className={classes.grid}\n                                        justify={'center'}\n                                        style={{ textAlign: 'center' }}\n                                    >\n                                        <Grid item xs={12}>\n                                            <Button\n                                                onClick={()=> handleClickRegister()}\n                                                disabled={isRegistering}\n                                                fullWidth\n                                                variant=\"contained\"\n                                                className={classes.submit}\n                                                color=\"primary\"\n                                            >\n                                                {t('str_update')}\n                                            </Button>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </DialogContent>\n                    </Dialog>\n                </React.Fragment>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        state: state.formReducer.guest,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    updateState: (stateType, stateName, value) => dispatch(updateState(stateType, stateName, value)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Update)\n"]},"metadata":{},"sourceType":"module"}