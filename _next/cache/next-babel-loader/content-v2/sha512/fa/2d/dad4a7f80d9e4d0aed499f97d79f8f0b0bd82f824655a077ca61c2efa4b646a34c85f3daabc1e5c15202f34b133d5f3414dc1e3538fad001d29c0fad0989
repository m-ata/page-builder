{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/user-portal/components/NewRequestNoteReply.js\";\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect, useState } from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport { deleteFromState, pushToState, setToState, updateState } from \"state/actions\";\nimport Button from '@material-ui/core/Button';\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { UseOrest, Delete, ViewList, Insert, Patch } from \"@webcms/orest\";\nimport { DEFAULT_OREST_TOKEN, isErrorMsg, OREST_ENDPOINT, REQUEST_METHOD_CONST } from \"model/orest/constants\";\nimport WebCmsGlobal from \"components/webcms-global\";\nimport useNotifications from \"model/notification/useNotifications\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport TextField from '@material-ui/core/TextField';\nimport SaveIcon from '@material-ui/icons/Save';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuOpenIcon from '@material-ui/icons/MenuOpen';\nimport AddCommentIcon from \"@material-ui/icons/AddComment\";\nimport ClearIcon from '@material-ui/icons/Clear';\nimport LoadingSpinner from \"../../LoadingSpinner\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n    paddingTop: 0,\n    paddingBottom: 0,\n    marginBottom: theme.spacing(1)\n  },\n  field: {\n    marginRight: theme.spacing(1)\n  },\n  item: {\n    padding: theme.spacing(1)\n  }\n}));\n\nconst NewRequestNoteReply = props => {\n  const {\n    state,\n    setToState,\n    updateState,\n    taskmid,\n    noteid,\n    userid,\n    taskHotelRefNo,\n    getNoteList\n  } = props;\n  const classes = useStyles();\n  const {\n    GENERAL_SETTINGS\n  } = useContext(WebCmsGlobal);\n  const {\n    showError\n  } = useNotifications();\n  const loginfo = useSelector(state => state.orest.currentUser && state.orest.currentUser.loginfo);\n  const token = useSelector(state => state.orest.currentUser !== null ? state.orest.currentUser.auth.access_token : DEFAULT_OREST_TOKEN);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    0: isInitialized,\n    1: setIsInitialized\n  } = useState(false);\n  const {\n    0: request,\n    1: setRequest\n  } = useState([]);\n  const {\n    0: open,\n    1: setOpen\n  } = useState(false);\n  const {\n    0: isRefCodeLoading,\n    1: setIsRefCodeLoading\n  } = useState(false);\n\n  const handleCloseRequestNote = () => {\n    setOpen(false);\n  };\n\n  const handleChange = e => {\n    if (e && e.target) {\n      let defMyRequestNoteReply = state.defMyRequestNoteReply;\n      defMyRequestNoteReply[e.target.name] = e.target.value;\n      setToState('userPortal', ['defMyRequestNoteReply'], defMyRequestNoteReply);\n    }\n  };\n\n  const handleSave = () => {\n    setIsLoading(true);\n    Patch({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.RANOTE,\n      token,\n      gid: state.defMyRequestNoteReply.gid,\n      params: {\n        hotelrefno: taskHotelRefNo\n      },\n      data: {\n        note: state.defMyRequestNoteReply.note\n      }\n    }).then(r1 => {\n      if (r1.status === 200) {\n        updateState('userPortal', 'currentTaskNotesLoading', true);\n        setToState('userPortal', ['defMyRequestNoteReply'], []);\n        setIsLoading(false);\n        getNoteList();\n      } else {\n        setIsLoading(false);\n        const retErr = isErrorMsg(r1);\n        showError(retErr.errorMsg);\n        updateState('userPortal', 'currentTaskNotesLoading', false);\n      }\n    });\n  };\n\n  const handleClear = () => {\n    Delete({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.RANOTE,\n      token,\n      gid: state.defMyRequestNoteReply.gid,\n      params: {\n        hotelrefno: taskHotelRefNo\n      }\n    }).then(r => {\n      if (r.status === 200) {\n        setToState('userPortal', ['defMyRequestNoteReply'], []);\n      } else {}\n    });\n  };\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"flex-end\",\n    alignItems: \"center\",\n    className: classes.root,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, __jsx(Paper, {\n    className: classes.item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }, __jsx(Grid, {\n    container: true,\n    justify: \"space-between\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 25\n    }\n  }, __jsx(Grid, {\n    item: true,\n    className: classes.textField,\n    xs: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 29\n    }\n  }, __jsx(TextField, {\n    variant: \"outlined\",\n    multiline: true,\n    rows: 2,\n    id: \"Note\",\n    name: \"note\",\n    label: \"Note\",\n    disabled: state.currentTaskNotesLoading,\n    onChange: handleChange,\n    value: state.defMyRequestNoteReply.note ? state.defMyRequestNoteReply.note : '',\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 33\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 29\n    }\n  }, __jsx(IconButton, {\n    className: classes.button,\n    \"aria-label\": \"added\",\n    size: \"small\",\n    disabled: state.currentTaskNotesLoading || isLoading,\n    onClick: handleSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 33\n    }\n  }, isLoading ? __jsx(LoadingSpinner, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 41\n    }\n  }) : __jsx(AddCommentIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 41\n    }\n  })), __jsx(IconButton, {\n    className: classes.button,\n    \"aria-label\": \"added\",\n    size: \"small\",\n    disabled: state.currentTaskNotesLoading || isLoading,\n    onClick: handleClear,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 33\n    }\n  }, __jsx(ClearIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 37\n    }\n  }))))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    state: state.formReducer.userPortal\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value)),\n  updateState: (stateType, stateName, value) => dispatch(updateState(stateType, stateName, value)),\n  pushToState: (stateType, stateName, value) => dispatch(pushToState(stateType, stateName, value)),\n  deleteFromState: (stateType, stateName, value) => dispatch(deleteFromState(stateType, stateName, value))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewRequestNoteReply);","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/user-portal/components/NewRequestNoteReply.js"],"names":["React","useContext","useEffect","useState","connect","useSelector","deleteFromState","pushToState","setToState","updateState","Button","Grid","Paper","UseOrest","Delete","ViewList","Insert","Patch","DEFAULT_OREST_TOKEN","isErrorMsg","OREST_ENDPOINT","REQUEST_METHOD_CONST","WebCmsGlobal","useNotifications","makeStyles","Dialog","DialogTitle","DialogContent","DialogActions","TextField","SaveIcon","IconButton","MenuOpenIcon","AddCommentIcon","ClearIcon","LoadingSpinner","useStyles","theme","root","padding","spacing","paddingTop","paddingBottom","marginBottom","field","marginRight","item","NewRequestNoteReply","props","state","taskmid","noteid","userid","taskHotelRefNo","getNoteList","classes","GENERAL_SETTINGS","showError","loginfo","orest","currentUser","token","auth","access_token","isLoading","setIsLoading","isInitialized","setIsInitialized","request","setRequest","open","setOpen","isRefCodeLoading","setIsRefCodeLoading","handleCloseRequestNote","handleChange","e","target","defMyRequestNoteReply","name","value","handleSave","apiUrl","OREST_URL","endpoint","RANOTE","gid","params","hotelrefno","data","note","then","r1","status","retErr","errorMsg","handleClear","r","textField","currentTaskNotesLoading","button","mapStateToProps","formReducer","userPortal","mapDispatchToProps","dispatch","stateType","stateName"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react'\nimport {connect, useSelector} from 'react-redux'\nimport {deleteFromState, pushToState, setToState, updateState} from \"state/actions\";\nimport Button from '@material-ui/core/Button';\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {UseOrest, Delete, ViewList, Insert, Patch} from \"@webcms/orest\";\nimport {DEFAULT_OREST_TOKEN, isErrorMsg, OREST_ENDPOINT, REQUEST_METHOD_CONST} from \"model/orest/constants\";\nimport WebCmsGlobal from \"components/webcms-global\";\nimport useNotifications from \"model/notification/useNotifications\";\nimport {makeStyles} from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport TextField from '@material-ui/core/TextField';\nimport SaveIcon from '@material-ui/icons/Save';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuOpenIcon from '@material-ui/icons/MenuOpen';\nimport AddCommentIcon from \"@material-ui/icons/AddComment\";\nimport ClearIcon from '@material-ui/icons/Clear';\nimport LoadingSpinner from \"../../LoadingSpinner\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: theme.spacing(2),\n        paddingTop: 0,\n        paddingBottom: 0,\n        marginBottom: theme.spacing(1)\n    },\n    field: {\n        marginRight: theme.spacing(1),\n    },\n    item: {\n        padding: theme.spacing(1)\n    }\n}));\n\n\nconst NewRequestNoteReply = (props) => {\n    const {\n        state,\n        setToState,\n        updateState,\n        taskmid,\n        noteid,\n        userid,\n        taskHotelRefNo,\n        getNoteList\n    } = props;\n    const classes = useStyles();\n    const {GENERAL_SETTINGS} = useContext(WebCmsGlobal);\n    const {showError} = useNotifications();\n    const loginfo = useSelector(state => state.orest.currentUser && state.orest.currentUser.loginfo);\n    const token = useSelector(state => state.orest.currentUser !== null ? state.orest.currentUser.auth.access_token : DEFAULT_OREST_TOKEN);\n    const [isLoading, setIsLoading] = useState(false);\n    const [isInitialized, setIsInitialized] = useState(false);\n    const [request, setRequest] = useState([]);\n    const [open, setOpen] = useState(false);\n    const [isRefCodeLoading, setIsRefCodeLoading] = useState(false);\n\n    const handleCloseRequestNote = () => {\n        setOpen(false);\n    };\n\n    const handleChange = (e) =>{\n        if(e && e.target){\n            let defMyRequestNoteReply = state.defMyRequestNoteReply;\n            defMyRequestNoteReply[e.target.name] = e.target.value;\n            setToState('userPortal', ['defMyRequestNoteReply'], defMyRequestNoteReply);\n        }\n    };\n\n    const handleSave = () =>{\n        setIsLoading(true);\n        Patch({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.RANOTE,\n            token,\n            gid: state.defMyRequestNoteReply.gid,\n            params: {\n                hotelrefno: taskHotelRefNo,\n            },\n            data: {\n                note: state.defMyRequestNoteReply.note\n            }\n        }).then(r1 => {\n            if (r1.status === 200) {\n                updateState('userPortal', 'currentTaskNotesLoading', true);\n                setToState('userPortal', ['defMyRequestNoteReply'], []);\n                setIsLoading(false);\n                getNoteList();\n\n            } else {\n                setIsLoading(false);\n                const retErr = isErrorMsg(r1);\n                showError(retErr.errorMsg);\n                updateState('userPortal', 'currentTaskNotesLoading', false);\n            }\n        });\n    };\n\n    const handleClear = () =>{\n        Delete({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.RANOTE,\n            token,\n            gid:  state.defMyRequestNoteReply.gid,\n            params: {\n                hotelrefno: taskHotelRefNo\n            }\n        }).then(r => {\n            if (r.status === 200) {\n                setToState('userPortal', ['defMyRequestNoteReply'], []);\n            }else{\n\n            }\n        });\n    };\n\n    return (\n        <React.Fragment>\n            <Grid container\n                  direction=\"row\"\n                  justify=\"flex-end\"\n                  alignItems=\"center\" className={classes.root} spacing={1}>\n                <Grid item xs={8}>\n                    <Paper className={classes.item}>\n                        <Grid container justify=\"space-between\" alignItems=\"center\">\n                            <Grid item className={classes.textField} xs={9}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    multiline\n                                    rows={2}\n                                    id=\"Note\"\n                                    name=\"note\"\n                                    label=\"Note\"\n                                    disabled={state.currentTaskNotesLoading}\n                                    onChange={handleChange}\n                                    value={state.defMyRequestNoteReply.note ? state.defMyRequestNoteReply.note : ''}\n                                    fullWidth\n                                />\n                            </Grid>\n                            <Grid item>\n                                <IconButton\n                                    className={classes.button}\n                                    aria-label=\"added\"\n                                    size=\"small\"\n                                    disabled={state.currentTaskNotesLoading || isLoading}\n                                    onClick={handleSave}\n                                >\n                                    { isLoading ?\n                                        <LoadingSpinner size={20}/>:\n                                        <AddCommentIcon />\n                                    }\n                                </IconButton>\n                                <IconButton\n                                    className={classes.button}\n                                    aria-label=\"added\"\n                                    size=\"small\"\n                                    disabled={state.currentTaskNotesLoading || isLoading}\n                                    onClick={handleClear}\n                                >\n                                    <ClearIcon />\n                                </IconButton>\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    )\n};\n\nconst mapStateToProps = state => {\n    return {\n        state: state.formReducer.userPortal\n    }\n};\n\nconst mapDispatchToProps = dispatch => ({\n    setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value)),\n    updateState: (stateType, stateName, value) => dispatch(updateState(stateType, stateName, value)),\n    pushToState: (stateType, stateName, value) => dispatch(pushToState(stateType, stateName, value)),\n    deleteFromState: (stateType, stateName, value) => dispatch(deleteFromState(stateType, stateName, value)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(NewRequestNoteReply)\n"]},"metadata":{},"sourceType":"module"}