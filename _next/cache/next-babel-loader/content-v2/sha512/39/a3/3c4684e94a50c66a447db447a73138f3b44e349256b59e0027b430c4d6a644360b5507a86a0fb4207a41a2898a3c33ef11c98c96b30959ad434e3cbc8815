{"ast":null,"code":"import _extends from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/components/page/sections/slider/EditSlider.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//react imports\nimport React, { useState, useEffect, useContext } from 'react'; //material ui imports\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\nimport { FormControlLabel, MenuItem, Radio, RadioGroup } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport Divider from '@material-ui/core/Divider';\nimport Switch from '@material-ui/core/Switch';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container'; //dropzone related imports\n\nimport 'regenerator-runtime/runtime';\nimport { DropzoneDialog } from 'material-ui-dropzone';\nimport { useRouter } from 'next/router'; //custom imports\n\nimport WebCmsGlobal from '../../../../../../webcms-global';\nimport { Delete, Insert, Patch, UseOrest, ViewList } from '@webcms/orest';\nimport { COLORS, DELETE_SUCCESS, PERCENTAGE_VALUES, SAVED_SUCCESS, UPLOAD_SUCCESS } from '../../../../constants';\nimport LoadingSpinner from '../../../../../../LoadingSpinner';\nimport { FIELDTYPE, isErrorMsg, OREST_ENDPOINT, OREST_UPLOAD, REQUEST_METHOD_CONST } from '../../../../../../../model/orest/constants';\nimport { connect } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport validator from 'validator';\nimport axios from 'axios';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport InputColor from 'react-input-color';\nimport { PercentageSlider } from '../../../../../../../model/slider';\nimport { getSliderImages, patchListSliderImage } from '../../../../helpers/slider';\nimport TextEditor from '../text-editor';\nimport BorderColorSharpIcon from '@material-ui/icons/BorderColorSharp';\nimport { toSelfName } from './../../../../../../../lib/helpers/useFunction';\nimport moment from \"moment\";\nimport { DatePicker, LocalizationProvider } from \"@material-ui/pickers\";\nimport MomentAdapter from \"@date-io/moment\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    submit: {\n      marginRight: theme.spacing(3),\n      marginTop: theme.spacing(1),\n      borderRadius: 20,\n      \"float\": 'right'\n    },\n    paperBlock: {\n      height: 350,\n      border: \"2px solid \".concat(COLORS === null || COLORS === void 0 ? void 0 : COLORS.secondary),\n      overflow: 'auto'\n    },\n    disableEvent: {\n      pointerEvents: 'none',\n      opacity: 0.5\n    },\n    uploadButton: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n      marginLeft: theme.spacing(1),\n      borderRadius: 20,\n      \"float\": 'right'\n    },\n    card: {\n      height: 200,\n      width: 320,\n      margin: theme.spacing(1),\n      cursor: 'pointer'\n    },\n    alignText: {\n      textAlign: 'right',\n      color: 'red'\n    },\n    text: {\n      marginTop: 16,\n      fontWeight: 'bold',\n      fontSize: 15\n    }\n  };\n});\n\nvar EditSlider = function EditSlider(props) {\n  _s();\n\n  var _state$assets, _state$assets$meta, _router$query, _router$query2, _router$query3, _router$query4, _router$query5;\n\n  var sliderComponent = props.sliderComponent,\n      handleCmponent = props.handleCmponent,\n      state = props.state,\n      handleApplyDisable = props.handleApplyDisable,\n      handleSliderValues = props.handleSliderValues,\n      otherLangSlider = props.otherLangSlider;\n\n  var _useState = useState([]),\n      sliderImages = _useState[0],\n      setSliderImages = _useState[1];\n\n  var _useState2 = useState(''),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var _useState3 = useState(''),\n      description = _useState3[0],\n      setDescription = _useState3[1];\n\n  var _useState4 = useState(false),\n      isCta = _useState4[0],\n      setIsCta = _useState4[1];\n\n  var _useState5 = useState(''),\n      ctaTitle = _useState5[0],\n      setCtaTitle = _useState5[1];\n\n  var _useState6 = useState(''),\n      ctaLink = _useState6[0],\n      setCtaLink = _useState6[1];\n\n  var _useState7 = useState(''),\n      cta = _useState7[0],\n      setCta = _useState7[1];\n\n  var _useState8 = useState(false),\n      isLoaded = _useState8[0],\n      setIsLoaded = _useState8[1];\n\n  var _useState9 = useState(false),\n      isSaving = _useState9[0],\n      setIsSaving = _useState9[1];\n\n  var _useState10 = useState(false),\n      isItemDesc = _useState10[0],\n      setItemDesc = _useState10[1];\n\n  var _useState11 = useState(false),\n      isDeleting = _useState11[0],\n      setIsDeleting = _useState11[1];\n\n  var _useState12 = useState(),\n      selectedIndex = _useState12[0],\n      setSelectedIndex = _useState12[1];\n\n  var _useState13 = useState(false),\n      showDeleteBtn = _useState13[0],\n      setShowDeleteBtn = _useState13[1];\n\n  var _useState14 = useState(),\n      hoverIndex = _useState14[0],\n      setHoverIndex = _useState14[1];\n\n  var _useState15 = useState(''),\n      sliderGID = _useState15[0],\n      setSliderGID = _useState15[1];\n\n  var _useState16 = useState(''),\n      sliderID = _useState16[0],\n      setSliderID = _useState16[1];\n\n  var _useState17 = useState(''),\n      imageGID = _useState17[0],\n      setImageGID = _useState17[1];\n\n  var _useState18 = useState(false),\n      isDialogOpen = _useState18[0],\n      setDialogOpen = _useState18[1];\n\n  var _useState19 = useState(1),\n      itemCount = _useState19[0],\n      setItemCount = _useState19[1];\n\n  var _useState20 = useState(''),\n      gappID = _useState20[0],\n      setGappID = _useState20[1];\n\n  var _useState21 = useState([]),\n      otherLangSliderImages = _useState21[0],\n      setOtherLangSliderImages = _useState21[1];\n\n  var _useState22 = useState(sliderComponent),\n      editedSliderComponent = _useState22[0],\n      setEditedSliderComponent = _useState22[1];\n\n  var _useState23 = useState(false),\n      isImageSelected = _useState23[0],\n      setImageSelected = _useState23[1];\n\n  var _useState24 = useState(false),\n      itemDescRequest = _useState24[0],\n      setItemDescRequest = _useState24[1];\n\n  var _useState25 = useState(false),\n      isOptimizeImages = _useState25[0],\n      setOptimizeImages = _useState25[1];\n\n  var _useState26 = useState(state !== null && state !== void 0 && (_state$assets = state.assets) !== null && _state$assets !== void 0 && (_state$assets$meta = _state$assets.meta) !== null && _state$assets$meta !== void 0 && _state$assets$meta.imageQuality ? state.assets.meta.imageQuality * 100 : 50),\n      quality = _useState26[0],\n      setQuality = _useState26[1];\n\n  var _useState27 = useState(null),\n      catId = _useState27[0],\n      setCatId = _useState27[1];\n\n  var _useState28 = useState([]),\n      categories = _useState28[0],\n      setCategories = _useState28[1];\n\n  var _useState29 = useState(false),\n      isActive = _useState29[0],\n      setIsActive = _useState29[1];\n\n  var _useState30 = useState(sliderComponent !== null && sliderComponent !== void 0 && sliderComponent.textColor ? sliderComponent.textColor : '#fff'),\n      textColor = _useState30[0],\n      setTextColor = _useState30[1];\n\n  var _useState31 = useState(sliderComponent !== null && sliderComponent !== void 0 && sliderComponent.buttonColor ? sliderComponent.buttonColor : '#fff'),\n      buttonColor = _useState31[0],\n      setButtonColor = _useState31[1];\n\n  var _useState32 = useState({\n    isTextEditorDialogOpen: false,\n    editorValue: '',\n    dialogType: '',\n    pageData: [],\n    ctaLinkType: '',\n    expiryDate: moment().format(OREST_ENDPOINT.DATEFORMAT_LOCALE)\n  }),\n      localState = _useState32[0],\n      setLocalState = _useState32[1];\n\n  var dialogType = localState.dialogType,\n      editorValue = localState.editorValue,\n      isTextEditorDialogOpen = localState.isTextEditorDialogOpen,\n      ctaLinkType = localState.ctaLinkType,\n      pageData = localState.pageData,\n      expiryDate = localState.expiryDate;\n  var router = useRouter();\n  var companyId = router.query.companyID;\n\n  var _useContext = useContext(WebCmsGlobal),\n      GENERAL_SETTINGS = _useContext.GENERAL_SETTINGS,\n      token = _useContext.token;\n\n  var authToken = token || router.query.authToken;\n  var classes = useStyles();\n\n  var openDialog = function openDialog() {\n    //it opens dialog for image upload\n    setDialogOpen(true);\n  };\n\n  var closeDialog = function closeDialog() {\n    ////it closes dialog for image upload\n    setDialogOpen(false);\n  };\n\n  useEffect(function () {\n    if (otherLangSlider && 'sliderImages' in otherLangSlider) {\n      setOtherLangSliderImages(otherLangSlider.sliderImages);\n    }\n  }, [otherLangSlider]);\n  useEffect(function () {\n    if (router.query.sliderOnly) {\n      if (sliderImages.length === 0) {\n        handleApplyDisable(true);\n      } else {\n        handleApplyDisable(false);\n      }\n    } else {\n      if (sliderImages.length > 0) {\n        if (state.langCode === state.defaultLang) {\n          handleCmponent({\n            service: 'hcmitemsld',\n            type: 'slider',\n            gid: editedSliderComponent.gid,\n            width: editedSliderComponent.width,\n            id: editedSliderComponent.id,\n            textColor: textColor,\n            buttonColor: buttonColor\n          });\n        } else {\n          if (!isItemDesc) {\n            handleCmponent({\n              slider: {\n                title: title,\n                description: description,\n                cta: cta\n              }\n            });\n          } else {\n            handleCmponent({\n              sliderImages: otherLangSliderImages\n            });\n          }\n        }\n      }\n    }\n  }, [sliderImages, title, description, cta, otherLangSliderImages, textColor, buttonColor]);\n  useEffect(function () {\n    if (router.query.sliderOnly) {\n      handleSliderValues(title, description, cta, state.slider.gid, textColor, buttonColor);\n    }\n  }, [title, description, cta, textColor, buttonColor]);\n  useEffect(function () {\n    setIsLoaded(false);\n    ViewList({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.HCMCAT,\n      token: authToken,\n      params: {\n        hotelrefno: Number(companyId)\n      }\n    }).then(function (res) {\n      if ((res === null || res === void 0 ? void 0 : res.status) === 200) {\n        var _res$data, _res$data$data;\n\n        (res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : (_res$data$data = _res$data.data) === null || _res$data$data === void 0 ? void 0 : _res$data$data.length) > 0 && setCategories(res.data.data);\n      } else {\n        var retErr = isErrorMsg(res);\n        toast.error(retErr.errorMsg, {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      }\n    }); //getting data from rafile\n\n    ViewList({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.RAFILE,\n      token: authToken,\n      params: {\n        hotelrefno: Number(companyId),\n        query: \"filetype::WEBPAGE,istemplate::false}\"\n      }\n    }).then(function (res) {\n      var _res$data2;\n\n      setIsLoaded(true);\n\n      if (res.status === 200 && res !== null && res !== void 0 && (_res$data2 = res.data) !== null && _res$data2 !== void 0 && _res$data2.data) {\n        setLocalState(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            pageData: res.data.data\n          });\n        });\n      } else {\n        var retErr = isErrorMsg(res);\n        toast.error(retErr.errorMsg, {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      }\n    });\n  }, []);\n  useEffect(function () {\n    // get all slider images against gid\n    setIsLoaded(false);\n\n    if (editedSliderComponent !== null && editedSliderComponent !== void 0 && editedSliderComponent.gid) {\n      ViewList({\n        apiUrl: GENERAL_SETTINGS.OREST_URL,\n        endpoint: OREST_ENDPOINT.HCMITEMSLD,\n        token: authToken,\n        params: {\n          query: \"gid:\".concat(editedSliderComponent.gid),\n          hotelrefno: Number(companyId)\n        }\n      }).then(function (r) {\n        if (r.status === 200) {\n          var _r$data, _r$data$data;\n\n          if ((r === null || r === void 0 ? void 0 : (_r$data = r.data) === null || _r$data === void 0 ? void 0 : (_r$data$data = _r$data.data) === null || _r$data$data === void 0 ? void 0 : _r$data$data.length) > 0) {\n            var _r$data2, _r$data2$data$;\n\n            setGappID(r.data.data[0].itemid);\n            setCatId(r.data.data[0].catid);\n            setIsActive(r.data.data[0].isactive);\n\n            if (state.langCode === state.defaultLang || router.query.sliderOnly) {\n              if (r.data.data[0].title || r.data.data[0].description) {\n                setTitle(r.data.data[0].title);\n                setDescription(r.data.data[0].description);\n              }\n\n              if (r.data.data[0].cta) {\n                setIsCta(true);\n                var matchLink = r.data.data[0].cta.match(/\\bhttps?:\\/\\/\\S+/gi);\n\n                if (matchLink) {\n                  var _title = r.data.data[0].cta.replace(\"<a target=\\\"_blank\\\" href=\\\"\", '').replace(matchLink[0], '').replace('>', '').replace('</a>', '').trim();\n\n                  setCtaLink(matchLink[0]);\n                  setCtaTitle(_title);\n                  setLocalState(function (prev) {\n                    return _objectSpread(_objectSpread({}, prev), {}, {\n                      ctaLinkType: 'external'\n                    });\n                  });\n                } else {\n                  var _r$data$data$0$cta$re;\n\n                  var ctaGid = (_r$data$data$0$cta$re = r.data.data[0].cta.replace(\"<a target=\\\"_blank\\\" href=\\\"\", '').replace('>', '').replace('</a>', '').replace('\"', '').trim()) === null || _r$data$data$0$cta$re === void 0 ? void 0 : _r$data$data$0$cta$re.split(' ')[0];\n                  var cta_title = r.data.data[0].cta.replace(\"<a target=\\\"_blank\\\" href=\\\"\", '').replace(ctaGid + '\"', '').replace('>', '').replace('</a>', '').trim();\n                  setCtaLink(ctaGid);\n                  setCtaTitle(cta_title);\n                  setLocalState(function (prev) {\n                    return _objectSpread(_objectSpread({}, prev), {}, {\n                      ctaLinkType: 'internal'\n                    });\n                  });\n                }\n              }\n            } else {\n              if (otherLangSlider && 'slider' in otherLangSlider) {\n                setTitle(otherLangSlider.slider.title);\n                setDescription(otherLangSlider.slider.description);\n\n                if (otherLangSlider.slider.cta) {\n                  setIsCta(true);\n\n                  var _matchLink = otherLangSlider.slider.cta.match(/\\bhttps?:\\/\\/\\S+/gi);\n\n                  if (_matchLink) {\n                    var _title2 = otherLangSlider.slider.cta.replace(\"<a target=\\\"_blank\\\" href=\\\"\", '').replace(_matchLink[0], '').replace('>', '').replace('</a>', '').trim();\n\n                    setCtaLink(_matchLink[0]);\n                    setCtaTitle(_title2);\n                    setLocalState(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        ctaLinkType: 'external'\n                      });\n                    });\n                  } else {\n                    var _otherLangSlider$slid;\n\n                    var _ctaGid = (_otherLangSlider$slid = otherLangSlider.slider.cta.replace(\"<a target=\\\"_blank\\\" href=\\\"\", '').replace('>', '').replace('</a>', '').replace('\"', '').trim()) === null || _otherLangSlider$slid === void 0 ? void 0 : _otherLangSlider$slid.split(' ')[0];\n\n                    var _cta_title = otherLangSlider.slider.cta.replace(\"<a target=\\\"_blank\\\" href=\\\"\", '').replace(_ctaGid + '\"', '').replace('>', '').replace('</a>', '').trim();\n\n                    setCtaLink(_ctaGid);\n                    setCtaTitle(_cta_title);\n                    setLocalState(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        ctaLinkType: 'internal'\n                      });\n                    });\n                  }\n                }\n              }\n            }\n\n            setSliderGID(r.data.data[0].gid);\n            setSliderID(r.data.data[0].id);\n            setLocalState(_objectSpread(_objectSpread({}, localState), {}, {\n              expiryDate: r === null || r === void 0 ? void 0 : (_r$data2 = r.data) === null || _r$data2 === void 0 ? void 0 : (_r$data2$data$ = _r$data2.data[0]) === null || _r$data2$data$ === void 0 ? void 0 : _r$data2$data$.expiredt\n            }));\n            ViewList({\n              apiUrl: GENERAL_SETTINGS.OREST_URL,\n              endpoint: OREST_ENDPOINT.HCMITEMIMG,\n              token: authToken,\n              params: {\n                query: \"sliderid:\".concat(r.data.data[0].id),\n                sort: 'orderno',\n                hotelrefno: Number(companyId)\n              }\n            }).then(function (res) {\n              setIsLoaded(true);\n\n              if (res.status === 200) {\n                var updatedImages = [];\n                res.data.data.map( /*#__PURE__*/function () {\n                  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data, index) {\n                    var matchs, _cta_title4, _otherLangSlider$slid2, _ctaGid3, _cta_title5;\n\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            updatedImages.push(data);\n\n                            if (state.langCode === state.defaultLang) {\n                              if (data.cta || data.title || data.description) {\n                                if (index === 0) {\n                                  setItemDesc(true);\n                                  setSelectedIndex(index);\n                                  setImageGID(data.gid);\n                                  ViewList({\n                                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                                    endpoint: OREST_ENDPOINT.HCMITEMIMG,\n                                    token: authToken,\n                                    params: {\n                                      query: \"gid:\".concat(data.gid),\n                                      sort: 'orderno',\n                                      hotelrefno: Number(companyId)\n                                    }\n                                  }).then(function (res1) {\n                                    if (res1.status === 200) {\n                                      if (res1.data && res1.data.data && res1.data.data.length > 0) {\n                                        res1.data.data[0].title ? setTitle(res1.data.data[0].title) : setTitle('');\n                                        res1.data.data[0].description ? setDescription(res1.data.data[0].description) : setDescription('');\n                                        res1.data.data[0].cta ? setCta(res1.data.data[0].cta) : setCta('');\n\n                                        if (res1.data.data[0].cta) {\n                                          setIsCta(true);\n                                          setCta(res1.data.data[0].cta);\n                                          var matchs = res1.data.data[0].cta.match(/\\bhttps?:\\/\\/\\S+/gi);\n\n                                          if ((matchs === null || matchs === void 0 ? void 0 : matchs.length) > 0) {\n                                            var _cta_title2 = res1.data.data[0].cta.replace(\"<a target=\\\"_blank\\\" href=\\\"\", '').replace(matchs[0], '').replace('>', '').replace('</a>', '').trim();\n\n                                            setCtaLink(matchs[0]);\n                                            setCtaTitle(_cta_title2);\n                                            setLocalState(function (prev) {\n                                              return _objectSpread(_objectSpread({}, prev), {}, {\n                                                ctaLinkType: 'external'\n                                              });\n                                            });\n                                          } else {\n                                            var _res1$data$data$0$cta;\n\n                                            var _ctaGid2 = (_res1$data$data$0$cta = res1.data.data[0].cta.replace(\"<a target=\\\"_blank\\\" href=\\\"\", '').replace('>', '').replace('</a>', '').replace('\"', '').trim()) === null || _res1$data$data$0$cta === void 0 ? void 0 : _res1$data$data$0$cta.split(' ')[0];\n\n                                            var _cta_title3 = res1.data.data[0].cta.replace(\"<a target=\\\"_blank\\\" href=\\\"\", '').replace(_ctaGid2 + '\"', '').replace('>', '').replace('</a>', '').trim();\n\n                                            setCtaLink(_ctaGid2);\n                                            setCtaTitle(_cta_title3);\n                                            setLocalState(function (prev) {\n                                              return _objectSpread(_objectSpread({}, prev), {}, {\n                                                ctaLinkType: 'internal'\n                                              });\n                                            });\n                                          }\n                                        } else {\n                                          setIsCta(false);\n                                        }\n                                      }\n                                    } else {\n                                      var retErr = isErrorMsg(res1);\n                                      toast.error(retErr.errorMsg, {\n                                        position: toast.POSITION.TOP_RIGHT\n                                      });\n                                    }\n                                  });\n                                }\n                              }\n                            } else {\n                              if (otherLangSlider && otherLangSlider.sliderImages && otherLangSlider.sliderImages.length > 0) {\n                                setSelectedIndex(0);\n                                setItemDesc(true);\n                                setTitle(otherLangSlider.sliderImages[0].title);\n                                setDescription(otherLangSlider.sliderImages[0].description);\n\n                                if (otherLangSlider.sliderImages[0].cta) {\n                                  setIsCta(true);\n                                  setCta(otherLangSlider.sliderImages[0].cta);\n                                  matchs = otherLangSlider.sliderImages[0].cta.match(/\\bhttps?:\\/\\/\\S+/gi);\n\n                                  if ((matchs === null || matchs === void 0 ? void 0 : matchs.length) > 0) {\n                                    _cta_title4 = otherLangSlider.sliderImages[0].cta.replace(\"<a target=\\\"_blank\\\" href=\\\"\", '').replace(matchs[0], '').replace('>', '').replace('</a>', '').trim();\n                                    setCtaLink(matchs[0]);\n                                    setCtaTitle(_cta_title4);\n                                    setLocalState(function (prev) {\n                                      return _objectSpread(_objectSpread({}, prev), {}, {\n                                        ctaLinkType: 'external'\n                                      });\n                                    });\n                                  } else {\n                                    _ctaGid3 = (_otherLangSlider$slid2 = otherLangSlider.sliderImages[0].cta.replace(\"<a target=\\\"_blank\\\" href=\\\"\", '').replace('>', '').replace('</a>', '').replace('\"', '').trim()) === null || _otherLangSlider$slid2 === void 0 ? void 0 : _otherLangSlider$slid2.split(' ')[0];\n                                    _cta_title5 = otherLangSlider.sliderImages[0].cta.replace(\"<a target=\\\"_blank\\\" href=\\\"\", '').replace(_ctaGid3 + '\"', '').replace('>', '').replace('</a>', '').trim();\n                                    setCtaLink(_ctaGid3);\n                                    setCtaTitle(_cta_title5);\n                                    setLocalState(function (prev) {\n                                      return _objectSpread(_objectSpread({}, prev), {}, {\n                                        ctaLinkType: 'internal'\n                                      });\n                                    });\n                                  }\n                                } else {\n                                  setIsCta(false);\n                                  setCtaTitle('');\n                                  setCtaLink('');\n                                }\n                              }\n                            }\n\n                          case 2:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }));\n\n                  return function (_x, _x2) {\n                    return _ref.apply(this, arguments);\n                  };\n                }());\n                setSliderImages(updatedImages);\n                setItemCount(updatedImages + 1);\n              } else {\n                console.log(res);\n              }\n            });\n          } else {\n            setIsLoaded(true);\n          }\n        } else {\n          setIsLoaded(true);\n          var retErr = isErrorMsg(r);\n          toast.error(retErr.errorMsg, {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        }\n      });\n    } else {\n      Insert({\n        // insert slider\n        apiUrl: GENERAL_SETTINGS.OREST_URL,\n        endpoint: OREST_ENDPOINT.HCMITEMSLD,\n        token: authToken,\n        data: {\n          itemid: state.hcmItemId,\n          hotelrefno: Number(companyId)\n        }\n      }).then(function (res) {\n        if (res.status === 200 && res.data.data) {\n          setIsLoaded(true);\n\n          var updatedSliderComponent = _objectSpread({}, editedSliderComponent);\n\n          updatedSliderComponent.gid = res.data.data.gid;\n          setEditedSliderComponent(updatedSliderComponent);\n        }\n      });\n    }\n  }, [editedSliderComponent]);\n  useEffect(function () {\n    if (ctaTitle && ctaLink) {\n      setCta(\"<a target=\\\"_blank\\\" href=\\\"\".concat(ctaLink, \"\\\" > \").concat(ctaTitle, \" </a>\"));\n    }\n  }, [ctaTitle, ctaLink]);\n\n  var handleUpdate = function handleUpdate() {\n    // update slider/image descriptions\n    if (state.langCode === state.defaultLang) {\n      if (isItemDesc) {\n        if (isImageSelected) {\n          setIsSaving(true);\n          Patch({\n            // update image\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.HCMITEMIMG,\n            token: authToken,\n            gid: imageGID,\n            params: {\n              hotelrefno: Number(companyId)\n            },\n            data: {\n              title: title,\n              description: description,\n              cta: cta\n            }\n          }).then(function (res) {\n            if (res.status === 200) {\n              setIsSaving(false);\n              toast.success(SAVED_SUCCESS, {\n                position: toast.POSITION.TOP_RIGHT\n              });\n            } else {\n              console.log(res);\n            }\n          });\n        } else {\n          handleResetState();\n          toast.warn('Please Select Image', {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        }\n      } else {\n        setIsSaving(true);\n        Patch({\n          apiUrl: GENERAL_SETTINGS.OREST_URL,\n          endpoint: OREST_ENDPOINT.HCMITEMSLD,\n          token: authToken,\n          gid: sliderGID,\n          params: {\n            hotelrefno: Number(companyId)\n          },\n          data: {\n            title: title,\n            description: description,\n            cta: cta\n          }\n        }).then(function (res) {\n          setIsSaving(false);\n\n          if (res.status === 200) {\n            toast.success(SAVED_SUCCESS, {\n              position: toast.POSITION.TOP_RIGHT\n            });\n          } else {\n            console.log(res);\n          }\n        });\n      }\n    } else {\n      var updateOtherLangSliderImages = _toConsumableArray(otherLangSliderImages);\n\n      updateOtherLangSliderImages[selectedIndex] = {\n        title: title,\n        description: description,\n        cta: cta\n      };\n      setOtherLangSliderImages(updateOtherLangSliderImages);\n      toast.success(SAVED_SUCCESS, {\n        position: toast.POSITION.TOP_RIGHT\n      });\n    }\n  };\n\n  var handleDeleteImage = function handleDeleteImage(imageGid) {\n    // delete image against gid\n    setIsDeleting(true);\n    Delete({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.HCMITEMIMG,\n      token: authToken,\n      gid: imageGid,\n      params: {\n        hotelrefno: Number(companyId)\n      }\n    }).then( /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(res) {\n        var sldImages, updatedImages, requestPassed, _iterator, _step, sldImage, updatedSliderImage, retErr;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                setIsDeleting(false);\n\n                if (!(res.status === 200)) {\n                  _context2.next = 9;\n                  break;\n                }\n\n                _context2.next = 4;\n                return getSliderImages(GENERAL_SETTINGS.OREST_URL, authToken, companyId, sliderID);\n\n              case 4:\n                sldImages = _context2.sent;\n                sldImages.sort(function (a, b) {\n                  return a.orderno > b.orderno ? 1 : -1;\n                });\n\n                if (sldImages) {\n                  updatedImages = [];\n                  sldImages.map(function (data, index) {\n                    data.orderno = index + 1;\n                    updatedImages.push(data);\n                  });\n                  requestPassed = true;\n                  _iterator = _createForOfIteratorHelper(sldImages);\n\n                  try {\n                    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                      sldImage = _step.value;\n                      updatedSliderImage = patchListSliderImage(GENERAL_SETTINGS.OREST_URL, authToken, companyId, {\n                        orderno: sldImage.orderno\n                      }, {\n                        hotelrefno: Number(companyId)\n                      }, sldImage.gid);\n                      updatedSliderImage ? requestPassed = true : requestPassed = false;\n                    }\n                  } catch (err) {\n                    _iterator.e(err);\n                  } finally {\n                    _iterator.f();\n                  }\n\n                  if (requestPassed) {\n                    setSliderImages(updatedImages);\n                    setSelectedIndex(null);\n                    setItemCount(updatedImages.length + 1);\n                    toast.success(DELETE_SUCCESS, {\n                      position: toast.POSITION.TOP_RIGHT\n                    });\n                  } else {\n                    toast.error('Something went wrong while deleting image. Please check network tab.', {\n                      position: toast.POSITION.TOP_RIGHT\n                    });\n                  }\n                } else {\n                  toast.error('Something went wrong while deleting image. Please check network tab.', {\n                    position: toast.POSITION.TOP_RIGHT\n                  });\n                }\n\n                _context2.next = 12;\n                break;\n\n              case 9:\n                retErr = isErrorMsg(res);\n                toast.error(retErr.errorMsg, {\n                  position: toast.POSITION.TOP_RIGHT\n                });\n                setIsDeleting(false);\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x3) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n  };\n\n  var handleSelectedImage = function handleSelectedImage(index, image) {\n    if (isItemDesc) {\n      setSelectedIndex(index);\n      setImageSelected(true);\n\n      if (state.langCode === state.defaultLang) {\n        setImageGID(image.gid);\n        setItemDescRequest(true);\n        ViewList({\n          apiUrl: GENERAL_SETTINGS.OREST_URL,\n          endpoint: OREST_ENDPOINT.HCMITEMIMG,\n          token: authToken,\n          params: {\n            query: \"gid:\".concat(image.gid),\n            sort: 'orderno',\n            hotelrefno: Number(companyId)\n          }\n        }).then(function (res) {\n          setItemDescRequest(false);\n\n          if (res.status === 200) {\n            if (res.data && res.data.data && res.data.data.length > 0) {\n              res.data.data[0].title ? setTitle(res.data.data[0].title) : setTitle('');\n              res.data.data[0].description ? setDescription(res.data.data[0].description) : setDescription('');\n              res.data.data[0].cta ? setCta(res.data.data[0].cta) : setCta('');\n\n              if (res.data.data[0].cta) {\n                setIsCta(true);\n                setCta(res.data.data[0].cta);\n                var matchs = res.data.data[0].cta.match(/\\bhttps?:\\/\\/\\S+/gi);\n\n                if ((matchs === null || matchs === void 0 ? void 0 : matchs.length) > 0) {\n                  var cta_title = res.data.data[0].cta.replace(\"<a target=\\\"_blank\\\" href=\\\"\", '').replace(matchs[0], '').replace('>', '').replace('</a>', '').trim();\n                  setCtaLink(matchs[0]);\n                  setCtaTitle(cta_title);\n                  setLocalState(function (prev) {\n                    return _objectSpread(_objectSpread({}, prev), {}, {\n                      ctaLinkType: 'external'\n                    });\n                  });\n                } else {\n                  var _res$data$data$0$cta$;\n\n                  var ctaGid = (_res$data$data$0$cta$ = res.data.data[0].cta.replace(\"<a target=\\\"_blank\\\" href=\\\"\", '').replace('>', '').replace('</a>', '').replace('\"', '').trim()) === null || _res$data$data$0$cta$ === void 0 ? void 0 : _res$data$data$0$cta$.split(' ')[0];\n\n                  var _cta_title6 = res.data.data[0].cta.replace(\"<a target=\\\"_blank\\\" href=\\\"\", '').replace(ctaGid + '\"', '').replace('>', '').replace('</a>', '').trim();\n\n                  setCtaLink(ctaGid);\n                  setCtaTitle(_cta_title6);\n                  setLocalState(function (prev) {\n                    return _objectSpread(_objectSpread({}, prev), {}, {\n                      ctaLinkType: 'internal'\n                    });\n                  });\n                }\n              } else {\n                setIsCta(false);\n                setCtaTitle('');\n                setCtaLink('');\n              }\n            }\n          } else {\n            var retErr = isErrorMsg(res);\n            toast.error(retErr.errorMsg, {\n              position: toast.POSITION.TOP_RIGHT\n            });\n          }\n        });\n      } else {\n        if (otherLangSliderImages.length > 0) {\n          setTitle(otherLangSliderImages[index].title);\n          setDescription(otherLangSliderImages[index].description);\n\n          if (otherLangSliderImages[index].cta) {\n            setIsCta(true);\n            setCta(otherLangSliderImages[index].cta);\n            var matchs = otherLangSliderImages[index].cta.match(/\\bhttps?:\\/\\/\\S+/gi);\n\n            if (matchs.length > 0) {\n              var cta_title = otherLangSliderImages[index].cta.replace(\"<a target=\\\"_blank\\\" href=\\\"\", '').replace(matchs[0], '').replace('>', '').replace('</a>', '').trim();\n              setCtaLink(matchs[0]);\n              setCtaTitle(cta_title);\n              setLocalState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  ctaLinkType: 'external'\n                });\n              });\n            } else {\n              var _otherLangSliderImage;\n\n              var ctaGid = (_otherLangSliderImage = otherLangSliderImages[index - 1].cta.replace(\"<a target=\\\"_blank\\\" href=\\\"\", '').replace('>', '').replace('</a>', '').replace('\"', '').trim()) === null || _otherLangSliderImage === void 0 ? void 0 : _otherLangSliderImage.split(' ')[0];\n\n              var _cta_title7 = otherLangSliderImages[index - 1].cta.replace(\"<a target=\\\"_blank\\\" href=\\\"\", '').replace(ctaGid + '\"', '').replace('>', '').replace('</a>', '').trim();\n\n              setCtaLink(ctaGid);\n              setCtaTitle(_cta_title7);\n              setLocalState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  ctaLinkType: 'internal'\n                });\n              });\n            }\n          } else {\n            setIsCta(false);\n            setCtaTitle('');\n            setCtaLink('');\n          }\n        } else {\n          var _otherLangSliderImage2, _otherLangSliderImage3, _otherLangSliderImage4;\n\n          setTitle(otherLangSliderImages === null || otherLangSliderImages === void 0 ? void 0 : (_otherLangSliderImage2 = otherLangSliderImages.sliderImages[index - 1]) === null || _otherLangSliderImage2 === void 0 ? void 0 : _otherLangSliderImage2.title);\n          setDescription(otherLangSliderImages === null || otherLangSliderImages === void 0 ? void 0 : (_otherLangSliderImage3 = otherLangSliderImages.sliderImages[index - 1]) === null || _otherLangSliderImage3 === void 0 ? void 0 : _otherLangSliderImage3.description);\n\n          if (otherLangSliderImages !== null && otherLangSliderImages !== void 0 && (_otherLangSliderImage4 = otherLangSliderImages.sliderImages[0]) !== null && _otherLangSliderImage4 !== void 0 && _otherLangSliderImage4.cta) {\n            setLocalState(function (prev) {\n              return _objectSpread(_objectSpread({}, prev), {}, {\n                isCta: true\n              });\n            });\n\n            var _matchs = otherLangSliderImages === null || otherLangSliderImages === void 0 ? void 0 : otherLangSliderImages.sliderImages[0].cta.match(/\\bhttps?:\\/\\/\\S+/gi);\n\n            if ((_matchs === null || _matchs === void 0 ? void 0 : _matchs.length) > 0) {\n              var _cta_title8 = otherLangSliderImages === null || otherLangSliderImages === void 0 ? void 0 : otherLangSliderImages.sliderImages[0].cta.replace(\"<a target=\\\"_blank\\\" href=\\\"\", '').replace(_matchs[0], '').replace('>', '').replace('</a>', '').trim();\n\n              setCtaLink(_matchs[0]);\n              setCtaTitle(_cta_title8);\n              setLocalState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  ctaLinkType: 'external'\n                });\n              });\n            } else {\n              var _otherLangSliderImage5;\n\n              var _ctaGid4 = otherLangSliderImages === null || otherLangSliderImages === void 0 ? void 0 : (_otherLangSliderImage5 = otherLangSliderImages.sliderImages[0].cta.replace(\"<a target=\\\"_blank\\\" href=\\\"\", '').replace('>', '').replace('</a>', '').replace('\"', '').trim()) === null || _otherLangSliderImage5 === void 0 ? void 0 : _otherLangSliderImage5.split(' ')[0];\n\n              var _cta_title9 = otherLangSliderImages === null || otherLangSliderImages === void 0 ? void 0 : otherLangSliderImages.sliderImages[0].cta.replace(\"<a target=\\\"_blank\\\" href=\\\"\", '').replace(_ctaGid4 + '\"', '').replace('>', '').replace('</a>', '').trim();\n\n              setCtaLink(_ctaGid4);\n              setCtaTitle(_cta_title9);\n              setLocalState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  ctaLinkType: 'internal'\n                });\n              });\n            }\n          } else {\n            setLocalState(function (prev) {\n              return _objectSpread(_objectSpread({}, prev), {}, {\n                ctaLink: '',\n                ctaTitle: '',\n                isCta: false\n              });\n            });\n          }\n        }\n      }\n    }\n  };\n\n  var handleResetState = function handleResetState() {\n    setCta('');\n    setCtaTitle('');\n    setCtaLink('');\n    setTitle('');\n    setDescription('');\n    setIsCta(false);\n    setImageSelected(false);\n    setSelectedIndex(null);\n  };\n\n  var handleItemDescription = function handleItemDescription() {\n    setItemDesc(!isItemDesc);\n\n    if (isItemDesc) {\n      setItemDescRequest(true);\n      ViewList({\n        apiUrl: GENERAL_SETTINGS.OREST_URL,\n        endpoint: OREST_ENDPOINT.HCMITEMSLD,\n        token: authToken,\n        params: {\n          query: \"gid:\".concat(sliderGID),\n          sort: 'orderno',\n          hotelrefno: Number(companyId)\n        }\n      }).then(function (res) {\n        var _res$data3, _res$data3$data;\n\n        setItemDescRequest(false);\n\n        if ((res === null || res === void 0 ? void 0 : res.status) === 200 && (res === null || res === void 0 ? void 0 : (_res$data3 = res.data) === null || _res$data3 === void 0 ? void 0 : (_res$data3$data = _res$data3.data) === null || _res$data3$data === void 0 ? void 0 : _res$data3$data.length) > 0) {\n          var _res$data$data$, _res$data$data$2;\n\n          setTitle((_res$data$data$ = res.data.data[0]) === null || _res$data$data$ === void 0 ? void 0 : _res$data$data$.title);\n          setDescription((_res$data$data$2 = res.data.data[0]) === null || _res$data$data$2 === void 0 ? void 0 : _res$data$data$2.description);\n\n          if (res.data.data[0].cta) {\n            setIsCta(true);\n            setCta(res.data.data[0].cta);\n            var matchs = res.data.data[0].cta.match(/\\bhttps?:\\/\\/\\S+/gi);\n\n            if (matchs.length > 0) {\n              var cta_title = res.data.data[0].cta.replace(\"<a target=\\\"_blank\\\" href=\\\"\", '').replace(matchs[0], '').replace('>', '').replace('</a>', '').trim();\n              setCtaLink(matchs[0]);\n              setCtaTitle(cta_title);\n            }\n          } else {\n            setIsCta(false);\n            setCtaTitle('');\n            setCtaLink('');\n            setCta('');\n          }\n        }\n      });\n      handleResetState();\n    } else {\n      setSelectedIndex(0);\n      setImageSelected(true);\n\n      if (state.langCode === state.defaultLang) {\n        var _sliderImages$, _sliderImages$2;\n\n        setImageGID((_sliderImages$ = sliderImages[0]) === null || _sliderImages$ === void 0 ? void 0 : _sliderImages$.gid);\n        setItemDescRequest(true);\n        ViewList({\n          apiUrl: GENERAL_SETTINGS.OREST_URL,\n          endpoint: OREST_ENDPOINT.HCMITEMIMG,\n          token: authToken,\n          params: {\n            query: \"gid:\".concat((_sliderImages$2 = sliderImages[0]) === null || _sliderImages$2 === void 0 ? void 0 : _sliderImages$2.gid),\n            sort: 'orderno',\n            hotelrefno: Number(companyId)\n          }\n        }).then(function (res) {\n          setItemDescRequest(false);\n\n          if (res.status === 200) {\n            if (res.data && res.data.data && res.data.data.length > 0) {\n              res.data.data[0].title ? setTitle(res.data.data[0].title) : setTitle('');\n              res.data.data[0].description ? setDescription(res.data.data[0].description) : setDescription('');\n              res.data.data[0].cta ? setCta(res.data.data[0].cta) : setCta('');\n\n              if (res.data.data[0].cta) {\n                setIsCta(true);\n                setCta(res.data.data[0].cta);\n                var matchs = res.data.data[0].cta.match(/\\bhttps?:\\/\\/\\S+/gi);\n\n                if (matchs.length > 0) {\n                  var cta_title = res.data.data[0].cta.replace(\"<a target=\\\"_blank\\\" href=\\\"\", '').replace(matchs[0], '').replace('>', '').replace('</a>', '').trim();\n                  setCtaLink(matchs[0]);\n                  setCtaTitle(cta_title);\n                }\n              } else {\n                setIsCta(false);\n                setCtaTitle('');\n                setCtaLink('');\n              }\n            }\n          } else {\n            var retErr = isErrorMsg(res);\n            toast.error(retErr.errorMsg, {\n              position: toast.POSITION.TOP_RIGHT\n            });\n          }\n        });\n      } else {\n        if ((otherLangSliderImages === null || otherLangSliderImages === void 0 ? void 0 : otherLangSliderImages.length) > 0) {\n          setTitle(otherLangSliderImages[0].title);\n          setDescription(otherLangSliderImages[0].description);\n\n          if (otherLangSliderImages[0].cta) {\n            setIsCta(true);\n            setCta(otherLangSliderImages[0].cta);\n            var matchs = otherLangSliderImages[0].cta.match(/\\bhttps?:\\/\\/\\S+/gi);\n\n            if (matchs.length > 0) {\n              var cta_title = otherLangSliderImages[0].cta.replace(\"<a target=\\\"_blank\\\" href=\\\"\", '').replace(matchs[0], '').replace('>', '').replace('</a>', '').trim();\n              setCtaLink(matchs[0]);\n              setCtaTitle(cta_title);\n            }\n          } else {\n            setIsCta(false);\n            setCtaTitle('');\n            setCtaLink('');\n          }\n        }\n      }\n    }\n  };\n\n  var saveImage = function saveImage(files) {\n    setIsLoaded(false);\n    var orderNo = itemCount;\n    var requests = files.map(function (file) {\n      return new Promise(function (resolve) {\n        asyncUpload(file, orderNo, resolve);\n        orderNo++;\n      });\n    });\n    Promise.all(requests).then( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var sldImages, updatedImages;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return getSliderImages(GENERAL_SETTINGS.OREST_URL, authToken, companyId, sliderID);\n\n            case 2:\n              sldImages = _context3.sent;\n              setIsLoaded(true);\n\n              if (sldImages) {\n                updatedImages = [];\n                sldImages.map(function (data) {\n                  updatedImages.push(data);\n                });\n                setSliderImages(updatedImages);\n                setItemCount(updatedImages.length + 1);\n                toast.success(UPLOAD_SUCCESS, {\n                  position: toast.POSITION.TOP_RIGHT\n                });\n                closeDialog();\n              } else {\n                toast.warn('Something went wrong while saving image. Please check network tab.', {\n                  position: toast.POSITION.TOP_RIGHT\n                });\n              }\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    })));\n  };\n\n  function asyncUpload(file, itemTreated, callback) {\n    if (router.query.sliderOnly) {\n      if (gappID && editedSliderComponent.gid) {\n        setTimeout(function () {\n          ViewList({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.HCMITEMSLD,\n            token: authToken,\n            params: {\n              query: \"gid:\".concat(editedSliderComponent.gid),\n              hotelrefno: Number(companyId)\n            }\n          }).then(function (r) {\n            if (r.status === 200) {\n              Insert({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: OREST_ENDPOINT.HCMITEMIMG,\n                token: authToken,\n                data: {\n                  itemid: gappID,\n                  sliderid: r.data.data[0].id,\n                  imgtype: FIELDTYPE.IMG,\n                  orderno: itemTreated,\n                  hotelrefno: Number(companyId),\n                  masterid: router.query.masterid,\n                  imgquality: quality / 100,\n                  imgscale: quality / 100\n                }\n              }).then(function (r1) {\n                if (r1.status === 200) {\n                  ImageUpload(GENERAL_SETTINGS.OREST_URL, OREST_ENDPOINT.RAFILE, authToken, r1.data.data.mid, file).then(function (r) {\n                    if (r.status === 200) {\n                      callback();\n                    } else {\n                      callback();\n                    }\n                  });\n                } else {\n                  callback();\n                }\n              });\n            }\n          });\n        }, 100);\n      }\n    } else {\n      if (state.hcmItemId && editedSliderComponent.gid) {\n        setTimeout(function () {\n          ViewList({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.HCMITEMSLD,\n            token: authToken,\n            params: {\n              query: \"gid:\".concat(editedSliderComponent.gid),\n              hotelrefno: Number(companyId)\n            }\n          }).then(function (r) {\n            if (r.status === 200) {\n              Insert({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: OREST_ENDPOINT.HCMITEMIMG,\n                token: authToken,\n                data: {\n                  itemid: state.hcmItemId,\n                  sliderid: r.data.data[0].id,\n                  imgtype: FIELDTYPE.IMG,\n                  orderno: itemTreated,\n                  hotelrefno: Number(companyId),\n                  imgquality: quality / 100,\n                  imgscale: quality / 100\n                }\n              }).then(function (r1) {\n                if (r1.status === 200) {\n                  ImageUpload(GENERAL_SETTINGS.OREST_URL, OREST_ENDPOINT.RAFILE, authToken, r1.data.data.mid, file).then(function (r) {\n                    if (r.status === 200) {\n                      callback();\n                    } else {\n                      callback();\n                    }\n                  });\n                } else {\n                  callback();\n                }\n              });\n            }\n          });\n        }, 100);\n      }\n    }\n  }\n\n  var ImageUpload = function ImageUpload(apiUrl, endPoint, token, masterID, file) {\n    var url = apiUrl + '/' + endPoint + OREST_UPLOAD;\n    var binaryData = [];\n    binaryData.push(file);\n    var formData = new FormData();\n    formData.append('file', new Blob(binaryData, {\n      type: file.type\n    }), toSelfName(file.name));\n    var options = {\n      url: url,\n      method: 'post',\n      headers: {\n        Authorization: \"Bearer \".concat(token),\n        'Content-Type': 'multipart/form-data'\n      },\n      params: {\n        orsactive: true,\n        masterid: masterID,\n        hotelrefno: companyId,\n        quality: quality / 100,\n        scale: quality / 100\n      },\n      data: formData\n    };\n    return axios(options).then(function (response) {\n      return response;\n    })[\"catch\"](function (error) {\n      return error.response || {\n        status: 0\n      };\n    });\n  };\n\n  var handleUpdateOrderNo = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(gid, orderNo, orderType) {\n      var tmpSliderImages, tmp, _tmp, requestPassed, _iterator2, _step2, sldImage, updatedSliderImage;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              // update order no of slider images\n              if (orderNo <= 0 || orderNo > sliderImages.length) {\n                setSelectedIndex(null);\n                setImageSelected(false);\n              } else {\n                tmpSliderImages = _toConsumableArray(sliderImages);\n\n                if (orderType === 'increment') {\n                  tmp = tmpSliderImages[orderNo - 1];\n                  tmpSliderImages[orderNo - 1] = tmpSliderImages[orderNo - 2];\n                  tmpSliderImages[orderNo - 2] = tmp;\n                } else {\n                  _tmp = tmpSliderImages[orderNo - 1];\n                  tmpSliderImages[orderNo - 1] = tmpSliderImages[orderNo];\n                  tmpSliderImages[orderNo] = _tmp;\n                }\n\n                tmpSliderImages.map(function (data, index) {\n                  data.orderno = index + 1;\n                });\n                setIsDeleting(true);\n                requestPassed = true;\n                _iterator2 = _createForOfIteratorHelper(tmpSliderImages);\n\n                try {\n                  for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                    sldImage = _step2.value;\n                    updatedSliderImage = patchListSliderImage(GENERAL_SETTINGS.OREST_URL, authToken, companyId, {\n                      orderno: sldImage.orderno\n                    }, {\n                      hotelrefno: Number(companyId)\n                    }, sldImage.gid);\n                    updatedSliderImage ? requestPassed = true : requestPassed = false;\n                  }\n                } catch (err) {\n                  _iterator2.e(err);\n                } finally {\n                  _iterator2.f();\n                }\n\n                setIsDeleting(false);\n\n                if (requestPassed) {\n                  setSliderImages(tmpSliderImages);\n                  setItemCount(sliderImages.length + 1);\n                  handleResetState();\n                  toast.success('Order No Updated Successfully', {\n                    position: toast.POSITION.TOP_RIGHT\n                  });\n                } else {\n                  toast.error('Something went wrong while updating order no. Please check network tab.', {\n                    position: toast.POSITION.TOP_RIGHT\n                  });\n                }\n              }\n\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function handleUpdateOrderNo(_x4, _x5, _x6) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var handleImageQualityChange = function handleImageQualityChange(value) {\n    if (value >= 10 && value <= 100 && value % 10 === 0) {\n      if (sliderImages.length) {\n        setIsLoaded(false);\n        var gids = sliderImages.map(function (image) {\n          return {\n            gid: image.gid,\n            imgquality: value / 100,\n            imgscale: value / 100\n          };\n        });\n        UseOrest({\n          apiUrl: GENERAL_SETTINGS.OREST_URL,\n          endpoint: OREST_ENDPOINT.HCMITEMIMG + '/' + OREST_ENDPOINT.LIST + '/' + OREST_ENDPOINT.PATCH,\n          token: authToken,\n          method: REQUEST_METHOD_CONST.PATCH,\n          data: gids,\n          params: {\n            hotelrefno: Number(companyId)\n          }\n        }).then(function (res) {\n          var _res$data4;\n\n          if ((res === null || res === void 0 ? void 0 : res.status) === 200 && res !== null && res !== void 0 && (_res$data4 = res.data) !== null && _res$data4 !== void 0 && _res$data4.data) {\n            setQuality(value);\n            setIsLoaded(true);\n          } else {\n            var retErr = isErrorMsg(res);\n            toast.error(retErr.errorMsg, {\n              position: toast.POSITION.TOP_RIGHT\n            });\n          }\n        });\n      } else {\n        setQuality(value);\n      }\n    }\n  };\n\n  var handleTextEditorValue = function handleTextEditorValue(value) {\n    if (dialogType === 'title') {\n      setTitle(value);\n    }\n\n    if (dialogType === 'description') {\n      setDescription(value);\n    }\n\n    setLocalState(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        isTextEditorDialogOpen: false,\n        dialogType: '',\n        editorValue: ''\n      });\n    });\n  };\n\n  var handleCancelEditor = function handleCancelEditor() {\n    setLocalState(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        isTextEditorDialogOpen: false,\n        dialogType: '',\n        editorValue: ''\n      });\n    });\n  };\n\n  var handleDialogOpen = function handleDialogOpen(type) {\n    if (type === 'title') {\n      setLocalState(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          isTextEditorDialogOpen: true,\n          dialogType: type,\n          editorValue: title\n        });\n      });\n    }\n\n    if (type === 'description') {\n      setLocalState(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          isTextEditorDialogOpen: true,\n          dialogType: type,\n          editorValue: description\n        });\n      });\n    }\n  };\n\n  var handleChangeDatePicker = function handleChangeDatePicker(date) {\n    var dateValue = moment(date).format(OREST_ENDPOINT.DATEFORMAT_LOCALE);\n    setLocalState(_objectSpread(_objectSpread({}, localState), {}, {\n      expiryDate: dateValue\n    }));\n\n    if (dateValue !== 'Invalid date') {\n      Patch({\n        // update slider\n        apiUrl: GENERAL_SETTINGS.OREST_URL,\n        endpoint: OREST_ENDPOINT.HCMITEMSLD,\n        token: authToken,\n        gid: sliderGID,\n        params: {\n          hotelrefno: Number(companyId)\n        },\n        data: {\n          expiredt: dateValue\n        }\n      }).then(function (res) {\n        if (res.status === 200) {\n          toast.success(SAVED_SUCCESS, {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        } else {\n          console.log(res);\n        }\n      });\n    }\n  };\n\n  if (!isLoaded) {\n    return __jsx(LoadingSpinner, {\n      style: {\n        color: COLORS.secondary\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1259,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1263,\n      columnNumber: 9\n    }\n  }, !router.query.sliderOnly && __jsx(Grid, {\n    container: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1266,\n      columnNumber: 21\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1267,\n      columnNumber: 25\n    }\n  }, __jsx(LocalizationProvider, {\n    dateLibInstance: moment,\n    dateAdapter: MomentAdapter,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1268,\n      columnNumber: 29\n    }\n  }, __jsx(DatePicker, {\n    id: \"sliderExpiryDate\",\n    name: \"sliderExpiryDate\",\n    label: 'Select Expiry',\n    value: expiryDate,\n    inputFormat: \"DD/MM/YYYY\",\n    disablePast: true,\n    onChange: handleChangeDatePicker,\n    renderInput: function renderInput(props) {\n      return __jsx(TextField, _extends({\n        fullWidth: true\n      }, props, {\n        variant: 'filled',\n        required: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1277,\n          columnNumber: 61\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1269,\n      columnNumber: 33\n    }\n  })))), __jsx(Grid, {\n    container: true,\n    justify: 'flex-start',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1288,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: router !== null && router !== void 0 && (_router$query = router.query) !== null && _router$query !== void 0 && _router$query.sliderOnly ? 8 : 5,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1289,\n      columnNumber: 17\n    }\n  }, __jsx(FormControlLabel, {\n    disabled: state.langCode !== state.defaultLang && !router.query.sliderOnly,\n    control: __jsx(Checkbox, {\n      checked: isItemDesc,\n      onChange: handleItemDescription,\n      name: \"isitem\",\n      color: \"primary\",\n      disabled: sliderImages.length === 0,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1293,\n        columnNumber: 29\n      }\n    }),\n    label: \"Items Description\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1290,\n      columnNumber: 21\n    }\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: isOptimizeImages,\n      onChange: function onChange() {\n        return setOptimizeImages(!isOptimizeImages);\n      },\n      color: \"primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1305,\n        columnNumber: 29\n      }\n    }),\n    label: \"Optimize Images\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1303,\n      columnNumber: 21\n    }\n  }), (router === null || router === void 0 ? void 0 : (_router$query2 = router.query) === null || _router$query2 === void 0 ? void 0 : _router$query2.sliderOnly) && __jsx(React.Fragment, null, __jsx(FormControlLabel, {\n    className: classes.labelFont,\n    control: __jsx(Checkbox, {\n      size: 'small',\n      checked: isActive,\n      onChange: function onChange() {\n        setIsActive(!isActive);\n        Patch({\n          // update slider\n          apiUrl: GENERAL_SETTINGS.OREST_URL,\n          endpoint: OREST_ENDPOINT.HCMITEMSLD,\n          token: authToken,\n          gid: sliderGID,\n          params: {\n            hotelrefno: Number(companyId)\n          },\n          data: {\n            isactive: !isActive\n          }\n        }).then(function (res) {\n          if (res.status !== 200) {\n            var retErr = isErrorMsg(res);\n            toast.error(retErr.errorMsg, {\n              position: toast.POSITION.TOP_RIGHT\n            });\n          }\n        });\n      },\n      color: \"primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1318,\n        columnNumber: 37\n      }\n    }),\n    label: \"Active\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1315,\n      columnNumber: 29\n    }\n  }), __jsx(FormControl, {\n    size: 'small',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1349,\n      columnNumber: 29\n    }\n  }, __jsx(InputLabel, {\n    htmlFor: \"age-native-simple\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1350,\n      columnNumber: 33\n    }\n  }, \"Category\"), __jsx(Select, {\n    \"native\": true,\n    name: \"cat_id\",\n    variant: 'outlined',\n    value: catId,\n    onChange: function onChange(e) {\n      setCatId(e.target.value);\n      Patch({\n        // update slider\n        apiUrl: GENERAL_SETTINGS.OREST_URL,\n        endpoint: OREST_ENDPOINT.HCMITEMSLD,\n        token: authToken,\n        gid: sliderGID,\n        params: {\n          hotelrefno: Number(companyId)\n        },\n        data: {\n          catid: e.target.value\n        }\n      }).then(function (res) {\n        if (res.status !== 200) {\n          var retErr = isErrorMsg(res);\n          toast.error(retErr.errorMsg, {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1351,\n      columnNumber: 33\n    }\n  }, __jsx(\"option\", {\n    style: {\n      display: 'none'\n    },\n    value: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1380,\n      columnNumber: 37\n    }\n  }), categories.length > 0 && categories.map(function (cat) {\n    return __jsx(\"option\", {\n      key: cat.id,\n      value: cat.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1384,\n        columnNumber: 49\n      }\n    }, cat.description);\n  }))))), !(router !== null && router !== void 0 && (_router$query3 = router.query) !== null && _router$query3 !== void 0 && _router$query3.sliderOnly) && __jsx(Grid, {\n    item: true,\n    xs: 5,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1395,\n      columnNumber: 21\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1396,\n      columnNumber: 25\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 1,\n    style: {\n      marginTop: 6,\n      marginLeft: 16\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1397,\n      columnNumber: 29\n    }\n  }, __jsx(Typography, {\n    component: 'span',\n    style: {\n      marginLeft: -8\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1398,\n      columnNumber: 33\n    }\n  }, \"Text\")), __jsx(Grid, {\n    item: true,\n    xs: 2,\n    style: {\n      marginTop: 8\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1402,\n      columnNumber: 29\n    }\n  }, __jsx(InputColor, {\n    onChange: function onChange(color) {\n      return setTextColor(color.hex);\n    },\n    placement: \"right\",\n    initialValue: textColor,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1403,\n      columnNumber: 33\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 2,\n    style: {\n      marginTop: 6\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1409,\n      columnNumber: 29\n    }\n  }, __jsx(Typography, {\n    component: 'span',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1410,\n      columnNumber: 33\n    }\n  }, \"Button\")), __jsx(Grid, {\n    item: true,\n    xs: 3,\n    style: {\n      marginTop: 8\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1412,\n      columnNumber: 29\n    }\n  }, __jsx(InputColor, {\n    onChange: function onChange(color) {\n      return setButtonColor(color.hex);\n    },\n    placement: \"right\",\n    initialValue: buttonColor,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1413,\n      columnNumber: 33\n    }\n  })))), __jsx(Grid, {\n    item: true,\n    xs: router !== null && router !== void 0 && (_router$query4 = router.query) !== null && _router$query4 !== void 0 && _router$query4.sliderOnly ? 4 : 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1422,\n      columnNumber: 17\n    }\n  }, router !== null && router !== void 0 && (_router$query5 = router.query) !== null && _router$query5 !== void 0 && _router$query5.sliderOnly ? __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1424,\n      columnNumber: 25\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 1,\n    style: {\n      marginTop: 6\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1425,\n      columnNumber: 29\n    }\n  }, __jsx(Typography, {\n    component: 'span',\n    style: {\n      marginLeft: -8\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1426,\n      columnNumber: 33\n    }\n  }, \"Text\")), __jsx(Grid, {\n    item: true,\n    xs: 2,\n    style: {\n      marginTop: 8\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1430,\n      columnNumber: 29\n    }\n  }, __jsx(InputColor, {\n    onChange: function onChange(color) {\n      return setTextColor(color.hex);\n    },\n    placement: \"right\",\n    initialValue: textColor,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1431,\n      columnNumber: 33\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 2,\n    style: {\n      marginTop: 6\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1437,\n      columnNumber: 29\n    }\n  }, __jsx(Typography, {\n    component: 'span',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1438,\n      columnNumber: 33\n    }\n  }, \"Button\")), __jsx(Grid, {\n    item: true,\n    xs: 3,\n    style: {\n      marginTop: 8\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1440,\n      columnNumber: 29\n    }\n  }, __jsx(InputColor, {\n    onChange: function onChange(color) {\n      return setButtonColor(color.hex);\n    },\n    placement: \"right\",\n    initialValue: buttonColor,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1441,\n      columnNumber: 33\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1447,\n      columnNumber: 29\n    }\n  }, __jsx(Button, {\n    onClick: openDialog,\n    variant: \"contained\",\n    size: \"small\",\n    color: \"primary\",\n    \"aria-label\": \"upload\",\n    className: classes.uploadButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1448,\n      columnNumber: 33\n    }\n  }, __jsx(CloudUploadIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1456,\n      columnNumber: 37\n    }\n  }), \"UPLOAD\"))) : __jsx(Button, {\n    onClick: openDialog,\n    variant: \"contained\",\n    size: \"small\",\n    color: \"primary\",\n    \"aria-label\": \"upload\",\n    className: classes.uploadButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1462,\n      columnNumber: 25\n    }\n  }, __jsx(CloudUploadIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1470,\n      columnNumber: 29\n    }\n  }), \"UPLOAD\"))), isOptimizeImages && __jsx(Grid, {\n    container: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1477,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1478,\n      columnNumber: 21\n    }\n  }, __jsx(PercentageSlider, {\n    marks: PERCENTAGE_VALUES,\n    value: quality,\n    onChange: function onChange(e, value) {\n      return handleImageQualityChange(value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1479,\n      columnNumber: 25\n    }\n  }))), __jsx(Grid, {\n    container: true,\n    justify: 'flex-start',\n    spacing: 3,\n    className: isSaving ? classes.disableEvent : '',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1487,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 5,\n    className: otherLangSlider && 'slider' in otherLangSlider && state.langCode !== state.defaultLang ? classes.disableEvent : '',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1488,\n      columnNumber: 17\n    }\n  }, __jsx(Paper, {\n    className: classes.paperBlock,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1497,\n      columnNumber: 21\n    }\n  }, sliderImages.length > 0 && sliderImages.map(function (image, index) {\n    return __jsx(Grid, {\n      key: index,\n      container: true,\n      justify: 'center',\n      className: isDeleting ? classes.disableEvent : '',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1501,\n        columnNumber: 37\n      }\n    }, __jsx(Grid, {\n      item: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1507,\n        columnNumber: 41\n      }\n    }, __jsx(Card, {\n      className: classes.card,\n      style: {\n        border: index === selectedIndex ? '2px solid red' : \"1px solid \".concat(COLORS === null || COLORS === void 0 ? void 0 : COLORS.secondary)\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1508,\n        columnNumber: 45\n      }\n    }, __jsx(\"div\", {\n      style: {\n        backgroundImage: \"url(\".concat(GENERAL_SETTINGS.STATIC_URL + image.fileurl, \")\"),\n        height: '100%',\n        width: '100%',\n        backgroundSize: 'cover',\n        borderRadius: 5\n      },\n      onMouseEnter: function onMouseEnter() {\n        setShowDeleteBtn(true);\n        setHoverIndex(index);\n      },\n      onMouseLeave: function onMouseLeave() {\n        setShowDeleteBtn(false);\n        setHoverIndex(index);\n      },\n      onClick: function onClick() {\n        return handleSelectedImage(index, image);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1517,\n        columnNumber: 49\n      }\n    }, showDeleteBtn && hoverIndex === index && __jsx(IconButton, {\n      disabled: state.langCode !== state.defaultLang && !router.query.sliderOnly,\n      component: \"span\",\n      color: 'primary',\n      className: index === sliderImages.length - 1 ? classes.disableEvent : '',\n      onClick: function onClick() {\n        return handleUpdateOrderNo(image.gid, image.orderno + 1, 'increment');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1538,\n        columnNumber: 57\n      }\n    }, __jsx(AddCircleIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1558,\n        columnNumber: 61\n      }\n    })), showDeleteBtn && hoverIndex === index && __jsx(Typography, {\n      component: \"span\",\n      color: 'primary',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1562,\n        columnNumber: 57\n      }\n    }, image.orderno), showDeleteBtn && hoverIndex === index && __jsx(IconButton, {\n      disabled: state.langCode !== state.defaultLang && !router.query.sliderOnly,\n      component: \"span\",\n      color: 'primary',\n      className: index === 0 ? classes.disableEvent : '',\n      onClick: function onClick() {\n        return handleUpdateOrderNo(image.gid, image.orderno - 1, 'decrement');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1567,\n        columnNumber: 57\n      }\n    }, __jsx(RemoveCircleIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1583,\n        columnNumber: 61\n      }\n    })), showDeleteBtn && hoverIndex === index && __jsx(IconButton, {\n      disabled: state.langCode !== state.defaultLang && !router.query.sliderOnly,\n      onClick: function onClick() {\n        return handleDeleteImage(image.gid);\n      },\n      \"aria-label\": \"upload picture\",\n      component: \"span\",\n      style: {\n        \"float\": 'right'\n      },\n      color: 'primary',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1587,\n        columnNumber: 57\n      }\n    }, __jsx(CancelIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1598,\n        columnNumber: 61\n      }\n    }))))));\n  }))), __jsx(Grid, {\n    item: true,\n    xs: 7,\n    className: itemDescRequest ? classes.disableEvent : '',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1609,\n      columnNumber: 17\n    }\n  }, __jsx(Paper, {\n    className: classes.paperBlock,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1610,\n      columnNumber: 21\n    }\n  }, __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1611,\n      columnNumber: 25\n    }\n  }, __jsx(Grid, {\n    container: true,\n    justify: 'flex-start',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1612,\n      columnNumber: 29\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1613,\n      columnNumber: 33\n    }\n  }, __jsx(Typography, {\n    component: 'h6',\n    variant: 'h6',\n    className: classes.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1614,\n      columnNumber: 37\n    }\n  }, \"Title\")), __jsx(Grid, {\n    item: true,\n    xs: 9,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1618,\n      columnNumber: 33\n    }\n  }, __jsx(IconButton, {\n    \"aria-label\": \"Edit Title\",\n    color: \"primary\",\n    onClick: function onClick() {\n      return handleDialogOpen('title');\n    },\n    style: {\n      \"float\": 'right'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1619,\n      columnNumber: 37\n    }\n  }, __jsx(BorderColorSharpIcon, {\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1625,\n      columnNumber: 41\n    }\n  }))))), __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1630,\n      columnNumber: 25\n    }\n  }, __jsx(Grid, {\n    container: true,\n    justify: 'flex-start',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1631,\n      columnNumber: 29\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1632,\n      columnNumber: 33\n    }\n  }, __jsx(Typography, {\n    component: 'h6',\n    variant: 'h6',\n    className: classes.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1633,\n      columnNumber: 37\n    }\n  }, \"Description\")), __jsx(Grid, {\n    item: true,\n    xs: 9,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1637,\n      columnNumber: 33\n    }\n  }, __jsx(IconButton, {\n    \"aria-label\": \"Edit Title\",\n    color: \"primary\",\n    onClick: function onClick() {\n      return handleDialogOpen('description');\n    },\n    style: {\n      \"float\": 'right'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1638,\n      columnNumber: 37\n    }\n  }, __jsx(BorderColorSharpIcon, {\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1644,\n      columnNumber: 41\n    }\n  }))))), __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1649,\n      columnNumber: 25\n    }\n  }, __jsx(Grid, {\n    container: true,\n    justify: 'flex-start',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1650,\n      columnNumber: 29\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 11,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1651,\n      columnNumber: 33\n    }\n  }, __jsx(Typography, {\n    component: 'h6',\n    variant: 'h6',\n    className: classes.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1652,\n      columnNumber: 37\n    }\n  }, \"Do you want to add button for slider ?\")), __jsx(Grid, {\n    item: true,\n    xs: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1656,\n      columnNumber: 33\n    }\n  }, __jsx(Typography, {\n    component: 'div',\n    style: {\n      marginTop: 16\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1657,\n      columnNumber: 37\n    }\n  }, __jsx(Switch, {\n    size: 'small',\n    checked: isCta,\n    onChange: function onChange() {\n      setIsCta(!isCta);\n      setCtaTitle('');\n      setCtaLink('');\n      setCta('');\n    },\n    inputProps: {\n      'aria-label': 'secondary checkbox'\n    },\n    color: 'primary',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1658,\n      columnNumber: 41\n    }\n  }))))), isCta && __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1675,\n      columnNumber: 29\n    }\n  }, __jsx(Grid, {\n    container: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1676,\n      columnNumber: 33\n    }\n  }, __jsx(FormControl, {\n    component: \"fieldset\",\n    disabled: (state === null || state === void 0 ? void 0 : state.langCode) !== (state === null || state === void 0 ? void 0 : state.defaultLang),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1677,\n      columnNumber: 37\n    }\n  }, __jsx(RadioGroup, {\n    \"aria-label\": \"link-type\",\n    row: true,\n    value: ctaLinkType,\n    onChange: function onChange(e) {\n      var _e$target = e === null || e === void 0 ? void 0 : e.target,\n          value = _e$target.value;\n\n      setLocalState(function (prev) {\n        var _pageData$;\n\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          ctaLinkType: value,\n          ctaLink: value === 'internal' ? (_pageData$ = pageData[0]) === null || _pageData$ === void 0 ? void 0 : _pageData$.code : ''\n        });\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1678,\n      columnNumber: 41\n    }\n  }, __jsx(FormControlLabel, {\n    value: \"external\",\n    control: __jsx(Radio, {\n      color: 'primary',\n      size: 'small',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1693,\n        columnNumber: 58\n      }\n    }),\n    label: \"External Link\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1691,\n      columnNumber: 45\n    }\n  }), __jsx(FormControlLabel, {\n    value: \"internal\",\n    control: __jsx(Radio, {\n      color: 'primary',\n      size: 'small',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1698,\n        columnNumber: 58\n      }\n    }),\n    label: \"Internal Link\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1696,\n      columnNumber: 45\n    }\n  })))), __jsx(Grid, {\n    container: true,\n    justify: 'flex-start',\n    spacing: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1704,\n      columnNumber: 33\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1705,\n      columnNumber: 37\n    }\n  }, __jsx(TextField, {\n    size: 'small',\n    id: \"cta-title\",\n    variant: 'outlined',\n    label: 'Title',\n    fullWidth: true,\n    value: ctaTitle,\n    onChange: function onChange(e) {\n      return setCtaTitle(e.target.value);\n    },\n    style: {\n      marginTop: 8\n    },\n    helperText: ctaTitle && __jsx(Typography, {\n      variant: \"caption\",\n      className: classes.alignText,\n      display: \"block\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1717,\n        columnNumber: 53\n      }\n    }, \"\".concat(ctaTitle === null || ctaTitle === void 0 ? void 0 : ctaTitle.length, \" < 100\")),\n    inputProps: {\n      maxLength: 99\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1706,\n      columnNumber: 41\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1729,\n      columnNumber: 37\n    }\n  }, ctaLinkType === 'external' && __jsx(TextField, {\n    size: 'small',\n    id: \"cta-link\",\n    variant: 'outlined',\n    label: 'Link',\n    fullWidth: true,\n    value: ctaLink,\n    error: ctaLink ? !validator.isURL(ctaLink) : false,\n    onChange: function onChange(e) {\n      return setCtaLink(e.target.value);\n    },\n    style: {\n      marginTop: 8\n    },\n    disabled: state.langCode !== state.defaultLang,\n    helperText: ctaLink && __jsx(Typography, {\n      variant: \"caption\",\n      className: classes.alignText,\n      display: \"block\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1744,\n        columnNumber: 57\n      }\n    }, \"\".concat(ctaLink === null || ctaLink === void 0 ? void 0 : ctaLink.length, \" < 100\")),\n    inputProps: {\n      maxLength: 99\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1731,\n      columnNumber: 45\n    }\n  }), ctaLinkType === 'internal' && __jsx(FormControl, {\n    variant: \"outlined\",\n    size: 'small',\n    style: {\n      marginTop: 8\n    },\n    fullWidth: true,\n    disabled: (state === null || state === void 0 ? void 0 : state.langCode) !== (state === null || state === void 0 ? void 0 : state.defaultLang),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1757,\n      columnNumber: 45\n    }\n  }, __jsx(Select, {\n    value: ctaLink,\n    onChange: function onChange(e) {\n      var _e$target2 = e === null || e === void 0 ? void 0 : e.target,\n          value = _e$target2.value;\n\n      setCtaLink(value);\n    },\n    label: \"Web Pages\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1764,\n      columnNumber: 49\n    }\n  }, pageData.map(function (option, index) {\n    return __jsx(MenuItem, {\n      value: option.code,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1774,\n        columnNumber: 61\n      }\n    }, ' ', option.code, ' ');\n  })))))), __jsx(Divider, {\n    style: {\n      marginTop: 8\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1787,\n      columnNumber: 25\n    }\n  }), __jsx(Button, {\n    onClick: handleUpdate,\n    variant: \"contained\",\n    size: \"small\",\n    color: \"primary\",\n    \"aria-label\": \"add\",\n    className: classes.submit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1788,\n      columnNumber: 25\n    }\n  }, \"SUBMIT\")))), __jsx(DropzoneDialog, {\n    open: isDialogOpen,\n    onSave: saveImage,\n    acceptedFiles: ['image/jpeg', 'image/png', 'image/bmp'],\n    showPreviews: true,\n    maxFileSize: 5000000,\n    onClose: closeDialog,\n    filesLimit: 5,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1801,\n      columnNumber: 13\n    }\n  }), isTextEditorDialogOpen && __jsx(TextEditor, {\n    handleSaveTextEditor: handleTextEditorValue,\n    handleCancelTextEditor: handleCancelEditor,\n    data: editorValue,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1811,\n      columnNumber: 17\n    }\n  }));\n};\n\n_s(EditSlider, \"bloKqO0O+BAQN1PjqFzJscIw0QU=\", false, function () {\n  return [useRouter, useStyles];\n});\n\n_c = EditSlider;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    state: state.formReducer.pageBuilder\n  };\n};\n\nexport default connect(mapStateToProps)(EditSlider);\n\nvar _c;\n\n$RefreshReg$(_c, \"EditSlider\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/components/page/sections/slider/EditSlider.js"],"names":["React","useState","useEffect","useContext","Paper","Grid","Card","TextField","Typography","CloudUploadIcon","IconButton","AddCircleIcon","RemoveCircleIcon","FormControlLabel","MenuItem","Radio","RadioGroup","Checkbox","CancelIcon","Divider","Switch","makeStyles","Button","Container","DropzoneDialog","useRouter","WebCmsGlobal","Delete","Insert","Patch","UseOrest","ViewList","COLORS","DELETE_SUCCESS","PERCENTAGE_VALUES","SAVED_SUCCESS","UPLOAD_SUCCESS","LoadingSpinner","FIELDTYPE","isErrorMsg","OREST_ENDPOINT","OREST_UPLOAD","REQUEST_METHOD_CONST","connect","toast","validator","axios","FormControl","InputLabel","Select","InputColor","PercentageSlider","getSliderImages","patchListSliderImage","TextEditor","BorderColorSharpIcon","toSelfName","moment","DatePicker","LocalizationProvider","MomentAdapter","useStyles","theme","submit","marginRight","spacing","marginTop","borderRadius","paperBlock","height","border","secondary","overflow","disableEvent","pointerEvents","opacity","uploadButton","marginBottom","marginLeft","card","width","margin","cursor","alignText","textAlign","color","text","fontWeight","fontSize","EditSlider","props","sliderComponent","handleCmponent","state","handleApplyDisable","handleSliderValues","otherLangSlider","sliderImages","setSliderImages","title","setTitle","description","setDescription","isCta","setIsCta","ctaTitle","setCtaTitle","ctaLink","setCtaLink","cta","setCta","isLoaded","setIsLoaded","isSaving","setIsSaving","isItemDesc","setItemDesc","isDeleting","setIsDeleting","selectedIndex","setSelectedIndex","showDeleteBtn","setShowDeleteBtn","hoverIndex","setHoverIndex","sliderGID","setSliderGID","sliderID","setSliderID","imageGID","setImageGID","isDialogOpen","setDialogOpen","itemCount","setItemCount","gappID","setGappID","otherLangSliderImages","setOtherLangSliderImages","editedSliderComponent","setEditedSliderComponent","isImageSelected","setImageSelected","itemDescRequest","setItemDescRequest","isOptimizeImages","setOptimizeImages","assets","meta","imageQuality","quality","setQuality","catId","setCatId","categories","setCategories","isActive","setIsActive","textColor","setTextColor","buttonColor","setButtonColor","isTextEditorDialogOpen","editorValue","dialogType","pageData","ctaLinkType","expiryDate","format","DATEFORMAT_LOCALE","localState","setLocalState","router","companyId","query","companyID","GENERAL_SETTINGS","token","authToken","classes","openDialog","closeDialog","sliderOnly","length","langCode","defaultLang","service","type","gid","id","slider","apiUrl","OREST_URL","endpoint","HCMCAT","params","hotelrefno","Number","then","res","status","data","retErr","error","errorMsg","position","POSITION","TOP_RIGHT","RAFILE","prev","HCMITEMSLD","r","itemid","catid","isactive","matchLink","match","replace","trim","ctaGid","split","cta_title","expiredt","HCMITEMIMG","sort","updatedImages","map","index","push","res1","matchs","console","log","hcmItemId","updatedSliderComponent","handleUpdate","success","handleResetState","warn","updateOtherLangSliderImages","handleDeleteImage","imageGid","sldImages","a","b","orderno","requestPassed","sldImage","updatedSliderImage","handleSelectedImage","image","handleItemDescription","saveImage","files","orderNo","requests","file","Promise","resolve","asyncUpload","all","itemTreated","callback","setTimeout","sliderid","imgtype","IMG","masterid","imgquality","imgscale","r1","ImageUpload","mid","endPoint","masterID","url","binaryData","formData","FormData","append","Blob","name","options","method","headers","Authorization","orsactive","scale","response","handleUpdateOrderNo","orderType","tmpSliderImages","tmp","handleImageQualityChange","value","gids","LIST","PATCH","handleTextEditorValue","handleCancelEditor","handleDialogOpen","handleChangeDatePicker","date","dateValue","labelFont","e","target","display","cat","hex","backgroundImage","STATIC_URL","fileurl","backgroundSize","code","maxLength","isURL","option","mapStateToProps","formReducer","pageBuilder"],"mappings":"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","sourcesContent":["//react imports\nimport React, { useState, useEffect, useContext } from 'react'\n//material ui imports\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport Card from '@material-ui/core/Card'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload'\nimport IconButton from '@material-ui/core/IconButton'\nimport AddCircleIcon from '@material-ui/icons/AddCircle'\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle'\nimport { FormControlLabel, MenuItem, Radio, RadioGroup } from '@material-ui/core'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport CancelIcon from '@material-ui/icons/Cancel'\nimport Divider from '@material-ui/core/Divider'\nimport Switch from '@material-ui/core/Switch'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Container from '@material-ui/core/Container'\n//dropzone related imports\nimport 'regenerator-runtime/runtime'\nimport { DropzoneDialog } from 'material-ui-dropzone'\nimport { useRouter } from 'next/router'\n//custom imports\nimport WebCmsGlobal from '../../../../../../webcms-global'\nimport { Delete, Insert, Patch, UseOrest, ViewList } from '@webcms/orest'\nimport { COLORS, DELETE_SUCCESS, PERCENTAGE_VALUES, SAVED_SUCCESS, UPLOAD_SUCCESS } from '../../../../constants'\nimport LoadingSpinner from '../../../../../../LoadingSpinner'\nimport {\n    FIELDTYPE,\n    isErrorMsg,\n    OREST_ENDPOINT,\n    OREST_UPLOAD,\n    REQUEST_METHOD_CONST,\n} from '../../../../../../../model/orest/constants'\nimport { connect } from 'react-redux'\nimport { toast } from 'react-toastify'\nimport validator from 'validator'\nimport axios from 'axios'\nimport FormControl from '@material-ui/core/FormControl'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Select from '@material-ui/core/Select'\nimport InputColor from 'react-input-color'\nimport { PercentageSlider } from '../../../../../../../model/slider'\nimport { getSliderImages, patchListSliderImage } from '../../../../helpers/slider'\nimport TextEditor from '../text-editor'\nimport BorderColorSharpIcon from '@material-ui/icons/BorderColorSharp'\nimport { toSelfName } from './../../../../../../../lib/helpers/useFunction';\nimport moment from \"moment\";\nimport {DatePicker, LocalizationProvider} from \"@material-ui/pickers\";\nimport MomentAdapter from \"@date-io/moment\";\n\nconst useStyles = makeStyles((theme) => ({\n    submit: {\n        marginRight: theme.spacing(3),\n        marginTop: theme.spacing(1),\n        borderRadius: 20,\n        float: 'right',\n    },\n    paperBlock: {\n        height: 350,\n        border: `2px solid ${COLORS?.secondary}`,\n        overflow: 'auto',\n    },\n    disableEvent: {\n        pointerEvents: 'none',\n        opacity: 0.5,\n    },\n    uploadButton: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n        marginLeft: theme.spacing(1),\n        borderRadius: 20,\n        float: 'right',\n    },\n    card: {\n        height: 200,\n        width: 320,\n        margin: theme.spacing(1),\n        cursor: 'pointer',\n    },\n    alignText: {\n        textAlign: 'right',\n        color: 'red',\n    },\n    text: {\n        marginTop: 16,\n        fontWeight: 'bold',\n        fontSize: 15,\n    },\n}))\n\nconst EditSlider = (props) => {\n    const { sliderComponent, handleCmponent, state, handleApplyDisable, handleSliderValues, otherLangSlider } = props\n\n    const [sliderImages, setSliderImages] = useState([])\n    const [title, setTitle] = useState('')\n    const [description, setDescription] = useState('')\n    const [isCta, setIsCta] = useState(false)\n    const [ctaTitle, setCtaTitle] = useState('')\n    const [ctaLink, setCtaLink] = useState('')\n    const [cta, setCta] = useState('')\n    const [isLoaded, setIsLoaded] = useState(false)\n    const [isSaving, setIsSaving] = useState(false)\n    const [isItemDesc, setItemDesc] = useState(false)\n    const [isDeleting, setIsDeleting] = useState(false)\n    const [selectedIndex, setSelectedIndex] = useState()\n    const [showDeleteBtn, setShowDeleteBtn] = useState(false)\n    const [hoverIndex, setHoverIndex] = useState()\n    const [sliderGID, setSliderGID] = useState('')\n    const [sliderID, setSliderID] = useState('')\n    const [imageGID, setImageGID] = useState('')\n    const [isDialogOpen, setDialogOpen] = useState(false)\n    const [itemCount, setItemCount] = useState(1)\n    const [gappID, setGappID] = useState('')\n    const [otherLangSliderImages, setOtherLangSliderImages] = useState([])\n    const [editedSliderComponent, setEditedSliderComponent] = useState(sliderComponent)\n    const [isImageSelected, setImageSelected] = useState(false)\n    const [itemDescRequest, setItemDescRequest] = useState(false)\n    const [isOptimizeImages, setOptimizeImages] = useState(false)\n    const [quality, setQuality] = useState(\n        state?.assets?.meta?.imageQuality ? state.assets.meta.imageQuality * 100 : 50\n    )\n    const [catId, setCatId] = useState(null)\n    const [categories, setCategories] = useState([])\n    const [isActive, setIsActive] = useState(false)\n    const [textColor, setTextColor] = useState(sliderComponent?.textColor ? sliderComponent.textColor : '#fff')\n    const [buttonColor, setButtonColor] = useState(sliderComponent?.buttonColor ? sliderComponent.buttonColor : '#fff')\n    const [localState, setLocalState] = useState({\n        isTextEditorDialogOpen: false,\n        editorValue: '',\n        dialogType: '',\n        pageData: [],\n        ctaLinkType: '',\n        expiryDate: moment().format(OREST_ENDPOINT.DATEFORMAT_LOCALE)\n    })\n\n    const { dialogType, editorValue, isTextEditorDialogOpen, ctaLinkType, pageData, expiryDate } = localState\n\n    const router = useRouter()\n    const companyId = router.query.companyID\n    const { GENERAL_SETTINGS, token } = useContext(WebCmsGlobal)\n    const authToken = token || router.query.authToken\n\n    const classes = useStyles()\n\n    const openDialog = () => {\n        //it opens dialog for image upload\n        setDialogOpen(true)\n    }\n\n    const closeDialog = () => {\n        ////it closes dialog for image upload\n        setDialogOpen(false)\n    }\n\n    useEffect(() => {\n        if (otherLangSlider && 'sliderImages' in otherLangSlider) {\n            setOtherLangSliderImages(otherLangSlider.sliderImages)\n        }\n    }, [otherLangSlider])\n\n    useEffect(() => {\n        if (router.query.sliderOnly) {\n            if (sliderImages.length === 0) {\n                handleApplyDisable(true)\n            } else {\n                handleApplyDisable(false)\n            }\n        } else {\n            if (sliderImages.length > 0) {\n                if (state.langCode === state.defaultLang) {\n                    handleCmponent({\n                        service: 'hcmitemsld',\n                        type: 'slider',\n                        gid: editedSliderComponent.gid,\n                        width: editedSliderComponent.width,\n                        id: editedSliderComponent.id,\n                        textColor: textColor,\n                        buttonColor: buttonColor,\n                    })\n                } else {\n                    if (!isItemDesc) {\n                        handleCmponent({\n                            slider: {\n                                title: title,\n                                description: description,\n                                cta: cta,\n                            },\n                        })\n                    } else {\n                        handleCmponent({\n                            sliderImages: otherLangSliderImages,\n                        })\n                    }\n                }\n            }\n        }\n    }, [sliderImages, title, description, cta, otherLangSliderImages, textColor, buttonColor])\n\n    useEffect(() => {\n        if (router.query.sliderOnly) {\n            handleSliderValues(title, description, cta, state.slider.gid, textColor, buttonColor)\n        }\n    }, [title, description, cta, textColor, buttonColor])\n\n    useEffect(() => {\n        setIsLoaded(false);\n        ViewList({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.HCMCAT,\n            token: authToken,\n            params: {\n                hotelrefno: Number(companyId),\n            },\n        }).then((res) => {\n            if (res?.status === 200) {\n                res?.data?.data?.length > 0 && setCategories(res.data.data)\n            } else {\n                const retErr = isErrorMsg(res)\n                toast.error(retErr.errorMsg, {\n                    position: toast.POSITION.TOP_RIGHT,\n                })\n            }\n        })\n        //getting data from rafile\n        ViewList({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.RAFILE,\n            token: authToken,\n            params: {\n                hotelrefno: Number(companyId),\n                query: `filetype::WEBPAGE,istemplate::false}`,\n            }\n        }).then(res => {\n            setIsLoaded(true)\n            if (res.status === 200 && res?.data?.data) {\n                setLocalState(prev => ({...prev, pageData: res.data.data}))\n            } else {\n                const retErr = isErrorMsg(res);\n                toast.error(retErr.errorMsg, {\n                    position: toast.POSITION.TOP_RIGHT\n                });\n            }\n        })\n    }, [])\n\n    useEffect(() => {\n        // get all slider images against gid\n        setIsLoaded(false)\n        if (editedSliderComponent?.gid) {\n            ViewList({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: OREST_ENDPOINT.HCMITEMSLD,\n                token: authToken,\n                params: {\n                    query: `gid:${editedSliderComponent.gid}`,\n                    hotelrefno: Number(companyId),\n                },\n            }).then((r) => {\n\n                if (r.status === 200) {\n                    if (r?.data?.data?.length > 0) {\n                        setGappID(r.data.data[0].itemid)\n                        setCatId(r.data.data[0].catid)\n                        setIsActive(r.data.data[0].isactive)\n                        if (state.langCode === state.defaultLang || router.query.sliderOnly) {\n                            if (r.data.data[0].title || r.data.data[0].description) {\n                                setTitle(r.data.data[0].title)\n                                setDescription(r.data.data[0].description)\n                            }\n                            if (r.data.data[0].cta) {\n                                setIsCta(true)\n                                const matchLink = r.data.data[0].cta.match(/\\bhttps?:\\/\\/\\S+/gi)\n                                if (matchLink) {\n                                    const title = r.data.data[0].cta\n                                        .replace(`<a target=\"_blank\" href=\"`, '')\n                                        .replace(matchLink[0], '')\n                                        .replace('>', '')\n                                        .replace('</a>', '')\n                                        .trim()\n                                    setCtaLink(matchLink[0])\n                                    setCtaTitle(title)\n                                    setLocalState((prev) => ({ ...prev, ctaLinkType: 'external' }))\n                                } else {\n                                    const ctaGid = r.data.data[0].cta\n                                        .replace(`<a target=\"_blank\" href=\"`, '')\n                                        .replace('>', '')\n                                        .replace('</a>', '')\n                                        .replace('\"', '')\n                                        .trim()\n                                        ?.split(' ')[0]\n                                    const cta_title = r.data.data[0].cta\n                                        .replace(`<a target=\"_blank\" href=\"`, '')\n                                        .replace(ctaGid + '\"', '')\n                                        .replace('>', '')\n                                        .replace('</a>', '')\n                                        .trim()\n                                    setCtaLink(ctaGid)\n                                    setCtaTitle(cta_title)\n                                    setLocalState((prev) => ({ ...prev, ctaLinkType: 'internal' }))\n                                }\n                            }\n                        } else {\n                            if (otherLangSlider && 'slider' in otherLangSlider) {\n                                setTitle(otherLangSlider.slider.title)\n                                setDescription(otherLangSlider.slider.description)\n                                if (otherLangSlider.slider.cta) {\n                                    setIsCta(true)\n                                    const matchLink = otherLangSlider.slider.cta.match(/\\bhttps?:\\/\\/\\S+/gi)\n                                    if (matchLink) {\n                                        const title = otherLangSlider.slider.cta\n                                            .replace(`<a target=\"_blank\" href=\"`, '')\n                                            .replace(matchLink[0], '')\n                                            .replace('>', '')\n                                            .replace('</a>', '')\n                                            .trim()\n                                        setCtaLink(matchLink[0])\n                                        setCtaTitle(title)\n                                        setLocalState((prev) => ({ ...prev, ctaLinkType: 'external' }))\n                                    } else {\n                                        const ctaGid = otherLangSlider.slider.cta\n                                            .replace(`<a target=\"_blank\" href=\"`, '')\n                                            .replace('>', '')\n                                            .replace('</a>', '')\n                                            .replace('\"', '')\n                                            .trim()\n                                            ?.split(' ')[0]\n                                        const cta_title = otherLangSlider.slider.cta\n                                            .replace(`<a target=\"_blank\" href=\"`, '')\n                                            .replace(ctaGid + '\"', '')\n                                            .replace('>', '')\n                                            .replace('</a>', '')\n                                            .trim()\n                                        setCtaLink(ctaGid)\n                                        setCtaTitle(cta_title)\n                                        setLocalState((prev) => ({ ...prev, ctaLinkType: 'internal' }))\n                                    }\n                                }\n                            }\n                        }\n                        setSliderGID(r.data.data[0].gid);\n                        setSliderID(r.data.data[0].id);\n                        setLocalState({...localState, expiryDate: r?.data?.data[0]?.expiredt});\n                        ViewList({\n                            apiUrl: GENERAL_SETTINGS.OREST_URL,\n                            endpoint: OREST_ENDPOINT.HCMITEMIMG,\n                            token: authToken,\n                            params: {\n                                query: `sliderid:${r.data.data[0].id}`,\n                                sort: 'orderno',\n                                hotelrefno: Number(companyId),\n                            },\n                        }).then((res) => {\n                            setIsLoaded(true)\n                            if (res.status === 200) {\n                                let updatedImages = []\n                                res.data.data.map(async (data, index) => {\n                                    updatedImages.push(data)\n                                    if (state.langCode === state.defaultLang) {\n                                        if (data.cta || data.title || data.description) {\n                                            if (index === 0) {\n                                                setItemDesc(true)\n                                                setSelectedIndex(index)\n                                                setImageGID(data.gid)\n                                                ViewList({\n                                                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                                                    endpoint: OREST_ENDPOINT.HCMITEMIMG,\n                                                    token: authToken,\n                                                    params: {\n                                                        query: `gid:${data.gid}`,\n                                                        sort: 'orderno',\n                                                        hotelrefno: Number(companyId),\n                                                    },\n                                                }).then((res1) => {\n                                                    if (res1.status === 200) {\n                                                        if (res1.data && res1.data.data && res1.data.data.length > 0) {\n                                                            res1.data.data[0].title\n                                                                ? setTitle(res1.data.data[0].title)\n                                                                : setTitle('')\n                                                            res1.data.data[0].description\n                                                                ? setDescription(res1.data.data[0].description)\n                                                                : setDescription('')\n                                                            res1.data.data[0].cta\n                                                                ? setCta(res1.data.data[0].cta)\n                                                                : setCta('')\n                                                            if (res1.data.data[0].cta) {\n                                                                setIsCta(true)\n                                                                setCta(res1.data.data[0].cta)\n                                                                const matchs = res1.data.data[0].cta.match(\n                                                                    /\\bhttps?:\\/\\/\\S+/gi\n                                                                )\n                                                                if (matchs?.length > 0) {\n                                                                    const cta_title = res1.data.data[0].cta\n                                                                        .replace(`<a target=\"_blank\" href=\"`, '')\n                                                                        .replace(matchs[0], '')\n                                                                        .replace('>', '')\n                                                                        .replace('</a>', '')\n                                                                        .trim()\n                                                                    setCtaLink(matchs[0])\n                                                                    setCtaTitle(cta_title)\n                                                                    setLocalState((prev) => ({ ...prev, ctaLinkType: 'external' }))\n                                                                } else {\n                                                                    const ctaGid = res1.data.data[0].cta\n                                                                        .replace(`<a target=\"_blank\" href=\"`, '')\n                                                                        .replace('>', '')\n                                                                        .replace('</a>', '')\n                                                                        .replace('\"', '')\n                                                                        .trim()\n                                                                        ?.split(' ')[0]\n                                                                    const cta_title = res1.data.data[0].cta\n                                                                        .replace(`<a target=\"_blank\" href=\"`, '')\n                                                                        .replace(ctaGid + '\"', '')\n                                                                        .replace('>', '')\n                                                                        .replace('</a>', '')\n                                                                        .trim()\n                                                                    setCtaLink(ctaGid)\n                                                                    setCtaTitle(cta_title)\n                                                                    setLocalState((prev) => ({ ...prev, ctaLinkType: 'internal' }))\n                                                                }\n                                                            } else {\n                                                                setIsCta(false)\n                                                            }\n                                                        }\n                                                    } else {\n                                                        const retErr = isErrorMsg(res1)\n                                                        toast.error(retErr.errorMsg, {\n                                                            position: toast.POSITION.TOP_RIGHT,\n                                                        })\n                                                    }\n                                                })\n                                            }\n                                        }\n                                    } else {\n                                        if (\n                                            otherLangSlider &&\n                                            otherLangSlider.sliderImages &&\n                                            otherLangSlider.sliderImages.length > 0\n                                        ) {\n                                            setSelectedIndex(0)\n                                            setItemDesc(true)\n                                            setTitle(otherLangSlider.sliderImages[0].title)\n                                            setDescription(otherLangSlider.sliderImages[0].description)\n                                            if (otherLangSlider.sliderImages[0].cta) {\n                                                setIsCta(true)\n                                                setCta(otherLangSlider.sliderImages[0].cta)\n                                                const matchs = otherLangSlider.sliderImages[0].cta.match(\n                                                    /\\bhttps?:\\/\\/\\S+/gi\n                                                )\n                                                if (matchs?.length > 0) {\n                                                    const cta_title = otherLangSlider.sliderImages[0].cta\n                                                        .replace(`<a target=\"_blank\" href=\"`, '')\n                                                        .replace(matchs[0], '')\n                                                        .replace('>', '')\n                                                        .replace('</a>', '')\n                                                        .trim()\n                                                    setCtaLink(matchs[0])\n                                                    setCtaTitle(cta_title)\n                                                    setLocalState((prev) => ({ ...prev, ctaLinkType: 'external' }))\n                                                } else {\n                                                    const ctaGid = otherLangSlider.sliderImages[0].cta\n                                                        .replace(`<a target=\"_blank\" href=\"`, '')\n                                                        .replace('>', '')\n                                                        .replace('</a>', '')\n                                                        .replace('\"', '')\n                                                        .trim()\n                                                        ?.split(' ')[0]\n                                                    const cta_title = otherLangSlider.sliderImages[0].cta\n                                                        .replace(`<a target=\"_blank\" href=\"`, '')\n                                                        .replace(ctaGid + '\"', '')\n                                                        .replace('>', '')\n                                                        .replace('</a>', '')\n                                                        .trim()\n                                                    setCtaLink(ctaGid)\n                                                    setCtaTitle(cta_title)\n                                                    setLocalState((prev) => ({ ...prev, ctaLinkType: 'internal' }))\n                                                }\n                                            } else {\n                                                setIsCta(false)\n                                                setCtaTitle('')\n                                                setCtaLink('')\n                                            }\n                                        }\n                                    }\n                                })\n                                setSliderImages(updatedImages)\n                                setItemCount(updatedImages + 1)\n                            } else {\n                                console.log(res)\n                            }\n                        })\n                    } else {\n                        setIsLoaded(true)\n                    }\n                } else {\n                    setIsLoaded(true)\n                    const retErr = isErrorMsg(r)\n                    toast.error(retErr.errorMsg, {\n                        position: toast.POSITION.TOP_RIGHT,\n                    })\n                }\n            })\n        } else {\n            Insert({\n                // insert slider\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: OREST_ENDPOINT.HCMITEMSLD,\n                token: authToken,\n                data: {\n                    itemid: state.hcmItemId,\n                    hotelrefno: Number(companyId),\n                },\n            }).then((res) => {\n                if (res.status === 200 && res.data.data) {\n                    setIsLoaded(true)\n                    const updatedSliderComponent = { ...editedSliderComponent }\n                    updatedSliderComponent.gid = res.data.data.gid\n                    setEditedSliderComponent(updatedSliderComponent)\n                }\n            })\n        }\n    }, [editedSliderComponent])\n\n    useEffect(() => {\n        if (ctaTitle && ctaLink) {\n            setCta(`<a target=\"_blank\" href=\"${ctaLink}\" > ${ctaTitle} </a>`)\n        }\n    }, [ctaTitle, ctaLink])\n\n    const handleUpdate = () => {\n        // update slider/image descriptions\n        if (state.langCode === state.defaultLang) {\n            if (isItemDesc) {\n                if (isImageSelected) {\n                    setIsSaving(true)\n                    Patch({\n                        // update image\n                        apiUrl: GENERAL_SETTINGS.OREST_URL,\n                        endpoint: OREST_ENDPOINT.HCMITEMIMG,\n                        token: authToken,\n                        gid: imageGID,\n                        params: {\n                            hotelrefno: Number(companyId),\n                        },\n                        data: {\n                            title: title,\n                            description: description,\n                            cta: cta,\n                        },\n                    }).then((res) => {\n                        if (res.status === 200) {\n                            setIsSaving(false)\n                            toast.success(SAVED_SUCCESS, {\n                                position: toast.POSITION.TOP_RIGHT,\n                            })\n                        } else {\n                            console.log(res)\n                        }\n                    })\n                } else {\n                    handleResetState()\n                    toast.warn('Please Select Image', {\n                        position: toast.POSITION.TOP_RIGHT,\n                    })\n                }\n            } else {\n                setIsSaving(true)\n                Patch({\n                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                    endpoint: OREST_ENDPOINT.HCMITEMSLD,\n                    token: authToken,\n                    gid: sliderGID,\n                    params: {\n                        hotelrefno: Number(companyId),\n                    },\n                    data: {\n                        title: title,\n                        description: description,\n                        cta: cta,\n                    },\n                }).then((res) => {\n                    setIsSaving(false)\n                    if (res.status === 200) {\n                        toast.success(SAVED_SUCCESS, {\n                            position: toast.POSITION.TOP_RIGHT,\n                        })\n                    } else {\n                        console.log(res)\n                    }\n                })\n            }\n        } else {\n            const updateOtherLangSliderImages = [...otherLangSliderImages]\n            updateOtherLangSliderImages[selectedIndex] = {\n                title: title,\n                description: description,\n                cta: cta,\n            }\n            setOtherLangSliderImages(updateOtherLangSliderImages)\n            toast.success(SAVED_SUCCESS, {\n                position: toast.POSITION.TOP_RIGHT,\n            })\n        }\n    }\n\n    const handleDeleteImage = (imageGid) => {\n        // delete image against gid\n        setIsDeleting(true)\n        Delete({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.HCMITEMIMG,\n            token: authToken,\n            gid: imageGid,\n            params: {\n                hotelrefno: Number(companyId),\n            },\n        }).then(async (res) => {\n            setIsDeleting(false)\n            if (res.status === 200) {\n                const sldImages = await getSliderImages(GENERAL_SETTINGS.OREST_URL, authToken, companyId, sliderID)\n                sldImages.sort((a, b) => (a.orderno > b.orderno ? 1 : -1))\n                if (sldImages) {\n                    let updatedImages = []\n                    sldImages.map((data, index) => {\n                        data.orderno = index + 1\n                        updatedImages.push(data)\n                    })\n                    let requestPassed = true\n                    for (const sldImage of sldImages) {\n                        const updatedSliderImage = patchListSliderImage(\n                            GENERAL_SETTINGS.OREST_URL,\n                            authToken,\n                            companyId,\n                            { orderno: sldImage.orderno },\n                            { hotelrefno: Number(companyId) },\n                            sldImage.gid\n                        )\n                        updatedSliderImage ? (requestPassed = true) : (requestPassed = false)\n                    }\n                    if (requestPassed) {\n                        setSliderImages(updatedImages)\n                        setSelectedIndex(null)\n                        setItemCount(updatedImages.length + 1)\n                        toast.success(DELETE_SUCCESS, {\n                            position: toast.POSITION.TOP_RIGHT,\n                        })\n                    } else {\n                        toast.error('Something went wrong while deleting image. Please check network tab.', {\n                            position: toast.POSITION.TOP_RIGHT,\n                        })\n                    }\n                } else {\n                    toast.error('Something went wrong while deleting image. Please check network tab.', {\n                        position: toast.POSITION.TOP_RIGHT,\n                    })\n                }\n            } else {\n                const retErr = isErrorMsg(res)\n                toast.error(retErr.errorMsg, {\n                    position: toast.POSITION.TOP_RIGHT,\n                })\n                setIsDeleting(false)\n            }\n        })\n    }\n\n    const handleSelectedImage = (index, image) => {\n        if (isItemDesc) {\n            setSelectedIndex(index)\n            setImageSelected(true)\n            if (state.langCode === state.defaultLang) {\n                setImageGID(image.gid)\n                setItemDescRequest(true)\n                ViewList({\n                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                    endpoint: OREST_ENDPOINT.HCMITEMIMG,\n                    token: authToken,\n                    params: {\n                        query: `gid:${image.gid}`,\n                        sort: 'orderno',\n                        hotelrefno: Number(companyId),\n                    },\n                }).then((res) => {\n                    setItemDescRequest(false)\n                    if (res.status === 200) {\n                        if (res.data && res.data.data && res.data.data.length > 0) {\n                            res.data.data[0].title ? setTitle(res.data.data[0].title) : setTitle('')\n                            res.data.data[0].description\n                                ? setDescription(res.data.data[0].description)\n                                : setDescription('')\n                            res.data.data[0].cta ? setCta(res.data.data[0].cta) : setCta('')\n                            if (res.data.data[0].cta) {\n                                setIsCta(true)\n                                setCta(res.data.data[0].cta)\n                                const matchs = res.data.data[0].cta.match(/\\bhttps?:\\/\\/\\S+/gi)\n                                if (matchs?.length > 0) {\n                                    const cta_title = res.data.data[0].cta\n                                        .replace(`<a target=\"_blank\" href=\"`, '')\n                                        .replace(matchs[0], '')\n                                        .replace('>', '')\n                                        .replace('</a>', '')\n                                        .trim()\n                                    setCtaLink(matchs[0])\n                                    setCtaTitle(cta_title)\n                                    setLocalState((prev) => ({ ...prev, ctaLinkType: 'external' }))\n                                } else {\n                                    const ctaGid = res.data.data[0].cta\n                                        .replace(`<a target=\"_blank\" href=\"`, '')\n                                        .replace('>', '')\n                                        .replace('</a>', '')\n                                        .replace('\"', '')\n                                        .trim()\n                                        ?.split(' ')[0]\n                                    const cta_title = res.data.data[0].cta\n                                        .replace(`<a target=\"_blank\" href=\"`, '')\n                                        .replace(ctaGid + '\"', '')\n                                        .replace('>', '')\n                                        .replace('</a>', '')\n                                        .trim()\n                                    setCtaLink(ctaGid)\n                                    setCtaTitle(cta_title)\n                                    setLocalState((prev) => ({ ...prev, ctaLinkType: 'internal' }))\n                                }\n                            } else {\n                                setIsCta(false)\n                                setCtaTitle('')\n                                setCtaLink('')\n                            }\n                        }\n                    } else {\n                        const retErr = isErrorMsg(res)\n                        toast.error(retErr.errorMsg, {\n                            position: toast.POSITION.TOP_RIGHT,\n                        })\n                    }\n                })\n            } else {\n                if (otherLangSliderImages.length > 0) {\n                    setTitle(otherLangSliderImages[index].title)\n                    setDescription(otherLangSliderImages[index].description)\n                    if (otherLangSliderImages[index].cta) {\n                        setIsCta(true)\n                        setCta(otherLangSliderImages[index].cta)\n                        const matchs = otherLangSliderImages[index].cta.match(/\\bhttps?:\\/\\/\\S+/gi)\n                        if (matchs.length > 0) {\n                            const cta_title = otherLangSliderImages[index].cta\n                                .replace(`<a target=\"_blank\" href=\"`, '')\n                                .replace(matchs[0], '')\n                                .replace('>', '')\n                                .replace('</a>', '')\n                                .trim()\n                            setCtaLink(matchs[0])\n                            setCtaTitle(cta_title)\n                            setLocalState((prev) => ({ ...prev, ctaLinkType: 'external' }))\n                        } else {\n                            const ctaGid = otherLangSliderImages[index - 1].cta\n                                .replace(`<a target=\"_blank\" href=\"`, '')\n                                .replace('>', '')\n                                .replace('</a>', '')\n                                .replace('\"', '')\n                                .trim()\n                                ?.split(' ')[0]\n                            const cta_title = otherLangSliderImages[index - 1].cta\n                                .replace(`<a target=\"_blank\" href=\"`, '')\n                                .replace(ctaGid + '\"', '')\n                                .replace('>', '')\n                                .replace('</a>', '')\n                                .trim()\n                            setCtaLink(ctaGid)\n                            setCtaTitle(cta_title)\n                            setLocalState((prev) => ({ ...prev, ctaLinkType: 'internal' }))\n                        }\n                    } else {\n                        setIsCta(false)\n                        setCtaTitle('')\n                        setCtaLink('')\n                    }\n                } else {\n                    setTitle(otherLangSliderImages?.sliderImages[index - 1]?.title)\n                    setDescription(otherLangSliderImages?.sliderImages[index - 1]?.description)\n                    if (otherLangSliderImages?.sliderImages[0]?.cta) {\n                        setLocalState((prev) => ({ ...prev, isCta: true }))\n                        const matchs = otherLangSliderImages?.sliderImages[0].cta.match(/\\bhttps?:\\/\\/\\S+/gi)\n                        if (matchs?.length > 0) {\n                            const cta_title = otherLangSliderImages?.sliderImages[0].cta\n                                .replace(`<a target=\"_blank\" href=\"`, '')\n                                .replace(matchs[0], '')\n                                .replace('>', '')\n                                .replace('</a>', '')\n                                .trim()\n                            setCtaLink(matchs[0])\n                            setCtaTitle(cta_title)\n                            setLocalState((prev) => ({ ...prev, ctaLinkType: 'external' }))\n                        } else {\n                            const ctaGid = otherLangSliderImages?.sliderImages[0].cta\n                                .replace(`<a target=\"_blank\" href=\"`, '')\n                                .replace('>', '')\n                                .replace('</a>', '')\n                                .replace('\"', '')\n                                .trim()\n                                ?.split(' ')[0]\n                            const cta_title = otherLangSliderImages?.sliderImages[0].cta\n                                .replace(`<a target=\"_blank\" href=\"`, '')\n                                .replace(ctaGid + '\"', '')\n                                .replace('>', '')\n                                .replace('</a>', '')\n                                .trim()\n                            setCtaLink(ctaGid)\n                            setCtaTitle(cta_title)\n                            setLocalState((prev) => ({ ...prev, ctaLinkType: 'internal' }))\n                        }\n                    } else {\n                        setLocalState((prev) => ({ ...prev, ctaLink: '', ctaTitle: '', isCta: false }))\n                    }\n                }\n            }\n        }\n    }\n\n    const handleResetState = () => {\n        setCta('')\n        setCtaTitle('')\n        setCtaLink('')\n        setTitle('')\n        setDescription('')\n        setIsCta(false)\n        setImageSelected(false)\n        setSelectedIndex(null)\n    }\n\n    const handleItemDescription = () => {\n        setItemDesc(!isItemDesc)\n        if (isItemDesc) {\n            setItemDescRequest(true)\n            ViewList({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: OREST_ENDPOINT.HCMITEMSLD,\n                token: authToken,\n                params: {\n                    query: `gid:${sliderGID}`,\n                    sort: 'orderno',\n                    hotelrefno: Number(companyId),\n                },\n            }).then((res) => {\n                setItemDescRequest(false)\n                if (res?.status === 200 && res?.data?.data?.length > 0) {\n                    setTitle(res.data.data[0]?.title)\n                    setDescription(res.data.data[0]?.description)\n                    if (res.data.data[0].cta) {\n                        setIsCta(true)\n                        setCta(res.data.data[0].cta)\n                        const matchs = res.data.data[0].cta.match(/\\bhttps?:\\/\\/\\S+/gi)\n                        if (matchs.length > 0) {\n                            const cta_title = res.data.data[0].cta\n                                .replace(`<a target=\"_blank\" href=\"`, '')\n                                .replace(matchs[0], '')\n                                .replace('>', '')\n                                .replace('</a>', '')\n                                .trim()\n                            setCtaLink(matchs[0])\n                            setCtaTitle(cta_title)\n                        }\n                    } else {\n                        setIsCta(false)\n                        setCtaTitle('')\n                        setCtaLink('')\n                        setCta('')\n                    }\n                }\n            })\n            handleResetState()\n        } else {\n            setSelectedIndex(0)\n            setImageSelected(true)\n            if (state.langCode === state.defaultLang) {\n                setImageGID(sliderImages[0]?.gid)\n                setItemDescRequest(true)\n                ViewList({\n                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                    endpoint: OREST_ENDPOINT.HCMITEMIMG,\n                    token: authToken,\n                    params: {\n                        query: `gid:${sliderImages[0]?.gid}`,\n                        sort: 'orderno',\n                        hotelrefno: Number(companyId),\n                    },\n                }).then((res) => {\n                    setItemDescRequest(false)\n                    if (res.status === 200) {\n                        if (res.data && res.data.data && res.data.data.length > 0) {\n                            res.data.data[0].title ? setTitle(res.data.data[0].title) : setTitle('')\n                            res.data.data[0].description\n                                ? setDescription(res.data.data[0].description)\n                                : setDescription('')\n                            res.data.data[0].cta ? setCta(res.data.data[0].cta) : setCta('')\n                            if (res.data.data[0].cta) {\n                                setIsCta(true)\n                                setCta(res.data.data[0].cta)\n                                const matchs = res.data.data[0].cta.match(/\\bhttps?:\\/\\/\\S+/gi)\n                                if (matchs.length > 0) {\n                                    const cta_title = res.data.data[0].cta\n                                        .replace(`<a target=\"_blank\" href=\"`, '')\n                                        .replace(matchs[0], '')\n                                        .replace('>', '')\n                                        .replace('</a>', '')\n                                        .trim()\n                                    setCtaLink(matchs[0])\n                                    setCtaTitle(cta_title)\n                                }\n                            } else {\n                                setIsCta(false)\n                                setCtaTitle('')\n                                setCtaLink('')\n                            }\n                        }\n                    } else {\n                        const retErr = isErrorMsg(res)\n                        toast.error(retErr.errorMsg, {\n                            position: toast.POSITION.TOP_RIGHT,\n                        })\n                    }\n                })\n            } else {\n                if (otherLangSliderImages?.length > 0) {\n                    setTitle(otherLangSliderImages[0].title)\n                    setDescription(otherLangSliderImages[0].description)\n                    if (otherLangSliderImages[0].cta) {\n                        setIsCta(true)\n                        setCta(otherLangSliderImages[0].cta)\n                        const matchs = otherLangSliderImages[0].cta.match(/\\bhttps?:\\/\\/\\S+/gi)\n                        if (matchs.length > 0) {\n                            const cta_title = otherLangSliderImages[0].cta\n                                .replace(`<a target=\"_blank\" href=\"`, '')\n                                .replace(matchs[0], '')\n                                .replace('>', '')\n                                .replace('</a>', '')\n                                .trim()\n                            setCtaLink(matchs[0])\n                            setCtaTitle(cta_title)\n                        }\n                    } else {\n                        setIsCta(false)\n                        setCtaTitle('')\n                        setCtaLink('')\n                    }\n                }\n            }\n        }\n    }\n\n    const saveImage = (files) => {\n        setIsLoaded(false)\n        let orderNo = itemCount\n        let requests = files.map((file) => {\n            return new Promise((resolve) => {\n                asyncUpload(file, orderNo, resolve)\n                orderNo++\n            })\n        })\n        Promise.all(requests).then(async () => {\n            const sldImages = await getSliderImages(GENERAL_SETTINGS.OREST_URL, authToken, companyId, sliderID)\n            setIsLoaded(true)\n            if (sldImages) {\n                let updatedImages = []\n                sldImages.map((data) => {\n                    updatedImages.push(data)\n                })\n                setSliderImages(updatedImages)\n                setItemCount(updatedImages.length + 1)\n                toast.success(UPLOAD_SUCCESS, {\n                    position: toast.POSITION.TOP_RIGHT,\n                })\n                closeDialog()\n            } else {\n                toast.warn('Something went wrong while saving image. Please check network tab.', {\n                    position: toast.POSITION.TOP_RIGHT,\n                })\n            }\n        })\n    }\n\n    function asyncUpload(file, itemTreated, callback) {\n        if (router.query.sliderOnly) {\n            if (gappID && editedSliderComponent.gid) {\n                setTimeout(() => {\n                    ViewList({\n                        apiUrl: GENERAL_SETTINGS.OREST_URL,\n                        endpoint: OREST_ENDPOINT.HCMITEMSLD,\n                        token: authToken,\n                        params: {\n                            query: `gid:${editedSliderComponent.gid}`,\n                            hotelrefno: Number(companyId),\n                        },\n                    }).then((r) => {\n                        if (r.status === 200) {\n                            Insert({\n                                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                                endpoint: OREST_ENDPOINT.HCMITEMIMG,\n                                token: authToken,\n                                data: {\n                                    itemid: gappID,\n                                    sliderid: r.data.data[0].id,\n                                    imgtype: FIELDTYPE.IMG,\n                                    orderno: itemTreated,\n                                    hotelrefno: Number(companyId),\n                                    masterid: router.query.masterid,\n                                    imgquality: quality / 100,\n                                    imgscale: quality / 100,\n                                },\n                            }).then((r1) => {\n                                if (r1.status === 200) {\n                                    ImageUpload(\n                                        GENERAL_SETTINGS.OREST_URL,\n                                        OREST_ENDPOINT.RAFILE,\n                                        authToken,\n                                        r1.data.data.mid,\n                                        file\n                                    ).then((r) => {\n                                        if (r.status === 200) {\n                                            callback()\n                                        } else {\n                                            callback()\n                                        }\n                                    })\n                                } else {\n                                    callback()\n                                }\n                            })\n                        }\n                    })\n                }, 100)\n            }\n        } else {\n            if (state.hcmItemId && editedSliderComponent.gid) {\n                setTimeout(() => {\n                    ViewList({\n                        apiUrl: GENERAL_SETTINGS.OREST_URL,\n                        endpoint: OREST_ENDPOINT.HCMITEMSLD,\n                        token: authToken,\n                        params: {\n                            query: `gid:${editedSliderComponent.gid}`,\n                            hotelrefno: Number(companyId),\n                        },\n                    }).then((r) => {\n                        if (r.status === 200) {\n                            Insert({\n                                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                                endpoint: OREST_ENDPOINT.HCMITEMIMG,\n                                token: authToken,\n                                data: {\n                                    itemid: state.hcmItemId,\n                                    sliderid: r.data.data[0].id,\n                                    imgtype: FIELDTYPE.IMG,\n                                    orderno: itemTreated,\n                                    hotelrefno: Number(companyId),\n                                    imgquality: quality / 100,\n                                    imgscale: quality / 100,\n                                },\n                            }).then((r1) => {\n                                if (r1.status === 200) {\n                                    ImageUpload(\n                                        GENERAL_SETTINGS.OREST_URL,\n                                        OREST_ENDPOINT.RAFILE,\n                                        authToken,\n                                        r1.data.data.mid,\n                                        file\n                                    ).then((r) => {\n                                        if (r.status === 200) {\n                                            callback()\n                                        } else {\n                                            callback()\n                                        }\n                                    })\n                                } else {\n                                    callback()\n                                }\n                            })\n                        }\n                    })\n                }, 100)\n            }\n        }\n    }\n\n    const ImageUpload = (apiUrl, endPoint, token, masterID, file) => {\n        const url = apiUrl + '/' + endPoint + OREST_UPLOAD\n        let binaryData = []\n        binaryData.push(file)\n        let formData = new FormData()\n        formData.append('file', new Blob(binaryData, { type: file.type }), toSelfName(file.name));\n\n        const options = {\n            url: url,\n            method: 'post',\n            headers: {\n                Authorization: `Bearer ${token}`,\n                'Content-Type': 'multipart/form-data',\n            },\n            params: {\n                orsactive: true,\n                masterid: masterID,\n                hotelrefno: companyId,\n                quality: quality / 100,\n                scale: quality / 100,\n            },\n            data: formData,\n        }\n\n        return axios(options)\n            .then((response) => {\n                return response\n            })\n            .catch((error) => {\n                return error.response || { status: 0 }\n            })\n    }\n\n    const handleUpdateOrderNo = async (gid, orderNo, orderType) => {\n        // update order no of slider images\n\n        if (orderNo <= 0 || orderNo > sliderImages.length) {\n            setSelectedIndex(null)\n            setImageSelected(false)\n        } else {\n            const tmpSliderImages = [...sliderImages]\n            if (orderType === 'increment') {\n                const tmp = tmpSliderImages[orderNo - 1]\n                tmpSliderImages[orderNo - 1] = tmpSliderImages[orderNo - 2]\n                tmpSliderImages[orderNo - 2] = tmp\n            } else {\n                const tmp = tmpSliderImages[orderNo - 1]\n                tmpSliderImages[orderNo - 1] = tmpSliderImages[orderNo]\n                tmpSliderImages[orderNo] = tmp\n            }\n            tmpSliderImages.map((data, index) => {\n                data.orderno = index + 1\n            })\n            setIsDeleting(true)\n            let requestPassed = true\n            for (const sldImage of tmpSliderImages) {\n                const updatedSliderImage = patchListSliderImage(\n                    GENERAL_SETTINGS.OREST_URL,\n                    authToken,\n                    companyId,\n                    { orderno: sldImage.orderno },\n                    { hotelrefno: Number(companyId) },\n                    sldImage.gid\n                )\n                updatedSliderImage ? (requestPassed = true) : (requestPassed = false)\n            }\n            setIsDeleting(false)\n            if (requestPassed) {\n                setSliderImages(tmpSliderImages)\n                setItemCount(sliderImages.length + 1)\n                handleResetState()\n                toast.success('Order No Updated Successfully', {\n                    position: toast.POSITION.TOP_RIGHT,\n                })\n            } else {\n                toast.error('Something went wrong while updating order no. Please check network tab.', {\n                    position: toast.POSITION.TOP_RIGHT,\n                })\n            }\n        }\n    }\n\n    const handleImageQualityChange = (value) => {\n        if (value >= 10 && value <= 100 && value % 10 === 0) {\n            if (sliderImages.length) {\n                setIsLoaded(false)\n                const gids = sliderImages.map((image) => {\n                    return { gid: image.gid, imgquality: value / 100, imgscale: value / 100 }\n                })\n                UseOrest({\n                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                    endpoint: OREST_ENDPOINT.HCMITEMIMG + '/' + OREST_ENDPOINT.LIST + '/' + OREST_ENDPOINT.PATCH,\n                    token: authToken,\n                    method: REQUEST_METHOD_CONST.PATCH,\n                    data: gids,\n                    params: {\n                        hotelrefno: Number(companyId),\n                    },\n                }).then((res) => {\n                    if (res?.status === 200 && res?.data?.data) {\n                        setQuality(value)\n                        setIsLoaded(true)\n                    } else {\n                        const retErr = isErrorMsg(res)\n                        toast.error(retErr.errorMsg, {\n                            position: toast.POSITION.TOP_RIGHT,\n                        })\n                    }\n                })\n            } else {\n                setQuality(value)\n            }\n        }\n    }\n\n    const handleTextEditorValue = (value) => {\n        if (dialogType === 'title') {\n            setTitle(value)\n        }\n        if (dialogType === 'description') {\n            setDescription(value)\n        }\n        setLocalState((prev) => ({ ...prev, isTextEditorDialogOpen: false, dialogType: '', editorValue: '' }))\n    }\n\n    const handleCancelEditor = () => {\n        setLocalState((prev) => ({ ...prev, isTextEditorDialogOpen: false, dialogType: '', editorValue: '' }))\n    }\n\n    const handleDialogOpen = (type) => {\n        if (type === 'title') {\n            setLocalState((prev) => ({ ...prev, isTextEditorDialogOpen: true, dialogType: type, editorValue: title }))\n        }\n        if (type === 'description') {\n            setLocalState((prev) => ({\n                ...prev,\n                isTextEditorDialogOpen: true,\n                dialogType: type,\n                editorValue: description,\n            }))\n        }\n    }\n\n    const handleChangeDatePicker = (date) => {\n        const dateValue = moment(date).format(OREST_ENDPOINT.DATEFORMAT_LOCALE)\n        setLocalState({...localState, expiryDate: dateValue});\n        if (dateValue !== 'Invalid date') {\n            Patch({\n                // update slider\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: OREST_ENDPOINT.HCMITEMSLD,\n                token: authToken,\n                gid: sliderGID,\n                params: {\n                    hotelrefno: Number(companyId),\n                },\n                data: {\n                    expiredt: dateValue,\n                },\n            }).then((res) => {\n                if (res.status === 200) {\n                    toast.success(SAVED_SUCCESS, {\n                        position: toast.POSITION.TOP_RIGHT,\n                    })\n                } else {\n                    console.log(res)\n                }\n            })\n        }\n\n    }\n\n    if (!isLoaded) {\n        return <LoadingSpinner style={{ color: COLORS.secondary }} />\n    }\n\n    return (\n        <React.Fragment>\n            {\n                !router.query.sliderOnly && (\n                    <Grid container={true}>\n                        <Grid item xs={4}>\n                            <LocalizationProvider dateLibInstance={moment} dateAdapter={MomentAdapter}>\n                                <DatePicker\n                                    id=\"sliderExpiryDate\"\n                                    name=\"sliderExpiryDate\"\n                                    label={'Select Expiry'}\n                                    value={expiryDate}\n                                    inputFormat=\"DD/MM/YYYY\"\n                                    disablePast\n                                    onChange={handleChangeDatePicker}\n                                    renderInput={(props) => <TextField fullWidth\n                                                                       {...props}\n                                                                       variant={'filled'}\n                                                                       required={true}\n                                    />}\n                                />\n                            </LocalizationProvider>\n                        </Grid>\n                    </Grid>\n                )\n            }\n            <Grid container={true} justify={'flex-start'}>\n                <Grid item xs={router?.query?.sliderOnly ? 8 : 5}>\n                    <FormControlLabel\n                        disabled={state.langCode !== state.defaultLang && !router.query.sliderOnly}\n                        control={\n                            <Checkbox\n                                checked={isItemDesc}\n                                onChange={handleItemDescription}\n                                name=\"isitem\"\n                                color=\"primary\"\n                                disabled={sliderImages.length === 0}\n                            />\n                        }\n                        label=\"Items Description\"\n                    />\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                checked={isOptimizeImages}\n                                onChange={() => setOptimizeImages(!isOptimizeImages)}\n                                color=\"primary\"\n                            />\n                        }\n                        label=\"Optimize Images\"\n                    />\n                    {router?.query?.sliderOnly && (\n                        <>\n                            <FormControlLabel\n                                className={classes.labelFont}\n                                control={\n                                    <Checkbox\n                                        size={'small'}\n                                        checked={isActive}\n                                        onChange={() => {\n                                            setIsActive(!isActive)\n                                            Patch({\n                                                // update slider\n                                                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                                                endpoint: OREST_ENDPOINT.HCMITEMSLD,\n                                                token: authToken,\n                                                gid: sliderGID,\n                                                params: {\n                                                    hotelrefno: Number(companyId),\n                                                },\n                                                data: {\n                                                    isactive: !isActive,\n                                                },\n                                            }).then((res) => {\n                                                if (res.status !== 200) {\n                                                    const retErr = isErrorMsg(res)\n                                                    toast.error(retErr.errorMsg, {\n                                                        position: toast.POSITION.TOP_RIGHT,\n                                                    })\n                                                }\n                                            })\n                                        }}\n                                        color=\"primary\"\n                                    />\n                                }\n                                label=\"Active\"\n                            />\n                            <FormControl size={'small'}>\n                                <InputLabel htmlFor=\"age-native-simple\">Category</InputLabel>\n                                <Select\n                                    native\n                                    name=\"cat_id\"\n                                    variant={'outlined'}\n                                    value={catId}\n                                    onChange={(e) => {\n                                        setCatId(e.target.value)\n                                        Patch({\n                                            // update slider\n                                            apiUrl: GENERAL_SETTINGS.OREST_URL,\n                                            endpoint: OREST_ENDPOINT.HCMITEMSLD,\n                                            token: authToken,\n                                            gid: sliderGID,\n                                            params: {\n                                                hotelrefno: Number(companyId),\n                                            },\n                                            data: {\n                                                catid: e.target.value,\n                                            },\n                                        }).then((res) => {\n                                            if (res.status !== 200) {\n                                                const retErr = isErrorMsg(res)\n                                                toast.error(retErr.errorMsg, {\n                                                    position: toast.POSITION.TOP_RIGHT,\n                                                })\n                                            }\n                                        })\n                                    }}\n                                >\n                                    <option style={{ display: 'none' }} value=\"\"></option>\n                                    {categories.length > 0 &&\n                                        categories.map((cat) => {\n                                            return (\n                                                <option key={cat.id} value={cat.id}>\n                                                    {cat.description}\n                                                </option>\n                                            )\n                                        })}\n                                </Select>\n                            </FormControl>\n                        </>\n                    )}\n                </Grid>\n                {!router?.query?.sliderOnly && (\n                    <Grid item xs={5}>\n                        <Grid container spacing={1}>\n                            <Grid item xs={1} style={{ marginTop: 6, marginLeft: 16 }}>\n                                <Typography component={'span'} style={{ marginLeft: -8 }}>\n                                    Text\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={2} style={{ marginTop: 8 }}>\n                                <InputColor\n                                    onChange={(color) => setTextColor(color.hex)}\n                                    placement=\"right\"\n                                    initialValue={textColor}\n                                />\n                            </Grid>\n                            <Grid item xs={2} style={{ marginTop: 6 }}>\n                                <Typography component={'span'}>Button</Typography>\n                            </Grid>\n                            <Grid item xs={3} style={{ marginTop: 8 }}>\n                                <InputColor\n                                    onChange={(color) => setButtonColor(color.hex)}\n                                    placement=\"right\"\n                                    initialValue={buttonColor}\n                                />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                )}\n                <Grid item xs={router?.query?.sliderOnly ? 4 : 2}>\n                    {router?.query?.sliderOnly ? (\n                        <Grid container spacing={1}>\n                            <Grid item xs={1} style={{ marginTop: 6 }}>\n                                <Typography component={'span'} style={{ marginLeft: -8 }}>\n                                    Text\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={2} style={{ marginTop: 8 }}>\n                                <InputColor\n                                    onChange={(color) => setTextColor(color.hex)}\n                                    placement=\"right\"\n                                    initialValue={textColor}\n                                />\n                            </Grid>\n                            <Grid item xs={2} style={{ marginTop: 6 }}>\n                                <Typography component={'span'}>Button</Typography>\n                            </Grid>\n                            <Grid item xs={3} style={{ marginTop: 8 }}>\n                                <InputColor\n                                    onChange={(color) => setButtonColor(color.hex)}\n                                    placement=\"right\"\n                                    initialValue={buttonColor}\n                                />\n                            </Grid>\n                            <Grid item xs={4}>\n                                <Button\n                                    onClick={openDialog}\n                                    variant=\"contained\"\n                                    size=\"small\"\n                                    color=\"primary\"\n                                    aria-label=\"upload\"\n                                    className={classes.uploadButton}\n                                >\n                                    <CloudUploadIcon />\n                                    UPLOAD\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    ) : (\n                        <Button\n                            onClick={openDialog}\n                            variant=\"contained\"\n                            size=\"small\"\n                            color=\"primary\"\n                            aria-label=\"upload\"\n                            className={classes.uploadButton}\n                        >\n                            <CloudUploadIcon />\n                            UPLOAD\n                        </Button>\n                    )}\n                </Grid>\n            </Grid>\n            {isOptimizeImages && (\n                <Grid container>\n                    <Grid item xs={12}>\n                        <PercentageSlider\n                            marks={PERCENTAGE_VALUES}\n                            value={quality}\n                            onChange={(e, value) => handleImageQualityChange(value)}\n                        />\n                    </Grid>\n                </Grid>\n            )}\n            <Grid container={true} justify={'flex-start'} spacing={3} className={isSaving ? classes.disableEvent : ''}>\n                <Grid\n                    item\n                    xs={5}\n                    className={\n                        otherLangSlider && 'slider' in otherLangSlider && state.langCode !== state.defaultLang\n                            ? classes.disableEvent\n                            : ''\n                    }\n                >\n                    <Paper className={classes.paperBlock}>\n                        {sliderImages.length > 0 &&\n                            sliderImages.map((image, index) => {\n                                return (\n                                    <Grid\n                                        key={index}\n                                        container\n                                        justify={'center'}\n                                        className={isDeleting ? classes.disableEvent : ''}\n                                    >\n                                        <Grid item={true}>\n                                            <Card\n                                                className={classes.card}\n                                                style={{\n                                                    border:\n                                                        index === selectedIndex\n                                                            ? '2px solid red'\n                                                            : `1px solid ${COLORS?.secondary}`,\n                                                }}\n                                            >\n                                                <div\n                                                    style={{\n                                                        backgroundImage: `url(${\n                                                            GENERAL_SETTINGS.STATIC_URL + image.fileurl\n                                                        })`,\n                                                        height: '100%',\n                                                        width: '100%',\n                                                        backgroundSize: 'cover',\n                                                        borderRadius: 5,\n                                                    }}\n                                                    onMouseEnter={() => {\n                                                        setShowDeleteBtn(true)\n                                                        setHoverIndex(index)\n                                                    }}\n                                                    onMouseLeave={() => {\n                                                        setShowDeleteBtn(false)\n                                                        setHoverIndex(index)\n                                                    }}\n                                                    onClick={() => handleSelectedImage(index, image)}\n                                                >\n                                                    {showDeleteBtn && hoverIndex === index && (\n                                                        <IconButton\n                                                            disabled={\n                                                                state.langCode !== state.defaultLang &&\n                                                                !router.query.sliderOnly\n                                                            }\n                                                            component=\"span\"\n                                                            color={'primary'}\n                                                            className={\n                                                                index === sliderImages.length - 1\n                                                                    ? classes.disableEvent\n                                                                    : ''\n                                                            }\n                                                            onClick={() =>\n                                                                handleUpdateOrderNo(\n                                                                    image.gid,\n                                                                    image.orderno + 1,\n                                                                    'increment'\n                                                                )\n                                                            }\n                                                        >\n                                                            <AddCircleIcon />\n                                                        </IconButton>\n                                                    )}\n                                                    {showDeleteBtn && hoverIndex === index && (\n                                                        <Typography component=\"span\" color={'primary'}>\n                                                            {image.orderno}\n                                                        </Typography>\n                                                    )}\n                                                    {showDeleteBtn && hoverIndex === index && (\n                                                        <IconButton\n                                                            disabled={\n                                                                state.langCode !== state.defaultLang &&\n                                                                !router.query.sliderOnly\n                                                            }\n                                                            component=\"span\"\n                                                            color={'primary'}\n                                                            className={index === 0 ? classes.disableEvent : ''}\n                                                            onClick={() =>\n                                                                handleUpdateOrderNo(\n                                                                    image.gid,\n                                                                    image.orderno - 1,\n                                                                    'decrement'\n                                                                )\n                                                            }\n                                                        >\n                                                            <RemoveCircleIcon />\n                                                        </IconButton>\n                                                    )}\n                                                    {showDeleteBtn && hoverIndex === index && (\n                                                        <IconButton\n                                                            disabled={\n                                                                state.langCode !== state.defaultLang &&\n                                                                !router.query.sliderOnly\n                                                            }\n                                                            onClick={() => handleDeleteImage(image.gid)}\n                                                            aria-label=\"upload picture\"\n                                                            component=\"span\"\n                                                            style={{ float: 'right' }}\n                                                            color={'primary'}\n                                                        >\n                                                            <CancelIcon />\n                                                        </IconButton>\n                                                    )}\n                                                </div>\n                                            </Card>\n                                        </Grid>\n                                    </Grid>\n                                )\n                            })}\n                    </Paper>\n                </Grid>\n                <Grid item xs={7} className={itemDescRequest ? classes.disableEvent : ''}>\n                    <Paper className={classes.paperBlock}>\n                        <Container>\n                            <Grid container justify={'flex-start'}>\n                                <Grid item xs={3}>\n                                    <Typography component={'h6'} variant={'h6'} className={classes.text}>\n                                        Title\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={9}>\n                                    <IconButton\n                                        aria-label=\"Edit Title\"\n                                        color=\"primary\"\n                                        onClick={() => handleDialogOpen('title')}\n                                        style={{ float: 'right' }}\n                                    >\n                                        <BorderColorSharpIcon color=\"primary\" />\n                                    </IconButton>\n                                </Grid>\n                            </Grid>\n                        </Container>\n                        <Container>\n                            <Grid container justify={'flex-start'}>\n                                <Grid item xs={3}>\n                                    <Typography component={'h6'} variant={'h6'} className={classes.text}>\n                                        Description\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={9}>\n                                    <IconButton\n                                        aria-label=\"Edit Title\"\n                                        color=\"primary\"\n                                        onClick={() => handleDialogOpen('description')}\n                                        style={{ float: 'right' }}\n                                    >\n                                        <BorderColorSharpIcon color=\"primary\" />\n                                    </IconButton>\n                                </Grid>\n                            </Grid>\n                        </Container>\n                        <Container>\n                            <Grid container justify={'flex-start'}>\n                                <Grid item xs={11}>\n                                    <Typography component={'h6'} variant={'h6'} className={classes.text}>\n                                        Do you want to add button for slider ?\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={1}>\n                                    <Typography component={'div'} style={{ marginTop: 16 }}>\n                                        <Switch\n                                            size={'small'}\n                                            checked={isCta}\n                                            onChange={() => {\n                                                setIsCta(!isCta)\n                                                setCtaTitle('')\n                                                setCtaLink('')\n                                                setCta('')\n                                            }}\n                                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                                            color={'primary'}\n                                        />\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                        </Container>\n                        {isCta && (\n                            <Container>\n                                <Grid container>\n                                    <FormControl component=\"fieldset\" disabled={state?.langCode !== state?.defaultLang}>\n                                        <RadioGroup\n                                            aria-label=\"link-type\"\n                                            row\n                                            value={ctaLinkType}\n                                            onChange={(e) => {\n                                                const { value } = e?.target\n                                                setLocalState((prev) => ({\n                                                    ...prev,\n                                                    ctaLinkType: value,\n                                                    ctaLink: value === 'internal' ? pageData[0]?.code : '',\n                                                }))\n                                            }}\n                                        >\n                                            <FormControlLabel\n                                                value=\"external\"\n                                                control={<Radio color={'primary'} size={'small'} />}\n                                                label=\"External Link\"\n                                            />\n                                            <FormControlLabel\n                                                value=\"internal\"\n                                                control={<Radio color={'primary'} size={'small'} />}\n                                                label=\"Internal Link\"\n                                            />\n                                        </RadioGroup>\n                                    </FormControl>\n                                </Grid>\n                                <Grid container justify={'flex-start'} spacing={1}>\n                                    <Grid item xs={6}>\n                                        <TextField\n                                            size={'small'}\n                                            id=\"cta-title\"\n                                            variant={'outlined'}\n                                            label={'Title'}\n                                            fullWidth\n                                            value={ctaTitle}\n                                            onChange={(e) => setCtaTitle(e.target.value)}\n                                            style={{ marginTop: 8 }}\n                                            helperText={\n                                                ctaTitle && (\n                                                    <Typography\n                                                        variant=\"caption\"\n                                                        className={classes.alignText}\n                                                        display=\"block\"\n                                                    >\n                                                        {`${ctaTitle?.length} < 100`}\n                                                    </Typography>\n                                                )\n                                            }\n                                            inputProps={{ maxLength: 99 }}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        {ctaLinkType === 'external' && (\n                                            <TextField\n                                                size={'small'}\n                                                id=\"cta-link\"\n                                                variant={'outlined'}\n                                                label={'Link'}\n                                                fullWidth\n                                                value={ctaLink}\n                                                error={ctaLink ? !validator.isURL(ctaLink) : false}\n                                                onChange={(e) => setCtaLink(e.target.value)}\n                                                style={{ marginTop: 8 }}\n                                                disabled={state.langCode !== state.defaultLang}\n                                                helperText={\n                                                    ctaLink && (\n                                                        <Typography\n                                                            variant=\"caption\"\n                                                            className={classes.alignText}\n                                                            display=\"block\"\n                                                        >\n                                                            {`${ctaLink?.length} < 100`}\n                                                        </Typography>\n                                                    )\n                                                }\n                                                inputProps={{ maxLength: 99 }}\n                                            />\n                                        )}\n                                        {ctaLinkType === 'internal' && (\n                                            <FormControl\n                                                variant=\"outlined\"\n                                                size={'small'}\n                                                style={{ marginTop: 8 }}\n                                                fullWidth\n                                                disabled={state?.langCode !== state?.defaultLang}\n                                            >\n                                                <Select\n                                                    value={ctaLink}\n                                                    onChange={(e) => {\n                                                        const { value } = e?.target\n                                                        setCtaLink(value);\n                                                    }}\n                                                    label=\"Web Pages\"\n                                                >\n                                                    {pageData.map((option, index) => {\n                                                        return (\n                                                            <MenuItem value={option.code} key={index}>\n                                                                {' '}\n                                                                {option.code}{' '}\n                                                            </MenuItem>\n                                                        )\n                                                    })}\n                                                </Select>\n                                            </FormControl>\n                                        )}\n                                    </Grid>\n                                </Grid>\n                            </Container>\n                        )}\n                        <Divider style={{ marginTop: 8 }} />\n                        <Button\n                            onClick={handleUpdate}\n                            variant=\"contained\"\n                            size=\"small\"\n                            color=\"primary\"\n                            aria-label=\"add\"\n                            className={classes.submit}\n                        >\n                            SUBMIT\n                        </Button>\n                    </Paper>\n                </Grid>\n            </Grid>\n            <DropzoneDialog\n                open={isDialogOpen}\n                onSave={saveImage}\n                acceptedFiles={['image/jpeg', 'image/png', 'image/bmp']}\n                showPreviews={true}\n                maxFileSize={5000000}\n                onClose={closeDialog}\n                filesLimit={5}\n            />\n            {isTextEditorDialogOpen && (\n                <TextEditor\n                    handleSaveTextEditor={handleTextEditorValue}\n                    handleCancelTextEditor={handleCancelEditor}\n                    data={editorValue}\n                />\n            )}\n        </React.Fragment>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        state: state.formReducer.pageBuilder,\n    }\n}\n\nexport default connect(mapStateToProps)(EditSlider)\n"]},"metadata":{},"sourceType":"module"}