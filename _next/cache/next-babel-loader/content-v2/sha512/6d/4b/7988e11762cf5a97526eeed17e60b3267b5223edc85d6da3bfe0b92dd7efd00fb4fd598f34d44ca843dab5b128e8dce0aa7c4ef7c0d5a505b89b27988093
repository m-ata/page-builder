{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/components/website/pages/EditPage.js\";\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect, useState } from 'react'; //material imports\n\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from '@material-ui/core/styles'; //redux imports\n\nimport { connect } from 'react-redux';\nimport { setToState, updateState } from \"../../../../../../state/actions\"; //server related imports\n\nimport { ViewList } from \"@webcms/orest\";\nimport { OREST_ENDPOINT } from \"../../../../../../model/orest/constants\";\nimport WebCmsGlobal from \"../../../../../webcms-global\";\nimport { useRouter } from \"next/router\";\nimport { COLORS } from \"../../../constants\";\nimport PageItemList from \"./PageItemList\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nconst useStyles = makeStyles(theme => ({\n  pageBlock: {\n    border: `2px solid ${COLORS === null || COLORS === void 0 ? void 0 : COLORS.secondary}`,\n    height: 200,\n    width: 200,\n    overflow: 'auto',\n    marginLeft: theme.spacing(1),\n    marginTop: theme.spacing(1),\n    cursor: \"pointer\"\n  },\n  pageContainer: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    height: 500,\n    overflow: 'auto'\n  },\n  actionButton: {\n    marginLeft: theme.spacing(1),\n    borderRadius: 20\n  },\n  codeText: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nconst EditPage = props => {\n  const {\n    onEditPage,\n    webPages,\n    resetRender,\n    dialogTitle,\n    isDialogOpen\n  } = props;\n  const classes = useStyles();\n  const {\n    0: pages,\n    1: setPages\n  } = useState([]);\n  const {\n    0: selectedIndexes,\n    1: setSelectedIndexes\n  } = useState([]);\n  const {\n    0: selectedPages,\n    1: setSelectedPages\n  } = useState(webPages);\n  const {\n    0: openModal,\n    1: setOpenModal\n  } = useState(isDialogOpen);\n  const {\n    GENERAL_SETTINGS,\n    token\n  } = useContext(WebCmsGlobal);\n  const router = useRouter();\n  const companyId = router.query.companyID;\n  const authToken = token || router.query.authToken;\n  useEffect(() => {\n    //getting web page from rafile\n    ViewList({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.RAFILE,\n      token: authToken,\n      params: {\n        hotelrefno: Number(companyId),\n        query: `filetype:WEBPAGE`\n      }\n    }).then(res => {\n      if (res.status === 200 && res.data && res.data.data) {\n        setPages(res.data.data);\n        let updatedIndexes = [];\n        webPages.map(page => {\n          const pageIndex = res.data.data.find(x => x.gid === page.gid);\n\n          if (pageIndex || pageIndex === 0) {\n            updatedIndexes.push(res.data.data.indexOf(pageIndex));\n          }\n        });\n        setSelectedIndexes(updatedIndexes);\n      }\n    });\n  }, []);\n\n  const handleSelectedPage = (index, page) => {\n    const updatedIndexes = [...selectedIndexes];\n    const updatedPages = [...selectedPages];\n    const indexExist = selectedIndexes.find(x => x === index);\n\n    if (!indexExist && indexExist !== 0) {\n      updatedIndexes.push(index);\n      updatedPages.push({\n        gid: page === null || page === void 0 ? void 0 : page.gid,\n        code: [page === null || page === void 0 ? void 0 : page.code]\n      });\n    } else {\n      const i = selectedIndexes.indexOf(indexExist);\n      updatedIndexes.splice(i, 1);\n      updatedPages.splice(i, 1);\n    }\n\n    setSelectedIndexes(updatedIndexes);\n    setSelectedPages(updatedPages);\n  };\n\n  const handleCancel = () => {\n    setOpenModal(false);\n    resetRender();\n  };\n\n  const handleApply = () => {\n    onEditPage(selectedPages);\n    setOpenModal(false);\n    resetRender();\n  };\n\n  return __jsx(Dialog, {\n    disableBackdropClick: true,\n    disableEnforceFocus: true,\n    fullWidth: true,\n    maxWidth: \"md\",\n    open: openModal,\n    onClose: handleCancel,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, __jsx(DialogTitle, {\n    id: \"form-dialog-title\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, \" \", dialogTitle, __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  })), __jsx(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    container: true,\n    className: classes.pageContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, pages.length > 0 && pages.map((page, index) => {\n    return __jsx(Grid, {\n      item: true,\n      key: `page-${index}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 33\n      }\n    }, __jsx(Paper, {\n      className: classes.pageBlock,\n      onClick: () => handleSelectedPage(index, page),\n      style: {\n        border: index === selectedIndexes.find(x => x === index) ? `2px solid red` : `2px solid ${COLORS === null || COLORS === void 0 ? void 0 : COLORS.secondary}`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 37\n      }\n    }, __jsx(PageItemList, {\n      pageData: JSON.parse(Buffer.from(page.filedata, 'base64').toString('utf-8')),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 41\n      }\n    })), __jsx(Typography, {\n      component: 'div',\n      className: classes.codeText,\n      style: {\n        color: index === selectedIndexes.find(x => x === index) ? `red` : `${COLORS === null || COLORS === void 0 ? void 0 : COLORS.secondary}`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 37\n      }\n    }, \" \", page.code, \" \"));\n  })), __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }\n  })), __jsx(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    className: classes.actionButton,\n    onClick: handleCancel,\n    variant: \"contained\",\n    size: \"small\",\n    \"aria-label\": \"add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }, \"Cancel\"), __jsx(Button, {\n    onClick: handleApply,\n    className: classes.actionButton,\n    variant: \"contained\",\n    size: \"small\",\n    \"aria-label\": \"add\",\n    color: \"primary\",\n    disabled: selectedPages.length === 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }\n  }, \"Apply\")));\n};\n\nconst mapStateToProps = state => {\n  return {\n    state: state.formReducer.pageBuilder\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value)),\n  updateState: (stateType, stateName, value) => dispatch(updateState(stateType, stateName, value))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditPage);","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/components/website/pages/EditPage.js"],"names":["React","useContext","useEffect","useState","Paper","makeStyles","connect","setToState","updateState","ViewList","OREST_ENDPOINT","WebCmsGlobal","useRouter","COLORS","PageItemList","DialogTitle","DialogContent","DialogActions","Button","Dialog","Grid","Typography","useStyles","theme","pageBlock","border","secondary","height","width","overflow","marginLeft","spacing","marginTop","cursor","pageContainer","display","flexWrap","actionButton","borderRadius","codeText","EditPage","props","onEditPage","webPages","resetRender","dialogTitle","isDialogOpen","classes","pages","setPages","selectedIndexes","setSelectedIndexes","selectedPages","setSelectedPages","openModal","setOpenModal","GENERAL_SETTINGS","token","router","companyId","query","companyID","authToken","apiUrl","OREST_URL","endpoint","RAFILE","params","hotelrefno","Number","then","res","status","data","updatedIndexes","map","page","pageIndex","find","x","gid","push","indexOf","handleSelectedPage","index","updatedPages","indexExist","code","i","splice","handleCancel","handleApply","length","JSON","parse","Buffer","from","filedata","toString","color","mapStateToProps","state","formReducer","pageBuilder","mapDispatchToProps","dispatch","stateType","stateName","value"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\n//material imports\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from '@material-ui/core/styles'\n\n//redux imports\nimport { connect } from 'react-redux';\nimport {setToState, updateState} from \"../../../../../../state/actions\";\n\n//server related imports\nimport { ViewList} from \"@webcms/orest\";\nimport {OREST_ENDPOINT} from \"../../../../../../model/orest/constants\";\nimport WebCmsGlobal from \"../../../../../webcms-global\";\nimport {useRouter} from \"next/router\";\n\nimport {COLORS} from \"../../../constants\";\nimport PageItemList from \"./PageItemList\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles(theme => ({\n\n    pageBlock: {\n        border: `2px solid ${COLORS?.secondary}`,\n        height: 200,\n        width: 200,\n        overflow: 'auto',\n        marginLeft: theme.spacing(1),\n        marginTop: theme.spacing(1),\n        cursor: \"pointer\"\n    },\n    pageContainer: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        height: 500,\n        overflow: 'auto',\n    },\n    actionButton: {\n        marginLeft: theme.spacing(1),\n        borderRadius: 20,\n    },\n    codeText: {\n        marginTop: theme.spacing(1),\n        marginLeft: theme.spacing(2),\n    }\n}));\n\nconst EditPage = (props) => {\n\n    const {\n        onEditPage,\n        webPages,\n        resetRender,\n        dialogTitle,\n        isDialogOpen\n    } = props;\n\n    const classes = useStyles();\n\n    const [pages, setPages] = useState([]);\n    const [selectedIndexes, setSelectedIndexes] = useState([]);\n    const [selectedPages, setSelectedPages] = useState(webPages);\n    const [openModal, setOpenModal] = useState(isDialogOpen);\n\n    const {GENERAL_SETTINGS, token} = useContext(WebCmsGlobal);\n    const router = useRouter();\n    const companyId = router.query.companyID;\n    const authToken = token || router.query.authToken;\n\n    useEffect(() => {\n        //getting web page from rafile\n        ViewList({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.RAFILE,\n            token: authToken,\n            params: {\n                hotelrefno: Number(companyId),\n                query: `filetype:WEBPAGE`,\n            }\n        }).then(res => {\n            if (res.status === 200 && res.data && res.data.data) {\n                setPages(res.data.data);\n                let updatedIndexes = [];\n                webPages.map(page => {\n                    const pageIndex = res.data.data.find(x => x.gid === page.gid);\n                    if (pageIndex || pageIndex === 0) {\n                        updatedIndexes.push(res.data.data.indexOf(pageIndex));\n                    }\n                });\n                setSelectedIndexes(updatedIndexes)\n            }\n        })\n    }, []);\n\n    const handleSelectedPage = (index, page) => {\n        const updatedIndexes = [...selectedIndexes];\n        const updatedPages = [...selectedPages];\n        const indexExist = selectedIndexes.find(x => x=== index);\n        if (!indexExist && indexExist !==0) {\n            updatedIndexes.push(index);\n            updatedPages.push({\n                gid: page?.gid,\n                code: [page?.code]\n            })\n        } else {\n            const i = selectedIndexes.indexOf(indexExist);\n            updatedIndexes.splice(i, 1);\n            updatedPages.splice(i, 1);\n        }\n        setSelectedIndexes(updatedIndexes);\n        setSelectedPages(updatedPages);\n    }\n\n    const handleCancel = () => {\n        setOpenModal(false);\n        resetRender();\n    }\n\n    const handleApply = () => {\n        onEditPage(selectedPages);\n        setOpenModal(false);\n        resetRender();\n    }\n\n    return (\n        <Dialog disableBackdropClick disableEnforceFocus fullWidth={true} maxWidth=\"md\" open={openModal}\n                onClose={handleCancel} aria-labelledby=\"form-dialog-title\">\n            <DialogTitle id=\"form-dialog-title\" color=\"secondary\"> {dialogTitle}\n                <hr/>\n            </DialogTitle>\n            <DialogContent>\n                <Grid container={true} className={classes.pageContainer}>\n                    {\n                        pages.length > 0 && pages.map((page, index) => {\n                            return (\n                                <Grid item key={`page-${index}`}>\n                                    <Paper\n                                        className={classes.pageBlock}\n                                        onClick={() => handleSelectedPage(index, page)}\n                                        style={{border: index === selectedIndexes.find(x => x=== index) ? `2px solid red` :\n                                                `2px solid ${COLORS?.secondary}`}}\n                                    >\n                                        <PageItemList\n                                            pageData={JSON.parse(Buffer.from(page.filedata, 'base64').toString('utf-8'))} />\n                                    </Paper>\n                                    <Typography\n                                        component={'div'}\n                                        className={classes.codeText}\n                                        style={{\n                                            color: index === selectedIndexes.find(x => x=== index) ? `red` :\n                                                `${COLORS?.secondary}`\n                                        }}\n                                    > {page.code} </Typography>\n                                </Grid>\n                            )\n                        })\n                    }\n                </Grid>\n                <hr />\n            </DialogContent>\n            <DialogActions>\n                <Button\n                    className={classes.actionButton}\n                    onClick={handleCancel}\n                    variant=\"contained\"\n                    size=\"small\"\n                    aria-label=\"add\"\n                >\n                    Cancel\n                </Button>\n                <Button\n                    onClick={handleApply}\n                    className={classes.actionButton}\n                    variant=\"contained\"\n                    size=\"small\"\n                    aria-label=\"add\"\n                    color=\"primary\"\n                    disabled={selectedPages.length === 0}\n                >\n                    Apply\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        state: state.formReducer.pageBuilder\n    }\n};\n\nconst mapDispatchToProps = dispatch => ({\n    setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value)),\n    updateState: (stateType, stateName, value) => dispatch(updateState(stateType, stateName, value)),\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(EditPage)\n"]},"metadata":{},"sourceType":"module"}