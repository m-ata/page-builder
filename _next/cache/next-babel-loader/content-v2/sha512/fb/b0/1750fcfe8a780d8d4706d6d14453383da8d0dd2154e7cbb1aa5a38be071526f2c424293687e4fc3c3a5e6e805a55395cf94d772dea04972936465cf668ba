{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/components/page/sections/image/UploadImage.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { ViewList, Insert, Delete, Patch } from '@webcms/orest';\nimport WebCmsGlobal from 'components/webcms-global';\nimport { useRouter } from 'next/router';\nimport { connect } from 'react-redux';\nimport { FIELDTYPE, isErrorMsg, OREST_ENDPOINT, OREST_UPLOAD } from '../../../../../../../model/orest/constants';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport Fab from '@material-ui/core/Fab';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { DropzoneDialog } from 'material-ui-dropzone';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport LoadingSpinner from '../../../../../../LoadingSpinner';\nimport { COLORS, UPLOAD_SUCCESS, DELETE_SUCCESS, SAVED_SUCCESS, PERCENTAGE_VALUES } from '../../../../constants';\nimport Typography from '@material-ui/core/Typography';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport IconButton from '@material-ui/core/IconButton';\nimport Divider from '@material-ui/core/Divider';\nimport validator from 'validator';\nimport { PercentageSlider } from '../../../../../../../model/slider';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { FormControlLabel } from '@material-ui/core';\nimport InputColor from 'react-input-color';\nimport TextEditor from '../text-editor';\nimport BorderColorSharpIcon from '@material-ui/icons/BorderColorSharp';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    card: {\n      maxWidth: 345\n    },\n    media: {\n      height: 0,\n      paddingTop: '56.25%'\n    }\n  },\n  submit: {\n    marginRight: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    borderRadius: 20,\n    marginTop: theme.spacing(1),\n    float: 'right'\n  },\n  fabBtn: {\n    marginBottom: theme.spacing(1),\n    marginLeft: theme.spacing(1)\n  },\n  disableEvent: {\n    pointerEvents: 'none',\n    opacity: 0.5\n  },\n  paperBlock: {\n    height: 250,\n    border: `2px solid ${COLORS === null || COLORS === void 0 ? void 0 : COLORS.secondary}`,\n    overflow: 'auto',\n    position: 'relative'\n  },\n  card: {\n    height: 245,\n    width: 392,\n    cursor: 'pointer'\n  },\n  heading: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    fontWeight: 'bold',\n    fontSize: 15\n  },\n  textField: {\n    paddingRight: theme.spacing(1)\n  },\n  alignText: {\n    textAlign: 'right',\n    color: 'red'\n  }\n}));\n\nconst UploadImage = props => {\n  var _state$assets, _state$assets$colors, _state$assets$colors$;\n\n  const {\n    state,\n    component,\n    handleSectionComponent,\n    handleNextDisable\n  } = props;\n  const router = useRouter();\n  const companyId = router.query.companyID;\n  const {\n    GENERAL_SETTINGS,\n    token\n  } = useContext(WebCmsGlobal);\n  const authToken = token || router.query.authToken; //local state\n\n  const {\n    0: isDialogOpen,\n    1: setDialogOpen\n  } = useState(false);\n  const {\n    0: images,\n    1: setImages\n  } = useState([]);\n  const {\n    0: itemCount,\n    1: setItemCount\n  } = useState(1);\n  const {\n    0: imageTitle,\n    1: setImageTitle\n  } = useState('');\n  const {\n    0: imageDesc,\n    1: setImageDesc\n  } = useState('');\n  const {\n    0: isSaving,\n    1: setIsSaving\n  } = useState(false);\n  const {\n    0: isDeleting,\n    1: setIsDeleting\n  } = useState(false);\n  const {\n    0: showDeleteBtn,\n    1: setShowDeleteBtn\n  } = useState(false);\n  const {\n    0: cta,\n    1: setCta\n  } = useState('');\n  const {\n    0: isOptimizeImage,\n    1: setOptimizeImage\n  } = useState(false);\n  const {\n    0: quality,\n    1: setQuality\n  } = useState(100);\n  const {\n    0: isImageQualityChange,\n    1: setImageQualityChange\n  } = useState(false);\n  const {\n    0: textColor,\n    1: setTextColor\n  } = useState(state !== null && state !== void 0 && (_state$assets = state.assets) !== null && _state$assets !== void 0 && (_state$assets$colors = _state$assets.colors) !== null && _state$assets$colors !== void 0 && (_state$assets$colors$ = _state$assets$colors.slider) !== null && _state$assets$colors$ !== void 0 && _state$assets$colors$.main ? state.assets.colors.slider.main : '#fff');\n  const {\n    0: localState,\n    1: setLocalState\n  } = useState({\n    isTextEditorDialogOpen: false,\n    editorValue: '',\n    dialogType: ''\n  });\n  const {\n    isTextEditorDialogOpen,\n    editorValue,\n    dialogType\n  } = localState;\n  let imageID = '';\n  const classes = useStyles();\n  useEffect(() => {\n    if (images.length === 0) {\n      handleNextDisable(true);\n    } else {\n      handleNextDisable(false);\n    }\n  }, [images]);\n  useEffect(() => {\n    if (component !== null && component !== void 0 && component.gid) {\n      ViewList({\n        apiUrl: GENERAL_SETTINGS.OREST_URL,\n        endpoint: OREST_ENDPOINT.HCMITEMIMG,\n        token: authToken,\n        params: {\n          query: `gid:${component.gid}`,\n          sort: 'orderno',\n          hotelrefno: Number(companyId)\n        }\n      }).then(res => {\n        if (res.status === 200) {\n          var _res$data, _res$data$data;\n\n          if ((res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : (_res$data$data = _res$data.data) === null || _res$data$data === void 0 ? void 0 : _res$data$data.length) > 0) {\n            var _res$data$data$, _res$data$data$2, _res$data$data$3, _res$data$data$4, _res$data$data$5, _res$data$data$6;\n\n            let updatedImages = [];\n            res.data.data.map(data => {\n              updatedImages.push(data);\n            });\n            setImages(updatedImages);\n            ((_res$data$data$ = res.data.data[0]) === null || _res$data$data$ === void 0 ? void 0 : _res$data$data$.title) && setImageTitle((_res$data$data$2 = res.data.data[0]) === null || _res$data$data$2 === void 0 ? void 0 : _res$data$data$2.title);\n            ((_res$data$data$3 = res.data.data[0]) === null || _res$data$data$3 === void 0 ? void 0 : _res$data$data$3.description) && setImageDesc((_res$data$data$4 = res.data.data[0]) === null || _res$data$data$4 === void 0 ? void 0 : _res$data$data$4.description);\n            ((_res$data$data$5 = res.data.data[0]) === null || _res$data$data$5 === void 0 ? void 0 : _res$data$data$5.cta) && setCta((_res$data$data$6 = res.data.data[0]) === null || _res$data$data$6 === void 0 ? void 0 : _res$data$data$6.cta);\n          }\n        } else {\n          const retErr = isErrorMsg(res);\n          toast.error(retErr.errorMsg, {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        }\n      });\n    }\n  }, [component]);\n  useEffect(() => {\n    var _images$;\n\n    handleSectionComponent && (images === null || images === void 0 ? void 0 : images.length) && handleSectionComponent({\n      service: 'hcmitemimg',\n      type: 'image',\n      gid: (_images$ = images[0]) === null || _images$ === void 0 ? void 0 : _images$.gid,\n      textColor: textColor\n    });\n  }, [textColor]);\n\n  const openDialog = () => {\n    //it opens dialog for image upload\n    setDialogOpen(true);\n  };\n\n  const closeDialog = () => {\n    //it closes dialog for image upload\n    setDialogOpen(false);\n  };\n\n  const ImageUpload = (apiUrl, endPoint, token, masterID, file) => {\n    const url = apiUrl + '/' + endPoint + OREST_UPLOAD;\n    let binaryData = [];\n    binaryData.push(file);\n    let formData = new FormData();\n    formData.append('file', new Blob(binaryData, {\n      type: file.type\n    }), file.name);\n    const options = {\n      url: url,\n      method: 'post',\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'multipart/form-data'\n      },\n      params: {\n        orsactive: true,\n        masterid: masterID,\n        hotelrefno: companyId,\n        quality: quality / 100,\n        scale: quality / 100\n      },\n      data: formData\n    };\n    return axios(options).then(response => {\n      return response;\n    }).catch(error => {\n      return error.response || {\n        status: 0\n      };\n    });\n  };\n\n  function asyncUpload(file, itemTreated, callback) {\n    if (state.hcmItemId) {\n      setTimeout(() => {\n        Insert({\n          apiUrl: GENERAL_SETTINGS.OREST_URL,\n          endpoint: OREST_ENDPOINT.HCMITEMIMG,\n          token: authToken,\n          data: {\n            itemid: state.hcmItemId,\n            imgtype: FIELDTYPE.IMG,\n            orderno: itemTreated,\n            hotelrefno: Number(companyId),\n            imgquality: quality / 100,\n            imgscale: quality / 100\n          }\n        }).then(r1 => {\n          if (r1.status === 200) {\n            imageID = r1.data.data.id;\n            ImageUpload(GENERAL_SETTINGS.OREST_URL, OREST_ENDPOINT.RAFILE, authToken, r1.data.data.mid, file).then(r => {\n              if (r.status === 200) {\n                handleSectionComponent({\n                  service: 'hcmitemimg',\n                  type: 'image',\n                  gid: r1.data.data.gid,\n                  textColor: textColor\n                });\n                callback();\n              } else {\n                callback();\n              }\n            });\n          } else {\n            callback();\n          }\n        });\n      }, 100);\n    }\n  }\n\n  const saveImage = files => {\n    setIsSaving(true);\n    let req = files.map(file => {\n      return new Promise(resolve => {\n        asyncUpload(file, itemCount, resolve);\n        setItemCount(itemCount => itemCount + 1);\n      });\n    });\n    Promise.all(req).then(() => {\n      ViewList({\n        apiUrl: GENERAL_SETTINGS.OREST_URL,\n        endpoint: OREST_ENDPOINT.HCMITEMIMG,\n        token: authToken,\n        params: {\n          query: `id:${imageID}`,\n          sort: 'orderno',\n          hotelrefno: Number(companyId)\n        }\n      }).then(res => {\n        setIsSaving(false);\n\n        if (res.status === 200) {\n          let updatedImages = [];\n          res.data.data.map(data => {\n            updatedImages.push(data);\n          });\n          setImages(updatedImages);\n          toast.success(UPLOAD_SUCCESS, {\n            position: toast.POSITION.TOP_RIGHT\n          });\n          closeDialog();\n        } else {\n          const retErr = isErrorMsg(res);\n          toast.error(retErr.errorMsg, {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        }\n      });\n    });\n  };\n\n  const deleteImage = () => {\n    setIsDeleting(true);\n    Delete({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.HCMITEMIMG,\n      token: authToken,\n      gid: images[0].gid,\n      params: {\n        hotelrefno: Number(companyId)\n      }\n    }).then(res => {\n      setIsDeleting(false);\n\n      if (res.status === 200) {\n        setImages([]);\n        toast.success(DELETE_SUCCESS, {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      } else {\n        const retErr = isErrorMsg(res);\n        toast.error(retErr.errorMsg, {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      }\n    });\n  };\n\n  const handleUpdateImage = () => {\n    setIsSaving(true);\n    Patch({\n      // update slider\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.HCMITEMIMG,\n      token: authToken,\n      gid: images[0].gid,\n      params: {\n        hotelrefno: Number(companyId)\n      },\n      data: {\n        title: imageTitle,\n        description: imageDesc,\n        cta: cta\n      }\n    }).then(res => {\n      setIsSaving(false);\n\n      if (res.status === 200) {\n        toast.success(SAVED_SUCCESS, {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      } else {\n        const retErr = isErrorMsg(res);\n        toast.error(retErr.errorMsg, {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      }\n    });\n  };\n\n  const handleImageQualityChange = value => {\n    if (value >= 10 && value <= 90 && value % 10 === 0) {\n      if (images !== null && images !== void 0 && images.length) {\n        Patch({\n          // update image\n          apiUrl: GENERAL_SETTINGS.OREST_URL,\n          endpoint: OREST_ENDPOINT.HCMITEMIMG,\n          token: authToken,\n          gid: images[0].gid,\n          params: {\n            hotelrefno: Number(companyId)\n          },\n          data: {\n            imgquality: isImageQualityChange ? value / 100 : quality / 100,\n            imgscale: isImageQualityChange ? value / 100 : quality / 100\n          }\n        }).then(res1 => {\n          var _res1$data;\n\n          if ((res1 === null || res1 === void 0 ? void 0 : res1.status) === 200 && res1 !== null && res1 !== void 0 && (_res1$data = res1.data) !== null && _res1$data !== void 0 && _res1$data.data) {\n            setQuality(value);\n          } else {\n            const retErr = isErrorMsg(res);\n            toast.error(retErr.errorMsg, {\n              position: toast.POSITION.TOP_RIGHT\n            });\n          }\n        });\n      } else {\n        setQuality(value);\n      }\n    }\n  };\n\n  const handleDialogOpen = type => {\n    if (type === 'title') {\n      setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        isTextEditorDialogOpen: true,\n        dialogType: type,\n        editorValue: imageTitle\n      }));\n    }\n\n    if (type === 'description') {\n      setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        isTextEditorDialogOpen: true,\n        dialogType: type,\n        editorValue: imageDesc\n      }));\n    }\n  };\n\n  const handleTextEditorValue = value => {\n    if (dialogType === 'title') {\n      setImageTitle(value);\n    }\n\n    if (dialogType === 'description') {\n      setImageDesc(value);\n    }\n\n    setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      isTextEditorDialogOpen: false,\n      dialogType: '',\n      editorValue: ''\n    }));\n  };\n\n  const handleCancelEditor = () => {\n    setLocalState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      isTextEditorDialogOpen: false,\n      dialogType: '',\n      editorValue: ''\n    }));\n  };\n\n  if (isSaving) {\n    return __jsx(LoadingSpinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 9\n    }\n  }, state.hcmItemId && __jsx(React.Fragment, null, __jsx(Grid, {\n    container: true,\n    justify: 'space-between',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 21\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 25\n    }\n  }, __jsx(FormControlLabel, {\n    className: classes.labelFont,\n    control: __jsx(Checkbox, {\n      size: 'small',\n      checked: isOptimizeImage,\n      onChange: () => {\n        var _state$assets2, _state$assets2$meta;\n\n        !isImageQualityChange && setQuality((state === null || state === void 0 ? void 0 : (_state$assets2 = state.assets) === null || _state$assets2 === void 0 ? void 0 : (_state$assets2$meta = _state$assets2.meta) === null || _state$assets2$meta === void 0 ? void 0 : _state$assets2$meta.imageQuality) * 100);\n        setOptimizeImage(!isOptimizeImage);\n      },\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 37\n      }\n    }),\n    label: \"Optimize Images\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 29\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 25\n    }\n  }, __jsx(Grid, {\n    container: true,\n    justify: 'flex-end',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 29\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 1,\n    style: {\n      marginTop: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 33\n    }\n  }, __jsx(Typography, {\n    component: 'span',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 37\n    }\n  }, \"Text\")), __jsx(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 33\n    }\n  }, __jsx(InputColor, {\n    onChange: color => setTextColor(color.hex),\n    placement: \"right\",\n    initialValue: textColor,\n    style: {\n      marginTop: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 37\n    }\n  }))))), __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 21\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 25\n    }\n  }, isOptimizeImage && __jsx(PercentageSlider, {\n    marks: PERCENTAGE_VALUES,\n    value: quality,\n    onChange: (e, value) => {\n      handleImageQualityChange(value);\n      !isImageQualityChange && setImageQualityChange(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 33\n    }\n  }))), __jsx(Grid, {\n    container: true,\n    justify: 'flex-start',\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 21\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 25\n    }\n  }, __jsx(Paper, {\n    className: classes.paperBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 29\n    }\n  }, images.length > 0 && images.map((value, index) => {\n    return __jsx(Grid, {\n      container: true,\n      key: index,\n      justify: 'center',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 45\n      }\n    }, __jsx(Grid, {\n      item: true,\n      className: isDeleting ? classes.disableEvent : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 49\n      }\n    }, __jsx(Card, {\n      className: classes.card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 53\n      }\n    }, __jsx(\"div\", {\n      style: {\n        backgroundImage: `url(${GENERAL_SETTINGS.STATIC_URL + value.fileurl})`,\n        height: '100%',\n        width: '100%',\n        backgroundSize: 'cover'\n      },\n      onMouseEnter: () => setShowDeleteBtn(true),\n      onMouseLeave: () => setShowDeleteBtn(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 57\n      }\n    }, showDeleteBtn && __jsx(IconButton, {\n      onClick: deleteImage,\n      disabled: isDeleting,\n      \"aria-label\": \"upload picture\",\n      component: \"span\",\n      style: {\n        float: 'right'\n      },\n      color: 'primary',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 65\n      }\n    }, __jsx(CancelIcon, {\n      style: {\n        width: 30,\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 69\n      }\n    }))))));\n  }), images.length === 0 && __jsx(Typography, {\n    component: 'div',\n    style: {\n      height: 250,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 37\n    }\n  }, __jsx(Fab, {\n    onClick: openDialog,\n    variant: \"extended\",\n    size: \"small\",\n    color: \"primary\",\n    \"aria-label\": \"add\",\n    className: classes.fabBtn,\n    disabled: images.length > 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 41\n    }\n  }, __jsx(CloudUploadIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 45\n    }\n  }), \"UPLOAD\")), __jsx(DropzoneDialog, {\n    open: isDialogOpen,\n    onSave: saveImage,\n    acceptedFiles: ['image/jpeg', 'image/png', 'image/bmp'],\n    showPreviews: true,\n    maxFileSize: 5000000,\n    onClose: closeDialog,\n    filesLimit: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 33\n    }\n  }))), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 25\n    }\n  }, __jsx(Paper, {\n    className: classes.paperBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 29\n    }\n  }, __jsx(Grid, {\n    container: true,\n    justify: 'flex-start',\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 33\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 553,\n      columnNumber: 37\n    }\n  }, __jsx(Typography, {\n    component: 'h6',\n    variant: 'h6',\n    className: classes.heading,\n    style: {\n      marginTop: 24\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 41\n    }\n  }, \"Title\")), __jsx(Grid, {\n    item: true,\n    xs: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 37\n    }\n  }, __jsx(IconButton, {\n    \"aria-label\": \"Edit Title\",\n    color: \"primary\",\n    onClick: () => handleDialogOpen('title'),\n    style: {\n      float: 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 41\n    }\n  }, __jsx(BorderColorSharpIcon, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 45\n    }\n  })))), __jsx(Grid, {\n    container: true,\n    justify: 'flex-start',\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 33\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 37\n    }\n  }, __jsx(Typography, {\n    component: 'h6',\n    variant: 'h6',\n    className: classes.heading,\n    size: 'small',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 576,\n      columnNumber: 41\n    }\n  }, \"Description\")), __jsx(Grid, {\n    item: true,\n    xs: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 37\n    }\n  }, __jsx(IconButton, {\n    \"aria-label\": \"Edit Title\",\n    color: \"primary\",\n    onClick: () => handleDialogOpen('description'),\n    style: {\n      float: 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 41\n    }\n  }, __jsx(BorderColorSharpIcon, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 45\n    }\n  })))), (state.type === 'email' || state.type === 'emailOnly') && __jsx(Grid, {\n    container: true,\n    justify: 'flex-start',\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 597,\n      columnNumber: 37\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 41\n    }\n  }, __jsx(Typography, {\n    component: 'h6',\n    variant: 'h6',\n    className: classes.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 45\n    }\n  }, \"Link\")), __jsx(Grid, {\n    item: true,\n    xs: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 603,\n      columnNumber: 41\n    }\n  }, __jsx(TextField, {\n    id: \"image-description\",\n    variant: 'outlined',\n    fullWidth: true,\n    placeholder: 'Please Link here',\n    onChange: e => setCta(e.target.value),\n    size: 'small',\n    className: classes.textField,\n    error: cta ? !validator.isURL(cta) : false,\n    value: cta,\n    helperText: cta && __jsx(Typography, {\n      variant: \"caption\",\n      className: classes.alignText,\n      display: \"block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 57\n      }\n    }, `${cta === null || cta === void 0 ? void 0 : cta.length} < 100`),\n    inputProps: {\n      maxLength: 99\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 604,\n      columnNumber: 45\n    }\n  }))), __jsx(Divider, {\n    style: {\n      marginTop: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 630,\n      columnNumber: 33\n    }\n  }), __jsx(Button, {\n    onClick: handleUpdateImage,\n    variant: \"contained\",\n    size: \"small\",\n    color: \"primary\",\n    \"aria-label\": \"add\",\n    className: classes.submit,\n    disabled: images.length === 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 631,\n      columnNumber: 33\n    }\n  }, \"SUBMIT\"))))), isTextEditorDialogOpen && __jsx(TextEditor, {\n    handleSaveTextEditor: handleTextEditorValue,\n    handleCancelTextEditor: handleCancelEditor,\n    data: editorValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 648,\n      columnNumber: 17\n    }\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    state: state.formReducer.pageBuilder\n  };\n};\n\nexport default connect(mapStateToProps)(UploadImage);","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/components/page/sections/image/UploadImage.js"],"names":["React","useContext","useEffect","useState","ViewList","Insert","Delete","Patch","WebCmsGlobal","useRouter","connect","FIELDTYPE","isErrorMsg","OREST_ENDPOINT","OREST_UPLOAD","Grid","Card","Fab","CloudUploadIcon","DropzoneDialog","makeStyles","axios","toast","TextField","Button","Paper","LoadingSpinner","COLORS","UPLOAD_SUCCESS","DELETE_SUCCESS","SAVED_SUCCESS","PERCENTAGE_VALUES","Typography","CancelIcon","IconButton","Divider","validator","PercentageSlider","Checkbox","FormControlLabel","InputColor","TextEditor","BorderColorSharpIcon","useStyles","theme","root","card","maxWidth","media","height","paddingTop","submit","marginRight","spacing","marginBottom","borderRadius","marginTop","float","fabBtn","marginLeft","disableEvent","pointerEvents","opacity","paperBlock","border","secondary","overflow","position","width","cursor","heading","fontWeight","fontSize","textField","paddingRight","alignText","textAlign","color","UploadImage","props","state","component","handleSectionComponent","handleNextDisable","router","companyId","query","companyID","GENERAL_SETTINGS","token","authToken","isDialogOpen","setDialogOpen","images","setImages","itemCount","setItemCount","imageTitle","setImageTitle","imageDesc","setImageDesc","isSaving","setIsSaving","isDeleting","setIsDeleting","showDeleteBtn","setShowDeleteBtn","cta","setCta","isOptimizeImage","setOptimizeImage","quality","setQuality","isImageQualityChange","setImageQualityChange","textColor","setTextColor","assets","colors","slider","main","localState","setLocalState","isTextEditorDialogOpen","editorValue","dialogType","imageID","classes","length","gid","apiUrl","OREST_URL","endpoint","HCMITEMIMG","params","sort","hotelrefno","Number","then","res","status","data","updatedImages","map","push","title","description","retErr","error","errorMsg","POSITION","TOP_RIGHT","service","type","openDialog","closeDialog","ImageUpload","endPoint","masterID","file","url","binaryData","formData","FormData","append","Blob","name","options","method","headers","Authorization","orsactive","masterid","scale","response","catch","asyncUpload","itemTreated","callback","hcmItemId","setTimeout","itemid","imgtype","IMG","orderno","imgquality","imgscale","r1","id","RAFILE","mid","r","saveImage","files","req","Promise","resolve","all","success","deleteImage","handleUpdateImage","handleImageQualityChange","value","res1","handleDialogOpen","prev","handleTextEditorValue","handleCancelEditor","labelFont","meta","imageQuality","hex","e","index","backgroundImage","STATIC_URL","fileurl","backgroundSize","display","alignItems","justifyContent","target","isURL","maxLength","mapStateToProps","formReducer","pageBuilder"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport { ViewList, Insert, Delete, Patch } from '@webcms/orest'\nimport WebCmsGlobal from 'components/webcms-global'\nimport { useRouter } from 'next/router'\nimport { connect } from 'react-redux'\nimport { FIELDTYPE, isErrorMsg, OREST_ENDPOINT, OREST_UPLOAD } from '../../../../../../../model/orest/constants'\nimport Grid from '@material-ui/core/Grid'\nimport Card from '@material-ui/core/Card'\nimport Fab from '@material-ui/core/Fab'\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload'\nimport { DropzoneDialog } from 'material-ui-dropzone'\nimport { makeStyles } from '@material-ui/core/styles'\nimport axios from 'axios'\nimport { toast } from 'react-toastify'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport LoadingSpinner from '../../../../../../LoadingSpinner'\nimport { COLORS, UPLOAD_SUCCESS, DELETE_SUCCESS, SAVED_SUCCESS, PERCENTAGE_VALUES } from '../../../../constants'\nimport Typography from '@material-ui/core/Typography'\nimport CancelIcon from '@material-ui/icons/Cancel'\nimport IconButton from '@material-ui/core/IconButton'\nimport Divider from '@material-ui/core/Divider'\nimport validator from 'validator'\nimport { PercentageSlider } from '../../../../../../../model/slider'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport { FormControlLabel } from '@material-ui/core'\nimport InputColor from 'react-input-color'\nimport TextEditor from '../text-editor'\nimport BorderColorSharpIcon from '@material-ui/icons/BorderColorSharp'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        card: {\n            maxWidth: 345,\n        },\n        media: {\n            height: 0,\n            paddingTop: '56.25%',\n        },\n    },\n    submit: {\n        marginRight: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n        borderRadius: 20,\n        marginTop: theme.spacing(1),\n        float: 'right',\n    },\n    fabBtn: {\n        marginBottom: theme.spacing(1),\n        marginLeft: theme.spacing(1),\n    },\n    disableEvent: {\n        pointerEvents: 'none',\n        opacity: 0.5,\n    },\n    paperBlock: {\n        height: 250,\n        border: `2px solid ${COLORS?.secondary}`,\n        overflow: 'auto',\n        position: 'relative',\n    },\n    card: {\n        height: 245,\n        width: 392,\n        cursor: 'pointer',\n    },\n    heading: {\n        marginTop: theme.spacing(1),\n        marginLeft: theme.spacing(2),\n        fontWeight: 'bold',\n        fontSize: 15,\n    },\n    textField: {\n        paddingRight: theme.spacing(1),\n    },\n    alignText: {\n        textAlign: 'right',\n        color: 'red',\n    },\n}))\n\nconst UploadImage = (props) => {\n    const { state, component, handleSectionComponent, handleNextDisable } = props\n\n    const router = useRouter()\n    const companyId = router.query.companyID\n    const { GENERAL_SETTINGS, token } = useContext(WebCmsGlobal)\n    const authToken = token || router.query.authToken\n    //local state\n    const [isDialogOpen, setDialogOpen] = useState(false)\n    const [images, setImages] = useState([])\n    const [itemCount, setItemCount] = useState(1)\n    const [imageTitle, setImageTitle] = useState('')\n    const [imageDesc, setImageDesc] = useState('')\n    const [isSaving, setIsSaving] = useState(false)\n    const [isDeleting, setIsDeleting] = useState(false)\n    const [showDeleteBtn, setShowDeleteBtn] = useState(false)\n    const [cta, setCta] = useState('')\n    const [isOptimizeImage, setOptimizeImage] = useState(false)\n    const [quality, setQuality] = useState(100)\n    const [isImageQualityChange, setImageQualityChange] = useState(false)\n    const [textColor, setTextColor] = useState(\n        state?.assets?.colors?.slider?.main ? state.assets.colors.slider.main : '#fff'\n    )\n    const [localState, setLocalState] = useState({\n        isTextEditorDialogOpen: false,\n        editorValue: '',\n        dialogType: '',\n    })\n\n    const { isTextEditorDialogOpen, editorValue, dialogType } = localState\n\n    let imageID = ''\n\n    const classes = useStyles()\n\n    useEffect(() => {\n        if (images.length === 0) {\n            handleNextDisable(true)\n        } else {\n            handleNextDisable(false)\n        }\n    }, [images])\n\n    useEffect(() => {\n        if (component?.gid) {\n            ViewList({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: OREST_ENDPOINT.HCMITEMIMG,\n                token: authToken,\n                params: {\n                    query: `gid:${component.gid}`,\n                    sort: 'orderno',\n                    hotelrefno: Number(companyId),\n                },\n            }).then((res) => {\n                if (res.status === 200) {\n                    if (res?.data?.data?.length > 0) {\n                        let updatedImages = []\n                        res.data.data.map((data) => {\n                            updatedImages.push(data)\n                        })\n                        setImages(updatedImages)\n                        res.data.data[0]?.title && setImageTitle(res.data.data[0]?.title)\n                        res.data.data[0]?.description && setImageDesc(res.data.data[0]?.description)\n                        res.data.data[0]?.cta && setCta(res.data.data[0]?.cta)\n                    }\n                } else {\n                    const retErr = isErrorMsg(res)\n                    toast.error(retErr.errorMsg, {\n                        position: toast.POSITION.TOP_RIGHT,\n                    })\n                }\n            })\n        }\n    }, [component])\n\n    useEffect(() => {\n        handleSectionComponent &&\n            images?.length &&\n            handleSectionComponent({\n                service: 'hcmitemimg',\n                type: 'image',\n                gid: images[0]?.gid,\n                textColor: textColor,\n            })\n    }, [textColor])\n\n    const openDialog = () => {\n        //it opens dialog for image upload\n        setDialogOpen(true)\n    }\n\n    const closeDialog = () => {\n        //it closes dialog for image upload\n        setDialogOpen(false)\n    }\n\n    const ImageUpload = (apiUrl, endPoint, token, masterID, file) => {\n        const url = apiUrl + '/' + endPoint + OREST_UPLOAD\n        let binaryData = []\n        binaryData.push(file)\n        let formData = new FormData()\n        formData.append('file', new Blob(binaryData, { type: file.type }), file.name)\n\n        const options = {\n            url: url,\n            method: 'post',\n            headers: {\n                Authorization: `Bearer ${token}`,\n                'Content-Type': 'multipart/form-data',\n            },\n            params: {\n                orsactive: true,\n                masterid: masterID,\n                hotelrefno: companyId,\n                quality: quality / 100,\n                scale: quality / 100,\n            },\n            data: formData,\n        }\n\n        return axios(options)\n            .then((response) => {\n                return response\n            })\n            .catch((error) => {\n                return error.response || { status: 0 }\n            })\n    }\n\n    function asyncUpload(file, itemTreated, callback) {\n        if (state.hcmItemId) {\n            setTimeout(() => {\n                Insert({\n                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                    endpoint: OREST_ENDPOINT.HCMITEMIMG,\n                    token: authToken,\n                    data: {\n                        itemid: state.hcmItemId,\n                        imgtype: FIELDTYPE.IMG,\n                        orderno: itemTreated,\n                        hotelrefno: Number(companyId),\n                        imgquality: quality / 100,\n                        imgscale: quality / 100,\n                    },\n                }).then((r1) => {\n                    if (r1.status === 200) {\n                        imageID = r1.data.data.id\n                        ImageUpload(\n                            GENERAL_SETTINGS.OREST_URL,\n                            OREST_ENDPOINT.RAFILE,\n                            authToken,\n                            r1.data.data.mid,\n                            file\n                        ).then((r) => {\n                            if (r.status === 200) {\n                                handleSectionComponent({\n                                    service: 'hcmitemimg',\n                                    type: 'image',\n                                    gid: r1.data.data.gid,\n                                    textColor: textColor,\n                                })\n                                callback()\n                            } else {\n                                callback()\n                            }\n                        })\n                    } else {\n                        callback()\n                    }\n                })\n            }, 100)\n        }\n    }\n\n    const saveImage = (files) => {\n        setIsSaving(true)\n        let req = files.map((file) => {\n            return new Promise((resolve) => {\n                asyncUpload(file, itemCount, resolve)\n                setItemCount((itemCount) => itemCount + 1)\n            })\n        })\n        Promise.all(req).then(() => {\n            ViewList({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: OREST_ENDPOINT.HCMITEMIMG,\n                token: authToken,\n                params: {\n                    query: `id:${imageID}`,\n                    sort: 'orderno',\n                    hotelrefno: Number(companyId),\n                },\n            }).then((res) => {\n                setIsSaving(false)\n                if (res.status === 200) {\n                    let updatedImages = []\n                    res.data.data.map((data) => {\n                        updatedImages.push(data)\n                    })\n                    setImages(updatedImages)\n                    toast.success(UPLOAD_SUCCESS, {\n                        position: toast.POSITION.TOP_RIGHT,\n                    })\n                    closeDialog()\n                } else {\n                    const retErr = isErrorMsg(res)\n                    toast.error(retErr.errorMsg, {\n                        position: toast.POSITION.TOP_RIGHT,\n                    })\n                }\n            })\n        })\n    }\n\n    const deleteImage = () => {\n        setIsDeleting(true)\n        Delete({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.HCMITEMIMG,\n            token: authToken,\n            gid: images[0].gid,\n            params: {\n                hotelrefno: Number(companyId),\n            },\n        }).then((res) => {\n            setIsDeleting(false)\n            if (res.status === 200) {\n                setImages([])\n                toast.success(DELETE_SUCCESS, {\n                    position: toast.POSITION.TOP_RIGHT,\n                })\n            } else {\n                const retErr = isErrorMsg(res)\n                toast.error(retErr.errorMsg, {\n                    position: toast.POSITION.TOP_RIGHT,\n                })\n            }\n        })\n    }\n\n    const handleUpdateImage = () => {\n        setIsSaving(true)\n        Patch({\n            // update slider\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.HCMITEMIMG,\n            token: authToken,\n            gid: images[0].gid,\n            params: {\n                hotelrefno: Number(companyId),\n            },\n            data: {\n                title: imageTitle,\n                description: imageDesc,\n                cta: cta,\n            },\n        }).then((res) => {\n            setIsSaving(false)\n            if (res.status === 200) {\n                toast.success(SAVED_SUCCESS, {\n                    position: toast.POSITION.TOP_RIGHT,\n                })\n            } else {\n                const retErr = isErrorMsg(res)\n                toast.error(retErr.errorMsg, {\n                    position: toast.POSITION.TOP_RIGHT,\n                })\n            }\n        })\n    }\n\n    const handleImageQualityChange = (value) => {\n        if (value >= 10 && value <= 90 && value % 10 === 0) {\n            if (images?.length) {\n                Patch({\n                    // update image\n                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                    endpoint: OREST_ENDPOINT.HCMITEMIMG,\n                    token: authToken,\n                    gid: images[0].gid,\n                    params: {\n                        hotelrefno: Number(companyId),\n                    },\n                    data: {\n                        imgquality: isImageQualityChange ? value / 100 : quality / 100,\n                        imgscale: isImageQualityChange ? value / 100 : quality / 100,\n                    },\n                }).then((res1) => {\n                    if (res1?.status === 200 && res1?.data?.data) {\n                        setQuality(value)\n                    } else {\n                        const retErr = isErrorMsg(res)\n                        toast.error(retErr.errorMsg, {\n                            position: toast.POSITION.TOP_RIGHT,\n                        })\n                    }\n                })\n            } else {\n                setQuality(value)\n            }\n        }\n    }\n\n    const handleDialogOpen = (type) => {\n        if (type === 'title') {\n            setLocalState((prev) => ({\n                ...prev,\n                isTextEditorDialogOpen: true,\n                dialogType: type,\n                editorValue: imageTitle,\n            }))\n        }\n        if (type === 'description') {\n            setLocalState((prev) => ({\n                ...prev,\n                isTextEditorDialogOpen: true,\n                dialogType: type,\n                editorValue: imageDesc,\n            }))\n        }\n    }\n\n    const handleTextEditorValue = (value) => {\n        if (dialogType === 'title') {\n            setImageTitle(value)\n        }\n        if (dialogType === 'description') {\n            setImageDesc(value)\n        }\n        setLocalState((prev) => ({ ...prev, isTextEditorDialogOpen: false, dialogType: '', editorValue: '' }))\n    }\n\n    const handleCancelEditor = () => {\n        setLocalState((prev) => ({ ...prev, isTextEditorDialogOpen: false, dialogType: '', editorValue: '' }))\n    }\n\n    if (isSaving) {\n        return <LoadingSpinner />\n    }\n\n    return (\n        <React.Fragment>\n            {state.hcmItemId && (\n                <>\n                    <Grid container={true} justify={'space-between'}>\n                        <Grid item xs={6}>\n                            <FormControlLabel\n                                className={classes.labelFont}\n                                control={\n                                    <Checkbox\n                                        size={'small'}\n                                        checked={isOptimizeImage}\n                                        onChange={() => {\n                                            !isImageQualityChange && setQuality(state?.assets?.meta?.imageQuality * 100)\n                                            setOptimizeImage(!isOptimizeImage)\n                                        }}\n                                        color=\"primary\"\n                                    />\n                                }\n                                label=\"Optimize Images\"\n                            />\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Grid container={true} justify={'flex-end'}>\n                                <Grid item xs={1} style={{ marginTop: 8 }}>\n                                    <Typography component={'span'}>Text</Typography>\n                                </Grid>\n                                <Grid item xs={2}>\n                                    <InputColor\n                                        onChange={(color) => setTextColor(color.hex)}\n                                        placement=\"right\"\n                                        initialValue={textColor}\n                                        style={{ marginTop: 8 }}\n                                    />\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid container>\n                        <Grid item xs={12}>\n                            {isOptimizeImage && (\n                                <PercentageSlider\n                                    marks={PERCENTAGE_VALUES}\n                                    value={quality}\n                                    onChange={(e, value) => {\n                                        handleImageQualityChange(value)\n                                        !isImageQualityChange && setImageQualityChange(true)\n                                    }}\n                                />\n                            )}\n                        </Grid>\n                    </Grid>\n                    <Grid container={true} justify={'flex-start'} spacing={3}>\n                        <Grid item={true} xs={6}>\n                            <Paper className={classes.paperBlock}>\n                                {images.length > 0 &&\n                                    images.map((value, index) => {\n                                        return (\n                                            <Grid container={true} key={index} justify={'center'}>\n                                                <Grid item className={isDeleting ? classes.disableEvent : ''}>\n                                                    <Card className={classes.card}>\n                                                        <div\n                                                            style={{\n                                                                backgroundImage: `url(${\n                                                                    GENERAL_SETTINGS.STATIC_URL + value.fileurl\n                                                                })`,\n                                                                height: '100%',\n                                                                width: '100%',\n                                                                backgroundSize: 'cover',\n                                                            }}\n                                                            onMouseEnter={() => setShowDeleteBtn(true)}\n                                                            onMouseLeave={() => setShowDeleteBtn(false)}\n                                                        >\n                                                            {showDeleteBtn && (\n                                                                <IconButton\n                                                                    onClick={deleteImage}\n                                                                    disabled={isDeleting}\n                                                                    aria-label=\"upload picture\"\n                                                                    component=\"span\"\n                                                                    style={{ float: 'right' }}\n                                                                    color={'primary'}\n                                                                >\n                                                                    <CancelIcon style={{ width: 30, height: 30 }} />\n                                                                </IconButton>\n                                                            )}\n                                                        </div>\n                                                    </Card>\n                                                </Grid>\n                                            </Grid>\n                                        )\n                                    })}\n                                {images.length === 0 && (\n                                    <Typography\n                                        component={'div'}\n                                        style={{\n                                            height: 250,\n                                            display: 'flex',\n                                            alignItems: 'center',\n                                            justifyContent: 'center',\n                                        }}\n                                    >\n                                        <Fab\n                                            onClick={openDialog}\n                                            variant=\"extended\"\n                                            size=\"small\"\n                                            color=\"primary\"\n                                            aria-label=\"add\"\n                                            className={classes.fabBtn}\n                                            disabled={images.length > 0}\n                                        >\n                                            <CloudUploadIcon />\n                                            UPLOAD\n                                        </Fab>\n                                    </Typography>\n                                )}\n                                <DropzoneDialog\n                                    open={isDialogOpen}\n                                    onSave={saveImage}\n                                    acceptedFiles={['image/jpeg', 'image/png', 'image/bmp']}\n                                    showPreviews={true}\n                                    maxFileSize={5000000}\n                                    onClose={closeDialog}\n                                    filesLimit={1}\n                                />\n                            </Paper>\n                        </Grid>\n                        <Grid item={true} xs={6}>\n                            <Paper className={classes.paperBlock}>\n                                <Grid container justify={'flex-start'} spacing={3}>\n                                    <Grid item xs={3}>\n                                        <Typography\n                                            component={'h6'}\n                                            variant={'h6'}\n                                            className={classes.heading}\n                                            style={{ marginTop: 24 }}\n                                        >\n                                            Title\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item xs={9}>\n                                        <IconButton\n                                            aria-label=\"Edit Title\"\n                                            color=\"primary\"\n                                            onClick={() => handleDialogOpen('title')}\n                                            style={{ float: 'right' }}\n                                        >\n                                            <BorderColorSharpIcon color=\"primary\" />\n                                        </IconButton>\n                                    </Grid>\n                                </Grid>\n                                <Grid container justify={'flex-start'} spacing={3}>\n                                    <Grid item xs={3}>\n                                        <Typography\n                                            component={'h6'}\n                                            variant={'h6'}\n                                            className={classes.heading}\n                                            size={'small'}\n                                        >\n                                            Description\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item xs={9}>\n                                        <IconButton\n                                            aria-label=\"Edit Title\"\n                                            color=\"primary\"\n                                            onClick={() => handleDialogOpen('description')}\n                                            style={{ float: 'right' }}\n                                        >\n                                            <BorderColorSharpIcon color=\"primary\" />\n                                        </IconButton>\n                                    </Grid>\n                                </Grid>\n                                {(state.type === 'email' || state.type === 'emailOnly') && (\n                                    <Grid container justify={'flex-start'} spacing={3}>\n                                        <Grid item xs={3}>\n                                            <Typography component={'h6'} variant={'h6'} className={classes.heading}>\n                                                Link\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item xs={9}>\n                                            <TextField\n                                                id=\"image-description\"\n                                                variant={'outlined'}\n                                                fullWidth\n                                                placeholder={'Please Link here'}\n                                                onChange={(e) => setCta(e.target.value)}\n                                                size={'small'}\n                                                className={classes.textField}\n                                                error={cta ? !validator.isURL(cta) : false}\n                                                value={cta}\n                                                helperText={\n                                                    cta && (\n                                                        <Typography\n                                                            variant=\"caption\"\n                                                            className={classes.alignText}\n                                                            display=\"block\"\n                                                        >\n                                                            {`${cta?.length} < 100`}\n                                                        </Typography>\n                                                    )\n                                                }\n                                                inputProps={{ maxLength: 99 }}\n                                            />\n                                        </Grid>\n                                    </Grid>\n                                )}\n                                <Divider style={{ marginTop: 8 }} />\n                                <Button\n                                    onClick={handleUpdateImage}\n                                    variant=\"contained\"\n                                    size=\"small\"\n                                    color=\"primary\"\n                                    aria-label=\"add\"\n                                    className={classes.submit}\n                                    disabled={images.length === 0}\n                                >\n                                    SUBMIT\n                                </Button>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </>\n            )}\n            {isTextEditorDialogOpen && (\n                <TextEditor\n                    handleSaveTextEditor={handleTextEditorValue}\n                    handleCancelTextEditor={handleCancelEditor}\n                    data={editorValue}\n                />\n            )}\n        </React.Fragment>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        state: state.formReducer.pageBuilder,\n    }\n}\n\nexport default connect(mapStateToProps)(UploadImage)\n"]},"metadata":{},"sourceType":"module"}