{"ast":null,"code":"import _extends from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/mata/app-cloudweb/components/layout/Header.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect, useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { setToState as _setToState, updateState as _updateState } from 'state/actions';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Link from 'next/link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport styles from './style/Header.style';\nimport WebCmsGlobal from 'components/webcms-global';\nimport LocaleSwitcher from 'components/LocaleSwitcher';\nimport Grid from '@material-ui/core/Grid';\nimport Hidden from '@material-ui/core/Hidden';\nimport { useOrestAction } from 'model/orest';\nimport { useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport axios from 'axios';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Avatar from '@material-ui/core/Avatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport Faq from 'components/guest/public/components/faq';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SelectHotel from '../guest/public/SelectHotel';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport PopupState, { bindTrigger, bindMenu } from 'material-ui-popup-state';\nimport DialogFaq from \"../guest/public/components/DialogFaq\";\nimport LoginDialog from \"../LoginComponent/LoginDialog\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChangePassword from '../guest/account/Details/ChangePassword';\nimport LockIcon from '@material-ui/icons/Lock';\nimport { Typography } from \"@material-ui/core\";\nimport Divider from \"@material-ui/core/Divider\";\nvar useStyles = makeStyles(styles);\n\nvar Header = function Header(props) {\n  _s();\n\n  var _appBarRef$current;\n\n  var langSelect = props.langSelect,\n      loginButton = props.loginButton,\n      state = props.state,\n      setToState = props.setToState,\n      updateState = props.updateState,\n      isLoginWrapper = props.isLoginWrapper,\n      isShowFullName = props.isShowFullName,\n      isGuestProfile = props.isGuestProfile;\n  var classes = useStyles();\n  var Router = useRouter();\n\n  var _useContext = useContext(WebCmsGlobal),\n      GENERAL_SETTINGS = _useContext.GENERAL_SETTINGS,\n      WEBCMS_DATA = _useContext.WEBCMS_DATA;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var appBarRef = useRef(); //redux\n\n  var _useOrestAction = useOrestAction(),\n      deleteOrestCurrentUserInfo = _useOrestAction.deleteOrestCurrentUserInfo,\n      resetOrestState = _useOrestAction.resetOrestState;\n\n  var isLoggedIn = useSelector(function (state) {\n    return state.orest.currentUser && state.orest.currentUser.auth;\n  });\n  var token = useSelector(function (state) {\n    var _state$orest, _state$orest$currentU, _state$orest$currentU2;\n\n    return (state === null || state === void 0 ? void 0 : (_state$orest = state.orest) === null || _state$orest === void 0 ? void 0 : (_state$orest$currentU = _state$orest.currentUser) === null || _state$orest$currentU === void 0 ? void 0 : (_state$orest$currentU2 = _state$orest$currentU.auth) === null || _state$orest$currentU2 === void 0 ? void 0 : _state$orest$currentU2.access_token) || false;\n  });\n  var clientBase = useSelector(function (state) {\n    var _state$orest2, _state$orest2$state;\n\n    return (state === null || state === void 0 ? void 0 : (_state$orest2 = state.orest) === null || _state$orest2 === void 0 ? void 0 : (_state$orest2$state = _state$orest2.state) === null || _state$orest2$state === void 0 ? void 0 : _state$orest2$state.client) || false;\n  });\n  var loginfo = useSelector(function (state) {\n    var _state$orest3, _state$orest3$current;\n\n    return (state === null || state === void 0 ? void 0 : (_state$orest3 = state.orest) === null || _state$orest3 === void 0 ? void 0 : (_state$orest3$current = _state$orest3.currentUser) === null || _state$orest3$current === void 0 ? void 0 : _state$orest3$current.loginfo) || false;\n  }); //state\n\n  var _useState = useState(false),\n      faqDialog = _useState[0],\n      setFaqDialog = _useState[1];\n\n  var _useState2 = useState(false),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var _useState3 = useState(false),\n      changePassDialogOpen = _useState3[0],\n      setChangePassDialogOpen = _useState3[1];\n\n  var clientBeforeLoader = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(active, mid, type) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!((type === 'client' && state.clientProfilePhoto !== null || type === 'agency' && state.agencyProfilePhoto !== null) && mid && token)) {\n                _context.next = 3;\n                break;\n              }\n\n              _context.next = 3;\n              return axios({\n                url: \"\".concat(GENERAL_SETTINGS.OREST_URL, \"/tools/file/download\"),\n                headers: {\n                  \"Authorization\": \"Bearer \".concat(token)\n                },\n                method: 'get',\n                responseType: 'arraybuffer',\n                params: {\n                  code: 'PHOTO',\n                  masterid: mid,\n                  hotelrefno: GENERAL_SETTINGS.HOTELREFNO\n                }\n              }).then(function (r) {\n                if (active) {\n                  if (r.status === 200) {\n                    var blob = new Blob([r.data], {\n                      type: r.data.type\n                    });\n                    var url = URL.createObjectURL(blob);\n\n                    if (type === 'client') {\n                      updateState('guest', 'clientProfilePhoto', url);\n                    } else if (type === 'agency') {\n                      updateState('guest', 'agencyProfilePhoto', url);\n                    }\n                  } else {\n                    if (type === 'client') {\n                      updateState('guest', 'clientProfilePhoto', null);\n                    } else if (type === 'agency') {\n                      updateState('guest', 'agencyProfilePhoto', null);\n                    }\n                  }\n\n                  if (type === 'client') updateState('guest', 'clientMid', clientBase.mid);\n                }\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function clientBeforeLoader(_x, _x2, _x3) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    var active = true;\n    clientBeforeLoader(active, clientBase === null || clientBase === void 0 ? void 0 : clientBase.mid, 'client');\n\n    if (isGuestProfile) {\n      clientBeforeLoader(active, loginfo === null || loginfo === void 0 ? void 0 : loginfo.mid, 'agency');\n    }\n\n    return function () {\n      active = false;\n    };\n  }, [clientBase]);\n\n  var handleResetState = function handleResetState() {\n    updateState('guest', 'memCardNext', false);\n    updateState('guest', 'clientMid', false);\n    updateState('guest', 'clientProfilePhoto', false);\n    updateState('guest', 'clientLoyaltyCard', false);\n    setToState('guest', ['profile', 'loadGuest'], true);\n    deleteOrestCurrentUserInfo();\n    resetOrestState();\n  };\n\n  var handleClickLogout = function handleClickLogout() {\n    if (!GENERAL_SETTINGS.ISPORTAL && Router.pathname === '/guest') {\n      Router.push({\n        pathname: Router.pathname,\n        query: {\n          menu: 'home'\n        },\n        shallow: true\n      });\n    }\n\n    if (!GENERAL_SETTINGS.ISPORTAL) {\n      updateState('guest', 'changeHotelRefno', false);\n    }\n\n    handleResetState();\n  };\n\n  var isKiosk = Router.query.kiosk === 'true';\n  var isChangeHotel = (GENERAL_SETTINGS === null || GENERAL_SETTINGS === void 0 ? void 0 : GENERAL_SETTINGS.ISCHAIN) || false;\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, __jsx(LoginDialog, {\n    open: open || state.openLoginDialog,\n    onClose: function onClose(status) {\n      setOpen(status);\n      setToState(\"guest\", [\"openLoginDialog\"], status);\n    },\n    locationName: \"destinationPortal\",\n    isLoginWrapper: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    style: {\n      minHeight: (appBarRef === null || appBarRef === void 0 ? void 0 : (_appBarRef$current = appBarRef.current) === null || _appBarRef$current === void 0 ? void 0 : _appBarRef$current.offsetHeight) || 64\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }), __jsx(AppBar, {\n    position: \"fixed\",\n    className: classes.appBar,\n    ref: appBarRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, __jsx(Toolbar, {\n    className: isLoginWrapper ? classes.toolbarDestinationPortal : classes.toolBar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }, __jsx(Container, {\n    maxWidth: \"xl\",\n    className: isLoginWrapper ? classes.container : \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 21\n    }\n  }, __jsx(Grid, {\n    container: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 24\n    }\n  }, __jsx(Hidden, {\n    xsDown: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 28\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 32\n    }\n  }, !Router.pathname.includes('epay') ? __jsx(Link, {\n    href: '/',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 40\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 44\n    }\n  }, __jsx(\"img\", {\n    src: GENERAL_SETTINGS.STATIC_URL + WEBCMS_DATA.assets.images.logo,\n    alt: \"logo\",\n    className: classes.headerLogo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 48\n    }\n  }))) : __jsx(\"img\", {\n    src: GENERAL_SETTINGS.STATIC_URL + WEBCMS_DATA.assets.images.logo,\n    alt: \"logo\",\n    className: classes.headerLogo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 40\n    }\n  }))), __jsx(Hidden, {\n    smUp: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 28\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 32\n    }\n  }, WEBCMS_DATA.assets.images.favIcon ? __jsx(IconButton, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 73\n    }\n  }, __jsx(Avatar, {\n    style: {\n      objectFit: 'fill'\n    },\n    variant: \"square\",\n    alt: \"Logo\",\n    src: GENERAL_SETTINGS.STATIC_URL + WEBCMS_DATA.assets.images.favIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 85\n    }\n  })) : null)), __jsx(Grid, {\n    item: true,\n    xs: 10,\n    style: {\n      alignSelf: \"center\"\n    },\n    className: classes.noPrint,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 28\n    }\n  }, __jsx(Grid, {\n    container: true,\n    justify: 'flex-end',\n    alignItems: 'center',\n    style: {\n      width: 'unset'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 32\n    }\n  }, __jsx(Hidden, {\n    xsDown: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 36\n    }\n  }, isChangeHotel && !isLoginWrapper ? __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 40\n    }\n  }, __jsx(Button, {\n    startIcon: __jsx(BusinessIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 63\n      }\n    }),\n    onClick: function onClick() {\n      return setToState(\"guest\", [\"isHotelListOpen\"], true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 44\n    }\n  }, state.changeHotelRefno ? state.changeHotelName : t('str_chooseHotel'))) : null, langSelect && __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 40\n    }\n  }, isLoginWrapper ? __jsx(LocaleSwitcher, {\n    isPortal: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 62\n    }\n  }) : __jsx(LocaleSwitcher, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 91\n    }\n  })), !Router.pathname.includes('survey') && loginButton && !isLoggedIn && !isKiosk && __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 44\n    }\n  }, isLoginWrapper ? __jsx(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    className: classes.headerLoginButton,\n    onClick: function onClick() {\n      return setOpen(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 52\n    }\n  }, t(\"str_login\")) : __jsx(Link, {\n    href: '/guest/login',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 52\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 56\n    }\n  }, __jsx(Button, {\n    onClick: handleResetState,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 60\n    }\n  }, t('str_login')))))), isLoggedIn && isKiosk && __jsx(Grid, {\n    item: true,\n    className: classes.noPrint,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 40\n    }\n  }, __jsx(Button, {\n    onClick: handleClickLogout,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 44\n    }\n  }, t('str_logout'))), !isLoggedIn && __jsx(Grid, {\n    item: true,\n    className: classes.noPrint,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 40\n    }\n  }, __jsx(Hidden, {\n    smUp: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 44\n    }\n  }, __jsx(PopupState, {\n    variant: \"popover\",\n    popupId: \"base-menu\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 48\n    }\n  }, function (popupState) {\n    return __jsx(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 48\n      }\n    }, __jsx(IconButton, _extends({}, bindTrigger(popupState), {\n      style: {\n        padding: 8,\n        marginLeft: 6\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 52\n      }\n    }), __jsx(MenuIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 56\n      }\n    })), __jsx(Menu, _extends({}, bindMenu(popupState), {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 52\n      }\n    }), isChangeHotel && !isLoginWrapper ? __jsx(MenuItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 64\n      }\n    }, __jsx(Button, {\n      startIcon: __jsx(BusinessIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 87\n        }\n      }),\n      onClick: function onClick() {\n        return setToState(\"guest\", [\"isHotelListOpen\"], true);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 68\n      }\n    }, state.changeHotelRefno ? state.changeHotelName : t('str_chooseHotel'))) : null, langSelect && __jsx(MenuItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 64\n      }\n    }, isLoginWrapper ? __jsx(LocaleSwitcher, {\n      isPortal: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 86\n      }\n    }) : __jsx(LocaleSwitcher, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 115\n      }\n    })), !Router.pathname.includes('survey') && loginButton && !isLoggedIn && __jsx(MenuItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 60\n      }\n    }, isLoginWrapper ? __jsx(Button, {\n      color: \"primary\",\n      variant: \"contained\",\n      className: classes.headerLoginButton,\n      onClick: function onClick() {\n        return setOpen(true);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 68\n      }\n    }, t(\"str_login\")) : __jsx(Link, {\n      href: '/guest/login',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 68\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 72\n      }\n    }, __jsx(Button, {\n      onClick: handleResetState,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 76\n      }\n    }, t('str_login')))))));\n  }))), isLoggedIn && !isKiosk && __jsx(Grid, {\n    item: true,\n    className: classes.noPrint,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 40\n    }\n  }, __jsx(PopupState, {\n    variant: \"popover\",\n    popupId: \"login-avatar-menu\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 44\n    }\n  }, function (popupState) {\n    return __jsx(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 52\n      }\n    }, isShowFullName ? __jsx(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 60\n      }\n    }, __jsx(Hidden, {\n      xsDown: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 64\n      }\n    }, __jsx(Divider, {\n      className: classes.dividerStyle,\n      orientation: \"vertical\",\n      flexItem: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 79\n      }\n    })), __jsx(Typography, {\n      className: classes.loginName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 64\n      }\n    }, loginfo === null || loginfo === void 0 ? void 0 : loginfo.fullname), __jsx(IconButton, _extends({}, bindTrigger(popupState), {\n      style: {\n        padding: 8,\n        marginLeft: 6\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 64\n      }\n    }), __jsx(Avatar, {\n      src: isGuestProfile ? (state === null || state === void 0 ? void 0 : state.agencyProfilePhoto) || '' : (state === null || state === void 0 ? void 0 : state.clientProfilePhoto) || '',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 68\n      }\n    }))) : __jsx(IconButton, _extends({}, bindTrigger(popupState), {\n      style: {\n        padding: 8,\n        marginLeft: 6\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 60\n      }\n    }), __jsx(Avatar, {\n      src: isGuestProfile ? (state === null || state === void 0 ? void 0 : state.agencyProfilePhoto) || '' : (state === null || state === void 0 ? void 0 : state.clientProfilePhoto) || '',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 64\n      }\n    })), __jsx(Menu, _extends({}, bindMenu(popupState), {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 56\n      }\n    }), __jsx(Hidden, {\n      smUp: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 60\n      }\n    }, isChangeHotel && !isLoginWrapper ? __jsx(MenuItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 64\n      }\n    }, __jsx(Button, {\n      startIcon: __jsx(BusinessIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 87\n        }\n      }),\n      onClick: function onClick() {\n        return setToState(\"guest\", [\"isHotelListOpen\"], true);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 68\n      }\n    }, state.changeHotelRefno ? state.changeHotelName : t('str_chooseHotel'))) : null, langSelect && __jsx(MenuItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 64\n      }\n    }, isLoginWrapper ? __jsx(LocaleSwitcher, {\n      isPortal: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 86\n      }\n    }) : __jsx(LocaleSwitcher, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 115\n      }\n    }))), __jsx(MenuItem, {\n      onClick: function onClick() {\n        popupState.close();\n        setFaqDialog(true);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 60\n      }\n    }, __jsx(ListItemIcon, {\n      className: classes.listItemIcon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 64\n      }\n    }, __jsx(HelpOutlineIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 68\n      }\n    })), __jsx(ListItemText, {\n      primary: t('str_faq'),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 64\n      }\n    })), __jsx(MenuItem, {\n      onClick: function onClick() {\n        popupState.close();\n        setChangePassDialogOpen(true);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 60\n      }\n    }, __jsx(ListItemIcon, {\n      className: classes.listItemIcon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 64\n      }\n    }, __jsx(LockIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 68\n      }\n    })), __jsx(ListItemText, {\n      primary: t('str_changePassword'),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 64\n      }\n    })), isLoggedIn && __jsx(MenuItem, {\n      onClick: function onClick() {\n        popupState.close();\n        handleClickLogout();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 64\n      }\n    }, __jsx(ListItemIcon, {\n      className: classes.listItemIcon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 68\n      }\n    }, __jsx(ExitToAppIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 72\n      }\n    })), __jsx(ListItemText, {\n      primary: t('str_logout'),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 68\n      }\n    }))));\n  })))))))), GENERAL_SETTINGS.hotelSettings.faqshow && isLoggedIn && __jsx(Faq, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 17\n    }\n  }, __jsx(DialogFaq, {\n    open: faqDialog,\n    onClose: function onClose() {\n      return setFaqDialog(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 21\n    }\n  })), isChangeHotel && __jsx(Dialog, {\n    open: state.isHotelListOpen,\n    onClose: function onClose() {\n      return setToState(\"guest\", [\"isHotelListOpen\"], false);\n    },\n    \"aria-labelledby\": \"form-dialog-title\",\n    maxWidth: \"md\",\n    fullWidth: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 13\n    }\n  }, __jsx(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 17\n    }\n  }, t('str_chooseYourHotel')), __jsx(DialogContent, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 17\n    }\n  }, __jsx(SelectHotel, {\n    onClose: function onClose() {\n      return setToState(\"guest\", [\"isHotelListOpen\"], false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 21\n    }\n  })), __jsx(DialogActions, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      return setToState(\"guest\", [\"isHotelListOpen\"], false);\n    },\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 21\n    }\n  }, t('str_cancel')))), isLoggedIn ? __jsx(ChangePassword, {\n    dialogOpen: changePassDialogOpen,\n    onClose: function onClose(e) {\n      return setChangePassDialogOpen(e);\n    },\n    buttonVisible: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 27\n    }\n  }) : null);\n};\n\n_s(Header, \"kG/jusj8C+xArwLT1G4rqNwTSkM=\", false, function () {\n  return [useStyles, useRouter, useTranslation, useOrestAction, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Header;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    state: state.formReducer.guest\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateState: function updateState(stateType, stateName, value) {\n      return dispatch(_updateState(stateType, stateName, value));\n    },\n    setToState: function setToState(stateType, stateName, value) {\n      return dispatch(_setToState(stateType, stateName, value));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/layout/Header.js"],"names":["React","useContext","useEffect","useState","useRef","connect","setToState","updateState","AppBar","Toolbar","Button","Container","Link","makeStyles","styles","WebCmsGlobal","LocaleSwitcher","Grid","Hidden","useOrestAction","useSelector","useRouter","axios","useTranslation","Menu","MenuItem","Avatar","ListItemText","IconButton","ListItemIcon","ExitToAppIcon","HelpOutlineIcon","Faq","Dialog","DialogActions","DialogContent","DialogTitle","SelectHotel","BusinessIcon","PopupState","bindTrigger","bindMenu","DialogFaq","LoginDialog","MenuIcon","ChangePassword","LockIcon","Typography","Divider","useStyles","Header","props","langSelect","loginButton","state","isLoginWrapper","isShowFullName","isGuestProfile","classes","Router","GENERAL_SETTINGS","WEBCMS_DATA","t","appBarRef","deleteOrestCurrentUserInfo","resetOrestState","isLoggedIn","orest","currentUser","auth","token","access_token","clientBase","client","loginfo","faqDialog","setFaqDialog","open","setOpen","changePassDialogOpen","setChangePassDialogOpen","clientBeforeLoader","active","mid","type","clientProfilePhoto","agencyProfilePhoto","url","OREST_URL","headers","method","responseType","params","code","masterid","hotelrefno","HOTELREFNO","then","r","status","blob","Blob","data","URL","createObjectURL","handleResetState","handleClickLogout","ISPORTAL","pathname","push","query","menu","shallow","isKiosk","kiosk","isChangeHotel","ISCHAIN","openLoginDialog","minHeight","current","offsetHeight","appBar","toolbarDestinationPortal","toolBar","container","includes","STATIC_URL","assets","images","logo","headerLogo","favIcon","objectFit","alignSelf","noPrint","width","changeHotelRefno","changeHotelName","headerLoginButton","popupState","padding","marginLeft","display","alignItems","dividerStyle","loginName","fullname","close","listItemIcon","hotelSettings","faqshow","isHotelListOpen","e","mapStateToProps","formReducer","guest","mapDispatchToProps","dispatch","stateType","stateName","value"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAU,IAAVA,WAAT,EAAqBC,WAAW,IAAXA,YAArB,QAAwC,eAAxC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,cAAT,QAA+B,aAA/B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,uCAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,GAAP,MAAgB,wCAAhB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,UAAP,IAAqBC,WAArB,EAAkCC,QAAlC,QAAkD,yBAAlD;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,cAAP,MAA2B,yCAA3B;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAAQC,UAAR,QAAyB,mBAAzB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,IAAMC,SAAS,GAAGpC,UAAU,CAACC,MAAD,CAA5B;;AAEA,IAAMoC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AAAA;;AAAA;;AAAA,MACdC,UADc,GAC8FD,KAD9F,CACdC,UADc;AAAA,MACFC,WADE,GAC8FF,KAD9F,CACFE,WADE;AAAA,MACWC,KADX,GAC8FH,KAD9F,CACWG,KADX;AAAA,MACkBhD,UADlB,GAC8F6C,KAD9F,CACkB7C,UADlB;AAAA,MAC8BC,WAD9B,GAC8F4C,KAD9F,CAC8B5C,WAD9B;AAAA,MAC2CgD,cAD3C,GAC8FJ,KAD9F,CAC2CI,cAD3C;AAAA,MAC2DC,cAD3D,GAC8FL,KAD9F,CAC2DK,cAD3D;AAAA,MAC2EC,cAD3E,GAC8FN,KAD9F,CAC2EM,cAD3E;AAEtB,MAAMC,OAAO,GAAGT,SAAS,EAAzB;AACA,MAAMU,MAAM,GAAGtC,SAAS,EAAxB;;AAHsB,oBAIoBpB,UAAU,CAACc,YAAD,CAJ9B;AAAA,MAId6C,gBAJc,eAIdA,gBAJc;AAAA,MAIIC,WAJJ,eAIIA,WAJJ;;AAAA,wBAKRtC,cAAc,EALN;AAAA,MAKduC,CALc,mBAKdA,CALc;;AAMtB,MAAMC,SAAS,GAAG3D,MAAM,EAAxB,CANsB,CAQtB;;AARsB,wBASkCe,cAAc,EAThD;AAAA,MASd6C,0BATc,mBASdA,0BATc;AAAA,MAScC,eATd,mBAScA,eATd;;AAUtB,MAAMC,UAAU,GAAG9C,WAAW,CAAC,UAACkC,KAAD;AAAA,WAAWA,KAAK,CAACa,KAAN,CAAYC,WAAZ,IAA2Bd,KAAK,CAACa,KAAN,CAAYC,WAAZ,CAAwBC,IAA9D;AAAA,GAAD,CAA9B;AACA,MAAMC,KAAK,GAAGlD,WAAW,CAAC,UAACkC,KAAD;AAAA;;AAAA,WAAW,CAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,4BAAAA,KAAK,CAAEa,KAAP,uFAAcC,WAAd,0GAA2BC,IAA3B,kFAAiCE,YAAjC,KAAiD,KAA5D;AAAA,GAAD,CAAzB;AACA,MAAMC,UAAU,GAAGpD,WAAW,CAAC,UAACkC,KAAD;AAAA;;AAAA,WAAW,CAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,6BAAAA,KAAK,CAAEa,KAAP,uFAAcb,KAAd,4EAAqBmB,MAArB,KAA+B,KAA1C;AAAA,GAAD,CAA9B;AACA,MAAMC,OAAO,GAAGtD,WAAW,CAAC,UAAAkC,KAAK;AAAA;;AAAA,WAAI,CAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,6BAAAA,KAAK,CAAEa,KAAP,yFAAcC,WAAd,gFAA2BM,OAA3B,KAAsC,KAA1C;AAAA,GAAN,CAA3B,CAbsB,CAetB;;AAfsB,kBAgBYvE,QAAQ,CAAC,KAAD,CAhBpB;AAAA,MAgBfwE,SAhBe;AAAA,MAgBJC,YAhBI;;AAAA,mBAiBEzE,QAAQ,CAAC,KAAD,CAjBV;AAAA,MAiBf0E,IAjBe;AAAA,MAiBTC,OAjBS;;AAAA,mBAkBkC3E,QAAQ,CAAC,KAAD,CAlB1C;AAAA,MAkBf4E,oBAlBe;AAAA,MAkBOC,uBAlBP;;AAoBtB,MAAMC,kBAAkB;AAAA,wEAAG,iBAAOC,MAAP,EAAeC,GAAf,EAAoBC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA,oBACnB,CAACA,IAAI,KAAK,QAAT,IAAqB9B,KAAK,CAAC+B,kBAAN,KAA6B,IAAlD,IAA0DD,IAAI,KAAK,QAAT,IAAqB9B,KAAK,CAACgC,kBAAN,KAA6B,IAA7G,KAAsHH,GAAtH,IAA6Hb,KAD1G;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAEfhD,KAAK,CAAC;AACNiE,gBAAAA,GAAG,YAAK3B,gBAAgB,CAAC4B,SAAtB,yBADG;AAENC,gBAAAA,OAAO,EAAE;AACL,oDAA2BnB,KAA3B;AADK,iBAFH;AAKNoB,gBAAAA,MAAM,EAAE,KALF;AAMNC,gBAAAA,YAAY,EAAE,aANR;AAONC,gBAAAA,MAAM,EAAE;AACJC,kBAAAA,IAAI,EAAE,OADF;AAEJC,kBAAAA,QAAQ,EAAEX,GAFN;AAGJY,kBAAAA,UAAU,EAAEnC,gBAAgB,CAACoC;AAHzB;AAPF,eAAD,CAAL,CAYDC,IAZC,CAYI,UAACC,CAAD,EAAO;AACX,oBAAIhB,MAAJ,EAAY;AACR,sBAAIgB,CAAC,CAACC,MAAF,KAAa,GAAjB,EAAsB;AAClB,wBAAIC,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACH,CAAC,CAACI,IAAH,CAAT,EAAmB;AAAElB,sBAAAA,IAAI,EAAEc,CAAC,CAACI,IAAF,CAAOlB;AAAf,qBAAnB,CAAX;AACA,wBAAIG,GAAG,GAAGgB,GAAG,CAACC,eAAJ,CAAoBJ,IAApB,CAAV;;AACA,wBAAGhB,IAAI,KAAK,QAAZ,EAAsB;AAClB7E,sBAAAA,WAAW,CAAC,OAAD,EAAU,oBAAV,EAAgCgF,GAAhC,CAAX;AACH,qBAFD,MAEO,IAAGH,IAAI,KAAK,QAAZ,EAAsB;AACzB7E,sBAAAA,WAAW,CAAC,OAAD,EAAU,oBAAV,EAAgCgF,GAAhC,CAAX;AACH;AACJ,mBARD,MAQK;AACD,wBAAGH,IAAI,KAAK,QAAZ,EAAsB;AAClB7E,sBAAAA,WAAW,CAAC,OAAD,EAAU,oBAAV,EAAgC,IAAhC,CAAX;AACH,qBAFD,MAEO,IAAG6E,IAAI,KAAK,QAAZ,EAAsB;AACzB7E,sBAAAA,WAAW,CAAC,OAAD,EAAU,oBAAV,EAAgC,IAAhC,CAAX;AACH;AACJ;;AACD,sBAAG6E,IAAI,KAAK,QAAZ,EAAsB7E,WAAW,CAAC,OAAD,EAAU,WAAV,EAAuBiE,UAAU,CAACW,GAAlC,CAAX;AACzB;AACJ,eA/BG,CAFe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAlBF,kBAAkB;AAAA;AAAA;AAAA,KAAxB;;AAqCA/E,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIgF,MAAM,GAAG,IAAb;AAEAD,IAAAA,kBAAkB,CAACC,MAAD,EAASV,UAAT,aAASA,UAAT,uBAASA,UAAU,CAAEW,GAArB,EAA0B,QAA1B,CAAlB;;AAEA,QAAG1B,cAAH,EAAmB;AACfwB,MAAAA,kBAAkB,CAACC,MAAD,EAASR,OAAT,aAASA,OAAT,uBAASA,OAAO,CAAES,GAAlB,EAAuB,QAAvB,CAAlB;AACH;;AAED,WAAO,YAAM;AACTD,MAAAA,MAAM,GAAG,KAAT;AACH,KAFD;AAGH,GAZQ,EAYN,CAACV,UAAD,CAZM,CAAT;;AAcA,MAAMiC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC3BlG,IAAAA,WAAW,CAAC,OAAD,EAAU,aAAV,EAAyB,KAAzB,CAAX;AACAA,IAAAA,WAAW,CAAC,OAAD,EAAU,WAAV,EAAuB,KAAvB,CAAX;AACAA,IAAAA,WAAW,CAAC,OAAD,EAAU,oBAAV,EAAgC,KAAhC,CAAX;AACAA,IAAAA,WAAW,CAAC,OAAD,EAAU,mBAAV,EAA+B,KAA/B,CAAX;AACAD,IAAAA,UAAU,CAAC,OAAD,EAAU,CAAC,SAAD,EAAY,WAAZ,CAAV,EAAoC,IAApC,CAAV;AACA0D,IAAAA,0BAA0B;AAC1BC,IAAAA,eAAe;AAClB,GARD;;AAUA,MAAMyC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC5B,QAAG,CAAC9C,gBAAgB,CAAC+C,QAAlB,IAA8BhD,MAAM,CAACiD,QAAP,KAAoB,QAArD,EAA8D;AAC1DjD,MAAAA,MAAM,CAACkD,IAAP,CAAY;AACRD,QAAAA,QAAQ,EAAEjD,MAAM,CAACiD,QADT;AAERE,QAAAA,KAAK,EAAE;AACHC,UAAAA,IAAI,EAAE;AADH,SAFC;AAKRC,QAAAA,OAAO,EAAE;AALD,OAAZ;AAOH;;AAED,QAAG,CAACpD,gBAAgB,CAAC+C,QAArB,EAA+B;AAC3BpG,MAAAA,WAAW,CAAC,OAAD,EAAU,kBAAV,EAA8B,KAA9B,CAAX;AACH;;AAEDkG,IAAAA,gBAAgB;AACnB,GAhBD;;AAkBA,MAAMQ,OAAO,GAAGtD,MAAM,CAACmD,KAAP,CAAaI,KAAb,KAAuB,MAAvC;AACA,MAAIC,aAAa,GAAG,CAAAvD,gBAAgB,SAAhB,IAAAA,gBAAgB,WAAhB,YAAAA,gBAAgB,CAAEwD,OAAlB,KAA6B,KAAjD;AAEA,SACI,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,WAAD;AACI,IAAA,IAAI,EAAEvC,IAAI,IAAIvB,KAAK,CAAC+D,eADxB;AAEI,IAAA,OAAO,EAAE,iBAAClB,MAAD,EAAY;AACjBrB,MAAAA,OAAO,CAACqB,MAAD,CAAP;AACA7F,MAAAA,UAAU,CAAC,OAAD,EAAU,CAAC,iBAAD,CAAV,EAA+B6F,MAA/B,CAAV;AACH,KALL;AAMI,IAAA,YAAY,EAAC,mBANjB;AAOI,IAAA,cAAc,MAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAUI;AAAK,IAAA,KAAK,EAAE;AAACmB,MAAAA,SAAS,EAAE,CAAAvD,SAAS,SAAT,IAAAA,SAAS,WAAT,kCAAAA,SAAS,CAAEwD,OAAX,0EAAoBC,YAApB,KAAoC;AAAhD,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,EAWI,MAAC,MAAD;AAAQ,IAAA,QAAQ,EAAC,OAAjB;AAAyB,IAAA,SAAS,EAAE9D,OAAO,CAAC+D,MAA5C;AAAoD,IAAA,GAAG,EAAE1D,SAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,OAAD;AAAS,IAAA,SAAS,EAAER,cAAc,GAAGG,OAAO,CAACgE,wBAAX,GAAsChE,OAAO,CAACiE,OAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAEpE,cAAc,GAAGG,OAAO,CAACkE,SAAX,GAAuB,EAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAQ,IAAA,MAAM,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAACjE,MAAM,CAACiD,QAAP,CAAgBiB,QAAhB,CAAyB,MAAzB,CAAD,GACG,MAAC,IAAD;AAAM,IAAA,IAAI,EAAE,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,GAAG,EAAEjE,gBAAgB,CAACkE,UAAjB,GAA8BjE,WAAW,CAACkE,MAAZ,CAAmBC,MAAnB,CAA0BC,IADjE;AAEI,IAAA,GAAG,EAAC,MAFR;AAGI,IAAA,SAAS,EAAEvE,OAAO,CAACwE,UAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADH,GAWG;AACI,IAAA,GAAG,EAAEtE,gBAAgB,CAACkE,UAAjB,GAA8BjE,WAAW,CAACkE,MAAZ,CAAmBC,MAAnB,CAA0BC,IADjE;AAEI,IAAA,GAAG,EAAC,MAFR;AAGI,IAAA,SAAS,EAAEvE,OAAO,CAACwE,UAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZR,CADJ,CADJ,EAsBI,MAAC,MAAD;AAAQ,IAAA,IAAI,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKrE,WAAW,CAACkE,MAAZ,CAAmBC,MAAnB,CAA0BG,OAA1B,GAAoC,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAY,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAACC,MAAAA,SAAS,EAAE;AAAZ,KAAf;AAAoC,IAAA,OAAO,EAAC,QAA5C;AAAqD,IAAA,GAAG,EAAC,MAAzD;AAAgE,IAAA,GAAG,EAAExE,gBAAgB,CAACkE,UAAjB,GAA8BjE,WAAW,CAACkE,MAAZ,CAAmBC,MAAnB,CAA0BG,OAA7H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAZ,CAApC,GAAwM,IAD7M,CADJ,CAtBJ,EA2BI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAoB,IAAA,KAAK,EAAE;AAACE,MAAAA,SAAS,EAAE;AAAZ,KAA3B;AAAkD,IAAA,SAAS,EAAE3E,OAAO,CAAC4E,OAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,UAAzB;AAAqC,IAAA,UAAU,EAAE,QAAjD;AAA2D,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAQ,IAAA,MAAM,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCpB,aAAa,IAAI,CAAC5D,cAAlB,GACG,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAnB;AAAqC,IAAA,OAAO,EAAE;AAAA,aAAKjD,UAAU,CAAC,OAAD,EAAU,CAAC,iBAAD,CAAV,EAA+B,IAA/B,CAAf;AAAA,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMgD,KAAK,CAACkF,gBAAN,GAAyBlF,KAAK,CAACmF,eAA/B,GAAiD3E,CAAC,CAAC,iBAAD,CADxD,CADJ,CADH,GAMG,IAPJ,EAQCV,UAAU,IACP,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKG,cAAc,GAAG,MAAC,cAAD;AAAgB,IAAA,QAAQ,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAgC,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADnD,CATJ,EAaC,CAACI,MAAM,CAACiD,QAAP,CAAgBiB,QAAhB,CAAyB,QAAzB,CAAD,IAAuCxE,WAAvC,IAAsD,CAACa,UAAvD,IAAqE,CAAC+C,OAAtE,IACO,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK1D,cAAc,GACX,MAAC,MAAD;AACI,IAAA,KAAK,EAAE,SADX;AAEI,IAAA,OAAO,EAAC,WAFZ;AAGI,IAAA,SAAS,EAAEG,OAAO,CAACgF,iBAHvB;AAII,IAAA,OAAO,EAAE;AAAA,aAAM5D,OAAO,CAAC,IAAD,CAAb;AAAA,KAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMKhB,CAAC,CAAC,WAAD,CANN,CADW,GAUX,MAAC,IAAD;AAAM,IAAA,IAAI,EAAE,cAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAE2C,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoC3C,CAAC,CAAC,WAAD,CAArC,CADJ,CADJ,CAXR,CAdR,CADJ,EAmCKI,UAAU,IAAI+C,OAAd,IACG,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,SAAS,EAAEvD,OAAO,CAAC4E,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAE5B,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqC5C,CAAC,CAAC,YAAD,CAAtC,CADJ,CApCR,EAwCK,CAACI,UAAD,IACG,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,SAAS,EAAER,OAAO,CAAC4E,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAQ,IAAA,IAAI,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,SAApB;AAA8B,IAAA,OAAO,EAAC,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH,UAACK,UAAD;AAAA,WACG,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,UAAD,eAAiBnG,WAAW,CAACmG,UAAD,CAA5B;AAA0C,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE,CAAX;AAAcC,QAAAA,UAAU,EAAE;AAA1B,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAII,MAAC,IAAD,eAAUpG,QAAQ,CAACkG,UAAD,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACSxB,aAAa,IAAI,CAAC5D,cAAlB,GACG,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,MAAD;AAAQ,MAAA,SAAS,EAAE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAnB;AAAqC,MAAA,OAAO,EAAE;AAAA,eAAKjD,UAAU,CAAC,OAAD,EAAU,CAAC,iBAAD,CAAV,EAA+B,IAA/B,CAAf;AAAA,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACMgD,KAAK,CAACkF,gBAAN,GAAyBlF,KAAK,CAACmF,eAA/B,GAAiD3E,CAAC,CAAC,iBAAD,CADxD,CADJ,CADH,GAMG,IAPZ,EAQSV,UAAU,IACP,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKG,cAAc,GAAG,MAAC,cAAD;AAAgB,MAAA,QAAQ,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,GAAgC,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADnD,CATZ,EAaK,CAACI,MAAM,CAACiD,QAAP,CAAgBiB,QAAhB,CAAyB,QAAzB,CAAD,IAAuCxE,WAAvC,IAAsD,CAACa,UAAvD,IACG,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKX,cAAc,GACX,MAAC,MAAD;AACI,MAAA,KAAK,EAAE,SADX;AAEI,MAAA,OAAO,EAAC,WAFZ;AAGI,MAAA,SAAS,EAAEG,OAAO,CAACgF,iBAHvB;AAII,MAAA,OAAO,EAAE;AAAA,eAAM5D,OAAO,CAAC,IAAD,CAAb;AAAA,OAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMKhB,CAAC,CAAC,WAAD,CANN,CADW,GAUX,MAAC,IAAD;AAAM,MAAA,IAAI,EAAE,cAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,MAAD;AAAQ,MAAA,OAAO,EAAE2C,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoC3C,CAAC,CAAC,WAAD,CAArC,CADJ,CADJ,CAXR,CAdR,CAJJ,CADH;AAAA,GADG,CADJ,CADJ,CAzCR,EAyFKI,UAAU,IAAI,CAAC+C,OAAf,IACG,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAY,IAAA,SAAS,EAAEvD,OAAO,CAAC4E,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,SAApB;AAA8B,IAAA,OAAO,EAAC,mBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,UAACK,UAAD;AAAA,WACG,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKnF,cAAc,GACX;AAAK,MAAA,KAAK,EAAE;AAACsF,QAAAA,OAAO,EAAE,MAAV;AAAkBC,QAAAA,UAAU,EAAE;AAA9B,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,MAAD;AAAQ,MAAA,MAAM,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAe,MAAC,OAAD;AAAS,MAAA,SAAS,EAAErF,OAAO,CAACsF,YAA5B;AAA0C,MAAA,WAAW,EAAC,UAAtD;AAAiE,MAAA,QAAQ,MAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAf,CADJ,EAEI,MAAC,UAAD;AAAY,MAAA,SAAS,EAAEtF,OAAO,CAACuF,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2CvE,OAA3C,aAA2CA,OAA3C,uBAA2CA,OAAO,CAAEwE,QAApD,CAFJ,EAGI,MAAC,UAAD,eAAiB1G,WAAW,CAACmG,UAAD,CAA5B;AAA0C,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE,CAAX;AAAcC,QAAAA,UAAU,EAAE;AAA1B,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACI,MAAC,MAAD;AAAQ,MAAA,GAAG,EAAEpF,cAAc,GAAG,CAAAH,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEgC,kBAAP,KAA6B,EAAhC,GAAqC,CAAAhC,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAE+B,kBAAP,KAA6B,EAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAHJ,CADW,GASX,MAAC,UAAD,eAAiB7C,WAAW,CAACmG,UAAD,CAA5B;AAA0C,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE,CAAX;AAAcC,QAAAA,UAAU,EAAE;AAA1B,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACI,MAAC,MAAD;AAAQ,MAAA,GAAG,EAAEpF,cAAc,GAAG,CAAAH,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEgC,kBAAP,KAA6B,EAAhC,GAAqC,CAAAhC,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAE+B,kBAAP,KAA6B,EAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAVR,EAcI,MAAC,IAAD,eAAU5C,QAAQ,CAACkG,UAAD,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACI,MAAC,MAAD;AAAQ,MAAA,IAAI,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCxB,aAAa,IAAI,CAAC5D,cAAlB,GACG,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,MAAD;AAAQ,MAAA,SAAS,EAAE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAnB;AAAqC,MAAA,OAAO,EAAE;AAAA,eAAKjD,UAAU,CAAC,OAAD,EAAU,CAAC,iBAAD,CAAV,EAA+B,IAA/B,CAAf;AAAA,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACMgD,KAAK,CAACkF,gBAAN,GAAyBlF,KAAK,CAACmF,eAA/B,GAAiD3E,CAAC,CAAC,iBAAD,CADxD,CADJ,CADH,GAMG,IAPJ,EAQCV,UAAU,IACP,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKG,cAAc,GAAG,MAAC,cAAD;AAAgB,MAAA,QAAQ,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,GAAgC,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADnD,CATJ,CADJ,EAeI,MAAC,QAAD;AAAU,MAAA,OAAO,EAAE,mBAAM;AACrBoF,QAAAA,UAAU,CAACQ,KAAX;AACAvE,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,OAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII,MAAC,YAAD;AAAc,MAAA,SAAS,EAAElB,OAAO,CAAC0F,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,EAOI,MAAC,YAAD;AAAc,MAAA,OAAO,EAAEtF,CAAC,CAAC,SAAD,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CAfJ,EAwBI,MAAC,QAAD;AAAU,MAAA,OAAO,EAAE,mBAAM;AACrB6E,QAAAA,UAAU,CAACQ,KAAX;AACAnE,QAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACH,OAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII,MAAC,YAAD;AAAc,MAAA,SAAS,EAAEtB,OAAO,CAAC0F,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,EAOI,MAAC,YAAD;AAAc,MAAA,OAAO,EAAEtF,CAAC,CAAC,oBAAD,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CAxBJ,EAiCKI,UAAU,IACP,MAAC,QAAD;AAAU,MAAA,OAAO,EAAE,mBAAM;AACrByE,QAAAA,UAAU,CAACQ,KAAX;AACAzC,QAAAA,iBAAiB;AACpB,OAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII,MAAC,YAAD;AAAc,MAAA,SAAS,EAAEhD,OAAO,CAAC0F,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,EAOI,MAAC,YAAD;AAAc,MAAA,OAAO,EAAEtF,CAAC,CAAC,YAAD,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CAlCR,CAdJ,CADH;AAAA,GADL,CADJ,CA1FR,CADJ,CA3BJ,CADH,CADJ,CADJ,CAXJ,EA6MMF,gBAAgB,CAACyF,aAAjB,CAA+BC,OAA/B,IAA0CpF,UAA3C,IACG,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AACI,IAAA,IAAI,EAAES,SADV;AAEI,IAAA,OAAO,EAAE;AAAA,aAAMC,YAAY,CAAC,KAAD,CAAlB;AAAA,KAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CA9MR,EAqNKuC,aAAa,IACd,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAE7D,KAAK,CAACiG,eAApB;AAAqC,IAAA,OAAO,EAAE;AAAA,aAAKjJ,UAAU,CAAC,OAAD,EAAU,CAAC,iBAAD,CAAV,EAA+B,KAA/B,CAAf;AAAA,KAA9C;AAAoG,uBAAgB,mBAApH;AAAwI,IAAA,QAAQ,EAAC,IAAjJ;AAAsJ,IAAA,SAAS,MAA/J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,WAAD;AAAa,IAAA,EAAE,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCwD,CAAC,CAAC,qBAAD,CAAtC,CADJ,EAEI,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,WAAD;AAAa,IAAA,OAAO,EAAE;AAAA,aAAMxD,UAAU,CAAC,OAAD,EAAU,CAAC,iBAAD,CAAV,EAA+B,KAA/B,CAAhB;AAAA,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,EAKI,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAKA,UAAU,CAAC,OAAD,EAAU,CAAC,iBAAD,CAAV,EAA+B,KAA/B,CAAf;AAAA,KAAjB;AAAuE,IAAA,KAAK,EAAC,SAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKwD,CAAC,CAAC,YAAD,CADN,CADJ,CALJ,CAtNJ,EAiOKI,UAAU,GAAG,MAAC,cAAD;AAAgB,IAAA,UAAU,EAAEa,oBAA5B;AAAkD,IAAA,OAAO,EAAE,iBAACyE,CAAD;AAAA,aAAMxE,uBAAuB,CAACwE,CAAD,CAA7B;AAAA,KAA3D;AAA6F,IAAA,aAAa,EAAE,KAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAyH,IAjOxI,CADJ;AAsOH,CA5UD;;GAAMtG,M;UAEcD,S,EACD5B,S,EAEDE,c,EAI0CJ,c,EACrCC,W,EACLA,W,EACKA,W,EACHA,W;;;KAbd8B,M;;AA+UN,IAAMuG,eAAe,GAAG,SAAlBA,eAAkB,CAACnG,KAAD,EAAW;AAC/B,SAAO;AACHA,IAAAA,KAAK,EAAEA,KAAK,CAACoG,WAAN,CAAkBC;AADtB,GAAP;AAGH,CAJD;;AAMA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD;AAAA,SAAe;AACtCtJ,IAAAA,WAAW,EAAE,qBAACuJ,SAAD,EAAYC,SAAZ,EAAuBC,KAAvB;AAAA,aAAiCH,QAAQ,CAACtJ,YAAW,CAACuJ,SAAD,EAAYC,SAAZ,EAAuBC,KAAvB,CAAZ,CAAzC;AAAA,KADyB;AAEtC1J,IAAAA,UAAU,EAAE,oBAACwJ,SAAD,EAAYC,SAAZ,EAAuBC,KAAvB;AAAA,aAAiCH,QAAQ,CAACvJ,WAAU,CAACwJ,SAAD,EAAYC,SAAZ,EAAuBC,KAAvB,CAAX,CAAzC;AAAA;AAF0B,GAAf;AAAA,CAA3B;;AAKA,eAAe3J,OAAO,CAACoJ,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C1G,MAA7C,CAAf","sourcesContent":["import React, { useContext, useEffect, useState, useRef } from 'react'\nimport { connect } from 'react-redux'\nimport { setToState, updateState } from 'state/actions'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Button from '@material-ui/core/Button'\nimport Container from '@material-ui/core/Container'\nimport Link from 'next/link'\nimport { makeStyles } from '@material-ui/core/styles'\nimport styles from './style/Header.style'\nimport WebCmsGlobal from 'components/webcms-global'\nimport LocaleSwitcher from 'components/LocaleSwitcher'\nimport Grid from '@material-ui/core/Grid'\nimport Hidden from '@material-ui/core/Hidden';\nimport { useOrestAction } from 'model/orest'\nimport { useSelector } from 'react-redux'\nimport { useRouter } from 'next/router'\nimport axios from 'axios'\nimport useTranslation from 'lib/translations/hooks/useTranslation'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Avatar from '@material-ui/core/Avatar'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport IconButton from '@material-ui/core/IconButton'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp'\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline'\nimport Faq from 'components/guest/public/components/faq'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport SelectHotel from '../guest/public/SelectHotel'\nimport BusinessIcon from '@material-ui/icons/Business'\nimport PopupState, { bindTrigger, bindMenu } from 'material-ui-popup-state'\nimport DialogFaq from \"../guest/public/components/DialogFaq\"\nimport LoginDialog from \"../LoginComponent/LoginDialog\"\nimport MenuIcon from '@material-ui/icons/Menu'\nimport ChangePassword from '../guest/account/Details/ChangePassword'\nimport LockIcon from '@material-ui/icons/Lock'\nimport {Typography} from \"@material-ui/core\"\nimport Divider from \"@material-ui/core/Divider\"\nconst useStyles = makeStyles(styles)\n\nconst Header = (props) => {\n    const { langSelect, loginButton, state, setToState, updateState, isLoginWrapper, isShowFullName, isGuestProfile } = props\n    const classes = useStyles()\n    const Router = useRouter()\n    const { GENERAL_SETTINGS, WEBCMS_DATA } = useContext(WebCmsGlobal)\n    const { t } = useTranslation()\n    const appBarRef = useRef()\n\n    //redux\n    const { deleteOrestCurrentUserInfo, resetOrestState } = useOrestAction()\n    const isLoggedIn = useSelector((state) => state.orest.currentUser && state.orest.currentUser.auth)\n    const token = useSelector((state) => state?.orest?.currentUser?.auth?.access_token || false)\n    const clientBase = useSelector((state) => state?.orest?.state?.client || false)\n    const loginfo = useSelector(state => state?.orest?.currentUser?.loginfo || false)\n\n    //state\n    const [faqDialog, setFaqDialog] = useState(false)\n    const [open, setOpen] = useState(false)\n    const [changePassDialogOpen, setChangePassDialogOpen] = useState(false)\n\n    const clientBeforeLoader = async (active, mid, type) => {\n        if ((type === 'client' && state.clientProfilePhoto !== null || type === 'agency' && state.agencyProfilePhoto !== null) && mid && token) {\n          await axios({\n                url: `${GENERAL_SETTINGS.OREST_URL}/tools/file/download`,\n                headers: {\n                    \"Authorization\": `Bearer ${token}`\n                },\n                method: 'get',\n                responseType: 'arraybuffer',\n                params: {\n                    code: 'PHOTO',\n                    masterid: mid,\n                    hotelrefno: GENERAL_SETTINGS.HOTELREFNO\n                },\n            }).then((r) => {\n                if (active) {\n                    if (r.status === 200) {\n                        let blob = new Blob([r.data], { type: r.data.type })\n                        let url = URL.createObjectURL(blob)\n                        if(type === 'client') {\n                            updateState('guest', 'clientProfilePhoto', url)\n                        } else if(type === 'agency') {\n                            updateState('guest', 'agencyProfilePhoto', url)\n                        }\n                    }else{\n                        if(type === 'client') {\n                            updateState('guest', 'clientProfilePhoto', null)\n                        } else if(type === 'agency') {\n                            updateState('guest', 'agencyProfilePhoto', null)\n                        }\n                    }\n                    if(type === 'client') updateState('guest', 'clientMid', clientBase.mid)\n                }\n            })\n        }\n    }\n\n    useEffect(() => {\n        let active = true\n\n        clientBeforeLoader(active, clientBase?.mid, 'client')\n\n        if(isGuestProfile) {\n            clientBeforeLoader(active, loginfo?.mid, 'agency')\n        }\n\n        return () => {\n            active = false\n        }\n    }, [clientBase])\n\n    const handleResetState = () => {\n        updateState('guest', 'memCardNext', false)\n        updateState('guest', 'clientMid', false)\n        updateState('guest', 'clientProfilePhoto', false)\n        updateState('guest', 'clientLoyaltyCard', false)\n        setToState('guest', ['profile', 'loadGuest'], true)\n        deleteOrestCurrentUserInfo()\n        resetOrestState()\n    }\n\n    const handleClickLogout = () => {\n        if(!GENERAL_SETTINGS.ISPORTAL && Router.pathname === '/guest'){\n            Router.push({\n                pathname: Router.pathname,\n                query: {\n                    menu: 'home',\n                },\n                shallow: true\n            })\n        }\n\n        if(!GENERAL_SETTINGS.ISPORTAL) {\n            updateState('guest', 'changeHotelRefno', false)\n        }\n\n        handleResetState()\n    }\n\n    const isKiosk = Router.query.kiosk === 'true'\n    let isChangeHotel = GENERAL_SETTINGS?.ISCHAIN || false\n\n    return (\n        <React.Fragment>\n            <LoginDialog\n                open={open || state.openLoginDialog}\n                onClose={(status) => {\n                    setOpen(status)\n                    setToState(\"guest\", [\"openLoginDialog\"], status)\n                }}\n                locationName='destinationPortal'\n                isLoginWrapper\n            />\n            <div style={{minHeight: appBarRef?.current?.offsetHeight || 64}} />\n            <AppBar position=\"fixed\" className={classes.appBar} ref={appBarRef}>\n                <Toolbar className={isLoginWrapper ? classes.toolbarDestinationPortal : classes.toolBar}>\n                    <Container maxWidth=\"xl\" className={isLoginWrapper ? classes.container : \"\"}>\n                       <Grid container>\n                           <Hidden xsDown>\n                               <Grid item xs={2}>\n                                   {!Router.pathname.includes('epay') ? (\n                                       <Link href={'/'}>\n                                           <a>\n                                               <img\n                                                   src={GENERAL_SETTINGS.STATIC_URL + WEBCMS_DATA.assets.images.logo}\n                                                   alt=\"logo\"\n                                                   className={classes.headerLogo}\n                                               />\n                                           </a>\n                                       </Link>\n                                   ) : (\n                                       <img\n                                           src={GENERAL_SETTINGS.STATIC_URL + WEBCMS_DATA.assets.images.logo}\n                                           alt=\"logo\"\n                                           className={classes.headerLogo}\n                                       />\n                                   )}\n                               </Grid>\n                           </Hidden>\n                           <Hidden smUp>\n                               <Grid item xs={2}>\n                                   {WEBCMS_DATA.assets.images.favIcon ? <IconButton><Avatar style={{objectFit: 'fill'}} variant=\"square\" alt=\"Logo\" src={GENERAL_SETTINGS.STATIC_URL + WEBCMS_DATA.assets.images.favIcon} /></IconButton> : null}\n                               </Grid>\n                           </Hidden>\n                           <Grid item xs={10}  style={{alignSelf: \"center\"}} className={classes.noPrint}>\n                               <Grid container justify={'flex-end'} alignItems={'center'} style={{ width: 'unset' }}>\n                                   <Hidden xsDown>\n                                   {isChangeHotel && !isLoginWrapper ? (\n                                       <Grid item>\n                                           <Button startIcon={<BusinessIcon />} onClick={()=> setToState(\"guest\", [\"isHotelListOpen\"], true)}>\n                                               { state.changeHotelRefno ? state.changeHotelName : t('str_chooseHotel')}\n                                           </Button>\n                                       </Grid>\n                                   ) : null}\n                                   {langSelect && (\n                                       <Grid item>\n                                           {isLoginWrapper ? <LocaleSwitcher isPortal/> : <LocaleSwitcher />}\n                                       </Grid>\n                                   )}\n                                   {!Router.pathname.includes('survey') && loginButton && !isLoggedIn && !isKiosk && (\n                                           <Grid item>\n                                               {isLoginWrapper ? (\n                                                   <Button\n                                                       color={\"primary\"}\n                                                       variant=\"contained\"\n                                                       className={classes.headerLoginButton}\n                                                       onClick={() => setOpen(true)}\n                                                   >\n                                                       {t(\"str_login\")}\n                                                   </Button>\n                                               ) : (\n                                                   <Link href={'/guest/login'}>\n                                                       <a>\n                                                           <Button onClick={handleResetState}>{t('str_login')}</Button>\n                                                       </a>\n                                                   </Link>\n                                               )}\n                                           </Grid>\n                                       )}\n                                   </Hidden>\n                                   {isLoggedIn && isKiosk && (\n                                       <Grid item className={classes.noPrint}>\n                                           <Button onClick={handleClickLogout}>{t('str_logout')}</Button>\n                                       </Grid>\n                                   )}\n                                   {!isLoggedIn && (\n                                       <Grid item className={classes.noPrint}>\n                                           <Hidden smUp>\n                                               <PopupState variant='popover' popupId='base-menu'>\n                                           {(popupState) => (\n                                               <React.Fragment>\n                                                   <IconButton  {...bindTrigger(popupState)} style={{ padding: 8, marginLeft: 6 }}>\n                                                       <MenuIcon />\n                                                   </IconButton>\n                                                   <Menu {...bindMenu(popupState)}>\n                                                           {isChangeHotel && !isLoginWrapper ? (\n                                                               <MenuItem>\n                                                                   <Button startIcon={<BusinessIcon />} onClick={()=> setToState(\"guest\", [\"isHotelListOpen\"], true)}>\n                                                                       { state.changeHotelRefno ? state.changeHotelName : t('str_chooseHotel')}\n                                                                   </Button>\n                                                               </MenuItem>\n                                                           ) : null}\n                                                           {langSelect && (\n                                                               <MenuItem>\n                                                                   {isLoginWrapper ? <LocaleSwitcher isPortal/> : <LocaleSwitcher />}\n                                                               </MenuItem>\n                                                           )}\n                                                       {!Router.pathname.includes('survey') && loginButton && !isLoggedIn && (\n                                                           <MenuItem>\n                                                               {isLoginWrapper ? (\n                                                                   <Button\n                                                                       color={\"primary\"}\n                                                                       variant=\"contained\"\n                                                                       className={classes.headerLoginButton}\n                                                                       onClick={() => setOpen(true)}\n                                                                   >\n                                                                       {t(\"str_login\")}\n                                                                   </Button>\n                                                               ) : (\n                                                                   <Link href={'/guest/login'}>\n                                                                       <a>\n                                                                           <Button onClick={handleResetState}>{t('str_login')}</Button>\n                                                                       </a>\n                                                                   </Link>\n                                                               )}\n                                                           </MenuItem>\n                                                       )}\n                                                   </Menu>\n                                               </React.Fragment>\n                                           )}\n                                       </PopupState>\n                                           </Hidden>\n                                       </Grid>\n                                   )}\n                                   {isLoggedIn && !isKiosk && (\n                                       <Grid item  className={classes.noPrint}>\n                                           <PopupState variant='popover' popupId='login-avatar-menu'>\n                                               {(popupState) => (\n                                                   <React.Fragment>\n                                                       {isShowFullName ? (\n                                                           <div style={{display: 'flex', alignItems: 'center'}}>\n                                                               <Hidden xsDown><Divider className={classes.dividerStyle} orientation=\"vertical\" flexItem  /></Hidden>\n                                                               <Typography className={classes.loginName}>{loginfo?.fullname}</Typography>\n                                                               <IconButton  {...bindTrigger(popupState)} style={{ padding: 8, marginLeft: 6 }}>\n                                                                   <Avatar src={isGuestProfile ? state?.agencyProfilePhoto || '' : state?.clientProfilePhoto || ''} />\n                                                               </IconButton>\n                                                           </div>\n                                                       ) : (\n                                                           <IconButton  {...bindTrigger(popupState)} style={{ padding: 8, marginLeft: 6 }}>\n                                                               <Avatar src={isGuestProfile ? state?.agencyProfilePhoto || '' : state?.clientProfilePhoto || ''} />\n                                                           </IconButton>\n                                                       )}\n                                                       <Menu {...bindMenu(popupState)}>\n                                                           <Hidden smUp>\n                                                           {isChangeHotel && !isLoginWrapper ? (\n                                                               <MenuItem>\n                                                                   <Button startIcon={<BusinessIcon />} onClick={()=> setToState(\"guest\", [\"isHotelListOpen\"], true)}>\n                                                                       { state.changeHotelRefno ? state.changeHotelName : t('str_chooseHotel')}\n                                                                   </Button>\n                                                               </MenuItem>\n                                                           ) : null}\n                                                           {langSelect && (\n                                                               <MenuItem>\n                                                                   {isLoginWrapper ? <LocaleSwitcher isPortal/> : <LocaleSwitcher />}\n                                                               </MenuItem>\n                                                           )}\n                                                           </Hidden>\n                                                           <MenuItem onClick={() => {\n                                                               popupState.close()\n                                                               setFaqDialog(true)\n                                                           }}>\n                                                               <ListItemIcon className={classes.listItemIcon}>\n                                                                   <HelpOutlineIcon />\n                                                               </ListItemIcon>\n                                                               <ListItemText primary={t('str_faq')} />\n                                                           </MenuItem>\n                                                           <MenuItem onClick={() => {\n                                                               popupState.close()\n                                                               setChangePassDialogOpen(true)\n                                                           }}>\n                                                               <ListItemIcon className={classes.listItemIcon}>\n                                                                   <LockIcon />\n                                                               </ListItemIcon>\n                                                               <ListItemText primary={t('str_changePassword')} />\n                                                           </MenuItem>\n                                                           {isLoggedIn && (\n                                                               <MenuItem onClick={() => {\n                                                                   popupState.close()\n                                                                   handleClickLogout()\n                                                               }}>\n                                                                   <ListItemIcon className={classes.listItemIcon}>\n                                                                       <ExitToAppIcon />\n                                                                   </ListItemIcon>\n                                                                   <ListItemText primary={t('str_logout')} />\n                                                               </MenuItem>\n                                                           )}\n                                                       </Menu>\n                                                   </React.Fragment>\n                                               )}\n                                           </PopupState>\n                                       </Grid>\n                                   )}\n                               </Grid>\n                           </Grid>\n                       </Grid>\n                    </Container>\n                </Toolbar>\n            </AppBar>\n            {(GENERAL_SETTINGS.hotelSettings.faqshow && isLoggedIn) && (\n                <Faq>\n                    <DialogFaq\n                        open={faqDialog}\n                        onClose={() => setFaqDialog(false)}\n                    />\n                </Faq>\n            )}\n            {isChangeHotel && (\n            <Dialog open={state.isHotelListOpen} onClose={()=> setToState(\"guest\", [\"isHotelListOpen\"], false)} aria-labelledby=\"form-dialog-title\" maxWidth=\"md\" fullWidth>\n                <DialogTitle id=\"form-dialog-title\">{t('str_chooseYourHotel')}</DialogTitle>\n                <DialogContent>\n                    <SelectHotel onClose={()=>  setToState(\"guest\", [\"isHotelListOpen\"], false)}/>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={()=> setToState(\"guest\", [\"isHotelListOpen\"], false)} color=\"primary\">\n                        {t('str_cancel')}\n                    </Button>\n                </DialogActions>\n            </Dialog>)}\n            {isLoggedIn ? <ChangePassword dialogOpen={changePassDialogOpen} onClose={(e)=> setChangePassDialogOpen(e)} buttonVisible={false}/>: null}\n           {/*{GENERAL_SETTINGS.hotelSettings.chatenable && <OliveChatClient />}*/}\n        </React.Fragment>\n    )\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        state: state.formReducer.guest,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    updateState: (stateType, stateName, value) => dispatch(updateState(stateType, stateName, value)),\n    setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)\n"]},"metadata":{},"sourceType":"module"}