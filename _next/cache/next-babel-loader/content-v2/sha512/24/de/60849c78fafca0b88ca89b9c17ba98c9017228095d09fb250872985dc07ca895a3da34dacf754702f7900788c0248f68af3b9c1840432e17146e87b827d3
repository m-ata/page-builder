{"ast":null,"code":"import _extends from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\n\nvar _jsxFileName = \"/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/components/faq/qa/EditQA.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Container, Typography, Button, Grid, Box } from \"@material-ui/core\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddText from \"./AddText\";\nimport { COLORS } from \"../../../constants\";\nvar useStyles = makeStyles(function () {\n  return {\n    cursorPointer: {\n      cursor: 'pointer',\n      color: 'silver',\n      marginTop: 16\n    },\n    actionButton: {\n      borderRadius: 20,\n      marginBottom: 16,\n      backgroundColor: COLORS === null || COLORS === void 0 ? void 0 : COLORS.secondary,\n      marginTop: 16\n    },\n    editIcon: {\n      cursor: 'pointer',\n      color: COLORS === null || COLORS === void 0 ? void 0 : COLORS.secondary,\n      \"float\": 'right',\n      marginTop: -32,\n      marginRight: 8\n    }\n  };\n});\nvar defaultProps = {\n  bgcolor: 'silver',\n  m: 2,\n  border: 2,\n  borderColor: 'gray',\n  borderRadius: 5\n};\n\nvar EditQA = function EditQA(props) {\n  _s();\n\n  var qaValue = props.qaValue,\n      onEditQA = props.onEditQA; //local states\n\n  var classes = useStyles();\n\n  var _useState = useState(''),\n      question = _useState[0],\n      setQuestion = _useState[1];\n\n  var _useState2 = useState(''),\n      tmpQuestion = _useState2[0],\n      setTmpQuestion = _useState2[1];\n\n  var _useState3 = useState(''),\n      answer = _useState3[0],\n      setAnswer = _useState3[1];\n\n  var _useState4 = useState(''),\n      tmpAnswer = _useState4[0],\n      setTmpAnswer = _useState4[1];\n\n  var _useState5 = useState(''),\n      type = _useState5[0],\n      setType = _useState5[1];\n\n  useEffect(function () {\n    if (qaValue) {\n      if (qaValue.text) {\n        setQuestion(qaValue.text);\n        setTmpQuestion(qaValue.text);\n      }\n\n      if (qaValue.items && qaValue.items.length > 0 && qaValue.items[0] && qaValue.items[0].text) {\n        setAnswer(qaValue.items[0].text);\n        setTmpAnswer(qaValue.items[0].text);\n      }\n    }\n  }, [qaValue]);\n  useEffect(function () {\n    if (question && answer && qaValue && Object.keys(qaValue).length > 0) {\n      onEditQA({\n        id: qaValue.id,\n        type: qaValue.type,\n        text: question,\n        items: [{\n          id: qaValue.items[0].id,\n          type: qaValue.items[0].type,\n          text: answer\n        }]\n      });\n    }\n  }, [question, answer]);\n\n  var onChangeText = function onChangeText(text) {\n    if (type === 'question') {\n      setTmpQuestion(text);\n    } else {\n      setTmpAnswer(text);\n    }\n  };\n\n  var handleSave = function handleSave() {\n    type === 'question' ? setQuestion(tmpQuestion) : setAnswer(tmpAnswer);\n    setType('');\n  };\n\n  return __jsx(Container, {\n    style: {\n      minHeight: 200\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    container: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, question && __jsx(React.Fragment, null, __jsx(Typography, {\n    component: 'h5',\n    variant: 'h5',\n    style: {\n      color: 'silver',\n      marginLeft: 16,\n      marginTop: 16\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  }, \"Question\"), __jsx(Box, _extends({}, defaultProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 29\n    }\n  }), __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: question\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 33\n    }\n  }), __jsx(EditIcon, {\n    className: classes.editIcon,\n    onClick: function onClick() {\n      setType('question');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 33\n    }\n  }))))), __jsx(Grid, {\n    container: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, answer && __jsx(React.Fragment, null, __jsx(Typography, {\n    component: 'h5',\n    variant: 'h5',\n    style: {\n      color: 'silver',\n      marginLeft: 16\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 29\n    }\n  }, \"Answer\"), __jsx(Box, _extends({}, defaultProps, {\n    style: {\n      height: 100,\n      overflow: 'auto'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 29\n    }\n  }), __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: answer\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 33\n    }\n  }), __jsx(EditIcon, {\n    className: classes.editIcon,\n    onClick: function onClick() {\n      setType('answer');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 33\n    }\n  }))))), type && __jsx(Typography, {\n    component: 'div',\n    style: {\n      marginTop: 16,\n      marginBottom: 16\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 25\n    }\n  }, __jsx(AddText, {\n    model: type ? type === 'question' ? tmpQuestion : tmpAnswer : '',\n    onChangeModel: onChangeText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }), __jsx(Button, {\n    className: classes.actionButton,\n    variant: \"contained\",\n    size: \"small\",\n    color: \"primary\",\n    \"aria-label\": \"add\",\n    onClick: handleSave,\n    disabled: !tmpQuestion || !tmpAnswer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }, \"SAVE\")));\n};\n\n_s(EditQA, \"RSwwJq29I54cmosaBZXnntu3NII=\", false, function () {\n  return [useStyles];\n});\n\n_c = EditQA;\nexport default EditQA;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditQA\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/components/faq/qa/EditQA.js"],"names":["React","useState","useEffect","Container","Typography","Button","Grid","Box","EditIcon","makeStyles","AddText","COLORS","useStyles","cursorPointer","cursor","color","marginTop","actionButton","borderRadius","marginBottom","backgroundColor","secondary","editIcon","marginRight","defaultProps","bgcolor","m","border","borderColor","EditQA","props","qaValue","onEditQA","classes","question","setQuestion","tmpQuestion","setTmpQuestion","answer","setAnswer","tmpAnswer","setTmpAnswer","type","setType","text","items","length","Object","keys","id","onChangeText","handleSave","minHeight","marginLeft","__html","height","overflow"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { Container, Typography, Button, Grid, Box } from \"@material-ui/core\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddText from \"./AddText\";\nimport {COLORS} from \"../../../constants\";\n\nconst useStyles = makeStyles(() => ({\n    cursorPointer: {\n        cursor: 'pointer',\n        color: 'silver',\n        marginTop: 16\n    },\n    actionButton: {\n        borderRadius: 20,\n        marginBottom: 16,\n        backgroundColor: COLORS?.secondary,\n        marginTop: 16\n    },\n    editIcon: {\n        cursor: 'pointer',\n        color: COLORS?.secondary,\n        float: 'right',\n        marginTop: -32,\n        marginRight: 8\n    }\n}));\n\nconst defaultProps = {\n    bgcolor: 'silver',\n    m: 2,\n    border: 2,\n    borderColor: 'gray',\n    borderRadius: 5,\n}\n\nconst EditQA = (props) => {\n\n    const { qaValue, onEditQA } = props;\n    //local states\n    const classes = useStyles();\n    const [question, setQuestion] = useState('');\n    const [tmpQuestion, setTmpQuestion] = useState('');\n    const [answer, setAnswer] = useState('');\n    const [tmpAnswer, setTmpAnswer] = useState('');\n    const [type, setType] = useState('');\n\n    useEffect(() => {\n        if (qaValue) {\n            if (qaValue.text) {\n                setQuestion(qaValue.text);\n                setTmpQuestion(qaValue.text);\n            }\n            if (qaValue.items && qaValue.items.length > 0 && qaValue.items[0] && qaValue.items[0].text  ) {\n                setAnswer(qaValue.items[0].text);\n                setTmpAnswer(qaValue.items[0].text);\n            }\n        }\n    }, [qaValue]);\n\n    useEffect(() => {\n        if (question && answer && qaValue && Object.keys(qaValue).length > 0) {\n            onEditQA({\n                id: qaValue.id,\n                type: qaValue.type,\n                text: question,\n                items: [{\n                    id: qaValue.items[0].id,\n                    type: qaValue.items[0].type,\n                    text: answer\n                }]\n            })\n        }\n    }, [question, answer]);\n\n    const onChangeText = (text) => {\n        if (type === 'question') {\n            setTmpQuestion(text);\n        } else {\n            setTmpAnswer(text);\n        }\n    }\n\n    const handleSave = () => {\n        type === 'question' ? setQuestion(tmpQuestion) : setAnswer(tmpAnswer);\n        setType('');\n    }\n\n    return (\n        <Container style={{minHeight: 200}}>\n            <Grid container>\n                <Grid item xs={12}>\n                    {\n                        question && <>\n                            <Typography component={'h5'} variant={'h5'} style={{color: 'silver', marginLeft: 16, marginTop: 16}} >\n                                Question\n                            </Typography>\n                            <Box {...defaultProps}>\n                                <div dangerouslySetInnerHTML={{__html: question}} ></div>\n                                <EditIcon className={classes.editIcon} onClick={() => {\n                                    setType('question');\n                                }} />\n                            </Box>\n                        </>\n                    }\n                </Grid>\n            </Grid>\n            <Grid container>\n                <Grid item xs={12}>\n                    {\n                        answer && <>\n                            <Typography component={'h5'} variant={'h5'} style={{color: 'silver', marginLeft: 16}} >\n                                Answer\n                            </Typography>\n                            <Box {...defaultProps} style={{height: 100, overflow: 'auto'}} >\n                                <div dangerouslySetInnerHTML={{__html: answer}}></div>\n                                <EditIcon className={classes.editIcon} onClick={() => {\n                                    setType('answer');\n                                }} />\n                            </Box>\n                        </>\n                    }\n                </Grid>\n            </Grid>\n            {\n                type && <Typography component={'div'} style={{marginTop: 16, marginBottom: 16}}>\n                    <AddText model={type ? (type === 'question' ? tmpQuestion : tmpAnswer) : ''} onChangeModel={onChangeText} />\n                    <Button\n                        className={classes.actionButton}\n                        variant=\"contained\"\n                        size=\"small\"\n                        color=\"primary\"\n                        aria-label=\"add\"\n                        onClick={handleSave}\n                        disabled={!tmpQuestion || !tmpAnswer}\n                    >\n                        SAVE\n\n                    </Button>\n                </Typography>\n            }\n        </Container>\n    )\n}\n\nexport default EditQA;"]},"metadata":{},"sourceType":"module"}