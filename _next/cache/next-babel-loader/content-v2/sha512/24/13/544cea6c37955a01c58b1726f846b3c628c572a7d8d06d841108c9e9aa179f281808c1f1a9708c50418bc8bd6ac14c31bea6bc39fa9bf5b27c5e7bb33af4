{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/components/faq/qa/EditQA.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState, useEffect } from 'react';\nimport { Container, Typography, Button, Grid, Box } from \"@material-ui/core\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddText from \"./AddText\";\nimport { COLORS } from \"../../../constants\";\nconst useStyles = makeStyles(() => ({\n  cursorPointer: {\n    cursor: 'pointer',\n    color: 'silver',\n    marginTop: 16\n  },\n  actionButton: {\n    borderRadius: 20,\n    marginBottom: 16,\n    backgroundColor: COLORS === null || COLORS === void 0 ? void 0 : COLORS.secondary,\n    marginTop: 16\n  },\n  editIcon: {\n    cursor: 'pointer',\n    color: COLORS === null || COLORS === void 0 ? void 0 : COLORS.secondary,\n    float: 'right',\n    marginTop: -32,\n    marginRight: 8\n  }\n}));\nconst defaultProps = {\n  bgcolor: 'silver',\n  m: 2,\n  border: 2,\n  borderColor: 'gray',\n  borderRadius: 5\n};\n\nconst EditQA = props => {\n  const {\n    qaValue,\n    onEditQA\n  } = props; //local states\n\n  const classes = useStyles();\n  const {\n    0: question,\n    1: setQuestion\n  } = useState('');\n  const {\n    0: tmpQuestion,\n    1: setTmpQuestion\n  } = useState('');\n  const {\n    0: answer,\n    1: setAnswer\n  } = useState('');\n  const {\n    0: tmpAnswer,\n    1: setTmpAnswer\n  } = useState('');\n  const {\n    0: type,\n    1: setType\n  } = useState('');\n  useEffect(() => {\n    if (qaValue) {\n      if (qaValue.text) {\n        setQuestion(qaValue.text);\n        setTmpQuestion(qaValue.text);\n      }\n\n      if (qaValue.items && qaValue.items.length > 0 && qaValue.items[0] && qaValue.items[0].text) {\n        setAnswer(qaValue.items[0].text);\n        setTmpAnswer(qaValue.items[0].text);\n      }\n    }\n  }, [qaValue]);\n  useEffect(() => {\n    if (question && answer && qaValue && Object.keys(qaValue).length > 0) {\n      onEditQA({\n        id: qaValue.id,\n        type: qaValue.type,\n        text: question,\n        items: [{\n          id: qaValue.items[0].id,\n          type: qaValue.items[0].type,\n          text: answer\n        }]\n      });\n    }\n  }, [question, answer]);\n\n  const onChangeText = text => {\n    if (type === 'question') {\n      setTmpQuestion(text);\n    } else {\n      setTmpAnswer(text);\n    }\n  };\n\n  const handleSave = () => {\n    type === 'question' ? setQuestion(tmpQuestion) : setAnswer(tmpAnswer);\n    setType('');\n  };\n\n  return __jsx(Container, {\n    style: {\n      minHeight: 200\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, question && __jsx(React.Fragment, null, __jsx(Typography, {\n    component: 'h5',\n    variant: 'h5',\n    style: {\n      color: 'silver',\n      marginLeft: 16,\n      marginTop: 16\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  }, \"Question\"), __jsx(Box, _extends({}, defaultProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 29\n    }\n  }), __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: question\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 33\n    }\n  }), __jsx(EditIcon, {\n    className: classes.editIcon,\n    onClick: () => {\n      setType('question');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 33\n    }\n  }))))), __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, answer && __jsx(React.Fragment, null, __jsx(Typography, {\n    component: 'h5',\n    variant: 'h5',\n    style: {\n      color: 'silver',\n      marginLeft: 16\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 29\n    }\n  }, \"Answer\"), __jsx(Box, _extends({}, defaultProps, {\n    style: {\n      height: 100,\n      overflow: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 29\n    }\n  }), __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: answer\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 33\n    }\n  }), __jsx(EditIcon, {\n    className: classes.editIcon,\n    onClick: () => {\n      setType('answer');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 33\n    }\n  }))))), type && __jsx(Typography, {\n    component: 'div',\n    style: {\n      marginTop: 16,\n      marginBottom: 16\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 25\n    }\n  }, __jsx(AddText, {\n    model: type ? type === 'question' ? tmpQuestion : tmpAnswer : '',\n    onChangeModel: onChangeText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }), __jsx(Button, {\n    className: classes.actionButton,\n    variant: \"contained\",\n    size: \"small\",\n    color: \"primary\",\n    \"aria-label\": \"add\",\n    onClick: handleSave,\n    disabled: !tmpQuestion || !tmpAnswer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }, \"SAVE\")));\n};\n\nexport default EditQA;","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/components/faq/qa/EditQA.js"],"names":["React","useState","useEffect","Container","Typography","Button","Grid","Box","EditIcon","makeStyles","AddText","COLORS","useStyles","cursorPointer","cursor","color","marginTop","actionButton","borderRadius","marginBottom","backgroundColor","secondary","editIcon","float","marginRight","defaultProps","bgcolor","m","border","borderColor","EditQA","props","qaValue","onEditQA","classes","question","setQuestion","tmpQuestion","setTmpQuestion","answer","setAnswer","tmpAnswer","setTmpAnswer","type","setType","text","items","length","Object","keys","id","onChangeText","handleSave","minHeight","marginLeft","__html","height","overflow"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { Container, Typography, Button, Grid, Box } from \"@material-ui/core\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddText from \"./AddText\";\nimport {COLORS} from \"../../../constants\";\n\nconst useStyles = makeStyles(() => ({\n    cursorPointer: {\n        cursor: 'pointer',\n        color: 'silver',\n        marginTop: 16\n    },\n    actionButton: {\n        borderRadius: 20,\n        marginBottom: 16,\n        backgroundColor: COLORS?.secondary,\n        marginTop: 16\n    },\n    editIcon: {\n        cursor: 'pointer',\n        color: COLORS?.secondary,\n        float: 'right',\n        marginTop: -32,\n        marginRight: 8\n    }\n}));\n\nconst defaultProps = {\n    bgcolor: 'silver',\n    m: 2,\n    border: 2,\n    borderColor: 'gray',\n    borderRadius: 5,\n}\n\nconst EditQA = (props) => {\n\n    const { qaValue, onEditQA } = props;\n    //local states\n    const classes = useStyles();\n    const [question, setQuestion] = useState('');\n    const [tmpQuestion, setTmpQuestion] = useState('');\n    const [answer, setAnswer] = useState('');\n    const [tmpAnswer, setTmpAnswer] = useState('');\n    const [type, setType] = useState('');\n\n    useEffect(() => {\n        if (qaValue) {\n            if (qaValue.text) {\n                setQuestion(qaValue.text);\n                setTmpQuestion(qaValue.text);\n            }\n            if (qaValue.items && qaValue.items.length > 0 && qaValue.items[0] && qaValue.items[0].text  ) {\n                setAnswer(qaValue.items[0].text);\n                setTmpAnswer(qaValue.items[0].text);\n            }\n        }\n    }, [qaValue]);\n\n    useEffect(() => {\n        if (question && answer && qaValue && Object.keys(qaValue).length > 0) {\n            onEditQA({\n                id: qaValue.id,\n                type: qaValue.type,\n                text: question,\n                items: [{\n                    id: qaValue.items[0].id,\n                    type: qaValue.items[0].type,\n                    text: answer\n                }]\n            })\n        }\n    }, [question, answer]);\n\n    const onChangeText = (text) => {\n        if (type === 'question') {\n            setTmpQuestion(text);\n        } else {\n            setTmpAnswer(text);\n        }\n    }\n\n    const handleSave = () => {\n        type === 'question' ? setQuestion(tmpQuestion) : setAnswer(tmpAnswer);\n        setType('');\n    }\n\n    return (\n        <Container style={{minHeight: 200}}>\n            <Grid container>\n                <Grid item xs={12}>\n                    {\n                        question && <>\n                            <Typography component={'h5'} variant={'h5'} style={{color: 'silver', marginLeft: 16, marginTop: 16}} >\n                                Question\n                            </Typography>\n                            <Box {...defaultProps}>\n                                <div dangerouslySetInnerHTML={{__html: question}} ></div>\n                                <EditIcon className={classes.editIcon} onClick={() => {\n                                    setType('question');\n                                }} />\n                            </Box>\n                        </>\n                    }\n                </Grid>\n            </Grid>\n            <Grid container>\n                <Grid item xs={12}>\n                    {\n                        answer && <>\n                            <Typography component={'h5'} variant={'h5'} style={{color: 'silver', marginLeft: 16}} >\n                                Answer\n                            </Typography>\n                            <Box {...defaultProps} style={{height: 100, overflow: 'auto'}} >\n                                <div dangerouslySetInnerHTML={{__html: answer}}></div>\n                                <EditIcon className={classes.editIcon} onClick={() => {\n                                    setType('answer');\n                                }} />\n                            </Box>\n                        </>\n                    }\n                </Grid>\n            </Grid>\n            {\n                type && <Typography component={'div'} style={{marginTop: 16, marginBottom: 16}}>\n                    <AddText model={type ? (type === 'question' ? tmpQuestion : tmpAnswer) : ''} onChangeModel={onChangeText} />\n                    <Button\n                        className={classes.actionButton}\n                        variant=\"contained\"\n                        size=\"small\"\n                        color=\"primary\"\n                        aria-label=\"add\"\n                        onClick={handleSave}\n                        disabled={!tmpQuestion || !tmpAnswer}\n                    >\n                        SAVE\n\n                    </Button>\n                </Typography>\n            }\n        </Container>\n    )\n}\n\nexport default EditQA;"]},"metadata":{},"sourceType":"module"}