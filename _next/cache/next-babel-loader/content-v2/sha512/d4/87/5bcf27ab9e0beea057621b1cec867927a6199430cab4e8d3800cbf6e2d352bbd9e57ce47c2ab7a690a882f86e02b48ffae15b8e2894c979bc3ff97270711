{"ast":null,"code":"import _defineProperty from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"/Users/mata/app-cloudweb/components/website/pages/WebsiteImage.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { memo, useContext, useEffect, useState } from 'react';\nimport WebCmsGlobal from 'components/webcms-global';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ThumbnailSliderModal from './SliderModal';\nimport clsx from 'clsx';\nvar useStyles = makeStyles(function () {\n  return {\n    box: {\n      position: 'relative',\n      textAlign: 'center',\n      color: 'white'\n    },\n    text: {\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)',\n      zIndex: 999,\n      height: '100%',\n      width: '100%'\n    },\n    textColor: {\n      color: function color(props) {\n        var _props$imageData;\n\n        return props !== null && props !== void 0 && (_props$imageData = props.imageData) !== null && _props$imageData !== void 0 && _props$imageData.textColor ? props.imageData.textColor : '#000000';\n      }\n    },\n    image: {\n      width: '100%',\n      backgroundSize: 'cover',\n      borderRadius: 10,\n      height: function height(props) {\n        if (props.sectionType === 'threecol') return 200;\n        if (props.sectionType === 'twocol') return 300;\n        if (props.sectionType === 'fullcol') return 'auto';\n      },\n      marginBottom: 8\n    },\n    cursorPointer: {\n      cursor: 'pointer'\n    }\n  };\n});\n\nvar WebsiteImage = function WebsiteImage(props) {\n  _s();\n\n  var _clsx;\n\n  var imageData = props.imageData,\n      otherLangImage = props.otherLangImage,\n      selectedLang = props.selectedLang,\n      defaultLang = props.defaultLang,\n      sectionImages = props.sectionImages,\n      itemID = props.itemID,\n      _useState = useState(''),\n      image = _useState[0],\n      setImage = _useState[1],\n      _useState2 = useState(false),\n      isOpenSlider = _useState2[0],\n      setIsOpenSlider = _useState2[1],\n      _useContext = useContext(WebCmsGlobal),\n      GENERAL_SETTINGS = _useContext.GENERAL_SETTINGS,\n      classes = useStyles(props),\n      _useState3 = useState(sectionImages),\n      sliderImages = _useState3[0],\n      setSliderImages = _useState3[1];\n\n  useEffect(function () {\n    if (imageData && imageData.gid) {\n      setImage({\n        fileurl: imageData.gid.fileurl,\n        title: selectedLang === defaultLang ? imageData.gid.title : otherLangImage.title,\n        description: selectedLang === defaultLang ? imageData.gid.description : otherLangImage.description\n      });\n    }\n\n    handleResetSliderImages();\n  }, [imageData, otherLangImage, sectionImages]);\n\n  var handleResetSliderImages = function handleResetSliderImages() {\n    if (sectionImages !== null && sectionImages !== void 0 && sectionImages.length) setSliderImages(sectionImages.map(function (s) {\n      return s.gid;\n    }));\n  };\n\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, image && Object.keys(image).length > 0 && __jsx(\"div\", {\n    className: classes.box,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, __jsx(\"img\", {\n    alt: 'image',\n    onClick: function onClick() {\n      if (sliderImages !== null && sliderImages !== void 0 && sliderImages.length) {\n        var updatedSliderImages = _toConsumableArray(sliderImages);\n\n        var img = sectionImages === null || sectionImages === void 0 ? void 0 : sectionImages.find(function (image) {\n          return image.id === itemID;\n        });\n        var index = sectionImages === null || sectionImages === void 0 ? void 0 : sectionImages.indexOf(img);\n        var tmp = updatedSliderImages[0];\n        updatedSliderImages[0] = sliderImages[index];\n        updatedSliderImages[index] = tmp;\n        setSliderImages(updatedSliderImages);\n        setIsOpenSlider(true);\n      }\n    },\n    className: clsx((_clsx = {}, _defineProperty(_clsx, classes.image, true), _defineProperty(_clsx, classes.cursorPointer, sliderImages === null || sliderImages === void 0 ? void 0 : sliderImages.length), _clsx)),\n    src: GENERAL_SETTINGS.STATIC_URL + image.fileurl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }), __jsx(\"div\", {\n    className: classes.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: classes.textColor,\n    dangerouslySetInnerHTML: {\n      __html: image.title\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }), __jsx(\"div\", {\n    className: classes.textColor,\n    dangerouslySetInnerHTML: {\n      __html: image.description\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }))), __jsx(ThumbnailSliderModal, {\n    open: isOpenSlider,\n    sliderTitle: (image === null || image === void 0 ? void 0 : image.title) || 'Image',\n    sliderDesc: image === null || image === void 0 ? void 0 : image.description,\n    onClose: function onClose(e) {\n      setIsOpenSlider(e);\n      handleResetSliderImages();\n    },\n    sliderImages: sliderImages,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }));\n};\n\n_s(WebsiteImage, \"bAuhtUhoJ8YMedaOXOIFGsHNq1c=\", false, function () {\n  return [useStyles];\n});\n\n_c = WebsiteImage;\nvar memorizedWebsiteImage = /*#__PURE__*/memo(WebsiteImage);\nexport default memorizedWebsiteImage;\n\nvar _c;\n\n$RefreshReg$(_c, \"WebsiteImage\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/website/pages/WebsiteImage.js"],"names":["React","memo","useContext","useEffect","useState","WebCmsGlobal","makeStyles","ThumbnailSliderModal","clsx","useStyles","box","position","textAlign","color","text","top","left","transform","zIndex","height","width","textColor","props","imageData","image","backgroundSize","borderRadius","sectionType","marginBottom","cursorPointer","cursor","WebsiteImage","otherLangImage","selectedLang","defaultLang","sectionImages","itemID","setImage","isOpenSlider","setIsOpenSlider","GENERAL_SETTINGS","classes","sliderImages","setSliderImages","gid","fileurl","title","description","handleResetSliderImages","length","map","s","Object","keys","updatedSliderImages","img","find","id","index","indexOf","tmp","STATIC_URL","__html","e","memorizedWebsiteImage"],"mappings":"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","sourcesContent":["import React, { memo, useContext, useEffect, useState } from 'react'\nimport WebCmsGlobal from 'components/webcms-global'\nimport { makeStyles } from '@material-ui/core/styles'\nimport ThumbnailSliderModal from './SliderModal'\nimport clsx from 'clsx'\n\nconst useStyles = makeStyles(() => ({\n    box: {\n        position: 'relative',\n        textAlign: 'center',\n        color: 'white',\n    },\n    text: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        zIndex: 999,\n        height: '100%',\n        width: '100%',\n    },\n    textColor: {\n        color: (props) => (props?.imageData?.textColor ? props.imageData.textColor : '#000000'),\n    },\n    image: {\n        width: '100%',\n        backgroundSize: 'cover',\n        borderRadius: 10,\n        height: (props) => {\n            if (props.sectionType === 'threecol') return 200\n            if (props.sectionType === 'twocol') return 300\n            if (props.sectionType === 'fullcol') return 'auto'\n        },\n        marginBottom: 8\n    },\n    cursorPointer: {\n        cursor: 'pointer',\n    },\n}))\n\nconst WebsiteImage = (props) => {\n    const { imageData, otherLangImage, selectedLang, defaultLang, sectionImages, itemID } = props\n        , [image, setImage] = useState('')\n        , [isOpenSlider, setIsOpenSlider] = useState(false)\n        , { GENERAL_SETTINGS } = useContext(WebCmsGlobal)\n        , classes = useStyles(props)\n        , [sliderImages, setSliderImages] = useState(sectionImages)\n\n    useEffect(() => {\n        if (imageData && imageData.gid) {\n            setImage({\n                fileurl: imageData.gid.fileurl,\n                title: selectedLang === defaultLang ? imageData.gid.title : otherLangImage.title,\n                description: selectedLang === defaultLang ? imageData.gid.description : otherLangImage.description,\n            })\n        }\n        handleResetSliderImages()\n    }, [imageData, otherLangImage, sectionImages])\n\n    const handleResetSliderImages = () => {\n        if (sectionImages?.length) setSliderImages(sectionImages.map((s) => s.gid))\n    }\n\n    return (\n        <React.Fragment>\n            {image && Object.keys(image).length > 0 && (\n                <div className={classes.box}>\n                    <img\n                        alt={'image'}\n                        onClick={() => {\n                            if (sliderImages?.length) {\n                                let updatedSliderImages = [...sliderImages]\n                                const img = sectionImages?.find((image) => image.id === itemID)\n                                const index = sectionImages?.indexOf(img)\n                                const tmp = updatedSliderImages[0]\n                                updatedSliderImages[0] = sliderImages[index]\n                                updatedSliderImages[index] = tmp\n                                setSliderImages(updatedSliderImages)\n                                setIsOpenSlider(true)\n                            }\n                        }}\n                        className={clsx({\n                            [classes.image]: true,\n                            [classes.cursorPointer]: sliderImages?.length,\n                        })}\n                        src={GENERAL_SETTINGS.STATIC_URL + image.fileurl}\n                    />\n                    <div className={classes.text}>\n                        <div className={classes.textColor} dangerouslySetInnerHTML={{ __html: image.title }}/>\n                        <div className={classes.textColor} dangerouslySetInnerHTML={{ __html: image.description }} />\n                    </div>\n                </div>\n            )}\n            <ThumbnailSliderModal\n                open={isOpenSlider}\n                sliderTitle={image?.title || 'Image'}\n                sliderDesc={image?.description}\n                onClose={(e) => {\n                    setIsOpenSlider(e)\n                    handleResetSliderImages()\n                }}\n                sliderImages={sliderImages}\n            />\n        </React.Fragment>\n    )\n}\n\nconst memorizedWebsiteImage = memo(WebsiteImage)\n\nexport default memorizedWebsiteImage\n"]},"metadata":{},"sourceType":"module"}