{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/@webcms-ui/core/spin-edit-v2/index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { IconButton, Typography } from '@material-ui/core';\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline';\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    title: {\n      paddingRight: '16px'\n    },\n    valueText: {\n      padding: '0 8px'\n    }\n  };\n});\nexport default function SpinEditV2(props) {\n  _s();\n\n  var classes = useStyles();\n  var label = props.label,\n      max = props.max,\n      min = props.min,\n      defaultValue = props.defaultValue,\n      size = props.size,\n      onChange = props.onChange;\n\n  var _useState = useState(defaultValue),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  useEffect(function () {\n    setValue(defaultValue);\n  }, [defaultValue]);\n\n  var handleOnChange = function handleOnChange(type) {\n    var res = value;\n\n    if (type === 'inc') {\n      if (max > value) {\n        setValue(value + 1);\n        res = value + 1;\n      }\n    } else if (type === 'dec') {\n      if (value > min) {\n        setValue(value - 1);\n        res = value - 1;\n      }\n\n      if (value > max) {\n        setValue(max);\n        res = max;\n      }\n    }\n\n    if (typeof onChange === 'function') onChange(res);\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, label), __jsx(IconButton, {\n    disabled: value <= min,\n    color: 'primary',\n    size: size || 'medium',\n    variant: 'outlined',\n    onClick: function onClick() {\n      return handleOnChange('dec');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, __jsx(RemoveCircleOutlineIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  })), __jsx(Typography, {\n    className: classes.valueText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, value), __jsx(IconButton, {\n    disabled: value >= max,\n    color: 'primary',\n    size: size || 'medium',\n    variant: 'outlined',\n    onClick: function onClick() {\n      return handleOnChange('inc');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, __jsx(AddCircleOutlineOutlinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  })));\n}\n\n_s(SpinEditV2, \"SFRawj3JnCKIKP7zvDMw5T//dPM=\", false, function () {\n  return [useStyles];\n});\n\n_c = SpinEditV2;\nSpinEditV2.defaultProps = {\n  label: '',\n  max: 99,\n  min: 1,\n  defaultValue: 1,\n  size: \"medium\"\n};\nSpinEditV2.propTypes = {\n  onChange: PropTypes.func,\n  label: PropTypes.string,\n  max: PropTypes.number,\n  min: PropTypes.number,\n  defaultValue: PropTypes.number,\n  size: PropTypes.string\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"SpinEditV2\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/@webcms-ui/core/spin-edit-v2/index.js"],"names":["React","useEffect","useState","makeStyles","PropTypes","IconButton","Typography","RemoveCircleOutlineIcon","AddCircleOutlineOutlinedIcon","useStyles","theme","root","display","alignItems","title","paddingRight","valueText","padding","SpinEditV2","props","classes","label","max","min","defaultValue","size","onChange","value","setValue","handleOnChange","type","res","defaultProps","propTypes","func","string","number"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport PropTypes from 'prop-types'\nimport { IconButton, Typography } from '@material-ui/core'\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline';\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        alignItems: 'center'\n    },\n    title: {\n        paddingRight: '16px'\n    },\n    valueText: {\n        padding: '0 8px'\n    }\n}))\n\nexport default function SpinEditV2(props) {\n    const classes = useStyles()\n\n    const  {label, max, min, defaultValue, size, onChange} = props;\n    const [value, setValue] = useState(defaultValue);\n\n    useEffect(() => {\n        setValue(defaultValue)\n    }, [defaultValue])\n\n    const handleOnChange = (type) => {\n        let res = value\n        if(type === 'inc') {\n            if(max > value) {\n                setValue(value + 1);\n                res = value + 1\n            }\n        } else if(type === 'dec') {\n            if(value > min) {\n                setValue(value - 1);\n                res = value -1\n            }\n            if(value > max) {\n                setValue(max);\n                res = max\n            }\n        }\n        if(typeof onChange === 'function') onChange(res)\n    }\n\n\n\n    return (\n        <div className={classes.root}>\n            <Typography className={classes.title}>{label}</Typography>\n            <IconButton\n                disabled={value <= min}\n                color={'primary'}\n                size={size || 'medium'}\n                variant={'outlined'}\n                onClick={() => handleOnChange('dec')}\n            >\n                <RemoveCircleOutlineIcon />\n            </IconButton>\n            <Typography className={classes.valueText}>{value}</Typography>\n            <IconButton\n                disabled={value >= max}\n                color={'primary'}\n                size={size || 'medium'}\n                variant={'outlined'}\n                onClick={() => handleOnChange('inc')}\n            >\n                <AddCircleOutlineOutlinedIcon />\n            </IconButton>\n        </div>\n    );\n}\n\nSpinEditV2.defaultProps = {\n    label: '',\n    max: 99,\n    min: 1,\n    defaultValue: 1,\n    size: \"medium\",\n}\n\nSpinEditV2.propTypes = {\n    onChange: PropTypes.func,\n    label: PropTypes.string,\n    max: PropTypes.number,\n    min: PropTypes.number,\n    defaultValue: PropTypes.number,\n    size: PropTypes.string,\n}\n"]},"metadata":{},"sourceType":"module"}