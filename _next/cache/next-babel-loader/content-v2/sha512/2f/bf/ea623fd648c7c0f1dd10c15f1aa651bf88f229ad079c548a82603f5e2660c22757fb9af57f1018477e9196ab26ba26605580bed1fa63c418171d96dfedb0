{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/survey/surveytree/options/Currency.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { SURVEY_INPUT_VARIANT } from '../../../../assets/const';\nimport NumberFormat from 'react-number-format';\nimport useSurveyAction from '../../../../model/survey/useSurveyAction';\nimport { useSelector } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport styles from '../../style/SurveyOptions.style';\nimport SurveyTooltip from 'components/survey/helper/SurveyTooltip';\nvar useStyles = makeStyles(styles);\nexport default function CurrencyOption(props) {\n  _s();\n\n  var option = props.option,\n      optionTyp = props.optionTyp; //style\n\n  var classes = useStyles(); //redux\n\n  var _useSurveyAction = useSurveyAction(),\n      setSurveyAnswerMulti = _useSurveyAction.setSurveyAnswerMulti,\n      deleteSurveyAnswer = _useSurveyAction.deleteSurveyAnswer;\n\n  var surveyTrans = useSelector(function (state) {\n    return state.survey.trans;\n  });\n  var surveyIsValid = useSelector(function (state) {\n    return state.survey.isValid;\n  });\n  var oldAnswer = useSelector(function (state) {\n    return state.survey.answers[surveyTrans] && state.survey.answers[surveyTrans][option.parentid] && state.survey.answers[surveyTrans][option.parentid][option.id];\n  }); //state\n\n  var _useState = useState(oldAnswer ? oldAnswer.valuefloat : ''),\n      optionValue = _useState[0],\n      setOptionValue = _useState[1];\n\n  var handleChangeOption = function handleChangeOption(event) {\n    var value = event.target.value;\n    setOptionValue(value);\n\n    if (value !== '') {\n      setSurveyAnswerMulti(surveyTrans, option.parentid, option.id, {\n        typ: optionTyp,\n        parentid: option.parentid,\n        valuefloat: value.replace(/,/g, '')\n      });\n    } else {\n      deleteSurveyAnswer(surveyTrans, option.parentid, option.id);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: classes.optionContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, __jsx(SurveyTooltip, {\n    title: option && option.note || '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, __jsx(NumberFormat, {\n    value: optionValue,\n    displayType: 'input',\n    decimalScale: 2,\n    inputMode: 'decimal',\n    isNumericString: true,\n    thousandSeparator: true,\n    customInput: TextField,\n    onChange: handleChangeOption,\n    variant: SURVEY_INPUT_VARIANT,\n    fullWidth: true,\n    disabled: surveyIsValid,\n    name: String(option.id),\n    label: option.langwordtxt || option.description,\n    inputProps: {\n      style: {\n        textAlign: 'right'\n      }\n    },\n    className: classes.textField,\n    InputProps: {\n      classes: {\n        input: classes.textFieldInput\n      }\n    },\n    InputLabelProps: {\n      className: classes.textFieldLabel\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  })));\n}\n\n_s(CurrencyOption, \"VXBtmO4QHfs8YquLenrXqzWF4lo=\", false, function () {\n  return [useStyles, useSurveyAction, useSelector, useSelector, useSelector];\n});\n\n_c = CurrencyOption;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrencyOption\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/survey/surveytree/options/Currency.js"],"names":["React","useState","TextField","SURVEY_INPUT_VARIANT","NumberFormat","useSurveyAction","useSelector","makeStyles","styles","SurveyTooltip","useStyles","CurrencyOption","props","option","optionTyp","classes","setSurveyAnswerMulti","deleteSurveyAnswer","surveyTrans","state","survey","trans","surveyIsValid","isValid","oldAnswer","answers","parentid","id","valuefloat","optionValue","setOptionValue","handleChangeOption","event","value","target","typ","replace","optionContainer","note","String","langwordtxt","description","style","textAlign","textField","input","textFieldInput","className","textFieldLabel"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport { SURVEY_INPUT_VARIANT } from '../../../../assets/const'\nimport NumberFormat from 'react-number-format'\nimport useSurveyAction from '../../../../model/survey/useSurveyAction'\nimport { useSelector } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\nimport styles from '../../style/SurveyOptions.style'\nimport SurveyTooltip from 'components/survey/helper/SurveyTooltip'\n\nconst useStyles = makeStyles(styles)\n\nexport default function CurrencyOption(props) {\n    const { option, optionTyp } = props\n\n    //style\n    const classes = useStyles()\n\n    //redux\n    const { setSurveyAnswerMulti, deleteSurveyAnswer } = useSurveyAction()\n    const surveyTrans = useSelector((state) => state.survey.trans)\n    const surveyIsValid = useSelector((state) => state.survey.isValid)\n    const oldAnswer = useSelector(\n        (state) =>\n            state.survey.answers[surveyTrans] &&\n            state.survey.answers[surveyTrans][option.parentid] &&\n            state.survey.answers[surveyTrans][option.parentid][option.id],\n    )\n\n    //state\n    const [optionValue, setOptionValue] = useState(oldAnswer ? oldAnswer.valuefloat : '')\n\n    const handleChangeOption = (event) => {\n        const value = event.target.value\n        setOptionValue(value)\n\n        if (value !== '') {\n            setSurveyAnswerMulti(surveyTrans, option.parentid, option.id, {\n                typ: optionTyp,\n                parentid: option.parentid,\n                valuefloat: value.replace(/,/g, ''),\n            })\n        } else {\n            deleteSurveyAnswer(surveyTrans, option.parentid, option.id)\n        }\n    }\n\n    return (\n        <div className={classes.optionContainer}>\n            <SurveyTooltip title={option && option.note || ''}>\n                <NumberFormat\n                    value={optionValue}\n                    displayType={'input'}\n                    decimalScale={2}\n                    inputMode={'decimal'}\n                    isNumericString={true}\n                    thousandSeparator={true}\n                    customInput={TextField}\n                    onChange={handleChangeOption}\n                    variant={SURVEY_INPUT_VARIANT}\n                    fullWidth\n                    disabled={surveyIsValid}\n                    name={String(option.id)}\n                    label={option.langwordtxt || option.description}\n                    inputProps={{ style: { textAlign: 'right' } }}\n                    className={classes.textField}\n                    InputProps={{ classes: { input: classes.textFieldInput } }}\n                    InputLabelProps={{ className: classes.textFieldLabel }}\n                />\n            </SurveyTooltip>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}