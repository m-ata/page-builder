{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/components/page/sections/paragraph/AddParagraph.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useContext } from 'react'; //material imports\n\nimport { Checkbox, Container, FormControlLabel } from '@material-ui/core';\nimport dynamic from 'next/dynamic';\nimport { connect } from 'react-redux';\nimport { Delete, ViewList } from '@webcms/orest';\nimport { isErrorMsg, OREST_ENDPOINT } from '../../../../../../../model/orest/constants';\nimport { useRouter } from 'next/router';\nimport WebCmsGlobal from '../../../../../../webcms-global';\nimport { updateState } from '../../../../../../../state/actions';\nimport Typography from \"@material-ui/core/Typography\";\nimport { froalaConfig } from \"../../../../constants\";\nimport { toast } from \"react-toastify\"; //dynamic imports for froala editors\n\nconst FroalaEditor = dynamic(async () => {\n  const values = await Promise.all([import('react-froala-wysiwyg'), import('froala-editor/js/plugins.pkgd.min'), import('froala-editor/js/froala_editor.min'), import('froala-editor/js/froala_editor.pkgd.min')]);\n  return values[0];\n}, {\n  loading: () => __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 24\n    }\n  }, \"LOADING!!!\"),\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('react-froala-wysiwyg'), require.resolveWeak('froala-editor/js/plugins.pkgd.min'), require.resolveWeak('froala-editor/js/froala_editor.min'), require.resolveWeak('froala-editor/js/froala_editor.pkgd.min')],\n    modules: ['react-froala-wysiwyg', 'froala-editor/js/plugins.pkgd.min', 'froala-editor/js/froala_editor.min', 'froala-editor/js/froala_editor.pkgd.min']\n  }\n});\n\nconst AddParagraph = props => {\n  const {\n    component,\n    handleSectionComponent,\n    handleNextDisable,\n    state,\n    updateState\n  } = props;\n  const [model, setModel] = (component === null || component === void 0 ? void 0 : component.type) === 'paragraph' ? useState(component === null || component === void 0 ? void 0 : component.service) : useState('');\n  const {\n    0: useBgColor,\n    1: setUseBgColor\n  } = useState(false);\n  const router = useRouter();\n  const companyId = router.query.companyID;\n  const {\n    GENERAL_SETTINGS,\n    token\n  } = useContext(WebCmsGlobal);\n  const authToken = token || router.query.authToken;\n  const config = froalaConfig;\n  useEffect(() => {\n    if (Object.keys(state.hcmCategory).length > 0) {\n      Delete({\n        apiUrl: GENERAL_SETTINGS.OREST_URL,\n        endpoint: OREST_ENDPOINT.HCMITEMIMG,\n        token: authToken,\n        gid: state.hcmCategory.gid,\n        params: {\n          hotelrefno: Number(companyId)\n        }\n      }).then(res => {\n        if (res.status === 200) {\n          updateState('pageBuilder', 'hcmCategory', {});\n        }\n      });\n    }\n  }, []);\n  useEffect(() => {\n    if (component !== null && component !== void 0 && component.gid) {\n      ViewList({\n        apiUrl: GENERAL_SETTINGS.OREST_URL,\n        endpoint: OREST_ENDPOINT.HCMITEMTXTPAR,\n        token: authToken,\n        params: {\n          query: `gid:${component.gid}`,\n          hotelrefno: Number(companyId)\n        }\n      }).then(res => {\n        var _res$data, _res$data$data;\n\n        if (res.status === 200 && (res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : (_res$data$data = _res$data.data) === null || _res$data$data === void 0 ? void 0 : _res$data$data.length) > 0) {\n          setModel(res.data.data[0].itemtext);\n        } else {\n          const retErr = isErrorMsg(res);\n          toast.error(retErr.errorMsg, {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        }\n      });\n    }\n  }, [component]);\n  useEffect(() => {\n    if (model) {\n      handleNextDisable(false);\n    } else {\n      handleNextDisable(true);\n    }\n\n    handleSectionComponent({\n      service: model,\n      type: 'paragraph',\n      useBgColor: useBgColor\n    });\n  }, [model, useBgColor]);\n\n  const handleModelChange = model => {\n    setModel(model);\n  };\n\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    component: 'div',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: useBgColor,\n      onChange: () => setUseBgColor(!useBgColor),\n      name: \"background-color\",\n      color: \"primary\",\n      style: {\n        float: 'right'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }\n    }),\n    label: \"Background Color\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  })), __jsx(FroalaEditor, {\n    tag: \"textarea\",\n    config: config,\n    model: model,\n    onModelChange: handleModelChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    state: state.formReducer.pageBuilder\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  updateState: (stateType, stateName, value) => dispatch(updateState(stateType, stateName, value))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddParagraph);","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/components/page/sections/paragraph/AddParagraph.js"],"names":["React","useState","useEffect","useContext","Checkbox","Container","FormControlLabel","dynamic","connect","Delete","ViewList","isErrorMsg","OREST_ENDPOINT","useRouter","WebCmsGlobal","updateState","Typography","froalaConfig","toast","FroalaEditor","values","Promise","all","loading","ssr","AddParagraph","props","component","handleSectionComponent","handleNextDisable","state","model","setModel","type","service","useBgColor","setUseBgColor","router","companyId","query","companyID","GENERAL_SETTINGS","token","authToken","config","Object","keys","hcmCategory","length","apiUrl","OREST_URL","endpoint","HCMITEMIMG","gid","params","hotelrefno","Number","then","res","status","HCMITEMTXTPAR","data","itemtext","retErr","error","errorMsg","position","POSITION","TOP_RIGHT","handleModelChange","float","mapStateToProps","formReducer","pageBuilder","mapDispatchToProps","dispatch","stateType","stateName","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\n//material imports\nimport {Checkbox, Container, FormControlLabel} from '@material-ui/core'\nimport dynamic from 'next/dynamic'\nimport { connect } from 'react-redux'\nimport {Delete, ViewList} from '@webcms/orest'\nimport {isErrorMsg, OREST_ENDPOINT} from '../../../../../../../model/orest/constants'\nimport { useRouter } from 'next/router'\nimport WebCmsGlobal from '../../../../../../webcms-global'\nimport { updateState } from '../../../../../../../state/actions'\nimport Typography from \"@material-ui/core/Typography\";\nimport {froalaConfig} from \"../../../../constants\";\nimport {toast} from \"react-toastify\";\n//dynamic imports for froala editors\nconst FroalaEditor = dynamic(\n    async () => {\n        const values = await Promise.all([\n            import('react-froala-wysiwyg'),\n            import('froala-editor/js/plugins.pkgd.min'),\n            import('froala-editor/js/froala_editor.min'),\n            import('froala-editor/js/froala_editor.pkgd.min'),\n        ])\n        return values[0]\n    },\n    {\n        loading: () => <p>LOADING!!!</p>,\n        ssr: false,\n    }\n);\n\nconst AddParagraph = (props) => {\n\n    const { component, handleSectionComponent, handleNextDisable, state, updateState } = props\n    const [model, setModel] = component?.type === 'paragraph' ? useState(component?.service) : useState('');\n    const [useBgColor, setUseBgColor] = useState(false);\n\n    const router = useRouter()\n    const companyId = router.query.companyID\n    const { GENERAL_SETTINGS, token } = useContext(WebCmsGlobal);\n    const authToken = token || router.query.authToken;\n\n    const config = froalaConfig;\n\n    useEffect(() => {\n        if (Object.keys(state.hcmCategory).length > 0) {\n            Delete({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: OREST_ENDPOINT.HCMITEMIMG,\n                token: authToken,\n                gid: state.hcmCategory.gid,\n                params: {\n                    hotelrefno: Number(companyId),\n                },\n            }).then((res) => {\n                if (res.status === 200) {\n                    updateState('pageBuilder', 'hcmCategory', {})\n                }\n            })\n        }\n    }, [])\n\n    useEffect(() => {\n        if (component?.gid) {\n            ViewList({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: OREST_ENDPOINT.HCMITEMTXTPAR,\n                token: authToken,\n                params: {\n                    query: `gid:${component.gid}`,\n                    hotelrefno: Number(companyId)\n                }\n            }).then(res => {\n                if (res.status === 200 && res?.data?.data?.length > 0) {\n                    setModel(res.data.data[0].itemtext);\n                } else {\n                    const retErr = isErrorMsg(res);\n                    toast.error(retErr.errorMsg, {\n                        position: toast.POSITION.TOP_RIGHT\n                    });\n                }\n            });\n        }\n    }, [component]);\n\n    useEffect(() => {\n        if (model) {\n            handleNextDisable(false)\n        } else {\n            handleNextDisable(true)\n        }\n        handleSectionComponent({\n            service: model,\n            type: 'paragraph',\n            useBgColor: useBgColor\n        })\n    }, [model, useBgColor])\n\n    const handleModelChange = (model) => {\n        setModel(model)\n    }\n\n    return (\n        <Container>\n            <Typography component={'div'}>\n                <FormControlLabel\n                    control={\n                        <Checkbox\n                            checked={useBgColor}\n                            onChange={() => setUseBgColor(!useBgColor)}\n                            name=\"background-color\"\n                            color=\"primary\"\n                            style={{float: 'right'}}\n                        />\n                    }\n                    label=\"Background Color\"\n                />\n            </Typography>\n            <FroalaEditor tag=\"textarea\" config={config} model={model} onModelChange={handleModelChange} />\n        </Container>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        state: state.formReducer.pageBuilder,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    updateState: (stateType, stateName, value) => dispatch(updateState(stateType, stateName, value)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddParagraph)\n"]},"metadata":{},"sourceType":"module"}