{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/steps/RenderWebPage.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Slider from '../components/page/sections/slider/Slider';\nimport SliderOnlyPreview from '../components/page/sections/slider-only/Slider';\nimport SliderGallery from '../components/page/sections/slider-gallery/SliderGallery';\nimport Image from '../components/page/sections/image/Image';\nimport Paragraph from '../components/page/sections/paragraph/Paragraph';\nimport WidgetBooking from '../../../ibe/widget/booking';\nimport ContactForm from '../components/page/sections/contact-form/ContactForm';\nimport WrappedMap from '../components/page/sections/map/Map';\nimport CardSlider from \"../components/page/sections/card-type-slider/CardSlider\";\nimport { Typography, Grid } from '@material-ui/core';\n\nvar getColumnWidth = function getColumnWidth(width) {\n  return Math.floor(width / 100 * 12);\n};\n\nexport default function RenderWebPage(props) {\n  var _this = this;\n\n  var sections = props.sections;\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, sections.map(function (section, i) {\n    return __jsx(Typography, {\n      key: i,\n      component: 'div',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }\n    }, (section === null || section === void 0 ? void 0 : section.title) && __jsx(Grid, {\n      container: true,\n      spacing: 1,\n      justify: 'flex-start',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 29\n      }\n    }, __jsx(Grid, {\n      item: true,\n      xs: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 33\n      }\n    }, __jsx(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: section.title\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 37\n      }\n    }))), __jsx(Grid, {\n      key: i,\n      container: true,\n      spacing: 1,\n      justify: 'flex-start',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }\n    }, section.items.map(function (component, index) {\n      return __jsx(Grid, {\n        style: {\n          minWidth: component.width + '%'\n        },\n        item: true,\n        xs: getColumnWidth(component.width),\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 45\n        }\n      }, component.type === 'slider' && __jsx(Slider, {\n        sliderComponent: component,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 45\n        }\n      }), (component === null || component === void 0 ? void 0 : component.type) === 'card-slider' && __jsx(CardSlider, {\n        cardSlider: component,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 82\n        }\n      }), component.type === 'sliderOnly' && __jsx(SliderOnlyPreview, {\n        masterid: component.masterid,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 45\n        }\n      }), (component === null || component === void 0 ? void 0 : component.type) === 'slider-gallery' && __jsx(SliderGallery, {\n        sliderGallery: component,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 45\n        }\n      }), component.type === 'image' && __jsx(Image, {\n        imageComponent: component,\n        sectionType: section === null || section === void 0 ? void 0 : section.type,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 45\n        }\n      }), component.type === 'paragraph' && __jsx(Paragraph, {\n        paragraph: component,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 45\n        }\n      }), component.type === 'widgetbooking' && __jsx(WidgetBooking, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 45\n        }\n      }), component.type === 'contactForm' && __jsx(ContactForm, {\n        formData: component,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 45\n        }\n      }), component.type === 'map' && __jsx(WrappedMap, {\n        googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=\".concat(process.env.GOOGLE_MAP_API_KEY),\n        loadingElement: __jsx(\"div\", {\n          style: {\n            height: \"100%\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 65\n          }\n        }),\n        containerElement: __jsx(\"div\", {\n          style: {\n            height: \"350px\",\n            borderRadius: 10\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 67\n          }\n        }),\n        mapElement: __jsx(\"div\", {\n          style: {\n            height: \"100%\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 61\n          }\n        }),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 45\n        }\n      }));\n    })));\n  }));\n}\n_c = RenderWebPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RenderWebPage\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/steps/RenderWebPage.js"],"names":["React","Slider","SliderOnlyPreview","SliderGallery","Image","Paragraph","WidgetBooking","ContactForm","WrappedMap","CardSlider","Typography","Grid","getColumnWidth","width","Math","floor","RenderWebPage","props","sections","map","section","i","title","__html","items","component","index","minWidth","type","masterid","process","env","GOOGLE_MAP_API_KEY","height","borderRadius"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Slider from '../components/page/sections/slider/Slider'\nimport SliderOnlyPreview from '../components/page/sections/slider-only/Slider'\nimport SliderGallery from '../components/page/sections/slider-gallery/SliderGallery'\nimport Image from '../components/page/sections/image/Image'\nimport Paragraph from '../components/page/sections/paragraph/Paragraph'\nimport WidgetBooking from '../../../ibe/widget/booking'\nimport ContactForm from '../components/page/sections/contact-form/ContactForm'\nimport WrappedMap from '../components/page/sections/map/Map'\nimport CardSlider from \"../components/page/sections/card-type-slider/CardSlider\"\nimport { Typography, Grid } from '@material-ui/core'\n\nconst getColumnWidth = (width) => {\n    return Math.floor((width/100) * 12);\n}\n\nexport default function RenderWebPage(props) {\n    const { sections } = props\n\n    return (\n        <React.Fragment>\n            {sections.map((section, i) => {\n                return (\n                    <Typography key={i} component={'div'}>\n                        {\n                            section?.title &&\n                            <Grid container spacing={1} justify={'flex-start'}>\n                                <Grid item xs={12}>\n                                    <div dangerouslySetInnerHTML={{ __html: section.title }}/>\n                                </Grid>\n                            </Grid>\n                        }\n                        <Grid key={i} container spacing={1} justify={'flex-start'}>\n                            {\n                                section.items.map((component, index) => {\n                                    return (<Grid style={{ minWidth: component.width + '%' }} item xs={getColumnWidth(component.width)} key={index}>\n                                        {\n                                            component.type === 'slider' &&\n                                            <Slider sliderComponent={component} />\n                                        }\n                                        {\n                                            component?.type === 'card-slider' && <CardSlider cardSlider={component} />\n                                        }\n                                        {\n                                            component.type === 'sliderOnly' &&\n                                            <SliderOnlyPreview masterid={component.masterid} />\n                                        }\n                                        {\n                                            component?.type === 'slider-gallery' &&\n                                            <SliderGallery sliderGallery={component} />\n                                        }\n                                        {\n                                            component.type === 'image' &&\n                                            <Image imageComponent={component} sectionType={section?.type} />\n                                        }\n                                        {\n                                            component.type === 'paragraph' &&\n                                            <Paragraph paragraph={component} />\n                                        }\n                                        {\n                                            component.type === 'widgetbooking' &&\n                                            <WidgetBooking />\n                                        }\n                                        {\n                                            component.type === 'contactForm' &&\n                                            <ContactForm formData={component} />\n                                        }\n                                        {\n                                            component.type === 'map' &&\n                                            <WrappedMap\n                                                googleMapURL={`https://maps.googleapis.com/maps/api/js?key=${process.env.GOOGLE_MAP_API_KEY}`}\n                                                loadingElement={<div style={{ height: `100%` }} />}\n                                                containerElement={<div\n                                                style={{ height: `350px`, borderRadius: 10 }} />}\n                                                mapElement={<div style={{ height: `100%` }} />}\n                                            />\n                                        }\n                                    </Grid>)\n                                })\n                            }\n                        </Grid>\n                    </Typography>\n                )\n            })}\n        </React.Fragment>\n    )\n}"]},"metadata":{},"sourceType":"module"}