{"ast":null,"code":"import _defineProperty from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/mata/app-cloudweb/components/HorizontalList/index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useRef, useState, useEffect } from 'react';\nimport { Card, CardContent, List, ListItem, Typography, IconButton } from \"@material-ui/core\";\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport moment from \"moment\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from 'clsx';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    container: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    centeredContent: {\n      justifyContent: 'center'\n    },\n    mainRoot: {\n      overflow: 'auto',\n      '&::-webkit-scrollbar': {\n        display: 'none'\n      }\n    },\n    listRoot: {\n      display: 'inline-flex'\n    },\n    cardContent: {\n      padding: 10,\n      minWidth: 65,\n      \"&:last-child\": {\n        padding: 10\n      }\n    },\n    listItemRoot: {\n      paddingTop: '0',\n      paddingBottom: '0',\n      border: \"1px solid \".concat(theme.palette.primary.main),\n      margin: '0 4px',\n      cursor: 'pointer'\n    },\n    active: {\n      borderColor: '#FFC107'\n    },\n    cardText: {\n      fontSize: '14px',\n      textAlign: 'center'\n    },\n    withPaddingBottom: {\n      paddingBottom: '4px'\n    },\n    cardTextUpperCase: {\n      textTransform: 'uppercase'\n    },\n    leftIcon: {\n      paddingRight: '16px'\n    },\n    rightIcon: {\n      paddingLeft: '16px'\n    }\n  };\n});\nexport default function HorizontalList(props) {\n  _s();\n\n  var _mainRef$current4,\n      _mainRef$current5,\n      _mainRef$current6,\n      _mainRef$current7,\n      _this = this,\n      _mainRef$current8,\n      _mainRef$current9;\n\n  var classes = useStyles();\n  var list = props.list,\n      onClick = props.onClick,\n      showLeftButton = props.showLeftButton,\n      showRightButton = props.showRightButton,\n      value = props.value,\n      fields = props.fields;\n\n  var _useState = useState(value),\n      selectedItem = _useState[0],\n      setSelectedItem = _useState[1];\n\n  var _useState2 = useState(false),\n      isLoadedRef = _useState2[0],\n      setIsLoadedRef = _useState2[1];\n\n  var mainRef = useRef();\n  useEffect(function () {\n    if (mainRef !== null && mainRef !== void 0 && mainRef.current) setIsLoadedRef(true);\n  }, [mainRef]);\n\n  var handleWheel = function handleWheel(e) {\n    var _mainRef$current;\n\n    mainRef.current.scrollLeft = e.deltaY + (mainRef === null || mainRef === void 0 ? void 0 : (_mainRef$current = mainRef.current) === null || _mainRef$current === void 0 ? void 0 : _mainRef$current.scrollLeft);\n  };\n\n  var handleOnClick = function handleOnClick(e) {\n    if (typeof onClick === 'function') {\n      onClick(e);\n      setSelectedItem(e);\n    }\n  };\n\n  var handleScrollWithButton = function handleScrollWithButton(type) {\n    var _mainRef$current2, _mainRef$current3;\n\n    var scrollLeft = mainRef === null || mainRef === void 0 ? void 0 : (_mainRef$current2 = mainRef.current) === null || _mainRef$current2 === void 0 ? void 0 : _mainRef$current2.scrollLeft;\n    var scrollWidth = mainRef === null || mainRef === void 0 ? void 0 : (_mainRef$current3 = mainRef.current) === null || _mainRef$current3 === void 0 ? void 0 : _mainRef$current3.scrollWidth;\n    var offsetWidth = mainRef === null || mainRef === void 0 ? void 0 : mainRef.current.offsetWidth;\n    var maxScroll = scrollWidth - offsetWidth;\n\n    if (type === 'right') {\n      if (scrollLeft + 150 >= maxScroll) {\n        mainRef.current.scrollLeft = maxScroll;\n      } else if (scrollLeft + 150 < maxScroll) {\n        mainRef.current.scrollLeft += 150;\n      }\n    } else if (type === 'left') {\n      if (scrollLeft - 150 <= 0) {\n        mainRef.current.scrollLeft = 0;\n      } else if (scrollLeft - 150 > 0) {\n        mainRef.current.scrollLeft -= 150;\n      }\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: clsx(classes.container, _defineProperty({}, classes.centeredContent, (mainRef === null || mainRef === void 0 ? void 0 : (_mainRef$current4 = mainRef.current) === null || _mainRef$current4 === void 0 ? void 0 : _mainRef$current4.scrollWidth) <= (mainRef === null || mainRef === void 0 ? void 0 : (_mainRef$current5 = mainRef.current) === null || _mainRef$current5 === void 0 ? void 0 : _mainRef$current5.offsetWidth))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, list && (list === null || list === void 0 ? void 0 : list.length) > 0 && showLeftButton && (mainRef === null || mainRef === void 0 ? void 0 : (_mainRef$current6 = mainRef.current) === null || _mainRef$current6 === void 0 ? void 0 : _mainRef$current6.scrollWidth) > (mainRef === null || mainRef === void 0 ? void 0 : (_mainRef$current7 = mainRef.current) === null || _mainRef$current7 === void 0 ? void 0 : _mainRef$current7.offsetWidth) && __jsx(\"div\", {\n    className: classes.leftIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, __jsx(IconButton, {\n    onClick: function onClick() {\n      return handleScrollWithButton('left');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 25\n    }\n  }, __jsx(KeyboardArrowLeftIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 29\n    }\n  }))), __jsx(\"div\", {\n    ref: mainRef,\n    className: classes.mainRoot,\n    onWheel: function onWheel(e) {\n      return handleWheel(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, __jsx(List, {\n    className: classes.listRoot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, list.map(function (item, index) {\n    return __jsx(ListItem, {\n      disableGutters: true,\n      key: index,\n      className: clsx(classes.listItemRoot, _defineProperty({}, classes.active, selectedItem === (item === null || item === void 0 ? void 0 : item.item))),\n      onClick: function onClick() {\n        return handleOnClick(item === null || item === void 0 ? void 0 : item.item);\n      },\n      selected: selectedItem === (item === null || item === void 0 ? void 0 : item.item),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 29\n      }\n    }, __jsx(Card, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 33\n      }\n    }, __jsx(CardContent, {\n      className: classes.cardContent,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 37\n      }\n    }, fields && fields.length > 0 && fields.map(function (field, i) {\n      return __jsx(Typography, {\n        key: \"\".concat(i, \"-p\"),\n        className: clsx(classes.cardText, classes.withPaddingBottom, _defineProperty({}, classes.cardTextUpperCase, field === null || field === void 0 ? void 0 : field.uppercase)),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 49\n        }\n      }, field !== null && field !== void 0 && field.useMoment ? moment(item[field === null || field === void 0 ? void 0 : field.name], field === null || field === void 0 ? void 0 : field.convertFormat).format(field === null || field === void 0 ? void 0 : field.renderFormat) : item[field === null || field === void 0 ? void 0 : field.name]);\n    }))));\n  }))), list && (list === null || list === void 0 ? void 0 : list.length) > 0 && showRightButton && (mainRef === null || mainRef === void 0 ? void 0 : (_mainRef$current8 = mainRef.current) === null || _mainRef$current8 === void 0 ? void 0 : _mainRef$current8.scrollWidth) > (mainRef === null || mainRef === void 0 ? void 0 : (_mainRef$current9 = mainRef.current) === null || _mainRef$current9 === void 0 ? void 0 : _mainRef$current9.offsetWidth) && __jsx(\"div\", {\n    className: classes.rightIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  }, __jsx(IconButton, {\n    onClick: function onClick() {\n      return handleScrollWithButton('right');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 25\n    }\n  }, __jsx(KeyboardArrowRightIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 29\n    }\n  }))));\n}\n\n_s(HorizontalList, \"fVwf4Jnp/tH5xCUUIJNir30VL/Q=\", false, function () {\n  return [useStyles];\n});\n\n_c = HorizontalList;\n\nvar _c;\n\n$RefreshReg$(_c, \"HorizontalList\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/HorizontalList/index.js"],"names":["React","useRef","useState","useEffect","Card","CardContent","List","ListItem","Typography","IconButton","KeyboardArrowLeftIcon","KeyboardArrowRightIcon","moment","makeStyles","clsx","useStyles","theme","container","display","alignItems","centeredContent","justifyContent","mainRoot","overflow","listRoot","cardContent","padding","minWidth","listItemRoot","paddingTop","paddingBottom","border","palette","primary","main","margin","cursor","active","borderColor","cardText","fontSize","textAlign","withPaddingBottom","cardTextUpperCase","textTransform","leftIcon","paddingRight","rightIcon","paddingLeft","HorizontalList","props","classes","list","onClick","showLeftButton","showRightButton","value","fields","selectedItem","setSelectedItem","isLoadedRef","setIsLoadedRef","mainRef","current","handleWheel","e","scrollLeft","deltaY","handleOnClick","handleScrollWithButton","type","scrollWidth","offsetWidth","maxScroll","length","map","item","index","field","i","uppercase","useMoment","name","convertFormat","format","renderFormat"],"mappings":"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","sourcesContent":["import React, {useRef, useState, useEffect} from 'react'\nimport {Card, CardContent, List, ListItem, Typography, IconButton} from \"@material-ui/core\";\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport moment from \"moment\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport clsx from 'clsx'\n\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        display: 'flex',\n        alignItems: 'center'\n    },\n    centeredContent: {\n        justifyContent: 'center',\n    },\n    mainRoot: {\n        overflow: 'auto',\n        '&::-webkit-scrollbar': {\n            display: 'none'\n        },\n    },\n    listRoot: {\n        display: 'inline-flex',\n    },\n    cardContent: {\n        padding: 10,\n        minWidth: 65,\n        \"&:last-child\": {\n            padding: 10\n        }\n    },\n    listItemRoot: {\n        paddingTop: '0',\n        paddingBottom: '0',\n        border: `1px solid ${theme.palette.primary.main}`,\n        margin: '0 4px',\n        cursor: 'pointer'\n    },\n    active: {\n        borderColor: '#FFC107'\n    },\n    cardText: {\n        fontSize: '14px',\n        textAlign: 'center'\n    },\n    withPaddingBottom: {\n        paddingBottom: '4px'\n    },\n    cardTextUpperCase: {\n        textTransform: 'uppercase'\n    },\n    leftIcon: {\n        paddingRight: '16px'\n    },\n    rightIcon: {\n        paddingLeft: '16px'\n    }\n}))\n\nexport default function HorizontalList(props) {\n    const classes = useStyles()\n\n    const { list, onClick, showLeftButton, showRightButton, value, fields } = props\n    const [selectedItem, setSelectedItem] = useState(value)\n    const [isLoadedRef, setIsLoadedRef] = useState(false)\n\n    const mainRef = useRef()\n\n\n    useEffect(() => {\n        if(mainRef?.current) setIsLoadedRef(true)\n    }, [mainRef])\n\n    const handleWheel = (e) => {\n        mainRef.current.scrollLeft = e.deltaY + mainRef?.current?.scrollLeft\n    }\n\n    const handleOnClick = (e) => {\n        if(typeof onClick === 'function') {\n            onClick(e)\n            setSelectedItem(e)\n        }\n    }\n\n    const handleScrollWithButton = (type) => {\n        const scrollLeft = mainRef?.current?.scrollLeft\n        const scrollWidth = mainRef?.current?.scrollWidth\n        const offsetWidth = mainRef?.current.offsetWidth\n        const maxScroll = scrollWidth - offsetWidth\n        if(type === 'right') {\n            if((scrollLeft + 150) >= maxScroll) {\n                mainRef.current.scrollLeft = maxScroll\n            } else if((scrollLeft + 150) < maxScroll) {\n                mainRef.current.scrollLeft += 150\n            }\n        } else if(type === 'left') {\n            if((scrollLeft - 150) <= 0) {\n                mainRef.current.scrollLeft = 0\n            } else if((scrollLeft - 150) > 0) {\n                mainRef.current.scrollLeft -= 150\n            }\n        }\n    }\n\n\n\n\n    return(\n        <div className={clsx(classes.container, {[classes.centeredContent]: mainRef?.current?.scrollWidth <= mainRef?.current?.offsetWidth})}>\n            {\n                list && list?.length > 0 && showLeftButton && mainRef?.current?.scrollWidth > mainRef?.current?.offsetWidth && (\n                    <div className={classes.leftIcon}>\n                        <IconButton onClick={() => handleScrollWithButton('left')}>\n                            <KeyboardArrowLeftIcon />\n                        </IconButton>\n                    </div>\n                )\n            }\n            <div\n                ref={mainRef}\n                className={classes.mainRoot}\n                onWheel={(e) =>  handleWheel(e)}\n            >\n                <List className={classes.listRoot}>\n                    {\n                        list.map((item, index) => (\n                            <ListItem\n                                disableGutters\n                                key={index}\n                                className={clsx(classes.listItemRoot, {[classes.active]: selectedItem === item?.item})}\n                                onClick={() => handleOnClick(item?.item)}\n                                selected={selectedItem === item?.item}\n                            >\n                                <Card>\n                                    <CardContent className={classes.cardContent}>\n                                        {fields && fields.length > 0 && (\n                                            fields.map((field, i) => (\n                                                <Typography key={`${i}-p`} className={clsx(classes.cardText, classes.withPaddingBottom, {[classes.cardTextUpperCase]: field?.uppercase})}>\n                                                    {field?.useMoment ? (\n                                                        moment(item[field?.name], field?.convertFormat).format(field?.renderFormat)\n                                                    ): (\n                                                        item[field?.name]\n                                                    )}\n                                                </Typography>\n                                            ))\n                                        )}\n                                    </CardContent>\n                                </Card>\n                            </ListItem>\n                        ))\n                    }\n                </List>\n            </div>\n            {\n                list && list?.length > 0 && showRightButton && mainRef?.current?.scrollWidth > mainRef?.current?.offsetWidth && (\n                    <div className={classes.rightIcon}>\n                        <IconButton onClick={() => handleScrollWithButton('right')}>\n                            <KeyboardArrowRightIcon />\n                        </IconButton>\n                    </div>\n                )\n            }\n        </div>\n\n    )\n}"]},"metadata":{},"sourceType":"module"}