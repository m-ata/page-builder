{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/booking/Review.js\";\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect, useState } from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport { setToState } from 'state/actions';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Box, Button, CircularProgress, Grid, Paper, Tooltip, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\nimport FrameCheckbox from '@webcms-ui/core/frame-checkbox';\nimport * as global from '@webcms-globals';\nimport getSymbolFromCurrency from 'model/currency-symbol';\nimport WebCmsGlobal from 'components/webcms-global';\nimport RoomSummary from 'components/booking/components/RoomSummary';\nimport ProgressButton from 'components/booking/components/ProgressButton';\nimport PaymentForm from 'components/payment/credit-card/form';\nimport Alert from '@material-ui/lab/Alert';\nimport AlertTitle from '@material-ui/lab/AlertTitle';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { useSnackbar } from 'notistack';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nimport ThreeDPayDialog from 'components/payment/ThreeDPayDialog';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport TagManager from '@webcms-globals/tag-manager';\nimport { defaultLocale } from 'lib/translations/config';\nconst useStyles = makeStyles(() => ({\n  root: {\n    marginTop: 16,\n    padding: 10,\n    background: '#F5F5F5'\n  },\n  bottom: {\n    marginBottom: 10\n  },\n  ccBottomBanner: {\n    textAlign: 'center'\n  },\n  ccBottomBannerImg: {\n    width: '50%',\n    marginTop: 30\n  },\n  buttonDisable: {\n    color: '#242424'\n  },\n  listTitle: {\n    fontWeight: 'bold'\n  }\n}));\n\nconst SummaryBox = props => {\n  const {\n    title,\n    children\n  } = props;\n  const classes = useStyles();\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, title), __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    className: classes.bottom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, __jsx(Paper, {\n    square: true,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, __jsx(Box, {\n    p: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }, children)))));\n};\n\nconst Review = props => {\n  var _state$flyTransferInf, _state$flyTransferInf2, _state$flyTransferInf3, _state$flyTransferInf4, _state$flyTransferRet, _state$flyTransferRet2, _state$flyTransferRet3, _state$flyTransferRet4;\n\n  const classes = useStyles();\n  const {\n    state,\n    setToState\n  } = props;\n  const {\n    GENERAL_SETTINGS,\n    WEBCMS_DATA,\n    locale\n  } = useContext(WebCmsGlobal);\n  const {\n    t\n  } = useTranslation();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const {\n    0: reservationTermsAndConditions,\n    1: setReservationTermsAndConditions\n  } = useState(false);\n  const {\n    0: hygieneAndTravelPolicies,\n    1: setHygieneAndTravelPolicies\n  } = useState(false);\n  const {\n    0: privacyAndPersonalDataProtectionPolicies,\n    1: setPrivacyAndPersonalDataProtectionPolicies\n  } = useState(false);\n  const {\n    0: creditCardInfo,\n    1: setCreditCardInfo\n  } = useState(false);\n  const {\n    0: creditCardIsValid,\n    1: setCreditCardIsValid\n  } = useState(false);\n  const {\n    0: errorMsg,\n    1: setErrorMsg\n  } = useState(false);\n  const {\n    0: isSaveError,\n    1: setIsSaveError\n  } = useState(false);\n  const {\n    0: isPayFrameLoad,\n    1: setIsPayFrameLoad\n  } = useState(false);\n  const {\n    0: redirectUrl,\n    1: setRedirectUrl\n  } = useState(false);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    0: isReservationConfirm,\n    1: setIsReservationConfirm\n  } = useState(false);\n  const {\n    0: isPaySaved,\n    1: setIsPaySaved\n  } = useState(false);\n  const {\n    0: transactionId,\n    1: setTransactionId\n  } = useState(false);\n  const {\n    0: transactionStatus,\n    1: setTransactionStatus\n  } = useState(0);\n  const {\n    0: paymentResult,\n    1: setPaymentResult\n  } = useState({\n    gid: false,\n    isgroup: false,\n    reservno: false\n  });\n  const {\n    0: hotelBankIbanWarnMsg,\n    1: setHotelBankIbanWarnMsg\n  } = useState(false);\n  const loginfo = useSelector(state => state.orest.currentUser && state.orest.currentUser.loginfo);\n  const token = useSelector(state => {\n    var _state$orest, _state$orest$currentU, _state$orest$currentU2;\n\n    return (state === null || state === void 0 ? void 0 : (_state$orest = state.orest) === null || _state$orest === void 0 ? void 0 : (_state$orest$currentU = _state$orest.currentUser) === null || _state$orest$currentU === void 0 ? void 0 : (_state$orest$currentU2 = _state$orest$currentU.auth) === null || _state$orest$currentU2 === void 0 ? void 0 : _state$orest$currentU2.access_token) || false;\n  });\n  const clientBase = useSelector(state => {\n    var _state$orest2, _state$orest2$state;\n\n    return (state === null || state === void 0 ? void 0 : (_state$orest2 = state.orest) === null || _state$orest2 === void 0 ? void 0 : (_state$orest2$state = _state$orest2.state) === null || _state$orest2$state === void 0 ? void 0 : _state$orest2$state.client) || false;\n  });\n  const showIbanNo = state.selectedPaymentIbanId ? state.hotelPaymentType.bankiban.filter(item => String(item.id) === String(state.selectedPaymentIbanId)) : null;\n  useEffect(() => {\n    var _WEBCMS_DATA$assets, _WEBCMS_DATA$assets$m;\n\n    let isEffect = true;\n\n    if (isEffect && WEBCMS_DATA !== null && WEBCMS_DATA !== void 0 && (_WEBCMS_DATA$assets = WEBCMS_DATA.assets) !== null && _WEBCMS_DATA$assets !== void 0 && (_WEBCMS_DATA$assets$m = _WEBCMS_DATA$assets.meta) !== null && _WEBCMS_DATA$assets$m !== void 0 && _WEBCMS_DATA$assets$m.googleTag) {\n      var _WEBCMS_DATA$assets2, _WEBCMS_DATA$assets2$;\n\n      TagManager.page.setChange({\n        hotelName: WEBCMS_DATA === null || WEBCMS_DATA === void 0 ? void 0 : (_WEBCMS_DATA$assets2 = WEBCMS_DATA.assets) === null || _WEBCMS_DATA$assets2 === void 0 ? void 0 : (_WEBCMS_DATA$assets2$ = _WEBCMS_DATA$assets2.meta) === null || _WEBCMS_DATA$assets2$ === void 0 ? void 0 : _WEBCMS_DATA$assets2$.title,\n        hotelId: GENERAL_SETTINGS.HOTELREFNO,\n        pageTitle: window.document.title,\n        pagePath: location.href,\n        pageStep: 'Preview',\n        isGuest: clientBase\n      });\n    }\n\n    if (showIbanNo) {\n      const getBankIban = state.hotelPaymentType.bankiban.find(item => String(item.id) === String(state.selectedPaymentIbanId));\n\n      if (getBankIban) {\n        axios({\n          url: 'api/hotel/bankiban/warnmsg',\n          method: 'post',\n          params: {\n            mid: getBankIban.mid,\n            langcode: locale,\n            clear: true\n          }\n        }).then(hotelBankIbanWarnMsgResponse => {\n          var _hotelBankIbanWarnMsg;\n\n          if (hotelBankIbanWarnMsgResponse !== null && hotelBankIbanWarnMsgResponse !== void 0 && (_hotelBankIbanWarnMsg = hotelBankIbanWarnMsgResponse.data) !== null && _hotelBankIbanWarnMsg !== void 0 && _hotelBankIbanWarnMsg.success) {\n            setToState('ibe', ['hotelBankIbanWarnMsg'], hotelBankIbanWarnMsgResponse.data.data.warning);\n          } else {\n            setToState('ibe', ['hotelBankIbanWarnMsg'], false);\n          }\n        }).catch(() => {\n          setToState('ibe', ['hotelBankIbanWarnMsg'], false);\n        });\n      }\n    }\n\n    return () => {\n      isEffect = false;\n    };\n  }, []);\n  const TRANSACTION_STATUS = {\n    USE_PAY_FORM: 0,\n    SUCCESSFUL: 1,\n    ERROR: 2\n  };\n  const SAVE_ERROR_TYPE = {\n    SESSION_TIMEOUT: 'payment_transaction_completed_but_not_posted',\n    PAYMENT_FAIL: 'payment_fail'\n  };\n  useEffect(() => {\n    if (redirectUrl) {\n      window.addEventListener('message', function (event) {\n        const response = event.data.response || false;\n\n        if (!isPaySaved) {\n          setIsPaySaved(true);\n          return axios({\n            url: 'api/ors/payment/save',\n            method: 'post',\n            params: {\n              isfail: !response.success,\n              transactionid: transactionId,\n              orderid: response.orderid,\n              reftype: paymentResult.isgroup ? 'RESMASTER' : 'RESERVAT',\n              isgroup: paymentResult.isgroup,\n              refno: paymentResult.reservno,\n              reservationGid: paymentResult.gid,\n              reservationUpdate: true,\n              langcode: locale,\n              clientPassword: state.clientPassword\n            }\n          }).then(responsePaymentSave => {\n            if (responsePaymentSave.data.success) {\n              if (responsePaymentSave.data.processMsg === SAVE_ERROR_TYPE.PAYMENT_FAIL) {\n                setTransactionStatus(TRANSACTION_STATUS.ERROR);\n                setErrorMsg(response.errormsg);\n                setIsReservationConfirm(false);\n                setIsLoading(false);\n                setIsPaySaved(false);\n              } else {\n                setIsPaySaved(false);\n                setIsReservationConfirm(false);\n                setTransactionStatus(TRANSACTION_STATUS.SUCCESSFUL);\n                setToState('ibe', ['bookingConfirmReservno'], paymentResult.reservno);\n                setToState('ibe', ['bookingConfirmIsGroup'], paymentResult.isgroup);\n                setToState('ibe', ['bookingConfirmTransId'], response.orderid);\n                setToState('ibe', ['bookingActiveStep'], state.bookingActiveStep + 1);\n              }\n            } else {\n              setTransactionStatus(TRANSACTION_STATUS.ERROR);\n              setIsPaySaved(false);\n\n              if (responsePaymentSave.data.processMsg === SAVE_ERROR_TYPE.SESSION_TIMEOUT) {\n                setIsSaveError(true);\n                setIsReservationConfirm(false);\n                setErrorMsg(t('str_paymentTransactionSuccessButSessionTimeout', {\n                  transid: response.orderid || ''\n                }));\n              } else {\n                setErrorMsg(response.errormsg);\n                setIsReservationConfirm(false);\n              }\n            }\n\n            setIsLoading(false);\n          }).catch(() => {\n            setTransactionStatus(TRANSACTION_STATUS.ERROR);\n            setErrorMsg(response.errormsg);\n            setIsReservationConfirm(false);\n            setIsLoading(false);\n            setIsPaySaved(false);\n          });\n        } else {\n          setTransactionStatus(TRANSACTION_STATUS.ERROR);\n          setErrorMsg(response.errormsg);\n          setIsLoading(false);\n          setIsPaySaved(false);\n          setIsReservationConfirm(false);\n        }\n      }, false);\n    }\n  }, [redirectUrl]);\n  useEffect(() => {\n    window.onbeforeunload = function (e) {\n      if (isPaySaved) {\n        e.preventDefault();\n        return e.returnValue = '';\n      }\n    };\n  }, [isPaySaved]);\n\n  const reservationInfo = () => {\n    let totalPrice = 0,\n        currencySymbol = null,\n        currencyCode = null;\n    state.selectedRooms.map(item => {\n      if (!Boolean(currencySymbol) || !Boolean(currencyCode)) {\n        currencySymbol = getSymbolFromCurrency(item.pricecurr);\n        currencyCode = item.pricecurr;\n      }\n\n      totalPrice = totalPrice + item.totalprice;\n    });\n\n    if (state.flyTransferInfo) {\n      totalPrice = totalPrice + state.flyTransferInfo.priceInfo.res;\n    }\n\n    if (state.flyTransferReturnInfo) {\n      totalPrice = totalPrice + state.flyTransferReturnInfo.priceInfo.res;\n    }\n\n    return {\n      totalPrice: totalPrice,\n      currencyCode: currencyCode,\n      currencySymbol: currencySymbol\n    };\n  };\n\n  const packageAndService = [];\n\n  const getPaymentType = selectedPaymentType => {\n    let paymentType = false;\n\n    if (selectedPaymentType.isccpay) {\n      paymentType = 'isccpay';\n    } else if (selectedPaymentType.iscash) {\n      paymentType = 'iscash';\n    } else if (selectedPaymentType.istransfer) {\n      paymentType = 'istransfer';\n    } else if (selectedPaymentType.ismailorder) {\n      paymentType = 'ismailorder';\n    }\n\n    return paymentType;\n  };\n\n  const handleSaveReservation = async () => {\n    if (!reservationTermsAndConditions) {\n      enqueueSnackbar(t('str_pleaseCheckMandatoryFields'), {\n        variant: 'warning'\n      });\n    } else if (!hygieneAndTravelPolicies) {\n      enqueueSnackbar(t('str_pleaseCheckMandatoryFields'), {\n        variant: 'warning'\n      });\n    } else if (!privacyAndPersonalDataProtectionPolicies) {\n      enqueueSnackbar(t('str_pleaseCheckMandatoryFields'), {\n        variant: 'warning'\n      });\n    } else {\n      const saveReservation = () => {\n        var _WEBCMS_DATA$assets3, _WEBCMS_DATA$assets3$;\n\n        let ccInfo = false;\n\n        if (state.selectedPaymentType.ismailorder) {\n          const cCardInfo = state.mailOrderInfo;\n          ccInfo = {};\n          ccInfo.cardOwner = cCardInfo.cardOwner;\n          ccInfo.cardNumber = cCardInfo.cardNumber.replace(/\\\\s/g, '');\n          ccInfo.cardExpiry = cCardInfo.cardExpiry;\n          ccInfo.cardCvc = cCardInfo.cardCvc;\n        }\n\n        setIsReservationConfirm(true);\n\n        if (WEBCMS_DATA !== null && WEBCMS_DATA !== void 0 && (_WEBCMS_DATA$assets3 = WEBCMS_DATA.assets) !== null && _WEBCMS_DATA$assets3 !== void 0 && (_WEBCMS_DATA$assets3$ = _WEBCMS_DATA$assets3.meta) !== null && _WEBCMS_DATA$assets3$ !== void 0 && _WEBCMS_DATA$assets3$.googleTag) {\n          var _WEBCMS_DATA$assets4, _WEBCMS_DATA$assets4$;\n\n          TagManager.booking.setCheckoutRoom({\n            eventLabel: 'Room Sale Checkout',\n            hotelName: WEBCMS_DATA === null || WEBCMS_DATA === void 0 ? void 0 : (_WEBCMS_DATA$assets4 = WEBCMS_DATA.assets) === null || _WEBCMS_DATA$assets4 === void 0 ? void 0 : (_WEBCMS_DATA$assets4$ = _WEBCMS_DATA$assets4.meta) === null || _WEBCMS_DATA$assets4$ === void 0 ? void 0 : _WEBCMS_DATA$assets4$.title,\n            hotelId: GENERAL_SETTINGS.HOTELREFNO,\n            payOption: t(state.selectedPaymentType.description, false, defaultLocale),\n            checkoutData: state.selectedRooms\n          });\n        }\n\n        let flyTransferInfo = false,\n            flyTransferReturnInfo = false;\n\n        if (state.flyTransferInfo) {\n          flyTransferInfo = state.flyTransferInfo;\n        }\n\n        if (state.flyTransferReturn) {\n          flyTransferReturnInfo = state.flyTransferReturnInfo;\n        }\n\n        return axios({\n          url: `api/hotel/book/info/confirm`,\n          method: 'post',\n          data: {\n            clienttoken: token,\n            uitoken: state.hotelUiToken,\n            langcode: locale,\n            contactInfo: state.contactInfo,\n            selectedRooms: state.selectedRooms,\n            selectedProducts: state.selectedProducts,\n            creditCardInfo: state.creditCardInfo,\n            clientPassword: state.clientPassword,\n            clientID: clientBase && clientBase.id || loginfo && loginfo.refid || false,\n            paymentType: getPaymentType(state.selectedPaymentType),\n            isCcPay: getPaymentType(state.selectedPaymentType) === 'isccpay',\n            isMailOrder: getPaymentType(state.selectedPaymentType) === 'ismailorder',\n            ccInfo: ccInfo,\n            continueWithoutClientRecord: state.continueWithoutClientRecord,\n            flyTransfer: flyTransferInfo,\n            flyTransferReturn: flyTransferReturnInfo\n          }\n        }).then(response => {\n          if (response.data.success) {\n            if (!state.selectedPaymentType.isccpay) {\n              setIsReservationConfirm(false);\n              setToState('ibe', ['bookingConfirmReservno'], response.data.reservno);\n              setToState('ibe', ['bookingConfirmIsGroup'], response.data.isGroupReservation);\n              setToState('ibe', ['bookingActiveStep'], state.bookingActiveStep + 1);\n            }\n\n            return response.data;\n          } else {\n            return false;\n          }\n        }).catch(() => {\n          return false;\n        });\n      };\n\n      if (state.selectedPaymentType.isccpay) {\n        if (creditCardIsValid.isError || !creditCardIsValid.isValid) {\n          enqueueSnackbar(t('str_pleaseCheckYourCardInformation'), {\n            variant: 'warning'\n          });\n        } else {\n          let payGid;\n\n          if (!paymentResult.gid) {\n            const reservationInfo = await saveReservation();\n            setPaymentResult({\n              gid: reservationInfo.payGid,\n              isgroup: reservationInfo.isGroupReservation,\n              reservno: reservationInfo.reservno\n            });\n            payGid = reservationInfo.payGid;\n          } else {\n            payGid = paymentResult.gid;\n          }\n\n          setIsLoading(true);\n          let postData = {};\n          postData.cardOwner = creditCardInfo.cardOwner;\n          postData.cardNumber = creditCardInfo.cardNumber.replace(/\\\\s/g, '');\n          postData.cardExpiry = creditCardInfo.cardExpiry;\n          postData.cardCvc = creditCardInfo.cardCvc;\n          return axios({\n            url: 'api/ors/payment/do',\n            method: 'post',\n            params: {\n              gid: payGid\n            },\n            data: postData\n          }).then(response => {\n            if (response.data.success) {\n              setIsLoading(false);\n              setTransactionId(response.data.transactionid);\n              setRedirectUrl(response.data.redirecturl);\n              return true;\n            } else {\n              setTransactionStatus(TRANSACTION_STATUS.ERROR);\n              setErrorMsg(t('str_checkCCorPayInfoError'));\n              setIsLoading(false);\n              setIsReservationConfirm(false);\n              return false;\n            }\n          }).catch(() => {\n            setTransactionStatus(TRANSACTION_STATUS.ERROR);\n            setErrorMsg(t('str_checkCCorPayInfoError'));\n            setIsLoading(false);\n            setIsReservationConfirm(false);\n            return false;\n          });\n        }\n      } else {\n        return saveReservation();\n      }\n    }\n  };\n\n  const handlePayTryAgain = () => {\n    setIsLoading(true);\n    setTimeout(() => {\n      setIsLoading(false);\n      setErrorMsg(false);\n      setRedirectUrl(false);\n      setIsPayFrameLoad(false);\n      setIsReservationConfirm(false);\n      setTransactionStatus(0);\n    }, 1500);\n  };\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 9\n    }\n  }, __jsx(Paper, {\n    variant: \"outlined\",\n    square: true,\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 13\n    }\n  }, __jsx(Box, {\n    p: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 21\n    }\n  }, __jsx(Grid, {\n    item: true,\n    sm: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 25\n    }\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 29\n    }\n  }, t('str_roomDetails')), __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 29\n    }\n  }, state.selectedRooms && state.selectedRooms.length > 0 && state.selectedRooms.map((item, i) => __jsx(Grid, {\n    item: true,\n    xs: 12,\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 33\n    }\n  }, __jsx(RoomSummary, {\n    roomName: item.roomtypename,\n    checkin: item.checkin,\n    checkout: item.checkout,\n    pax: item.totalpax,\n    child: item.totalchd,\n    night: item.totalnight,\n    price: item.totalprice,\n    pricecurr: item.pricecurr,\n    gid: item.gid,\n    thumbnail: item.thumbnail,\n    guestList: item.guestList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 33\n    }\n  }))))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 25\n    }\n  }, packageAndService && packageAndService.length > 0 && __jsx(SummaryBox, {\n    title: t('str_packageAndServices'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 33\n    }\n  }, \"-\"), __jsx(SummaryBox, {\n    title: t('str_paymentMethod'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 29\n    }\n  }, t(state.selectedPaymentType.description), showIbanNo ? __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    style: {\n      marginTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 37\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 41\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle2\",\n    gutterBottom: true,\n    className: classes.listTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 45\n    }\n  }, t('str_bankName')), __jsx(Typography, {\n    variant: \"body2\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 45\n    }\n  }, showIbanNo && showIbanNo[0].bankname)), __jsx(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 41\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle2\",\n    gutterBottom: true,\n    className: classes.listTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 45\n    }\n  }, t('str_bankBranch')), __jsx(Typography, {\n    variant: \"body2\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 45\n    }\n  }, showIbanNo && showIbanNo[0].bankbranch)), __jsx(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 41\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle2\",\n    gutterBottom: true,\n    className: classes.listTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 45\n    }\n  }, t('str_bankCurrency')), __jsx(Typography, {\n    variant: \"body2\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 45\n    }\n  }, showIbanNo && showIbanNo[0].currencycode)), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 41\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle2\",\n    gutterBottom: true,\n    className: classes.listTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 45\n    }\n  }, t('str_bankIban')), __jsx(Typography, {\n    variant: \"body2\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 45\n    }\n  }, showIbanNo && showIbanNo[0].iban))) : null), state.hotelBankIbanWarnMsg ? __jsx(Alert, {\n    severity: \"info\",\n    variant: \"outlined\",\n    style: {\n      padding: 5,\n      paddingRight: 15,\n      background: '#ffffff',\n      textAlign: 'justify'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 33\n    }\n  }, state.hotelBankIbanWarnMsg) : null), state.flyTransferInfo || state.flyTransferReturnInfo ? __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 29\n    }\n  }, __jsx(Grid, {\n    item: true,\n    sm: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 33\n    }\n  }, __jsx(SummaryBox, {\n    title: t('str_transfer'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 37\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    style: {\n      marginTop: 10,\n      paddingBottom: 10\n    },\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 41\n    }\n  }, state.flyTransferInfo ? __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 5,\n    style: {\n      position: 'relative'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 49\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle2\",\n    gutterBottom: true,\n    className: classes.listTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 53\n    }\n  }, t('str_arrivalTransfer')), __jsx(Typography, {\n    variant: \"body2\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 53\n    }\n  }, moment(state.flyTransferInfo.flydate, 'YYYY-MM-DD').format('dd, MMM DD, YYYY'), \" - \", moment(state.flyTransferInfo.flytime, \"HH:mm:ss\").format(\"HH:mm\")), __jsx(\"span\", {\n    style: {\n      position: 'absolute',\n      top: 0,\n      right: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 53\n    }\n  }, (state === null || state === void 0 ? void 0 : (_state$flyTransferInf = state.flyTransferInfo) === null || _state$flyTransferInf === void 0 ? void 0 : (_state$flyTransferInf2 = _state$flyTransferInf.priceInfo) === null || _state$flyTransferInf2 === void 0 ? void 0 : _state$flyTransferInf2.pricecurr) && getSymbolFromCurrency(state.flyTransferInfo.priceInfo.pricecurr), \" \", (state === null || state === void 0 ? void 0 : (_state$flyTransferInf3 = state.flyTransferInfo) === null || _state$flyTransferInf3 === void 0 ? void 0 : (_state$flyTransferInf4 = _state$flyTransferInf3.priceInfo) === null || _state$flyTransferInf4 === void 0 ? void 0 : _state$flyTransferInf4.res) && global.helper.formatPrice(state.flyTransferInfo.priceInfo.res))) : null, state.flyTransferReturnInfo ? __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 49\n    }\n  }, __jsx(Divider, {\n    orientation: \"vertical\",\n    flexItem: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 53\n    }\n  }), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 5,\n    style: {\n      position: 'relative'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 53\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle2\",\n    gutterBottom: true,\n    className: classes.listTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 57\n    }\n  }, t('str_departureTransfer')), __jsx(Typography, {\n    variant: \"body2\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 57\n    }\n  }, moment(state.flyTransferReturnInfo.flydate, 'YYYY-MM-DD').format('dd, MMM DD, YYYY'), \" - \", moment(state.flyTransferReturnInfo.flytime, \"HH:mm:ss\").format(\"HH:mm\")), __jsx(\"span\", {\n    style: {\n      position: 'absolute',\n      top: 0,\n      right: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 57\n    }\n  }, (state === null || state === void 0 ? void 0 : (_state$flyTransferRet = state.flyTransferReturnInfo) === null || _state$flyTransferRet === void 0 ? void 0 : (_state$flyTransferRet2 = _state$flyTransferRet.priceInfo) === null || _state$flyTransferRet2 === void 0 ? void 0 : _state$flyTransferRet2.pricecurr) && getSymbolFromCurrency(state.flyTransferReturnInfo.priceInfo.pricecurr), \" \", (state === null || state === void 0 ? void 0 : (_state$flyTransferRet3 = state.flyTransferReturnInfo) === null || _state$flyTransferRet3 === void 0 ? void 0 : (_state$flyTransferRet4 = _state$flyTransferRet3.priceInfo) === null || _state$flyTransferRet4 === void 0 ? void 0 : _state$flyTransferRet4.res) && global.helper.formatPrice(state.flyTransferReturnInfo.priceInfo.res)))) : null)))) : null, state.selectedPaymentType.isccpay && __jsx(Grid, {\n    item: true,\n    sm: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 25\n    }\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 29\n    }\n  }, t('str_creditCardPayment')), __jsx(Paper, {\n    variant: \"outlined\",\n    square: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 29\n    }\n  }, __jsx(Box, {\n    p: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 33\n    }\n  }, transactionStatus === TRANSACTION_STATUS.USE_PAY_FORM && redirectUrl ? __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 41\n    }\n  }, __jsx(ThreeDPayDialog, {\n    open: transactionStatus === TRANSACTION_STATUS.USE_PAY_FORM && redirectUrl,\n    iframeUrl: redirectUrl,\n    isPayFrameLoad: isPayFrameLoad,\n    setIsPayFrameLoad: e => setIsPayFrameLoad(e),\n    isPaySave: isPaySaved,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 45\n    }\n  })) : transactionStatus === TRANSACTION_STATUS.ERROR ? __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 41\n    }\n  }, isSaveError ? __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 49\n    }\n  }, __jsx(Alert, {\n    severity: \"error\",\n    style: {\n      marginBottom: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 53\n    }\n  }, __jsx(AlertTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 57\n    }\n  }, t('str_error')), errorMsg)) : __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 49\n    }\n  }, __jsx(Alert, {\n    severity: \"error\",\n    style: {\n      marginBottom: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 53\n    }\n  }, __jsx(AlertTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 57\n    }\n  }, t('str_error')), t('str_paymentTransactionError'), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 91\n    }\n  }), __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 57\n    }\n  }, t('str_detail'), \":\"), \" \", errorMsg || ''), __jsx(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    startIcon: __jsx(RefreshIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 107\n      }\n    }),\n    onClick: () => handlePayTryAgain(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 53\n    }\n  }, t('str_tryAgain')))) : null, transactionStatus !== TRANSACTION_STATUS.ERROR && __jsx(PaymentForm, {\n    showCard: true,\n    onChange: e => setCreditCardInfo(e),\n    isValid: e => setCreditCardIsValid(e),\n    isDisabled: isLoading || isReservationConfirm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 41\n    }\n  }), __jsx(\"div\", {\n    className: classes.ccBottomBanner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 37\n    }\n  }, __jsx(\"img\", {\n    className: classes.ccBottomBannerImg,\n    src: 'imgs/epay-std-banner.png',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 576,\n      columnNumber: 41\n    }\n  }))))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 25\n    }\n  }, __jsx(Divider, {\n    variant: \"middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 29\n    }\n  }), __jsx(Box, {\n    p: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 29\n    }\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    align: \"right\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 33\n    }\n  }, t('str_total'), \": \", global.helper.formatPrice(reservationInfo().totalPrice), \" \", reservationInfo().currencySymbol)))))), __jsx(Paper, {\n    variant: \"outlined\",\n    square: true,\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 13\n    }\n  }, __jsx(Box, {\n    p: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 21\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 25\n    }\n  }, __jsx(FrameCheckbox, {\n    disabled: isLoading,\n    fontSize: \"14px\",\n    value: reservationTermsAndConditions,\n    required: true,\n    title: \"str_reservationTermsAndConditions\",\n    linkText: \"str_iAcceptReservationTermsAndConditions\",\n    linkTextADesc: \"str_reservationTermsAndConditions\",\n    ifamePageUrl: GENERAL_SETTINGS.BASE_URL + `info/${locale || global.common.strDefShortLangCode}/${global.guestWeb.strBookingPolicy}?iframe=true`,\n    isCheck: e => setReservationTermsAndConditions(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 597,\n      columnNumber: 29\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 25\n    }\n  }, __jsx(FrameCheckbox, {\n    disabled: isLoading,\n    fontSize: \"14px\",\n    value: privacyAndPersonalDataProtectionPolicies,\n    required: true,\n    title: \"str_privacyAndPersonalDataProtectionPolicies\",\n    linkText: \"str_iAcceptDataPolicy\",\n    linkTextADesc: \"str_privacyAndPersonalDataProtectionPolicies\",\n    ifamePageUrl: GENERAL_SETTINGS.BASE_URL + `info/${locale || global.common.strDefShortLangCode}/${global.guestWeb.strDataPolicy}?iframe=true`,\n    isCheck: e => setPrivacyAndPersonalDataProtectionPolicies(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 29\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 622,\n      columnNumber: 25\n    }\n  }, __jsx(FrameCheckbox, {\n    disabled: isLoading,\n    fontSize: \"14px\",\n    value: hygieneAndTravelPolicies,\n    required: true,\n    title: \"str_hygieneAndTravelPolicies\",\n    linkText: \"str_iAcceptTravelPolicy\",\n    linkTextADesc: \"str_hygieneAndTravelPolicies\",\n    ifamePageUrl: GENERAL_SETTINGS.BASE_URL + `info/${locale || global.common.strDefShortLangCode}/${global.guestWeb.strTravelPolicy}?iframe=true`,\n    isCheck: e => setHygieneAndTravelPolicies(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 623,\n      columnNumber: 29\n    }\n  }))))), __jsx(Paper, {\n    variant: \"outlined\",\n    square: true,\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 638,\n      columnNumber: 13\n    }\n  }, __jsx(Box, {\n    p: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 639,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"flex-end\",\n    alignItems: \"center\",\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 640,\n      columnNumber: 21\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 641,\n      columnNumber: 25\n    }\n  }, __jsx(Button, {\n    disabled: isLoading || isReservationConfirm || transactionStatus === TRANSACTION_STATUS.ERROR,\n    variant: \"outlined\",\n    color: \"secondary\",\n    size: \"large\",\n    disableElevation: true,\n    startIcon: __jsx(ArrowBackIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 44\n      }\n    }),\n    onClick: () => setToState('ibe', ['bookingActiveStep'], state.bookingActiveStep - 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 642,\n      columnNumber: 29\n    }\n  }, t('str_back'))), state.selectedPaymentType.isccpay ? isReservationConfirm && transactionStatus !== TRANSACTION_STATUS.ERROR ? __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 656,\n      columnNumber: 37\n    }\n  }, __jsx(Button, {\n    classes: {\n      disabled: classes.buttonDisable\n    },\n    disabled: true,\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    disableElevation: true,\n    startIcon: __jsx(CircularProgress, {\n      size: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 664,\n        columnNumber: 56\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 657,\n      columnNumber: 41\n    }\n  }, t('str_bankVerificationIsExpected'))) : __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 669,\n      columnNumber: 37\n    }\n  }, __jsx(Tooltip, {\n    title: transactionStatus === TRANSACTION_STATUS.ERROR ? t('str_checkErrorMessageAndTryAgain') : \"\",\n    arrow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 670,\n      columnNumber: 41\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 671,\n      columnNumber: 45\n    }\n  }, __jsx(Button, {\n    disabled: isLoading || isReservationConfirm || transactionStatus === TRANSACTION_STATUS.ERROR,\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    disableElevation: true,\n    onClick: () => handleSaveReservation(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 672,\n      columnNumber: 49\n    }\n  }, t('str_payAndCompleteReservation'))))) : __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 686,\n      columnNumber: 33\n    }\n  }, __jsx(ProgressButton, {\n    isLoading: isReservationConfirm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 687,\n      columnNumber: 37\n    }\n  }, __jsx(Button, {\n    disabled: isReservationConfirm,\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    disableElevation: true,\n    onClick: () => handleSaveReservation(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 688,\n      columnNumber: 41\n    }\n  }, t('str_completeBooking'))))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    state: state.formReducer.ibe\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Review);","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/booking/Review.js"],"names":["React","useContext","useEffect","useState","connect","useSelector","setToState","axios","moment","Box","Button","CircularProgress","Grid","Paper","Tooltip","Typography","makeStyles","Divider","FrameCheckbox","global","getSymbolFromCurrency","WebCmsGlobal","RoomSummary","ProgressButton","PaymentForm","Alert","AlertTitle","RefreshIcon","useSnackbar","useTranslation","ThreeDPayDialog","ArrowBackIcon","TagManager","defaultLocale","useStyles","root","marginTop","padding","background","bottom","marginBottom","ccBottomBanner","textAlign","ccBottomBannerImg","width","buttonDisable","color","listTitle","fontWeight","SummaryBox","props","title","children","classes","Review","state","GENERAL_SETTINGS","WEBCMS_DATA","locale","t","enqueueSnackbar","reservationTermsAndConditions","setReservationTermsAndConditions","hygieneAndTravelPolicies","setHygieneAndTravelPolicies","privacyAndPersonalDataProtectionPolicies","setPrivacyAndPersonalDataProtectionPolicies","creditCardInfo","setCreditCardInfo","creditCardIsValid","setCreditCardIsValid","errorMsg","setErrorMsg","isSaveError","setIsSaveError","isPayFrameLoad","setIsPayFrameLoad","redirectUrl","setRedirectUrl","isLoading","setIsLoading","isReservationConfirm","setIsReservationConfirm","isPaySaved","setIsPaySaved","transactionId","setTransactionId","transactionStatus","setTransactionStatus","paymentResult","setPaymentResult","gid","isgroup","reservno","hotelBankIbanWarnMsg","setHotelBankIbanWarnMsg","loginfo","orest","currentUser","token","auth","access_token","clientBase","client","showIbanNo","selectedPaymentIbanId","hotelPaymentType","bankiban","filter","item","String","id","isEffect","assets","meta","googleTag","page","setChange","hotelName","hotelId","HOTELREFNO","pageTitle","window","document","pagePath","location","href","pageStep","isGuest","getBankIban","find","url","method","params","mid","langcode","clear","then","hotelBankIbanWarnMsgResponse","data","success","warning","catch","TRANSACTION_STATUS","USE_PAY_FORM","SUCCESSFUL","ERROR","SAVE_ERROR_TYPE","SESSION_TIMEOUT","PAYMENT_FAIL","addEventListener","event","response","isfail","transactionid","orderid","reftype","refno","reservationGid","reservationUpdate","clientPassword","responsePaymentSave","processMsg","errormsg","bookingActiveStep","transid","onbeforeunload","e","preventDefault","returnValue","reservationInfo","totalPrice","currencySymbol","currencyCode","selectedRooms","map","Boolean","pricecurr","totalprice","flyTransferInfo","priceInfo","res","flyTransferReturnInfo","packageAndService","getPaymentType","selectedPaymentType","paymentType","isccpay","iscash","istransfer","ismailorder","handleSaveReservation","variant","saveReservation","ccInfo","cCardInfo","mailOrderInfo","cardOwner","cardNumber","replace","cardExpiry","cardCvc","booking","setCheckoutRoom","eventLabel","payOption","description","checkoutData","flyTransferReturn","clienttoken","uitoken","hotelUiToken","contactInfo","selectedProducts","clientID","refid","isCcPay","isMailOrder","continueWithoutClientRecord","flyTransfer","isGroupReservation","isError","isValid","payGid","postData","redirecturl","handlePayTryAgain","setTimeout","length","i","roomtypename","checkin","checkout","totalpax","totalchd","totalnight","thumbnail","guestList","bankname","bankbranch","currencycode","iban","paddingRight","paddingBottom","position","flydate","format","flytime","top","right","helper","formatPrice","BASE_URL","common","strDefShortLangCode","guestWeb","strBookingPolicy","strDataPolicy","strTravelPolicy","disabled","mapStateToProps","formReducer","ibe","mapDispatchToProps","dispatch","stateType","stateName","value"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport { connect, useSelector } from 'react-redux'\nimport { setToState } from 'state/actions'\nimport axios from 'axios'\nimport moment from 'moment'\nimport { Box, Button, CircularProgress, Grid, Paper, Tooltip, Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Divider from '@material-ui/core/Divider'\nimport FrameCheckbox from '@webcms-ui/core/frame-checkbox'\nimport * as global from '@webcms-globals'\nimport getSymbolFromCurrency from 'model/currency-symbol'\nimport WebCmsGlobal from 'components/webcms-global'\nimport RoomSummary from 'components/booking/components/RoomSummary'\nimport ProgressButton from 'components/booking/components/ProgressButton'\nimport PaymentForm from 'components/payment/credit-card/form'\nimport Alert from '@material-ui/lab/Alert'\nimport AlertTitle from '@material-ui/lab/AlertTitle'\nimport RefreshIcon from '@material-ui/icons/Refresh'\nimport { useSnackbar } from 'notistack'\nimport useTranslation from 'lib/translations/hooks/useTranslation'\nimport ThreeDPayDialog from 'components/payment/ThreeDPayDialog'\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\nimport TagManager from '@webcms-globals/tag-manager'\nimport { defaultLocale } from 'lib/translations/config'\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        marginTop: 16,\n        padding: 10,\n        background: '#F5F5F5',\n    },\n    bottom: {\n        marginBottom: 10\n    },\n    ccBottomBanner: {\n        textAlign: 'center'\n    },\n    ccBottomBannerImg: {\n        width: '50%',\n        marginTop: 30\n    },\n    buttonDisable: {\n        color: '#242424'\n    },\n    listTitle: {\n        fontWeight: 'bold'\n    }\n}))\n\nconst SummaryBox = (props) => {\n    const { title, children } = props\n    const classes = useStyles()\n    return (\n        <React.Fragment>\n            <Typography variant=\"h6\" gutterBottom>{title}</Typography>\n            <Grid container spacing={1} className={classes.bottom}>\n                <Grid item xs={12}>\n                    <Paper square variant=\"outlined\">\n                        <Box p={2}>\n                            {children}\n                        </Box>\n                    </Paper>\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    )\n}\n\nconst Review = (props) => {\n\n    const classes = useStyles()\n    const { state, setToState } = props\n    const { GENERAL_SETTINGS, WEBCMS_DATA, locale } = useContext(WebCmsGlobal)\n    const { t } = useTranslation()\n    const { enqueueSnackbar } = useSnackbar()\n\n    const [reservationTermsAndConditions, setReservationTermsAndConditions] = useState(false)\n    const [hygieneAndTravelPolicies, setHygieneAndTravelPolicies] = useState(false)\n    const [privacyAndPersonalDataProtectionPolicies, setPrivacyAndPersonalDataProtectionPolicies] = useState(false)\n    const [creditCardInfo, setCreditCardInfo] = useState(false)\n    const [creditCardIsValid, setCreditCardIsValid] = useState(false)\n    const [errorMsg, setErrorMsg] = useState(false)\n    const [isSaveError, setIsSaveError] = useState(false)\n    const [isPayFrameLoad, setIsPayFrameLoad] = useState(false)\n    const [redirectUrl, setRedirectUrl] = useState(false)\n    const [isLoading, setIsLoading] = useState(false)\n    const [isReservationConfirm, setIsReservationConfirm] = useState(false)\n    const [isPaySaved, setIsPaySaved] = useState(false)\n    const [transactionId, setTransactionId] = useState(false)\n    const [transactionStatus, setTransactionStatus] = useState(0)\n    const [paymentResult, setPaymentResult] = useState({ gid: false, isgroup: false, reservno: false })\n    const [hotelBankIbanWarnMsg, setHotelBankIbanWarnMsg] = useState(false)\n    const loginfo = useSelector((state) => state.orest.currentUser && state.orest.currentUser.loginfo)\n    const token = useSelector((state) => state?.orest?.currentUser?.auth?.access_token || false)\n    const clientBase = useSelector((state) => state?.orest?.state?.client || false)\n    const showIbanNo = state.selectedPaymentIbanId ? state.hotelPaymentType.bankiban.filter(item => String(item.id) === String(state.selectedPaymentIbanId)) : null\n\n    useEffect(() => {\n        let isEffect = true\n\n        if (isEffect && WEBCMS_DATA?.assets?.meta?.googleTag) {\n            TagManager.page.setChange({\n                hotelName: WEBCMS_DATA?.assets?.meta?.title,\n                hotelId: GENERAL_SETTINGS.HOTELREFNO,\n                pageTitle: window.document.title,\n                pagePath: location.href,\n                pageStep: 'Preview',\n                isGuest: clientBase\n            })\n        }\n\n        if(showIbanNo){\n            const getBankIban = state.hotelPaymentType.bankiban.find(item => String(item.id) === String(state.selectedPaymentIbanId))\n            if(getBankIban){\n                axios({\n                    url: 'api/hotel/bankiban/warnmsg',\n                    method: 'post',\n                    params: {\n                        mid: getBankIban.mid,\n                        langcode: locale,\n                        clear: true\n                    },\n                }).then((hotelBankIbanWarnMsgResponse) => {\n                    if (hotelBankIbanWarnMsgResponse?.data?.success) {\n                        setToState('ibe', ['hotelBankIbanWarnMsg'], hotelBankIbanWarnMsgResponse.data.data.warning)\n                    }else {\n                        setToState('ibe', ['hotelBankIbanWarnMsg'], false)\n                    }\n                }).catch(() => {\n                    setToState('ibe', ['hotelBankIbanWarnMsg'], false)\n                })\n            }\n        }\n\n        return () => {\n            isEffect = false\n        }\n    }, [])\n\n    const TRANSACTION_STATUS = {\n        USE_PAY_FORM:0,\n        SUCCESSFUL:1,\n        ERROR:2\n    }\n\n    const SAVE_ERROR_TYPE = {\n        SESSION_TIMEOUT: 'payment_transaction_completed_but_not_posted',\n        PAYMENT_FAIL: 'payment_fail'\n    }\n\n    useEffect(() => {\n        if (redirectUrl) {\n            window.addEventListener('message', function(event) {\n                const response = event.data.response || false\n                if (!isPaySaved) {\n                    setIsPaySaved(true)\n                    return axios({\n                        url: 'api/ors/payment/save',\n                        method: 'post',\n                        params: {\n                            isfail: !response.success,\n                            transactionid: transactionId,\n                            orderid: response.orderid,\n                            reftype: paymentResult.isgroup ? 'RESMASTER':'RESERVAT',\n                            isgroup: paymentResult.isgroup,\n                            refno: paymentResult.reservno,\n                            reservationGid: paymentResult.gid,\n                            reservationUpdate: true,\n                            langcode: locale,\n                            clientPassword: state.clientPassword\n                        },\n                    }).then((responsePaymentSave) => {\n                        if (responsePaymentSave.data.success) {\n                            if(responsePaymentSave.data.processMsg === SAVE_ERROR_TYPE.PAYMENT_FAIL){\n                                setTransactionStatus(TRANSACTION_STATUS.ERROR)\n                                setErrorMsg(response.errormsg)\n                                setIsReservationConfirm(false)\n                                setIsLoading(false)\n                                setIsPaySaved(false)\n                            }else{\n                                setIsPaySaved(false)\n                                setIsReservationConfirm(false)\n                                setTransactionStatus(TRANSACTION_STATUS.SUCCESSFUL)\n                                setToState('ibe', ['bookingConfirmReservno'], paymentResult.reservno)\n                                setToState('ibe', ['bookingConfirmIsGroup'], paymentResult.isgroup)\n                                setToState('ibe', ['bookingConfirmTransId'], response.orderid)\n                                setToState('ibe', ['bookingActiveStep'], state.bookingActiveStep + 1)\n                            }\n                        }else{\n                            setTransactionStatus(TRANSACTION_STATUS.ERROR)\n                            setIsPaySaved(false)\n                            if(responsePaymentSave.data.processMsg === SAVE_ERROR_TYPE.SESSION_TIMEOUT){\n                                setIsSaveError(true)\n                                setIsReservationConfirm(false)\n                                setErrorMsg(t('str_paymentTransactionSuccessButSessionTimeout', {transid: response.orderid || ''}))\n                            }else{\n                                setErrorMsg(response.errormsg)\n                                setIsReservationConfirm(false)\n                            }\n                        }\n                        setIsLoading(false)\n                    }).catch(() => {\n                        setTransactionStatus(TRANSACTION_STATUS.ERROR)\n                        setErrorMsg(response.errormsg)\n                        setIsReservationConfirm(false)\n                        setIsLoading(false)\n                        setIsPaySaved(false)\n                    })\n                } else {\n                    setTransactionStatus(TRANSACTION_STATUS.ERROR)\n                    setErrorMsg(response.errormsg)\n                    setIsLoading(false)\n                    setIsPaySaved(false)\n                    setIsReservationConfirm(false)\n                }\n            }, false)\n        }\n    }, [redirectUrl])\n\n    useEffect(() => {\n        window.onbeforeunload = function (e) {\n            if(isPaySaved){\n                e.preventDefault();\n                return e.returnValue = ''\n            }\n        }\n    }, [isPaySaved])\n\n    const reservationInfo = () => {\n        let totalPrice = 0, currencySymbol = null, currencyCode = null\n\n        state.selectedRooms.map((item) => {\n            if (!Boolean(currencySymbol) || !Boolean(currencyCode)) {\n                currencySymbol = getSymbolFromCurrency(item.pricecurr)\n                currencyCode = item.pricecurr\n            }\n            totalPrice = totalPrice + item.totalprice\n        })\n\n        if(state.flyTransferInfo){\n            totalPrice = totalPrice + state.flyTransferInfo.priceInfo.res\n        }\n\n        if(state.flyTransferReturnInfo){\n            totalPrice = totalPrice + state.flyTransferReturnInfo.priceInfo.res\n        }\n\n        return {\n            totalPrice: totalPrice,\n            currencyCode: currencyCode,\n            currencySymbol: currencySymbol,\n        }\n    }\n\n    const packageAndService = []\n\n    const getPaymentType = (selectedPaymentType) => {\n        let paymentType = false\n        if(selectedPaymentType.isccpay){\n            paymentType = 'isccpay'\n        }else if(selectedPaymentType.iscash){\n            paymentType = 'iscash'\n        }else if(selectedPaymentType.istransfer){\n            paymentType = 'istransfer'\n        }else if(selectedPaymentType.ismailorder){\n            paymentType = 'ismailorder'\n        }\n\n        return paymentType\n    }\n\n    const handleSaveReservation = async () => {\n        if(!reservationTermsAndConditions){\n            enqueueSnackbar(t('str_pleaseCheckMandatoryFields'), { variant: 'warning' })\n        }else if(!hygieneAndTravelPolicies){\n            enqueueSnackbar(t('str_pleaseCheckMandatoryFields'), { variant: 'warning' })\n        }else if(!privacyAndPersonalDataProtectionPolicies){\n            enqueueSnackbar(t('str_pleaseCheckMandatoryFields'), { variant: 'warning' })\n        }else {\n            const saveReservation = () => {\n                let ccInfo = false\n                if(state.selectedPaymentType.ismailorder){\n                    const cCardInfo = state.mailOrderInfo\n                    ccInfo = {}\n                    ccInfo.cardOwner = cCardInfo.cardOwner\n                    ccInfo.cardNumber = cCardInfo.cardNumber.replace(/\\\\s/g, '')\n                    ccInfo.cardExpiry = cCardInfo.cardExpiry\n                    ccInfo.cardCvc = cCardInfo.cardCvc\n                }\n\n                setIsReservationConfirm(true)\n\n                if(WEBCMS_DATA?.assets?.meta?.googleTag){\n                    TagManager.booking.setCheckoutRoom({\n                        eventLabel: 'Room Sale Checkout',\n                        hotelName: WEBCMS_DATA?.assets?.meta?.title,\n                        hotelId: GENERAL_SETTINGS.HOTELREFNO,\n                        payOption: t(state.selectedPaymentType.description, false, defaultLocale),\n                        checkoutData: state.selectedRooms,\n                    })\n                }\n\n                let flyTransferInfo = false, flyTransferReturnInfo = false\n                if(state.flyTransferInfo){\n                    flyTransferInfo = state.flyTransferInfo\n                }\n\n                if(state.flyTransferReturn){\n                    flyTransferReturnInfo = state.flyTransferReturnInfo\n                }\n\n                return axios({\n                    url: `api/hotel/book/info/confirm`,\n                    method: 'post',\n                    data: {\n                        clienttoken: token,\n                        uitoken: state.hotelUiToken,\n                        langcode: locale,\n                        contactInfo: state.contactInfo,\n                        selectedRooms: state.selectedRooms,\n                        selectedProducts: state.selectedProducts,\n                        creditCardInfo: state.creditCardInfo,\n                        clientPassword: state.clientPassword,\n                        clientID: clientBase && clientBase.id || loginfo && loginfo.refid || false,\n                        paymentType: getPaymentType(state.selectedPaymentType),\n                        isCcPay: getPaymentType(state.selectedPaymentType) === 'isccpay',\n                        isMailOrder: getPaymentType(state.selectedPaymentType) === 'ismailorder',\n                        ccInfo: ccInfo,\n                        continueWithoutClientRecord: state.continueWithoutClientRecord,\n                        flyTransfer: flyTransferInfo,\n                        flyTransferReturn: flyTransferReturnInfo\n                    },\n                }).then((response) => {\n                    if (response.data.success) {\n                       if(!state.selectedPaymentType.isccpay){\n                            setIsReservationConfirm(false)\n                            setToState('ibe', ['bookingConfirmReservno'], response.data.reservno)\n                            setToState('ibe', ['bookingConfirmIsGroup'], response.data.isGroupReservation)\n                            setToState('ibe', ['bookingActiveStep'], state.bookingActiveStep + 1)\n                        }\n                        return response.data\n                    } else {\n                        return false\n                    }\n                }).catch(() => {\n                    return false\n                })\n            }\n\n            if (state.selectedPaymentType.isccpay) {\n                if (creditCardIsValid.isError || !creditCardIsValid.isValid) {\n                    enqueueSnackbar(t('str_pleaseCheckYourCardInformation'), { variant: 'warning' })\n                } else {\n                    let payGid\n                    if(!paymentResult.gid) {\n                        const reservationInfo = await saveReservation()\n                        setPaymentResult({ gid: reservationInfo.payGid, isgroup: reservationInfo.isGroupReservation, reservno: reservationInfo.reservno })\n                        payGid = reservationInfo.payGid\n                    }else{\n                        payGid = paymentResult.gid\n                    }\n\n                    setIsLoading(true)\n                    let postData = {}\n                    postData.cardOwner = creditCardInfo.cardOwner\n                    postData.cardNumber = creditCardInfo.cardNumber.replace(/\\\\s/g, '')\n                    postData.cardExpiry = creditCardInfo.cardExpiry\n                    postData.cardCvc = creditCardInfo.cardCvc\n\n                    return axios({\n                        url: 'api/ors/payment/do',\n                        method: 'post',\n                        params: {\n                            gid: payGid,\n                        },\n                        data: postData,\n                    }).then((response) => {\n                        if (response.data.success) {\n                            setIsLoading(false)\n                            setTransactionId(response.data.transactionid)\n                            setRedirectUrl(response.data.redirecturl)\n                            return true\n                        } else {\n                            setTransactionStatus(TRANSACTION_STATUS.ERROR)\n                            setErrorMsg(t('str_checkCCorPayInfoError'))\n                            setIsLoading(false)\n                            setIsReservationConfirm(false)\n                            return false\n                        }\n                    }).catch(() => {\n                        setTransactionStatus(TRANSACTION_STATUS.ERROR)\n                        setErrorMsg(t('str_checkCCorPayInfoError'))\n                        setIsLoading(false)\n                        setIsReservationConfirm(false)\n                        return false\n                    })\n                }\n            } else {\n                return saveReservation()\n            }\n        }\n    }\n\n    const handlePayTryAgain = () => {\n        setIsLoading(true)\n        setTimeout(()=> {\n            setIsLoading(false)\n            setErrorMsg(false)\n            setRedirectUrl(false)\n            setIsPayFrameLoad(false)\n            setIsReservationConfirm(false)\n            setTransactionStatus(0)\n        }, 1500)\n    }\n\n    return (\n        <React.Fragment>\n            <Paper variant=\"outlined\" square className={classes.root}>\n                <Box p={3}>\n                    <Grid container spacing={3}>\n                        <Grid item sm={12} md={8}>\n                            <Typography variant=\"h6\" gutterBottom>\n                                {t('str_roomDetails')}\n                            </Typography>\n                            <Grid container spacing={1}>\n                            {state.selectedRooms && state.selectedRooms.length > 0 && state.selectedRooms.map((item, i) => (\n                                <Grid item xs={12} key={i}>\n                                <RoomSummary\n                                    roomName={item.roomtypename}\n                                    checkin={item.checkin}\n                                    checkout={item.checkout}\n                                    pax={item.totalpax}\n                                    child={item.totalchd}\n                                    night={item.totalnight}\n                                    price={item.totalprice}\n                                    pricecurr={item.pricecurr}\n                                    gid={item.gid}\n                                    thumbnail={item.thumbnail}\n                                    guestList={item.guestList}\n                                />\n                                </Grid>\n                            ))}\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                            {(packageAndService && packageAndService.length > 0) && (\n                                <SummaryBox title={t('str_packageAndServices')}>\n                                    -\n                                </SummaryBox>\n                            )}\n                            <SummaryBox title={t('str_paymentMethod')}>\n                                {t(state.selectedPaymentType.description)}\n                                {showIbanNo ? (\n                                    <Grid container spacing={1} style={{marginTop: 10}}>\n                                        <Grid item xs={4}>\n                                            <Typography variant='subtitle2' gutterBottom className={classes.listTitle}>\n                                                {t('str_bankName')}\n                                            </Typography>\n                                            <Typography variant='body2' gutterBottom>\n                                                {showIbanNo && showIbanNo[0].bankname}\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item xs={4}>\n                                            <Typography variant='subtitle2' gutterBottom className={classes.listTitle}>\n                                                {t('str_bankBranch')}\n                                            </Typography>\n                                            <Typography variant='body2' gutterBottom>\n                                                {showIbanNo && showIbanNo[0].bankbranch}\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item xs={4}>\n                                            <Typography variant='subtitle2' gutterBottom className={classes.listTitle}>\n                                                {t('str_bankCurrency')}\n                                            </Typography>\n                                            <Typography variant='body2' gutterBottom>\n                                                {showIbanNo && showIbanNo[0].currencycode}\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item xs={12}>\n                                            <Typography variant='subtitle2' gutterBottom className={classes.listTitle}>\n                                                {t('str_bankIban')}\n                                            </Typography>\n                                            <Typography variant='body2' gutterBottom>\n                                                {showIbanNo && showIbanNo[0].iban}\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                ): null}\n                            </SummaryBox>\n                            {state.hotelBankIbanWarnMsg ?\n                                <Alert severity=\"info\" variant=\"outlined\" style={{ padding: 5, paddingRight: 15, background: '#ffffff', textAlign: 'justify' }}>\n                                    {state.hotelBankIbanWarnMsg}\n                                </Alert> : null\n                            }\n                        </Grid>\n                        {(state.flyTransferInfo || state.flyTransferReturnInfo) ? (\n                            <React.Fragment>\n                                <Grid item sm={12} md={8}>\n                                    <SummaryBox title={t('str_transfer')}>\n                                        <Grid container spacing={1} style={{marginTop: 10, paddingBottom: 10}} justify=\"space-between\">\n                                            {state.flyTransferInfo ? (\n                                                <Grid item xs={12} sm={5} style={{position: 'relative'}}>\n                                                    <Typography variant='subtitle2' gutterBottom className={classes.listTitle}>\n                                                        {t('str_arrivalTransfer')}\n                                                    </Typography>\n                                                    <Typography variant='body2' gutterBottom>\n                                                        {moment(state.flyTransferInfo.flydate, 'YYYY-MM-DD').format('dd, MMM DD, YYYY')} - {moment(state.flyTransferInfo.flytime, \"HH:mm:ss\").format(\"HH:mm\")}\n                                                    </Typography>\n                                                    <span style={{position: 'absolute', top: 0, right: 10}}>\n                                                {state?.flyTransferInfo?.priceInfo?.pricecurr && getSymbolFromCurrency(state.flyTransferInfo.priceInfo.pricecurr)} {state?.flyTransferInfo?.priceInfo?.res && global.helper.formatPrice(state.flyTransferInfo.priceInfo.res)}\n                                            </span>\n                                                </Grid>\n                                            ): null}\n                                            {state.flyTransferReturnInfo ? (\n                                                <React.Fragment>\n                                                    <Divider orientation=\"vertical\" flexItem />\n                                                    <Grid item xs={12} sm={5} style={{position: 'relative'}}>\n                                                        <Typography variant='subtitle2' gutterBottom className={classes.listTitle}>\n                                                            {t('str_departureTransfer')}\n                                                        </Typography>\n                                                        <Typography variant='body2' gutterBottom>\n                                                            {moment(state.flyTransferReturnInfo.flydate, 'YYYY-MM-DD').format('dd, MMM DD, YYYY')} - {moment(state.flyTransferReturnInfo.flytime, \"HH:mm:ss\").format(\"HH:mm\")}\n                                                        </Typography>\n                                                        <span style={{position: 'absolute', top: 0, right: 10}}>\n                                                    {state?.flyTransferReturnInfo?.priceInfo?.pricecurr && getSymbolFromCurrency(state.flyTransferReturnInfo.priceInfo.pricecurr)} {state?.flyTransferReturnInfo?.priceInfo?.res && global.helper.formatPrice(state.flyTransferReturnInfo.priceInfo.res)}\n                                                </span>\n                                                    </Grid>\n                                                </React.Fragment>\n                                            ): null}\n                                        </Grid>\n                                    </SummaryBox>\n                                </Grid>\n                            </React.Fragment>\n                        ): null}\n                        {state.selectedPaymentType.isccpay && (\n                        <Grid item sm={12} md={8}>\n                            <Typography variant=\"h6\" gutterBottom>\n                                {t('str_creditCardPayment')}\n                            </Typography>\n                            <Paper variant=\"outlined\" square>\n                                <Box p={3}>\n                                    { transactionStatus === TRANSACTION_STATUS.USE_PAY_FORM && redirectUrl ? (\n                                        <React.Fragment>\n                                            <ThreeDPayDialog open={transactionStatus === TRANSACTION_STATUS.USE_PAY_FORM && redirectUrl} iframeUrl={redirectUrl} isPayFrameLoad={isPayFrameLoad} setIsPayFrameLoad={(e)=> setIsPayFrameLoad(e)} isPaySave={isPaySaved} />\n                                        </React.Fragment>\n                                    ) : transactionStatus === TRANSACTION_STATUS.ERROR  ? (\n                                        <React.Fragment>\n                                            {isSaveError ? (\n                                                <React.Fragment>\n                                                    <Alert severity=\"error\" style={{marginBottom: 20}}>\n                                                        <AlertTitle>{t('str_error')}</AlertTitle>\n                                                        {errorMsg}\n                                                    </Alert>\n                                                </React.Fragment>\n                                            ):(\n                                                <React.Fragment>\n                                                    <Alert severity=\"error\" style={{marginBottom: 20}}>\n                                                        <AlertTitle>{t('str_error')}</AlertTitle>\n                                                        {t('str_paymentTransactionError')}<br/>\n                                                        <strong>{t('str_detail')}:</strong> {errorMsg || ''}\n                                                    </Alert>\n                                                    <Button variant=\"outlined\" color=\"primary\" startIcon={<RefreshIcon />} onClick={()=> handlePayTryAgain()}>{t('str_tryAgain')}</Button>\n                                                </React.Fragment>\n                                            )}\n                                        </React.Fragment>\n                                    ) : null }\n                                    {transactionStatus !== TRANSACTION_STATUS.ERROR && (\n                                        <PaymentForm\n                                            showCard={true}\n                                            onChange={(e) => setCreditCardInfo(e)}\n                                            isValid={(e) => setCreditCardIsValid(e)}\n                                            isDisabled={isLoading || isReservationConfirm}\n                                        />\n                                    )}\n                                    <div className={classes.ccBottomBanner}>\n                                        <img className={classes.ccBottomBannerImg} src={'imgs/epay-std-banner.png'}/>\n                                    </div>\n                                </Box>\n                            </Paper>\n                        </Grid>\n                        )}\n                        <Grid item xs={12}>\n                            <Divider variant=\"middle\" />\n                            <Box p={2}>\n                                <Typography variant=\"h6\" align=\"right\" gutterBottom>\n                                    {t('str_total')}: {global.helper.formatPrice(reservationInfo().totalPrice)} {reservationInfo().currencySymbol}\n                                </Typography>\n                            </Box>\n                        </Grid>\n                    </Grid>\n                </Box>\n            </Paper>\n            <Paper variant=\"outlined\" square className={classes.root}>\n                <Box p={3}>\n                    <Grid container>\n                        <Grid item xs={12}>\n                            <FrameCheckbox\n                                disabled={isLoading}\n                                fontSize=\"14px\"\n                                value={reservationTermsAndConditions}\n                                required={true}\n                                title=\"str_reservationTermsAndConditions\"\n                                linkText=\"str_iAcceptReservationTermsAndConditions\"\n                                linkTextADesc=\"str_reservationTermsAndConditions\"\n                                ifamePageUrl={GENERAL_SETTINGS.BASE_URL + `info/${locale || global.common.strDefShortLangCode}/${global.guestWeb.strBookingPolicy}?iframe=true`}\n                                isCheck={(e) => setReservationTermsAndConditions(e)}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <FrameCheckbox\n                                disabled={isLoading}\n                                fontSize=\"14px\"\n                                value={privacyAndPersonalDataProtectionPolicies}\n                                required={true}\n                                title=\"str_privacyAndPersonalDataProtectionPolicies\"\n                                linkText=\"str_iAcceptDataPolicy\"\n                                linkTextADesc=\"str_privacyAndPersonalDataProtectionPolicies\"\n                                ifamePageUrl={GENERAL_SETTINGS.BASE_URL + `info/${locale || global.common.strDefShortLangCode}/${global.guestWeb.strDataPolicy}?iframe=true`}\n                                isCheck={(e) => setPrivacyAndPersonalDataProtectionPolicies(e)}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <FrameCheckbox\n                                disabled={isLoading}\n                                fontSize=\"14px\"\n                                value={hygieneAndTravelPolicies}\n                                required={true}\n                                title=\"str_hygieneAndTravelPolicies\"\n                                linkText=\"str_iAcceptTravelPolicy\"\n                                linkTextADesc=\"str_hygieneAndTravelPolicies\"\n                                ifamePageUrl={GENERAL_SETTINGS.BASE_URL + `info/${locale || global.common.strDefShortLangCode}/${global.guestWeb.strTravelPolicy}?iframe=true`}\n                                isCheck={(e) => setHygieneAndTravelPolicies(e)}\n                            />\n                        </Grid>\n                    </Grid>\n                </Box>\n            </Paper>\n            <Paper variant=\"outlined\" square className={classes.root}>\n                <Box p={3}>\n                    <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"center\" spacing={3}>\n                        <Grid item>\n                            <Button\n                                disabled={isLoading || isReservationConfirm || (transactionStatus === TRANSACTION_STATUS.ERROR)}\n                                variant='outlined'\n                                color='secondary'\n                                size='large'\n                                disableElevation\n                                startIcon={<ArrowBackIcon />}\n                                onClick={() =>  setToState('ibe', ['bookingActiveStep'], state.bookingActiveStep - 1)}\n                            >\n                                {t('str_back')}\n                            </Button>\n                        </Grid>\n                            {state.selectedPaymentType.isccpay ? (\n                                (isReservationConfirm && (transactionStatus !== TRANSACTION_STATUS.ERROR) ?\n                                    <Grid item>\n                                        <Button\n                                            classes={{ disabled: classes.buttonDisable }}\n                                            disabled={true}\n                                            variant='contained'\n                                            color='primary'\n                                            size='large'\n                                            disableElevation\n                                            startIcon={<CircularProgress size={24} />}\n                                        >\n                                            {t('str_bankVerificationIsExpected')}\n                                        </Button>\n                                    </Grid> :\n                                    <Grid item>\n                                        <Tooltip title={transactionStatus === TRANSACTION_STATUS.ERROR ? t('str_checkErrorMessageAndTryAgain') : \"\"} arrow>\n                                            <span>\n                                                <Button\n                                                    disabled={isLoading || isReservationConfirm || (transactionStatus === TRANSACTION_STATUS.ERROR)}\n                                                    variant='contained'\n                                                    color='primary'\n                                                    size='large'\n                                                    disableElevation\n                                                    onClick={() => handleSaveReservation()}\n                                                >\n                                                    {t('str_payAndCompleteReservation')}\n                                                </Button>\n                                            </span>\n                                        </Tooltip>\n                                    </Grid>\n                                )) : (\n                                <Grid item>\n                                    <ProgressButton isLoading={isReservationConfirm}>\n                                        <Button\n                                            disabled={isReservationConfirm}\n                                            variant='contained'\n                                            color='primary'\n                                            size='large'\n                                            disableElevation\n                                            onClick={() => handleSaveReservation()}\n                                        >\n                                            {t('str_completeBooking')}\n                                        </Button>\n                                    </ProgressButton>\n                                </Grid>\n                            )}\n                    </Grid>\n                </Box>\n            </Paper>\n        </React.Fragment>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        state: state.formReducer.ibe,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Review)\n"]},"metadata":{},"sourceType":"module"}