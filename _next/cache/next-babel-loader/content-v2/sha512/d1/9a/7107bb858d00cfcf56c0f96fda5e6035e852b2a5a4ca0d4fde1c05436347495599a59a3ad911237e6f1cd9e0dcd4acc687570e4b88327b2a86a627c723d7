{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/guest/public/Events.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport { setToState, updateState } from 'state/actions';\nimport { Container, Paper, AppBar, Tabs } from '@material-ui/core';\nimport MuiTab from '@material-ui/core/Tab';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nimport WeeklyEvents from './components/events/WeeklyEvents';\nimport NearbyEvents from './components/events/NearbyEvents';\nimport HotelEvents from './components/events/HotelEvents';\nimport Router, { useRouter } from 'next/router';\nimport { ZERO } from 'model/globals';\nimport SelectHotel from './SelectHotel';\nimport Box from '@material-ui/core/Box';\nimport WebCmsGlobal from '../../webcms-global';\nimport { withStyles } from '@material-ui/core/styles';\nimport LoadingSpinner from '../../LoadingSpinner';\nconst Tab = withStyles(theme => ({\n  root: {\n    textTransform: 'uppercase',\n    [theme.breakpoints.down('xs')]: {\n      fontSize: '0.65em'\n    }\n  }\n}))(MuiTab);\n\nconst TabPanel = props => {\n  const {\n    children,\n    value,\n    hashCode,\n    index\n  } = props,\n        other = _objectWithoutProperties(props, [\"children\", \"value\", \"hashCode\", \"index\"]);\n\n  return __jsx(\"div\", _extends({\n    role: \"tabpanel\",\n    hidden: value !== hashCode,\n    id: `scrollable-auto-tabpanel-${index}`,\n    \"aria-labelledby\": `scrollable-auto-tab-${index}`\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }), value === hashCode && __jsx(Paper, {\n    square: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 36\n    }\n  }, children));\n};\n\nconst a11yProps = index => {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`\n  };\n};\n\nconst Events = props => {\n  const {\n    state,\n    onlyRes\n  } = props;\n  const router = useRouter();\n  const {\n    t\n  } = useTranslation();\n  const {\n    GENERAL_SETTINGS\n  } = useContext(WebCmsGlobal);\n  const changeHotelRefno = useSelector(state => state.formReducer.guest.changeHotelRefno && state.formReducer.guest.changeHotelRefno);\n  const eventsTabMenu = [{\n    code: 'WEEKLY_EVENTS',\n    title: 'str_weeklyEvents',\n    hashCode: 'weekly'\n  }, {\n    code: 'NEARBY_EVENTS',\n    title: 'str_nearbyEvents',\n    hashCode: 'nearby'\n  }, {\n    code: 'HOTEL_EVENTS',\n    title: 'str_hotelEvents',\n    hashCode: 'hotel'\n  }];\n  const tabPanelHashCode = router.query.tab;\n  const {\n    0: eventTabsHashCode,\n    1: setEventTabsHashCode\n  } = useState(eventsTabMenu.findIndex(menu => menu.hashCode === tabPanelHashCode) > -1 ? tabPanelHashCode : eventsTabMenu[ZERO].hashCode);\n\n  const handleGuestEventsPanelTabChange = (event, newValue) => {\n    if (eventTabsHashCode !== newValue) {\n      setEventTabsHashCode(newValue);\n\n      if (tabPanelHashCode) {\n        Router.push({\n          pathname: router.pathname,\n          query: {\n            menu: router.query.menu,\n            tab: newValue\n          }\n        });\n      }\n    }\n  };\n\n  const renderEventComponent = eventItem => {\n    let component;\n\n    switch (eventItem.code) {\n      case 'WEEKLY_EVENTS':\n        component = __jsx(WeeklyEvents, {\n          onlyRes: onlyRes,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }\n        });\n        break;\n\n      case 'NEARBY_EVENTS':\n        component = __jsx(NearbyEvents, {\n          onlyRes: onlyRes,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 29\n          }\n        });\n        break;\n\n      case 'HOTEL_EVENTS':\n        component = __jsx(HotelEvents, {\n          onlyRes: onlyRes,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }\n        });\n        break;\n    }\n\n    return component;\n  };\n\n  if (GENERAL_SETTINGS.ISCHAIN && changeHotelRefno === false) {\n    if (state.clientReservIsLoading) {\n      return __jsx(Box, {\n        p: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }\n      }, __jsx(LoadingSpinner, {\n        size: 40,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }\n      }));\n    }\n\n    return __jsx(Box, {\n      p: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, __jsx(SelectHotel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, __jsx(Container, {\n    maxWidth: \"lg\",\n    style: {\n      padding: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, __jsx(AppBar, {\n    position: \"static\",\n    color: \"default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, __jsx(Tabs, {\n    value: eventTabsHashCode,\n    onChange: handleGuestEventsPanelTabChange,\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    variant: \"scrollable\",\n    scrollButtons: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }, eventsTabMenu.map((item, i) => __jsx(Tab, _extends({\n    label: t(item.title),\n    value: item.hashCode\n  }, a11yProps(i), {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 29\n    }\n  }))))), eventsTabMenu.map((item, i) => __jsx(TabPanel, {\n    value: eventTabsHashCode,\n    hashCode: item.hashCode,\n    index: i,\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  }, renderEventComponent(item)))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    state: state.formReducer.guest\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Events);","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/guest/public/Events.js"],"names":["React","useContext","useEffect","useState","connect","useSelector","setToState","updateState","Container","Paper","AppBar","Tabs","MuiTab","useTranslation","WeeklyEvents","NearbyEvents","HotelEvents","Router","useRouter","ZERO","SelectHotel","Box","WebCmsGlobal","withStyles","LoadingSpinner","Tab","theme","root","textTransform","breakpoints","down","fontSize","TabPanel","props","children","value","hashCode","index","other","a11yProps","id","Events","state","onlyRes","router","t","GENERAL_SETTINGS","changeHotelRefno","formReducer","guest","eventsTabMenu","code","title","tabPanelHashCode","query","tab","eventTabsHashCode","setEventTabsHashCode","findIndex","menu","handleGuestEventsPanelTabChange","event","newValue","push","pathname","renderEventComponent","eventItem","component","ISCHAIN","clientReservIsLoading","padding","map","item","i","mapStateToProps","mapDispatchToProps","dispatch","stateType","stateName"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport { connect, useSelector } from 'react-redux'\nimport { setToState, updateState } from 'state/actions'\nimport { Container, Paper, AppBar, Tabs } from '@material-ui/core'\nimport MuiTab from '@material-ui/core/Tab'\nimport useTranslation from 'lib/translations/hooks/useTranslation'\nimport WeeklyEvents from './components/events/WeeklyEvents'\nimport NearbyEvents from './components/events/NearbyEvents'\nimport HotelEvents from './components/events/HotelEvents'\nimport Router, { useRouter } from 'next/router'\nimport { ZERO } from 'model/globals'\nimport SelectHotel from './SelectHotel'\nimport Box from '@material-ui/core/Box'\nimport WebCmsGlobal from '../../webcms-global'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport LoadingSpinner from '../../LoadingSpinner'\nconst Tab = withStyles((theme) => ({\n    root: {\n        textTransform: 'uppercase',\n        [theme.breakpoints.down('xs')]: {\n            fontSize: '0.65em',\n        },\n    }\n}))(MuiTab)\n\nconst TabPanel = (props) => {\n    const { children, value, hashCode, index, ...other } = props\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== hashCode}\n            id={`scrollable-auto-tabpanel-${index}`}\n            aria-labelledby={`scrollable-auto-tab-${index}`}\n            {...other}\n        >\n            {value === hashCode && <Paper square>{children}</Paper>}\n        </div>\n    )\n}\n\nconst a11yProps = (index) => {\n    return {\n        id: `scrollable-auto-tab-${index}`,\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    }\n}\n\nconst Events = (props) => {\n    const { state, onlyRes } = props\n    const router = useRouter()\n    const { t } = useTranslation()\n    const { GENERAL_SETTINGS } = useContext(WebCmsGlobal)\n    const changeHotelRefno = useSelector((state) => state.formReducer.guest.changeHotelRefno && state.formReducer.guest.changeHotelRefno)\n\n    const eventsTabMenu = [\n        {\n            code: 'WEEKLY_EVENTS',\n            title: 'str_weeklyEvents',\n            hashCode: 'weekly',\n        },\n        {\n            code: 'NEARBY_EVENTS',\n            title: 'str_nearbyEvents',\n            hashCode: 'nearby',\n        },\n        {\n            code: 'HOTEL_EVENTS',\n            title: 'str_hotelEvents',\n            hashCode: 'hotel',\n        },\n    ]\n\n    const tabPanelHashCode = router.query.tab\n    const [eventTabsHashCode, setEventTabsHashCode] = useState(\n        eventsTabMenu.findIndex((menu) => menu.hashCode === tabPanelHashCode) > -1\n            ? tabPanelHashCode\n            : eventsTabMenu[ZERO].hashCode\n    )\n\n    const handleGuestEventsPanelTabChange = (event, newValue) => {\n        if (eventTabsHashCode !== newValue) {\n            setEventTabsHashCode(newValue)\n            if (tabPanelHashCode) {\n                Router.push({\n                    pathname: router.pathname,\n                    query: {\n                        menu: router.query.menu,\n                        tab: newValue,\n                    },\n                })\n            }\n        }\n    }\n\n    const renderEventComponent = (eventItem) => {\n        let component\n        switch (eventItem.code) {\n            case 'WEEKLY_EVENTS':\n                component = <WeeklyEvents onlyRes={onlyRes}/>\n                break\n            case 'NEARBY_EVENTS':\n                component = <NearbyEvents onlyRes={onlyRes}/>\n                break\n            case 'HOTEL_EVENTS':\n                component = <HotelEvents onlyRes={onlyRes}/>\n                break\n        }\n\n        return component\n    }\n\n    if (GENERAL_SETTINGS.ISCHAIN && changeHotelRefno === false) {\n        if(state.clientReservIsLoading){\n            return (\n                <Box p={4}>\n                    <LoadingSpinner size={40} />\n                </Box>\n            )\n        }\n\n        return (\n            <Box p={4}>\n                <SelectHotel/>\n            </Box>\n        )\n    }\n\n    return (\n        <React.Fragment>\n            <Container maxWidth=\"lg\" style={{ padding: 0 }}>\n                <AppBar position=\"static\" color=\"default\">\n                    <Tabs\n                        value={eventTabsHashCode}\n                        onChange={handleGuestEventsPanelTabChange}\n                        indicatorColor=\"primary\"\n                        textColor=\"primary\"\n                        variant=\"scrollable\"\n                        scrollButtons=\"auto\"\n                    >\n                        {eventsTabMenu.map((item, i) => (\n                            <Tab label={t(item.title)} value={item.hashCode} {...a11yProps(i)} key={i} />\n                        ))}\n                    </Tabs>\n                </AppBar>\n                {eventsTabMenu.map((item, i) => (\n                    <TabPanel value={eventTabsHashCode} hashCode={item.hashCode} index={i} key={i}>\n                        {renderEventComponent(item)}\n                    </TabPanel>\n                ))}\n            </Container>\n        </React.Fragment>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        state: state.formReducer.guest,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value)),\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Events)\n"]},"metadata":{},"sourceType":"module"}