{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/components/email/footer/EditEmailFooter.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState, useEffect, useContext } from 'react'; //redux imports\n\nimport { connect } from 'react-redux'; //material ui imports\n\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepConnector from '@material-ui/core/StepConnector';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ReceiptIcon from '@material-ui/icons/Receipt';\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from '@material-ui/core/TextField';\nimport Divider from \"@material-ui/core/Divider\";\nimport Typography from \"@material-ui/core/Typography\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Container from \"@material-ui/core/Container\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport CreateIcon from '@material-ui/icons/Create';\nimport { withStyles } from '@material-ui/core/styles'; //constants\n\nimport { COLORS, UPLOAD_SUCCESS } from \"../../../constants\";\nimport clsx from \"clsx\";\nimport validator from 'validator';\nimport ReactDropzone from \"react-dropzone\";\nimport { Upload } from \"@webcms/orest\";\nimport { toast } from \"react-toastify\";\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\nimport WebCmsGlobal from \"../../../../../webcms-global\";\nimport { useRouter } from \"next/router\";\nimport InputColor from \"react-input-color\";\nconst useStyle = makeStyles(theme => ({\n  actionButton: {\n    marginLeft: theme.spacing(1),\n    borderRadius: 20\n  },\n  actionButtons: {\n    display: 'flex',\n    justifyContent: 'flex-start',\n    marginTop: theme.spacing(2)\n  },\n  itemCountField: {\n    marginLeft: theme.spacing(1),\n    '& input': {\n      height: 8\n    }\n  },\n  itemCountTxt: {\n    marginLeft: theme.spacing(1),\n    marginTop: theme.spacing(2)\n  },\n  disableEvent: {\n    pointerEvents: \"none\",\n    opacity: 0.5\n  },\n  icon: {\n    cursor: 'pointer',\n    width: '100%',\n    height: '100%',\n    opacity: 0.3\n  },\n  imagePreview: {\n    backgroundSize: 'contain',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: \"center\",\n    height: 200,\n    width: '100%',\n    cursor: 'pointer'\n  }\n}));\nconst useColorStepIconStyle = makeStyles(() => ({\n  root: {\n    backgroundColor: '#ccc',\n    zIndex: 1,\n    color: '#fff',\n    width: 50,\n    height: 50,\n    display: 'flex',\n    borderRadius: '50%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    '& img': {\n      width: 35\n    }\n  },\n  iconSize: {\n    height: 30,\n    width: 30\n  },\n  active: {\n    backgroundColor: COLORS.secondary,\n    boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)'\n  },\n  completed: {\n    backgroundColor: COLORS.primary,\n    color: '#fff'\n  }\n}));\nconst ColorlibConnector = withStyles({\n  alternativeLabel: {\n    top: 30,\n    left: 'calc(-50% + 10px)',\n    right: 'calc(50% + 10px)'\n  },\n  active: {\n    '& $line': {\n      background: 'transparent linear-gradient(270deg, #269DD4 0%, #0F4571 100%) 0% 0% no-repeat padding-box'\n    }\n  },\n  completed: {\n    '& $line': {\n      backgroundColor: COLORS.primary\n    }\n  },\n  line: {\n    height: 4,\n    border: 0,\n    backgroundColor: '#eaeaf0',\n    borderRadius: 1\n  }\n})(StepConnector);\n\nfunction getStepsIcons(itemCount, isActive, isCompleted, step) {\n  const icon_classes = useColorStepIconStyle();\n  let icons = {};\n\n  switch (itemCount) {\n    case 1:\n      icons = {\n        0: __jsx(ReceiptIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 20\n          }\n        }),\n        1: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 20\n          }\n        })\n      };\n      break;\n\n    case 2:\n      icons = {\n        0: __jsx(ReceiptIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 20\n          }\n        }),\n        1: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 20\n          }\n        }),\n        2: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 20\n          }\n        })\n      };\n      break;\n\n    case 3:\n      icons = {\n        0: __jsx(ReceiptIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 20\n          }\n        }),\n        1: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 20\n          }\n        }),\n        2: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 20\n          }\n        }),\n        3: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 20\n          }\n        })\n      };\n      break;\n\n    case 4:\n      icons = {\n        0: __jsx(ReceiptIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 20\n          }\n        }),\n        1: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 20\n          }\n        }),\n        2: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 20\n          }\n        }),\n        3: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 20\n          }\n        }),\n        4: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 20\n          }\n        })\n      };\n      break;\n\n    case 5:\n      icons = {\n        0: __jsx(ReceiptIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 20\n          }\n        }),\n        1: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 20\n          }\n        }),\n        2: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 20\n          }\n        }),\n        3: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 20\n          }\n        }),\n        4: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 20\n          }\n        }),\n        5: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 20\n          }\n        })\n      };\n      break;\n\n    default:\n      icons = {\n        0: __jsx(ReceiptIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 20\n          }\n        }),\n        1: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 20\n          }\n        }),\n        2: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 20\n          }\n        }),\n        3: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 20\n          }\n        }),\n        4: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 20\n          }\n        }),\n        5: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 20\n          }\n        })\n      };\n      break;\n  }\n\n  return __jsx(\"div\", {\n    className: clsx(icon_classes.root, {\n      [icon_classes.active]: isActive,\n      [icon_classes.completed]: isCompleted\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  }, icons[step]);\n}\n\nconst EditEmailFooter = props => {\n  var _state$email, _state$email$footer, _state$email2, _state$email2$footer;\n\n  const {\n    state,\n    onEditFooter\n  } = props;\n  const {\n    0: activeStep,\n    1: setActiveStep\n  } = useState(0);\n  const {\n    0: itemsCount,\n    1: setItemsCount\n  } = useState(state.email.footer.items.length);\n  const {\n    0: steps,\n    1: setSteps\n  } = useState([]);\n  const {\n    0: footerItems,\n    1: setFooterItems\n  } = useState(state.email.footer.items);\n  const {\n    0: isSave,\n    1: setIsSave\n  } = useState(false);\n  const {\n    0: isNextDisable,\n    1: setIsNextDisable\n  } = useState(false);\n  const {\n    0: otherLangFooterItems,\n    1: setOtherLangFooterItems\n  } = useState([]);\n  const {\n    0: bgColor,\n    1: setBgColor\n  } = useState(state === null || state === void 0 ? void 0 : (_state$email = state.email) === null || _state$email === void 0 ? void 0 : (_state$email$footer = _state$email.footer) === null || _state$email$footer === void 0 ? void 0 : _state$email$footer.backgroundColor);\n  const {\n    0: textColor,\n    1: setTextColor\n  } = useState(state === null || state === void 0 ? void 0 : (_state$email2 = state.email) === null || _state$email2 === void 0 ? void 0 : (_state$email2$footer = _state$email2.footer) === null || _state$email2$footer === void 0 ? void 0 : _state$email2$footer.textColor);\n  const {\n    GENERAL_SETTINGS\n  } = useContext(WebCmsGlobal);\n  const classes = useStyle();\n  useEffect(() => {\n    //set footer items for other languages\n    if (Object.keys(state.langsFile).length > 0 && state.langsFile.footer && state.langsFile.footer[state.langCode]) {\n      setOtherLangFooterItems([...state.langsFile.footer[state.langCode].items]);\n    }\n  }, []);\n  useEffect(() => {\n    switch (itemsCount) {\n      case 1:\n        setSteps(['No Of Items', 'Item 1']);\n        break;\n\n      case 2:\n        setSteps(['No Of Items', 'Item 1', 'Item 2']);\n        break;\n\n      case 3:\n        setSteps(['No Of Items', 'Item 1', 'Item 2', 'Item 3']);\n        break;\n\n      case 4:\n        setSteps(['No Of Items', 'Item 1', 'Item 2', 'Item 3', 'Item 4']);\n        break;\n\n      case 5:\n        setSteps(['No Of Items', 'Item 1', 'Item 2', 'Item 3', 'Item 4', 'Item 5']);\n        break;\n\n      default:\n        setSteps(['No Of Items', 'Item 1', 'Item 2', 'Item 3', 'Item 4', 'Item 5']);\n    }\n\n    if (itemsCount < footerItems.length) {\n      const updatedFooterItems = [...footerItems];\n      updatedFooterItems.length = itemsCount;\n      setFooterItems(updatedFooterItems);\n    }\n\n    if (itemsCount > footerItems.length) {\n      for (let i = 0; i < itemsCount; i++) {\n        if (!footerItems[i]) {\n          footerItems.push({\n            id: `item-${footerItems.length + 1}`,\n            alignment: 'flex-start',\n            items: []\n          });\n        }\n      }\n    }\n  }, [itemsCount]);\n\n  const handleBack = () => {\n    setActiveStep(previousStep => previousStep - 1);\n  };\n\n  const handleNext = () => {\n    if (activeStep === steps.length - 1) {\n      setIsSave(true);\n\n      if (state.langCode === state.defaultLang) {\n        onEditFooter({\n          tpl: state.email.footer.tpl,\n          backgroundColor: bgColor,\n          textColor: textColor,\n          items: footerItems\n        });\n      } else {\n        onEditFooter({\n          items: otherLangFooterItems\n        });\n      }\n    } else {\n      setActiveStep(previousStep => previousStep + 1);\n    }\n  };\n\n  const handleItemCountChange = event => {\n    if (!event.target.value) {\n      setItemsCount(1);\n    } else {\n      if (Number(event.target.value) > 5) setIsNextDisable(true);else setIsNextDisable(false);\n      setItemsCount(Number(event.target.value));\n    }\n  };\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 9\n    }\n  }, __jsx(Stepper, {\n    activeStep: activeStep,\n    alternativeLabel: true,\n    connector: __jsx(ColorlibConnector, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 74\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 13\n    }\n  }, steps.map((label, index) => {\n    return __jsx(Step, {\n      key: `step-${index}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 25\n      }\n    }, __jsx(StepLabel, {\n      color: \"secondary\",\n      StepIconComponent: () => getStepsIcons(itemsCount, activeStep === index, activeStep > index, index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 29\n      }\n    }, label));\n  })), __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 13\n    }\n  }), activeStep === 0 && __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"flex-start\",\n    alignItems: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 3,\n    style: {\n      marginTop: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 21\n    }\n  }, __jsx(Typography, {\n    component: 'span',\n    className: classes.itemCountTxt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 25\n    }\n  }, \"Item Count :\"), __jsx(TextField, {\n    id: \"item-count\",\n    variant: \"outlined\",\n    inputProps: {\n      min: \"1\",\n      max: \"5\",\n      step: \"1\"\n    },\n    type: \"number\",\n    className: classes.itemCountField,\n    onChange: handleItemCountChange,\n    value: itemsCount,\n    error: itemsCount > 5,\n    disabled: state.langCode !== state.defaultLang,\n    size: 'small',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 25\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 2,\n    style: {\n      marginTop: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 21\n    }\n  }, __jsx(Typography, {\n    component: 'span',\n    className: classes.itemCountTxt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 25\n    }\n  }, \"Background :\")), __jsx(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 21\n    }\n  }, __jsx(InputColor, {\n    onChange: color => setBgColor(color.hex),\n    placement: \"right\",\n    initialValue: bgColor,\n    style: {\n      width: 100,\n      marginTop: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 25\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 1,\n    style: {\n      marginTop: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 21\n    }\n  }, __jsx(Typography, {\n    component: 'span',\n    className: classes.itemCountTxt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 25\n    }\n  }, \"Text :\")), __jsx(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 21\n    }\n  }, __jsx(InputColor, {\n    onChange: color => setTextColor(color.hex),\n    placement: \"right\",\n    initialValue: textColor,\n    style: {\n      width: 100,\n      marginTop: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 25\n    }\n  }))), activeStep > 0 && state.langCode !== state.defaultLang && otherLangFooterItems.length > 0 && otherLangFooterItems.map((item, index) => {\n    return activeStep - 1 === index ? __jsx(Container, {\n      key: index,\n      style: {\n        height: 350,\n        overflow: \"auto\",\n        pointerEvents: isSave ? \"none\" : \"\",\n        opacity: isSave ? 0.5 : 1\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 57\n      }\n    }, __jsx(Grid, {\n      container: true,\n      justify: \"flex-start\",\n      style: {\n        marginTop: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 25\n      }\n    }, __jsx(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 29\n      }\n    }, __jsx(Button, {\n      variant: \"contained\",\n      size: \"small\",\n      color: \"primary\",\n      \"aria-label\": \"add\",\n      className: classes.actionButton,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 33\n      }\n    }, __jsx(AddCircleIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 37\n      }\n    }), \" ADD\")), __jsx(Grid, {\n      item: true,\n      xs: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 29\n      }\n    }, __jsx(FormControl, {\n      component: \"fieldset\",\n      style: {\n        float: \"right\"\n      },\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 33\n      }\n    }, __jsx(RadioGroup, {\n      \"aria-label\": \"footeritem\",\n      row: true,\n      name: \"footer-item\",\n      value: item.alignment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 37\n      }\n    }, __jsx(FormControlLabel, {\n      value: 'left',\n      control: __jsx(Radio, {\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 54\n        }\n      }),\n      label: \"Align Left\",\n      labelPlacement: \"start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 41\n      }\n    }), __jsx(FormControlLabel, {\n      value: 'center',\n      control: __jsx(Radio, {\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 54\n        }\n      }),\n      label: \"Alight Center\",\n      labelPlacement: \"start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 41\n      }\n    }), __jsx(FormControlLabel, {\n      value: 'right',\n      control: __jsx(Radio, {\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 54\n        }\n      }),\n      label: \"Alight Right\",\n      labelPlacement: \"start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 41\n      }\n    }))))), item.items.map((item, i) => {\n      var _footerItems, _footerItems$items$i, _footerItems2, _footerItems2$items$i, _footerItems2$items$i2;\n\n      return __jsx(Grid, {\n        container: true,\n        justify: 'flex-start',\n        key: i,\n        style: {\n          marginTop: 8,\n          marginLeft: 40\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 37\n        }\n      }, __jsx(Grid, {\n        item: true,\n        xs: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 41\n        }\n      }, __jsx(FormControl, {\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 45\n        }\n      }, __jsx(InputLabel, {\n        htmlFor: \"age-native-simple\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 49\n        }\n      }, \"Sub Item\"), __jsx(Select, {\n        native: true,\n        name: \"type\",\n        variant: 'outlined',\n        value: footerItems[activeStep - 1].items[i].type,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 49\n        }\n      }, __jsx(\"option\", {\n        style: {\n          display: 'none'\n        },\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 53\n        }\n      }), __jsx(\"option\", {\n        value: \"paragraph\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 53\n        }\n      }, \"Paragraph\"), __jsx(\"option\", {\n        value: \"heading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 53\n        }\n      }, \"Heading\"), __jsx(\"option\", {\n        value: \"link\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 53\n        }\n      }, \"Link\"), __jsx(\"option\", {\n        value: \"social-link\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 53\n        }\n      }, \"Social Link\"), __jsx(\"option\", {\n        value: \"address\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 53\n        }\n      }, \"Address\"), __jsx(\"option\", {\n        value: \"image\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 53\n        }\n      }, \"Image\")))), __jsx(Grid, {\n        item: true,\n        xs: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 41\n        }\n      }, (footerItems[activeStep - 1].items[i].type === 'social-link' || footerItems[activeStep - 1].items[i].type === 'link' || footerItems[activeStep - 1].items[i].type === 'button') && __jsx(Grid, {\n        container: true,\n        justify: 'flex-start',\n        spacing: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 49\n        }\n      }, __jsx(Grid, {\n        item: true,\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 53\n        }\n      }, __jsx(TextField, {\n        label: 'Title',\n        variant: \"outlined\",\n        fullWidth: true,\n        value: item.value,\n        onChange: e => {\n          const updatedFooterItems = [...otherLangFooterItems];\n          updatedFooterItems[index].items[i].value = e.target.value;\n          setOtherLangFooterItems(updatedFooterItems);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 57\n        }\n      })), __jsx(Grid, {\n        item: true,\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 53\n        }\n      }, __jsx(TextField, {\n        label: 'Link',\n        variant: \"outlined\",\n        fullWidth: true,\n        value: footerItems[activeStep - 1].items[index].value.value,\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 57\n        }\n      }))), ((_footerItems = footerItems[activeStep - 1]) === null || _footerItems === void 0 ? void 0 : (_footerItems$items$i = _footerItems.items[i]) === null || _footerItems$items$i === void 0 ? void 0 : _footerItems$items$i.type) === 'image' && __jsx(Grid, {\n        container: true,\n        justify: 'center',\n        spacing: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 49\n        }\n      }, __jsx(Grid, {\n        item: true,\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 53\n        }\n      }, __jsx(TextField, {\n        label: 'Link',\n        variant: \"outlined\",\n        fullWidth: true,\n        value: (_footerItems2 = footerItems[activeStep - 1]) === null || _footerItems2 === void 0 ? void 0 : (_footerItems2$items$i = _footerItems2.items[index]) === null || _footerItems2$items$i === void 0 ? void 0 : (_footerItems2$items$i2 = _footerItems2$items$i.value) === null || _footerItems2$items$i2 === void 0 ? void 0 : _footerItems2$items$i2.link,\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 57\n        }\n      })), __jsx(Grid, {\n        item: true,\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 53\n        }\n      }, __jsx(Paper, {\n        style: {\n          border: `2px solid ${COLORS.secondary}`\n        },\n        className: classes.disabledEvent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 57\n        }\n      }, __jsx(ReactDropzone, {\n        accept: 'image/png,image/jpg,image/jpeg',\n        acceptedFile: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 61\n        }\n      }, ({\n        getRootProps,\n        getInputProps\n      }) => {\n        var _footerItems3, _footerItems3$items$i, _footerItems4, _footerItems4$items$i;\n\n        return __jsx(\"section\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 69\n          }\n        }, __jsx(\"div\", _extends({}, getRootProps(), {\n          style: {\n            width: '100%',\n            height: 200\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 73\n          }\n        }), __jsx(\"input\", _extends({}, getInputProps(), {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 77\n          }\n        })), (_footerItems3 = footerItems[activeStep - 1]) !== null && _footerItems3 !== void 0 && (_footerItems3$items$i = _footerItems3.items[index]) !== null && _footerItems3$items$i !== void 0 && _footerItems3$items$i.value.image ? __jsx(\"div\", {\n          style: {\n            backgroundImage: `url(${GENERAL_SETTINGS.STATIC_URL + ((_footerItems4 = footerItems[activeStep - 1]) === null || _footerItems4 === void 0 ? void 0 : (_footerItems4$items$i = _footerItems4.items[index]) === null || _footerItems4$items$i === void 0 ? void 0 : _footerItems4$items$i.value.image)})`\n          },\n          className: classes.imagePreview,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 138\n          }\n        }) : __jsx(CloudUploadIcon, {\n          className: classes.icon,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 91\n          }\n        })));\n      })))), (footerItems[activeStep - 1].items[i].type === 'paragraph' || footerItems[activeStep - 1].items[i].type === 'heading') && __jsx(Grid, {\n        container: true,\n        justify: 'flex-start',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 49\n        }\n      }, __jsx(TextField, {\n        label: 'Value',\n        variant: \"outlined\",\n        fullWidth: true,\n        value: item.value,\n        onChange: e => {\n          const updatedFooterItems = [...otherLangFooterItems];\n          updatedFooterItems[index].items[i].value = e.target.value;\n          setOtherLangFooterItems(updatedFooterItems);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 53\n        }\n      })), footerItems[activeStep - 1].items[i].type === 'address' && __jsx(Paper, {\n        style: {\n          border: `2px solid ${COLORS.secondary}`,\n          height: 220,\n          overflow: \"auto\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 49\n        }\n      }, __jsx(Grid, {\n        container: true,\n        justify: 'flex-start',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 53\n        }\n      }, __jsx(Button, {\n        variant: \"contained\",\n        size: \"small\",\n        color: \"primary\",\n        \"aria-label\": \"add\",\n        className: classes.actionButton,\n        style: {\n          marginTop: 8\n        },\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 57\n        }\n      }, __jsx(AddCircleIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 61\n        }\n      }), \" ADD\")), footerItems[activeStep - 1].items[i].value.length > 0 && footerItems[activeStep - 1].items[i].value.map((value, addIndex) => {\n        return __jsx(Grid, {\n          style: {\n            marginTop: 8,\n            marginBottom: 8\n          },\n          key: addIndex,\n          container: true,\n          justify: 'flex-start',\n          spacing: 3,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 65\n          }\n        }, __jsx(Grid, {\n          item: true,\n          xs: 5,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 69\n          }\n        }, __jsx(TextField, {\n          disabled: true,\n          label: 'Title',\n          variant: \"outlined\",\n          fullWidth: true,\n          value: value.title,\n          style: {\n            marginLeft: 8\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 73\n          }\n        })), __jsx(Grid, {\n          item: true,\n          xs: 5,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 595,\n            columnNumber: 69\n          }\n        }, __jsx(TextField, {\n          label: 'Link',\n          variant: \"outlined\",\n          fullWidth: true,\n          value: value.value,\n          disabled: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 73\n          }\n        })), __jsx(Grid, {\n          item: true,\n          xs: 2,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 69\n          }\n        }, __jsx(IconButton, {\n          \"aria-label\": \"Delete item\",\n          color: \"primary\",\n          disabled: true,\n          className: classes.disableEvent,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 605,\n            columnNumber: 73\n          }\n        }, __jsx(CancelIcon, {\n          style: {\n            color: 'grey'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 77\n          }\n        }))));\n      }))), __jsx(Grid, {\n        item: true,\n        xs: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 621,\n          columnNumber: 41\n        }\n      }, __jsx(IconButton, {\n        \"aria-label\": \"Delete item\",\n        color: \"primary\",\n        disabled: true,\n        className: classes.disableEvent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 45\n        }\n      }, __jsx(CancelIcon, {\n        style: {\n          color: 'grey'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 49\n        }\n      }))));\n    })) : null;\n  }), activeStep > 0 && state.langCode === state.defaultLang && footerItems.length > 0 && footerItems.map((footerItem, index) => {\n    return activeStep - 1 === index ? __jsx(Container, {\n      key: index,\n      style: {\n        height: 350,\n        overflow: \"auto\",\n        pointerEvents: isSave ? \"none\" : \"\",\n        opacity: isSave ? 0.5 : 1\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 57\n      }\n    }, __jsx(Grid, {\n      container: true,\n      justify: \"flex-start\",\n      style: {\n        marginTop: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 646,\n        columnNumber: 25\n      }\n    }, __jsx(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 650,\n        columnNumber: 29\n      }\n    }, __jsx(Button, {\n      onClick: () => {\n        const updatedFooterItems = [...footerItems];\n        updatedFooterItems[index].items.push({\n          id: `item-${footerItem.items.length - 1}`,\n          type: 'paragraph',\n          value: ''\n        });\n        setFooterItems(updatedFooterItems);\n      },\n      variant: \"contained\",\n      size: \"small\",\n      color: \"primary\",\n      \"aria-label\": \"add\",\n      className: classes.actionButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 651,\n        columnNumber: 33\n      }\n    }, __jsx(AddCircleIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 667,\n        columnNumber: 37\n      }\n    }), \" ADD\")), __jsx(Grid, {\n      item: true,\n      xs: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 29\n      }\n    }, __jsx(FormControl, {\n      component: \"fieldset\",\n      style: {\n        float: \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 33\n      }\n    }, __jsx(RadioGroup, {\n      \"aria-label\": \"footeritem\",\n      row: true,\n      name: \"footer-item\",\n      value: footerItem.alignment,\n      onChange: e => {\n        const updatedFooterItems = [...footerItems];\n        updatedFooterItems[index].alignment = e.target.value;\n        setFooterItems(updatedFooterItems);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 675,\n        columnNumber: 37\n      }\n    }, __jsx(FormControlLabel, {\n      value: 'left',\n      control: __jsx(Radio, {\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 688,\n          columnNumber: 54\n        }\n      }),\n      label: \"Align Left\",\n      labelPlacement: \"start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 41\n      }\n    }), __jsx(FormControlLabel, {\n      value: 'center',\n      control: __jsx(Radio, {\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 694,\n          columnNumber: 54\n        }\n      }),\n      label: \"Alight Center\",\n      labelPlacement: \"start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 41\n      }\n    }), __jsx(FormControlLabel, {\n      value: 'right',\n      control: __jsx(Radio, {\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 700,\n          columnNumber: 54\n        }\n      }),\n      label: \"Alight Right\",\n      labelPlacement: \"start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 41\n      }\n    }))))), footerItem.items.map((item, i) => {\n      var _item$value, _item$value2, _item$value3;\n\n      return __jsx(Grid, {\n        container: true,\n        justify: 'flex-start',\n        key: i,\n        style: {\n          marginTop: 8,\n          marginLeft: 40\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 711,\n          columnNumber: 37\n        }\n      }, __jsx(Grid, {\n        item: true,\n        xs: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 41\n        }\n      }, __jsx(FormControl, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 717,\n          columnNumber: 45\n        }\n      }, __jsx(InputLabel, {\n        htmlFor: \"age-native-simple\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 718,\n          columnNumber: 49\n        }\n      }, \"Sub Item\"), __jsx(Select, {\n        native: true,\n        name: \"type\",\n        variant: 'outlined',\n        value: item.type,\n        onChange: e => {\n          const updatedFooterItems = [...footerItems];\n\n          if (e.target.value === 'social-link' || e.target.value === 'link' || e.target.value === 'button') {\n            updatedFooterItems[index].items[i] = {\n              id: item.id,\n              type: e.target.value,\n              value: {\n                title: '',\n                value: ''\n              }\n            };\n          }\n\n          if (e.target.value === 'paragraph' || e.target.value === 'heading') {\n            updatedFooterItems[index].items[i] = {\n              id: item.id,\n              type: e.target.value,\n              value: ''\n            };\n          }\n\n          if (e.target.value === 'address') {\n            updatedFooterItems[index].items[i] = {\n              id: item.id,\n              type: e.target.value,\n              value: [{\n                title: '',\n                value: ''\n              }]\n            };\n          }\n\n          if (e.target.value === 'image') {\n            updatedFooterItems[index].items[i] = {\n              id: item.id,\n              type: e.target.value,\n              value: {\n                link: '',\n                image: GENERAL_SETTINGS.STATIC_URL + (state === null || state === void 0 ? void 0 : state.poweredByUrl)\n              }\n            };\n          }\n\n          setFooterItems(updatedFooterItems);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 719,\n          columnNumber: 49\n        }\n      }, __jsx(\"option\", {\n        style: {\n          display: 'none'\n        },\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 769,\n          columnNumber: 53\n        }\n      }), __jsx(\"option\", {\n        value: \"paragraph\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 770,\n          columnNumber: 53\n        }\n      }, \"Paragraph\"), __jsx(\"option\", {\n        value: \"heading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 771,\n          columnNumber: 53\n        }\n      }, \"Heading\"), __jsx(\"option\", {\n        value: \"link\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 772,\n          columnNumber: 53\n        }\n      }, \"Link\"), __jsx(\"option\", {\n        value: \"social-link\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 773,\n          columnNumber: 53\n        }\n      }, \"Social Link\"), __jsx(\"option\", {\n        value: \"address\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 774,\n          columnNumber: 53\n        }\n      }, \"Address\"), __jsx(\"option\", {\n        value: \"image\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 775,\n          columnNumber: 53\n        }\n      }, \"Image\")))), __jsx(Grid, {\n        item: true,\n        xs: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 779,\n          columnNumber: 41\n        }\n      }, (item.type === 'social-link' || item.type === 'link' || item.type === 'button') && __jsx(Grid, {\n        container: true,\n        justify: 'flex-start',\n        spacing: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 782,\n          columnNumber: 80\n        }\n      }, __jsx(Grid, {\n        item: true,\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 786,\n          columnNumber: 53\n        }\n      }, __jsx(TextField, {\n        label: 'Title',\n        variant: \"outlined\",\n        fullWidth: true,\n        value: item.value.title,\n        onChange: e => {\n          const updatedFooterItems = [...footerItems];\n          updatedFooterItems[index].items[i].value['title'] = e.target.value;\n          setFooterItems(updatedFooterItems);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 787,\n          columnNumber: 57\n        }\n      })), __jsx(Grid, {\n        item: true,\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 799,\n          columnNumber: 53\n        }\n      }, __jsx(TextField, {\n        label: 'Link',\n        variant: \"outlined\",\n        fullWidth: true,\n        value: item.value.value,\n        error: !validator.isURL(item.value.value) && item.value.value ? true : false,\n        onChange: e => {\n          const updatedFooterItems = [...footerItems];\n          updatedFooterItems[index].items[i].value['value'] = e.target.value;\n          setFooterItems(updatedFooterItems);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 800,\n          columnNumber: 57\n        }\n      }))), (item === null || item === void 0 ? void 0 : item.type) === 'image' && __jsx(Grid, {\n        container: true,\n        justify: 'center',\n        spacing: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 817,\n          columnNumber: 49\n        }\n      }, __jsx(Grid, {\n        item: true,\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 818,\n          columnNumber: 53\n        }\n      }, __jsx(TextField, {\n        label: 'Link',\n        variant: \"outlined\",\n        fullWidth: true,\n        value: item === null || item === void 0 ? void 0 : (_item$value = item.value) === null || _item$value === void 0 ? void 0 : _item$value.link,\n        error: !validator.isURL(item === null || item === void 0 ? void 0 : (_item$value2 = item.value) === null || _item$value2 === void 0 ? void 0 : _item$value2.link) && item !== null && item !== void 0 && (_item$value3 = item.value) !== null && _item$value3 !== void 0 && _item$value3.link ? true : false,\n        onChange: e => {\n          const updatedFooterItems = [...footerItems];\n          updatedFooterItems[index].items[i].value['link'] = e.target.value;\n          setFooterItems(updatedFooterItems);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 819,\n          columnNumber: 57\n        }\n      })), __jsx(Grid, {\n        item: true,\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 832,\n          columnNumber: 53\n        }\n      }, __jsx(Paper, {\n        style: {\n          border: `2px solid ${COLORS.secondary}`,\n          pointersEvent: 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 833,\n          columnNumber: 57\n        }\n      }, __jsx(\"div\", {\n        style: {\n          width: '100%',\n          height: 200\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 834,\n          columnNumber: 61\n        }\n      }, __jsx(\"div\", {\n        style: {\n          backgroundImage: `url(${GENERAL_SETTINGS.STATIC_URL + (state === null || state === void 0 ? void 0 : state.poweredByUrl)})`\n        },\n        className: classes.imagePreview,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 835,\n          columnNumber: 65\n        }\n      }))))), (item.type === 'paragraph' || item.type === 'heading') && __jsx(Grid, {\n        container: true,\n        justify: 'flex-start',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 842,\n          columnNumber: 107\n        }\n      }, __jsx(TextField, {\n        label: 'Value',\n        variant: \"outlined\",\n        fullWidth: true,\n        value: item.value,\n        onChange: e => {\n          const updatedFooterItems = [...footerItems];\n          updatedFooterItems[index].items[i].value = e.target.value;\n          setFooterItems(updatedFooterItems);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 845,\n          columnNumber: 53\n        }\n      })), item.type === 'address' && __jsx(Paper, {\n        style: {\n          border: `2px solid ${COLORS.secondary}`,\n          height: 220,\n          overflow: \"auto\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 859,\n          columnNumber: 76\n        }\n      }, __jsx(Grid, {\n        container: true,\n        justify: 'flex-start',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 863,\n          columnNumber: 53\n        }\n      }, __jsx(Button, {\n        onClick: () => {\n          const updatedFooterItems = [...footerItems];\n          updatedFooterItems[index].items[i].value.push({\n            title: '',\n            value: ''\n          });\n          setFooterItems(updatedFooterItems);\n        },\n        variant: \"contained\",\n        size: \"small\",\n        color: \"primary\",\n        \"aria-label\": \"add\",\n        className: classes.actionButton,\n        style: {\n          marginTop: 8\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 864,\n          columnNumber: 57\n        }\n      }, __jsx(AddCircleIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 880,\n          columnNumber: 61\n        }\n      }), \" ADD\")), item.value.length > 0 && item.value.map((value, addIndex) => {\n        return __jsx(Grid, {\n          style: {\n            marginTop: 8,\n            marginBottom: 8\n          },\n          key: addIndex,\n          container: true,\n          justify: 'flex-start',\n          spacing: 3,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 887,\n            columnNumber: 65\n          }\n        }, __jsx(Grid, {\n          item: true,\n          xs: 5,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 893,\n            columnNumber: 69\n          }\n        }, __jsx(TextField, {\n          onChange: e => {\n            const updatedFooterItems = [...footerItems];\n            updatedFooterItems[index].items[i].value[addIndex].title = e.target.value;\n            setFooterItems(updatedFooterItems);\n          },\n          label: 'Title',\n          variant: \"outlined\",\n          fullWidth: true,\n          value: value.title,\n          style: {\n            marginLeft: 8\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 894,\n            columnNumber: 73\n          }\n        })), __jsx(Grid, {\n          item: true,\n          xs: 5,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 907,\n            columnNumber: 69\n          }\n        }, __jsx(TextField, {\n          label: 'Link',\n          variant: \"outlined\",\n          fullWidth: true,\n          value: value.value,\n          error: !validator.isURL(value.value) && value.value ? true : false,\n          onChange: e => {\n            const updatedFooterItems = [...footerItems];\n            updatedFooterItems[index].items[i].value[addIndex].value = e.target.value;\n            setFooterItems(updatedFooterItems);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 908,\n            columnNumber: 73\n          }\n        })), __jsx(Grid, {\n          item: true,\n          xs: 2,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 921,\n            columnNumber: 69\n          }\n        }, __jsx(IconButton, {\n          \"aria-label\": \"Delete item\",\n          color: \"primary\",\n          onClick: () => {\n            const updatedFooterItems = [...footerItems];\n            updatedFooterItems[index].items[i].value.splice(addIndex, 1);\n            setFooterItems(updatedFooterItems);\n          },\n          disabled: item.value.length === 1,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 922,\n            columnNumber: 73\n          }\n        }, __jsx(CancelIcon, {\n          style: {\n            color: item.value.length === 1 ? '' + 'grey' : 'red'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 933,\n            columnNumber: 77\n          }\n        }))));\n      }))), __jsx(Grid, {\n        item: true,\n        xs: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 944,\n          columnNumber: 41\n        }\n      }, __jsx(IconButton, {\n        \"aria-label\": \"Delete item\",\n        color: \"primary\",\n        onClick: () => {\n          const updatedFooterItems = [...footerItems];\n          updatedFooterItems[index].items.splice(i, 1);\n          setFooterItems(updatedFooterItems);\n        },\n        disabled: footerItem.items.length === 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 945,\n          columnNumber: 45\n        }\n      }, __jsx(CancelIcon, {\n        style: {\n          color: footerItem.items.length === 1 ? 'grey' : 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 955,\n          columnNumber: 49\n        }\n      }))));\n    })) : null;\n  }), __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"flex-start\",\n    alignItems: \"flex-start\",\n    style: {\n      pointerEvents: isSave ? \"none\" : \"\",\n      opacity: isSave ? 0.5 : 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 965,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: classes.actionButtons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 971,\n      columnNumber: 17\n    }\n  }, activeStep !== 0 && __jsx(Button, {\n    onClick: handleBack,\n    variant: \"contained\",\n    size: \"small\",\n    \"aria-label\": \"add\",\n    className: classes.actionButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 973,\n      columnNumber: 25\n    }\n  }, \"BACK\"), __jsx(Button, {\n    onClick: handleNext,\n    variant: \"contained\",\n    size: \"small\",\n    color: \"primary\",\n    \"aria-label\": \"add\",\n    className: classes.actionButton,\n    disabled: isNextDisable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 983,\n      columnNumber: 21\n    }\n  }, activeStep === steps.length - 1 && activeStep !== 0 ? 'SAVE' : 'NEXT'))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    state: state.formReducer.pageBuilder\n  };\n};\n\nexport default connect(mapStateToProps)(EditEmailFooter);","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/components/email/footer/EditEmailFooter.js"],"names":["React","useState","useEffect","useContext","connect","Stepper","Step","StepLabel","StepConnector","makeStyles","ReceiptIcon","Button","Grid","TextField","Divider","Typography","RadioGroup","FormControlLabel","Radio","FormControl","Container","InputLabel","Select","Paper","IconButton","CancelIcon","AddCircleIcon","CreateIcon","withStyles","COLORS","UPLOAD_SUCCESS","clsx","validator","ReactDropzone","Upload","toast","CloudUploadIcon","WebCmsGlobal","useRouter","InputColor","useStyle","theme","actionButton","marginLeft","spacing","borderRadius","actionButtons","display","justifyContent","marginTop","itemCountField","height","itemCountTxt","disableEvent","pointerEvents","opacity","icon","cursor","width","imagePreview","backgroundSize","backgroundRepeat","backgroundPosition","useColorStepIconStyle","root","backgroundColor","zIndex","color","alignItems","iconSize","active","secondary","boxShadow","completed","primary","ColorlibConnector","alternativeLabel","top","left","right","background","line","border","getStepsIcons","itemCount","isActive","isCompleted","step","icon_classes","icons","EditEmailFooter","props","state","onEditFooter","activeStep","setActiveStep","itemsCount","setItemsCount","email","footer","items","length","steps","setSteps","footerItems","setFooterItems","isSave","setIsSave","isNextDisable","setIsNextDisable","otherLangFooterItems","setOtherLangFooterItems","bgColor","setBgColor","textColor","setTextColor","GENERAL_SETTINGS","classes","Object","keys","langsFile","langCode","updatedFooterItems","i","push","id","alignment","handleBack","previousStep","handleNext","defaultLang","tpl","handleItemCountChange","event","target","value","Number","map","label","index","min","max","hex","item","overflow","float","type","e","link","disabledEvent","getRootProps","getInputProps","image","backgroundImage","STATIC_URL","addIndex","marginBottom","title","footerItem","poweredByUrl","isURL","pointersEvent","splice","mapStateToProps","formReducer","pageBuilder"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,UAApC,QAAqD,OAArD,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,SAAQC,UAAR,QAAyB,0BAAzB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B,C,CACA;;AACA,SAAQC,MAAR,EAAgBC,cAAhB,QAAqC,oBAArC;AAEA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAAQC,MAAR,QAAqB,eAArB;AACA,SAAQC,KAAR,QAAoB,gBAApB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AAEA,MAAMC,QAAQ,GAAG/B,UAAU,CAACgC,KAAK,KAAK;AAClCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,UAAU,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADF;AAEVC,IAAAA,YAAY,EAAE;AAFJ,GADoB;AAKlCC,EAAAA,aAAa,EAAE;AACXC,IAAAA,OAAO,EAAE,MADE;AAEXC,IAAAA,cAAc,EAAE,YAFL;AAGXC,IAAAA,SAAS,EAAER,KAAK,CAACG,OAAN,CAAc,CAAd;AAHA,GALmB;AAUlCM,EAAAA,cAAc,EAAE;AACZP,IAAAA,UAAU,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADA;AAEZ,eAAW;AACPO,MAAAA,MAAM,EAAE;AADD;AAFC,GAVkB;AAgBlCC,EAAAA,YAAY,EAAE;AACVT,IAAAA,UAAU,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADF;AAEVK,IAAAA,SAAS,EAAER,KAAK,CAACG,OAAN,CAAc,CAAd;AAFD,GAhBoB;AAoBlCS,EAAAA,YAAY,EAAE;AACVC,IAAAA,aAAa,EAAE,MADL;AAEVC,IAAAA,OAAO,EAAE;AAFC,GApBoB;AAwBlCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,MAAM,EAAE,SADN;AAEFC,IAAAA,KAAK,EAAE,MAFL;AAGFP,IAAAA,MAAM,EAAE,MAHN;AAIFI,IAAAA,OAAO,EAAE;AAJP,GAxB4B;AA8BlCI,EAAAA,YAAY,EAAE;AACVC,IAAAA,cAAc,EAAE,SADN;AAEVC,IAAAA,gBAAgB,EAAE,WAFR;AAGVC,IAAAA,kBAAkB,EAAE,QAHV;AAIVX,IAAAA,MAAM,EAAE,GAJE;AAKVO,IAAAA,KAAK,EAAE,MALG;AAMVD,IAAAA,MAAM,EAAE;AANE;AA9BoB,CAAL,CAAN,CAA3B;AAwCA,MAAMM,qBAAqB,GAAGtD,UAAU,CAAC,OAAO;AAC5CuD,EAAAA,IAAI,EAAE;AACFC,IAAAA,eAAe,EAAE,MADf;AAEFC,IAAAA,MAAM,EAAE,CAFN;AAGFC,IAAAA,KAAK,EAAE,MAHL;AAIFT,IAAAA,KAAK,EAAE,EAJL;AAKFP,IAAAA,MAAM,EAAE,EALN;AAMFJ,IAAAA,OAAO,EAAE,MANP;AAOFF,IAAAA,YAAY,EAAE,KAPZ;AAQFG,IAAAA,cAAc,EAAE,QARd;AASFoB,IAAAA,UAAU,EAAE,QATV;AAUF,aAAS;AACLV,MAAAA,KAAK,EAAE;AADF;AAVP,GADsC;AAe5CW,EAAAA,QAAQ,EAAE;AACNlB,IAAAA,MAAM,EAAE,EADF;AAENO,IAAAA,KAAK,EAAE;AAFD,GAfkC;AAmB5CY,EAAAA,MAAM,EAAE;AACJL,IAAAA,eAAe,EAAEpC,MAAM,CAAC0C,SADpB;AAEJC,IAAAA,SAAS,EAAE;AAFP,GAnBoC;AAuB5CC,EAAAA,SAAS,EAAE;AACPR,IAAAA,eAAe,EAAEpC,MAAM,CAAC6C,OADjB;AAEPP,IAAAA,KAAK,EAAE;AAFA;AAvBiC,CAAP,CAAD,CAAxC;AA6BA,MAAMQ,iBAAiB,GAAG/C,UAAU,CAAC;AACjCgD,EAAAA,gBAAgB,EAAE;AACdC,IAAAA,GAAG,EAAE,EADS;AAEdC,IAAAA,IAAI,EAAE,mBAFQ;AAGdC,IAAAA,KAAK,EAAE;AAHO,GADe;AAMjCT,EAAAA,MAAM,EAAE;AACJ,eAAW;AACPU,MAAAA,UAAU,EAAE;AADL;AADP,GANyB;AAWjCP,EAAAA,SAAS,EAAE;AACP,eAAW;AACPR,MAAAA,eAAe,EAAEpC,MAAM,CAAC6C;AADjB;AADJ,GAXsB;AAgBjCO,EAAAA,IAAI,EAAE;AACF9B,IAAAA,MAAM,EAAE,CADN;AAEF+B,IAAAA,MAAM,EAAE,CAFN;AAGFjB,IAAAA,eAAe,EAAE,SAHf;AAIFpB,IAAAA,YAAY,EAAE;AAJZ;AAhB2B,CAAD,CAAV,CAsBvBrC,aAtBuB,CAA1B;;AAwBA,SAAS2E,aAAT,CAAuBC,SAAvB,EAAkCC,QAAlC,EAA4CC,WAA5C,EAAyDC,IAAzD,EAA+D;AAC3D,QAAMC,YAAY,GAAGzB,qBAAqB,EAA1C;AACA,MAAI0B,KAAK,GAAG,EAAZ;;AACA,UAAQL,SAAR;AACI,SAAK,CAAL;AACIK,MAAAA,KAAK,GAAG;AACJ,WAAG,MAAC,WAAD;AAAa,UAAA,SAAS,EAAED,YAAY,CAACnB,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADC;AAEJ,WAAG,MAAC,UAAD;AAAY,UAAA,SAAS,EAAEmB,YAAY,CAACnB,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFC,OAAR;AAIA;;AACJ,SAAK,CAAL;AACIoB,MAAAA,KAAK,GAAG;AACJ,WAAG,MAAC,WAAD;AAAa,UAAA,SAAS,EAAED,YAAY,CAACnB,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADC;AAEJ,WAAG,MAAC,UAAD;AAAY,UAAA,SAAS,EAAEmB,YAAY,CAACnB,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFC;AAGJ,WAAG,MAAC,UAAD;AAAY,UAAA,SAAS,EAAEmB,YAAY,CAACnB,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHC,OAAR;AAKA;;AACJ,SAAK,CAAL;AACIoB,MAAAA,KAAK,GAAG;AACJ,WAAG,MAAC,WAAD;AAAa,UAAA,SAAS,EAAED,YAAY,CAACnB,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADC;AAEJ,WAAG,MAAC,UAAD;AAAY,UAAA,SAAS,EAAEmB,YAAY,CAACnB,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFC;AAGJ,WAAG,MAAC,UAAD;AAAY,UAAA,SAAS,EAAEmB,YAAY,CAACnB,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHC;AAIJ,WAAG,MAAC,UAAD;AAAY,UAAA,SAAS,EAAEmB,YAAY,CAACnB,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJC,OAAR;AAMA;;AACJ,SAAK,CAAL;AACIoB,MAAAA,KAAK,GAAG;AACJ,WAAG,MAAC,WAAD;AAAa,UAAA,SAAS,EAAED,YAAY,CAACnB,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADC;AAEJ,WAAG,MAAC,UAAD;AAAY,UAAA,SAAS,EAAEmB,YAAY,CAACnB,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFC;AAGJ,WAAG,MAAC,UAAD;AAAY,UAAA,SAAS,EAAEmB,YAAY,CAACnB,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHC;AAIJ,WAAG,MAAC,UAAD;AAAY,UAAA,SAAS,EAAEmB,YAAY,CAACnB,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJC;AAKJ,WAAG,MAAC,UAAD;AAAY,UAAA,SAAS,EAAEmB,YAAY,CAACnB,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALC,OAAR;AAOA;;AACJ,SAAK,CAAL;AACIoB,MAAAA,KAAK,GAAG;AACJ,WAAG,MAAC,WAAD;AAAa,UAAA,SAAS,EAAED,YAAY,CAACnB,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADC;AAEJ,WAAG,MAAC,UAAD;AAAY,UAAA,SAAS,EAAEmB,YAAY,CAACnB,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFC;AAGJ,WAAG,MAAC,UAAD;AAAY,UAAA,SAAS,EAAEmB,YAAY,CAACnB,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHC;AAIJ,WAAG,MAAC,UAAD;AAAY,UAAA,SAAS,EAAEmB,YAAY,CAACnB,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJC;AAKJ,WAAG,MAAC,UAAD;AAAY,UAAA,SAAS,EAAEmB,YAAY,CAACnB,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALC;AAMJ,WAAG,MAAC,UAAD;AAAY,UAAA,SAAS,EAAEmB,YAAY,CAACnB,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANC,OAAR;AAQA;;AACJ;AACIoB,MAAAA,KAAK,GAAG;AACJ,WAAG,MAAC,WAAD;AAAa,UAAA,SAAS,EAAED,YAAY,CAACnB,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADC;AAEJ,WAAG,MAAC,UAAD;AAAY,UAAA,SAAS,EAAEmB,YAAY,CAACnB,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFC;AAGJ,WAAG,MAAC,UAAD;AAAY,UAAA,SAAS,EAAEmB,YAAY,CAACnB,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHC;AAIJ,WAAG,MAAC,UAAD;AAAY,UAAA,SAAS,EAAEmB,YAAY,CAACnB,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJC;AAKJ,WAAG,MAAC,UAAD;AAAY,UAAA,SAAS,EAAEmB,YAAY,CAACnB,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALC;AAMJ,WAAG,MAAC,UAAD;AAAY,UAAA,SAAS,EAAEmB,YAAY,CAACnB,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANC,OAAR;AAQA;AAlDR;;AAqDA,SACI;AACI,IAAA,SAAS,EAAEtC,IAAI,CAACyD,YAAY,CAACxB,IAAd,EAAoB;AAC/B,OAACwB,YAAY,CAAClB,MAAd,GAAuBe,QADQ;AAE/B,OAACG,YAAY,CAACf,SAAd,GAA0Ba;AAFK,KAApB,CADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMKG,KAAK,CAACF,IAAD,CANV,CADJ;AAUH;;AAED,MAAMG,eAAe,GAAIC,KAAD,IAAW;AAAA;;AAE/B,QAAM;AACFC,IAAAA,KADE;AAEFC,IAAAA;AAFE,MAGFF,KAHJ;AAKA,QAAM;AAAA,OAACG,UAAD;AAAA,OAAaC;AAAb,MAA8B9F,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM;AAAA,OAAC+F,UAAD;AAAA,OAAaC;AAAb,MAA8BhG,QAAQ,CAAC2F,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAmBC,KAAnB,CAAyBC,MAA1B,CAA5C;AACA,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBtG,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACuG,WAAD;AAAA,OAAcC;AAAd,MAAgCxG,QAAQ,CAAC2F,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAmBC,KAApB,CAA9C;AACA,QAAM;AAAA,OAACM,MAAD;AAAA,OAASC;AAAT,MAAsB1G,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM;AAAA,OAAC2G,aAAD;AAAA,OAAgBC;AAAhB,MAAoC5G,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM;AAAA,OAAC6G,oBAAD;AAAA,OAAuBC;AAAvB,MAAkD9G,QAAQ,CAAC,EAAD,CAAhE;AACA,QAAM;AAAA,OAAC+G,OAAD;AAAA,OAAUC;AAAV,MAAwBhH,QAAQ,CAAC2F,KAAD,aAACA,KAAD,uCAACA,KAAK,CAAEM,KAAR,wEAAC,aAAcC,MAAf,wDAAC,oBAAsBlC,eAAvB,CAAtC;AACA,QAAM;AAAA,OAACiD,SAAD;AAAA,OAAYC;AAAZ,MAA4BlH,QAAQ,CAAC2F,KAAD,aAACA,KAAD,wCAACA,KAAK,CAAEM,KAAR,0EAAC,cAAcC,MAAf,yDAAC,qBAAsBe,SAAvB,CAA1C;AAEA,QAAM;AAAEE,IAAAA;AAAF,MAAuBjH,UAAU,CAACkC,YAAD,CAAvC;AAEA,QAAMgF,OAAO,GAAG7E,QAAQ,EAAxB;AAEAtC,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,QAAIoH,MAAM,CAACC,IAAP,CAAY3B,KAAK,CAAC4B,SAAlB,EAA6BnB,MAA7B,GAAsC,CAAtC,IACAT,KAAK,CAAC4B,SAAN,CAAgBrB,MADhB,IAEAP,KAAK,CAAC4B,SAAN,CAAgBrB,MAAhB,CAAuBP,KAAK,CAAC6B,QAA7B,CAFJ,EAE4C;AACxCV,MAAAA,uBAAuB,CAAC,CAAC,GAAGnB,KAAK,CAAC4B,SAAN,CAAgBrB,MAAhB,CAAuBP,KAAK,CAAC6B,QAA7B,EAAuCrB,KAA3C,CAAD,CAAvB;AACH;AACJ,GAPQ,EAON,EAPM,CAAT;AASAlG,EAAAA,SAAS,CAAC,MAAM;AACZ,YAAQ8F,UAAR;AACI,WAAK,CAAL;AACIO,QAAAA,QAAQ,CAAC,CAAC,aAAD,EAAgB,QAAhB,CAAD,CAAR;AACA;;AACJ,WAAK,CAAL;AACIA,QAAAA,QAAQ,CAAC,CAAC,aAAD,EAAgB,QAAhB,EAA0B,QAA1B,CAAD,CAAR;AACA;;AACJ,WAAK,CAAL;AACIA,QAAAA,QAAQ,CAAC,CAAC,aAAD,EAAgB,QAAhB,EAA0B,QAA1B,EAAoC,QAApC,CAAD,CAAR;AACA;;AACJ,WAAK,CAAL;AACIA,QAAAA,QAAQ,CAAC,CAAC,aAAD,EAAgB,QAAhB,EAA0B,QAA1B,EAAoC,QAApC,EAA8C,QAA9C,CAAD,CAAR;AACA;;AACJ,WAAK,CAAL;AACIA,QAAAA,QAAQ,CAAC,CAAC,aAAD,EAAgB,QAAhB,EAA0B,QAA1B,EAAoC,QAApC,EAA8C,QAA9C,EAAwD,QAAxD,CAAD,CAAR;AACA;;AACJ;AACIA,QAAAA,QAAQ,CAAC,CAAC,aAAD,EAAgB,QAAhB,EAA0B,QAA1B,EAAoC,QAApC,EAA8C,QAA9C,EAAwD,QAAxD,CAAD,CAAR;AAjBR;;AAoBA,QAAIP,UAAU,GAAGQ,WAAW,CAACH,MAA7B,EAAqC;AACjC,YAAMqB,kBAAkB,GAAG,CAAC,GAAGlB,WAAJ,CAA3B;AACAkB,MAAAA,kBAAkB,CAACrB,MAAnB,GAA4BL,UAA5B;AACAS,MAAAA,cAAc,CAACiB,kBAAD,CAAd;AACH;;AACD,QAAI1B,UAAU,GAAGQ,WAAW,CAACH,MAA7B,EAAqC;AACjC,WAAK,IAAIsB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG3B,UAApB,EAAgC2B,CAAC,EAAjC,EAAqC;AACjC,YAAI,CAACnB,WAAW,CAACmB,CAAD,CAAhB,EAAqB;AACjBnB,UAAAA,WAAW,CAACoB,IAAZ,CAAiB;AACbC,YAAAA,EAAE,EAAG,QAAOrB,WAAW,CAACH,MAAZ,GAAqB,CAAE,EADtB;AAEbyB,YAAAA,SAAS,EAAE,YAFE;AAGb1B,YAAAA,KAAK,EAAE;AAHM,WAAjB;AAKH;AACJ;AACJ;AAEJ,GAtCQ,EAsCN,CAACJ,UAAD,CAtCM,CAAT;;AAwCA,QAAM+B,UAAU,GAAG,MAAM;AACrBhC,IAAAA,aAAa,CAACiC,YAAY,IAAIA,YAAY,GAAG,CAAhC,CAAb;AACH,GAFD;;AAIA,QAAMC,UAAU,GAAG,MAAM;AACrB,QAAInC,UAAU,KAAKQ,KAAK,CAACD,MAAN,GAAe,CAAlC,EAAqC;AACjCM,MAAAA,SAAS,CAAC,IAAD,CAAT;;AACA,UAAIf,KAAK,CAAC6B,QAAN,KAAmB7B,KAAK,CAACsC,WAA7B,EAA0C;AACtCrC,QAAAA,YAAY,CAAC;AACTsC,UAAAA,GAAG,EAAEvC,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAmBgC,GADf;AAETlE,UAAAA,eAAe,EAAE+C,OAFR;AAGTE,UAAAA,SAAS,EAAEA,SAHF;AAITd,UAAAA,KAAK,EAAEI;AAJE,SAAD,CAAZ;AAMH,OAPD,MAOO;AACHX,QAAAA,YAAY,CAAC;AACTO,UAAAA,KAAK,EAAEU;AADE,SAAD,CAAZ;AAGH;AACJ,KAdD,MAcO;AACHf,MAAAA,aAAa,CAACiC,YAAY,IAAIA,YAAY,GAAG,CAAhC,CAAb;AACH;AACJ,GAlBD;;AAoBA,QAAMI,qBAAqB,GAAIC,KAAD,IAAW;AACrC,QAAI,CAACA,KAAK,CAACC,MAAN,CAAaC,KAAlB,EAAyB;AACrBtC,MAAAA,aAAa,CAAC,CAAD,CAAb;AACH,KAFD,MAEO;AACH,UAAIuC,MAAM,CAACH,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAN,GAA6B,CAAjC,EAAoC1B,gBAAgB,CAAC,IAAD,CAAhB,CAApC,KACKA,gBAAgB,CAAC,KAAD,CAAhB;AACLZ,MAAAA,aAAa,CAACuC,MAAM,CAACH,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP,CAAb;AACH;AACJ,GARD;;AAUA,SACI,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,OAAD;AAAS,IAAA,UAAU,EAAEzC,UAArB;AAAiC,IAAA,gBAAgB,MAAjD;AAAkD,IAAA,SAAS,EAAE,MAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKQ,KAAK,CAACmC,GAAN,CAAU,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACzB,WACI,MAAC,IAAD;AAAM,MAAA,GAAG,EAAG,QAAOA,KAAM,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,SAAD;AACI,MAAA,KAAK,EAAC,WADV;AAEI,MAAA,iBAAiB,EAAE,MACfxD,aAAa,CAACa,UAAD,EACTF,UAAU,KAAK6C,KADN,EACa7C,UAAU,GAAG6C,KAD1B,EAEDA,KAFC,CAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASKD,KATL,CADJ,CADJ;AAeH,GAhBA,CADL,CADJ,EAoBI,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBJ,EAsBQ5C,UAAU,KAAK,CAAf,IACA,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,EAAC,KAA1B;AAAgC,IAAA,OAAO,EAAC,YAAxC;AAAqD,IAAA,UAAU,EAAC,YAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,KAAK,EAAE;AAAC7C,MAAAA,SAAS,EAAE;AAAZ,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AAAY,IAAA,SAAS,EAAE,MAAvB;AAA+B,IAAA,SAAS,EAAEoE,OAAO,CAACjE,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAII,MAAC,SAAD;AACI,IAAA,EAAE,EAAC,YADP;AAEI,IAAA,OAAO,EAAC,UAFZ;AAGI,IAAA,UAAU,EAAE;AAAEwF,MAAAA,GAAG,EAAE,GAAP;AAAYC,MAAAA,GAAG,EAAE,GAAjB;AAAsBtD,MAAAA,IAAI,EAAE;AAA5B,KAHhB;AAII,IAAA,IAAI,EAAC,QAJT;AAKI,IAAA,SAAS,EAAE8B,OAAO,CAACnE,cALvB;AAMI,IAAA,QAAQ,EAAEkF,qBANd;AAOI,IAAA,KAAK,EAAEpC,UAPX;AAQI,IAAA,KAAK,EAAEA,UAAU,GAAG,CARxB;AASI,IAAA,QAAQ,EAAEJ,KAAK,CAAC6B,QAAN,KAAmB7B,KAAK,CAACsC,WATvC;AAUI,IAAA,IAAI,EAAE,OAVV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ,EAkBI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,KAAK,EAAE;AAACjF,MAAAA,SAAS,EAAE;AAAZ,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AAAY,IAAA,SAAS,EAAE,MAAvB;AAA+B,IAAA,SAAS,EAAEoE,OAAO,CAACjE,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CAlBJ,EAuBI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AACI,IAAA,QAAQ,EAAGe,KAAD,IAAW8C,UAAU,CAAC9C,KAAK,CAAC2E,GAAP,CADnC;AAEI,IAAA,SAAS,EAAC,OAFd;AAGI,IAAA,YAAY,EAAE9B,OAHlB;AAII,IAAA,KAAK,EAAE;AAACtD,MAAAA,KAAK,EAAE,GAAR;AAAaT,MAAAA,SAAS,EAAE;AAAxB,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAvBJ,EA+BI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,KAAK,EAAE;AAACA,MAAAA,SAAS,EAAE;AAAZ,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AAAY,IAAA,SAAS,EAAE,MAAvB;AAA+B,IAAA,SAAS,EAAEoE,OAAO,CAACjE,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CA/BJ,EAoCI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AACI,IAAA,QAAQ,EAAGe,KAAD,IAAWgD,YAAY,CAAChD,KAAK,CAAC2E,GAAP,CADrC;AAEI,IAAA,SAAS,EAAC,OAFd;AAGI,IAAA,YAAY,EAAE5B,SAHlB;AAII,IAAA,KAAK,EAAE;AAACxD,MAAAA,KAAK,EAAE,GAAR;AAAaT,MAAAA,SAAS,EAAE;AAAxB,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CApCJ,CAvBR,EAsEQ6C,UAAU,GAAG,CAAb,IAAkBF,KAAK,CAAC6B,QAAN,KAAmB7B,KAAK,CAACsC,WAA3C,IACApB,oBAAoB,CAACT,MAArB,GAA8B,CAD9B,IAEAS,oBAAoB,CAAC2B,GAArB,CAAyB,CAACM,IAAD,EAAOJ,KAAP,KAAiB;AACtC,WAAQ7C,UAAU,GAAG,CAAb,KAAmB6C,KAApB,GAA6B,MAAC,SAAD;AAAW,MAAA,GAAG,EAAEA,KAAhB;AAAuB,MAAA,KAAK,EAAE;AAC9DxF,QAAAA,MAAM,EAAE,GADsD;AAE9D6F,QAAAA,QAAQ,EAAE,MAFoD;AAG9D1F,QAAAA,aAAa,EAAEoD,MAAM,GAAG,MAAH,GAAY,EAH6B;AAI9DnD,QAAAA,OAAO,EAAEmD,MAAM,GAAG,GAAH,GAAS;AAJsC,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMhC,MAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AACM,MAAA,OAAO,EAAC,YADd;AAEM,MAAA,KAAK,EAAE;AAACzD,QAAAA,SAAS,EAAE;AAAZ,OAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,MAAD;AACI,MAAA,OAAO,EAAC,WADZ;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,KAAK,EAAC,SAHV;AAII,oBAAW,KAJf;AAKI,MAAA,SAAS,EAAEoE,OAAO,CAAC3E,YALvB;AAMI,MAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQI,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,SADJ,CAJJ,EAgBI,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,WAAD;AACI,MAAA,SAAS,EAAC,UADd;AAEI,MAAA,KAAK,EAAE;AAACuG,QAAAA,KAAK,EAAE;AAAR,OAFX;AAGI,MAAA,QAAQ,MAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKI,MAAC,UAAD;AACI,oBAAW,YADf;AAEI,MAAA,GAAG,MAFP;AAGI,MAAA,IAAI,EAAC,aAHT;AAII,MAAA,KAAK,EAAEF,IAAI,CAACjB,SAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMI,MAAC,gBAAD;AACI,MAAA,KAAK,EAAE,MADX;AAEI,MAAA,OAAO,EAAE,MAAC,KAAD;AAAO,QAAA,KAAK,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFb;AAGI,MAAA,KAAK,EAAC,YAHV;AAII,MAAA,cAAc,EAAC,OAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,EAYI,MAAC,gBAAD;AACI,MAAA,KAAK,EAAE,QADX;AAEI,MAAA,OAAO,EAAE,MAAC,KAAD;AAAO,QAAA,KAAK,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFb;AAGI,MAAA,KAAK,EAAC,eAHV;AAII,MAAA,cAAc,EAAC,OAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZJ,EAkBI,MAAC,gBAAD;AACI,MAAA,KAAK,EAAE,OADX;AAEI,MAAA,OAAO,EAAE,MAAC,KAAD;AAAO,QAAA,KAAK,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFb;AAGI,MAAA,KAAK,EAAC,cAHV;AAII,MAAA,cAAc,EAAC,OAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBJ,CALJ,CADJ,CAhBJ,CANgC,EAyD5BiB,IAAI,CAAC3C,KAAL,CAAWqC,GAAX,CAAe,CAACM,IAAD,EAAOpB,CAAP,KAAa;AAAA;;AACxB,aACI,MAAC,IAAD;AAAM,QAAA,SAAS,EAAE,IAAjB;AACM,QAAA,OAAO,EAAE,YADf;AAEM,QAAA,GAAG,EAAEA,CAFX;AAGM,QAAA,KAAK,EAAE;AAAC1E,UAAAA,SAAS,EAAE,CAAZ;AAAeN,UAAAA,UAAU,EAAE;AAA3B,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKI,MAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,WAAD;AAAa,QAAA,QAAQ,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,UAAD;AAAY,QAAA,OAAO,EAAC,mBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI,MAAC,MAAD;AACI,QAAA,MAAM,MADV;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,OAAO,EAAE,UAHb;AAII,QAAA,KAAK,EAAE6D,WAAW,CAACV,UAAU,GAAG,CAAd,CAAX,CAA4BM,KAA5B,CAAkCuB,CAAlC,EAAqCuB,IAJhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMI;AAAQ,QAAA,KAAK,EAAE;AAAEnG,UAAAA,OAAO,EAAE;AAAX,SAAf;AAAoC,QAAA,KAAK,EAAC,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,EAOI;AAAQ,QAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAPJ,EAQI;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBARJ,EASI;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ,EAUI;AAAQ,QAAA,KAAK,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAVJ,EAWI;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAXJ,EAYI;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAZJ,CAFJ,CADJ,CALJ,EAwBI,MAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQ,CAACyD,WAAW,CAACV,UAAU,GAAG,CAAd,CAAX,CAA4BM,KAA5B,CAAkCuB,CAAlC,EAAqCuB,IAArC,KAA8C,aAA9C,IACG1C,WAAW,CAACV,UAAU,GAAG,CAAd,CAAX,CAA4BM,KAA5B,CAAkCuB,CAAlC,EAAqCuB,IAArC,KAA8C,MADjD,IAEG1C,WAAW,CAACV,UAAU,GAAG,CAAd,CAAX,CAA4BM,KAA5B,CAAkCuB,CAAlC,EAAqCuB,IAArC,KAA8C,QAFlD,KAGA,MAAC,IAAD;AAAM,QAAA,SAAS,EAAE,IAAjB;AACM,QAAA,OAAO,EAAE,YADf;AAEM,QAAA,OAAO,EAAE,CAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAII,MAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,SAAD;AACI,QAAA,KAAK,EAAE,OADX;AAEI,QAAA,OAAO,EAAC,UAFZ;AAGI,QAAA,SAAS,MAHb;AAII,QAAA,KAAK,EAAEH,IAAI,CAACR,KAJhB;AAKI,QAAA,QAAQ,EAAGY,CAAD,IAAO;AACb,gBAAMzB,kBAAkB,GAAG,CAAC,GAAGZ,oBAAJ,CAA3B;AACAY,UAAAA,kBAAkB,CAACiB,KAAD,CAAlB,CAA0BvC,KAA1B,CAAgCuB,CAAhC,EAAmCY,KAAnC,GAA2CY,CAAC,CAACb,MAAF,CAASC,KAApD;AACAxB,UAAAA,uBAAuB,CAACW,kBAAD,CAAvB;AACH,SATL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAJJ,EAiBI,MAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,SAAD;AACI,QAAA,KAAK,EAAE,MADX;AAEI,QAAA,OAAO,EAAC,UAFZ;AAGI,QAAA,SAAS,MAHb;AAII,QAAA,KAAK,EAAElB,WAAW,CAACV,UAAU,GAAG,CAAd,CAAX,CAA4BM,KAA5B,CAAkCuC,KAAlC,EAAyCJ,KAAzC,CAA+CA,KAJ1D;AAKI,QAAA,QAAQ,MALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAjBJ,CALR,EAkCQ,iBAAA/B,WAAW,CAACV,UAAU,GAAG,CAAd,CAAX,sFAA6BM,KAA7B,CAAmCuB,CAAnC,+EAAuCuB,IAAvC,MAAgD,OAAhD,IACA,MAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,QAAzB;AAAmC,QAAA,OAAO,EAAE,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,SAAD;AACI,QAAA,KAAK,EAAE,MADX;AAEI,QAAA,OAAO,EAAC,UAFZ;AAGI,QAAA,SAAS,MAHb;AAII,QAAA,KAAK,mBAAE1C,WAAW,CAACV,UAAU,GAAG,CAAd,CAAb,2EAAE,cAA6BM,KAA7B,CAAmCuC,KAAnC,CAAF,oFAAE,sBAA2CJ,KAA7C,2DAAE,uBAAkDa,IAJ7D;AAKI,QAAA,QAAQ,MALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAUI,MAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,KAAD;AAAO,QAAA,KAAK,EAAE;AAAClE,UAAAA,MAAM,EAAG,aAAYrD,MAAM,CAAC0C,SAAU;AAAvC,SAAd;AAAyD,QAAA,SAAS,EAAE8C,OAAO,CAACgC,aAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,aAAD;AACI,QAAA,MAAM,EAAE,gCADZ;AAEI,QAAA,YAAY,MAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIK,CAAC;AAAEC,QAAAA,YAAF;AAAgBC,QAAAA;AAAhB,OAAD;AAAA;;AAAA,eACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,0BAASD,YAAY,EAArB;AAAyB,UAAA,KAAK,EAAE;AAAE5F,YAAAA,KAAK,EAAE,MAAT;AAAiBP,YAAAA,MAAM,EAAE;AAAzB,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACI,4BAAWoG,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,EAGQ,iBAAA/C,WAAW,CAACV,UAAU,GAAG,CAAd,CAAX,iFAA6BM,KAA7B,CAAmCuC,KAAnC,yEAA2CJ,KAA3C,CAAiDiB,KAAjD,GAAyD;AACrD,UAAA,KAAK,EAAE;AACHC,YAAAA,eAAe,EAAG,OACdrC,gBAAgB,CAACsC,UAAjB,qBAA8BlD,WAAW,CAACV,UAAU,GAAG,CAAd,CAAzC,2EAA8B,cAA6BM,KAA7B,CAAmCuC,KAAnC,CAA9B,0DAA8B,sBAA2CJ,KAA3C,CAAiDiB,KAA/E,CACH;AAHE,WAD8C;AAMrD,UAAA,SAAS,EAAEnC,OAAO,CAAC1D,YANkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAzD,GAOU,MAAC,eAAD;AAAiB,UAAA,SAAS,EAAE0D,OAAO,CAAC7D,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAVlB,CADJ,CADH;AAAA,OAJL,CADJ,CADJ,CAVJ,CAnCR,EA0EQ,CAACgD,WAAW,CAACV,UAAU,GAAG,CAAd,CAAX,CAA4BM,KAA5B,CAAkCuB,CAAlC,EAAqCuB,IAArC,KAA8C,WAA9C,IACG1C,WAAW,CAACV,UAAU,GAAG,CAAd,CAAX,CAA4BM,KAA5B,CAAkCuB,CAAlC,EAAqCuB,IAArC,KAA8C,SADlD,KAEA,MAAC,IAAD;AAAM,QAAA,SAAS,EAAE,IAAjB;AACM,QAAA,OAAO,EAAE,YADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGI,MAAC,SAAD;AACI,QAAA,KAAK,EAAE,OADX;AAEI,QAAA,OAAO,EAAC,UAFZ;AAGI,QAAA,SAAS,MAHb;AAII,QAAA,KAAK,EAAEH,IAAI,CAACR,KAJhB;AAKI,QAAA,QAAQ,EAAGY,CAAD,IAAO;AACb,gBAAMzB,kBAAkB,GAAG,CAAC,GAAGZ,oBAAJ,CAA3B;AACAY,UAAAA,kBAAkB,CAACiB,KAAD,CAAlB,CAA0BvC,KAA1B,CAAgCuB,CAAhC,EAAmCY,KAAnC,GAA2CY,CAAC,CAACb,MAAF,CAASC,KAApD;AACAxB,UAAAA,uBAAuB,CAACW,kBAAD,CAAvB;AACH,SATL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CA5ER,EA6FQlB,WAAW,CAACV,UAAU,GAAG,CAAd,CAAX,CAA4BM,KAA5B,CAAkCuB,CAAlC,EAAqCuB,IAArC,KAA8C,SAA9C,IACA,MAAC,KAAD;AAAO,QAAA,KAAK,EAAE;AAAChE,UAAAA,MAAM,EAAG,aAAYrD,MAAM,CAAC0C,SAAU,EAAvC;AACVpB,UAAAA,MAAM,EAAE,GADE;AAEV6F,UAAAA,QAAQ,EAAE;AAFA,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAII,MAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,MAAD;AACI,QAAA,OAAO,EAAC,WADZ;AAEI,QAAA,IAAI,EAAC,OAFT;AAGI,QAAA,KAAK,EAAC,SAHV;AAII,sBAAW,KAJf;AAKI,QAAA,SAAS,EAAE3B,OAAO,CAAC3E,YALvB;AAMI,QAAA,KAAK,EAAE;AAACO,UAAAA,SAAS,EAAE;AAAZ,SANX;AAOI,QAAA,QAAQ,MAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASI,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATJ,SADJ,CAJJ,EAkBQuD,WAAW,CAACV,UAAU,GAAG,CAAd,CAAX,CAA4BM,KAA5B,CAAkCuB,CAAlC,EAAqCY,KAArC,CAA2ClC,MAA3C,GAAoD,CAApD,IACAG,WAAW,CAACV,UAAU,GAAG,CAAd,CAAX,CAA4BM,KAA5B,CAAkCuB,CAAlC,EAAqCY,KAArC,CAA2CE,GAA3C,CAA+C,CAACF,KAAD,EAAQoB,QAAR,KAAqB;AAChE,eACI,MAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAC1G,YAAAA,SAAS,EAAE,CAAZ;AAAe2G,YAAAA,YAAY,EAAE;AAA7B,WAAb;AACM,UAAA,GAAG,EAAED,QADX;AAEM,UAAA,SAAS,EAAE,IAFjB;AAGM,UAAA,OAAO,EAAE,YAHf;AAIM,UAAA,OAAO,EAAE,CAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAMI,MAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,MAAC,SAAD;AACI,UAAA,QAAQ,MADZ;AAEI,UAAA,KAAK,EAAE,OAFX;AAGI,UAAA,OAAO,EAAC,UAHZ;AAII,UAAA,SAAS,MAJb;AAKI,UAAA,KAAK,EAAEpB,KAAK,CAACsB,KALjB;AAMI,UAAA,KAAK,EAAE;AAAClH,YAAAA,UAAU,EAAE;AAAb,WANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CANJ,EAgBI,MAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,MAAC,SAAD;AACI,UAAA,KAAK,EAAE,MADX;AAEI,UAAA,OAAO,EAAC,UAFZ;AAGI,UAAA,SAAS,MAHb;AAII,UAAA,KAAK,EAAE4F,KAAK,CAACA,KAJjB;AAKI,UAAA,QAAQ,MALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CAhBJ,EAyBI,MAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,MAAC,UAAD;AACI,wBAAW,aADf;AAEI,UAAA,KAAK,EAAC,SAFV;AAGI,UAAA,QAAQ,MAHZ;AAII,UAAA,SAAS,EAAElB,OAAO,CAAChE,YAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAMI,MAAC,UAAD;AAAY,UAAA,KAAK,EAAE;AAACc,YAAAA,KAAK,EAAE;AAAR,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANJ,CADJ,CAzBJ,CADJ;AAsCH,OAvCD,CAnBR,CA9FR,CAxBJ,EAqLI,MAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,UAAD;AACI,sBAAW,aADf;AAEI,QAAA,KAAK,EAAC,SAFV;AAGI,QAAA,QAAQ,MAHZ;AAII,QAAA,SAAS,EAAEkD,OAAO,CAAChE,YAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMI,MAAC,UAAD;AAAY,QAAA,KAAK,EAAE;AAACc,UAAAA,KAAK,EAAE;AAAR,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,CADJ,CArLJ,CADJ;AAkMH,KAnMD,CAzD4B,CAA7B,GA8PQ,IA9Pf;AA+PH,GAhQD,CAxER,EA2UQ2B,UAAU,GAAG,CAAb,IAAkBF,KAAK,CAAC6B,QAAN,KAAmB7B,KAAK,CAACsC,WAA3C,IAA0D1B,WAAW,CAACH,MAAZ,GAAqB,CAA/E,IAAoFG,WAAW,CAACiC,GAAZ,CAAgB,CAACqB,UAAD,EAAanB,KAAb,KAAuB;AACvH,WAAQ7C,UAAU,GAAG,CAAb,KAAmB6C,KAApB,GAA6B,MAAC,SAAD;AAAY,MAAA,GAAG,EAAEA,KAAjB;AAAwB,MAAA,KAAK,EAAE;AAC/DxF,QAAAA,MAAM,EAAE,GADuD;AAE/D6F,QAAAA,QAAQ,EAAE,MAFqD;AAG/D1F,QAAAA,aAAa,EAAEoD,MAAM,GAAG,MAAH,GAAY,EAH8B;AAI/DnD,QAAAA,OAAO,EAAEmD,MAAM,GAAG,GAAH,GAAS;AAJuC,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMhC,MAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AACM,MAAA,OAAO,EAAC,YADd;AAEM,MAAA,KAAK,EAAE;AAACzD,QAAAA,SAAS,EAAE;AAAZ,OAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,MAAD;AACI,MAAA,OAAO,EAAE,MAAM;AACX,cAAMyE,kBAAkB,GAAG,CAAC,GAAGlB,WAAJ,CAA3B;AACAkB,QAAAA,kBAAkB,CAACiB,KAAD,CAAlB,CAA0BvC,KAA1B,CAAgCwB,IAAhC,CAAqC;AACjCC,UAAAA,EAAE,EAAG,QAAOiC,UAAU,CAAC1D,KAAX,CAAiBC,MAAjB,GAA0B,CAAE,EADP;AAEjC6C,UAAAA,IAAI,EAAE,WAF2B;AAGjCX,UAAAA,KAAK,EAAE;AAH0B,SAArC;AAKA9B,QAAAA,cAAc,CAACiB,kBAAD,CAAd;AACH,OATL;AAUI,MAAA,OAAO,EAAC,WAVZ;AAWI,MAAA,IAAI,EAAC,OAXT;AAYI,MAAA,KAAK,EAAC,SAZV;AAaI,oBAAW,KAbf;AAcI,MAAA,SAAS,EAAEL,OAAO,CAAC3E,YAdvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAgBI,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBJ,SADJ,CAJJ,EAwBI,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,WAAD;AACI,MAAA,SAAS,EAAC,UADd;AAEI,MAAA,KAAK,EAAE;AAACuG,QAAAA,KAAK,EAAE;AAAR,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII,MAAC,UAAD;AACY,oBAAW,YADvB;AAEY,MAAA,GAAG,MAFf;AAGY,MAAA,IAAI,EAAC,aAHjB;AAIY,MAAA,KAAK,EAAEa,UAAU,CAAChC,SAJ9B;AAKY,MAAA,QAAQ,EAAGqB,CAAD,IAAO;AACb,cAAMzB,kBAAkB,GAAG,CAAC,GAAGlB,WAAJ,CAA3B;AACAkB,QAAAA,kBAAkB,CAACiB,KAAD,CAAlB,CAA0Bb,SAA1B,GAAsCqB,CAAC,CAACb,MAAF,CAASC,KAA/C;AACA9B,QAAAA,cAAc,CAACiB,kBAAD,CAAd;AACH,OATb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAWI,MAAC,gBAAD;AACI,MAAA,KAAK,EAAE,MADX;AAEI,MAAA,OAAO,EAAE,MAAC,KAAD;AAAO,QAAA,KAAK,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFb;AAGI,MAAA,KAAK,EAAC,YAHV;AAII,MAAA,cAAc,EAAC,OAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXJ,EAiBI,MAAC,gBAAD;AACI,MAAA,KAAK,EAAE,QADX;AAEI,MAAA,OAAO,EAAE,MAAC,KAAD;AAAO,QAAA,KAAK,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFb;AAGI,MAAA,KAAK,EAAC,eAHV;AAII,MAAA,cAAc,EAAC,OAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBJ,EAuBI,MAAC,gBAAD;AACI,MAAA,KAAK,EAAE,OADX;AAEI,MAAA,OAAO,EAAE,MAAC,KAAD;AAAO,QAAA,KAAK,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFb;AAGI,MAAA,KAAK,EAAC,cAHV;AAII,MAAA,cAAc,EAAC,OAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBJ,CAJJ,CADJ,CAxBJ,CANgC,EAqE5BoC,UAAU,CAAC1D,KAAX,CAAiBqC,GAAjB,CAAqB,CAACM,IAAD,EAAOpB,CAAP,KAAa;AAAA;;AAC9B,aACI,MAAC,IAAD;AAAM,QAAA,SAAS,EAAE,IAAjB;AACM,QAAA,OAAO,EAAE,YADf;AAEM,QAAA,GAAG,EAAEA,CAFX;AAGM,QAAA,KAAK,EAAE;AAAC1E,UAAAA,SAAS,EAAE,CAAZ;AAAeN,UAAAA,UAAU,EAAE;AAA3B,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKI,MAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,UAAD;AAAY,QAAA,OAAO,EAAC,mBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI,MAAC,MAAD;AACI,QAAA,MAAM,MADV;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,OAAO,EAAE,UAHb;AAII,QAAA,KAAK,EAAEoG,IAAI,CAACG,IAJhB;AAKI,QAAA,QAAQ,EAAGC,CAAD,IAAO;AACb,gBAAMzB,kBAAkB,GAAG,CAAC,GAAGlB,WAAJ,CAA3B;;AACA,cAAI2C,CAAC,CAACb,MAAF,CAASC,KAAT,KAAmB,aAAnB,IACAY,CAAC,CAACb,MAAF,CAASC,KAAT,KAAmB,MADnB,IAEAY,CAAC,CAACb,MAAF,CAASC,KAAT,KAAmB,QAFvB,EAEiC;AAC7Bb,YAAAA,kBAAkB,CAACiB,KAAD,CAAlB,CAA0BvC,KAA1B,CAAgCuB,CAAhC,IAAqC;AACjCE,cAAAA,EAAE,EAAEkB,IAAI,CAAClB,EADwB;AAEjCqB,cAAAA,IAAI,EAAEC,CAAC,CAACb,MAAF,CAASC,KAFkB;AAGjCA,cAAAA,KAAK,EAAE;AACHsB,gBAAAA,KAAK,EAAE,EADJ;AAEHtB,gBAAAA,KAAK,EAAE;AAFJ;AAH0B,aAArC;AAQH;;AACD,cAAIY,CAAC,CAACb,MAAF,CAASC,KAAT,KAAmB,WAAnB,IACAY,CAAC,CAACb,MAAF,CAASC,KAAT,KAAmB,SADvB,EACkC;AAC9Bb,YAAAA,kBAAkB,CAACiB,KAAD,CAAlB,CAA0BvC,KAA1B,CAAgCuB,CAAhC,IAAqC;AACjCE,cAAAA,EAAE,EAAEkB,IAAI,CAAClB,EADwB;AAEjCqB,cAAAA,IAAI,EAAEC,CAAC,CAACb,MAAF,CAASC,KAFkB;AAGjCA,cAAAA,KAAK,EAAE;AAH0B,aAArC;AAKH;;AACD,cAAIY,CAAC,CAACb,MAAF,CAASC,KAAT,KAAmB,SAAvB,EAAkC;AAC9Bb,YAAAA,kBAAkB,CAACiB,KAAD,CAAlB,CAA0BvC,KAA1B,CAAgCuB,CAAhC,IAAqC;AACjCE,cAAAA,EAAE,EAAEkB,IAAI,CAAClB,EADwB;AAEjCqB,cAAAA,IAAI,EAAEC,CAAC,CAACb,MAAF,CAASC,KAFkB;AAGjCA,cAAAA,KAAK,EAAE,CAAC;AACJsB,gBAAAA,KAAK,EAAE,EADH;AAEJtB,gBAAAA,KAAK,EAAE;AAFH,eAAD;AAH0B,aAArC;AAQH;;AACD,cAAIY,CAAC,CAACb,MAAF,CAASC,KAAT,KAAmB,OAAvB,EAAgC;AAC5Bb,YAAAA,kBAAkB,CAACiB,KAAD,CAAlB,CAA0BvC,KAA1B,CAAgCuB,CAAhC,IAAqC;AACjCE,cAAAA,EAAE,EAAEkB,IAAI,CAAClB,EADwB;AAEjCqB,cAAAA,IAAI,EAAEC,CAAC,CAACb,MAAF,CAASC,KAFkB;AAGjCA,cAAAA,KAAK,EAAE;AACHa,gBAAAA,IAAI,EAAE,EADH;AAEHI,gBAAAA,KAAK,EAAEpC,gBAAgB,CAACsC,UAAjB,IAA8B9D,KAA9B,aAA8BA,KAA9B,uBAA8BA,KAAK,CAAEmE,YAArC;AAFJ;AAH0B,aAArC;AAQH;;AACDtD,UAAAA,cAAc,CAACiB,kBAAD,CAAd;AACH,SAhDL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAkDI;AAAQ,QAAA,KAAK,EAAE;AAAE3E,UAAAA,OAAO,EAAE;AAAX,SAAf;AAAoC,QAAA,KAAK,EAAC,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlDJ,EAmDI;AAAQ,QAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAnDJ,EAoDI;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBApDJ,EAqDI;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBArDJ,EAsDI;AAAQ,QAAA,KAAK,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAtDJ,EAuDI;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAvDJ,EAwDI;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAxDJ,CAFJ,CADJ,CALJ,EAoEI,MAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQ,CAACgG,IAAI,CAACG,IAAL,KAAc,aAAd,IAA+BH,IAAI,CAACG,IAAL,KAAc,MAA7C,IACGH,IAAI,CAACG,IAAL,KAAc,QADlB,KAC+B,MAAC,IAAD;AAAM,QAAA,SAAS,EAAE,IAAjB;AACM,QAAA,OAAO,EAAE,YADf;AAEM,QAAA,OAAO,EAAE,CAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAI3B,MAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,SAAD;AACI,QAAA,KAAK,EAAE,OADX;AAEI,QAAA,OAAO,EAAC,UAFZ;AAGI,QAAA,SAAS,MAHb;AAII,QAAA,KAAK,EAAEH,IAAI,CAACR,KAAL,CAAWsB,KAJtB;AAKI,QAAA,QAAQ,EAAGV,CAAD,IAAO;AACb,gBAAMzB,kBAAkB,GAAG,CAAC,GAAGlB,WAAJ,CAA3B;AACAkB,UAAAA,kBAAkB,CAACiB,KAAD,CAAlB,CAA0BvC,KAA1B,CAAgCuB,CAAhC,EAAmCY,KAAnC,CAAyC,OAAzC,IAAoDY,CAAC,CAACb,MAAF,CAASC,KAA7D;AACA9B,UAAAA,cAAc,CAACiB,kBAAD,CAAd;AACH,SATL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAJ2B,EAiB3B,MAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,SAAD;AACI,QAAA,KAAK,EAAE,MADX;AAEI,QAAA,OAAO,EAAC,UAFZ;AAGI,QAAA,SAAS,MAHb;AAII,QAAA,KAAK,EAAEqB,IAAI,CAACR,KAAL,CAAWA,KAJtB;AAKI,QAAA,KAAK,EAAG,CAACvG,SAAS,CAACgI,KAAV,CAAgBjB,IAAI,CAACR,KAAL,CAAWA,KAA3B,CAAD,IAAsCQ,IAAI,CAACR,KAAL,CAAWA,KAAlD,GAA2D,IAA3D,GAAkE,KAL7E;AAMI,QAAA,QAAQ,EAAGY,CAAD,IAAO;AACb,gBAAMzB,kBAAkB,GAAG,CAAC,GAAGlB,WAAJ,CAA3B;AACAkB,UAAAA,kBAAkB,CAACiB,KAAD,CAAlB,CAA0BvC,KAA1B,CAAgCuB,CAAhC,EAAmCY,KAAnC,CAAyC,OAAzC,IAAoDY,CAAC,CAACb,MAAF,CAASC,KAA7D;AACA9B,UAAAA,cAAc,CAACiB,kBAAD,CAAd;AACH,SAVL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAjB2B,CAHvC,EAqCQ,CAAAqB,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEG,IAAN,MAAe,OAAf,IACA,MAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,QAAzB;AAAmC,QAAA,OAAO,EAAE,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,SAAD;AACI,QAAA,KAAK,EAAE,MADX;AAEI,QAAA,OAAO,EAAC,UAFZ;AAGI,QAAA,SAAS,MAHb;AAII,QAAA,KAAK,EAAEH,IAAF,aAAEA,IAAF,sCAAEA,IAAI,CAAER,KAAR,gDAAE,YAAaa,IAJxB;AAKI,QAAA,KAAK,EAAG,CAACpH,SAAS,CAACgI,KAAV,CAAgBjB,IAAhB,aAAgBA,IAAhB,uCAAgBA,IAAI,CAAER,KAAtB,iDAAgB,aAAaa,IAA7B,CAAD,IAAuCL,IAAvC,aAAuCA,IAAvC,+BAAuCA,IAAI,CAAER,KAA7C,yCAAuC,aAAaa,IAArD,GAA6D,IAA7D,GAAoE,KAL/E;AAMI,QAAA,QAAQ,EAAGD,CAAD,IAAO;AACb,gBAAMzB,kBAAkB,GAAG,CAAC,GAAGlB,WAAJ,CAA3B;AACAkB,UAAAA,kBAAkB,CAACiB,KAAD,CAAlB,CAA0BvC,KAA1B,CAAgCuB,CAAhC,EAAmCY,KAAnC,CAAyC,MAAzC,IAAmDY,CAAC,CAACb,MAAF,CAASC,KAA5D;AACA9B,UAAAA,cAAc,CAACiB,kBAAD,CAAd;AACH,SAVL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAeI,MAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,KAAD;AAAO,QAAA,KAAK,EAAE;AAACxC,UAAAA,MAAM,EAAG,aAAYrD,MAAM,CAAC0C,SAAU,EAAvC;AAA0C0F,UAAAA,aAAa,EAAE;AAAzD,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,KAAK,EAAE;AAACvG,UAAAA,KAAK,EAAE,MAAR;AAAgBP,UAAAA,MAAM,EAAE;AAAxB,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,KAAK,EAAE;AAACsG,UAAAA,eAAe,EAAG,OAAMrC,gBAAgB,CAACsC,UAAjB,IAA8B9D,KAA9B,aAA8BA,KAA9B,uBAA8BA,KAAK,CAAEmE,YAArC,CAAkD;AAA3E,SAAZ;AAA6F,QAAA,SAAS,EAAE1C,OAAO,CAAC1D,YAAhH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CADJ,CAfJ,CAtCR,EA+DQ,CAACoF,IAAI,CAACG,IAAL,KAAc,WAAd,IAA6BH,IAAI,CAACG,IAAL,KAAc,SAA5C,KAA0D,MAAC,IAAD;AAAM,QAAA,SAAS,EAAE,IAAjB;AACM,QAAA,OAAO,EAAE,YADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGtD,MAAC,SAAD;AACI,QAAA,KAAK,EAAE,OADX;AAEI,QAAA,OAAO,EAAC,UAFZ;AAGI,QAAA,SAAS,MAHb;AAII,QAAA,KAAK,EAAEH,IAAI,CAACR,KAJhB;AAKI,QAAA,QAAQ,EAAGY,CAAD,IAAO;AACb,gBAAMzB,kBAAkB,GAAG,CAAC,GAAGlB,WAAJ,CAA3B;AACAkB,UAAAA,kBAAkB,CAACiB,KAAD,CAAlB,CAA0BvC,KAA1B,CAAgCuB,CAAhC,EAAmCY,KAAnC,GAA2CY,CAAC,CAACb,MAAF,CAASC,KAApD;AACA9B,UAAAA,cAAc,CAACiB,kBAAD,CAAd;AACH,SATL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHsD,CA/DlE,EAgFQqB,IAAI,CAACG,IAAL,KAAc,SAAd,IAA2B,MAAC,KAAD;AAAO,QAAA,KAAK,EAAE;AAAChE,UAAAA,MAAM,EAAG,aAAYrD,MAAM,CAAC0C,SAAU,EAAvC;AACrCpB,UAAAA,MAAM,EAAE,GAD6B;AAErC6F,UAAAA,QAAQ,EAAE;AAF2B,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIvB,MAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,MAAD;AACI,QAAA,OAAO,EAAE,MAAM;AACX,gBAAMtB,kBAAkB,GAAG,CAAC,GAAGlB,WAAJ,CAA3B;AACAkB,UAAAA,kBAAkB,CAACiB,KAAD,CAAlB,CAA0BvC,KAA1B,CAAgCuB,CAAhC,EAAmCY,KAAnC,CAAyCX,IAAzC,CAA8C;AAC1CiC,YAAAA,KAAK,EAAE,EADmC;AAE1CtB,YAAAA,KAAK,EAAE;AAFmC,WAA9C;AAIA9B,UAAAA,cAAc,CAACiB,kBAAD,CAAd;AACH,SARL;AASI,QAAA,OAAO,EAAC,WATZ;AAUI,QAAA,IAAI,EAAC,OAVT;AAWI,QAAA,KAAK,EAAC,SAXV;AAYI,sBAAW,KAZf;AAaI,QAAA,SAAS,EAAEL,OAAO,CAAC3E,YAbvB;AAcI,QAAA,KAAK,EAAE;AAACO,UAAAA,SAAS,EAAE;AAAZ,SAdX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAgBI,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBJ,SADJ,CAJuB,EAyBnB8F,IAAI,CAACR,KAAL,CAAWlC,MAAX,GAAoB,CAApB,IACA0C,IAAI,CAACR,KAAL,CAAWE,GAAX,CAAe,CAACF,KAAD,EAAQoB,QAAR,KAAqB;AAChC,eACI,MAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAC1G,YAAAA,SAAS,EAAE,CAAZ;AAAe2G,YAAAA,YAAY,EAAE;AAA7B,WAAb;AACM,UAAA,GAAG,EAAED,QADX;AAEM,UAAA,SAAS,EAAE,IAFjB;AAGM,UAAA,OAAO,EAAE,YAHf;AAIM,UAAA,OAAO,EAAE,CAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAMI,MAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,MAAC,SAAD;AACI,UAAA,QAAQ,EAAGR,CAAD,IAAO;AACb,kBAAMzB,kBAAkB,GAAG,CAAC,GAAGlB,WAAJ,CAA3B;AACAkB,YAAAA,kBAAkB,CAACiB,KAAD,CAAlB,CAA0BvC,KAA1B,CAAgCuB,CAAhC,EAAmCY,KAAnC,CAAyCoB,QAAzC,EAAmDE,KAAnD,GAA2DV,CAAC,CAACb,MAAF,CAASC,KAApE;AACA9B,YAAAA,cAAc,CAACiB,kBAAD,CAAd;AACH,WALL;AAMI,UAAA,KAAK,EAAE,OANX;AAOI,UAAA,OAAO,EAAC,UAPZ;AAQI,UAAA,SAAS,MARb;AASI,UAAA,KAAK,EAAEa,KAAK,CAACsB,KATjB;AAUI,UAAA,KAAK,EAAE;AAAClH,YAAAA,UAAU,EAAE;AAAb,WAVX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CANJ,EAoBI,MAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,MAAC,SAAD;AACI,UAAA,KAAK,EAAE,MADX;AAEI,UAAA,OAAO,EAAC,UAFZ;AAGI,UAAA,SAAS,MAHb;AAII,UAAA,KAAK,EAAE4F,KAAK,CAACA,KAJjB;AAKI,UAAA,KAAK,EAAG,CAACvG,SAAS,CAACgI,KAAV,CAAgBzB,KAAK,CAACA,KAAtB,CAAD,IAAiCA,KAAK,CAACA,KAAxC,GAAiD,IAAjD,GAAwD,KALnE;AAMI,UAAA,QAAQ,EAAGY,CAAD,IAAO;AACb,kBAAMzB,kBAAkB,GAAG,CAAC,GAAGlB,WAAJ,CAA3B;AACAkB,YAAAA,kBAAkB,CAACiB,KAAD,CAAlB,CAA0BvC,KAA1B,CAAgCuB,CAAhC,EAAmCY,KAAnC,CAAyCoB,QAAzC,EAAmDpB,KAAnD,GAA2DY,CAAC,CAACb,MAAF,CAASC,KAApE;AACA9B,YAAAA,cAAc,CAACiB,kBAAD,CAAd;AACH,WAVL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CApBJ,EAkCI,MAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,MAAC,UAAD;AACI,wBAAW,aADf;AAEI,UAAA,KAAK,EAAC,SAFV;AAGI,UAAA,OAAO,EAAE,MAAM;AACX,kBAAMA,kBAAkB,GAAG,CAAC,GAAGlB,WAAJ,CAA3B;AACAkB,YAAAA,kBAAkB,CAACiB,KAAD,CAAlB,CAA0BvC,KAA1B,CAAgCuB,CAAhC,EAAmCY,KAAnC,CAAyC2B,MAAzC,CACIP,QADJ,EACc,CADd;AAEAlD,YAAAA,cAAc,CAACiB,kBAAD,CAAd;AACH,WARL;AASI,UAAA,QAAQ,EAAEqB,IAAI,CAACR,KAAL,CAAWlC,MAAX,KAAsB,CATpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAWI,MAAC,UAAD;AAAY,UAAA,KAAK,EAAE;AAAClC,YAAAA,KAAK,EAAE4E,IAAI,CAACR,KAAL,CAAWlC,MAAX,KAAsB,CAAtB,GAA0B,KAC7C,MADmB,GACV;AADE,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAXJ,CADJ,CAlCJ,CADJ;AAqDH,OAtDD,CA1BmB,CAhFnC,CApEJ,EAyOI,MAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,UAAD;AACI,sBAAW,aADf;AAEI,QAAA,KAAK,EAAC,SAFV;AAGI,QAAA,OAAO,EAAE,MAAM;AACX,gBAAMqB,kBAAkB,GAAG,CAAC,GAAGlB,WAAJ,CAA3B;AACAkB,UAAAA,kBAAkB,CAACiB,KAAD,CAAlB,CAA0BvC,KAA1B,CAAgC8D,MAAhC,CAAuCvC,CAAvC,EAA0C,CAA1C;AACAlB,UAAAA,cAAc,CAACiB,kBAAD,CAAd;AACH,SAPL;AAQI,QAAA,QAAQ,EAAEoC,UAAU,CAAC1D,KAAX,CAAiBC,MAAjB,KAA4B,CAR1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAUI,MAAC,UAAD;AAAY,QAAA,KAAK,EAAE;AAAClC,UAAAA,KAAK,EAAE2F,UAAU,CAAC1D,KAAX,CAAiBC,MAAjB,KAA4B,CAA5B,GAAgC,MAAhC,GAAyC;AAAjD,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVJ,CADJ,CAzOJ,CADJ;AA0PH,KA3PD,CArE4B,CAA7B,GAkUQ,IAlUf;AAmUH,GApUmF,CA3U5F,EAipBI,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AACM,IAAA,SAAS,EAAC,KADhB;AAEM,IAAA,OAAO,EAAC,YAFd;AAGM,IAAA,UAAU,EAAC,YAHjB;AAIM,IAAA,KAAK,EAAE;AAAC/C,MAAAA,aAAa,EAAEoD,MAAM,GAAG,MAAH,GAAY,EAAlC;AAAsCnD,MAAAA,OAAO,EAAEmD,MAAM,GAAG,GAAH,GAAS;AAA9D,KAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMI;AAAK,IAAA,SAAS,EAAEW,OAAO,CAACvE,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKgD,UAAU,KAAK,CAAf,IACG,MAAC,MAAD;AACI,IAAA,OAAO,EAAEiC,UADb;AAEI,IAAA,OAAO,EAAC,WAFZ;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,kBAAW,KAJf;AAKI,IAAA,SAAS,EAAEV,OAAO,CAAC3E,YALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFR,EAYI,MAAC,MAAD;AACI,IAAA,OAAO,EAAEuF,UADb;AAEI,IAAA,OAAO,EAAC,WAFZ;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,KAAK,EAAC,SAJV;AAKI,kBAAW,KALf;AAMI,IAAA,SAAS,EAAEZ,OAAO,CAAC3E,YANvB;AAOI,IAAA,QAAQ,EAAEkE,aAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASKd,UAAU,KAAKQ,KAAK,CAACD,MAAN,GAAe,CAA9B,IAAmCP,UAAU,KAAK,CAAlD,GAAsD,MAAtD,GAA+D,MATpE,CAZJ,CANJ,CAjpBJ,CADJ;AAmrBH,CA3xBD;;AA6xBA,MAAMqE,eAAe,GAAGvE,KAAK,IAAI;AAC7B,SAAO;AACHA,IAAAA,KAAK,EAAEA,KAAK,CAACwE,WAAN,CAAkBC;AADtB,GAAP;AAGH,CAJD;;AAMA,eAAejK,OAAO,CAClB+J,eADkB,CAAP,CAEbzE,eAFa,CAAf","sourcesContent":["import React, {useState, useEffect, useContext} from 'react';\n//redux imports\nimport { connect } from 'react-redux';\n//material ui imports\nimport Stepper from '@material-ui/core/Stepper'\nimport Step from '@material-ui/core/Step'\nimport StepLabel from '@material-ui/core/StepLabel'\nimport StepConnector from '@material-ui/core/StepConnector';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport ReceiptIcon from '@material-ui/icons/Receipt';\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from '@material-ui/core/TextField';\nimport Divider from \"@material-ui/core/Divider\";\nimport Typography from \"@material-ui/core/Typography\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Container from \"@material-ui/core/Container\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport CreateIcon from '@material-ui/icons/Create';\nimport { withStyles } from '@material-ui/core/styles'\n//constants\nimport {COLORS, UPLOAD_SUCCESS} from \"../../../constants\";\n\nimport clsx from \"clsx\";\nimport validator from 'validator';\nimport ReactDropzone from \"react-dropzone\";\nimport {Upload} from \"@webcms/orest\";\nimport {toast} from \"react-toastify\";\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\nimport WebCmsGlobal from \"../../../../../webcms-global\";\nimport {useRouter} from \"next/router\";\nimport InputColor from \"react-input-color\";\n\nconst useStyle = makeStyles(theme => ({\n    actionButton: {\n        marginLeft: theme.spacing(1),\n        borderRadius: 20,\n    },\n    actionButtons: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        marginTop: theme.spacing(2),\n    },\n    itemCountField: {\n        marginLeft: theme.spacing(1),\n        '& input': {\n            height: 8\n        }\n    },\n    itemCountTxt: {\n        marginLeft: theme.spacing(1),\n        marginTop: theme.spacing(2),\n    },\n    disableEvent: {\n        pointerEvents: \"none\",\n        opacity: 0.5\n    },\n    icon: {\n        cursor: 'pointer',\n        width: '100%',\n        height: '100%',\n        opacity: 0.3,\n    },\n    imagePreview: {\n        backgroundSize: 'contain',\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: \"center\",\n        height: 200,\n        width: '100%',\n        cursor: 'pointer',\n    }\n}));\n\nconst useColorStepIconStyle = makeStyles(() => ({\n    root: {\n        backgroundColor: '#ccc',\n        zIndex: 1,\n        color: '#fff',\n        width: 50,\n        height: 50,\n        display: 'flex',\n        borderRadius: '50%',\n        justifyContent: 'center',\n        alignItems: 'center',\n        '& img': {\n            width: 35,\n        },\n    },\n    iconSize: {\n        height: 30,\n        width: 30,\n    },\n    active: {\n        backgroundColor: COLORS.secondary,\n        boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)',\n    },\n    completed: {\n        backgroundColor: COLORS.primary,\n        color: '#fff',\n    },\n}))\n\nconst ColorlibConnector = withStyles({\n    alternativeLabel: {\n        top: 30,\n        left: 'calc(-50% + 10px)',\n        right: 'calc(50% + 10px)',\n    },\n    active: {\n        '& $line': {\n            background: 'transparent linear-gradient(270deg, #269DD4 0%, #0F4571 100%) 0% 0% no-repeat padding-box',\n        },\n    },\n    completed: {\n        '& $line': {\n            backgroundColor: COLORS.primary,\n        },\n    },\n    line: {\n        height: 4,\n        border: 0,\n        backgroundColor: '#eaeaf0',\n        borderRadius: 1,\n    },\n})(StepConnector)\n\nfunction getStepsIcons(itemCount, isActive, isCompleted, step) {\n    const icon_classes = useColorStepIconStyle()\n    let icons = {}\n    switch (itemCount) {\n        case 1:\n            icons = {\n                0: <ReceiptIcon className={icon_classes.iconSize} />,\n                1: <CreateIcon className={icon_classes.iconSize} />,\n            }\n            break\n        case 2:\n            icons = {\n                0: <ReceiptIcon className={icon_classes.iconSize} />,\n                1: <CreateIcon className={icon_classes.iconSize} />,\n                2: <CreateIcon className={icon_classes.iconSize} />,\n            }\n            break\n        case 3:\n            icons = {\n                0: <ReceiptIcon className={icon_classes.iconSize} />,\n                1: <CreateIcon className={icon_classes.iconSize} />,\n                2: <CreateIcon className={icon_classes.iconSize} />,\n                3: <CreateIcon className={icon_classes.iconSize} />,\n            }\n            break\n        case 4:\n            icons = {\n                0: <ReceiptIcon className={icon_classes.iconSize} />,\n                1: <CreateIcon className={icon_classes.iconSize} />,\n                2: <CreateIcon className={icon_classes.iconSize} />,\n                3: <CreateIcon className={icon_classes.iconSize} />,\n                4: <CreateIcon className={icon_classes.iconSize} />,\n            }\n            break\n        case 5:\n            icons = {\n                0: <ReceiptIcon className={icon_classes.iconSize} />,\n                1: <CreateIcon className={icon_classes.iconSize} />,\n                2: <CreateIcon className={icon_classes.iconSize} />,\n                3: <CreateIcon className={icon_classes.iconSize} />,\n                4: <CreateIcon className={icon_classes.iconSize} />,\n                5: <CreateIcon className={icon_classes.iconSize} />,\n            }\n            break;\n        default:\n            icons = {\n                0: <ReceiptIcon className={icon_classes.iconSize} />,\n                1: <CreateIcon className={icon_classes.iconSize} />,\n                2: <CreateIcon className={icon_classes.iconSize} />,\n                3: <CreateIcon className={icon_classes.iconSize} />,\n                4: <CreateIcon className={icon_classes.iconSize} />,\n                5: <CreateIcon className={icon_classes.iconSize} />,\n            }\n            break\n    }\n\n    return (\n        <div\n            className={clsx(icon_classes.root, {\n                [icon_classes.active]: isActive,\n                [icon_classes.completed]: isCompleted,\n            })}\n        >\n            {icons[step]}\n        </div>\n    )\n}\n\nconst EditEmailFooter = (props) => {\n\n    const {\n        state,\n        onEditFooter\n    } = props;\n\n    const [activeStep, setActiveStep] = useState(0);\n    const [itemsCount, setItemsCount] = useState(state.email.footer.items.length);\n    const [steps, setSteps] = useState([]);\n    const [footerItems, setFooterItems] = useState(state.email.footer.items);\n    const [isSave, setIsSave] = useState(false);\n    const [isNextDisable, setIsNextDisable] = useState(false);\n    const [otherLangFooterItems, setOtherLangFooterItems] = useState([]);\n    const [bgColor, setBgColor] = useState(state?.email?.footer?.backgroundColor);\n    const [textColor, setTextColor] = useState(state?.email?.footer?.textColor);\n\n    const { GENERAL_SETTINGS } = useContext(WebCmsGlobal);\n\n    const classes = useStyle();\n\n    useEffect(() => {\n        //set footer items for other languages\n        if (Object.keys(state.langsFile).length > 0 &&\n            state.langsFile.footer &&\n            state.langsFile.footer[state.langCode]) {\n            setOtherLangFooterItems([...state.langsFile.footer[state.langCode].items]);\n        }\n    }, []);\n\n    useEffect(() => {\n        switch (itemsCount) {\n            case 1:\n                setSteps(['No Of Items', 'Item 1']);\n                break;\n            case 2:\n                setSteps(['No Of Items', 'Item 1', 'Item 2']);\n                break;\n            case 3:\n                setSteps(['No Of Items', 'Item 1', 'Item 2', 'Item 3']);\n                break;\n            case 4:\n                setSteps(['No Of Items', 'Item 1', 'Item 2', 'Item 3', 'Item 4']);\n                break;\n            case 5:\n                setSteps(['No Of Items', 'Item 1', 'Item 2', 'Item 3', 'Item 4', 'Item 5']);\n                break;\n            default:\n                setSteps(['No Of Items', 'Item 1', 'Item 2', 'Item 3', 'Item 4', 'Item 5'])\n        }\n\n        if (itemsCount < footerItems.length) {\n            const updatedFooterItems = [...footerItems];\n            updatedFooterItems.length = itemsCount;\n            setFooterItems(updatedFooterItems);\n        }\n        if (itemsCount > footerItems.length) {\n            for (let i = 0; i < itemsCount; i++) {\n                if (!footerItems[i]) {\n                    footerItems.push({\n                        id: `item-${footerItems.length + 1}`,\n                        alignment: 'flex-start',\n                        items: []\n                    })\n                }\n            }\n        }\n\n    }, [itemsCount]);\n\n    const handleBack = () => {\n        setActiveStep(previousStep => previousStep - 1);\n    };\n\n    const handleNext = () => {\n        if (activeStep === steps.length - 1) {\n            setIsSave(true);\n            if (state.langCode === state.defaultLang) {\n                onEditFooter({\n                    tpl: state.email.footer.tpl,\n                    backgroundColor: bgColor,\n                    textColor: textColor,\n                    items: footerItems\n                })\n            } else {\n                onEditFooter({\n                    items: otherLangFooterItems\n                })\n            }\n        } else {\n            setActiveStep(previousStep => previousStep + 1);\n        }\n    }\n\n    const handleItemCountChange = (event) => {\n        if (!event.target.value) {\n            setItemsCount(1);\n        } else {\n            if (Number(event.target.value) > 5) setIsNextDisable(true);\n            else setIsNextDisable(false);\n            setItemsCount(Number(event.target.value));\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <Stepper activeStep={activeStep} alternativeLabel connector={<ColorlibConnector />}>\n                {steps.map((label, index) => {\n                    return (\n                        <Step key={`step-${index}`}>\n                            <StepLabel\n                                color=\"secondary\"\n                                StepIconComponent={() =>\n                                    getStepsIcons(itemsCount,\n                                        activeStep === index, activeStep > index,\n                                                index\n                                    )\n                                }\n                            >\n                                {label}\n                            </StepLabel>\n                        </Step>\n                    )\n                })}\n            </Stepper>\n            <Divider />\n            {\n                activeStep === 0 &&\n                <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\n                    <Grid item xs={3} style={{marginTop: 8}}>\n                        <Typography component={'span'} className={classes.itemCountTxt}>\n                            Item Count :\n                        </Typography>\n                        <TextField\n                            id=\"item-count\"\n                            variant=\"outlined\"\n                            inputProps={{ min: \"1\", max: \"5\", step: \"1\" }}\n                            type=\"number\"\n                            className={classes.itemCountField}\n                            onChange={handleItemCountChange}\n                            value={itemsCount}\n                            error={itemsCount > 5}\n                            disabled={state.langCode !== state.defaultLang}\n                            size={'small'}\n                        />\n                    </Grid>\n                    <Grid item xs={2} style={{marginTop: 8}}>\n                        <Typography component={'span'} className={classes.itemCountTxt}>\n                            Background :\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={2}>\n                        <InputColor\n                            onChange={(color) => setBgColor(color.hex)}\n                            placement=\"right\"\n                            initialValue={bgColor}\n                            style={{width: 100, marginTop: 8}}\n                        />\n                    </Grid>\n                    <Grid item xs={1} style={{marginTop: 8}}>\n                        <Typography component={'span'} className={classes.itemCountTxt}>\n                            Text :\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={2}>\n                        <InputColor\n                            onChange={(color) => setTextColor(color.hex)}\n                            placement=\"right\"\n                            initialValue={textColor}\n                            style={{width: 100, marginTop: 8}}\n                        />\n                    </Grid>\n                </Grid>\n            }\n            {\n                activeStep > 0 && state.langCode !== state.defaultLang &&\n                otherLangFooterItems.length > 0 &&\n                otherLangFooterItems.map((item, index) => {\n                    return (activeStep - 1 === index) ? <Container key={index} style={{\n                        height: 350,\n                        overflow: \"auto\",\n                        pointerEvents: isSave ? \"none\" : \"\",\n                        opacity: isSave ? 0.5 : 1\n                    }}>\n                        <Grid container\n                              justify=\"flex-start\"\n                              style={{marginTop: 8}}\n                        >\n                            <Grid item xs={4}>\n                                <Button\n                                    variant=\"contained\"\n                                    size=\"small\"\n                                    color=\"primary\"\n                                    aria-label=\"add\"\n                                    className={classes.actionButton}\n                                    disabled\n                                >\n                                    <AddCircleIcon /> ADD\n                                </Button>\n                            </Grid>\n                            <Grid item xs={8}>\n                                <FormControl\n                                    component=\"fieldset\"\n                                    style={{float: \"right\"}}\n                                    disabled\n                                >\n                                    <RadioGroup\n                                        aria-label=\"footeritem\"\n                                        row\n                                        name=\"footer-item\"\n                                        value={item.alignment}\n                                    >\n                                        <FormControlLabel\n                                            value={'left'}\n                                            control={<Radio color=\"primary\"/>}\n                                            label=\"Align Left\"\n                                            labelPlacement=\"start\"\n                                        />\n                                        <FormControlLabel\n                                            value={'center'}\n                                            control={<Radio color=\"primary\"/>}\n                                            label=\"Alight Center\"\n                                            labelPlacement=\"start\"\n                                        />\n                                        <FormControlLabel\n                                            value={'right'}\n                                            control={<Radio color=\"primary\"/>}\n                                            label=\"Alight Right\"\n                                            labelPlacement=\"start\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </Grid>\n                        </Grid>\n                        {\n                            item.items.map((item, i) => {\n                                return (\n                                    <Grid container={true}\n                                          justify={'flex-start'}\n                                          key={i}\n                                          style={{marginTop: 8, marginLeft: 40}}\n                                    >\n                                        <Grid item xs={2}>\n                                            <FormControl disabled>\n                                                <InputLabel htmlFor=\"age-native-simple\">Sub Item</InputLabel>\n                                                <Select\n                                                    native\n                                                    name='type'\n                                                    variant={'outlined'}\n                                                    value={footerItems[activeStep - 1].items[i].type}\n                                                >\n                                                    <option style={{ display: 'none' }} value=''></option>\n                                                    <option value='paragraph'>Paragraph</option>\n                                                    <option value='heading'>Heading</option>\n                                                    <option value='link'>Link</option>\n                                                    <option value='social-link'>Social Link</option>\n                                                    <option value='address'>Address</option>\n                                                    <option value='image'>Image</option>\n                                                </Select>\n                                            </FormControl>\n                                        </Grid>\n                                        <Grid item xs={8}>\n                                            {\n                                                (footerItems[activeStep - 1].items[i].type === 'social-link' ||\n                                                    footerItems[activeStep - 1].items[i].type === 'link' ||\n                                                    footerItems[activeStep - 1].items[i].type === 'button') &&\n                                                <Grid container={true}\n                                                      justify={'flex-start'}\n                                                      spacing={3}\n                                                >\n                                                    <Grid item xs={6}>\n                                                        <TextField\n                                                            label={'Title'}\n                                                            variant=\"outlined\"\n                                                            fullWidth\n                                                            value={item.value}\n                                                            onChange={(e) => {\n                                                                const updatedFooterItems = [...otherLangFooterItems];\n                                                                updatedFooterItems[index].items[i].value = e.target.value;\n                                                                setOtherLangFooterItems(updatedFooterItems);\n                                                            }}\n                                                        />\n                                                    </Grid>\n                                                    <Grid item xs={6}>\n                                                        <TextField\n                                                            label={'Link'}\n                                                            variant=\"outlined\"\n                                                            fullWidth\n                                                            value={footerItems[activeStep - 1].items[index].value.value}\n                                                            disabled\n                                                        />\n                                                    </Grid>\n                                                </Grid>\n                                            }\n                                            {\n                                                footerItems[activeStep - 1]?.items[i]?.type === 'image' &&\n                                                <Grid container justify={'center'} spacing={1}>\n                                                    <Grid item xs={6}>\n                                                        <TextField\n                                                            label={'Link'}\n                                                            variant=\"outlined\"\n                                                            fullWidth\n                                                            value={footerItems[activeStep - 1]?.items[index]?.value?.link}\n                                                            disabled\n                                                        />\n                                                    </Grid>\n                                                    <Grid item xs={6}>\n                                                        <Paper style={{border: `2px solid ${COLORS.secondary}`}} className={classes.disabledEvent}>\n                                                            <ReactDropzone\n                                                                accept={'image/png,image/jpg,image/jpeg'}\n                                                                acceptedFile\n                                                            >\n                                                                {({ getRootProps, getInputProps }) => (\n                                                                    <section>\n                                                                        <div {...getRootProps()} style={{ width: '100%', height: 200 }}>\n                                                                            <input {...getInputProps()} />\n                                                                            {\n                                                                                footerItems[activeStep - 1]?.items[index]?.value.image ? <div\n                                                                                    style={{\n                                                                                        backgroundImage: `url(${\n                                                                                            GENERAL_SETTINGS.STATIC_URL + footerItems[activeStep - 1]?.items[index]?.value.image\n                                                                                        })`,\n                                                                                    }}\n                                                                                    className={classes.imagePreview}\n                                                                                ></div> : <CloudUploadIcon className={classes.icon} />\n                                                                            }\n                                                                        </div>\n                                                                    </section>\n                                                                )}\n                                                            </ReactDropzone>\n                                                        </Paper>\n                                                    </Grid>\n                                                </Grid>\n                                            }\n                                            {\n                                                (footerItems[activeStep - 1].items[i].type === 'paragraph' ||\n                                                    footerItems[activeStep - 1].items[i].type === 'heading') &&\n                                                <Grid container={true}\n                                                      justify={'flex-start'}\n                                                >\n                                                    <TextField\n                                                        label={'Value'}\n                                                        variant=\"outlined\"\n                                                        fullWidth\n                                                        value={item.value}\n                                                        onChange={(e) => {\n                                                            const updatedFooterItems = [...otherLangFooterItems];\n                                                            updatedFooterItems[index].items[i].value = e.target.value;\n                                                            setOtherLangFooterItems(updatedFooterItems);\n                                                        }}\n                                                    />\n                                                </Grid>\n                                            }\n                                            {\n                                                footerItems[activeStep - 1].items[i].type === 'address' &&\n                                                <Paper style={{border: `2px solid ${COLORS.secondary}`,\n                                                    height: 220,\n                                                    overflow: \"auto\"\n                                                }}>\n                                                    <Grid container justify={'flex-start'}>\n                                                        <Button\n                                                            variant=\"contained\"\n                                                            size=\"small\"\n                                                            color=\"primary\"\n                                                            aria-label=\"add\"\n                                                            className={classes.actionButton}\n                                                            style={{marginTop: 8}}\n                                                            disabled\n                                                        >\n                                                            <AddCircleIcon /> ADD\n                                                        </Button>\n                                                    </Grid>\n                                                    {\n                                                        footerItems[activeStep - 1].items[i].value.length > 0 &&\n                                                        footerItems[activeStep - 1].items[i].value.map((value, addIndex) => {\n                                                            return (\n                                                                <Grid style={{marginTop: 8, marginBottom: 8}}\n                                                                      key={addIndex}\n                                                                      container={true}\n                                                                      justify={'flex-start'}\n                                                                      spacing={3}\n                                                                >\n                                                                    <Grid item xs={5}>\n                                                                        <TextField\n                                                                            disabled\n                                                                            label={'Title'}\n                                                                            variant=\"outlined\"\n                                                                            fullWidth\n                                                                            value={value.title}\n                                                                            style={{marginLeft: 8}}\n                                                                        />\n                                                                    </Grid>\n                                                                    <Grid item xs={5}>\n                                                                        <TextField\n                                                                            label={'Link'}\n                                                                            variant=\"outlined\"\n                                                                            fullWidth\n                                                                            value={value.value}\n                                                                            disabled\n                                                                        />\n                                                                    </Grid>\n                                                                    <Grid item xs={2}>\n                                                                        <IconButton\n                                                                            aria-label=\"Delete item\"\n                                                                            color=\"primary\"\n                                                                            disabled\n                                                                            className={classes.disableEvent}\n                                                                        >\n                                                                            <CancelIcon style={{color: 'grey'}} />\n                                                                        </IconButton>\n                                                                    </Grid>\n                                                                </Grid>\n                                                            )\n                                                        })\n                                                    }\n                                                </Paper>\n                                            }\n                                        </Grid>\n                                        <Grid item xs={2}>\n                                            <IconButton\n                                                aria-label=\"Delete item\"\n                                                color=\"primary\"\n                                                disabled\n                                                className={classes.disableEvent}\n                                            >\n                                                <CancelIcon style={{color: 'grey'}} />\n                                            </IconButton>\n                                        </Grid>\n                                    </Grid>\n                                )\n                            })\n                        }\n                    </Container> : null\n                })\n            }\n            {\n                activeStep > 0 && state.langCode === state.defaultLang && footerItems.length > 0 && footerItems.map((footerItem, index) => {\n                    return (activeStep - 1 === index) ? <Container  key={index} style={{\n                        height: 350,\n                        overflow: \"auto\",\n                        pointerEvents: isSave ? \"none\" : \"\",\n                        opacity: isSave ? 0.5 : 1\n                    }}>\n                        <Grid container\n                              justify=\"flex-start\"\n                              style={{marginTop: 8}}\n                        >\n                            <Grid item xs={4}>\n                                <Button\n                                    onClick={() => {\n                                        const updatedFooterItems = [...footerItems];\n                                        updatedFooterItems[index].items.push({\n                                            id: `item-${footerItem.items.length - 1}`,\n                                            type: 'paragraph',\n                                            value: '',\n                                        });\n                                        setFooterItems(updatedFooterItems);\n                                    }}\n                                    variant=\"contained\"\n                                    size=\"small\"\n                                    color=\"primary\"\n                                    aria-label=\"add\"\n                                    className={classes.actionButton}\n                                >\n                                    <AddCircleIcon /> ADD\n                                </Button>\n                            </Grid>\n                            <Grid item xs={8}>\n                                <FormControl\n                                    component=\"fieldset\"\n                                    style={{float: \"right\"}}\n                                >\n                                    <RadioGroup\n                                                aria-label=\"footeritem\"\n                                                row\n                                                name=\"footer-item\"\n                                                value={footerItem.alignment}\n                                                onChange={(e) => {\n                                                    const updatedFooterItems = [...footerItems];\n                                                    updatedFooterItems[index].alignment = e.target.value;\n                                                    setFooterItems(updatedFooterItems);\n                                                }}\n                                    >\n                                        <FormControlLabel\n                                            value={'left'}\n                                            control={<Radio color=\"primary\"/>}\n                                            label=\"Align Left\"\n                                            labelPlacement=\"start\"\n                                        />\n                                        <FormControlLabel\n                                            value={'center'}\n                                            control={<Radio color=\"primary\"/>}\n                                            label=\"Alight Center\"\n                                            labelPlacement=\"start\"\n                                        />\n                                        <FormControlLabel\n                                            value={'right'}\n                                            control={<Radio color=\"primary\"/>}\n                                            label=\"Alight Right\"\n                                            labelPlacement=\"start\"\n                                        />\n                                    </RadioGroup>\n                                </FormControl>\n                            </Grid>\n                        </Grid>\n                        {\n                            footerItem.items.map((item, i) => {\n                                return (\n                                    <Grid container={true}\n                                          justify={'flex-start'}\n                                          key={i}\n                                          style={{marginTop: 8, marginLeft: 40}}\n                                    >\n                                        <Grid item xs={2}>\n                                            <FormControl >\n                                                <InputLabel htmlFor=\"age-native-simple\">Sub Item</InputLabel>\n                                                <Select\n                                                    native\n                                                    name='type'\n                                                    variant={'outlined'}\n                                                    value={item.type}\n                                                    onChange={(e) => {\n                                                        const updatedFooterItems = [...footerItems];\n                                                        if (e.target.value === 'social-link' ||\n                                                            e.target.value === 'link' ||\n                                                            e.target.value === 'button') {\n                                                            updatedFooterItems[index].items[i] = {\n                                                                id: item.id,\n                                                                type: e.target.value,\n                                                                value: {\n                                                                    title: '',\n                                                                    value: ''\n                                                                }\n                                                            }\n                                                        }\n                                                        if (e.target.value === 'paragraph' ||\n                                                            e.target.value === 'heading') {\n                                                            updatedFooterItems[index].items[i] = {\n                                                                id: item.id,\n                                                                type: e.target.value,\n                                                                value: ''\n                                                            }\n                                                        }\n                                                        if (e.target.value === 'address') {\n                                                            updatedFooterItems[index].items[i] = {\n                                                                id: item.id,\n                                                                type: e.target.value,\n                                                                value: [{\n                                                                    title: '',\n                                                                    value: ''\n                                                                }]\n                                                            }\n                                                        }\n                                                        if (e.target.value === 'image') {\n                                                            updatedFooterItems[index].items[i] = {\n                                                                id: item.id,\n                                                                type: e.target.value,\n                                                                value: {\n                                                                    link: '',\n                                                                    image: GENERAL_SETTINGS.STATIC_URL + state?.poweredByUrl\n                                                                }\n                                                            }\n                                                        }\n                                                        setFooterItems(updatedFooterItems);\n                                                    }}\n                                                >\n                                                    <option style={{ display: 'none' }} value=''></option>\n                                                    <option value='paragraph'>Paragraph</option>\n                                                    <option value='heading'>Heading</option>\n                                                    <option value='link'>Link</option>\n                                                    <option value='social-link'>Social Link</option>\n                                                    <option value='address'>Address</option>\n                                                    <option value='image'>Image</option>\n                                                </Select>\n                                            </FormControl>\n                                        </Grid>\n                                        <Grid item xs={8}>\n                                            {\n                                                (item.type === 'social-link' || item.type === 'link' ||\n                                                    item.type === 'button') && <Grid container={true}\n                                                                                     justify={'flex-start'}\n                                                                                     spacing={3}\n                                                >\n                                                    <Grid item xs={6}>\n                                                        <TextField\n                                                            label={'Title'}\n                                                            variant=\"outlined\"\n                                                            fullWidth\n                                                            value={item.value.title}\n                                                            onChange={(e) => {\n                                                                const updatedFooterItems = [...footerItems];\n                                                                updatedFooterItems[index].items[i].value['title'] = e.target.value;\n                                                                setFooterItems(updatedFooterItems);\n                                                            }}\n                                                        />\n                                                    </Grid>\n                                                    <Grid item xs={6}>\n                                                        <TextField\n                                                            label={'Link'}\n                                                            variant=\"outlined\"\n                                                            fullWidth\n                                                            value={item.value.value}\n                                                            error={(!validator.isURL(item.value.value) && item.value.value) ? true : false}\n                                                            onChange={(e) => {\n                                                                const updatedFooterItems = [...footerItems];\n                                                                updatedFooterItems[index].items[i].value['value'] = e.target.value;\n                                                                setFooterItems(updatedFooterItems);\n                                                            }}\n                                                        />\n                                                    </Grid>\n                                                </Grid>\n                                            }\n                                            {\n                                                item?.type === 'image' &&\n                                                <Grid container justify={'center'} spacing={1} >\n                                                    <Grid item xs={6}>\n                                                        <TextField\n                                                            label={'Link'}\n                                                            variant=\"outlined\"\n                                                            fullWidth\n                                                            value={item?.value?.link}\n                                                            error={(!validator.isURL(item?.value?.link) && item?.value?.link) ? true : false}\n                                                            onChange={(e) => {\n                                                                const updatedFooterItems = [...footerItems];\n                                                                updatedFooterItems[index].items[i].value['link'] = e.target.value;\n                                                                setFooterItems(updatedFooterItems);\n                                                            }}\n                                                        />\n                                                    </Grid>\n                                                    <Grid item xs={6}>\n                                                        <Paper style={{border: `2px solid ${COLORS.secondary}`, pointersEvent: 'none'}}>\n                                                            <div style={{width: '100%', height: 200}}>\n                                                                <div style={{backgroundImage: `url(${GENERAL_SETTINGS.STATIC_URL + state?.poweredByUrl})`,}} className={classes.imagePreview}></div>\n                                                            </div>\n                                                        </Paper>\n                                                    </Grid>\n                                                </Grid>\n                                            }\n                                            {\n                                                (item.type === 'paragraph' || item.type === 'heading') && <Grid container={true}\n                                                                                                                justify={'flex-start'}\n                                                >\n                                                    <TextField\n                                                        label={'Value'}\n                                                        variant=\"outlined\"\n                                                        fullWidth\n                                                        value={item.value}\n                                                        onChange={(e) => {\n                                                            const updatedFooterItems = [...footerItems];\n                                                            updatedFooterItems[index].items[i].value = e.target.value;\n                                                            setFooterItems(updatedFooterItems);\n                                                        }}\n                                                    />\n                                                </Grid>\n                                            }\n                                            {\n                                                item.type === 'address' && <Paper style={{border: `2px solid ${COLORS.secondary}`,\n                                                    height: 220,\n                                                    overflow: \"auto\"\n                                                }}>\n                                                    <Grid container justify={'flex-start'}>\n                                                        <Button\n                                                            onClick={() => {\n                                                                const updatedFooterItems = [...footerItems];\n                                                                updatedFooterItems[index].items[i].value.push({\n                                                                    title: '',\n                                                                    value: '',\n                                                                });\n                                                                setFooterItems(updatedFooterItems);\n                                                            }}\n                                                            variant=\"contained\"\n                                                            size=\"small\"\n                                                            color=\"primary\"\n                                                            aria-label=\"add\"\n                                                            className={classes.actionButton}\n                                                            style={{marginTop: 8}}\n                                                        >\n                                                            <AddCircleIcon /> ADD\n                                                        </Button>\n                                                    </Grid>\n                                                    {\n                                                        item.value.length > 0 &&\n                                                        item.value.map((value, addIndex) => {\n                                                            return (\n                                                                <Grid style={{marginTop: 8, marginBottom: 8}}\n                                                                      key={addIndex}\n                                                                      container={true}\n                                                                      justify={'flex-start'}\n                                                                      spacing={3}\n                                                                >\n                                                                    <Grid item xs={5}>\n                                                                        <TextField\n                                                                            onChange={(e) => {\n                                                                                const updatedFooterItems = [...footerItems];\n                                                                                updatedFooterItems[index].items[i].value[addIndex].title = e.target.value\n                                                                                setFooterItems(updatedFooterItems);\n                                                                            }}\n                                                                            label={'Title'}\n                                                                            variant=\"outlined\"\n                                                                            fullWidth\n                                                                            value={value.title}\n                                                                            style={{marginLeft: 8}}\n                                                                        />\n                                                                    </Grid>\n                                                                    <Grid item xs={5}>\n                                                                        <TextField\n                                                                            label={'Link'}\n                                                                            variant=\"outlined\"\n                                                                            fullWidth\n                                                                            value={value.value}\n                                                                            error={(!validator.isURL(value.value) && value.value) ? true : false}\n                                                                            onChange={(e) => {\n                                                                                const updatedFooterItems = [...footerItems];\n                                                                                updatedFooterItems[index].items[i].value[addIndex].value = e.target.value\n                                                                                setFooterItems(updatedFooterItems);\n                                                                            }}\n                                                                        />\n                                                                    </Grid>\n                                                                    <Grid item xs={2}>\n                                                                        <IconButton\n                                                                            aria-label=\"Delete item\"\n                                                                            color=\"primary\"\n                                                                            onClick={() => {\n                                                                                const updatedFooterItems = [...footerItems];\n                                                                                updatedFooterItems[index].items[i].value.splice(\n                                                                                    addIndex, 1)\n                                                                                setFooterItems(updatedFooterItems);\n                                                                            }}\n                                                                            disabled={item.value.length === 1}\n                                                                        >\n                                                                            <CancelIcon style={{color: item.value.length === 1 ? '' +\n                                                                                    'grey' : 'red'}} />\n                                                                        </IconButton>\n                                                                    </Grid>\n                                                                </Grid>\n                                                            )\n                                                        })\n                                                    }\n                                                </Paper>\n                                            }\n                                        </Grid>\n                                        <Grid item xs={2}>\n                                            <IconButton\n                                                aria-label=\"Delete item\"\n                                                color=\"primary\"\n                                                onClick={() => {\n                                                    const updatedFooterItems = [...footerItems];\n                                                    updatedFooterItems[index].items.splice(i, 1);\n                                                    setFooterItems(updatedFooterItems);\n                                                }}\n                                                disabled={footerItem.items.length === 1}\n                                            >\n                                                <CancelIcon style={{color: footerItem.items.length === 1 ? 'grey' : 'red'}} />\n                                            </IconButton>\n                                        </Grid>\n                                    </Grid>\n                                )\n                            })\n                        }\n                    </Container> : null\n                })\n            }\n            <Grid container\n                  direction=\"row\"\n                  justify=\"flex-start\"\n                  alignItems=\"flex-start\"\n                  style={{pointerEvents: isSave ? \"none\" : \"\", opacity: isSave ? 0.5 : 1}}\n            >\n                <div className={classes.actionButtons}>\n                    {activeStep !== 0 && (\n                        <Button\n                            onClick={handleBack}\n                            variant=\"contained\"\n                            size=\"small\"\n                            aria-label=\"add\"\n                            className={classes.actionButton}\n                        >\n                            BACK\n                        </Button>\n                    )}\n                    <Button\n                        onClick={handleNext}\n                        variant=\"contained\"\n                        size=\"small\"\n                        color=\"primary\"\n                        aria-label=\"add\"\n                        className={classes.actionButton}\n                        disabled={isNextDisable}\n                    >\n                        {activeStep === steps.length - 1 && activeStep !== 0 ? 'SAVE' : 'NEXT'}\n                    </Button>\n                </div>\n            </Grid>\n        </React.Fragment>\n    )\n};\n\nconst mapStateToProps = state => {\n    return {\n        state: state.formReducer.pageBuilder\n    }\n};\n\nexport default connect(\n    mapStateToProps\n)(EditEmailFooter)"]},"metadata":{},"sourceType":"module"}