{"ast":null,"code":"import _extends from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/mata/app-cloudweb/components/emp-portal/tabs/Abilities/index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Insert, UseOrest, ViewList, Patch, Delete } from \"@webcms/orest\";\nimport WebCmsGlobal from \"../../../webcms-global\";\nimport { useSelector } from \"react-redux\";\nimport { isErrorMsg, mobileTelNoFormat, OREST_ENDPOINT } from \"../../../../model/orest/constants\";\nimport { Grid, Typography, Dialog, Checkbox, FormControlLabel, Button, Menu, MenuItem, IconButton } from \"@material-ui/core\";\nimport { useSnackbar } from \"notistack\";\nimport MaterialTableGeneric from \"../../../MaterialTableGeneric\";\nimport { SLASH } from \"../../../../model/globals\";\nimport useTranslation from \"../../../../lib/translations/hooks/useTranslation\";\nimport renderFormElements, { ELEMENT_TYPES } from \"../../../render-form-elements\";\nimport { required } from \"../../../../state/utils/form\";\nimport AddDialogActions from \"../../../AddDialogActions\";\nimport { LocaleContext } from \"../../../../lib/translations/context/LocaleContext\";\nimport LoadingSpinner from \"../../../LoadingSpinner\";\nimport { helper } from \"../../../../@webcms-globals\";\nimport TrackedChangesDialog from \"../../../TrackedChangesDialog\";\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\nimport MaterialTable, { MTableHeader } from \"material-table\";\nimport MaterialTableLocalization from \"../../../MaterialTableLocalization\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport TableColumnText from \"../../../TableColumnText\";\nimport PopupState, { bindMenu, bindTrigger } from \"material-ui-popup-state\";\nimport { CustomToolTip } from \"../../../user-portal/components/CustomToolTip/CustomToolTip\";\nimport CachedIcon from \"@material-ui/icons/Cached\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nvar VARIANT = 'outlined';\n\nfunction Abilities(props) {\n  _s();\n\n  var _abilityData$abilityi,\n      _abilityData$abilityi2,\n      _abilityData$abilityi3,\n      _abilityData$abilityi4,\n      _abilityData$abilityl,\n      _abilityData$abilityl2,\n      _abilityData$abilityl3,\n      _abilityData$abilityl4,\n      _abilityData$descript,\n      _abilityData$descript2,\n      _abilityData$descript3,\n      _abilityData$descript4,\n      _this = this;\n\n  //props\n  var empId = props.empId; //snackbar\n\n  var _useSnackbar = useSnackbar(),\n      enqueueSnackbar = _useSnackbar.enqueueSnackbar; //context\n\n\n  var _useContext = useContext(WebCmsGlobal),\n      GENERAL_SETTINGS = _useContext.GENERAL_SETTINGS;\n\n  var _useContext2 = useContext(LocaleContext),\n      locale = _useContext2.locale;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var tableLocalization = MaterialTableLocalization(); //redux state\n\n  var token = useSelector(function (state) {\n    var _state$orest, _state$orest$currentU, _state$orest$currentU2;\n\n    return (state === null || state === void 0 ? void 0 : (_state$orest = state.orest) === null || _state$orest === void 0 ? void 0 : (_state$orest$currentU = _state$orest.currentUser) === null || _state$orest$currentU === void 0 ? void 0 : (_state$orest$currentU2 = _state$orest$currentU.auth) === null || _state$orest$currentU2 === void 0 ? void 0 : _state$orest$currentU2.access_token) || false;\n  });\n  var hotelRefNo = useSelector(function (state) {\n    var _state$hotelinfo;\n\n    return (state === null || state === void 0 ? void 0 : (_state$hotelinfo = state.hotelinfo) === null || _state$hotelinfo === void 0 ? void 0 : _state$hotelinfo.currentHotelRefNo) || GENERAL_SETTINGS.HOTELREFNO || false;\n  }); //locale state\n\n  var initialState = {\n    abilityid: {\n      value: '',\n      isError: false,\n      required: true,\n      helperText: ''\n    },\n    abilitylevel: {\n      value: '',\n      isError: false,\n      required: false,\n      helperText: ''\n    },\n    description: {\n      value: '',\n      isError: false,\n      required: false,\n      helperText: ''\n    }\n  };\n\n  var _useState = useState(false),\n      isLoadingList = _useState[0],\n      setIsLoadingList = _useState[1];\n\n  var _useState2 = useState(false),\n      allHotels = _useState2[0],\n      setAllHotels = _useState2[1];\n\n  var _useState3 = useState([]),\n      abilityList = _useState3[0],\n      setAbilityList = _useState3[1];\n\n  var _useState4 = useState(false),\n      openAddDialog = _useState4[0],\n      setOpenAddDialog = _useState4[1];\n\n  var _useState5 = useState(null),\n      selectedabilityData = _useState5[0],\n      setSelectedabilityData = _useState5[1];\n\n  var _useState6 = useState(false),\n      selectedGid = _useState6[0],\n      setSelectedGid = _useState6[1];\n\n  var _useState7 = useState(null),\n      getData = _useState7[0],\n      setGetData = _useState7[1];\n\n  var _useState8 = useState(false),\n      openTrackedDialog = _useState8[0],\n      setOpenTrackedDialog = _useState8[1];\n\n  var _useState9 = useState(false),\n      isDef = _useState9[0],\n      setIsDef = _useState9[1];\n\n  var _useState10 = useState(false),\n      isSaving = _useState10[0],\n      setIsSaving = _useState10[1];\n\n  var _useState11 = useState(initialState),\n      abilityData = _useState11[0],\n      setAbilityData = _useState11[1];\n\n  var _useState12 = useState(initialState),\n      abilityDataBase = _useState12[0],\n      setAbilityDataBase = _useState12[1];\n\n  var _useState13 = useState(false),\n      isInitialStateLoad = _useState13[0],\n      setIsInitialStateLoad = _useState13[1];\n\n  var _useState14 = useState(false),\n      isDeleting = _useState14[0],\n      setIsDeleting = _useState14[1];\n\n  var formElements = [{\n    type: ELEMENT_TYPES.autoComplete,\n    id: 'abilityid',\n    name: 'abilityid',\n    value: ((_abilityData$abilityi = abilityData.abilityid) === null || _abilityData$abilityi === void 0 ? void 0 : _abilityData$abilityi.value) || null,\n    disabled: isSaving,\n    label: t('str_abilities'),\n    variant: VARIANT,\n    required: (_abilityData$abilityi2 = abilityData.abilityid) === null || _abilityData$abilityi2 === void 0 ? void 0 : _abilityData$abilityi2.isRequired,\n    error: (_abilityData$abilityi3 = abilityData.abilityid) === null || _abilityData$abilityi3 === void 0 ? void 0 : _abilityData$abilityi3.isError,\n    helperText: (_abilityData$abilityi4 = abilityData.abilityid) === null || _abilityData$abilityi4 === void 0 ? void 0 : _abilityData$abilityi4.helperText,\n    onChange: function onChange(newValue, name) {\n      return handleOnChangeFormElements(newValue, name);\n    },\n    onBlur: function onBlur(e, name) {\n      return handleOnBlurFormElements(e, name);\n    },\n    onLoad: function onLoad(initialValue, name) {\n      var data = _objectSpread({}, abilityData);\n\n      data[name].value = initialValue ? initialValue : null;\n      setAbilityData(data);\n    },\n    endpoint: 'ability/view/list',\n    params: {\n      text: '',\n      limit: 25,\n      field: 'code'\n    },\n    initialId: isInitialStateLoad && (selectedabilityData === null || selectedabilityData === void 0 ? void 0 : selectedabilityData.abilityid) || false,\n    showOptionLabel: 'code',\n    showOption: 'code',\n    searchParam: 'code,description',\n    fullWidth: true,\n    gridProps: {\n      xs: 12,\n      sm: 6\n    }\n  }, {\n    type: ELEMENT_TYPES.textField,\n    id: 'abilitylevel',\n    name: 'abilitylevel',\n    value: (_abilityData$abilityl = abilityData.abilitylevel) === null || _abilityData$abilityl === void 0 ? void 0 : _abilityData$abilityl.value,\n    error: (_abilityData$abilityl2 = abilityData.abilitylevel) === null || _abilityData$abilityl2 === void 0 ? void 0 : _abilityData$abilityl2.isError,\n    required: (_abilityData$abilityl3 = abilityData.abilitylevel) === null || _abilityData$abilityl3 === void 0 ? void 0 : _abilityData$abilityl3.isRequired,\n    disabled: isSaving,\n    label: t('str_level'),\n    helperText: (_abilityData$abilityl4 = abilityData.abilitylevel) === null || _abilityData$abilityl4 === void 0 ? void 0 : _abilityData$abilityl4.helperText,\n    onChange: function onChange(e) {\n      return handleOnChangeFormElements(e);\n    },\n    onBlur: function onBlur(e) {\n      return handleOnBlurFormElements(e);\n    },\n    variant: VARIANT,\n    fullWidth: true,\n    gridProps: {\n      xs: 12,\n      sm: 6\n    }\n  }, {\n    type: ELEMENT_TYPES.textField,\n    id: 'description',\n    name: 'description',\n    value: (_abilityData$descript = abilityData.description) === null || _abilityData$descript === void 0 ? void 0 : _abilityData$descript.value,\n    error: (_abilityData$descript2 = abilityData.description) === null || _abilityData$descript2 === void 0 ? void 0 : _abilityData$descript2.isError,\n    required: (_abilityData$descript3 = abilityData.description) === null || _abilityData$descript3 === void 0 ? void 0 : _abilityData$descript3.isRequired,\n    disabled: isSaving,\n    label: t('str_description'),\n    helperText: (_abilityData$descript4 = abilityData.description) === null || _abilityData$descript4 === void 0 ? void 0 : _abilityData$descript4.helperText,\n    onChange: function onChange(e) {\n      return handleOnChangeFormElements(e);\n    },\n    onBlur: function onBlur(e) {\n      return handleOnBlurFormElements(e);\n    },\n    variant: VARIANT,\n    fullWidth: true,\n    gridProps: {\n      xs: 12,\n      sm: 12\n    }\n  }];\n  var abilityColumns = [{\n    title: __jsx(Button, {\n      style: {\n        padding: 0,\n        maxWidth: 25,\n        minWidth: 25\n      },\n      disabled: true,\n      color: 'primary',\n      variant: 'text',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }, __jsx(MoreVertIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }\n    })),\n    render: function render(props) {\n      return __jsx(TableColumnText, {\n        minWidth: 30,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }\n      }, __jsx(PopupState, {\n        variant: \"popover\",\n        popupId: \"material-table-action-column\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }\n      }, function (popupState) {\n        return __jsx(React.Fragment, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 29\n          }\n        }, __jsx(Button, _extends({\n          style: {\n            padding: 0,\n            maxWidth: 25,\n            minWidth: 25\n          },\n          color: 'primary',\n          variant: 'contained'\n        }, bindTrigger(popupState), {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 33\n          }\n        }), __jsx(MoreVertIcon, {\n          size: 'small',\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 37\n          }\n        })), __jsx(Menu, _extends({\n          anchorOrigin: {\n            vertical: \"bottom\",\n            horizontal: \"left\"\n          },\n          transformOrigin: {\n            vertical: \"top\",\n            horizontal: \"left\"\n          },\n          getContentAnchorEl: null\n        }, bindMenu(popupState), {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 33\n          }\n        }), __jsx(MenuItem, {\n          onClick: function onClick() {\n            setSelectedabilityData(props);\n            setSelectedGid((props === null || props === void 0 ? void 0 : props.gid) || false);\n            handleOpenAddDialog(props);\n            popupState.close();\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 37\n          }\n        }, __jsx(EditOutlinedIcon, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 42\n          }\n        }), __jsx(Typography, {\n          style: {\n            paddingLeft: '8px'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 41\n          }\n        }, t('str_edit'))), __jsx(MenuItem, {\n          onClick: function onClick() {\n            return handleDeleteItem(props.gid);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 37\n          }\n        }, __jsx(DeleteIcon, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 41\n          }\n        }), __jsx(Typography, {\n          style: {\n            paddingLeft: '8px'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 41\n          }\n        }, t('str_delete')))));\n      }));\n    }\n  }, {\n    title: t('str_abilities'),\n    field: 'ability',\n    render: function render(props) {\n      return __jsx(TableColumnText, {\n        minWidth: 150,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 32\n        }\n      }, props === null || props === void 0 ? void 0 : props.ability);\n    }\n  }, {\n    title: t('str_level'),\n    field: 'abilitylevel',\n    render: function render(props) {\n      return __jsx(TableColumnText, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 32\n        }\n      }, props === null || props === void 0 ? void 0 : props.abilitylevel);\n    }\n  }, {\n    title: t('str_description'),\n    field: 'description',\n    render: function render(props) {\n      return __jsx(TableColumnText, {\n        minWidth: 150,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 32\n        }\n      }, props === null || props === void 0 ? void 0 : props.description);\n    }\n  }];\n  useEffect(function () {\n    if (token && empId) {\n      getAbilityList();\n    }\n  }, []);\n  useEffect(function () {\n    var isEffect = true;\n\n    if (isEffect && abilityData && getData) {\n      var newClientInitialState = helper.objectMapper(abilityData, getData, ['abilityid']);\n      setAbilityData(newClientInitialState);\n      setAbilityDataBase(newClientInitialState);\n      setIsInitialStateLoad(true);\n    }\n\n    return function () {\n      isEffect = false;\n    };\n  }, [getData]);\n\n  var handleDeleteItem = function handleDeleteItem(gid) {\n    setIsDeleting(true);\n    Delete({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.EMPABILITY,\n      token: token,\n      gid: gid,\n      params: {\n        hotelrefno: GENERAL_SETTINGS.HOTELREFNO\n      }\n    }).then(function (res) {\n      if (res.status === 200) {\n        getAbilityList();\n      } else {\n        var _error$errorMsg, _error$errorMsg2;\n\n        var error = isErrorMsg(res);\n        enqueueSnackbar(((_error$errorMsg = error.errorMsg) === null || _error$errorMsg === void 0 ? void 0 : _error$errorMsg.length) > 50 ? (_error$errorMsg2 = error.errorMsg) === null || _error$errorMsg2 === void 0 ? void 0 : _error$errorMsg2.substring(0, 50) : error.errorMsg, {\n          variant: 'error'\n        });\n        setIsDeleting(false);\n      }\n    });\n  };\n\n  var getAbilityList = function getAbilityList() {\n    setIsLoadingList(true);\n    ViewList({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.EMPABILITY,\n      token: token,\n      params: {\n        query: \"empid:\".concat(empId),\n        allhotels: allHotels,\n        hotelrefno: hotelRefNo\n      }\n    }).then(function (res) {\n      setIsLoadingList(false);\n\n      if (res.status === 200) {\n        if (res.data.count > 0) {\n          setAbilityList(res.data.data);\n        }\n      } else {\n        var _error$errorMsg3, _error$errorMsg4;\n\n        var error = isErrorMsg(res);\n        enqueueSnackbar(((_error$errorMsg3 = error.errorMsg) === null || _error$errorMsg3 === void 0 ? void 0 : _error$errorMsg3.length) > 50 ? (_error$errorMsg4 = error.errorMsg) === null || _error$errorMsg4 === void 0 ? void 0 : _error$errorMsg4.substring(0, 50) : error.errorMsg, {\n          variant: 'error'\n        });\n      }\n    });\n  };\n\n  var handleGetSelectedability = function handleGetSelectedability(selectedability) {\n    if (selectedability) {\n      setIsDef(true);\n      UseOrest({\n        apiUrl: GENERAL_SETTINGS.OREST_URL,\n        endpoint: OREST_ENDPOINT.EMPABILITY + SLASH + OREST_ENDPOINT.VIEW + SLASH + 'get' + SLASH + selectedability.gid,\n        token: token\n      }).then(function (res) {\n        setIsDef(false);\n\n        if (res.status === 200 && res.data.data) {\n          var data = res.data.data;\n          setGetData(data);\n        }\n      });\n    }\n  };\n\n  var handleDefRecord = function handleDefRecord() {\n    setIsDef(true);\n    UseOrest({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.EMPABILITY + SLASH + OREST_ENDPOINT.DEF,\n      token: token,\n      params: {\n        hotelrefno: hotelRefNo\n      }\n    }).then(function (res) {\n      if (res.status === 200 && res.data.count > 0) {\n        var data = Object.assign({}, res.data.data, abilityData);\n        setAbilityData(data);\n        setAbilityDataBase(data);\n      }\n\n      setIsDef(false);\n    });\n  };\n\n  var handleSave = function handleSave() {\n    var data = _objectSpread({}, abilityData);\n\n    Object.keys(initialState).map(function (key) {\n      data[key] = typeof data[key].value === 'object' ? data[key].value ? data[key].value.id : null : data[key].value;\n    });\n\n    if (empId) {\n      setIsSaving(true);\n\n      if (selectedGid) {\n        Patch({\n          apiUrl: GENERAL_SETTINGS.OREST_URL,\n          endpoint: OREST_ENDPOINT.EMPABILITY,\n          gid: selectedGid,\n          data: data,\n          token: token\n        }).then(function (res) {\n          if (res.status === 200) {\n            enqueueSnackbar(t('str_processCompletedSuccessfully'), {\n              variant: 'success'\n            });\n            setOpenAddDialog(false);\n            getAbilityList();\n            handleReset();\n          } else {\n            var error = isErrorMsg(res);\n            enqueueSnackbar(error.errorMsg, {\n              variant: 'error'\n            });\n          }\n\n          setIsSaving(false);\n        });\n      } else {\n        data.empid = empId;\n        data.hotelrefno = hotelRefNo;\n        Insert({\n          apiUrl: GENERAL_SETTINGS.OREST_URL,\n          endpoint: OREST_ENDPOINT.EMPABILITY,\n          token: token,\n          data: data\n        }).then(function (res) {\n          if (res.status === 200) {\n            enqueueSnackbar(t('str_processCompletedSuccessfully'), {\n              variant: 'success'\n            });\n            setOpenAddDialog(false);\n            getAbilityList();\n            handleReset();\n          } else {\n            var error = isErrorMsg(res);\n            enqueueSnackbar(error.errorMsg, {\n              variant: 'error'\n            });\n          }\n\n          setIsSaving(false);\n        });\n      }\n    }\n  };\n\n  var handleOnChangeFormElements = function handleOnChangeFormElements(event, key, isOnBlur) {\n    var name = key ? key : event.target.name;\n    var value = event !== null && event !== void 0 && event.target ? event.target.value : event;\n\n    if (isOnBlur) {\n      var _abilityData$name, _abilityData$name2;\n\n      setAbilityData(_objectSpread(_objectSpread({}, abilityData), {}, _defineProperty({}, name, _objectSpread(_objectSpread({}, abilityData[name]), {}, {\n        isError: ((_abilityData$name = abilityData[name]) === null || _abilityData$name === void 0 ? void 0 : _abilityData$name.isRequired) && !!required(value),\n        helperText: ((_abilityData$name2 = abilityData[name]) === null || _abilityData$name2 === void 0 ? void 0 : _abilityData$name2.isRequired) && !!required(value) && t('str_mandatory')\n      }))));\n    } else {\n      var _abilityData$name3, _abilityData$name4;\n\n      setAbilityData(_objectSpread(_objectSpread({}, abilityData), {}, _defineProperty({}, name, _objectSpread(_objectSpread({}, abilityData[name]), {}, {\n        value: value,\n        isError: ((_abilityData$name3 = abilityData[name]) === null || _abilityData$name3 === void 0 ? void 0 : _abilityData$name3.isRequired) && !!required(value),\n        helperText: ((_abilityData$name4 = abilityData[name]) === null || _abilityData$name4 === void 0 ? void 0 : _abilityData$name4.isRequired) && !!required(value) && t('str_mandatory')\n      }))));\n    }\n  };\n  /*const handleGetAutoCompleteInitialValue = (initialValue, name) => {\n      if(initialValue) {\n          const data = {\n              value: initialValue,\n              name: name\n          }\n          setInitialValueObject(data)\n      }\n  }*/\n\n\n  var handleOnBlurFormElements = function handleOnBlurFormElements(event, key) {\n    handleOnChangeFormElements(event, key, true);\n  };\n\n  var handleOpenAddDialog = function handleOpenAddDialog() {\n    var selectedability = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    if (selectedability) {\n      handleGetSelectedability(selectedability);\n    } else {\n      handleDefRecord();\n    }\n\n    setOpenAddDialog(true);\n  };\n\n  var handleCloseDialog = function handleCloseDialog() {\n    if (JSON.stringify(abilityData) !== JSON.stringify(abilityDataBase)) {\n      setOpenTrackedDialog(true);\n    } else {\n      setOpenAddDialog(false);\n      handleReset();\n    }\n  };\n\n  var handleReset = function handleReset() {\n    setTimeout(function () {\n      setIsInitialStateLoad(false);\n      setGetData(null);\n      setAbilityData(initialState);\n      setAbilityDataBase(initialState);\n      setSelectedabilityData(null);\n    }, 100);\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 9\n    }\n  }, __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 4,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 21\n    }\n  }, __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 25\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 29\n    }\n  }, __jsx(CustomToolTip, {\n    title: t('str_refresh'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 33\n    }\n  }, __jsx(IconButton, {\n    onClick: function onClick() {\n      return getAbilityList();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 37\n    }\n  }, __jsx(CachedIcon, {\n    style: {\n      color: \"#F16A4B\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 41\n    }\n  })))), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 29\n    }\n  }, __jsx(CustomToolTip, {\n    title: t('str_add'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 33\n    }\n  }, __jsx(IconButton, {\n    onClick: function onClick() {\n      return handleOpenAddDialog(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 37\n    }\n  }, __jsx(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 41\n    }\n  })))))), __jsx(Grid, {\n    item: true,\n    xs: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 21\n    }\n  }), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 21\n    }\n  }, __jsx(MaterialTable, {\n    isLoading: isLoadingList,\n    columns: abilityColumns,\n    data: abilityList,\n    localization: tableLocalization,\n    options: {\n      headerStyle: {\n        cursor: 'default',\n        fontWeight: \"bold\",\n        fontSize: \"12px\",\n        color: \"#A3A6B4\",\n        textTransform: \"uppercase\",\n        backgroundColor: \"#F5F6FA\",\n        whiteSpace: 'nowrap',\n        borderLeft: '1px solid #FFF'\n      },\n      cellStyle: {\n        whiteSpace: 'nowrap',\n        borderLeft: '1px solid rgba(224, 224, 224, 1)',\n        fontSize: '13px'\n      },\n      toolbar: false,\n      selection: false,\n      sorting: false,\n      search: false,\n      actionsColumnIndex: 1,\n      selectionColumnIndex: 1\n    },\n    components: {\n      Header: function Header(props) {\n        var overrideProps = _objectSpread({}, props);\n\n        overrideProps.draggable = false;\n        return __jsx(MTableHeader, _extends({}, overrideProps, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 41\n          }\n        }));\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 25\n    }\n  }))), __jsx(Dialog, {\n    open: openAddDialog,\n    maxWidth: 'sm',\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    style: {\n      padding: 24\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 21\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 25\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 29\n    }\n  }, __jsx(Typography, {\n    style: {\n      fontWeight: '600',\n      fontSize: '18px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 33\n    }\n  }, selectedabilityData ? t('str_editAbility') : t('str_addAbilities'))), isDef ? __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 37\n    }\n  }, __jsx(LoadingSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 41\n    }\n  })) : __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 37\n    }\n  }, formElements.map(function (item, index) {\n    return __jsx(Grid, _extends({\n      key: index,\n      item: true\n    }, item.gridProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 49\n      }\n    }), renderFormElements(item));\n  }), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 41\n    }\n  }, __jsx(AddDialogActions, {\n    disabled: isSaving,\n    loading: isSaving,\n    onCancelClick: handleCloseDialog,\n    onSaveClick: handleSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 45\n    }\n  })))))), __jsx(TrackedChangesDialog, {\n    open: openTrackedDialog,\n    onPressNo: function onPressNo(e) {\n      setOpenTrackedDialog(e);\n    },\n    onPressYes: function onPressYes(e) {\n      setOpenTrackedDialog(e);\n      setOpenAddDialog(false);\n      handleReset();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 17\n    }\n  })));\n}\n\n_s(Abilities, \"RP0rNSUr/AOYsT1E2qDDA0kqjXk=\", false, function () {\n  return [useSnackbar, useTranslation, useSelector, useSelector];\n});\n\n_c = Abilities;\nexport default Abilities;\n\nvar _c;\n\n$RefreshReg$(_c, \"Abilities\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/emp-portal/tabs/Abilities/index.js"],"names":["React","useState","useEffect","useContext","Insert","UseOrest","ViewList","Patch","Delete","WebCmsGlobal","useSelector","isErrorMsg","mobileTelNoFormat","OREST_ENDPOINT","Grid","Typography","Dialog","Checkbox","FormControlLabel","Button","Menu","MenuItem","IconButton","useSnackbar","MaterialTableGeneric","SLASH","useTranslation","renderFormElements","ELEMENT_TYPES","required","AddDialogActions","LocaleContext","LoadingSpinner","helper","TrackedChangesDialog","EditOutlinedIcon","MaterialTable","MTableHeader","MaterialTableLocalization","MoreVertIcon","TableColumnText","PopupState","bindMenu","bindTrigger","CustomToolTip","CachedIcon","AddIcon","DeleteIcon","VARIANT","Abilities","props","empId","enqueueSnackbar","GENERAL_SETTINGS","locale","t","tableLocalization","token","state","orest","currentUser","auth","access_token","hotelRefNo","hotelinfo","currentHotelRefNo","HOTELREFNO","initialState","abilityid","value","isError","helperText","abilitylevel","description","isLoadingList","setIsLoadingList","allHotels","setAllHotels","abilityList","setAbilityList","openAddDialog","setOpenAddDialog","selectedabilityData","setSelectedabilityData","selectedGid","setSelectedGid","getData","setGetData","openTrackedDialog","setOpenTrackedDialog","isDef","setIsDef","isSaving","setIsSaving","abilityData","setAbilityData","abilityDataBase","setAbilityDataBase","isInitialStateLoad","setIsInitialStateLoad","isDeleting","setIsDeleting","formElements","type","autoComplete","id","name","disabled","label","variant","isRequired","error","onChange","newValue","handleOnChangeFormElements","onBlur","e","handleOnBlurFormElements","onLoad","initialValue","data","endpoint","params","text","limit","field","initialId","showOptionLabel","showOption","searchParam","fullWidth","gridProps","xs","sm","textField","abilityColumns","title","padding","maxWidth","minWidth","render","popupState","vertical","horizontal","gid","handleOpenAddDialog","close","paddingLeft","handleDeleteItem","ability","getAbilityList","isEffect","newClientInitialState","objectMapper","apiUrl","OREST_URL","EMPABILITY","hotelrefno","then","res","status","errorMsg","length","substring","query","allhotels","count","handleGetSelectedability","selectedability","VIEW","handleDefRecord","DEF","Object","assign","handleSave","keys","map","key","handleReset","empid","event","isOnBlur","target","handleCloseDialog","JSON","stringify","setTimeout","color","headerStyle","cursor","fontWeight","fontSize","textTransform","backgroundColor","whiteSpace","borderLeft","cellStyle","toolbar","selection","sorting","search","actionsColumnIndex","selectionColumnIndex","Header","overrideProps","draggable","item","index"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext} from 'react';\nimport {Insert, UseOrest, ViewList, Patch, Delete} from \"@webcms/orest\";\nimport WebCmsGlobal from \"../../../webcms-global\";\nimport {useSelector} from \"react-redux\";\nimport {isErrorMsg, mobileTelNoFormat, OREST_ENDPOINT} from \"../../../../model/orest/constants\";\nimport {\n    Grid,\n    Typography,\n    Dialog,\n    Checkbox, FormControlLabel, Button, Menu, MenuItem, IconButton\n} from \"@material-ui/core\";\nimport {useSnackbar} from \"notistack\";\nimport MaterialTableGeneric from \"../../../MaterialTableGeneric\";\nimport {SLASH} from \"../../../../model/globals\";\nimport useTranslation from \"../../../../lib/translations/hooks/useTranslation\";\nimport renderFormElements, {ELEMENT_TYPES} from \"../../../render-form-elements\";\nimport {required} from \"../../../../state/utils/form\";\nimport AddDialogActions from \"../../../AddDialogActions\";\nimport {LocaleContext} from \"../../../../lib/translations/context/LocaleContext\";\nimport LoadingSpinner from \"../../../LoadingSpinner\";\nimport {helper} from \"../../../../@webcms-globals\";\nimport TrackedChangesDialog from \"../../../TrackedChangesDialog\";\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\nimport MaterialTable, {MTableHeader} from \"material-table\";\nimport MaterialTableLocalization from \"../../../MaterialTableLocalization\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport TableColumnText from \"../../../TableColumnText\";\nimport PopupState, {bindMenu, bindTrigger} from \"material-ui-popup-state\";\nimport {CustomToolTip} from \"../../../user-portal/components/CustomToolTip/CustomToolTip\";\nimport CachedIcon from \"@material-ui/icons/Cached\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\n\nconst VARIANT = 'outlined'\n\nfunction Abilities(props) {\n\n    //props\n    const {empId} = props\n\n    //snackbar\n    const {enqueueSnackbar} = useSnackbar();\n\n    //context\n    const {GENERAL_SETTINGS} = useContext(WebCmsGlobal)\n    const {locale} = useContext(LocaleContext)\n    const {t} = useTranslation()\n\n    const tableLocalization = MaterialTableLocalization();\n\n    //redux state\n    const token = useSelector((state) => state?.orest?.currentUser?.auth?.access_token || false)\n    const hotelRefNo = useSelector((state) => state?.hotelinfo?.currentHotelRefNo || GENERAL_SETTINGS.HOTELREFNO || false)\n\n    //locale state\n    const initialState = {\n        abilityid: {value: '', isError: false, required: true, helperText: ''},\n        abilitylevel: {value: '', isError: false, required: false, helperText: ''},\n        description: {value: '', isError: false, required: false, helperText: ''},\n    }\n\n    const [isLoadingList, setIsLoadingList] = useState(false)\n    const [allHotels, setAllHotels] = useState(false)\n    const [abilityList, setAbilityList] = useState([])\n    const [openAddDialog, setOpenAddDialog] = useState(false);\n\n    const [selectedabilityData, setSelectedabilityData] = useState(null)\n    const [selectedGid, setSelectedGid] = useState(false)\n    const [getData, setGetData] = useState(null)\n    const [openTrackedDialog, setOpenTrackedDialog] = useState(false);\n    const [isDef, setIsDef] = useState(false)\n    const [isSaving, setIsSaving] = useState(false)\n    const [abilityData, setAbilityData] = useState(initialState)\n    const [abilityDataBase, setAbilityDataBase] = useState(initialState)\n    const [isInitialStateLoad, setIsInitialStateLoad] = useState(false)\n    const [isDeleting, setIsDeleting] = useState(false)\n\n    const formElements = [\n        {\n            type: ELEMENT_TYPES.autoComplete,\n            id: 'abilityid',\n            name: 'abilityid',\n            value: abilityData.abilityid?.value || null,\n            disabled: isSaving,\n            label: t('str_abilities'),\n            variant: VARIANT,\n            required: abilityData.abilityid?.isRequired,\n            error: abilityData.abilityid?.isError,\n            helperText: abilityData.abilityid?.helperText,\n            onChange: (newValue, name) => handleOnChangeFormElements(newValue, name),\n            onBlur: (e, name) => handleOnBlurFormElements(e, name),\n            onLoad: (initialValue, name) => {\n                const data = {...abilityData}\n                data[name].value = initialValue ? initialValue : null\n                setAbilityData(data)\n            },\n            endpoint: 'ability/view/list',\n            params: {text: '', limit: 25, field: 'code'},\n            initialId: isInitialStateLoad && selectedabilityData?.abilityid || false,\n            showOptionLabel: 'code',\n            showOption: 'code',\n            searchParam: 'code,description',\n            fullWidth: true,\n            gridProps: {xs: 12, sm: 6}\n        },\n        {\n            type: ELEMENT_TYPES.textField,\n            id: 'abilitylevel',\n            name: 'abilitylevel',\n            value: abilityData.abilitylevel?.value,\n            error: abilityData.abilitylevel?.isError,\n            required: abilityData.abilitylevel?.isRequired,\n            disabled: isSaving,\n            label: t('str_level'),\n            helperText: abilityData.abilitylevel?.helperText,\n            onChange: (e) => handleOnChangeFormElements(e),\n            onBlur: (e) => handleOnBlurFormElements(e),\n            variant: VARIANT,\n            fullWidth: true,\n            gridProps: {xs: 12, sm: 6}\n        },\n        {\n            type: ELEMENT_TYPES.textField,\n            id: 'description',\n            name: 'description',\n            value: abilityData.description?.value,\n            error: abilityData.description?.isError,\n            required: abilityData.description?.isRequired,\n            disabled: isSaving,\n            label: t('str_description'),\n            helperText: abilityData.description?.helperText,\n            onChange: (e) => handleOnChangeFormElements(e),\n            onBlur: (e) => handleOnBlurFormElements(e),\n            variant: VARIANT,\n            fullWidth: true,\n            gridProps: {xs: 12, sm: 12}\n        }\n    ]\n\n    const abilityColumns = [\n        {\n            title: (\n                <Button\n                    style={{padding: 0, maxWidth: 25, minWidth: 25}}\n                    disabled\n                    color={'primary'}\n                    variant={'text'}\n                >\n                    <MoreVertIcon/>\n                </Button>\n            ),\n            render: props => (\n                <TableColumnText minWidth={30}>\n                    <PopupState variant=\"popover\" popupId=\"material-table-action-column\">\n                        {(popupState) => (\n                            <React.Fragment>\n                                <Button\n                                    style={{padding: 0, maxWidth: 25, minWidth: 25}}\n                                    color={'primary'}\n                                    variant={'contained'}\n                                    {...bindTrigger(popupState)}\n                                >\n                                    <MoreVertIcon size={'small'}/>\n                                </Button>\n                                <Menu\n                                    anchorOrigin={{\n                                        vertical: \"bottom\",\n                                        horizontal: \"left\"\n                                    }}\n                                    transformOrigin={{\n                                        vertical: \"top\",\n                                        horizontal: \"left\"\n                                    }}\n                                    getContentAnchorEl={null}\n                                    {...bindMenu(popupState)}\n                                >\n                                    <MenuItem\n                                        onClick={() => {\n                                            setSelectedabilityData(props)\n                                            setSelectedGid(props?.gid || false)\n                                            handleOpenAddDialog(props)\n                                            popupState.close();\n                                        }}\n                                    >\n                                        {<EditOutlinedIcon/>}\n                                        <Typography style={{paddingLeft: '8px'}}>{t('str_edit')}</Typography>\n                                    </MenuItem>\n                                    <MenuItem\n                                        onClick={() => handleDeleteItem(props.gid)}\n                                    >\n                                        <DeleteIcon/>\n                                        <Typography style={{paddingLeft: '8px'}}>{t('str_delete')}</Typography>\n                                    </MenuItem>\n                                </Menu>\n                            </React.Fragment>\n                        )}\n                    </PopupState>\n                </TableColumnText>\n            )\n        },\n        {\n            title: t('str_abilities'),\n            field: 'ability',\n            render: (props) => <TableColumnText minWidth={150}>{props?.ability}</TableColumnText>\n        },\n        {\n            title: t('str_level'),\n            field: 'abilitylevel',\n            render: (props) => <TableColumnText>{props?.abilitylevel}</TableColumnText>\n        },\n        {\n            title: t('str_description'),\n            field: 'description',\n            render: (props) => <TableColumnText minWidth={150}>{props?.description}</TableColumnText>\n        },\n    ]\n\n    useEffect(() => {\n        if (token && empId) {\n            getAbilityList()\n        }\n    }, [])\n\n    useEffect(() => {\n        let isEffect = true\n        if (isEffect && abilityData && getData) {\n            const newClientInitialState = helper.objectMapper(abilityData, getData, ['abilityid'])\n            setAbilityData(newClientInitialState)\n            setAbilityDataBase(newClientInitialState)\n            setIsInitialStateLoad(true)\n        }\n\n\n        return () => {\n            isEffect = false\n        }\n\n    }, [getData])\n\n    const handleDeleteItem = (gid) => {\n        setIsDeleting(true)\n        Delete({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.EMPABILITY,\n            token,\n            gid: gid,\n            params: {\n                hotelrefno: GENERAL_SETTINGS.HOTELREFNO,\n            }\n        }).then((res) => {\n            if (res.status === 200) {\n                getAbilityList()\n            } else {\n                const error = isErrorMsg(res)\n                enqueueSnackbar(error.errorMsg?.length > 50 ? error.errorMsg?.substring(0, 50) : error.errorMsg, {variant: 'error'})\n                setIsDeleting(false)\n            }\n        })\n    }\n\n    const getAbilityList = () => {\n        setIsLoadingList(true)\n        ViewList({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.EMPABILITY,\n            token,\n            params: {\n                query: `empid:${empId}`,\n                allhotels: allHotels,\n                hotelrefno: hotelRefNo\n            }\n        }).then(res => {\n            setIsLoadingList(false)\n            if (res.status === 200) {\n                if (res.data.count > 0) {\n                    setAbilityList(res.data.data)\n                }\n            } else {\n                const error = isErrorMsg(res)\n                enqueueSnackbar(error.errorMsg?.length > 50 ? error.errorMsg?.substring(0, 50) : error.errorMsg, {variant: 'error'})\n            }\n        })\n    }\n\n    const handleGetSelectedability = (selectedability) => {\n        if (selectedability) {\n            setIsDef(true)\n            UseOrest({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: OREST_ENDPOINT.EMPABILITY + SLASH + OREST_ENDPOINT.VIEW + SLASH + 'get' + SLASH + selectedability.gid,\n                token\n            }).then(res => {\n                setIsDef(false)\n                if (res.status === 200 && res.data.data) {\n                    const data = res.data.data\n                    setGetData(data)\n\n                }\n            })\n        }\n    }\n\n    const handleDefRecord = () => {\n        setIsDef(true)\n        UseOrest({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.EMPABILITY + SLASH + OREST_ENDPOINT.DEF,\n            token,\n            params: {\n                hotelrefno: hotelRefNo\n            }\n        }).then(res => {\n            if (res.status === 200 && res.data.count > 0) {\n                const data = Object.assign({}, res.data.data, abilityData)\n                setAbilityData(data)\n                setAbilityDataBase(data)\n            }\n            setIsDef(false)\n        })\n    }\n\n    const handleSave = () => {\n        const data = {...abilityData}\n        Object.keys(initialState).map((key) => {\n            data[key] = typeof data[key].value === 'object' ? data[key].value ? data[key].value.id : null : data[key].value\n        })\n        if (empId) {\n            setIsSaving(true)\n            if (selectedGid) {\n                Patch({\n                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                    endpoint: OREST_ENDPOINT.EMPABILITY,\n                    gid: selectedGid,\n                    data: data,\n                    token\n                }).then(res => {\n                    if (res.status === 200) {\n                        enqueueSnackbar(t('str_processCompletedSuccessfully'), {variant: 'success'})\n                        setOpenAddDialog(false)\n                        getAbilityList()\n                        handleReset()\n                    } else {\n                        const error = isErrorMsg(res)\n                        enqueueSnackbar(error.errorMsg, {variant: 'error'})\n                    }\n                    setIsSaving(false)\n                })\n            } else {\n                data.empid = empId\n                data.hotelrefno = hotelRefNo\n                Insert({\n                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                    endpoint: OREST_ENDPOINT.EMPABILITY,\n                    token,\n                    data: data\n                }).then(res => {\n                    if (res.status === 200) {\n                        enqueueSnackbar(t('str_processCompletedSuccessfully'), {variant: 'success'})\n                        setOpenAddDialog(false)\n                        getAbilityList()\n                        handleReset()\n                    } else {\n                        const error = isErrorMsg(res)\n                        enqueueSnackbar(error.errorMsg, {variant: 'error'})\n                    }\n                    setIsSaving(false)\n                })\n            }\n        }\n    }\n\n    const handleOnChangeFormElements = (event, key, isOnBlur) => {\n        const name = key ? key : event.target.name\n        const value = event?.target ? event.target.value : event\n\n        if (isOnBlur) {\n            setAbilityData({\n                ...abilityData,\n                [name]: {\n                    ...abilityData[name],\n                    isError: abilityData[name]?.isRequired && !!required(value),\n                    helperText: abilityData[name]?.isRequired && !!required(value) && t('str_mandatory'),\n                }\n            })\n        } else {\n            setAbilityData({\n                ...abilityData,\n                [name]: {\n                    ...abilityData[name],\n                    value: value,\n                    isError: abilityData[name]?.isRequired && !!required(value),\n                    helperText: abilityData[name]?.isRequired && !!required(value) && t('str_mandatory'),\n                }\n            })\n        }\n    }\n\n    /*const handleGetAutoCompleteInitialValue = (initialValue, name) => {\n        if(initialValue) {\n            const data = {\n                value: initialValue,\n                name: name\n            }\n            setInitialValueObject(data)\n        }\n    }*/\n\n    const handleOnBlurFormElements = (event, key) => {\n        handleOnChangeFormElements(event, key, true)\n    }\n\n    const handleOpenAddDialog = (selectedability = false) => {\n        if (selectedability) {\n            handleGetSelectedability(selectedability)\n        } else {\n            handleDefRecord()\n        }\n        setOpenAddDialog(true)\n    }\n\n    const handleCloseDialog = () => {\n        if (JSON.stringify(abilityData) !== JSON.stringify(abilityDataBase)) {\n            setOpenTrackedDialog(true)\n        } else {\n            setOpenAddDialog(false)\n            handleReset()\n        }\n    }\n\n    const handleReset = () => {\n        setTimeout(() => {\n            setIsInitialStateLoad(false)\n            setGetData(null)\n            setAbilityData(initialState)\n            setAbilityDataBase(initialState)\n            setSelectedabilityData(null)\n        }, 100)\n    }\n\n    return (\n        <div>\n            <React.Fragment>\n                <Grid container>\n                    <Grid item xs={4} sm={3}>\n                        <Grid container>\n                            <Grid item xs={6} sm={3}>\n                                <CustomToolTip title={t('str_refresh')}>\n                                    <IconButton\n                                        onClick={() => getAbilityList()}\n                                    >\n                                        <CachedIcon style={{color: \"#F16A4B\"}}/>\n                                    </IconButton>\n                                </CustomToolTip>\n                            </Grid>\n                            <Grid item xs={6} sm={3}>\n                                <CustomToolTip title={t('str_add')}>\n                                    <IconButton\n                                        onClick={() => handleOpenAddDialog(false)}\n                                    >\n                                        <AddIcon/>\n                                    </IconButton>\n                                </CustomToolTip>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={8}>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <MaterialTable\n                            isLoading={isLoadingList}\n                            columns={abilityColumns}\n                            data={abilityList}\n                            localization={tableLocalization}\n                            options={{\n                                headerStyle: {\n                                    cursor: 'default',\n                                    fontWeight: \"bold\",\n                                    fontSize: \"12px\",\n                                    color: \"#A3A6B4\",\n                                    textTransform: \"uppercase\",\n                                    backgroundColor: \"#F5F6FA\",\n                                    whiteSpace: 'nowrap',\n                                    borderLeft: '1px solid #FFF',\n                                },\n                                cellStyle: {\n                                    whiteSpace: 'nowrap',\n                                    borderLeft: '1px solid rgba(224, 224, 224, 1)',\n                                    fontSize: '13px',\n                                },\n                                toolbar: false,\n                                selection: false,\n                                sorting: false,\n                                search: false,\n                                actionsColumnIndex: 1,\n                                selectionColumnIndex: 1\n                            }}\n                            components={{\n                                Header: (props) => {\n                                    const overrideProps = {...props}\n                                    overrideProps.draggable = false\n                                    return (\n                                        <MTableHeader  {...overrideProps}/>\n                                    )\n                                },\n                            }}\n                        />\n                    </Grid>\n                </Grid>\n                <Dialog open={openAddDialog} maxWidth={'sm'} fullWidth>\n                    <div style={{padding: 24}}>\n                        <Grid container spacing={3}>\n                            <Grid item xs={12}>\n                                <Typography style={{\n                                    fontWeight: '600',\n                                    fontSize: '18px'\n                                }}>{selectedabilityData ? t('str_editAbility') : t('str_addAbilities')}</Typography>\n                            </Grid>\n                            {\n                                isDef ? (\n                                    <Grid item xs={12}>\n                                        <LoadingSpinner/>\n                                    </Grid>\n                                ) : (\n                                    <React.Fragment>\n                                        {\n                                            formElements.map((item, index) => (\n                                                <Grid key={index} item {...item.gridProps}>\n                                                    {renderFormElements(item)}\n                                                </Grid>\n                                            ))\n                                        }\n\n                                        <Grid item xs={12}>\n                                            <AddDialogActions\n                                                disabled={isSaving}\n                                                loading={isSaving}\n                                                onCancelClick={handleCloseDialog}\n                                                onSaveClick={handleSave}\n                                            />\n                                        </Grid>\n                                    </React.Fragment>\n                                )\n                            }\n                        </Grid>\n                    </div>\n                </Dialog>\n                <TrackedChangesDialog\n                    open={openTrackedDialog}\n                    onPressNo={(e) => {\n                        setOpenTrackedDialog(e);\n                    }}\n                    onPressYes={(e) => {\n                        setOpenTrackedDialog(e);\n                        setOpenAddDialog(false)\n                        handleReset()\n                    }}\n                />\n            </React.Fragment>\n        </div>\n    )\n}\n\nexport default Abilities"]},"metadata":{},"sourceType":"module"}