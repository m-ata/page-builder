{"ast":null,"code":"import _defineProperty from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/mata/app-cloudweb/components/CommonNotes/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext, useEffect, useState, useRef } from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport { deleteFromState as _deleteFromState, pushToState as _pushToState, setToState as _setToState, updateState as _updateState } from 'state/actions';\nimport { ViewList, UseOrest, Insert, Patch } from '@webcms/orest';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Dialog, IconButton, Typography, Button, TextField, Grid, Checkbox, FormControlLabel, InputAdornment } from '@material-ui/core';\nimport { DEFAULT_OREST_TOKEN, isErrorMsg, OREST_ENDPOINT, REQUEST_METHOD_CONST } from 'model/orest/constants';\nimport WebCmsGlobal from 'components/webcms-global';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport AddIcon from '@material-ui/icons/Add';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nimport { useSnackbar } from 'notistack';\nimport RequestDetailNote from \"../user-portal/components/RequestDetailNote\";\nimport LoadingSpinner from \"../LoadingSpinner\";\nimport { CustomToolTip } from \"../user-portal/components/CustomToolTip/CustomToolTip\";\nimport TrackedChangesDialog from \"../TrackedChangesDialog\";\nimport { SLASH } from \"../../model/globals\";\nimport RaTagSelect from \"../RaTagSelect\";\nimport { InsertRaTag, PatchRaTag } from \"../../model/orest/components/RaTag\";\nimport PropTypes from \"prop-types\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    characterCountText: {\n      fontSize: \"12px\"\n    },\n    inputAdornmentStyle: {\n      position: \"absolute\",\n      right: \"2px\",\n      top: \"10px\",\n      \"&.MuiInputAdornment-positionStart\": {\n        marginRight: \"0\"\n      }\n    },\n    refCodeButton: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: '#EBEBEB',\n      width: '24px',\n      height: '24px',\n      borderRadius: '50%'\n    },\n    noteContainer: {\n      position: 'relative',\n      height: '50vh',\n      maxHeight: '50vh',\n      overflow: 'auto'\n    },\n    loadingContainer: {\n      zIndex: 1,\n      position: 'absolute',\n      left: '50%',\n      transform: 'translateX(-50%)'\n    }\n  };\n});\n\nvar CommonNotes = function CommonNotes(props) {\n  _s();\n\n  var _state$defMyRequestNo4, _state$defMyRequestNo5, _state$defMyRequestNo6, _state$defMyRequestNo7, _state$defMyRequestNo8;\n\n  var classes = useStyles();\n\n  var _useSnackbar = useSnackbar(),\n      enqueueSnackbar = _useSnackbar.enqueueSnackbar; //props\n\n\n  var setToState = props.setToState,\n      updateState = props.updateState,\n      state = props.state,\n      mid = props.mid,\n      dataHotelRefNo = props.dataHotelRefNo,\n      initialIncDone = props.initialIncDone; //context\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useContext = useContext(WebCmsGlobal),\n      GENERAL_SETTINGS = _useContext.GENERAL_SETTINGS; //redux\n\n\n  var token = useSelector(function (state) {\n    var _state$orest, _state$orest$currentU, _state$orest$currentU2;\n\n    return (state === null || state === void 0 ? void 0 : (_state$orest = state.orest) === null || _state$orest === void 0 ? void 0 : (_state$orest$currentU = _state$orest.currentUser) === null || _state$orest$currentU === void 0 ? void 0 : (_state$orest$currentU2 = _state$orest$currentU.auth) === null || _state$orest$currentU2 === void 0 ? void 0 : _state$orest$currentU2.access_token) || false;\n  });\n  var loginfo = useSelector(function (state) {\n    var _state$orest2, _state$orest2$current;\n\n    return (state === null || state === void 0 ? void 0 : (_state$orest2 = state.orest) === null || _state$orest2 === void 0 ? void 0 : (_state$orest2$current = _state$orest2.currentUser) === null || _state$orest2$current === void 0 ? void 0 : _state$orest2$current.loginfo) || false;\n  }); //state\n\n  var _useState = useState(initialIncDone),\n      isDoneFromList = _useState[0],\n      setIsDoneFromList = _useState[1];\n\n  var _useState2 = useState(false),\n      isRefCodeLoading = _useState2[0],\n      setIsRefCodeLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      openTrackedDialog = _useState3[0],\n      setOpenTrackedDialog = _useState3[1];\n\n  var _useState4 = useState([]),\n      selectedTagList = _useState4[0],\n      setSelectedTagList = _useState4[1];\n\n  var _useState5 = useState([]),\n      selectedTagListBase = _useState5[0],\n      setSelectedTagListBase = _useState5[1];\n\n  var _useState6 = useState(false),\n      raTagInfo = _useState6[0],\n      setRaTagInfo = _useState6[1];\n\n  var _useState7 = useState(false),\n      isSaving = _useState7[0],\n      setIsSaving = _useState7[1];\n\n  var _useState8 = useState(true),\n      firstLoad = _useState8[0],\n      setFirstLoad = _useState8[1];\n\n  var _useState9 = useState(-1),\n      currentScrollY = _useState9[0],\n      setCurrentScrollY = _useState9[1];\n\n  var _useState10 = useState(false),\n      raNoteUserAccess = _useState10[0],\n      setRaNoteUserAccess = _useState10[1]; //ref\n\n\n  var noteContainerRef = useRef();\n  useEffect(function () {\n    getNoteList();\n    setFirstLoad(false);\n\n    if (!loginfo.selfish) {\n      UseOrest({\n        apiUrl: GENERAL_SETTINGS.OREST_URL,\n        endpoint: OREST_ENDPOINT.TOOLS + SLASH + OREST_ENDPOINT.USER + SLASH + OREST_ENDPOINT.HASRIGHT,\n        token: token,\n        params: {\n          empid: loginfo.id,\n          submoduleid: 10125\n        }\n      }).then(function (res) {\n        if (res.status === 200) {\n          setRaNoteUserAccess(res.data.data);\n        }\n      });\n    }\n  }, []);\n  useEffect(function () {\n    if (state.isEditNote && state.defMyRequestNote) {\n      setToState('userPortal', ['defMyRequestNoteBase'], state.defMyRequestNote);\n    }\n  }, [state.isEditNote]);\n\n  var handleGetScroll = function handleGetScroll() {\n    var _noteContainerRef$cur;\n\n    var scrollTop = (_noteContainerRef$cur = noteContainerRef.current) === null || _noteContainerRef$cur === void 0 ? void 0 : _noteContainerRef$cur.scrollTop;\n    setCurrentScrollY(scrollTop);\n  };\n\n  var getNoteList = function getNoteList() {\n    var incDone = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : isDoneFromList;\n    updateState('userPortal', 'currentTaskNotesLoading', true);\n    ViewList({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.RANOTE,\n      token: token,\n      params: incDone ? {\n        query: \"masterid:\".concat(mid, \",needone:false,isprivate::false\"),\n        hotelrefno: dataHotelRefNo\n      } : {\n        query: \"masterid:\".concat(mid, \",isdone:\").concat(incDone, \",needone:false\"),\n        hotelrefno: dataHotelRefNo\n      }\n    }).then(function (r) {\n      if (r.status === 200) {\n        setToState('userPortal', ['currentTaskNotes'], r.data.data);\n        updateState('userPortal', 'currentTaskNotesLoading', false);\n      } else if (r.status === 401) {\n        updateState('userPortal', 'currentTaskNotesLoading', false);\n        enqueueSnackbar(\"401 Unauthorized\", {\n          variant: 'error'\n        });\n      } else if (r.status === 403) {\n        updateState('userPortal', 'currentTaskNotesLoading', false);\n        enqueueSnackbar(\"403 Forbidden\", {\n          variant: 'error'\n        });\n      } else {\n        updateState('userPortal', 'currentTaskNotesLoading', false);\n      }\n    });\n    handleGetScroll();\n  };\n\n  var handleSaveNote = function handleSaveNote() {\n    state.defMyRequestNote.masterid = mid;\n    var stringValue = '';\n    selectedTagList.map(function (item, ind) {\n      if (ind < selectedTagList.length - 1) {\n        stringValue += \"\".concat(item.inputValue, \",\");\n      } else {\n        stringValue += item.inputValue;\n      }\n    });\n    setIsSaving(true);\n\n    if (state.isEditNote) {\n      var _state$defMyRequestNo;\n\n      Patch({\n        apiUrl: GENERAL_SETTINGS.OREST_URL,\n        endpoint: OREST_ENDPOINT.RANOTE,\n        token: token,\n        gid: (_state$defMyRequestNo = state.defMyRequestNote) === null || _state$defMyRequestNo === void 0 ? void 0 : _state$defMyRequestNo.gid,\n        data: state.defMyRequestNote\n      }).then(function (res) {\n        if (res.status === 200) {\n          if (raTagInfo !== null && raTagInfo !== void 0 && raTagInfo.gid) {\n            PatchRaTag(GENERAL_SETTINGS.OREST_URL, token, raTagInfo === null || raTagInfo === void 0 ? void 0 : raTagInfo.gid, selectedTagList, dataHotelRefNo).then(function (raTagPatchResponse) {\n              handleResponseAfter(raTagPatchResponse);\n            });\n          } else {\n            if (selectedTagList.length > 0) {\n              var _state$defMyRequestNo2;\n\n              InsertRaTag(GENERAL_SETTINGS.OREST_URL, token, (_state$defMyRequestNo2 = state.defMyRequestNote) === null || _state$defMyRequestNo2 === void 0 ? void 0 : _state$defMyRequestNo2.mid, selectedTagList, dataHotelRefNo).then(function (r1) {\n                handleResponseAfter(r1);\n              });\n            } else {\n              handleResponseAfter(res);\n            }\n          }\n        } else {\n          var error = isErrorMsg(res);\n          enqueueSnackbar(t(error.errMsg), {\n            variant: 'error'\n          });\n        }\n      });\n    } else {\n      Insert({\n        apiUrl: GENERAL_SETTINGS.OREST_URL,\n        endpoint: OREST_ENDPOINT.RANOTE,\n        token: token,\n        params: {\n          hotelrefno: dataHotelRefNo || GENERAL_SETTINGS.HOTELREFNO\n        },\n        data: state.defMyRequestNote\n      }).then(function (res) {\n        if (res.status === 200) {\n          var raNoteResponseData = res.data.data;\n\n          if (selectedTagList.length > 0) {\n            InsertRaTag(GENERAL_SETTINGS.OREST_URL, token, raNoteResponseData === null || raNoteResponseData === void 0 ? void 0 : raNoteResponseData.mid, selectedTagList, dataHotelRefNo).then(function (r1) {\n              handleResponseAfter(r1);\n            });\n          } else {\n            handleResponseAfter(res);\n          }\n        } else {\n          var error = isErrorMsg(res);\n          enqueueSnackbar(t(error.errMsg), {\n            variant: 'error'\n          });\n        }\n      });\n    }\n\n    handleGetScroll();\n  };\n\n  var handleResponseAfter = function handleResponseAfter(res) {\n    if (res.status === 200) {\n      setIsSaving(false);\n      setToState('userPortal', ['openNoteDialog'], false);\n      enqueueSnackbar(t('str_processCompletedSuccessfully'), {\n        variant: 'success'\n      });\n      getNoteList();\n      handleReset();\n    } else {\n      var error = isErrorMsg(res);\n      enqueueSnackbar(t(error.errMsg), {\n        variant: 'error'\n      });\n    }\n  };\n\n  var handleDefRequestNote = function handleDefRequestNote() {\n    UseOrest({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.RANOTE + OREST_ENDPOINT.SLASH + OREST_ENDPOINT.DEF,\n      token: token,\n      method: REQUEST_METHOD_CONST.GET,\n      params: {\n        hotelrefno: dataHotelRefNo\n      }\n    }).then(function (r) {\n      if (r.status === 200) {\n        setToState('userPortal', ['defMyRequestNote'], r.data.data);\n        setToState('userPortal', ['defMyRequestNoteBase'], r.data.data);\n      } else {\n        var retErr = isErrorMsg(r);\n        enqueueSnackbar(t(retErr.errorMsg), {\n          variant: 'error'\n        });\n      }\n    });\n  };\n\n  var handleCloseDialog = function handleCloseDialog() {\n    if (JSON.stringify(state.defMyRequestNote) !== JSON.stringify(state.defMyRequestNoteBase) || selectedTagList.length !== selectedTagListBase.length) {\n      setOpenTrackedDialog(true);\n    } else {\n      setToState('userPortal', ['openNoteDialog'], false);\n      setTimeout(function () {\n        handleReset();\n      }, 150);\n    }\n  };\n\n  var handleGetNextRefCode = function handleGetNextRefCode() {\n    var _state$defMyRequestNo3;\n\n    setIsRefCodeLoading(true);\n    UseOrest({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.RANOTE + SLASH + OREST_ENDPOINT.REFCODE,\n      token: token,\n      params: {\n        calcnext: 1,\n        masterid: mid,\n        hotelrefno: dataHotelRefNo,\n        pfx: ((_state$defMyRequestNo3 = state.defMyRequestNote) === null || _state$defMyRequestNo3 === void 0 ? void 0 : _state$defMyRequestNo3.refcode) || ''\n      }\n    }).then(function (res) {\n      setIsRefCodeLoading(false);\n\n      if (res.status === 200) {\n        var _res$data, _res$data$data;\n\n        var data = _objectSpread({}, state.defMyRequestNote);\n\n        data.refcode = res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : (_res$data$data = _res$data.data) === null || _res$data$data === void 0 ? void 0 : _res$data$data.nextcode;\n        setToState('userPortal', ['defMyRequestNote'], data);\n      } else {\n        var error = isErrorMsg(res);\n        enqueueSnackbar(t(error.errorMsg), {\n          variant: 'error'\n        });\n      }\n    });\n  };\n\n  var handleReset = function handleReset() {\n    setToState('userPortal', ['isEditNote'], false);\n    setToState('userPortal', ['defMyRequestNote'], {});\n    setToState('userPortal', ['defMyRequestNoteBase'], {});\n    setSelectedTagList([]);\n    setSelectedTagListBase([]);\n    setRaTagInfo(false);\n  };\n\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    container: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    container: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 21\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 5,\n    sm: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 25\n    }\n  }, __jsx(CustomToolTip, {\n    title: t('str_refresh'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 29\n    }\n  }, __jsx(IconButton, {\n    disabled: state.currentTaskNotesLoading,\n    onClick: function onClick() {\n      getNoteList();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 33\n    }\n  }, __jsx(CachedIcon, {\n    style: {\n      color: \"#F16A4B\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 37\n    }\n  })))), __jsx(Grid, {\n    item: true,\n    xs: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 25\n    }\n  }, __jsx(CustomToolTip, {\n    title: t('str_add'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 29\n    }\n  }, __jsx(IconButton, {\n    disabled: state.currentTaskNotesLoading,\n    onClick: function onClick() {\n      setToState('userPortal', ['openNoteDialog'], true);\n      setToState('userPortal', ['isEditNote'], false);\n      handleDefRequestNote();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 33\n    }\n  }, __jsx(AddIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 37\n    }\n  })))), __jsx(Grid, {\n    item: true,\n    xs: 7,\n    sm: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    style: {\n      marginTop: '3px',\n      textAlign: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 29\n    }\n  }, __jsx(FormControlLabel, {\n    disabled: state.currentTaskNotesLoading,\n    control: __jsx(Checkbox, {\n      color: 'primary',\n      checked: isDoneFromList,\n      onChange: function onChange() {\n        var incDone = isDoneFromList;\n        incDone = !incDone;\n        setIsDoneFromList(!isDoneFromList);\n        getNoteList(incDone);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 41\n      }\n    }),\n    label: t('str_incDone'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 33\n    }\n  }))))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: classes.noteContainer,\n    ref: noteContainerRef,\n    style: {\n      pointerEvents: state.currentTaskNotesLoading ? 'none' : 'unset'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 21\n    }\n  }, state.currentTaskNotesLoading ? __jsx(\"div\", {\n    className: classes.loadingContainer,\n    style: {\n      top: \"calc(\".concat(currentScrollY, \"px + 25vh)\")\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 33\n    }\n  }, __jsx(LoadingSpinner, {\n    size: 30,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 37\n    }\n  })) : null, state.currentTaskNotes.length > 0 ? state.currentTaskNotes.map(function (note, i) {\n    return note.pid === null && __jsx(RequestDetailNote, {\n      handleGetScroll: handleGetScroll,\n      key: i,\n      getNoteList: getNoteList,\n      raNoteUserAccess: raNoteUserAccess,\n      currentTaskNotes: state.currentTaskNotes,\n      data: note,\n      notemasterid: note.masterid,\n      isreply: false,\n      treeLevel: note.treelevel,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 41\n      }\n    });\n  }) : !firstLoad ? __jsx(Typography, {\n    variant: \"subtitle1\",\n    align: \"center\",\n    style: {\n      border: '1px solid #efefef',\n      padding: 25,\n      lineHeight: 1,\n      marginTop: 14\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 33\n    }\n  }, t('str_noRecordsToDisplay')) : null))), __jsx(Dialog, {\n    fullWidth: true,\n    maxWidth: \"md\",\n    open: state.openNoteDialog,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    style: {\n      padding: \"24px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 21\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 25\n    }\n  }, __jsx(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 29\n    }\n  }, t('str_addNote'))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 29\n    }\n  }, __jsx(TextField, {\n    disabled: isRefCodeLoading,\n    value: ((_state$defMyRequestNo4 = state.defMyRequestNote) === null || _state$defMyRequestNo4 === void 0 ? void 0 : _state$defMyRequestNo4.refcode) || \"\",\n    label: t('str_refCode'),\n    variant: 'outlined',\n    fullWidth: true,\n    onChange: function onChange(e) {\n      var data = _objectSpread({}, state.defMyRequestNote);\n\n      data.refcode = e.target.value;\n      setToState('userPortal', ['defMyRequestNote'], data);\n    },\n    InputProps: {\n      endAdornment: isRefCodeLoading ? __jsx(InputAdornment, {\n        position: \"start\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 49\n        }\n      }, __jsx(LoadingSpinner, {\n        size: 24,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 53\n        }\n      })) : null\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 33\n    }\n  }), __jsx(\"div\", {\n    style: {\n      paddingLeft: '8px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 33\n    }\n  }, __jsx(IconButton, {\n    style: {\n      padding: '0'\n    },\n    onClick: handleGetNextRefCode,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 37\n    }\n  }, __jsx(\"div\", {\n    className: classes.refCodeButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 41\n    }\n  }, __jsx(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 45\n    }\n  }, \"R.\")))))), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 25\n    }\n  }, __jsx(RaTagSelect, {\n    id: 'tags-outlined',\n    name: 'tags-outlined',\n    value: selectedTagList,\n    onChange: function onChange(event, newValue) {\n      setSelectedTagList(newValue);\n    },\n    onLoad: function onLoad(raTagInfo, tagList) {\n      setSelectedTagList(tagList);\n      setSelectedTagListBase(tagList);\n      setRaTagInfo(raTagInfo);\n    },\n    tableName: OREST_ENDPOINT.RANOTE,\n    variant: 'outlined',\n    mid: (state === null || state === void 0 ? void 0 : (_state$defMyRequestNo5 = state.defMyRequestNote) === null || _state$defMyRequestNo5 === void 0 ? void 0 : _state$defMyRequestNo5.mid) || 0,\n    label: t('str_tags'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 29\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 25\n    }\n  }, __jsx(TextField, {\n    value: ((_state$defMyRequestNo6 = state.defMyRequestNote) === null || _state$defMyRequestNo6 === void 0 ? void 0 : _state$defMyRequestNo6.note) || \"\",\n    label: t('str_note'),\n    variant: 'outlined',\n    multiline: true,\n    rows: 4,\n    fullWidth: true,\n    onChange: function onChange(e) {\n      var data = _objectSpread({}, state.defMyRequestNote);\n\n      data.note = e.target.value;\n      setToState('userPortal', ['defMyRequestNote'], data);\n    },\n    InputProps: {\n      endAdornment: __jsx(InputAdornment, {\n        className: classes.inputAdornmentStyle,\n        position: \"start\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 51\n        }\n      }, __jsx(Typography, {\n        className: classes.characterCountText,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 41\n        }\n      }, (_state$defMyRequestNo7 = state.defMyRequestNote) !== null && _state$defMyRequestNo7 !== void 0 && _state$defMyRequestNo7.note ? \"\".concat(state.defMyRequestNote.note.length, \"/4096\") : null))\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 29\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 25\n    }\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      checked: ((_state$defMyRequestNo8 = state.defMyRequestNote) === null || _state$defMyRequestNo8 === void 0 ? void 0 : _state$defMyRequestNo8.isdone) || false,\n      onChange: function onChange(e) {\n        var data = _objectSpread({}, state.defMyRequestNote);\n\n        data.isdone = e.target.checked;\n        setToState('userPortal', ['defMyRequestNote'], data);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 37\n      }\n    }),\n    label: t('str_done'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 29\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 10,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    style: {\n      textAlign: \"right\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 29\n    }\n  }, __jsx(Button, {\n    disabled: isSaving,\n    variant: 'outlined',\n    color: 'primary',\n    startIcon: __jsx(CloseIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 48\n      }\n    }),\n    onClick: function onClick() {\n      return handleCloseDialog();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 33\n    }\n  }, t('str_cancel')), __jsx(Button, {\n    disabled: isSaving,\n    style: {\n      marginLeft: '8px'\n    },\n    startIcon: isSaving ? __jsx(LoadingSpinner, {\n      size: 24,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 59\n      }\n    }) : __jsx(CheckIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 89\n      }\n    }),\n    onClick: function onClick() {\n      return handleSaveNote();\n    },\n    color: 'primary',\n    variant: 'contained',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 33\n    }\n  }, t('str_save'))))))), __jsx(TrackedChangesDialog, {\n    open: openTrackedDialog,\n    onPressNo: function onPressNo(e) {\n      return setOpenTrackedDialog(e);\n    },\n    onPressYes: function onPressYes(e) {\n      setToState('userPortal', ['openNoteDialog'], false);\n      setToState('userPortal', ['isEditNote'], false);\n      setOpenTrackedDialog(e);\n      setTimeout(function () {\n        handleReset();\n      }, 150);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 13\n    }\n  }));\n};\n\n_s(CommonNotes, \"QToZyXF0ohAsuAFpdwJBDVhx8UI=\", false, function () {\n  return [useStyles, useSnackbar, useTranslation, useSelector, useSelector];\n});\n\n_c = CommonNotes;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    state: state.formReducer.userPortal\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setToState: function setToState(stateType, stateName, value) {\n      return dispatch(_setToState(stateType, stateName, value));\n    },\n    updateState: function updateState(stateType, stateName, value) {\n      return dispatch(_updateState(stateType, stateName, value));\n    },\n    pushToState: function pushToState(stateType, stateName, value) {\n      return dispatch(_pushToState(stateType, stateName, value));\n    },\n    deleteFromState: function deleteFromState(stateType, stateName, value) {\n      return dispatch(_deleteFromState(stateType, stateName, value));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CommonNotes);\nCommonNotes.defaultProps = {\n  initialIncDone: false\n};\nCommonNotes.propTypes = {\n  initialIncDone: PropTypes.bool,\n  mid: PropTypes.number,\n  dataHotelRefNo: PropTypes.number\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"CommonNotes\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/CommonNotes/index.js"],"names":["React","useContext","useEffect","useState","useRef","connect","useSelector","deleteFromState","pushToState","setToState","updateState","ViewList","UseOrest","Insert","Patch","makeStyles","Dialog","IconButton","Typography","Button","TextField","Grid","Checkbox","FormControlLabel","InputAdornment","DEFAULT_OREST_TOKEN","isErrorMsg","OREST_ENDPOINT","REQUEST_METHOD_CONST","WebCmsGlobal","CachedIcon","CheckIcon","CloseIcon","AddIcon","useTranslation","useSnackbar","RequestDetailNote","LoadingSpinner","CustomToolTip","TrackedChangesDialog","SLASH","RaTagSelect","InsertRaTag","PatchRaTag","PropTypes","useStyles","theme","characterCountText","fontSize","inputAdornmentStyle","position","right","top","marginRight","refCodeButton","display","alignItems","justifyContent","backgroundColor","width","height","borderRadius","noteContainer","maxHeight","overflow","loadingContainer","zIndex","left","transform","CommonNotes","props","classes","enqueueSnackbar","state","mid","dataHotelRefNo","initialIncDone","t","GENERAL_SETTINGS","token","orest","currentUser","auth","access_token","loginfo","isDoneFromList","setIsDoneFromList","isRefCodeLoading","setIsRefCodeLoading","openTrackedDialog","setOpenTrackedDialog","selectedTagList","setSelectedTagList","selectedTagListBase","setSelectedTagListBase","raTagInfo","setRaTagInfo","isSaving","setIsSaving","firstLoad","setFirstLoad","currentScrollY","setCurrentScrollY","raNoteUserAccess","setRaNoteUserAccess","noteContainerRef","getNoteList","selfish","apiUrl","OREST_URL","endpoint","TOOLS","USER","HASRIGHT","params","empid","id","submoduleid","then","res","status","data","isEditNote","defMyRequestNote","handleGetScroll","scrollTop","current","incDone","RANOTE","query","hotelrefno","r","variant","handleSaveNote","masterid","stringValue","map","item","ind","length","inputValue","gid","raTagPatchResponse","handleResponseAfter","r1","error","errMsg","HOTELREFNO","raNoteResponseData","handleReset","handleDefRequestNote","DEF","method","GET","retErr","errorMsg","handleCloseDialog","JSON","stringify","defMyRequestNoteBase","setTimeout","handleGetNextRefCode","REFCODE","calcnext","pfx","refcode","nextcode","currentTaskNotesLoading","color","marginTop","textAlign","pointerEvents","currentTaskNotes","note","i","pid","treelevel","border","padding","lineHeight","openNoteDialog","e","target","value","endAdornment","paddingLeft","event","newValue","tagList","isdone","checked","marginLeft","mapStateToProps","formReducer","userPortal","mapDispatchToProps","dispatch","stateType","stateName","defaultProps","propTypes","bool","number"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState, useRef } from 'react'\nimport { connect, useSelector } from 'react-redux'\nimport { deleteFromState, pushToState, setToState, updateState } from 'state/actions'\nimport {  ViewList,  UseOrest,  Insert, Patch } from '@webcms/orest'\nimport { makeStyles } from '@material-ui/core/styles'\nimport {\n    Dialog,\n    IconButton,\n    Typography,\n    Button,\n    TextField,\n    Grid,\n    Checkbox,\n    FormControlLabel,\n    InputAdornment,\n} from '@material-ui/core'\n\nimport { DEFAULT_OREST_TOKEN, isErrorMsg, OREST_ENDPOINT, REQUEST_METHOD_CONST } from 'model/orest/constants'\nimport WebCmsGlobal from 'components/webcms-global'\nimport CachedIcon from '@material-ui/icons/Cached';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport AddIcon from '@material-ui/icons/Add'\nimport useTranslation from 'lib/translations/hooks/useTranslation'\nimport { useSnackbar } from 'notistack';\nimport RequestDetailNote from \"../user-portal/components/RequestDetailNote\";\nimport LoadingSpinner from \"../LoadingSpinner\";\nimport {CustomToolTip} from \"../user-portal/components/CustomToolTip/CustomToolTip\";\nimport TrackedChangesDialog from \"../TrackedChangesDialog\";\nimport {SLASH} from \"../../model/globals\";\nimport RaTagSelect from \"../RaTagSelect\";\nimport {InsertRaTag, PatchRaTag} from \"../../model/orest/components/RaTag\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n    characterCountText: {\n        fontSize:\"12px\",\n    },\n    inputAdornmentStyle: {\n        position:\"absolute\",\n        right:\"2px\",\n        top:\"10px\",\n        \"&.MuiInputAdornment-positionStart\": {\n            marginRight:\"0\"\n        }\n    },\n    refCodeButton: {\n        display: 'flex',\n        alignItems:'center',\n        justifyContent: 'center',\n        backgroundColor: '#EBEBEB',\n        width: '24px',\n        height: '24px',\n        borderRadius: '50%'\n    },\n    noteContainer: {\n        position: 'relative',\n        height: '50vh',\n        maxHeight: '50vh',\n        overflow: 'auto',\n    },\n    loadingContainer: {\n        zIndex: 1,\n        position: 'absolute',\n        left: '50%',\n        transform: 'translateX(-50%)'\n    }\n}));\n\n\nconst CommonNotes = (props) => {\n    const classes = useStyles();\n    const { enqueueSnackbar } = useSnackbar();\n\n    //props\n    const { setToState, updateState, state, mid, dataHotelRefNo, initialIncDone } = props\n\n    //context\n    const { t } = useTranslation()\n    const { GENERAL_SETTINGS } = useContext(WebCmsGlobal)\n\n    //redux\n    const token = useSelector((state) =>  state?.orest?.currentUser?.auth?.access_token || false);\n    const loginfo = useSelector((state) => state?.orest?.currentUser?.loginfo || false);\n\n    //state\n    const [isDoneFromList, setIsDoneFromList] = useState(initialIncDone);\n    const [isRefCodeLoading, setIsRefCodeLoading] = useState(false);\n    const [openTrackedDialog, setOpenTrackedDialog] = useState(false);\n    const [selectedTagList, setSelectedTagList] = useState([]);\n    const [selectedTagListBase, setSelectedTagListBase] = useState([]);\n    const [raTagInfo, setRaTagInfo] = useState(false);\n    const [isSaving, setIsSaving] = useState(false);\n    const [firstLoad, setFirstLoad] = useState(true);\n    const [currentScrollY, setCurrentScrollY] = useState(-1);\n    const [raNoteUserAccess, setRaNoteUserAccess] = useState(false);\n\n    //ref\n    const noteContainerRef = useRef();\n\n\n    useEffect(() => {\n       getNoteList();\n       setFirstLoad(false);\n       if(!loginfo.selfish) {\n           UseOrest({\n               apiUrl: GENERAL_SETTINGS.OREST_URL,\n               endpoint: OREST_ENDPOINT.TOOLS + SLASH + OREST_ENDPOINT.USER + SLASH + OREST_ENDPOINT.HASRIGHT,\n               token,\n               params: {\n                   empid: loginfo.id,\n                   submoduleid: 10125,\n               },\n           }).then(res => {\n               if(res.status === 200) {\n                   setRaNoteUserAccess(res.data.data)\n               }\n           })\n       }\n    },[])\n\n    useEffect(() => {\n        if(state.isEditNote && state.defMyRequestNote) {\n            setToState('userPortal', ['defMyRequestNoteBase'], state.defMyRequestNote)\n        }\n    }, [state.isEditNote])\n\n\n    const handleGetScroll = () => {\n        const scrollTop = noteContainerRef.current?.scrollTop\n        setCurrentScrollY(scrollTop);\n    }\n\n    const getNoteList = (incDone = isDoneFromList) => {\n        updateState('userPortal', 'currentTaskNotesLoading', true)\n        ViewList({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.RANOTE,\n            token,\n            params: incDone ? {\n                query: `masterid:${mid},needone:false,isprivate::false`,\n                hotelrefno: dataHotelRefNo\n\n            } : {\n                query: `masterid:${mid},isdone:${incDone},needone:false`,\n                hotelrefno: dataHotelRefNo\n            }\n        }).then((r) => {\n            if (r.status === 200) {\n                setToState('userPortal', ['currentTaskNotes'], r.data.data)\n                updateState('userPortal', 'currentTaskNotesLoading', false)\n            } else if (r.status === 401) {\n                updateState('userPortal', 'currentTaskNotesLoading', false)\n                enqueueSnackbar(\"401 Unauthorized\", { variant: 'error' });\n            } else if(r.status === 403) {\n                updateState('userPortal', 'currentTaskNotesLoading', false)\n                enqueueSnackbar(\"403 Forbidden\", { variant: 'error' });\n            } else {\n                updateState('userPortal', 'currentTaskNotesLoading', false)\n            }\n        })\n        handleGetScroll();\n    }\n\n\n    const handleSaveNote = () => {\n        state.defMyRequestNote.masterid = mid\n\n        let stringValue = '';\n        selectedTagList.map((item, ind) => {\n            if(ind < selectedTagList.length - 1) {\n                stringValue += `${item.inputValue},`\n            } else {\n                stringValue += item.inputValue\n            }\n        })\n        setIsSaving(true);\n        if(state.isEditNote) {\n            Patch({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: OREST_ENDPOINT.RANOTE,\n                token,\n                gid: state.defMyRequestNote?.gid,\n                data: state.defMyRequestNote\n            }).then((res) => {\n                if(res.status === 200) {\n                    if(raTagInfo?.gid) {\n                        PatchRaTag(GENERAL_SETTINGS.OREST_URL, token, raTagInfo?.gid, selectedTagList, dataHotelRefNo).then(raTagPatchResponse => {\n                            handleResponseAfter(raTagPatchResponse)\n                        })\n                    } else {\n                        if(selectedTagList.length > 0) {\n                            InsertRaTag(GENERAL_SETTINGS.OREST_URL, token, state.defMyRequestNote?.mid, selectedTagList, dataHotelRefNo).then(r1 => {\n                                handleResponseAfter(r1)\n                            })\n                        } else {\n                            handleResponseAfter(res)\n                        }\n                    }\n                } else {\n                    const error = isErrorMsg(res);\n                    enqueueSnackbar(t(error.errMsg), { variant: 'error' });\n                }\n            })\n        } else {\n            Insert({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: OREST_ENDPOINT.RANOTE,\n                token: token,\n                params: {\n                    hotelrefno: dataHotelRefNo || GENERAL_SETTINGS.HOTELREFNO,\n                },\n                data: state.defMyRequestNote\n            }).then(res => {\n                if(res.status === 200) {\n                    const raNoteResponseData = res.data.data;\n                    if(selectedTagList.length > 0) {\n                        InsertRaTag(GENERAL_SETTINGS.OREST_URL, token, raNoteResponseData?.mid, selectedTagList, dataHotelRefNo).then(r1 => {\n                            handleResponseAfter(r1)\n                        })\n                    } else {\n                        handleResponseAfter(res)\n                    }\n                } else {\n                    const error = isErrorMsg(res);\n                    enqueueSnackbar(t(error.errMsg), { variant: 'error' });\n                }\n            });\n        }\n        handleGetScroll();\n    }\n\n    const handleResponseAfter = (res) => {\n        if(res.status === 200) {\n            setIsSaving(false);\n            setToState('userPortal', ['openNoteDialog'], false);\n            enqueueSnackbar(t('str_processCompletedSuccessfully'), { variant: 'success' });\n            getNoteList();\n            handleReset();\n        } else {\n            const error = isErrorMsg(res);\n            enqueueSnackbar(t(error.errMsg), { variant: 'error' });\n        }\n    }\n\n    const handleDefRequestNote = () => {\n        UseOrest({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.RANOTE + OREST_ENDPOINT.SLASH + OREST_ENDPOINT.DEF,\n            token,\n            method: REQUEST_METHOD_CONST.GET,\n            params: {\n                hotelrefno: dataHotelRefNo\n            },\n        }).then(r => {\n            if (r.status === 200) {\n                setToState('userPortal', ['defMyRequestNote'], r.data.data);\n                setToState('userPortal', ['defMyRequestNoteBase'], r.data.data);\n            } else {\n                const retErr = isErrorMsg(r);\n                enqueueSnackbar(t(retErr.errorMsg), {variant: 'error'})\n            }\n        });\n    };\n\n    const handleCloseDialog = () => {\n        if(JSON.stringify(state.defMyRequestNote) !== JSON.stringify(state.defMyRequestNoteBase) || selectedTagList.length !== selectedTagListBase.length) {\n            setOpenTrackedDialog(true);\n        } else {\n            setToState('userPortal', ['openNoteDialog'], false);\n            setTimeout(() => {\n                handleReset();\n            }, 150)\n        }\n\n    }\n\n    const handleGetNextRefCode = () => {\n        setIsRefCodeLoading(true);\n        UseOrest({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.RANOTE + SLASH + OREST_ENDPOINT.REFCODE,\n            token,\n            params: {\n                calcnext: 1,\n                masterid: mid,\n                hotelrefno: dataHotelRefNo,\n                pfx: state.defMyRequestNote?.refcode || ''\n            }\n        }).then(res => {\n            setIsRefCodeLoading(false);\n            if(res.status === 200) {\n                const data = {...state.defMyRequestNote}\n                data.refcode = res?.data?.data?.nextcode\n                setToState('userPortal', ['defMyRequestNote'], data)\n            } else {\n                const error = isErrorMsg(res);\n                enqueueSnackbar(t(error.errorMsg), {variant: 'error'})\n            }\n        })\n    }\n\n    const handleReset = () => {\n        setToState('userPortal', ['isEditNote'], false);\n        setToState('userPortal', ['defMyRequestNote'], {});\n        setToState('userPortal', ['defMyRequestNoteBase'], {});\n        setSelectedTagList([]);\n        setSelectedTagListBase([]);\n        setRaTagInfo(false);\n    }\n\n\n\n    return (\n        <React.Fragment>\n            <Grid container>\n                <Grid item xs={4}>\n                    <Grid container>\n                        <Grid item xs={5} sm={2}>\n                            <CustomToolTip title={t('str_refresh')}>\n                                <IconButton\n                                    disabled={state.currentTaskNotesLoading}\n                                    onClick={() => {\n                                        getNoteList();\n                                    }}\n                                >\n                                    <CachedIcon style={{color:\"#F16A4B\"}}/>\n                                </IconButton>\n                            </CustomToolTip>\n                        </Grid>\n                        <Grid item xs={2}>\n                            <CustomToolTip title={t('str_add')}>\n                                <IconButton\n                                    disabled={state.currentTaskNotesLoading}\n                                    onClick={() => {\n                                        setToState('userPortal', ['openNoteDialog'], true);\n                                        setToState('userPortal', ['isEditNote'], false);\n                                        handleDefRequestNote()\n                                    }}\n                                >\n                                    <AddIcon/>\n                                </IconButton>\n                            </CustomToolTip>\n                        </Grid>\n                        <Grid item xs={7} sm={8}>\n                            <div style={{marginTop: '3px', textAlign: 'center'}}>\n                                <FormControlLabel\n                                    disabled={state.currentTaskNotesLoading}\n                                    control={\n                                        <Checkbox\n                                            color={'primary'}\n                                            checked={isDoneFromList}\n                                            onChange={() => {\n                                                let incDone = isDoneFromList;\n                                                incDone = !incDone;\n                                                setIsDoneFromList(!isDoneFromList)\n                                                getNoteList(incDone)\n                                            }}\n                                        />\n                                    }\n                                    label={t('str_incDone')}\n                                />\n                            </div>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <div className={classes.noteContainer} ref={noteContainerRef} style={{pointerEvents: state.currentTaskNotesLoading ? 'none': 'unset'}}>\n                        {\n                            state.currentTaskNotesLoading ? (\n                                <div className={classes.loadingContainer} style={{top: `calc(${currentScrollY}px + 25vh)`}}>\n                                    <LoadingSpinner size={30}/>\n                                </div>\n                            ) : null\n                        }\n                        {\n                            state.currentTaskNotes.length > 0 ? (\n                                state.currentTaskNotes.map((note, i) => (\n                                    note.pid === null && (\n                                        <RequestDetailNote\n                                            handleGetScroll={handleGetScroll}\n                                            key={i}\n                                            getNoteList={getNoteList}\n                                            raNoteUserAccess={raNoteUserAccess}\n                                            currentTaskNotes={state.currentTaskNotes}\n                                            data={note}\n                                            notemasterid={note.masterid}\n                                            isreply={false}\n                                            treeLevel={note.treelevel}\n                                        />\n                                    )\n                                ))\n                            ) : !firstLoad ? (\n                                <Typography\n                                    variant=\"subtitle1\"\n                                    align=\"center\"\n                                    style={{ border: '1px solid #efefef', padding: 25, lineHeight: 1, marginTop: 14 }}\n                                >\n                                    {t('str_noRecordsToDisplay')}\n                                </Typography>\n                            ) : null\n                        }\n                    </div>\n                </Grid>\n            </Grid>\n            <Dialog\n                fullWidth\n                maxWidth={\"md\"}\n                open={state.openNoteDialog}\n            >\n                <div style={{padding: \"24px\"}}>\n                    <Grid container spacing={4}>\n                        <Grid item xs={12}>\n                            <Typography>{t('str_addNote')}</Typography>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <div style={{display: 'flex', alignItems: 'center'}}>\n                                <TextField\n                                    disabled={isRefCodeLoading}\n                                    value={state.defMyRequestNote?.refcode || \"\"}\n                                    label={t('str_refCode')}\n                                    variant={'outlined'}\n                                    fullWidth\n                                    onChange={(e) => {\n                                        const data = {...state.defMyRequestNote}\n                                        data.refcode = e.target.value\n                                        setToState('userPortal', ['defMyRequestNote'], data)\n                                    }}\n                                    InputProps={{\n                                        endAdornment: (\n                                            isRefCodeLoading ? (\n                                                <InputAdornment position=\"start\">\n                                                    <LoadingSpinner size={24}/>\n                                                </InputAdornment>\n                                                ) : null\n                                        ),\n                                    }}\n                                />\n                                <div style={{paddingLeft: '8px'}}>\n                                    <IconButton style={{padding: '0'}} onClick={handleGetNextRefCode}>\n                                        <div className={classes.refCodeButton}>\n                                            <Typography>R.</Typography>\n                                        </div>\n                                    </IconButton>\n                                </div>\n                            </div>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <RaTagSelect\n                                id={'tags-outlined'}\n                                name={'tags-outlined'}\n                                value={selectedTagList}\n                                onChange={(event, newValue) => {\n                                    setSelectedTagList(newValue)\n                                }}\n                                onLoad={(raTagInfo, tagList) => {\n                                    setSelectedTagList(tagList);\n                                    setSelectedTagListBase(tagList);\n                                    setRaTagInfo(raTagInfo);\n                                }}\n                                tableName={OREST_ENDPOINT.RANOTE}\n                                variant={'outlined'}\n                                mid={state?.defMyRequestNote?.mid || 0}\n                                label={t('str_tags')}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                value={state.defMyRequestNote?.note || \"\"}\n                                label={t('str_note')}\n                                variant={'outlined'}\n                                multiline\n                                rows={4}\n                                fullWidth\n                                onChange={(e) => {\n                                    const data = {...state.defMyRequestNote}\n                                    data.note = e.target.value\n                                    setToState('userPortal', ['defMyRequestNote'], data)\n                                }}\n                                InputProps={{\n                                    endAdornment: <InputAdornment\n                                        className={classes.inputAdornmentStyle}\n                                        position=\"start\"\n                                    >\n                                        <Typography className={classes.characterCountText}>\n                                            {\n                                                state.defMyRequestNote?.note ?\n                                                    `${state.defMyRequestNote.note.length}/4096`\n                                                    :\n                                                    null\n                                            }\n                                        </Typography>\n                                    </InputAdornment>,\n                                }}\n                            />\n                        </Grid>\n                        <Grid item xs={2}>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={state.defMyRequestNote?.isdone || false}\n                                        onChange={(e) => {\n                                            const data = {...state.defMyRequestNote}\n                                            data.isdone = e.target.checked\n                                            setToState('userPortal', ['defMyRequestNote'], data)}\n                                        }\n                                    />\n                                }\n                                label={t('str_done')}\n                            />\n                        </Grid>\n                        <Grid item xs={10}>\n                            <div style={{textAlign: \"right\"}}>\n                                <Button\n                                    disabled={isSaving}\n                                    variant={'outlined'}\n                                    color={'primary'}\n                                    startIcon={<CloseIcon />}\n                                    onClick={() => handleCloseDialog()}\n                                >\n                                    {t('str_cancel')}\n                                </Button>\n                                <Button\n                                    disabled={isSaving}\n                                    style={{marginLeft: '8px'}}\n                                    startIcon={isSaving ? <LoadingSpinner size={24}/> : <CheckIcon />}\n                                    onClick={() => handleSaveNote()}\n                                    color={'primary'}\n                                    variant={'contained'}\n                                >\n                                    {t('str_save')}\n                                </Button>\n                            </div>\n                        </Grid>\n                    </Grid>\n                </div>\n            </Dialog>\n            <TrackedChangesDialog\n                open={openTrackedDialog}\n                onPressNo={(e) => setOpenTrackedDialog(e)}\n                onPressYes={(e) => {\n                    setToState('userPortal', ['openNoteDialog'], false);\n                    setToState('userPortal', ['isEditNote'], false);\n                    setOpenTrackedDialog(e)\n                    setTimeout(() => {\n                        handleReset();\n                    }, 150)\n                }}\n            />\n        </React.Fragment>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        state: state.formReducer.userPortal,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value)),\n    updateState: (stateType, stateName, value) => dispatch(updateState(stateType, stateName, value)),\n    pushToState: (stateType, stateName, value) => dispatch(pushToState(stateType, stateName, value)),\n    deleteFromState: (stateType, stateName, value) => dispatch(deleteFromState(stateType, stateName, value)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CommonNotes)\n\nCommonNotes.defaultProps = {\n    initialIncDone: false,\n\n}\n\nCommonNotes.propTypes = {\n    initialIncDone: PropTypes.bool,\n    mid: PropTypes.number,\n    dataHotelRefNo: PropTypes.number\n\n}\n"]},"metadata":{},"sourceType":"module"}