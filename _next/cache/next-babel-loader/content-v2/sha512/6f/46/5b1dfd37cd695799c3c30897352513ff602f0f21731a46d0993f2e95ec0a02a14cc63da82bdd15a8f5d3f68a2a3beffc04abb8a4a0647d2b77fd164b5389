{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/emp-portal/tabs/Files/index.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Insert, UseOrest, ViewList, Patch, Delete, Upload } from \"@webcms/orest\";\nimport WebCmsGlobal from \"../../../webcms-global\";\nimport { useSelector } from \"react-redux\";\nimport { isErrorMsg, mobileTelNoFormat, OREST_ENDPOINT } from \"../../../../model/orest/constants\";\nimport { Grid, Typography, Dialog, Checkbox, FormControlLabel, Button, Menu, MenuItem, IconButton, DialogTitle, DialogContent, DialogActions } from \"@material-ui/core\";\nimport { useSnackbar } from \"notistack\";\nimport { SLASH } from \"../../../../model/globals\";\nimport useTranslation from \"../../../../lib/translations/hooks/useTranslation\";\nimport renderFormElements, { ELEMENT_TYPES } from \"../../../render-form-elements\";\nimport { required } from \"../../../../state/utils/form\";\nimport AddDialogActions from \"../../../AddDialogActions\";\nimport { LocaleContext } from \"../../../../lib/translations/context/LocaleContext\";\nimport LoadingSpinner from \"../../../LoadingSpinner\";\nimport { helper, orest } from \"../../../../@webcms-globals\";\nimport TrackedChangesDialog from \"../../../TrackedChangesDialog\";\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\nimport MaterialTable, { MTableHeader } from \"material-table\";\nimport MaterialTableLocalization from \"../../../MaterialTableLocalization\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport TableColumnText from \"../../../TableColumnText\";\nimport PopupState, { bindMenu, bindTrigger } from \"material-ui-popup-state\";\nimport { CustomToolTip } from \"../../../user-portal/components/CustomToolTip/CustomToolTip\";\nimport CachedIcon from \"@material-ui/icons/Cached\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport { PhotoCamera } from \"@material-ui/icons\";\nimport { DropzoneDialog } from \"material-ui-dropzone\";\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\nimport Fab from \"@material-ui/core/Fab\";\nimport { PreviewFile } from \"../../../../model/orest/components/RaFile\";\nimport axios from \"axios\";\nimport VisibilityOutlinedIcon from \"@material-ui/icons/VisibilityOutlined\";\nconst VARIANT = 'outlined';\n\nfunction Files(props) {\n  var _fileData$code, _fileData$code2, _fileData$code3, _fileData$code4, _fileData$caption, _fileData$caption2, _fileData$caption3, _fileData$caption4, _fileData$description, _fileData$description2, _fileData$description3, _fileData$description4, _fileData$filetype, _fileData$filetype2, _fileData$filetype3, _fileData$filetype4, _fileData$url, _fileData$url2, _fileData$url3, _fileData$url4;\n\n  //props\n  const {\n    mid\n  } = props; //snackbar\n\n  const {\n    enqueueSnackbar\n  } = useSnackbar(); //context\n\n  const {\n    GENERAL_SETTINGS\n  } = useContext(WebCmsGlobal);\n  const {\n    locale\n  } = useContext(LocaleContext);\n  const {\n    t\n  } = useTranslation();\n  const tableLocalization = MaterialTableLocalization(); //redux state\n\n  const token = useSelector(state => {\n    var _state$orest, _state$orest$currentU, _state$orest$currentU2;\n\n    return (state === null || state === void 0 ? void 0 : (_state$orest = state.orest) === null || _state$orest === void 0 ? void 0 : (_state$orest$currentU = _state$orest.currentUser) === null || _state$orest$currentU === void 0 ? void 0 : (_state$orest$currentU2 = _state$orest$currentU.auth) === null || _state$orest$currentU2 === void 0 ? void 0 : _state$orest$currentU2.access_token) || false;\n  });\n  const hotelRefNo = useSelector(state => {\n    var _state$hotelinfo;\n\n    return (state === null || state === void 0 ? void 0 : (_state$hotelinfo = state.hotelinfo) === null || _state$hotelinfo === void 0 ? void 0 : _state$hotelinfo.currentHotelRefNo) || GENERAL_SETTINGS.HOTELREFNO || false;\n  });\n  const state = useSelector(state => {\n    var _state$orest2, _state$orest2$state, _state$orest2$state$e;\n\n    return (state === null || state === void 0 ? void 0 : (_state$orest2 = state.orest) === null || _state$orest2 === void 0 ? void 0 : (_state$orest2$state = _state$orest2.state) === null || _state$orest2$state === void 0 ? void 0 : (_state$orest2$state$e = _state$orest2$state.emp) === null || _state$orest2$state$e === void 0 ? void 0 : _state$orest2$state$e.mid) || false;\n  }); //locale state\n\n  const initialState = {\n    code: {\n      value: '',\n      isError: false,\n      required: true,\n      helperText: ''\n    },\n    description: {\n      value: '',\n      isError: false,\n      required: true,\n      helperText: ''\n    },\n    filetype: {\n      value: '',\n      isError: false,\n      required: true,\n      helperText: ''\n    },\n    caption: {\n      value: '',\n      isError: false,\n      required: true,\n      helperText: ''\n    },\n    url: {\n      value: '',\n      isError: false,\n      required: true,\n      helperText: ''\n    }\n  };\n  const {\n    0: isLoadingList,\n    1: setIsLoadingList\n  } = useState(false);\n  const {\n    0: allHotels,\n    1: setAllHotels\n  } = useState(false);\n  const {\n    0: fileList,\n    1: setFileList\n  } = useState([]);\n  const {\n    0: openAddDialog,\n    1: setOpenAddDialog\n  } = useState(false);\n  const {\n    0: selectedFileData,\n    1: setSelectedFileData\n  } = useState(null);\n  const {\n    0: selectedGid,\n    1: setSelectedGid\n  } = useState(false);\n  const {\n    0: getData,\n    1: setGetData\n  } = useState(null);\n  const {\n    0: openTrackedDialog,\n    1: setOpenTrackedDialog\n  } = useState(false);\n  const {\n    0: deleteOpenDialog,\n    1: setDeleteOpenDialog\n  } = useState(false);\n  const {\n    0: isDef,\n    1: setIsDef\n  } = useState(false);\n  const {\n    0: isSaving,\n    1: setIsSaving\n  } = useState(false);\n  const {\n    0: fileData,\n    1: setFileData\n  } = useState(initialState);\n  const {\n    0: fileDataBase,\n    1: setFileDataBase\n  } = useState(initialState);\n  const {\n    0: isInitialStateLoad,\n    1: setIsInitialStateLoad\n  } = useState(false);\n  const {\n    0: isDeleting,\n    1: setIsDeleting\n  } = useState(false);\n  const {\n    0: open,\n    1: setOpen\n  } = useState(true);\n  const {\n    0: langFileUploadStatus,\n    1: setLangFileUploadStatus\n  } = useState(false);\n  const {\n    0: taskFileListLoading,\n    1: setLangFileListLoading\n  } = useState(false);\n  const {\n    0: taskFileList,\n    1: setLangFileList\n  } = useState([]);\n  const {\n    0: selectedFileGid,\n    1: setSelectedFileGid\n  } = useState(null);\n  const {\n    0: openPreviewDialog,\n    1: setOpenPreviewDialog\n  } = useState(false);\n  const {\n    0: isFileDeleting,\n    1: setIsFileDeleting\n  } = useState(false);\n  const {\n    0: isFileDownloading,\n    1: setIsFileDownloading\n  } = useState(false);\n  const {\n    0: popupState,\n    1: setPopupState\n  } = useState({});\n  const {\n    0: isPreviewLoading,\n    1: setIsPreviewLoading\n  } = useState(false);\n  const {\n    0: mediaUrl,\n    1: setMediaUrl\n  } = useState('');\n  const {\n    0: fileType,\n    1: setFileType\n  } = useState('');\n\n  const openDialog = () => {\n    setLangFileUploadStatus(true);\n  };\n\n  const openTrackDialog = gid => {\n    setSelectedFileGid(gid);\n    setDeleteOpenDialog(true);\n  };\n\n  const formElements = [{\n    type: ELEMENT_TYPES.textField,\n    id: 'code',\n    name: 'code',\n    value: (_fileData$code = fileData.code) === null || _fileData$code === void 0 ? void 0 : _fileData$code.value,\n    error: (_fileData$code2 = fileData.code) === null || _fileData$code2 === void 0 ? void 0 : _fileData$code2.isError,\n    required: (_fileData$code3 = fileData.code) === null || _fileData$code3 === void 0 ? void 0 : _fileData$code3.isRequired,\n    disabled: isSaving,\n    label: t('str_code'),\n    helperText: (_fileData$code4 = fileData.code) === null || _fileData$code4 === void 0 ? void 0 : _fileData$code4.helperText,\n    onChange: e => handleOnChangeFormElements(e),\n    onBlur: e => handleOnBlurFormElements(e),\n    variant: VARIANT,\n    fullWidth: true,\n    gridProps: {\n      xs: 12,\n      sm: 12\n    }\n  }, {\n    type: ELEMENT_TYPES.textField,\n    id: 'caption',\n    name: 'caption',\n    value: (_fileData$caption = fileData.caption) === null || _fileData$caption === void 0 ? void 0 : _fileData$caption.value,\n    error: (_fileData$caption2 = fileData.caption) === null || _fileData$caption2 === void 0 ? void 0 : _fileData$caption2.isError,\n    required: (_fileData$caption3 = fileData.caption) === null || _fileData$caption3 === void 0 ? void 0 : _fileData$caption3.isRequired,\n    disabled: isSaving,\n    label: t('str_fileDesc'),\n    helperText: (_fileData$caption4 = fileData.caption) === null || _fileData$caption4 === void 0 ? void 0 : _fileData$caption4.helperText,\n    onChange: e => handleOnChangeFormElements(e),\n    onBlur: e => handleOnBlurFormElements(e),\n    variant: VARIANT,\n    fullWidth: true,\n    gridProps: {\n      xs: 12,\n      sm: 12\n    }\n  }, {\n    type: ELEMENT_TYPES.textField,\n    id: 'description',\n    name: 'description',\n    value: (_fileData$description = fileData.description) === null || _fileData$description === void 0 ? void 0 : _fileData$description.value,\n    error: (_fileData$description2 = fileData.description) === null || _fileData$description2 === void 0 ? void 0 : _fileData$description2.isError,\n    required: (_fileData$description3 = fileData.description) === null || _fileData$description3 === void 0 ? void 0 : _fileData$description3.isRequired,\n    disabled: isSaving,\n    label: t('str_description'),\n    helperText: (_fileData$description4 = fileData.description) === null || _fileData$description4 === void 0 ? void 0 : _fileData$description4.helperText,\n    onChange: e => handleOnChangeFormElements(e),\n    onBlur: e => handleOnBlurFormElements(e),\n    variant: VARIANT,\n    fullWidth: true,\n    gridProps: {\n      xs: 12,\n      sm: 12\n    }\n  }, {\n    type: ELEMENT_TYPES.textField,\n    id: 'filetype',\n    name: 'filetype',\n    value: (_fileData$filetype = fileData.filetype) === null || _fileData$filetype === void 0 ? void 0 : _fileData$filetype.value,\n    error: (_fileData$filetype2 = fileData.filetype) === null || _fileData$filetype2 === void 0 ? void 0 : _fileData$filetype2.isError,\n    required: (_fileData$filetype3 = fileData.filetype) === null || _fileData$filetype3 === void 0 ? void 0 : _fileData$filetype3.isRequired,\n    disabled: isSaving,\n    label: t('str_fileType'),\n    helperText: (_fileData$filetype4 = fileData.filetype) === null || _fileData$filetype4 === void 0 ? void 0 : _fileData$filetype4.helperText,\n    onChange: e => handleOnChangeFormElements(e),\n    onBlur: e => handleOnBlurFormElements(e),\n    variant: VARIANT,\n    fullWidth: true,\n    gridProps: {\n      xs: 12,\n      sm: 12\n    }\n  }, {\n    type: ELEMENT_TYPES.textField,\n    id: 'url',\n    name: 'url',\n    value: (_fileData$url = fileData.url) === null || _fileData$url === void 0 ? void 0 : _fileData$url.value,\n    error: (_fileData$url2 = fileData.url) === null || _fileData$url2 === void 0 ? void 0 : _fileData$url2.isError,\n    required: (_fileData$url3 = fileData.url) === null || _fileData$url3 === void 0 ? void 0 : _fileData$url3.isRequired,\n    disabled: isSaving,\n    label: t('str_fileType'),\n    helperText: (_fileData$url4 = fileData.url) === null || _fileData$url4 === void 0 ? void 0 : _fileData$url4.helperText,\n    onChange: e => handleOnChangeFormElements(e),\n    onBlur: e => handleOnBlurFormElements(e),\n    variant: VARIANT,\n    fullWidth: true,\n    gridProps: {\n      xs: 12,\n      sm: 12\n    }\n  }];\n  const fileColumns = [{\n    title: __jsx(Button, {\n      style: {\n        padding: 0,\n        maxWidth: 25,\n        minWidth: 25\n      },\n      disabled: true,\n      color: 'primary',\n      variant: 'text',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }\n    }, __jsx(MoreVertIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }\n    })),\n    render: props => __jsx(TableColumnText, {\n      minWidth: 30,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }\n    }, __jsx(PopupState, {\n      variant: \"popover\",\n      popupId: \"material-table-action-column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }\n    }, popupState => __jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 29\n      }\n    }, __jsx(Button, _extends({\n      style: {\n        padding: 0,\n        maxWidth: 25,\n        minWidth: 25\n      },\n      color: 'primary',\n      variant: 'contained'\n    }, bindTrigger(popupState), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 33\n      }\n    }), __jsx(MoreVertIcon, {\n      size: 'small',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 37\n      }\n    })), __jsx(Menu, _extends({\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"left\"\n      },\n      transformOrigin: {\n        vertical: \"top\",\n        horizontal: \"left\"\n      },\n      getContentAnchorEl: null\n    }, bindMenu(popupState), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 33\n      }\n    }), __jsx(MenuItem, {\n      onClick: () => {\n        setSelectedFileData(props);\n        setSelectedGid((props === null || props === void 0 ? void 0 : props.gid) || false);\n        handleOpenAddDialog(props);\n        popupState.close();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 37\n      }\n    }, __jsx(EditOutlinedIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 42\n      }\n    }), __jsx(Typography, {\n      style: {\n        paddingLeft: '8px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 41\n      }\n    }, t('str_edit'))), __jsx(MenuItem, {\n      variant: \"outlined\",\n      onClick: () => openTrackDialog(props === null || props === void 0 ? void 0 : props.gid),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 37\n      }\n    }, __jsx(DeleteIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 41\n      }\n    }), __jsx(Typography, {\n      style: {\n        paddingLeft: '8px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 41\n      }\n    }, t('str_delete')))))))\n  }, {\n    title: t('str_code'),\n    field: 'code',\n    render: props => __jsx(TableColumnText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 32\n      }\n    }, props === null || props === void 0 ? void 0 : props.code)\n  }, {\n    title: t('str_fileDesc'),\n    field: 'caption',\n    render: props => __jsx(TableColumnText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 32\n      }\n    }, props === null || props === void 0 ? void 0 : props.caption)\n  }, {\n    title: t('str_description'),\n    field: 'description',\n    render: props => __jsx(TableColumnText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 32\n      }\n    }, props === null || props === void 0 ? void 0 : props.description)\n  }, {\n    title: t('str_fileType'),\n    field: 'filetype',\n    render: props => __jsx(TableColumnText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 32\n      }\n    }, props === null || props === void 0 ? void 0 : props.filetype)\n  }, {\n    title: t('str_fileUrl'),\n    field: 'url',\n    render: props => __jsx(TableColumnText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 32\n      }\n    }, props === null || props === void 0 ? void 0 : props.url)\n  }];\n  useEffect(() => {\n    if (token && mid) {\n      getFileList();\n    }\n  }, []);\n  useEffect(() => {\n    let isEffect = true;\n\n    if (isEffect && fileData && getData) {\n      const newClientInitialState = helper.objectMapper(fileData, getData, ['code']);\n      setFileData(newClientInitialState);\n      setFileDataBase(newClientInitialState);\n      setIsInitialStateLoad(true);\n    }\n\n    return () => {\n      isEffect = false;\n    };\n  }, [getData]);\n\n  const handleDeleteItem = gid => {\n    setIsDeleting(true);\n    setDeleteOpenDialog(false);\n    Delete({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.RAFILE,\n      token,\n      gid: gid,\n      params: {\n        hotelrefno: GENERAL_SETTINGS.HOTELREFNO\n      }\n    }).then(res => {\n      if (res.status === 200) {\n        getFileList();\n        enqueueSnackbar(t('str_processCompletedSuccessfully'), {\n          variant: 'success'\n        });\n      } else {\n        var _error$errorMsg, _error$errorMsg2;\n\n        const error = isErrorMsg(res);\n        enqueueSnackbar(((_error$errorMsg = error.errorMsg) === null || _error$errorMsg === void 0 ? void 0 : _error$errorMsg.length) > 50 ? (_error$errorMsg2 = error.errorMsg) === null || _error$errorMsg2 === void 0 ? void 0 : _error$errorMsg2.substring(0, 50) : error.errorMsg, {\n          variant: 'error'\n        });\n        setIsDeleting(false);\n      }\n    });\n  };\n\n  const getFileList = () => {\n    setIsLoadingList(true);\n    ViewList({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.RAFILE,\n      token,\n      params: {\n        query: `masterid:${mid}`,\n        allhotels: allHotels,\n        hotelrefno: hotelRefNo\n      }\n    }).then(res => {\n      setIsLoadingList(false);\n\n      if (res.status === 200) {\n        if (res.data.count > 0) {\n          setFileList(res.data.data);\n        }\n      } else {\n        var _error$errorMsg3, _error$errorMsg4;\n\n        const error = isErrorMsg(res);\n        enqueueSnackbar(((_error$errorMsg3 = error.errorMsg) === null || _error$errorMsg3 === void 0 ? void 0 : _error$errorMsg3.length) > 50 ? (_error$errorMsg4 = error.errorMsg) === null || _error$errorMsg4 === void 0 ? void 0 : _error$errorMsg4.substring(0, 50) : error.errorMsg, {\n          variant: 'error'\n        });\n      }\n    });\n  };\n\n  const handleGetselectedFile = selectedFile => {\n    if (selectedFile) {\n      setIsDef(true);\n      UseOrest({\n        apiUrl: GENERAL_SETTINGS.OREST_URL,\n        endpoint: OREST_ENDPOINT.RAFILE + SLASH + OREST_ENDPOINT.VIEW + SLASH + 'get' + SLASH + selectedFile.gid,\n        token\n      }).then(res => {\n        setIsDef(false);\n\n        if (res.status === 200 && res.data.data) {\n          const data = res.data.data;\n          setGetData(data);\n        }\n      });\n    }\n  };\n\n  const handleDefRecord = () => {\n    setIsDef(true);\n    UseOrest({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.RAFILE + SLASH + OREST_ENDPOINT.DEF,\n      token,\n      params: {\n        hotelrefno: hotelRefNo\n      }\n    }).then(res => {\n      if (res.status === 200 && res.data.count > 0) {\n        const data = Object.assign({}, res.data.data, fileData);\n        setFileData(data);\n        setFileDataBase(data);\n      }\n\n      setIsDef(false);\n    });\n  };\n\n  const handleSave = () => {\n    const data = _objectSpread({}, fileData);\n\n    Object.keys(initialState).map(key => {\n      data[key] = typeof data[key].value === 'object' ? data[key].value ? data[key].value.id : null : data[key].value;\n    });\n\n    if (mid) {\n      setIsSaving(true);\n\n      if (selectedGid) {\n        Patch({\n          apiUrl: GENERAL_SETTINGS.OREST_URL,\n          endpoint: OREST_ENDPOINT.RAFILE,\n          gid: selectedGid,\n          data: data,\n          token\n        }).then(res => {\n          if (res.status === 200) {\n            enqueueSnackbar(t('str_processCompletedSuccessfully'), {\n              variant: 'success'\n            });\n            setOpenAddDialog(false);\n            getFileList();\n            handleReset();\n          } else {\n            const error = isErrorMsg(res);\n            enqueueSnackbar(error.errorMsg, {\n              variant: 'error'\n            });\n          }\n\n          setIsSaving(false);\n        });\n      } else {\n        data.mid = mid;\n        data.hotelrefno = hotelRefNo;\n        Insert({\n          apiUrl: GENERAL_SETTINGS.OREST_URL,\n          endpoint: OREST_ENDPOINT.RAFILE,\n          token,\n          data: data\n        }).then(res => {\n          if (res.status === 200) {\n            enqueueSnackbar(t('str_processCompletedSuccessfully'), {\n              variant: 'success'\n            });\n            setOpenAddDialog(false);\n            getFileList();\n            handleReset();\n          } else {\n            const error = isErrorMsg(res);\n            enqueueSnackbar(error.errorMsg, {\n              variant: 'error'\n            });\n          }\n\n          setIsSaving(false);\n        });\n      }\n    }\n  };\n\n  const handlePreviewFile = (gid, fileUrl, popupState) => {\n    setIsPreviewLoading(true);\n    popupState.close();\n    PreviewFile(GENERAL_SETTINGS, token, gid, fileUrl, hotelRefNo).then(res => {\n      setIsPreviewLoading(false);\n\n      if (res.success) {\n        setMediaUrl(res === null || res === void 0 ? void 0 : res.url);\n        setFileType(res === null || res === void 0 ? void 0 : res.fileType);\n      } else {\n        enqueueSnackbar(t(res === null || res === void 0 ? void 0 : res.errorText), {\n          variant: (res === null || res === void 0 ? void 0 : res.variant) || 'error'\n        });\n      }\n    });\n  };\n\n  const handleTaskFileDownload = (filename, gid, fileUrl, popupState) => {\n    if (fileUrl.includes('http://') || fileUrl.includes('https://')) {\n      popupState.close();\n      const win = window.open(fileUrl, '_blank');\n\n      if (win != null) {\n        win.focus();\n      }\n    } else {\n      setIsFileDownloading(true);\n      axios({\n        url: GENERAL_SETTINGS.OREST_URL + OREST_ENDPOINT.SLASH + OREST_ENDPOINT.TOOLS + OREST_ENDPOINT.SLASH + OREST_ENDPOINT.FILE + OREST_ENDPOINT.SLASH + OREST_ENDPOINT.DOWNLOAD,\n        method: 'get',\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        params: {\n          gid: gid,\n          hotelrefno: hotelRefNo\n        },\n        responseType: 'blob'\n      }).then(response => {\n        setIsFileDownloading(false);\n\n        if (response.status === 200) {\n          const url = window.URL.createObjectURL(new Blob([response.data]));\n          const link = document.createElement('a');\n          link.href = url;\n          link.setAttribute('download', filename.toLowerCase()); //or any other extension\n\n          document.body.appendChild(link);\n          link.click();\n          link.remove();\n          popupState.close();\n          enqueueSnackbar(t('str_selectedDownloadedMsg'), {\n            variant: 'success'\n          });\n        } else {\n          const error = isErrorMsg(response);\n          enqueueSnackbar(t(error.errMsg), {\n            variant: 'error'\n          });\n        }\n      });\n    }\n  };\n\n  const handleOnChangeFormElements = (event, key, isOnBlur) => {\n    const name = key ? key : event.target.name;\n    const value = event !== null && event !== void 0 && event.target ? event.target.value : event;\n\n    if (isOnBlur) {\n      var _fileData$name, _fileData$name2;\n\n      setFileData(_objectSpread(_objectSpread({}, fileData), {}, {\n        [name]: _objectSpread(_objectSpread({}, fileData[name]), {}, {\n          isError: ((_fileData$name = fileData[name]) === null || _fileData$name === void 0 ? void 0 : _fileData$name.isRequired) && !!required(value),\n          helperText: ((_fileData$name2 = fileData[name]) === null || _fileData$name2 === void 0 ? void 0 : _fileData$name2.isRequired) && !!required(value) && t('str_mandatory')\n        })\n      }));\n    } else {\n      var _fileData$name3, _fileData$name4;\n\n      setFileData(_objectSpread(_objectSpread({}, fileData), {}, {\n        [name]: _objectSpread(_objectSpread({}, fileData[name]), {}, {\n          value: value,\n          isError: ((_fileData$name3 = fileData[name]) === null || _fileData$name3 === void 0 ? void 0 : _fileData$name3.isRequired) && !!required(value),\n          helperText: ((_fileData$name4 = fileData[name]) === null || _fileData$name4 === void 0 ? void 0 : _fileData$name4.isRequired) && !!required(value) && t('str_mandatory')\n        })\n      }));\n    }\n  };\n\n  const handleOnBlurFormElements = (event, key) => {\n    handleOnChangeFormElements(event, key, true);\n  };\n\n  const handleOpenAddDialog = (selectedFile = false) => {\n    if (selectedFile) {\n      handleGetselectedFile(selectedFile);\n    } else {\n      handleDefRecord();\n    }\n\n    setOpenAddDialog(true);\n  };\n\n  const handleCloseDialog = () => {\n    if (JSON.stringify(fileData) !== JSON.stringify(fileDataBase)) {\n      setOpenTrackedDialog(true);\n    } else {\n      setOpenAddDialog(false);\n      handleReset();\n    }\n  };\n\n  const handleReset = () => {\n    setTimeout(() => {\n      setIsInitialStateLoad(false);\n      setGetData(null);\n      setFileData(initialState);\n      setFileDataBase(initialState);\n      setSelectedFileData(null);\n      setSelectedGid(null);\n    }, 100);\n  };\n\n  const getLangFileList = () => {\n    setLangFileListLoading(true);\n    ViewList({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.RAFILE,\n      token,\n      params: {\n        query: `masterid:${state},isactive:true`,\n        limit: 100,\n        hotelrefno: hotelRefNo\n      }\n    }).then(r => {\n      if (r.status === 200 && r.data.data.length > 0) {\n        setLangFileList(r.data.data);\n        setLangFileListLoading(false);\n      } else {\n        setLangFileList([]);\n        setLangFileListLoading(false);\n      }\n    });\n  };\n\n  const handleLangFileUpload = file => {\n    Upload({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      token,\n      params: {\n        masterid: state,\n        orsactive: true,\n        hotelrefno: hotelRefNo,\n        quality: \"0.1F\"\n      },\n      files: file\n    }).then(r => {\n      setLangFileUploadStatus(false);\n\n      if (r.status === 200) {\n        getLangFileList();\n        enqueueSnackbar(t('str_haveBeenUploadedMsg'), {\n          variant: 'success'\n        });\n      } else {\n        const error = isErrorMsg(r);\n        enqueueSnackbar(t(error.errMsg), {\n          variant: 'error'\n        });\n      }\n    });\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 9\n    }\n  }, __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 4,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 21\n    }\n  }, __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 25\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 611,\n      columnNumber: 29\n    }\n  }, __jsx(CustomToolTip, {\n    title: t('str_refresh'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 612,\n      columnNumber: 33\n    }\n  }, __jsx(IconButton, {\n    onClick: () => getFileList(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 613,\n      columnNumber: 37\n    }\n  }, __jsx(CachedIcon, {\n    style: {\n      color: \"#F16A4B\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 41\n    }\n  })))))), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    sm: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 622,\n      columnNumber: 21\n    }\n  }), __jsx(Grid, {\n    item: true,\n    xs: 2,\n    sm: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 21\n    }\n  }, __jsx(Fab, {\n    variant: \"extended\",\n    size: \"small\",\n    onClick: openDialog,\n    color: \"primary\",\n    style: {\n      marginLeft: 50,\n      marginTop: 7\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 25\n    }\n  }, __jsx(CloudUploadIcon, {\n    style: {\n      marginRight: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 632,\n      columnNumber: 29\n    }\n  }), t('str_upload')), __jsx(DropzoneDialog, {\n    open: langFileUploadStatus,\n    onSave: handleLangFileUpload,\n    acceptedFiles: ['image/jpeg', 'image/png', 'image/bmp', 'image/gif', 'video/mp4', 'application/zip'],\n    showPreviews: true,\n    filesLimit: 3,\n    maxFileSize: 5000000,\n    onClose: () => setLangFileUploadStatus(false),\n    submitButtonText: t('str_save'),\n    cancelButtonText: t('str_cancel'),\n    dialogTitle: t('str_uploadAFileCertificateFile'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 25\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 655,\n      columnNumber: 21\n    }\n  }, __jsx(MaterialTable, {\n    isLoading: isLoadingList,\n    columns: fileColumns,\n    data: fileList,\n    localization: tableLocalization,\n    options: {\n      headerStyle: {\n        cursor: 'default',\n        fontWeight: \"bold\",\n        fontSize: \"12px\",\n        color: \"#A3A6B4\",\n        textTransform: \"uppercase\",\n        backgroundColor: \"#F5F6FA\",\n        whiteSpace: 'nowrap',\n        borderLeft: '1px solid #FFF'\n      },\n      cellStyle: {\n        whiteSpace: 'nowrap',\n        borderLeft: '1px solid rgba(224, 224, 224, 1)',\n        fontSize: '13px'\n      },\n      toolbar: false,\n      selection: false,\n      sorting: false,\n      search: false,\n      actionsColumnIndex: 1,\n      selectionColumnIndex: 1\n    },\n    components: {\n      Header: props => {\n        const overrideProps = _objectSpread({}, props);\n\n        overrideProps.draggable = false;\n        return __jsx(MTableHeader, _extends({}, overrideProps, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 689,\n            columnNumber: 41\n          }\n        }));\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 656,\n      columnNumber: 25\n    }\n  }))), __jsx(Dialog, {\n    open: openAddDialog,\n    maxWidth: 'sm',\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 696,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    style: {\n      padding: 24\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 697,\n      columnNumber: 21\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 698,\n      columnNumber: 25\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 699,\n      columnNumber: 29\n    }\n  }, __jsx(Typography, {\n    style: {\n      fontWeight: '600',\n      fontSize: '18px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 700,\n      columnNumber: 33\n    }\n  }, selectedFileData ? t('str_editFile') : t('str_addFile'))), isDef ? __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 707,\n      columnNumber: 37\n    }\n  }, __jsx(LoadingSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 708,\n      columnNumber: 41\n    }\n  })) : __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 711,\n      columnNumber: 37\n    }\n  }, formElements.map((item, index) => __jsx(Grid, _extends({\n    key: index,\n    item: true\n  }, item.gridProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 714,\n      columnNumber: 49\n    }\n  }), renderFormElements(item))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 719,\n      columnNumber: 41\n    }\n  }, __jsx(AddDialogActions, {\n    disabled: isSaving,\n    loading: isSaving,\n    disabledSave: fileData.code.value.length <= 0,\n    toolTipTitle: __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 725,\n        columnNumber: 53\n      }\n    }, __jsx(Typography, {\n      style: {\n        fontWeight: '600',\n        fontSize: 'inherit'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 726,\n        columnNumber: 57\n      }\n    }, t('str_invalidFields')), fileData.code.isError || required(fileData.code.value) && __jsx(Typography, {\n      style: {\n        fontSize: 'inherit'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 732,\n        columnNumber: 65\n      }\n    }, t('str_language'))),\n    onCancelClick: handleCloseDialog,\n    onSaveClick: handleSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 720,\n      columnNumber: 45\n    }\n  })))))), __jsx(TrackedChangesDialog, {\n    open: openTrackedDialog || deleteOpenDialog,\n    onPressNo: e => {\n      setOpenTrackedDialog(e);\n      setDeleteOpenDialog(e);\n    },\n    dialogTitle: deleteOpenDialog ? t('str_delete') : false,\n    dialogDesc: deleteOpenDialog ? t('str_alertDeleteTitle') : false,\n    onPressYes: e => {\n      if (deleteOpenDialog) {\n        handleDeleteItem(selectedFileGid);\n      } else {\n        setOpenTrackedDialog(e);\n        setOpenAddDialog(false);\n        setDeleteOpenDialog(e);\n        handleReset();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 748,\n      columnNumber: 17\n    }\n  })));\n}\n\nexport default Files;","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/emp-portal/tabs/Files/index.js"],"names":["React","useState","useEffect","useContext","Insert","UseOrest","ViewList","Patch","Delete","Upload","WebCmsGlobal","useSelector","isErrorMsg","mobileTelNoFormat","OREST_ENDPOINT","Grid","Typography","Dialog","Checkbox","FormControlLabel","Button","Menu","MenuItem","IconButton","DialogTitle","DialogContent","DialogActions","useSnackbar","SLASH","useTranslation","renderFormElements","ELEMENT_TYPES","required","AddDialogActions","LocaleContext","LoadingSpinner","helper","orest","TrackedChangesDialog","EditOutlinedIcon","MaterialTable","MTableHeader","MaterialTableLocalization","MoreVertIcon","TableColumnText","PopupState","bindMenu","bindTrigger","CustomToolTip","CachedIcon","AddIcon","DeleteIcon","DialogContentText","CloseIcon","CheckIcon","PhotoCamera","DropzoneDialog","CloudUploadIcon","Fab","PreviewFile","axios","VisibilityOutlinedIcon","VARIANT","Files","props","mid","enqueueSnackbar","GENERAL_SETTINGS","locale","t","tableLocalization","token","state","currentUser","auth","access_token","hotelRefNo","hotelinfo","currentHotelRefNo","HOTELREFNO","emp","initialState","code","value","isError","helperText","description","filetype","caption","url","isLoadingList","setIsLoadingList","allHotels","setAllHotels","fileList","setFileList","openAddDialog","setOpenAddDialog","selectedFileData","setSelectedFileData","selectedGid","setSelectedGid","getData","setGetData","openTrackedDialog","setOpenTrackedDialog","deleteOpenDialog","setDeleteOpenDialog","isDef","setIsDef","isSaving","setIsSaving","fileData","setFileData","fileDataBase","setFileDataBase","isInitialStateLoad","setIsInitialStateLoad","isDeleting","setIsDeleting","open","setOpen","langFileUploadStatus","setLangFileUploadStatus","taskFileListLoading","setLangFileListLoading","taskFileList","setLangFileList","selectedFileGid","setSelectedFileGid","openPreviewDialog","setOpenPreviewDialog","isFileDeleting","setIsFileDeleting","isFileDownloading","setIsFileDownloading","popupState","setPopupState","isPreviewLoading","setIsPreviewLoading","mediaUrl","setMediaUrl","fileType","setFileType","openDialog","openTrackDialog","gid","formElements","type","textField","id","name","error","isRequired","disabled","label","onChange","e","handleOnChangeFormElements","onBlur","handleOnBlurFormElements","variant","fullWidth","gridProps","xs","sm","fileColumns","title","padding","maxWidth","minWidth","render","vertical","horizontal","handleOpenAddDialog","close","paddingLeft","field","getFileList","isEffect","newClientInitialState","objectMapper","handleDeleteItem","apiUrl","OREST_URL","endpoint","RAFILE","params","hotelrefno","then","res","status","errorMsg","length","substring","query","allhotels","data","count","handleGetselectedFile","selectedFile","VIEW","handleDefRecord","DEF","Object","assign","handleSave","keys","map","key","handleReset","handlePreviewFile","fileUrl","success","errorText","handleTaskFileDownload","filename","includes","win","window","focus","TOOLS","FILE","DOWNLOAD","method","headers","Authorization","responseType","response","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","toLowerCase","body","appendChild","click","remove","errMsg","event","isOnBlur","target","handleCloseDialog","JSON","stringify","setTimeout","getLangFileList","limit","r","handleLangFileUpload","file","masterid","orsactive","quality","files","color","marginLeft","marginTop","marginRight","headerStyle","cursor","fontWeight","fontSize","textTransform","backgroundColor","whiteSpace","borderLeft","cellStyle","toolbar","selection","sorting","search","actionsColumnIndex","selectionColumnIndex","Header","overrideProps","draggable","item","index"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext} from 'react';\nimport {Insert, UseOrest, ViewList, Patch, Delete, Upload} from \"@webcms/orest\";\nimport WebCmsGlobal from \"../../../webcms-global\";\nimport {useSelector} from \"react-redux\";\nimport {isErrorMsg, mobileTelNoFormat, OREST_ENDPOINT} from \"../../../../model/orest/constants\";\nimport {\n    Grid,\n    Typography,\n    Dialog,\n    Checkbox, FormControlLabel, Button, Menu, MenuItem, IconButton, DialogTitle, DialogContent, DialogActions\n} from \"@material-ui/core\";\nimport {useSnackbar} from \"notistack\";\nimport {SLASH} from \"../../../../model/globals\";\nimport useTranslation from \"../../../../lib/translations/hooks/useTranslation\";\nimport renderFormElements, {ELEMENT_TYPES} from \"../../../render-form-elements\";\nimport {required} from \"../../../../state/utils/form\";\nimport AddDialogActions from \"../../../AddDialogActions\";\nimport {LocaleContext} from \"../../../../lib/translations/context/LocaleContext\";\nimport LoadingSpinner from \"../../../LoadingSpinner\";\nimport {helper, orest} from \"../../../../@webcms-globals\";\nimport TrackedChangesDialog from \"../../../TrackedChangesDialog\";\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\nimport MaterialTable, {MTableHeader} from \"material-table\";\nimport MaterialTableLocalization from \"../../../MaterialTableLocalization\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport TableColumnText from \"../../../TableColumnText\";\nimport PopupState, {bindMenu, bindTrigger} from \"material-ui-popup-state\";\nimport {CustomToolTip} from \"../../../user-portal/components/CustomToolTip/CustomToolTip\";\nimport CachedIcon from \"@material-ui/icons/Cached\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport {PhotoCamera} from \"@material-ui/icons\";\nimport {DropzoneDialog} from \"material-ui-dropzone\";\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\nimport Fab from \"@material-ui/core/Fab\";\nimport {PreviewFile} from \"../../../../model/orest/components/RaFile\";\nimport axios from \"axios\";\nimport VisibilityOutlinedIcon from \"@material-ui/icons/VisibilityOutlined\";\n\nconst VARIANT = 'outlined'\n\nfunction Files(props) {\n\n    //props\n    const {mid} = props\n\n    //snackbar\n    const {enqueueSnackbar} = useSnackbar();\n\n    //context\n    const {GENERAL_SETTINGS} = useContext(WebCmsGlobal)\n    const {locale} = useContext(LocaleContext)\n    const {t} = useTranslation()\n\n    const tableLocalization = MaterialTableLocalization();\n\n    //redux state\n    const token = useSelector((state) => state?.orest?.currentUser?.auth?.access_token || false)\n    const hotelRefNo = useSelector((state) => state?.hotelinfo?.currentHotelRefNo || GENERAL_SETTINGS.HOTELREFNO || false)\n    const state = useSelector((state) => state?.orest?.state?.emp?.mid || false)\n\n    //locale state\n    const initialState = {\n        code: {value: '', isError: false, required: true, helperText: ''},\n        description: {value: '', isError: false, required: true, helperText: ''},\n        filetype: {value: '', isError: false, required: true, helperText: ''},\n        caption: {value: '', isError: false, required: true, helperText: ''},\n        url: {value: '', isError: false, required: true, helperText: ''},\n    }\n\n    const [isLoadingList, setIsLoadingList] = useState(false)\n    const [allHotels, setAllHotels] = useState(false)\n    const [fileList, setFileList] = useState([])\n    const [openAddDialog, setOpenAddDialog] = useState(false);\n\n    const [selectedFileData, setSelectedFileData] = useState(null)\n    const [selectedGid, setSelectedGid] = useState(false)\n    const [getData, setGetData] = useState(null)\n    const [openTrackedDialog, setOpenTrackedDialog] = useState(false);\n    const [deleteOpenDialog, setDeleteOpenDialog] = useState(false);\n    const [isDef, setIsDef] = useState(false)\n    const [isSaving, setIsSaving] = useState(false)\n    const [fileData, setFileData] = useState(initialState)\n    const [fileDataBase, setFileDataBase] = useState(initialState)\n    const [isInitialStateLoad, setIsInitialStateLoad] = useState(false)\n    const [isDeleting, setIsDeleting] = useState(false)\n    const [open, setOpen] = useState(true);\n    const [langFileUploadStatus, setLangFileUploadStatus] = useState(false)\n    const [taskFileListLoading, setLangFileListLoading] = useState(false)\n    const [taskFileList, setLangFileList] = useState([])\n    const [selectedFileGid, setSelectedFileGid] = useState(null)\n    const [openPreviewDialog, setOpenPreviewDialog] = useState(false);\n    const [isFileDeleting, setIsFileDeleting] = useState(false);\n    const [isFileDownloading, setIsFileDownloading] = useState(false);\n    const [popupState, setPopupState] = useState({});\n    const [isPreviewLoading, setIsPreviewLoading] = useState(false);\n    const [mediaUrl, setMediaUrl] = useState('');\n    const [fileType, setFileType] = useState('');\n\n    const openDialog = () => {\n        setLangFileUploadStatus(true)\n    }\n\n    const openTrackDialog = (gid) => {\n        setSelectedFileGid(gid)\n        setDeleteOpenDialog(true)\n    }\n\n    const formElements = [\n        {\n            type: ELEMENT_TYPES.textField,\n            id: 'code',\n            name: 'code',\n            value: fileData.code?.value,\n            error: fileData.code?.isError,\n            required: fileData.code?.isRequired,\n            disabled: isSaving,\n            label: t('str_code'),\n            helperText: fileData.code?.helperText,\n            onChange: (e) => handleOnChangeFormElements(e),\n            onBlur: (e) => handleOnBlurFormElements(e),\n            variant: VARIANT,\n            fullWidth: true,\n            gridProps: {xs: 12, sm: 12}\n        },\n        {\n            type: ELEMENT_TYPES.textField,\n            id: 'caption',\n            name: 'caption',\n            value: fileData.caption?.value,\n            error: fileData.caption?.isError,\n            required: fileData.caption?.isRequired,\n            disabled: isSaving,\n            label: t('str_fileDesc'),\n            helperText: fileData.caption?.helperText,\n            onChange: (e) => handleOnChangeFormElements(e),\n            onBlur: (e) => handleOnBlurFormElements(e),\n            variant: VARIANT,\n            fullWidth: true,\n            gridProps: {xs: 12, sm: 12}\n        },\n        {\n            type: ELEMENT_TYPES.textField,\n            id: 'description',\n            name: 'description',\n            value: fileData.description?.value,\n            error: fileData.description?.isError,\n            required: fileData.description?.isRequired,\n            disabled: isSaving,\n            label: t('str_description'),\n            helperText: fileData.description?.helperText,\n            onChange: (e) => handleOnChangeFormElements(e),\n            onBlur: (e) => handleOnBlurFormElements(e),\n            variant: VARIANT,\n            fullWidth: true,\n            gridProps: {xs: 12, sm: 12}\n        },\n        {\n            type: ELEMENT_TYPES.textField,\n            id: 'filetype',\n            name: 'filetype',\n            value: fileData.filetype?.value,\n            error: fileData.filetype?.isError,\n            required: fileData.filetype?.isRequired,\n            disabled: isSaving,\n            label: t('str_fileType'),\n            helperText: fileData.filetype?.helperText,\n            onChange: (e) => handleOnChangeFormElements(e),\n            onBlur: (e) => handleOnBlurFormElements(e),\n            variant: VARIANT,\n            fullWidth: true,\n            gridProps: {xs: 12, sm: 12}\n        },\n        {\n            type: ELEMENT_TYPES.textField,\n            id: 'url',\n            name: 'url',\n            value: fileData.url?.value,\n            error: fileData.url?.isError,\n            required: fileData.url?.isRequired,\n            disabled: isSaving,\n            label: t('str_fileType'),\n            helperText: fileData.url?.helperText,\n            onChange: (e) => handleOnChangeFormElements(e),\n            onBlur: (e) => handleOnBlurFormElements(e),\n            variant: VARIANT,\n            fullWidth: true,\n            gridProps: {xs: 12, sm: 12}\n        }\n    ]\n\n    const fileColumns = [\n        {\n            title: (\n                <Button\n                    style={{padding: 0, maxWidth: 25, minWidth: 25}}\n                    disabled\n                    color={'primary'}\n                    variant={'text'}\n                >\n                    <MoreVertIcon/>\n                </Button>\n            ),\n            render: props => (\n                <TableColumnText minWidth={30}>\n                    <PopupState variant=\"popover\" popupId=\"material-table-action-column\">\n                        {(popupState) => (\n                            <React.Fragment>\n                                <Button\n                                    style={{padding: 0, maxWidth: 25, minWidth: 25}}\n                                    color={'primary'}\n                                    variant={'contained'}\n                                    {...bindTrigger(popupState)}\n                                >\n                                    <MoreVertIcon size={'small'}/>\n                                </Button>\n                                <Menu\n                                    anchorOrigin={{\n                                        vertical: \"bottom\",\n                                        horizontal: \"left\"\n                                    }}\n                                    transformOrigin={{\n                                        vertical: \"top\",\n                                        horizontal: \"left\"\n                                    }}\n                                    getContentAnchorEl={null}\n                                    {...bindMenu(popupState)}\n                                >\n                                    <MenuItem\n                                        onClick={() => {\n                                            setSelectedFileData(props)\n                                            setSelectedGid(props?.gid || false)\n                                            handleOpenAddDialog(props)\n                                            popupState.close();\n                                        }}\n                                    >\n                                        {<EditOutlinedIcon/>}\n                                        <Typography style={{paddingLeft: '8px'}}>{t('str_edit')}</Typography>\n                                    </MenuItem>\n                                    <MenuItem\n                                        variant=\"outlined\" onClick={() => openTrackDialog(props?.gid)}\n\n                                    >\n                                        <DeleteIcon/>\n                                        <Typography style={{paddingLeft: '8px'}}>{t('str_delete')}</Typography>\n                                    </MenuItem>\n                                </Menu>\n                            </React.Fragment>\n                        )}\n                    </PopupState>\n                </TableColumnText>\n            )\n        },\n        {\n            title: t('str_code'),\n            field: 'code',\n            render: (props) => <TableColumnText>{props?.code}</TableColumnText>\n        },\n        {\n            title: t('str_fileDesc'),\n            field: 'caption',\n            render: (props) => <TableColumnText>{props?.caption}</TableColumnText>\n        },\n        {\n            title: t('str_description'),\n            field: 'description',\n            render: (props) => <TableColumnText>{props?.description}</TableColumnText>\n        },\n        {\n            title: t('str_fileType'),\n            field: 'filetype',\n            render: (props) => <TableColumnText>{props?.filetype}</TableColumnText>\n        },\n        {\n            title: t('str_fileUrl'),\n            field: 'url',\n            render: (props) => <TableColumnText>{props?.url}</TableColumnText>\n        }\n    ]\n\n    useEffect(() => {\n        if (token && mid) {\n            getFileList()\n        }\n    }, [])\n\n    useEffect(() => {\n        let isEffect = true\n        if (isEffect && fileData && getData) {\n            const newClientInitialState = helper.objectMapper(fileData, getData, ['code'])\n            setFileData(newClientInitialState)\n            setFileDataBase(newClientInitialState)\n            setIsInitialStateLoad(true)\n        }\n\n        return () => {\n            isEffect = false\n        }\n\n    }, [getData])\n\n\n    const handleDeleteItem = (gid) => {\n        setIsDeleting(true)\n        setDeleteOpenDialog(false)\n        Delete({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.RAFILE,\n            token,\n            gid: gid,\n            params: {\n                hotelrefno: GENERAL_SETTINGS.HOTELREFNO,\n            }\n        }).then((res) => {\n            if (res.status === 200) {\n                getFileList()\n                enqueueSnackbar(t('str_processCompletedSuccessfully'), {variant: 'success'})\n            } else {\n                const error = isErrorMsg(res)\n                enqueueSnackbar(error.errorMsg?.length > 50 ? error.errorMsg?.substring(0, 50) : error.errorMsg, {variant: 'error'})\n                setIsDeleting(false)\n            }\n        })\n    }\n\n    const getFileList = () => {\n        setIsLoadingList(true)\n        ViewList({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.RAFILE,\n            token,\n            params: {\n                query: `masterid:${mid}`,\n                allhotels: allHotels,\n                hotelrefno: hotelRefNo\n            }\n        }).then(res => {\n            setIsLoadingList(false)\n            if (res.status === 200) {\n                if (res.data.count > 0) {\n                    setFileList(res.data.data)\n                }\n            } else {\n                const error = isErrorMsg(res)\n                enqueueSnackbar(error.errorMsg?.length > 50 ? error.errorMsg?.substring(0, 50) : error.errorMsg, {variant: 'error'})\n            }\n        })\n    }\n\n    const handleGetselectedFile = (selectedFile) => {\n        if (selectedFile) {\n            setIsDef(true)\n            UseOrest({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: OREST_ENDPOINT.RAFILE + SLASH + OREST_ENDPOINT.VIEW + SLASH + 'get' + SLASH + selectedFile.gid,\n                token\n            }).then(res => {\n                setIsDef(false)\n                if (res.status === 200 && res.data.data) {\n                    const data = res.data.data\n                    setGetData(data)\n                }\n            })\n        }\n    }\n\n    const handleDefRecord = () => {\n        setIsDef(true)\n        UseOrest({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.RAFILE + SLASH + OREST_ENDPOINT.DEF,\n            token,\n            params: {\n                hotelrefno: hotelRefNo\n            }\n        }).then(res => {\n            if (res.status === 200 && res.data.count > 0) {\n                const data = Object.assign({}, res.data.data, fileData)\n                setFileData(data)\n                setFileDataBase(data)\n            }\n            setIsDef(false)\n        })\n    }\n\n    const handleSave = () => {\n        const data = {...fileData}\n        Object.keys(initialState).map((key) => {\n            data[key] = typeof data[key].value === 'object' ? data[key].value ? data[key].value.id : null : data[key].value\n        })\n        if (mid) {\n            setIsSaving(true)\n            if (selectedGid) {\n                Patch({\n                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                    endpoint: OREST_ENDPOINT.RAFILE,\n                    gid: selectedGid,\n                    data: data,\n                    token\n                }).then(res => {\n                    if (res.status === 200) {\n                        enqueueSnackbar(t('str_processCompletedSuccessfully'), {variant: 'success'})\n                        setOpenAddDialog(false)\n                        getFileList()\n                        handleReset()\n                    } else {\n                        const error = isErrorMsg(res)\n                        enqueueSnackbar(error.errorMsg, {variant: 'error'})\n                    }\n                    setIsSaving(false)\n                })\n            } else {\n                data.mid = mid\n                data.hotelrefno = hotelRefNo\n                Insert({\n                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                    endpoint: OREST_ENDPOINT.RAFILE,\n                    token,\n                    data: data\n                }).then(res => {\n                    if (res.status === 200) {\n                        enqueueSnackbar(t('str_processCompletedSuccessfully'), {variant: 'success'})\n                        setOpenAddDialog(false)\n                        getFileList()\n                        handleReset()\n                    } else {\n                        const error = isErrorMsg(res)\n                        enqueueSnackbar(error.errorMsg, {variant: 'error'})\n                    }\n                    setIsSaving(false)\n                })\n            }\n        }\n    }\n\n    const handlePreviewFile = (gid, fileUrl, popupState) => {\n        setIsPreviewLoading(true);\n        popupState.close();\n        PreviewFile(GENERAL_SETTINGS, token, gid, fileUrl, hotelRefNo).then(res => {\n            setIsPreviewLoading(false);\n            if (res.success) {\n                setMediaUrl(res?.url);\n                setFileType(res?.fileType)\n            } else {\n                enqueueSnackbar(t(res?.errorText), {variant: res?.variant || 'error'})\n            }\n        })\n    }\n\n    const handleTaskFileDownload = (filename, gid, fileUrl, popupState) => {\n        if (fileUrl.includes('http://') || fileUrl.includes('https://')) {\n            popupState.close();\n            const win = window.open(fileUrl, '_blank');\n            if (win != null) {\n                win.focus();\n            }\n        } else {\n            setIsFileDownloading(true);\n            axios({\n                url:\n                    GENERAL_SETTINGS.OREST_URL +\n                    OREST_ENDPOINT.SLASH +\n                    OREST_ENDPOINT.TOOLS +\n                    OREST_ENDPOINT.SLASH +\n                    OREST_ENDPOINT.FILE +\n                    OREST_ENDPOINT.SLASH +\n                    OREST_ENDPOINT.DOWNLOAD,\n                method: 'get',\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                },\n                params: {\n                    gid: gid,\n                    hotelrefno: hotelRefNo,\n                },\n                responseType: 'blob',\n            }).then((response) => {\n                setIsFileDownloading(false);\n                if (response.status === 200) {\n                    const url = window.URL.createObjectURL(new Blob([response.data]))\n                    const link = document.createElement('a')\n                    link.href = url\n                    link.setAttribute('download', filename.toLowerCase()) //or any other extension\n                    document.body.appendChild(link)\n                    link.click()\n                    link.remove()\n                    popupState.close();\n                    enqueueSnackbar(t('str_selectedDownloadedMsg'), {variant: 'success'})\n                } else {\n                    const error = isErrorMsg(response)\n                    enqueueSnackbar(t(error.errMsg), {variant: 'error'})\n                }\n            })\n        }\n    }\n\n    const handleOnChangeFormElements = (event, key, isOnBlur) => {\n        const name = key ? key : event.target.name\n        const value = event?.target ? event.target.value : event\n\n        if (isOnBlur) {\n            setFileData({\n                ...fileData,\n                [name]: {\n                    ...fileData[name],\n                    isError: fileData[name]?.isRequired && !!required(value),\n                    helperText: fileData[name]?.isRequired && !!required(value) && t('str_mandatory'),\n                }\n            })\n        } else {\n            setFileData({\n                ...fileData,\n                [name]: {\n                    ...fileData[name],\n                    value: value,\n                    isError: fileData[name]?.isRequired && !!required(value),\n                    helperText: fileData[name]?.isRequired && !!required(value) && t('str_mandatory'),\n                }\n            })\n        }\n    }\n\n    const handleOnBlurFormElements = (event, key) => {\n        handleOnChangeFormElements(event, key, true)\n    }\n\n    const handleOpenAddDialog = (selectedFile = false) => {\n        if (selectedFile) {\n            handleGetselectedFile(selectedFile)\n        } else {\n            handleDefRecord()\n        }\n        setOpenAddDialog(true)\n    }\n\n    const handleCloseDialog = () => {\n        if (JSON.stringify(fileData) !== JSON.stringify(fileDataBase)) {\n            setOpenTrackedDialog(true)\n        } else {\n            setOpenAddDialog(false)\n            handleReset()\n        }\n    }\n\n    const handleReset = () => {\n        setTimeout(() => {\n            setIsInitialStateLoad(false)\n            setGetData(null)\n            setFileData(initialState)\n            setFileDataBase(initialState)\n            setSelectedFileData(null)\n            setSelectedGid(null)\n        }, 100)\n    }\n\n    const getLangFileList = () => {\n        setLangFileListLoading(true)\n        ViewList({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.RAFILE,\n            token,\n            params: {\n                query: `masterid:${state},isactive:true`,\n                limit: 100,\n                hotelrefno: hotelRefNo,\n            },\n        }).then((r) => {\n            if (r.status === 200 && r.data.data.length > 0) {\n                setLangFileList(r.data.data)\n                setLangFileListLoading(false)\n            } else {\n                setLangFileList([])\n                setLangFileListLoading(false)\n            }\n        })\n    }\n\n    const handleLangFileUpload = (file) => {\n        Upload({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            token,\n            params: {\n                masterid: state,\n                orsactive: true,\n                hotelrefno: hotelRefNo,\n                quality: \"0.1F\"\n            },\n            files: file,\n        }).then((r) => {\n            setLangFileUploadStatus(false)\n            if (r.status === 200) {\n                getLangFileList()\n                enqueueSnackbar(t('str_haveBeenUploadedMsg'), {variant: 'success'})\n            } else {\n                const error = isErrorMsg(r);\n                enqueueSnackbar(t(error.errMsg), {variant: 'error'})\n            }\n        })\n    }\n\n    return (\n        <div>\n            <React.Fragment>\n                <Grid container>\n                    <Grid item xs={4} sm={3}>\n                        <Grid container>\n                            <Grid item xs={6} sm={3}>\n                                <CustomToolTip title={t('str_refresh')}>\n                                    <IconButton\n                                        onClick={() => getFileList()}\n                                    >\n                                        <CachedIcon style={{color: \"#F16A4B\"}}/>\n                                    </IconButton>\n                                </CustomToolTip>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={6} sm={7}>\n                    </Grid>\n                    <Grid item xs={2} sm={2}>\n                        <Fab\n                            variant=\"extended\"\n                            size=\"small\"\n                            onClick={openDialog}\n                            color=\"primary\"\n                            style={{marginLeft: 50, marginTop: 7}}\n                        >\n                            <CloudUploadIcon style={{marginRight: 10}}/>\n                            {t('str_upload')}\n                        </Fab>\n                        <DropzoneDialog\n                            open={langFileUploadStatus}\n                            onSave={handleLangFileUpload}\n                            acceptedFiles={[\n                                'image/jpeg',\n                                'image/png',\n                                'image/bmp',\n                                'image/gif',\n                                'video/mp4',\n                                'application/zip',\n                            ]}\n                            showPreviews={true}\n                            filesLimit={3}\n                            maxFileSize={5000000}\n                            onClose={() => setLangFileUploadStatus(false)}\n                            submitButtonText={t('str_save')}\n                            cancelButtonText={t('str_cancel')}\n                            dialogTitle={t('str_uploadAFileCertificateFile')}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <MaterialTable\n                            isLoading={isLoadingList}\n                            columns={fileColumns}\n                            data={fileList}\n                            localization={tableLocalization}\n                            options={{\n                                headerStyle: {\n                                    cursor: 'default',\n                                    fontWeight: \"bold\",\n                                    fontSize: \"12px\",\n                                    color: \"#A3A6B4\",\n                                    textTransform: \"uppercase\",\n                                    backgroundColor: \"#F5F6FA\",\n                                    whiteSpace: 'nowrap',\n                                    borderLeft: '1px solid #FFF',\n                                },\n                                cellStyle: {\n                                    whiteSpace: 'nowrap',\n                                    borderLeft: '1px solid rgba(224, 224, 224, 1)',\n                                    fontSize: '13px',\n                                },\n                                toolbar: false,\n                                selection: false,\n                                sorting: false,\n                                search: false,\n                                actionsColumnIndex: 1,\n                                selectionColumnIndex: 1\n                            }}\n                            components={{\n                                Header: (props) => {\n                                    const overrideProps = {...props}\n                                    overrideProps.draggable = false\n                                    return (\n                                        <MTableHeader  {...overrideProps}/>\n                                    )\n                                },\n                            }}\n                        />\n                    </Grid>\n                </Grid>\n                <Dialog open={openAddDialog} maxWidth={'sm'} fullWidth>\n                    <div style={{padding: 24}}>\n                        <Grid container spacing={3}>\n                            <Grid item xs={12}>\n                                <Typography style={{\n                                    fontWeight: '600',\n                                    fontSize: '18px'\n                                }}>{selectedFileData ? t('str_editFile') : t('str_addFile')}</Typography>\n                            </Grid>\n                            {\n                                isDef ? (\n                                    <Grid item xs={12}>\n                                        <LoadingSpinner/>\n                                    </Grid>\n                                ) : (\n                                    <React.Fragment>\n                                        {\n                                            formElements.map((item, index) => (\n                                                <Grid key={index} item {...item.gridProps}>\n                                                    {renderFormElements(item)}\n                                                </Grid>\n                                            ))\n                                        }\n                                        <Grid item xs={12}>\n                                            <AddDialogActions\n                                                disabled={isSaving}\n                                                loading={isSaving}\n                                                disabledSave={fileData.code.value.length <= 0}\n                                                toolTipTitle={\n                                                    <div>\n                                                        <Typography style={{\n                                                            fontWeight: '600',\n                                                            fontSize: 'inherit'\n                                                        }}>{t('str_invalidFields')}</Typography>\n                                                        {\n                                                            fileData.code.isError || required(fileData.code.value) && (\n                                                                <Typography\n                                                                    style={{fontSize: 'inherit'}}>{t('str_language')}</Typography>\n                                                            )\n                                                        }\n                                                    </div>\n                                                }\n                                                onCancelClick={handleCloseDialog}\n                                                onSaveClick={handleSave}\n                                            />\n                                        </Grid>\n                                    </React.Fragment>\n                                )\n                            }\n                        </Grid>\n                    </div>\n                </Dialog>\n                <TrackedChangesDialog\n                    open={openTrackedDialog || deleteOpenDialog}\n                    onPressNo={(e) => {\n                        setOpenTrackedDialog(e);\n                        setDeleteOpenDialog(e)\n                    }}\n                    dialogTitle={deleteOpenDialog ? t('str_delete') : false}\n                    dialogDesc={deleteOpenDialog ? t('str_alertDeleteTitle') : false}\n                    onPressYes={(e) => {\n                        if (deleteOpenDialog) {\n                            handleDeleteItem(selectedFileGid)\n                        } else {\n                            setOpenTrackedDialog(e);\n                            setOpenAddDialog(false)\n                            setDeleteOpenDialog(e)\n                            handleReset()\n                        }\n                    }}\n                />\n            </React.Fragment>\n        </div>\n    )\n}\n\nexport default Files"]},"metadata":{},"sourceType":"module"}