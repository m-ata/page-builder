{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/survey/surveytree/options/Question.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport OnePageSurvey from '../render-types/OnePageSurvey';\nimport { makeStyles } from '@material-ui/core/styles';\nimport styles from '../../style/SurveyOptions.style';\nimport { SURVEY_DISPLAY_TYPE_QUESTION, SURVEY_DISPLAY_TYPE_QUESTION_IS_HORIZONTAL } from '../../../../model/survey/constants';\nimport IsReq from './sub-components/IsReq';\nimport Grid from '@material-ui/core/Grid';\nimport SurveyTooltip from 'components/survey/helper/SurveyTooltip';\nvar useStyles = makeStyles(styles);\nexport default function QuestionOption(props) {\n  _s();\n\n  var option = props.option,\n      optionTyp = props.optionTyp,\n      index = props.index; //style\n\n  var classes = useStyles(); //redux\n\n  var surveyIsValid = useSelector(function (state) {\n    return state.survey.isValid;\n  });\n  var displayType = useSelector(function (state) {\n    return state.survey.displayType;\n  });\n\n  var getIndex = function getIndex() {\n    if (index && typeof index === 'string' && displayType === SURVEY_DISPLAY_TYPE_QUESTION) {\n      return index.split('.')[0];\n    } else {\n      return index;\n    }\n  };\n\n  var isHorizontal = function isHorizontal(answeralign) {\n    return answeralign === SURVEY_DISPLAY_TYPE_QUESTION_IS_HORIZONTAL;\n  };\n\n  if (optionTyp === option.typ) {\n    return __jsx(\"div\", {\n      className: classes.questionContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, __jsx(SurveyTooltip, {\n      title: option && option.note || '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, __jsx(\"h3\", {\n      style: {\n        color: surveyIsValid ? '#00000061' : '#707070'\n      },\n      className: classes.questionTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    }, __jsx(Grid, {\n      container: true,\n      direction: 'row',\n      justify: 'flex-start',\n      alignItems: 'center',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }\n    }, getIndex() + '.', \" \", option.langwordtxt || option.description, option && option.isreq && __jsx(IsReq, {\n      option: option,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 56\n      }\n    })))), option.children && __jsx(OnePageSurvey, {\n      options: option.children,\n      isHorzintal: isHorizontal(option.answeralign),\n      index: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 37\n      }\n    }));\n  } else {\n    return option.children && __jsx(OnePageSurvey, {\n      options: option.children,\n      isHorzintal: isHorizontal(option.answeralign),\n      index: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 35\n      }\n    });\n  }\n}\n\n_s(QuestionOption, \"A1JzuVkUko29bJJafGmTWlnPykc=\", false, function () {\n  return [useStyles, useSelector, useSelector];\n});\n\n_c = QuestionOption;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionOption\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/survey/surveytree/options/Question.js"],"names":["React","useSelector","OnePageSurvey","makeStyles","styles","SURVEY_DISPLAY_TYPE_QUESTION","SURVEY_DISPLAY_TYPE_QUESTION_IS_HORIZONTAL","IsReq","Grid","SurveyTooltip","useStyles","QuestionOption","props","option","optionTyp","index","classes","surveyIsValid","state","survey","isValid","displayType","getIndex","split","isHorizontal","answeralign","typ","questionContainer","note","color","questionTitle","langwordtxt","description","isreq","children"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useSelector } from 'react-redux'\nimport OnePageSurvey from '../render-types/OnePageSurvey'\nimport { makeStyles } from '@material-ui/core/styles'\nimport styles from '../../style/SurveyOptions.style'\nimport {\n    SURVEY_DISPLAY_TYPE_QUESTION, SURVEY_DISPLAY_TYPE_QUESTION_IS_HORIZONTAL,\n} from '../../../../model/survey/constants'\nimport IsReq from './sub-components/IsReq'\nimport Grid from '@material-ui/core/Grid'\nimport SurveyTooltip from 'components/survey/helper/SurveyTooltip'\n\nconst useStyles = makeStyles(styles)\n\nexport default function QuestionOption(props) {\n    const { option, optionTyp, index } = props\n\n    //style\n    const classes = useStyles()\n\n    //redux\n    const surveyIsValid = useSelector((state) => state.survey.isValid)\n    const displayType = useSelector((state) => state.survey.displayType)\n\n    const getIndex = () => {\n        if (index && typeof index === 'string' && displayType === SURVEY_DISPLAY_TYPE_QUESTION) {\n            return index.split('.')[0]\n        } else {\n            return index\n        }\n    }\n\n    const isHorizontal = (answeralign) =>{\n        return  answeralign === SURVEY_DISPLAY_TYPE_QUESTION_IS_HORIZONTAL\n    }\n\n    if (optionTyp === option.typ) {\n        return (\n            <div className={classes.questionContainer}>\n                <SurveyTooltip title={option && option.note || ''}>\n                    <h3 style={{ color: surveyIsValid ? '#00000061' : '#707070' }} className={classes.questionTitle}>\n                        <Grid container direction={'row'} justify={'flex-start'} alignItems={'center'}>\n                            {getIndex() + '.'} {option.langwordtxt || option.description}\n                            {option && option.isreq && <IsReq option={option}/>}\n                        </Grid>\n                    </h3>\n                </SurveyTooltip>\n                {option.children && <OnePageSurvey options={option.children} isHorzintal={isHorizontal(option.answeralign)} index={index}/>}\n            </div>\n        )\n    } else {\n        return option.children && <OnePageSurvey options={option.children} isHorzintal={isHorizontal(option.answeralign)} index={index}/>\n    }\n}\n"]},"metadata":{},"sourceType":"module"}