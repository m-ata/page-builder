{"ast":null,"code":"export const strOrsResTerms = 'ORSRESTERMS';\nexport const getRoomPrice = ({\n  adult,\n  minsngrate,\n  mindblrate,\n  mintrprate,\n  minquadrate,\n  minextrarate,\n  minextra2rate\n}) => {\n  if (adult === 1) {\n    if (minsngrate > 0 && minsngrate !== null) {\n      return minsngrate;\n    } else {\n      return null;\n    }\n  } else if (adult === 2) {\n    if (mindblrate > 0 && mindblrate !== null) {\n      return mindblrate;\n    } else {\n      return null;\n    }\n  } else if (adult === 3) {\n    if (mintrprate > 0 && mintrprate !== null) {\n      return mintrprate;\n    } else {\n      return null;\n    }\n  } else if (adult === 4) {\n    if (minquadrate > 0 && minquadrate !== null) {\n      return minquadrate;\n    } else {\n      return null;\n    }\n  } else if (adult === 5) {\n    if (minextrarate > 0 && minextrarate !== null) {\n      return parseInt(Number(minquadrate) + Number(minextrarate));\n    } else {\n      return null;\n    }\n  } else if (adult >= 6 && minextra2rate !== 0) {\n    const extrapax = parseInt(adult - 5);\n    const baseprice = parseInt(Number(minquadrate) + Number(minextrarate));\n    const extrapaxprice = parseInt(baseprice + Number(minextra2rate) * extrapax);\n\n    if (extrapaxprice > 0 && extrapaxprice !== null) {\n      return extrapaxprice;\n    } else {\n      return null;\n    }\n  } else {\n    return null;\n  }\n};\n\nconst getRoomRate = roomRate => {\n  roomRate = Number(roomRate);\n\n  if (roomRate > 0 && roomRate !== null) {\n    return roomRate;\n  } else {\n    return null;\n  }\n};\n\nexport const showDiscountRate = (discounted, noDiscount) => {\n  return 100 - Number(noDiscount) * 100 / Number(discounted);\n};\nexport const applyDiscount = (price, discrate) => {\n  if (discrate) return Number(price) * (100 - Number(discrate)) / 100;\n  return 0;\n};\n\nconst getPaxPrice = (totalPax, sngrate, dblrate, trprate, quadrate, extrarate, extra2rate) => {\n  switch (totalPax) {\n    case 1:\n      return getRoomRate(sngrate);\n\n    case 2:\n      return getRoomRate(dblrate);\n\n    case 3:\n      return getRoomRate(trprate);\n\n    case 4:\n      return getRoomRate(quadrate);\n\n    case 5:\n      return getRoomRate(Number(quadrate) + Number(extrarate));\n\n    case totalPax >= 6:\n      const extraPax = Number(totalPax) - 5,\n            basePrice = Number(quadrate) + Number(extrarate),\n            extraPaxPrice = basePrice + Number(extra2rate) * extraPax;\n      return getRoomRate(extraPaxPrice);\n\n    default:\n      return null;\n  }\n};\n\nexport const getPaxTotalPrice = (priceList, totalPax) => {\n  const {\n    sngrate,\n    dblrate,\n    trprate,\n    quadrate,\n    extrarate,\n    extra2rate,\n    discrate\n  } = priceList;\n  const paxPrice = getPaxPrice(totalPax, sngrate, dblrate, trprate, quadrate, extrarate, extra2rate);\n  return {\n    totalPaxPrice: paxPrice || 0,\n    discTotalPaxPrice: applyDiscount(paxPrice, discrate) || 0\n  };\n};\nexport const useTotalPrice = (priceList, totalPax) => {\n  let totalPaxPrice = 0,\n      discTotalPaxPrice = 0;\n\n  for (let priceItems of priceList) {\n    const dailyPrice = getPaxTotalPrice(priceItems, totalPax);\n    totalPaxPrice += dailyPrice.totalPaxPrice;\n    discTotalPaxPrice += dailyPrice.discTotalPaxPrice;\n  }\n\n  return {\n    totalPaxPrice,\n    discTotalPaxPrice\n  };\n};\nexport const getCurrencyCodeToIso = currCode => {\n  switch (currCode) {\n    case 'TL':\n      return 'TRY';\n\n    default:\n      return currCode;\n  }\n};","map":{"version":3,"sources":["/Users/mata/app-cloudweb/@webcms-globals/onlinereservation.js"],"names":["strOrsResTerms","getRoomPrice","adult","minsngrate","mindblrate","mintrprate","minquadrate","minextrarate","minextra2rate","parseInt","Number","extrapax","baseprice","extrapaxprice","getRoomRate","roomRate","showDiscountRate","discounted","noDiscount","applyDiscount","price","discrate","getPaxPrice","totalPax","sngrate","dblrate","trprate","quadrate","extrarate","extra2rate","extraPax","basePrice","extraPaxPrice","getPaxTotalPrice","priceList","paxPrice","totalPaxPrice","discTotalPaxPrice","useTotalPrice","priceItems","dailyPrice","getCurrencyCodeToIso","currCode"],"mappings":"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","sourcesContent":["export const strOrsResTerms = 'ORSRESTERMS'\n\nexport const getRoomPrice = ({adult, minsngrate, mindblrate, mintrprate, minquadrate, minextrarate, minextra2rate}) => {\n    if (adult === 1) {\n        if (minsngrate > 0 && minsngrate !== null) {\n            return minsngrate\n        } else {\n            return null\n        }\n    } else if (adult === 2) {\n        if (mindblrate > 0 && mindblrate !== null) {\n            return mindblrate\n        } else {\n            return null\n        }\n    } else if (adult === 3) {\n        if (mintrprate > 0 && mintrprate !== null) {\n            return mintrprate\n        } else {\n            return null\n        }\n    } else if (adult === 4) {\n        if (minquadrate > 0 && minquadrate !== null) {\n            return minquadrate\n        } else {\n            return null\n        }\n    } else if (adult === 5) {\n        if (minextrarate > 0 && minextrarate !== null) {\n            return parseInt(Number(minquadrate) + Number(minextrarate))\n        } else {\n            return null\n        }\n    } else if (adult >= 6 && minextra2rate !== 0) {\n        const extrapax = parseInt(adult - 5)\n        const baseprice =  parseInt(Number(minquadrate) + Number(minextrarate))\n        const extrapaxprice = parseInt(baseprice + (Number(minextra2rate) * extrapax))\n\n        if (extrapaxprice > 0 && extrapaxprice !== null) {\n            return extrapaxprice\n        } else {\n            return null\n        }\n    } else {\n        return null\n    }\n}\n\n\nconst getRoomRate = (roomRate) => {\n    roomRate = Number(roomRate)\n\n    if (roomRate > 0 && roomRate !== null) {\n        return roomRate\n    } else {\n        return null\n    }\n}\n\nexport const showDiscountRate = (discounted, noDiscount) => {\n    return 100 - (Number(noDiscount) * 100 / Number(discounted))\n}\n\nexport const applyDiscount = (price, discrate) => {\n    if(discrate) return Number(price) * (100 - Number(discrate)) / 100\n    return 0\n}\n\nconst getPaxPrice = (totalPax, sngrate, dblrate, trprate, quadrate, extrarate, extra2rate) => {\n    switch (totalPax) {\n        case 1:\n            return getRoomRate(sngrate)\n        case 2:\n            return getRoomRate(dblrate)\n        case 3:\n            return getRoomRate(trprate)\n        case 4:\n            return getRoomRate(quadrate)\n        case 5:\n            return getRoomRate(Number(quadrate) + Number(extrarate))\n        case totalPax >= 6:\n            const extraPax = Number(totalPax) - 5\n                , basePrice = Number(quadrate) + Number(extrarate)\n                , extraPaxPrice = basePrice + (Number(extra2rate) * extraPax)\n            return getRoomRate(extraPaxPrice)\n        default:\n            return null\n    }\n}\n\n\nexport const getPaxTotalPrice = (priceList, totalPax) => {\n    const { sngrate, dblrate, trprate, quadrate, extrarate, extra2rate, discrate } = priceList\n    const paxPrice = getPaxPrice(totalPax, sngrate, dblrate, trprate, quadrate, extrarate, extra2rate)\n\n    return {\n        totalPaxPrice: paxPrice || 0,\n        discTotalPaxPrice: applyDiscount(paxPrice, discrate) || 0\n    }\n}\n\nexport const useTotalPrice = (priceList, totalPax) => {\n    let totalPaxPrice = 0, discTotalPaxPrice = 0\n    for(let priceItems of priceList){\n        const dailyPrice = getPaxTotalPrice(priceItems, totalPax)\n        totalPaxPrice += dailyPrice.totalPaxPrice\n        discTotalPaxPrice += dailyPrice.discTotalPaxPrice\n    }\n\n    return {\n        totalPaxPrice,\n        discTotalPaxPrice\n    }\n}\n\nexport const getCurrencyCodeToIso = (currCode) => {\n    switch (currCode) {\n        case 'TL':\n            return 'TRY'\n        default:\n            return currCode\n    }\n}"]},"metadata":{},"sourceType":"module"}