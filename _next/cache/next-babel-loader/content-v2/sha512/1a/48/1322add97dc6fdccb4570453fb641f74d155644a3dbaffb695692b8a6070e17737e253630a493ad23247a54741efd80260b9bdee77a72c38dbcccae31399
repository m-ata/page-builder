{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/website/pages/SliderModal.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { memo, useContext, useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Button, Dialog, DialogActions, DialogContent, DialogTitle, Box, CardMedia } from '@material-ui/core';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nimport Slider from \"react-slick\";\nimport WebCmsGlobal from \"../../webcms-global\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    marginTop: 16\n  },\n  wrapper: {\n    margin: 'auto',\n    boxShadow: '0 0 0 1px #d2d2d26b'\n  },\n  title: {\n    fontWeight: 'bold'\n  },\n  description: {\n    display: '-webkit-box',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    '-webkit-line-clamp': 2,\n    '-webkit-box-orient': 'vertical',\n    letterSpacing: 0\n  },\n  thumbnail: {\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'cover',\n    width: '100%',\n    height: '100%',\n    borderRadius: 0,\n    cursor: 'pointer',\n    [theme.breakpoints.down(\"md\")]: {\n      minHeight: 480\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      minHeight: 220\n    }\n  },\n  rightColumn: {\n    padding: 16\n  },\n  attributeList: {\n    display: 'inline-flex',\n    padding: 0\n  },\n  attributeItem: {\n    position: 'relative',\n    listStyleType: 'none',\n    padding: '15px',\n    borderRight: '1px solid #ababab59',\n    '&:last-child': {\n      borderRight: 'none'\n    }\n  },\n  attributeIcon: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    '-ms-transform': 'translate(-50%, -50%)',\n    transform: 'translate(-50%, -50%)'\n  },\n  actionsContainer: {\n    display: 'flex',\n    alignItems: 'flex-end',\n    '& > div': {\n      textAlign: 'right'\n    }\n  },\n  addRoomTitle: {\n    paddingRight: 6\n  },\n  addRoomButton: {\n    padding: 6\n  },\n  deleteRoomButton: {\n    padding: 6\n  },\n  addRoomTotal: {\n    padding: 10,\n    width: 50\n  },\n  noRoomAlert: {\n    width: '100%'\n  },\n  sliderImage: {\n    padding: '0px 10px 10px 10px',\n    [theme.breakpoints.only('xs')]: {\n      padding: '0px 5px 5px 5px'\n    }\n  },\n  sliderDesc: {\n    marginTop: 50\n  },\n  media: {\n    height: '50vh',\n    [theme.breakpoints.only('xs')]: {\n      height: '25vh'\n    }\n  },\n  roomCardTotalPerInfoBox: {\n    position: 'relative',\n    display: 'inline-block',\n    top: -45,\n    left: 10,\n    [theme.breakpoints.down(\"md\")]: {\n      top: -290\n    }\n  },\n  roomCardTotalPerInfo: {\n    backgroundColor: '#ffffff',\n    borderRadius: 0,\n    marginLeft: 5,\n    boxShadow: 'inset 0 0 0px 1px #c8c8c8',\n    fontSize: 16,\n    color: '#616161',\n    opacity: 0.8\n  },\n  sliderBg: {\n    border: '1px solid white',\n    backgroundColor: '#FFFFFF',\n    borderRadius: '50%'\n  },\n  sliderArrow: {\n    color: \"#000000\",\n    fontSize: 40,\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: 30\n    }\n  }\n}));\n\nconst ThumbnailSliderModal = props => {\n  const {\n    sliderTitle,\n    sliderDesc,\n    open,\n    onClose,\n    sliderImages\n  } = props;\n  const {\n    GENERAL_SETTINGS\n  } = useContext(WebCmsGlobal);\n  const {\n    t\n  } = useTranslation();\n  const classes = useStyles();\n  const settings = {\n    dots: true,\n    infinite: true,\n    lazyLoad: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    centerMode: true,\n    swipeToSlide: true,\n    touchMove: true\n  };\n  const {\n    0: title,\n    1: setTitle\n  } = useState(sliderTitle);\n  const {\n    0: description,\n    1: setDescription\n  } = useState(sliderDesc);\n  const {\n    0: cta,\n    1: setCta\n  } = useState('');\n  useEffect(() => {\n    setTitle(sliderTitle);\n    setDescription(sliderDesc);\n  }, [sliderTitle, sliderDesc]);\n\n  const handleSlideChange = index => {\n    var _sliderImages$index, _sliderImages$index2, _sliderImages$index3;\n\n    setTitle(((_sliderImages$index = sliderImages[index]) === null || _sliderImages$index === void 0 ? void 0 : _sliderImages$index.title) || sliderTitle);\n    setDescription(((_sliderImages$index2 = sliderImages[index]) === null || _sliderImages$index2 === void 0 ? void 0 : _sliderImages$index2.description) || sliderDesc);\n    setCta((_sliderImages$index3 = sliderImages[index]) === null || _sliderImages$index3 === void 0 ? void 0 : _sliderImages$index3.cta);\n  };\n\n  return __jsx(Dialog, {\n    open: open,\n    onClose: () => onClose(false),\n    maxWidth: \"md\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }, __jsx(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: title\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }\n  })), __jsx(DialogContent, {\n    dividers: true,\n    style: {\n      overflow: 'overlay',\n      padding: 40\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }, __jsx(Slider, _extends({}, settings, {\n    afterChange: handleSlideChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }\n  }), sliderImages && sliderImages.map((item, i) => {\n    return __jsx(Box, {\n      key: i,\n      className: classes.sliderImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 33\n      }\n    }, __jsx(CardMedia, {\n      className: classes.media,\n      image: GENERAL_SETTINGS.STATIC_URL + (item === null || item === void 0 ? void 0 : item.fileurl),\n      title: \"Contemplative Reptile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 37\n      }\n    }));\n  })), __jsx(Typography, {\n    variant: \"body1\",\n    gutterBottom: true,\n    className: classes.sliderDesc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: description\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 21\n    }\n  }))), __jsx(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    color: \"primary\",\n    onClick: () => onClose(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 17\n    }\n  }, t('str_close'))));\n};\n\nconst memorizedThumbnailSliderModal = /*#__PURE__*/memo(ThumbnailSliderModal);\nexport default memorizedThumbnailSliderModal;","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/website/pages/SliderModal.js"],"names":["React","memo","useContext","useEffect","useState","makeStyles","Typography","Button","Dialog","DialogActions","DialogContent","DialogTitle","Box","CardMedia","useTranslation","Slider","WebCmsGlobal","useStyles","theme","root","flexGrow","marginTop","wrapper","margin","boxShadow","title","fontWeight","description","display","overflow","textOverflow","letterSpacing","thumbnail","backgroundRepeat","backgroundSize","width","height","borderRadius","cursor","breakpoints","down","minHeight","rightColumn","padding","attributeList","attributeItem","position","listStyleType","borderRight","attributeIcon","top","left","transform","actionsContainer","alignItems","textAlign","addRoomTitle","paddingRight","addRoomButton","deleteRoomButton","addRoomTotal","noRoomAlert","sliderImage","only","sliderDesc","media","roomCardTotalPerInfoBox","roomCardTotalPerInfo","backgroundColor","marginLeft","fontSize","color","opacity","sliderBg","border","sliderArrow","ThumbnailSliderModal","props","sliderTitle","open","onClose","sliderImages","GENERAL_SETTINGS","t","classes","settings","dots","infinite","lazyLoad","speed","slidesToShow","slidesToScroll","centerMode","swipeToSlide","touchMove","setTitle","setDescription","cta","setCta","handleSlideChange","index","__html","map","item","i","STATIC_URL","fileurl","memorizedThumbnailSliderModal"],"mappings":"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","sourcesContent":["import React, { memo, useContext, useEffect, useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    Typography,\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Box,\n    CardMedia,\n} from '@material-ui/core';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nimport Slider from \"react-slick\";\nimport WebCmsGlobal from \"../../webcms-global\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 16\n    },\n    wrapper: {\n        margin: 'auto',\n        boxShadow: '0 0 0 1px #d2d2d26b',\n    },\n    title: {\n        fontWeight: 'bold',\n    },\n    description: {\n        display: '-webkit-box',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        '-webkit-line-clamp': 2,\n        '-webkit-box-orient': 'vertical',\n        letterSpacing: 0,\n    },\n    thumbnail: {\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover',\n        width: '100%',\n        height: '100%',\n        borderRadius: 0,\n        cursor: 'pointer',\n        [theme.breakpoints.down(\"md\")]: {\n            minHeight: 480\n        },\n        [theme.breakpoints.down(\"xs\")]: {\n            minHeight: 220\n        }\n    },\n    rightColumn: {\n        padding: 16,\n    },\n    attributeList: {\n        display: 'inline-flex',\n        padding: 0,\n    },\n    attributeItem: {\n        position: 'relative',\n        listStyleType: 'none',\n        padding: '15px',\n        borderRight: '1px solid #ababab59',\n        '&:last-child': {\n            borderRight: 'none',\n        },\n    },\n    attributeIcon: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        '-ms-transform': 'translate(-50%, -50%)',\n        transform: 'translate(-50%, -50%)',\n    },\n    actionsContainer: {\n        display: 'flex',\n        alignItems: 'flex-end',\n        '& > div': {\n            textAlign: 'right',\n        },\n    },\n    addRoomTitle:{\n        paddingRight: 6\n    },\n    addRoomButton: {\n        padding: 6,\n    },\n    deleteRoomButton: {\n        padding: 6,\n    },\n    addRoomTotal: {\n        padding: 10,\n        width: 50,\n    },\n    noRoomAlert: {\n        width: '100%'\n    },\n    sliderImage: {\n        padding: '0px 10px 10px 10px',\n        [theme.breakpoints.only('xs')]: {\n            padding: '0px 5px 5px 5px',\n        },\n    },\n    sliderDesc: {\n        marginTop: 50\n    },\n    media: {\n        height: '50vh',\n        [theme.breakpoints.only('xs')]: {\n            height: '25vh',\n        },\n    },\n    roomCardTotalPerInfoBox: {\n        position: 'relative',\n        display: 'inline-block',\n        top: -45,\n        left: 10,\n        [theme.breakpoints.down(\"md\")]: {\n            top: -290,\n        },\n    },\n    roomCardTotalPerInfo: {\n        backgroundColor: '#ffffff',\n        borderRadius: 0,\n        marginLeft: 5,\n        boxShadow: 'inset 0 0 0px 1px #c8c8c8',\n        fontSize: 16,\n        color: '#616161',\n        opacity: 0.8\n    },\n    sliderBg: {\n        border: '1px solid white',\n        backgroundColor: '#FFFFFF',\n        borderRadius: '50%'\n    },\n    sliderArrow: {\n        color: \"#000000\",\n        fontSize: 40,\n        [theme.breakpoints.down(\"sm\")]: {\n            fontSize: 30,\n        },\n    },\n}));\n\nconst ThumbnailSliderModal = (props) => {\n\n    const { sliderTitle, sliderDesc, open, onClose, sliderImages } = props;\n    const { GENERAL_SETTINGS } = useContext(WebCmsGlobal);\n    const { t } = useTranslation();\n    const classes = useStyles();\n    const settings = {\n        dots: true,\n        infinite: true,\n        lazyLoad: true,\n        speed: 500,\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        centerMode: true,\n        swipeToSlide: true,\n        touchMove: true\n    };\n    const [title, setTitle] = useState(sliderTitle);\n    const [description, setDescription] = useState(sliderDesc);\n    const [cta, setCta] = useState('')\n\n    useEffect(() => {\n        setTitle(sliderTitle);\n        setDescription(sliderDesc);\n    }, [sliderTitle, sliderDesc]);\n\n    const handleSlideChange = (index) => {\n        setTitle(sliderImages[index]?.title || sliderTitle);\n        setDescription(sliderImages[index]?.description || sliderDesc);\n        setCta(sliderImages[index]?.cta);\n    }\n\n\n    return (\n        <Dialog open={open} onClose={()=> onClose(false)} maxWidth=\"md\" fullWidth>\n            <DialogTitle>\n                <div dangerouslySetInnerHTML={{ __html: title }}/>\n                {/*{title}*/}\n            </DialogTitle>\n            <DialogContent dividers style={{overflow: 'overlay', padding: 40}}>\n                <Slider {...settings} afterChange={handleSlideChange}>\n                    {\n                        sliderImages &&\n                        sliderImages.map((item, i) => {\n                            return (\n                                <Box key={i} className={classes.sliderImage}>\n                                    <CardMedia\n                                        className={classes.media}\n                                        image={GENERAL_SETTINGS.STATIC_URL + item?.fileurl}\n                                        title=\"Contemplative Reptile\"\n                                    />\n                                </Box>\n                            )\n                        })\n                    }\n                </Slider>\n                <Typography variant=\"body1\" gutterBottom className={classes.sliderDesc}>\n                    <div dangerouslySetInnerHTML={{ __html: description }}/>\n                    {/*{description}*/}\n                </Typography>\n\n            </DialogContent>\n            <DialogActions>\n                <Button color=\"primary\" onClick={()=> onClose(false)}>{t('str_close')}</Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\n\nconst memorizedThumbnailSliderModal = memo(ThumbnailSliderModal)\n\nexport default memorizedThumbnailSliderModal"]},"metadata":{},"sourceType":"module"}