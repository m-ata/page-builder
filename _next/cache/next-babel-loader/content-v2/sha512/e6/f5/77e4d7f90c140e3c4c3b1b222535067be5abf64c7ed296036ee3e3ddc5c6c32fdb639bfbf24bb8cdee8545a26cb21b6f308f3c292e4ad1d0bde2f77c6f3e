{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/guest/account/LoyaltyClub/GiftCardDialog.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport { setToState, updateState } from 'state/actions';\nimport axios from 'axios';\nimport Slider from 'react-slick';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { getHyperlinkParser, stdTimeFormat } from 'model/orest/constants';\nimport WebCmsGlobal from 'components/webcms-global';\nimport { FALSE, NULL, ZERO } from 'model/globals';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nimport LoadingSpinner from 'components/LoadingSpinner';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Button';\nconst useStyles = makeStyles(theme => ({\n  dialogTitle: {\n    '& h2': {\n      [theme.breakpoints.only('md')]: {\n        fontSize: 15\n      },\n      [theme.breakpoints.only('sm')]: {\n        fontSize: 14\n      },\n      [theme.breakpoints.only('xs')]: {\n        fontSize: 13\n      }\n    }\n  },\n  sliderImgBox: {\n    width: '100%',\n    height: 340,\n    [theme.breakpoints.only('xs')]: {\n      height: 180\n    },\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: '100% 100%'\n  },\n  button: {\n    textAlign: 'center',\n    '& a': {\n      background: '#fffbfb',\n      padding: 10,\n      textAlign: 'center',\n      color: theme.palette.primary.main,\n      border: `1px solid ${theme.palette.primary.main}`,\n      fontSize: '0.875rem',\n      minWidth: 64,\n      boxSizing: 'border-box',\n      transition: 'background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\n      fontWeight: 500,\n      lineHeight: 1.75,\n      borderRadius: 4,\n      letterSpacing: '0.02857em',\n      textTransform: 'uppercase'\n    }\n  }\n}));\n\nconst GiftCardDialog = props => {\n  var _itemSlideData$, _itemSlideData$2;\n\n  const {\n    state,\n    sliderID,\n    open,\n    onClose\n  } = props;\n  const {\n    0: itemSlideData,\n    1: setItemSlideData\n  } = useState(false);\n  const {\n    t\n  } = useTranslation();\n  const classes = useStyles();\n  const {\n    GENERAL_SETTINGS\n  } = useContext(WebCmsGlobal);\n  const loginfo = useSelector(state => state.orest.currentUser && state.orest.currentUser.loginfo);\n  let clientParams = {};\n  clientParams.hotelrefno = loginfo && loginfo.hotelrefno || GENERAL_SETTINGS.HOTELREFNO;\n  useEffect(() => {\n    let active = true;\n\n    if (active && open && itemSlideData === FALSE) {\n      if (GENERAL_SETTINGS.ISCHAIN && state.changeHotelRefno !== false) {\n        clientParams.ischain = true;\n        clientParams.chainid = state.changeHotelRefno;\n        clientParams.hotelrefno = GENERAL_SETTINGS.HOTELREFNO;\n      } else {\n        clientParams.ischain = false;\n        clientParams.chainid = false;\n      }\n\n      axios({\n        url: GENERAL_SETTINGS.BASE_URL + 'api/hotel/content/slider',\n        method: 'post',\n        params: Object.assign({\n          sliderid: sliderID\n        }, clientParams)\n      }).then(sliderResponse => {\n        if (active) {\n          const sliderData = sliderResponse.data;\n\n          if (sliderData.success && sliderData.data.length > 0) {\n            setItemSlideData(sliderData.data);\n          } else {\n            setItemSlideData(null);\n          }\n        }\n      });\n    }\n\n    return () => {\n      active = false;\n    };\n  }, [sliderID]);\n\n  const handleCloseDialog = () => {\n    onClose(false);\n    setItemSlideData(false);\n  };\n\n  const settings = {\n    dots: true,\n    infinite: true,\n    lazyLoad: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    centerMode: true,\n    swipeToSlide: true,\n    touchMove: true\n  };\n\n  const renderButton = cta => {\n    if (cta) {\n      var _link$text;\n\n      let link = getHyperlinkParser(cta);\n\n      if (link === false) {\n        return;\n      }\n\n      let href = link.href;\n      let text = (link === null || link === void 0 ? void 0 : (_link$text = link.text) === null || _link$text === void 0 ? void 0 : _link$text.replace(/ /g, '')) || '';\n      let host = window.location.host;\n      let isExternalLink = false;\n\n      if (href.includes('http') && !href.includes(host)) {\n        isExternalLink = true;\n      }\n\n      if (!isExternalLink) {\n        return __jsx(Link, {\n          id: \"slick-button\",\n          variant: \"outlined\",\n          color: \"primary\",\n          href: href,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 21\n          }\n        }, t(text));\n      }\n\n      return __jsx(Link, {\n        id: \"slick-button\",\n        variant: \"outlined\",\n        color: \"primary\",\n        target: \"_blank\",\n        href: href,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 17\n        }\n      }, t(text));\n    } else {\n      return;\n    }\n  };\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, __jsx(Dialog, {\n    fullWidth: true,\n    maxWidth: \"md\",\n    open: open,\n    onClose: () => handleCloseDialog(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, __jsx(DialogTitle, {\n    className: classes.dialogTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }, itemSlideData && t((_itemSlideData$ = itemSlideData[0]) === null || _itemSlideData$ === void 0 ? void 0 : _itemSlideData$.slidertitle) || itemSlideData && t((_itemSlideData$2 = itemSlideData[0]) === null || _itemSlideData$2 === void 0 ? void 0 : _itemSlideData$2.title) || '-'), __jsx(DialogContent, {\n    dividers: true,\n    style: {\n      overflow: 'overlay',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }, itemSlideData === FALSE ? __jsx(Box, {\n    p: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 25\n    }\n  }, __jsx(LoadingSpinner, {\n    size: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 29\n    }\n  })) : itemSlideData === NULL ? __jsx(Box, {\n    p: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 25\n    }\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    align: \"center\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 29\n    }\n  }, t('str_noDefaultRecord'))) : __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 25\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 29\n    }\n  }, __jsx(Box, {\n    p: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 33\n    }\n  }, __jsx(Slider, _extends({}, settings, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 37\n    }\n  }), itemSlideData && itemSlideData.map((item, i) => {\n    return __jsx(Box, {\n      key: i,\n      p: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 49\n      }\n    }, __jsx(\"div\", {\n      className: classes.sliderImgBox,\n      style: {\n        backgroundImage: `url(${GENERAL_SETTINGS.STATIC_URL + item.fileurl})`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 53\n      }\n    }));\n  })))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 29\n    }\n  }, __jsx(Typography, {\n    variant: \"body2\",\n    style: {\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 33\n    }\n  }, itemSlideData && itemSlideData[0] && itemSlideData[0].sliderdesc)), itemSlideData && itemSlideData[0] && itemSlideData[0].slidercta && __jsx(Grid, {\n    item: true,\n    xs: 12,\n    style: {\n      padding: 10,\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 33\n    }\n  }, itemSlideData && itemSlideData[0] && renderButton(itemSlideData[0].slidercta)))), __jsx(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    onClick: () => handleCloseDialog(),\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 21\n    }\n  }, t('str_close')))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    state: state.formReducer.guest\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  updateState: (stateType, stateName, value) => dispatch(updateState(stateType, stateName, value)),\n  setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GiftCardDialog);","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/guest/account/LoyaltyClub/GiftCardDialog.js"],"names":["React","useEffect","useState","useContext","connect","useSelector","setToState","updateState","axios","Slider","Typography","Box","DialogTitle","DialogContent","DialogActions","Dialog","Button","Grid","getHyperlinkParser","stdTimeFormat","WebCmsGlobal","FALSE","NULL","ZERO","useTranslation","LoadingSpinner","makeStyles","Link","useStyles","theme","dialogTitle","breakpoints","only","fontSize","sliderImgBox","width","height","backgroundRepeat","backgroundSize","button","textAlign","background","padding","color","palette","primary","main","border","minWidth","boxSizing","transition","fontWeight","lineHeight","borderRadius","letterSpacing","textTransform","GiftCardDialog","props","state","sliderID","open","onClose","itemSlideData","setItemSlideData","t","classes","GENERAL_SETTINGS","loginfo","orest","currentUser","clientParams","hotelrefno","HOTELREFNO","active","ISCHAIN","changeHotelRefno","ischain","chainid","url","BASE_URL","method","params","Object","assign","sliderid","then","sliderResponse","sliderData","data","success","length","handleCloseDialog","settings","dots","infinite","lazyLoad","speed","slidesToShow","slidesToScroll","centerMode","swipeToSlide","touchMove","renderButton","cta","link","href","text","replace","host","window","location","isExternalLink","includes","slidertitle","title","overflow","map","item","i","backgroundImage","STATIC_URL","fileurl","sliderdesc","slidercta","mapStateToProps","formReducer","guest","mapDispatchToProps","dispatch","stateType","stateName","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react'\nimport { connect, useSelector } from 'react-redux'\nimport { setToState, updateState } from 'state/actions'\nimport axios from 'axios'\nimport Slider from 'react-slick'\nimport Typography from '@material-ui/core/Typography'\nimport Box from '@material-ui/core/Box'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Dialog from '@material-ui/core/Dialog'\nimport Button from '@material-ui/core/Button'\nimport Grid from '@material-ui/core/Grid'\nimport { getHyperlinkParser, stdTimeFormat } from 'model/orest/constants'\nimport WebCmsGlobal from 'components/webcms-global'\nimport { FALSE, NULL, ZERO } from 'model/globals'\nimport useTranslation from 'lib/translations/hooks/useTranslation'\nimport LoadingSpinner from 'components/LoadingSpinner'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Link from '@material-ui/core/Button'\n\nconst useStyles = makeStyles((theme) => ({\n    dialogTitle: {\n        '& h2': {\n            [theme.breakpoints.only('md')]: {\n                fontSize: 15,\n            },\n            [theme.breakpoints.only('sm')]: {\n                fontSize: 14,\n            },\n            [theme.breakpoints.only('xs')]: {\n                fontSize: 13,\n            },\n        },\n    },\n    sliderImgBox: {\n        width: '100%',\n        height: 340,\n        [theme.breakpoints.only('xs')]: {\n            height: 180,\n        },\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: '100% 100%',\n    },\n    button: {\n        textAlign: 'center',\n        '& a': {\n            background: '#fffbfb',\n            padding: 10,\n            textAlign: 'center',\n            color: theme.palette.primary.main,\n            border: `1px solid ${theme.palette.primary.main}`,\n            fontSize: '0.875rem',\n            minWidth: 64,\n            boxSizing: 'border-box',\n            transition: 'background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\n            fontWeight: 500,\n            lineHeight: 1.75,\n            borderRadius: 4,\n            letterSpacing: '0.02857em',\n            textTransform: 'uppercase'\n        },\n    },\n}))\n\nconst GiftCardDialog = (props) => {\n    const { state, sliderID, open, onClose } = props\n\n    const [itemSlideData, setItemSlideData] = useState(false)\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const { GENERAL_SETTINGS } = useContext(WebCmsGlobal)\n\n    const loginfo = useSelector((state) => state.orest.currentUser && state.orest.currentUser.loginfo)\n\n    let clientParams = {}\n    clientParams.hotelrefno = loginfo && loginfo.hotelrefno || GENERAL_SETTINGS.HOTELREFNO\n\n    useEffect(() => {\n        let active = true\n        if (active && open && itemSlideData === FALSE) {\n\n            if (GENERAL_SETTINGS.ISCHAIN && state.changeHotelRefno !== false) {\n                clientParams.ischain = true\n                clientParams.chainid = state.changeHotelRefno\n                clientParams.hotelrefno = GENERAL_SETTINGS.HOTELREFNO\n\n            } else {\n                clientParams.ischain = false\n                clientParams.chainid = false\n            }\n\n            axios({\n                url: GENERAL_SETTINGS.BASE_URL + 'api/hotel/content/slider',\n                method: 'post',\n                params:  Object.assign({\n                    sliderid: sliderID,\n                }, clientParams),\n            }).then((sliderResponse) => {\n                if (active) {\n                    const sliderData = sliderResponse.data\n                    if (sliderData.success && sliderData.data.length > 0) {\n                        setItemSlideData(sliderData.data)\n                    } else {\n                        setItemSlideData(null)\n                    }\n                }\n            })\n        }\n\n        return () => {\n            active = false\n        }\n    }, [sliderID])\n\n    const handleCloseDialog = () => {\n        onClose(false)\n        setItemSlideData(false)\n    }\n\n    const settings = {\n        dots: true,\n        infinite: true,\n        lazyLoad: true,\n        speed: 500,\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        centerMode: true,\n        swipeToSlide: true,\n        touchMove: true,\n    }\n\n    const renderButton = (cta) => {\n        if (cta) {\n            let link = getHyperlinkParser(cta)\n\n            if(link === false){\n                return\n            }\n\n            let href = link.href\n            let text = link?.text?.replace(/ /g,'') || ''\n            let host = window.location.host\n\n            let isExternalLink = false\n            if(href.includes('http') && !href.includes(host)){\n                isExternalLink = true\n            }\n\n            if(!isExternalLink){\n                return (\n                    <Link id=\"slick-button\"  variant=\"outlined\" color=\"primary\" href={href}>\n                        {t(text)}\n                    </Link>\n                )\n            }\n\n            return (\n                <Link id=\"slick-button\"  variant=\"outlined\" color=\"primary\" target=\"_blank\" href={href}>\n                    {t(text)}\n                </Link>\n            )\n        } else {\n            return\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <Dialog fullWidth maxWidth=\"md\" open={open} onClose={() => handleCloseDialog()}>\n                <DialogTitle className={classes.dialogTitle}>{itemSlideData && t(itemSlideData[0]?.slidertitle) || itemSlideData && t(itemSlideData[0]?.title) || '-'}</DialogTitle>\n                <DialogContent dividers style={{overflow: 'overlay', width: '100%'}}>\n                    {itemSlideData === FALSE ? (\n                        <Box p={3}>\n                            <LoadingSpinner size={40} />\n                        </Box>\n                    ) : itemSlideData === NULL ? (\n                        <Box p={3}>\n                            <Typography variant=\"h6\" align=\"center\" gutterBottom>\n                                {t('str_noDefaultRecord')}\n                            </Typography>\n                        </Box>\n                    ) : (\n                        <Grid container spacing={1}>\n                            <Grid item xs={12}>\n                                <Box p={1}>\n                                    <Slider {...settings}>\n                                        {itemSlideData &&\n                                        itemSlideData.map((item, i) => {\n                                            return (\n                                                <Box key={i} p={1}>\n                                                    <div className={classes.sliderImgBox} style={{backgroundImage:`url(${GENERAL_SETTINGS.STATIC_URL + item.fileurl})`}}></div>\n                                                </Box>\n                                            )\n                                        })}\n                                    </Slider>\n                                </Box>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Typography variant=\"body2\" style={{padding: 10}}>{itemSlideData && itemSlideData[0] && itemSlideData[0].sliderdesc}</Typography>\n                            </Grid>\n                            {itemSlideData && itemSlideData[0] && itemSlideData[0].slidercta && (\n                                <Grid item xs={12} style={{ padding: 10, textAlign: 'center' }}>\n                                    {itemSlideData && itemSlideData[0] && renderButton(itemSlideData[0].slidercta)}\n                                </Grid>\n                            )}\n                        </Grid>\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => handleCloseDialog()} color=\"primary\">\n                        {t('str_close')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </React.Fragment>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        state: state.formReducer.guest,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    updateState: (stateType, stateName, value) => dispatch(updateState(stateType, stateName, value)),\n    setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GiftCardDialog)\n"]},"metadata":{},"sourceType":"module"}