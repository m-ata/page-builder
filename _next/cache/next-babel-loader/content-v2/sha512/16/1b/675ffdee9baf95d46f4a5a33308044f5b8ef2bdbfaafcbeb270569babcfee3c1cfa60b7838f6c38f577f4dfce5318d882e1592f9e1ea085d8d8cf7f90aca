{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/website/pages/WebsiteSlider.js\";\nvar __jsx = React.createElement;\nimport React, { memo, useContext, useEffect, useState } from 'react';\nimport { Carousel } from 'react-bootstrap';\nimport WebCmsGlobal from \"components/webcms-global\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport NextIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport PrevIcon from \"@material-ui/icons/KeyboardArrowLeft\";\nimport { Typography } from \"@material-ui/core\";\nimport ThumbnailSliderModal from \"./SliderModal\";\nimport { useRouter } from \"next/router\";\nimport moment from \"moment\";\nimport { OREST_ENDPOINT } from \"../../../model/orest/constants\";\nconst useStyles = makeStyles(theme => ({\n  title: {\n    \"-webkit-text-fill-color\": props => props !== null && props !== void 0 && props.textColor ? props.textColor : \"#ffffff\",\n    \"-webkit-text-stroke-width\": \"0.8px\",\n    \"-webkit-text-stroke-color\": \"#000000\"\n  },\n  description: {\n    \"-webkit-text-fill-color\": props => props !== null && props !== void 0 && props.textColor ? props.textColor : \"#ffffff\",\n    \"-webkit-text-stroke-width\": \"0.8px\",\n    \"-webkit-text-stroke-color\": \"#000000\"\n  },\n  image: {\n    width: '100%',\n    backgroundSize: \"cover\"\n  },\n  ctaButton: {\n    borderRadius: 20,\n    backgroundColor: props => props !== null && props !== void 0 && props.buttonColor ? props.buttonColor : \"#ffffff\",\n    color: props => props !== null && props !== void 0 && props.textColor ? props.textColor : \"#ffffff\"\n  },\n  sliderBg: {\n    border: '1px solid white',\n    backgroundColor: '#FFFFFF',\n    borderRadius: '50%'\n  },\n  sliderArrow: {\n    color: \"#000000\",\n    fontSize: 40,\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: 30\n    }\n  },\n  imageBackgroundDiv: {\n    width: \"100vw\",\n    aspectRatio: 1.77,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    [theme.breakpoints.down(\"sm\")]: {\n      height: \"31vh\"\n    }\n  },\n  twoThreeColImage: {\n    width: \"100%\",\n    position: \"relative\",\n    height: 300,\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n    backgroundRepeat: \"no-repeat\",\n    [theme.breakpoints.down(\"sm\")]: {\n      height: 150\n    },\n    cursor: \"pointer\"\n  }\n}));\n\nconst WebsiteSlider = props => {\n  const {\n    sliderData,\n    otherLangSlider,\n    otherLangSliderImages,\n    selectedLang,\n    defaultLang,\n    type,\n    sliderType\n  } = props;\n  const {\n    GENERAL_SETTINGS\n  } = useContext(WebCmsGlobal);\n  const {\n    0: sliderImages,\n    1: setSliderImages\n  } = useState([]);\n  const {\n    0: sliderObj,\n    1: setSliderObj\n  } = useState({});\n  const {\n    0: isImageCta,\n    1: setImageCta\n  } = useState(false);\n  const {\n    0: isImageTitleDesc,\n    1: setImageTitleDesc\n  } = useState(false);\n  const {\n    0: isOpenSlider,\n    1: setIsOpenSlider\n  } = useState(false);\n  const {\n    0: showSlider,\n    1: setShowSlider\n  } = useState(false);\n  const router = useRouter();\n  const classes = useStyles(sliderData);\n  useEffect(() => {\n    for (const img of sliderImages) {\n      if (img.cta) setImageCta(true);\n    }\n\n    if (sliderObj !== null && sliderObj !== void 0 && sliderObj.expiryDate) {\n      const currentDate = moment().format(OREST_ENDPOINT.DATEFORMAT_LOCALE);\n      setShowSlider(moment(sliderObj === null || sliderObj === void 0 ? void 0 : sliderObj.expiryDate).isAfter(currentDate));\n    } else {\n      setShowSlider(true);\n    }\n  }, [sliderImages, sliderObj]);\n  useEffect(() => {\n    if (selectedLang === defaultLang) {\n      setImageCta(false);\n      setImageTitleDesc(false);\n\n      if (sliderData !== null && sliderData !== void 0 && sliderData.gid) {\n        var _sliderData$gid, _sliderData$gid2, _sliderData$gid3, _sliderData$gid4, _sliderData$gid5, _sliderData$gid5$imag;\n\n        setSliderObj({\n          title: sliderData === null || sliderData === void 0 ? void 0 : (_sliderData$gid = sliderData.gid) === null || _sliderData$gid === void 0 ? void 0 : _sliderData$gid.title,\n          description: sliderData === null || sliderData === void 0 ? void 0 : (_sliderData$gid2 = sliderData.gid) === null || _sliderData$gid2 === void 0 ? void 0 : _sliderData$gid2.description,\n          cta: sliderData === null || sliderData === void 0 ? void 0 : (_sliderData$gid3 = sliderData.gid) === null || _sliderData$gid3 === void 0 ? void 0 : _sliderData$gid3.cta,\n          expiryDate: sliderData === null || sliderData === void 0 ? void 0 : (_sliderData$gid4 = sliderData.gid) === null || _sliderData$gid4 === void 0 ? void 0 : _sliderData$gid4.expiryDate\n        });\n\n        if (sliderData !== null && sliderData !== void 0 && (_sliderData$gid5 = sliderData.gid) !== null && _sliderData$gid5 !== void 0 && (_sliderData$gid5$imag = _sliderData$gid5.images) !== null && _sliderData$gid5$imag !== void 0 && _sliderData$gid5$imag.length) {\n          setSliderImages(sliderData.gid.images);\n\n          for (const image of sliderData.gid.images) {\n            if (image.cta) {\n              var _image$cta, _image$cta$replace$re;\n\n              setImageCta(true);\n              const ctaLinkValue = image === null || image === void 0 ? void 0 : (_image$cta = image.cta) === null || _image$cta === void 0 ? void 0 : (_image$cta$replace$re = _image$cta.replace(`<a target=\"_blank\" href=\"`, '').replace('>', '').replace('</a>', '').replace('\"', '').trim()) === null || _image$cta$replace$re === void 0 ? void 0 : _image$cta$replace$re.split(' ')[0];\n              const linkMatch = ctaLinkValue === null || ctaLinkValue === void 0 ? void 0 : ctaLinkValue.match(/\\bhttps?:\\/\\/\\S+/gi);\n\n              if (linkMatch) {\n                var _image$cta2;\n\n                image['ctaLinkType'] = 'external';\n                const cta_title = image === null || image === void 0 ? void 0 : (_image$cta2 = image.cta) === null || _image$cta2 === void 0 ? void 0 : _image$cta2.replace(`<a target=\"_blank\" href=\"`, '').replace(linkMatch[0] + '\"', '').replace('>', '').replace('</a>', '').trim();\n                image['ctaTitleValue'] = cta_title;\n              } else {\n                var _image$cta3;\n\n                image['ctaLinkType'] = 'internal';\n                const cta_title = image === null || image === void 0 ? void 0 : (_image$cta3 = image.cta) === null || _image$cta3 === void 0 ? void 0 : _image$cta3.replace(`<a target=\"_blank\" href=\"`, '').replace(ctaLinkValue + '\"', '').replace('>', '').replace('</a>', '').trim();\n                image['ctaTitleValue'] = cta_title;\n              }\n\n              image['ctaLinkValue'] = ctaLinkValue;\n            }\n\n            if (image.title || image.description) {\n              setImageTitleDesc(true);\n            }\n          }\n        }\n      }\n    }\n\n    if (selectedLang !== defaultLang) {\n      var _sliderData$gid6, _sliderData$gid6$imag;\n\n      setSliderObj(otherLangSlider);\n\n      if ((sliderData === null || sliderData === void 0 ? void 0 : (_sliderData$gid6 = sliderData.gid) === null || _sliderData$gid6 === void 0 ? void 0 : (_sliderData$gid6$imag = _sliderData$gid6.images) === null || _sliderData$gid6$imag === void 0 ? void 0 : _sliderData$gid6$imag.length) > 0) {\n        const updatedSliderImages = [...sliderData.gid.images];\n        setSliderImages(sliderData.gid.images);\n\n        for (const img of sliderData.gid.images) {\n          if (img !== null && img !== void 0 && img.cta) setImageCta(true);\n\n          if (img !== null && img !== void 0 && img.title || img !== null && img !== void 0 && img.description) {\n            setImageTitleDesc(true);\n          }\n\n          if (selectedLang !== defaultLang && otherLangSliderImages && otherLangSliderImages.length > 0) {\n            var _otherLangSliderImage, _otherLangSliderImage2, _otherLangSliderImage3;\n\n            const index = updatedSliderImages.indexOf(img);\n            img.title = otherLangSliderImages[index] && ((_otherLangSliderImage = otherLangSliderImages[index]) === null || _otherLangSliderImage === void 0 ? void 0 : _otherLangSliderImage.title);\n            img.description = otherLangSliderImages[index] && ((_otherLangSliderImage2 = otherLangSliderImages[index]) === null || _otherLangSliderImage2 === void 0 ? void 0 : _otherLangSliderImage2.description);\n            img.cta = otherLangSliderImages[index] && ((_otherLangSliderImage3 = otherLangSliderImages[index]) === null || _otherLangSliderImage3 === void 0 ? void 0 : _otherLangSliderImage3.cta);\n          }\n        }\n      }\n    }\n  }, [sliderData, otherLangSlider, otherLangSliderImages]);\n  return __jsx(React.Fragment, null, showSlider && __jsx(Typography, {\n    component: 'div',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 31\n    }\n  }, sliderImages.length > 0 && __jsx(Carousel, {\n    autoPlay: false,\n    interval: null // slide={true}\n    ,\n    nextIcon: __jsx(Typography, {\n      component: 'div',\n      className: classes.sliderBg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 45\n      }\n    }, __jsx(NextIcon, {\n      className: classes.sliderArrow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 104\n      }\n    })),\n    prevIcon: __jsx(Typography, {\n      component: 'div',\n      className: classes.sliderBg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 45\n      }\n    }, __jsx(PrevIcon, {\n      className: classes.sliderArrow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 104\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 25\n    }\n  }, sliderImages.map((image, index) => {\n    return __jsx(Carousel.Item, {\n      key: `crousel-item-${index}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 41\n      }\n    }, type === 'fullcol' && __jsx(\"div\", {\n      className: classes.imageBackgroundDiv,\n      style: {\n        backgroundImage: `url(${GENERAL_SETTINGS.STATIC_URL + (image === null || image === void 0 ? void 0 : image.fileurl)})`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 49\n      }\n    }), (type === 'twocol' || type === 'threecol') && __jsx(\"div\", {\n      style: {\n        backgroundImage: `url(${GENERAL_SETTINGS.STATIC_URL}${image.fileurl})`\n      },\n      className: classes.twoThreeColImage,\n      onClick: () => setIsOpenSlider(true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 49\n      }\n    }), sliderType !== 'sliderOnly' && __jsx(Carousel.Caption, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 80\n      }\n    }, isImageTitleDesc ? __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: classes.title,\n      dangerouslySetInnerHTML: {\n        __html: image === null || image === void 0 ? void 0 : image.title\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 61\n      }\n    }), __jsx(\"div\", {\n      className: classes.description,\n      dangerouslySetInnerHTML: {\n        __html: image === null || image === void 0 ? void 0 : image.description\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 61\n      }\n    })) : __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: classes.title,\n      dangerouslySetInnerHTML: {\n        __html: sliderObj === null || sliderObj === void 0 ? void 0 : sliderObj.title\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 61\n      }\n    }), __jsx(\"div\", {\n      className: classes.description,\n      dangerouslySetInnerHTML: {\n        __html: sliderObj === null || sliderObj === void 0 ? void 0 : sliderObj.description\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 61\n      }\n    })), isImageCta ? __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 70\n      }\n    }, (image === null || image === void 0 ? void 0 : image.cta) && (image === null || image === void 0 ? void 0 : image.ctaLinkType) === 'external' && __jsx(Button, {\n      variant: \"contained\",\n      size: \"small\",\n      color: \"primary\",\n      \"aria-label\": \"add\",\n      className: classes.ctaButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 116\n      }\n    }, __jsx(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: image.cta\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 69\n      }\n    })), (image === null || image === void 0 ? void 0 : image.cta) && (image === null || image === void 0 ? void 0 : image.ctaLinkType) === 'internal' && __jsx(Button, {\n      variant: \"contained\",\n      size: \"small\",\n      color: \"primary\",\n      \"aria-label\": \"add\",\n      className: classes.ctaButton,\n      onClick: () => {\n        router.push({\n          pathname: `${image === null || image === void 0 ? void 0 : image.ctaLinkValue}`\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 65\n      }\n    }, image.ctaTitleValue || '')) : __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 66\n      }\n    }, (sliderObj === null || sliderObj === void 0 ? void 0 : sliderObj.cta) && __jsx(Button, {\n      variant: \"contained\",\n      size: \"small\",\n      color: \"primary\",\n      \"aria-label\": \"add\",\n      className: classes.ctaButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 83\n      }\n    }, __jsx(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: sliderObj.cta\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 69\n      }\n    })))));\n  })), __jsx(ThumbnailSliderModal, {\n    open: isOpenSlider,\n    sliderTitle: sliderObj === null || sliderObj === void 0 ? void 0 : sliderObj.title,\n    sliderDesc: sliderObj === null || sliderObj === void 0 ? void 0 : sliderObj.description,\n    onClose: e => setIsOpenSlider(e),\n    sliderImages: sliderImages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 21\n    }\n  })));\n};\n\nconst memorizedWebsiteSlider = /*#__PURE__*/memo(WebsiteSlider);\nexport default memorizedWebsiteSlider;","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/website/pages/WebsiteSlider.js"],"names":["React","memo","useContext","useEffect","useState","Carousel","WebCmsGlobal","makeStyles","Button","NextIcon","PrevIcon","Typography","ThumbnailSliderModal","useRouter","moment","OREST_ENDPOINT","useStyles","theme","title","props","textColor","description","image","width","backgroundSize","ctaButton","borderRadius","backgroundColor","buttonColor","color","sliderBg","border","sliderArrow","fontSize","breakpoints","down","imageBackgroundDiv","aspectRatio","backgroundPosition","height","twoThreeColImage","position","backgroundRepeat","cursor","WebsiteSlider","sliderData","otherLangSlider","otherLangSliderImages","selectedLang","defaultLang","type","sliderType","GENERAL_SETTINGS","sliderImages","setSliderImages","sliderObj","setSliderObj","isImageCta","setImageCta","isImageTitleDesc","setImageTitleDesc","isOpenSlider","setIsOpenSlider","showSlider","setShowSlider","router","classes","img","cta","expiryDate","currentDate","format","DATEFORMAT_LOCALE","isAfter","gid","images","length","ctaLinkValue","replace","trim","split","linkMatch","match","cta_title","updatedSliderImages","index","indexOf","map","backgroundImage","STATIC_URL","fileurl","__html","ctaLinkType","push","pathname","ctaTitleValue","e","memorizedWebsiteSlider"],"mappings":"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","sourcesContent":["import React, { memo, useContext, useEffect, useState } from 'react'\nimport {Carousel} from 'react-bootstrap';\nimport WebCmsGlobal from \"components/webcms-global\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport NextIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport PrevIcon from \"@material-ui/icons/KeyboardArrowLeft\";\nimport {Typography} from \"@material-ui/core\";\nimport ThumbnailSliderModal from \"./SliderModal\";\nimport {useRouter} from \"next/router\";\nimport moment from \"moment\";\nimport {OREST_ENDPOINT} from \"../../../model/orest/constants\";\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        \"-webkit-text-fill-color\": props => props?.textColor ? props.textColor : \"#ffffff\",\n        \"-webkit-text-stroke-width\": \"0.8px\",\n        \"-webkit-text-stroke-color\": \"#000000\"\n    },\n    description: {\n        \"-webkit-text-fill-color\": props => props?.textColor ? props.textColor : \"#ffffff\",\n        \"-webkit-text-stroke-width\": \"0.8px\",\n        \"-webkit-text-stroke-color\": \"#000000\"\n    },\n    image: {\n        width: '100%',\n        backgroundSize: \"cover\"\n    },\n    ctaButton: {\n        borderRadius: 20,\n        backgroundColor: props => props?.buttonColor ? props.buttonColor : \"#ffffff\",\n        color: props => props?.textColor ? props.textColor : \"#ffffff\"\n    },\n    sliderBg: {\n        border: '1px solid white',\n        backgroundColor: '#FFFFFF',\n        borderRadius: '50%'\n    },\n    sliderArrow: {\n        color: \"#000000\",\n        fontSize: 40,\n        [theme.breakpoints.down(\"sm\")]: {\n            fontSize: 30,\n        },\n    },\n    imageBackgroundDiv: {\n        width: \"100vw\",\n        aspectRatio: 1.77,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        [theme.breakpoints.down(\"sm\")]: {\n            height: \"31vh\",\n        },\n    },\n    twoThreeColImage: {\n        width: \"100%\",\n        position: \"relative\",\n        height: 300,\n        backgroundSize:\"cover\",\n        backgroundPosition:\"center\",\n        backgroundRepeat:\"no-repeat\",\n        [theme.breakpoints.down(\"sm\")]: {\n            height: 150,\n        },\n        cursor: \"pointer\"\n    }\n}));\n\nconst WebsiteSlider = (props) => {\n\n    const {\n        sliderData,\n        otherLangSlider,\n        otherLangSliderImages,\n        selectedLang,\n        defaultLang,\n        type,\n        sliderType\n    } = props;\n\n    const {GENERAL_SETTINGS} = useContext(WebCmsGlobal);\n    const [sliderImages, setSliderImages] = useState([]);\n    const [sliderObj, setSliderObj] = useState({});\n    const [isImageCta, setImageCta] = useState(false);\n    const [isImageTitleDesc, setImageTitleDesc] = useState(false);\n    const [ isOpenSlider, setIsOpenSlider ] = useState(false);\n    const [ showSlider, setShowSlider ] = useState(false);\n    const router = useRouter();\n\n    const classes = useStyles(sliderData);\n\n    useEffect(() => {\n        for (const img of sliderImages) {\n            if (img.cta) setImageCta(true)\n        }\n        if (sliderObj?.expiryDate) {\n            const currentDate = moment().format(OREST_ENDPOINT.DATEFORMAT_LOCALE);\n            setShowSlider(moment(sliderObj?.expiryDate).isAfter(currentDate));\n        } else {\n            setShowSlider(true);\n        }\n    }, [sliderImages, sliderObj]);\n\n    useEffect(() => {\n        if (selectedLang === defaultLang) {\n            setImageCta(false);\n            setImageTitleDesc(false);\n            if (sliderData?.gid) {\n                setSliderObj({\n                    title: sliderData?.gid?.title,\n                    description: sliderData?.gid?.description,\n                    cta: sliderData?.gid?.cta,\n                    expiryDate: sliderData?.gid?.expiryDate\n                })\n                if (sliderData?.gid?.images?.length) {\n                    setSliderImages(sliderData.gid.images);\n                    for (const image of sliderData.gid.images) {\n                        if (image.cta) {\n                            setImageCta(true);\n                            const ctaLinkValue = image?.cta?.replace(`<a target=\"_blank\" href=\"`,\n                                '').replace('>',\n                                '').replace('</a>', '').replace('\"', '').trim()?.split(' ')[0];\n                            const linkMatch = ctaLinkValue?.match(/\\bhttps?:\\/\\/\\S+/gi);\n                            if (linkMatch) {\n                                image['ctaLinkType'] = 'external';\n                                const cta_title = image?.cta?.replace(`<a target=\"_blank\" href=\"`,\n                                    '').replace(linkMatch[0] + '\"', '').replace('>',\n                                    '').replace('</a>', '').trim();\n                                image['ctaTitleValue'] = cta_title;\n                            } else {\n                                image['ctaLinkType'] = 'internal';\n                                const cta_title = image?.cta?.replace(`<a target=\"_blank\" href=\"`,\n                                    '').replace(ctaLinkValue + '\"', '').replace('>',\n                                    '').replace('</a>', '').trim();\n                                image['ctaTitleValue'] = cta_title;\n                            }\n                            image['ctaLinkValue'] = ctaLinkValue;\n                        }\n                        if (image.title || image.description) {\n                            setImageTitleDesc(true);\n                        }\n                    }\n                }\n            }\n        }\n        if (selectedLang !== defaultLang) {\n            setSliderObj(otherLangSlider);\n            if (sliderData?.gid?.images?.length > 0) {\n                const updatedSliderImages = [...sliderData.gid.images];\n                setSliderImages(sliderData.gid.images);\n                for (const img of sliderData.gid.images) {\n                    if (img?.cta) setImageCta(true);\n                    if (img?.title || img?.description) {\n                        setImageTitleDesc(true);\n                    }\n                    if (selectedLang !== defaultLang && otherLangSliderImages && otherLangSliderImages.length > 0) {\n                        const index = updatedSliderImages.indexOf(img);\n                        img.title = otherLangSliderImages[index] && otherLangSliderImages[index]?.title;\n                        img.description = otherLangSliderImages[index] && otherLangSliderImages[index]?.description;\n                        img.cta = otherLangSliderImages[index] && otherLangSliderImages[index]?.cta;\n                    }\n                }\n            }\n        }\n    },[sliderData, otherLangSlider, otherLangSliderImages]);\n\n    return(\n        <>\n            {\n                showSlider && <Typography component={'div'}>\n                    {\n                        sliderImages.length > 0 &&\n                        <Carousel autoPlay={false} interval={null}\n                            // slide={true}\n                                  nextIcon={<Typography component={'div'} className={classes.sliderBg}><NextIcon\n                                      className={classes.sliderArrow}/></Typography>}\n                                  prevIcon={<Typography component={'div'} className={classes.sliderBg}><PrevIcon\n                                      className={classes.sliderArrow}/></Typography>}\n                        >\n                            {\n                                sliderImages.map((image, index) => {\n                                    return (\n                                        <Carousel.Item key={`crousel-item-${index}`}>\n                                            {\n                                                type === 'fullcol' &&\n                                                <div className={classes.imageBackgroundDiv}\n                                                     style={{\n                                                         backgroundImage: `url(${GENERAL_SETTINGS.STATIC_URL + image?.fileurl})`,\n                                                     }}></div>\n                                            }\n                                            {\n                                                (type === 'twocol' || type === 'threecol') &&\n                                                <div style={{backgroundImage: `url(${GENERAL_SETTINGS.STATIC_URL}${image.fileurl})`,}}\n                                                     className={classes.twoThreeColImage} onClick={()=> setIsOpenSlider(true)} />\n                                            }\n                                            {\n                                                sliderType !== 'sliderOnly' && <Carousel.Caption>\n                                                    {\n                                                        isImageTitleDesc ? <>\n                                                            <div className={classes.title} dangerouslySetInnerHTML={{__html: image?.title}}></div>\n                                                            <div className={classes.description} dangerouslySetInnerHTML={{__html: image?.description}}></div>\n                                                        </> : <>\n                                                            <div className={classes.title} dangerouslySetInnerHTML={{__html: sliderObj?.title}}></div>\n                                                            <div className={classes.description} dangerouslySetInnerHTML={{__html: sliderObj?.description}}></div>\n                                                        </>\n                                                    }\n                                                    {\n                                                        isImageCta ? <div>\n                                                            {\n                                                                image?.cta && image?.ctaLinkType === 'external' && <Button\n                                                                    variant=\"contained\"\n                                                                    size=\"small\"\n                                                                    color=\"primary\"\n                                                                    aria-label=\"add\"\n                                                                    className={classes.ctaButton}\n                                                                >\n                                                                    <div dangerouslySetInnerHTML={{__html: image.cta}}></div>\n                                                                </Button>\n                                                            }\n                                                            {\n                                                                image?.cta && image?.ctaLinkType === 'internal' &&\n                                                                <Button\n                                                                    variant=\"contained\"\n                                                                    size=\"small\"\n                                                                    color=\"primary\"\n                                                                    aria-label=\"add\"\n                                                                    className={classes.ctaButton}\n                                                                    onClick={() => {\n                                                                        router.push({\n                                                                            pathname: `${image?.ctaLinkValue}`\n                                                                        });\n                                                                    }}\n                                                                >\n                                                                    {image.ctaTitleValue || ''}\n                                                                </Button>\n                                                            }\n                                                        </div> : <div>\n                                                            {\n                                                                sliderObj?.cta && <Button\n                                                                    variant=\"contained\"\n                                                                    size=\"small\"\n                                                                    color=\"primary\"\n                                                                    aria-label=\"add\"\n                                                                    className={classes.ctaButton}\n                                                                >\n                                                                    <div dangerouslySetInnerHTML={{__html: sliderObj.cta}}></div>\n                                                                </Button>\n                                                            }\n                                                        </div>\n                                                    }\n                                                </Carousel.Caption>\n                                            }\n                                        </Carousel.Item>\n                                    )\n                                })\n                            }\n                        </Carousel>\n                    }\n                    <ThumbnailSliderModal open={isOpenSlider} sliderTitle={sliderObj?.title} sliderDesc={sliderObj?.description} onClose={(e)=> setIsOpenSlider(e)} sliderImages={sliderImages} />\n                </Typography>\n            }\n        </>\n    )\n}\n\nconst memorizedWebsiteSlider = memo(WebsiteSlider)\n\nexport default memorizedWebsiteSlider\n"]},"metadata":{},"sourceType":"module"}