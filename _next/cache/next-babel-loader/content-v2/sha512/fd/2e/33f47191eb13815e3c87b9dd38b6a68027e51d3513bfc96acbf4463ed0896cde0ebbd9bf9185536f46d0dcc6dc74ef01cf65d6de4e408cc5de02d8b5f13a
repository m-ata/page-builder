{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/pages/booking/index.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { connect, useSelector } from 'react-redux';\nimport BookingPage from 'components/booking/BookingPage';\nimport { OREST_ENDPOINT } from 'model/orest/constants';\nimport WebCmsGlobal from 'components/webcms-global';\nimport { setToState } from 'state/actions';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useRouter } from 'next/router';\nimport TagManager from '@webcms-globals/tag-manager';\nimport { defaultLocale } from 'lib/translations/config';\n\nconst getCacheKey = baseUrl => {\n  return axios({\n    url: baseUrl + 'api/create/cache/key',\n    method: 'post'\n  }).then(response => {\n    if (response.status === 200 && response.data.success) {\n      return response.data.value;\n    } else {\n      return false;\n    }\n  }).catch(() => {\n    return false;\n  });\n};\n\nconst getHotelBookInfo = (baseUrl, uiToken) => {\n  return axios({\n    url: baseUrl + 'api/hotel/book/info/check',\n    method: 'post',\n    params: {\n      startdate: moment(moment()).locale(defaultLocale).format(OREST_ENDPOINT.DATEFORMAT),\n      uitoken: uiToken\n    }\n  }).then(response => {\n    if (response.status === 200 && response.data.success) {\n      return response.data.data;\n    } else {\n      return false;\n    }\n  }).catch(() => {\n    return false;\n  });\n};\n\nconst getAvailabilityRoomList = (baseUrl, uitoken, query) => {\n  let useParams = {\n    uitoken: uitoken,\n    ci: moment(query.checkinDate).locale(defaultLocale).format(OREST_ENDPOINT.DATEFORMAT),\n    co: moment(query.checkoutDate).locale(defaultLocale).format(OREST_ENDPOINT.DATEFORMAT),\n    resdate: moment(moment()).locale(defaultLocale).format(OREST_ENDPOINT.DATEFORMAT),\n    adult: query.adult,\n    child: query.child,\n    totalroom: query.totalroom\n  };\n\n  if (query.clientid) {\n    useParams.clientid = query.clientid;\n  }\n\n  if (query.pricecurr) {\n    useParams.pricecurr = query.pricecurr;\n  }\n\n  if (query.refcode) {\n    useParams.refcode = query.refcode;\n  }\n\n  return axios({\n    url: baseUrl + 'api/roomtype/book/list',\n    method: 'post',\n    params: useParams\n  }).then(roomAvailabilityResponse => {\n    const roomAvailabilityData = roomAvailabilityResponse.data;\n\n    if (roomAvailabilityData.success === true && roomAvailabilityData.data.length > 0) {\n      return {\n        searchid: roomAvailabilityData.searchid,\n        data: roomAvailabilityData.data\n      };\n    } else {\n      return false;\n    }\n  });\n};\n\nconst getHotelPayType = (baseUrl, uiToken) => {\n  return axios({\n    url: baseUrl + 'api/hotel/payment/type',\n    method: 'post',\n    params: {\n      uitoken: uiToken\n    }\n  }).then(response => {\n    if (response.status === 200) {\n      return response.data;\n    } else {\n      return false;\n    }\n  }).catch(() => {\n    return false;\n  });\n};\n\nconst useStyles = makeStyles(theme => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff'\n  }\n}));\n\nconst IndexPage = props => {\n  const {\n    state,\n    setToState,\n    hideLayout\n  } = props;\n  const {\n    GENERAL_SETTINGS,\n    WEBCMS_DATA\n  } = useContext(WebCmsGlobal);\n  const isLogin = !!useSelector(state => state.orest.currentUser && state.orest.currentUser.auth);\n  const infoLogin = useSelector(state => state.orest.currentUser && state.orest.currentUser.loginfo || false);\n  const {\n    0: initialState,\n    1: setInitialState\n  } = useState({\n    hotelUiToken: false,\n    hotelPaymentType: false\n  });\n  const classes = useStyles();\n  const router = useRouter();\n  const params = {\n    ci: router.query.ci || false,\n    co: router.query.co || false,\n    adult: router.query.adult || false,\n    child: router.query.child || false,\n    chdage: router.query['chdage[]'] || false,\n    pricecurr: router.query.pricecurr || false\n  };\n  useEffect(() => {\n    var _WEBCMS_DATA$assets, _WEBCMS_DATA$assets$m;\n\n    if (WEBCMS_DATA !== null && WEBCMS_DATA !== void 0 && (_WEBCMS_DATA$assets = WEBCMS_DATA.assets) !== null && _WEBCMS_DATA$assets !== void 0 && (_WEBCMS_DATA$assets$m = _WEBCMS_DATA$assets.meta) !== null && _WEBCMS_DATA$assets$m !== void 0 && _WEBCMS_DATA$assets$m.googleTag) {\n      var _WEBCMS_DATA$assets2, _WEBCMS_DATA$assets2$;\n\n      TagManager.page.setChange({\n        hotelName: WEBCMS_DATA === null || WEBCMS_DATA === void 0 ? void 0 : (_WEBCMS_DATA$assets2 = WEBCMS_DATA.assets) === null || _WEBCMS_DATA$assets2 === void 0 ? void 0 : (_WEBCMS_DATA$assets2$ = _WEBCMS_DATA$assets2.meta) === null || _WEBCMS_DATA$assets2$ === void 0 ? void 0 : _WEBCMS_DATA$assets2$.title,\n        hotelId: GENERAL_SETTINGS.HOTELREFNO,\n        pageTitle: window.document.title,\n        pagePath: location.href,\n        pageStep: 'Room List',\n        isGuest: isLogin\n      });\n    }\n\n    loadHotelBookInfoSett();\n  }, []);\n\n  const loadHotelBookInfoSett = async () => {\n    var _hotelPaymentType;\n\n    let hotelUiToken = initialState.hotelUiToken,\n        hotelPaymentType = initialState.hotelPaymentType;\n\n    if (!hotelUiToken) {\n      hotelUiToken = await getCacheKey(GENERAL_SETTINGS.BASE_URL);\n      setInitialState(_objectSpread(_objectSpread({}, initialState), {}, {\n        hotelUiToken: hotelUiToken\n      }));\n    }\n\n    if (!hotelPaymentType) {\n      hotelPaymentType = await getHotelPayType(GENERAL_SETTINGS.BASE_URL, hotelUiToken);\n      setInitialState(_objectSpread(_objectSpread({}, initialState), {}, {\n        hotelPaymentType: hotelPaymentType\n      }));\n    }\n\n    let hotelBookingInfo = false;\n\n    if (!state.hotelBookingInfo) {\n      hotelBookingInfo = await getHotelBookInfo(GENERAL_SETTINGS.BASE_URL, hotelUiToken);\n      setToState('ibe', ['hotelUiToken'], hotelUiToken);\n      setToState('ibe', ['hotelBookingInfo'], hotelBookingInfo);\n    }\n\n    if (!state.hotelPaymentType && ((_hotelPaymentType = hotelPaymentType) === null || _hotelPaymentType === void 0 ? void 0 : _hotelPaymentType.paymentypes.length) > 0) {\n      setToState('ibe', ['hotelPaymentType'], hotelPaymentType);\n      const defaultPayType = hotelPaymentType && hotelPaymentType.paymentypes && hotelPaymentType.paymentypes.sort((a, b) => a.index - b.index).sort((a, b) => b.isdef - a.isdef)[0];\n      setToState('ibe', ['selectedPaymentType'], defaultPayType);\n      setToState('ibe', ['selectedPaymentTypeId'], Number(defaultPayType.id || false));\n    }\n\n    if (state.bookingState.stayDates[0] === null && state.bookingState.stayDates[1] === null) {\n      var _hotelBookingInfo, _hotelBookingInfo4;\n\n      let CHECKIN_DATE = (params === null || params === void 0 ? void 0 : params.ci) && moment(params.ci, OREST_ENDPOINT.DATEFORMAT_PARAMS) || ((_hotelBookingInfo = hotelBookingInfo) === null || _hotelBookingInfo === void 0 ? void 0 : _hotelBookingInfo.startdate) && moment(hotelBookingInfo.startdate, OREST_ENDPOINT.DATEFORMAT).isAfter(moment()) && moment(hotelBookingInfo.startdate, OREST_ENDPOINT.DATEFORMAT) || moment(),\n          CHECKOUT_DATE = (params === null || params === void 0 ? void 0 : params.co) && moment(params.co, OREST_ENDPOINT.DATEFORMAT_PARAMS) || moment(CHECKIN_DATE).add(1, 'days');\n\n      if (params.adult || params.child) {\n        if (hotelBookingInfo.maxpax >= params.adult) {\n          setToState('ibe', ['bookingState', 'adult'], params.adult && Number(params.adult) || 1);\n        } else {\n          var _hotelBookingInfo2, _GENERAL_SETTINGS$hot;\n\n          const maxPax = ((_hotelBookingInfo2 = hotelBookingInfo) === null || _hotelBookingInfo2 === void 0 ? void 0 : _hotelBookingInfo2.maxpax) || 0;\n          const defPax = (GENERAL_SETTINGS === null || GENERAL_SETTINGS === void 0 ? void 0 : (_GENERAL_SETTINGS$hot = GENERAL_SETTINGS.hotelSettings) === null || _GENERAL_SETTINGS$hot === void 0 ? void 0 : _GENERAL_SETTINGS$hot.defpax) || 0;\n          const usePax = maxPax >= defPax ? defPax : maxPax;\n          setToState('ibe', ['bookingState', 'adult'], usePax || maxPax);\n        }\n\n        let childState = 0;\n        let childAgesState = [];\n        Array.from({\n          length: Number(params.child)\n        }).map((chd, i) => {\n          if (hotelBookingInfo.maxchd >= i) {\n            childState = i + 1;\n            let queryChdAge = (params === null || params === void 0 ? void 0 : params.chdage[i]) && Number(params.chdage[i]) || 1;\n\n            if (queryChdAge > hotelBookingInfo.maxchdage) {\n              queryChdAge = hotelBookingInfo.maxchdage;\n            }\n\n            const newValue = {\n              ageno: childState,\n              age: queryChdAge,\n              indexno: childState\n            };\n            childAgesState = [...childAgesState, newValue];\n          }\n        });\n        setToState('ibe', ['bookingState', 'child'], childState);\n        setToState('ibe', ['childAges'], childAgesState);\n      } else {\n        var _hotelBookingInfo3, _GENERAL_SETTINGS$hot2;\n\n        const maxPax = ((_hotelBookingInfo3 = hotelBookingInfo) === null || _hotelBookingInfo3 === void 0 ? void 0 : _hotelBookingInfo3.maxpax) || 0;\n        const defPax = (GENERAL_SETTINGS === null || GENERAL_SETTINGS === void 0 ? void 0 : (_GENERAL_SETTINGS$hot2 = GENERAL_SETTINGS.hotelSettings) === null || _GENERAL_SETTINGS$hot2 === void 0 ? void 0 : _GENERAL_SETTINGS$hot2.defpax) || 0;\n        const usePax = maxPax >= defPax ? defPax : maxPax;\n        setToState('ibe', ['bookingState', 'adult'], usePax || 1);\n      }\n\n      if (params.pricecurr && hotelBookingInfo.currencycode !== params.pricecurr && (_hotelBookingInfo4 = hotelBookingInfo) !== null && _hotelBookingInfo4 !== void 0 && _hotelBookingInfo4.currencyList) {\n        const useCurrency = hotelBookingInfo.currencyList.filter(currency => currency.code === params.pricecurr);\n\n        if ((useCurrency === null || useCurrency === void 0 ? void 0 : useCurrency.length) > 0) {\n          setToState('ibe', ['diffCurrency', 'use'], useCurrency[0].code);\n          setToState('ibe', ['diffCurrency', 'value'], useCurrency[0].code);\n        }\n      }\n\n      let diffDate = CHECKOUT_DATE.diff(CHECKIN_DATE, 'days');\n      setToState('ibe', ['bookingState', 'stayDates'], [CHECKIN_DATE, CHECKOUT_DATE]);\n      setToState('ibe', ['bookingState', 'night'], diffDate);\n    }\n  };\n\n  const handleGetRoomList = async () => {\n    var _WEBCMS_DATA$assets3, _WEBCMS_DATA$assets3$, _getRoomList$data$, _window, _window2;\n\n    if (state.selectedRooms && state.selectedRooms.length > 0 && state.diffCurrency.value !== state.diffCurrency.use) {\n      setToState('ibe', ['diffCurrency', 'isAlert'], true);\n      return;\n    }\n\n    setToState('ibe', ['bookingIsLoading'], true);\n    setToState('ibe', ['roomAvailabilityList'], []);\n    let useParams = {\n      checkinDate: state.bookingState.stayDates[0],\n      checkoutDate: state.bookingState.stayDates[1],\n      adult: state.bookingState.adult,\n      child: state.bookingState.child,\n      totalroom: 1\n    };\n\n    if (infoLogin && infoLogin !== null && infoLogin !== void 0 && infoLogin.refid) {\n      useParams.clientid = infoLogin.refid;\n    }\n\n    if (state.bookingState.refcode) {\n      useParams.refcode = state.bookingState.refcode;\n    }\n\n    if (state.diffCurrency.value) {\n      useParams.pricecurr = state.diffCurrency.value;\n    }\n\n    const getRoomList = await getAvailabilityRoomList(GENERAL_SETTINGS.BASE_URL, state.hotelUiToken, useParams);\n\n    if (WEBCMS_DATA !== null && WEBCMS_DATA !== void 0 && (_WEBCMS_DATA$assets3 = WEBCMS_DATA.assets) !== null && _WEBCMS_DATA$assets3 !== void 0 && (_WEBCMS_DATA$assets3$ = _WEBCMS_DATA$assets3.meta) !== null && _WEBCMS_DATA$assets3$ !== void 0 && _WEBCMS_DATA$assets3$.googleTag) {\n      var _WEBCMS_DATA$assets4, _WEBCMS_DATA$assets4$, _state$diffCurrency;\n\n      TagManager.booking.setRoomList({\n        eventLabel: 'Room Availability Results',\n        hotelName: WEBCMS_DATA === null || WEBCMS_DATA === void 0 ? void 0 : (_WEBCMS_DATA$assets4 = WEBCMS_DATA.assets) === null || _WEBCMS_DATA$assets4 === void 0 ? void 0 : (_WEBCMS_DATA$assets4$ = _WEBCMS_DATA$assets4.meta) === null || _WEBCMS_DATA$assets4$ === void 0 ? void 0 : _WEBCMS_DATA$assets4$.title,\n        hotelId: GENERAL_SETTINGS.HOTELREFNO,\n        ciDate: moment(useParams.checkinDate).format(OREST_ENDPOINT.DATEFORMAT),\n        coDate: moment(useParams.checkoutDate).format(OREST_ENDPOINT.DATEFORMAT),\n        adult: useParams.adult,\n        child: useParams.child,\n        currencyCode: (state === null || state === void 0 ? void 0 : (_state$diffCurrency = state.diffCurrency) === null || _state$diffCurrency === void 0 ? void 0 : _state$diffCurrency.value) || state.hotelBookingInfo.currencycode,\n        impressionsData: getRoomList.data\n      });\n    }\n\n    if (state.diffCurrency.value && state.diffCurrency.value === (getRoomList === null || getRoomList === void 0 ? void 0 : (_getRoomList$data$ = getRoomList.data[0]) === null || _getRoomList$data$ === void 0 ? void 0 : _getRoomList$data$.pricecurr)) {\n      var _getRoomList$data$2;\n\n      setToState('ibe', ['diffCurrency', 'use'], getRoomList === null || getRoomList === void 0 ? void 0 : (_getRoomList$data$2 = getRoomList.data[0]) === null || _getRoomList$data$2 === void 0 ? void 0 : _getRoomList$data$2.pricecurr);\n    } else {\n      setToState('ibe', ['diffCurrency', 'use'], false);\n    }\n\n    if (((_window = window) === null || _window === void 0 ? void 0 : _window.innerWidth) <= 959 && ((_window2 = window) === null || _window2 === void 0 ? void 0 : _window2.pageYOffset) <= 500) {\n      window.scrollTo({\n        top: 542,\n        behavior: \"smooth\"\n      });\n    }\n\n    setToState('ibe', ['roomAvailabilityList'], getRoomList.data);\n    setToState('ibe', ['searchid'], getRoomList.searchid);\n    setToState('ibe', ['bookingIsLoading'], false);\n    setToState('ibe', ['hotelBookingBackdrop'], false);\n    setToState('ibe', ['bookingIsChange'], false);\n  };\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 9\n    }\n  }, __jsx(BookingPage, {\n    callBackRoomList: () => handleGetRoomList(),\n    hideLayout: hideLayout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 13\n    }\n  }), __jsx(Backdrop, {\n    className: classes.backdrop,\n    open: state.hotelBookingBackdrop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 13\n    }\n  }, __jsx(CircularProgress, {\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 17\n    }\n  })));\n};\n\nconst mapStateToProps = state => {\n  return {\n    state: state.formReducer.ibe\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IndexPage);","map":{"version":3,"sources":["/Users/mata/app-cloudweb/pages/booking/index.js"],"names":["React","useContext","useEffect","useState","axios","moment","connect","useSelector","BookingPage","OREST_ENDPOINT","WebCmsGlobal","setToState","Backdrop","CircularProgress","makeStyles","useRouter","TagManager","defaultLocale","getCacheKey","baseUrl","url","method","then","response","status","data","success","value","catch","getHotelBookInfo","uiToken","params","startdate","locale","format","DATEFORMAT","uitoken","getAvailabilityRoomList","query","useParams","ci","checkinDate","co","checkoutDate","resdate","adult","child","totalroom","clientid","pricecurr","refcode","roomAvailabilityResponse","roomAvailabilityData","length","searchid","getHotelPayType","useStyles","theme","backdrop","zIndex","drawer","color","IndexPage","props","state","hideLayout","GENERAL_SETTINGS","WEBCMS_DATA","isLogin","orest","currentUser","auth","infoLogin","loginfo","initialState","setInitialState","hotelUiToken","hotelPaymentType","classes","router","chdage","assets","meta","googleTag","page","setChange","hotelName","title","hotelId","HOTELREFNO","pageTitle","window","document","pagePath","location","href","pageStep","isGuest","loadHotelBookInfoSett","BASE_URL","hotelBookingInfo","paymentypes","defaultPayType","sort","a","b","index","isdef","Number","id","bookingState","stayDates","CHECKIN_DATE","DATEFORMAT_PARAMS","isAfter","CHECKOUT_DATE","add","maxpax","maxPax","defPax","hotelSettings","defpax","usePax","childState","childAgesState","Array","from","map","chd","i","maxchd","queryChdAge","maxchdage","newValue","ageno","age","indexno","currencycode","currencyList","useCurrency","filter","currency","code","diffDate","diff","handleGetRoomList","selectedRooms","diffCurrency","use","refid","getRoomList","booking","setRoomList","eventLabel","ciDate","coDate","currencyCode","impressionsData","innerWidth","pageYOffset","scrollTo","top","behavior","hotelBookingBackdrop","mapStateToProps","formReducer","ibe","mapDispatchToProps","dispatch","stateType","stateName"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport axios from 'axios'\nimport moment from 'moment'\nimport { connect, useSelector } from 'react-redux'\nimport BookingPage from 'components/booking/BookingPage'\nimport { OREST_ENDPOINT } from 'model/orest/constants'\nimport WebCmsGlobal from 'components/webcms-global'\nimport { setToState } from 'state/actions'\nimport Backdrop from '@material-ui/core/Backdrop'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { useRouter } from 'next/router'\nimport TagManager from '@webcms-globals/tag-manager'\nimport { defaultLocale } from 'lib/translations/config'\n\nconst getCacheKey  = (baseUrl) => {\n    return axios({\n        url: baseUrl + 'api/create/cache/key',\n        method: 'post'\n    }).then((response) => {\n        if (response.status === 200 && response.data.success) {\n            return response.data.value\n        } else {\n            return false\n        }\n    }).catch(()=>{\n        return false\n    })\n}\n\nconst getHotelBookInfo = (baseUrl, uiToken) => {\n    return axios({\n        url: baseUrl + 'api/hotel/book/info/check',\n        method: 'post',\n        params: {\n            startdate: moment(moment()).locale(defaultLocale).format(OREST_ENDPOINT.DATEFORMAT),\n            uitoken: uiToken\n        },\n    }).then((response) => {\n        if (response.status === 200 && response.data.success) {\n            return response.data.data\n        } else {\n            return false\n        }\n    }).catch(() => {\n        return false\n    })\n}\n\nconst getAvailabilityRoomList = (baseUrl, uitoken, query) => {\n    let useParams = {\n        uitoken: uitoken,\n        ci: moment(query.checkinDate).locale(defaultLocale).format(OREST_ENDPOINT.DATEFORMAT),\n        co: moment(query.checkoutDate).locale(defaultLocale).format(OREST_ENDPOINT.DATEFORMAT),\n        resdate: moment(moment()).locale(defaultLocale).format(OREST_ENDPOINT.DATEFORMAT),\n        adult: query.adult,\n        child: query.child,\n        totalroom: query.totalroom,\n    }\n\n    if (query.clientid) {\n        useParams.clientid = query.clientid\n    }\n\n    if (query.pricecurr) {\n        useParams.pricecurr = query.pricecurr\n    }\n\n    if (query.refcode) {\n        useParams.refcode = query.refcode\n    }\n\n    return axios({\n        url: baseUrl + 'api/roomtype/book/list',\n        method: 'post',\n        params: useParams,\n    }).then((roomAvailabilityResponse) => {\n        const roomAvailabilityData = roomAvailabilityResponse.data\n        if (roomAvailabilityData.success === true && roomAvailabilityData.data.length > 0) {\n            return {\n                searchid: roomAvailabilityData.searchid,\n                data: roomAvailabilityData.data,\n            }\n        } else {\n            return false\n        }\n    })\n}\n\nconst getHotelPayType = (baseUrl, uiToken) => {\n    return axios({\n        url: baseUrl + 'api/hotel/payment/type',\n        method: 'post',\n        params: {\n            uitoken: uiToken,\n        },\n    }).then((response) => {\n        if (response.status === 200) {\n            return response.data\n        } else {\n            return false\n        }\n    }).catch(() => {\n        return false\n    })\n}\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n}))\n\nconst IndexPage = (props) => {\n    const { state, setToState, hideLayout } = props\n    const { GENERAL_SETTINGS, WEBCMS_DATA } = useContext(WebCmsGlobal)\n    const isLogin = !!useSelector((state) => state.orest.currentUser && state.orest.currentUser.auth)\n    const infoLogin = useSelector((state) => state.orest.currentUser && state.orest.currentUser.loginfo || false)\n    const [initialState, setInitialState] = useState({\n        hotelUiToken: false,\n        hotelPaymentType: false\n    })\n    const classes = useStyles()\n    const router = useRouter()\n    const params = {\n        ci: router.query.ci || false,\n        co: router.query.co || false,\n        adult: router.query.adult || false,\n        child: router.query.child || false,\n        chdage: router.query['chdage[]'] || false,\n        pricecurr: router.query.pricecurr || false\n    }\n\n    useEffect(() =>{\n        if(WEBCMS_DATA?.assets?.meta?.googleTag){\n            TagManager.page.setChange({\n                hotelName: WEBCMS_DATA?.assets?.meta?.title,\n                hotelId: GENERAL_SETTINGS.HOTELREFNO,\n                pageTitle: window.document.title,\n                pagePath: location.href,\n                pageStep: 'Room List',\n                isGuest: isLogin\n            })\n        }\n\n        loadHotelBookInfoSett()\n    } , [])\n\n    const loadHotelBookInfoSett = async () => {\n\n       let hotelUiToken = initialState.hotelUiToken,\n           hotelPaymentType = initialState.hotelPaymentType\n\n        if(!hotelUiToken){\n            hotelUiToken = await getCacheKey(GENERAL_SETTINGS.BASE_URL)\n            setInitialState({...initialState, hotelUiToken: hotelUiToken})\n        }\n\n        if(!hotelPaymentType){\n            hotelPaymentType = await getHotelPayType(GENERAL_SETTINGS.BASE_URL, hotelUiToken)\n            setInitialState({...initialState, hotelPaymentType: hotelPaymentType})\n        }\n\n        let hotelBookingInfo = false\n        if(!state.hotelBookingInfo){\n            hotelBookingInfo = await getHotelBookInfo(GENERAL_SETTINGS.BASE_URL, hotelUiToken)\n            setToState('ibe', ['hotelUiToken'], hotelUiToken)\n            setToState('ibe', ['hotelBookingInfo'], hotelBookingInfo)\n        }\n\n        if(!state.hotelPaymentType && hotelPaymentType?.paymentypes.length > 0){\n            setToState('ibe', ['hotelPaymentType'], hotelPaymentType)\n            const defaultPayType = hotelPaymentType && hotelPaymentType.paymentypes && hotelPaymentType.paymentypes.sort((a, b) => a.index - b.index).sort((a, b) => b.isdef - a.isdef)[0]\n            setToState('ibe', ['selectedPaymentType'], defaultPayType)\n            setToState('ibe', ['selectedPaymentTypeId'],  Number(defaultPayType.id || false))\n        }\n\n        if (state.bookingState.stayDates[0] === null && state.bookingState.stayDates[1] === null) {\n            let CHECKIN_DATE = params?.ci && moment(params.ci, OREST_ENDPOINT.DATEFORMAT_PARAMS) || hotelBookingInfo?.startdate && moment(hotelBookingInfo.startdate, OREST_ENDPOINT.DATEFORMAT).isAfter(moment()) && moment(hotelBookingInfo.startdate, OREST_ENDPOINT.DATEFORMAT) || moment()\n                ,CHECKOUT_DATE = params?.co && moment(params.co, OREST_ENDPOINT.DATEFORMAT_PARAMS) || moment(CHECKIN_DATE).add(1, 'days')\n\n            if (params.adult || params.child) {\n                if(hotelBookingInfo.maxpax >= params.adult){\n                    setToState('ibe', ['bookingState', 'adult'], params.adult && Number(params.adult) || 1)\n                }else{\n                    const maxPax = hotelBookingInfo?.maxpax || 0\n                    const defPax = GENERAL_SETTINGS?.hotelSettings?.defpax || 0\n                    const usePax = (maxPax >= defPax) ? defPax : maxPax\n                    setToState('ibe', ['bookingState', 'adult'], usePax || maxPax)\n                }\n\n                let childState = 0\n                let childAgesState = []\n                Array.from({ length: Number(params.child) }).map((chd, i) => {\n                    if (hotelBookingInfo.maxchd >= i) {\n                        childState = i + 1\n\n                        let queryChdAge = params?.chdage[i] && Number(params.chdage[i]) || 1\n                        if(queryChdAge > hotelBookingInfo.maxchdage){\n                            queryChdAge = hotelBookingInfo.maxchdage\n                        }\n\n                        const newValue = { ageno:  childState, age: queryChdAge, indexno: childState }\n                        childAgesState = [...childAgesState , newValue]\n                    }\n                })\n\n                setToState('ibe', ['bookingState', 'child'], childState)\n                setToState('ibe', ['childAges'], childAgesState)\n            }else{\n                const maxPax = hotelBookingInfo?.maxpax || 0\n                const defPax = GENERAL_SETTINGS?.hotelSettings?.defpax || 0\n                const usePax = (maxPax >= defPax) ? defPax : maxPax\n                setToState('ibe', ['bookingState', 'adult'], usePax || 1)\n            }\n\n            if (params.pricecurr && hotelBookingInfo.currencycode !== params.pricecurr && hotelBookingInfo?.currencyList) {\n                const useCurrency = hotelBookingInfo.currencyList.filter(currency => currency.code === params.pricecurr)\n                if (useCurrency?.length > 0) {\n                    setToState('ibe', ['diffCurrency', 'use'], useCurrency[0].code)\n                    setToState('ibe', ['diffCurrency', 'value'], useCurrency[0].code)\n                }\n            }\n\n            let diffDate = CHECKOUT_DATE.diff(CHECKIN_DATE, 'days')\n            setToState('ibe', ['bookingState', 'stayDates'], [CHECKIN_DATE, CHECKOUT_DATE])\n            setToState('ibe', ['bookingState', 'night'], diffDate)\n        }\n    }\n\n    const handleGetRoomList = async () => {\n        if((state.selectedRooms && state.selectedRooms.length > 0) && (state.diffCurrency.value !== state.diffCurrency.use)){\n            setToState('ibe', ['diffCurrency', 'isAlert'], true)\n            return;\n        }\n\n        setToState('ibe', ['bookingIsLoading'], true)\n        setToState('ibe', ['roomAvailabilityList'], [])\n\n        let useParams = {\n            checkinDate: state.bookingState.stayDates[0],\n            checkoutDate: state.bookingState.stayDates[1],\n            adult: state.bookingState.adult,\n            child: state.bookingState.child,\n            totalroom: 1\n        }\n\n        if(infoLogin && infoLogin?.refid){\n            useParams.clientid = infoLogin.refid\n        }\n\n        if(state.bookingState.refcode){\n            useParams.refcode = state.bookingState.refcode\n        }\n\n        if(state.diffCurrency.value){\n            useParams.pricecurr = state.diffCurrency.value\n        }\n\n        const getRoomList = await getAvailabilityRoomList(GENERAL_SETTINGS.BASE_URL, state.hotelUiToken, useParams)\n\n        if(WEBCMS_DATA?.assets?.meta?.googleTag){\n            TagManager.booking.setRoomList({\n                eventLabel: 'Room Availability Results',\n                hotelName: WEBCMS_DATA?.assets?.meta?.title,\n                hotelId: GENERAL_SETTINGS.HOTELREFNO,\n                ciDate: moment(useParams.checkinDate).format(OREST_ENDPOINT.DATEFORMAT),\n                coDate: moment(useParams.checkoutDate).format(OREST_ENDPOINT.DATEFORMAT),\n                adult: useParams.adult,\n                child: useParams.child,\n                currencyCode: state?.diffCurrency?.value || state.hotelBookingInfo.currencycode,\n                impressionsData: getRoomList.data\n            })\n        }\n\n        if(state.diffCurrency.value && state.diffCurrency.value === getRoomList?.data[0]?.pricecurr){\n            setToState('ibe', ['diffCurrency', 'use'], getRoomList?.data[0]?.pricecurr)\n        }else{\n            setToState('ibe', ['diffCurrency', 'use'], false)\n        }\n\n        if(window?.innerWidth <= 959 && window?.pageYOffset <= 500) {\n            window.scrollTo({\n                top: 542,\n                behavior: \"smooth\"\n            })\n        }\n\n        setToState('ibe', ['roomAvailabilityList'], getRoomList.data)\n        setToState('ibe', ['searchid'], getRoomList.searchid)\n        setToState('ibe', ['bookingIsLoading'], false)\n        setToState('ibe', ['hotelBookingBackdrop'], false)\n        setToState('ibe', ['bookingIsChange'], false)\n    }\n\n    return (\n        <React.Fragment>\n            <BookingPage callBackRoomList={() => handleGetRoomList()} hideLayout={hideLayout}/>\n            <Backdrop className={classes.backdrop} open={state.hotelBookingBackdrop}>\n                <CircularProgress color='inherit' />\n            </Backdrop>\n        </React.Fragment>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        state: state.formReducer.ibe,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IndexPage)\n"]},"metadata":{},"sourceType":"module"}