{"ast":null,"code":"import _extends from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/components/page/sections/slider-gallery/AddSliderGallery.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { COLORS, DELETE_SUCCESS, PERCENTAGE_VALUES, SAVED_SUCCESS, UPLOAD_SUCCESS, verticalAlignments, horizontalAlignments } from \"../../../../constants\";\nimport { useSelector } from 'react-redux';\nimport Grid from \"@material-ui/core/Grid\";\nimport { Button, Typography, IconButton, Divider, TextField, Container, Card, Paper, FormControlLabel, Switch, Checkbox, FormControl, MenuItem, Select, FormLabel } from \"@material-ui/core\";\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\nimport { DropzoneDialog } from \"material-ui-dropzone\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport { FIELDTYPE, isErrorMsg, OREST_ENDPOINT, OREST_UPLOAD, REQUEST_METHOD_CONST } from \"../../../../../../../model/orest/constants\";\nimport axios from \"axios\";\nimport { useRouter } from \"next/router\";\nimport WebCmsGlobal from \"components/webcms-global\";\nimport { Delete, Insert, Patch, UseOrest, ViewList } from \"@webcms/orest\";\nimport { toast } from \"react-toastify\";\nimport LoadingSpinner from \"../../../../../../LoadingSpinner\";\nimport validator from \"validator\";\nimport { PercentageSlider } from \"../../../../../../../model/slider\";\nimport InputColor from \"react-input-color\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\nimport { getSliderImages, patchListSliderImage } from \"../../../../helpers/slider\";\nimport TextEditor from \"../text-editor\";\nimport BorderColorSharpIcon from \"@material-ui/icons/BorderColorSharp\";\nimport { toSelfName } from './../../../../../../../lib/helpers/useFunction';\nimport { DatePicker, LocalizationProvider } from \"@material-ui/pickers\";\nimport moment from \"moment\";\nimport MomentAdapter from \"@date-io/moment\";\nimport clsx from 'clsx';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      '& > *': {\n        margin: theme.spacing(1)\n      }\n    },\n    submit: {\n      marginRight: theme.spacing(3),\n      marginTop: theme.spacing(1),\n      borderRadius: 20,\n      \"float\": \"right\"\n    },\n    disableUpload: {\n      pointerEvents: \"none\",\n      opacity: 0.5\n    },\n    paperBlock: {\n      height: 350,\n      border: \"2px solid \".concat(COLORS === null || COLORS === void 0 ? void 0 : COLORS.secondary),\n      overflow: \"auto\"\n    },\n    disableEvent: {\n      pointerEvents: \"none\",\n      opacity: 0.5\n    },\n    uploadButton: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n      marginLeft: theme.spacing(1),\n      borderRadius: 20 // float: 'right'\n\n    },\n    card: {\n      height: 200,\n      width: 300,\n      margin: theme.spacing(1),\n      cursor: \"pointer\"\n    },\n    alignText: {\n      textAlign: \"right\",\n      color: \"red\"\n    },\n    text: {\n      marginTop: 16,\n      fontWeight: \"bold\",\n      fontSize: 15\n    },\n    alignRight: {\n      \"float\": 'right'\n    }\n  };\n});\n\nvar AddSliderGallery = function AddSliderGallery(props) {\n  _s();\n\n  var _state$assets, _state$assets$meta, _state$assets2, _state$assets2$colors, _state$assets2$colors2, _state$assets3, _state$assets3$colors, _state$assets3$colors2;\n\n  var handleSectionComponent = props.handleSectionComponent;\n  var state = useSelector(function (state) {\n    return state.formReducer.pageBuilder;\n  });\n\n  var _useState = useState({\n    isRequested: false,\n    openDialog: false,\n    title: '',\n    description: '',\n    selectedIndex: null,\n    hoverIndex: null,\n    showDeleteButton: false,\n    itemCount: 1,\n    sliderID: null,\n    sliderGID: null,\n    sliderImages: [],\n    selectedImage: null,\n    isCta: false,\n    ctaTitle: '',\n    ctaLink: '',\n    cta: '',\n    isOptimizeImages: false,\n    quality: state !== null && state !== void 0 && (_state$assets = state.assets) !== null && _state$assets !== void 0 && (_state$assets$meta = _state$assets.meta) !== null && _state$assets$meta !== void 0 && _state$assets$meta.imageQuality ? state.assets.meta.imageQuality * 100 : 50,\n    textColor: state !== null && state !== void 0 && (_state$assets2 = state.assets) !== null && _state$assets2 !== void 0 && (_state$assets2$colors = _state$assets2.colors) !== null && _state$assets2$colors !== void 0 && (_state$assets2$colors2 = _state$assets2$colors.slider) !== null && _state$assets2$colors2 !== void 0 && _state$assets2$colors2.main ? state.assets.colors.slider.main : '#fff',\n    buttonColor: state !== null && state !== void 0 && (_state$assets3 = state.assets) !== null && _state$assets3 !== void 0 && (_state$assets3$colors = _state$assets3.colors) !== null && _state$assets3$colors !== void 0 && (_state$assets3$colors2 = _state$assets3$colors.button) !== null && _state$assets3$colors2 !== void 0 && _state$assets3$colors2.main ? state.assets.colors.button.main : '#fff',\n    isDialogOpen: false,\n    editorValue: '',\n    dialogType: '',\n    ctaVerticalAlignment: '0000192',\n    ctaHorizontalAlignment: '0000182',\n    expiryDate: moment().format(OREST_ENDPOINT.DATEFORMAT_LOCALE)\n  }),\n      localState = _useState[0],\n      setLocalState = _useState[1];\n\n  var isRequested = localState.isRequested,\n      openDialog = localState.openDialog,\n      description = localState.description,\n      title = localState.title,\n      selectedIndex = localState.selectedIndex,\n      hoverIndex = localState.hoverIndex,\n      showDeleteButton = localState.showDeleteButton,\n      itemCount = localState.itemCount,\n      sliderID = localState.sliderID,\n      sliderImages = localState.sliderImages,\n      selectedImage = localState.selectedImage,\n      isCta = localState.isCta,\n      ctaLink = localState.ctaLink,\n      ctaTitle = localState.ctaTitle,\n      cta = localState.cta,\n      isOptimizeImages = localState.isOptimizeImages,\n      quality = localState.quality,\n      buttonColor = localState.buttonColor,\n      textColor = localState.textColor,\n      sliderGID = localState.sliderGID,\n      isDialogOpen = localState.isDialogOpen,\n      dialogType = localState.dialogType,\n      editorValue = localState.editorValue,\n      ctaVerticalAlignment = localState.ctaVerticalAlignment,\n      ctaHorizontalAlignment = localState.ctaHorizontalAlignment,\n      expiryDate = localState.expiryDate;\n  var classes = useStyles();\n  var router = useRouter();\n  var companyId = router.query.companyID;\n\n  var _useContext = useContext(WebCmsGlobal),\n      GENERAL_SETTINGS = _useContext.GENERAL_SETTINGS,\n      token = _useContext.token;\n\n  var authToken = token || router.query.authToken;\n  useEffect(function () {\n    setLocalState(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        isRequested: true\n      });\n    });\n    Insert({\n      // insert slider\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.HCMITEMSLD,\n      token: authToken,\n      data: {\n        itemid: state.hcmItemId,\n        hotelrefno: Number(companyId)\n      }\n    }).then(function (res) {\n      var _res$data;\n\n      setLocalState(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          isRequested: false\n        });\n      });\n\n      if ((res === null || res === void 0 ? void 0 : res.status) === 200 && res !== null && res !== void 0 && (_res$data = res.data) !== null && _res$data !== void 0 && _res$data.data) {\n        var _res$data$data3;\n\n        setLocalState(function (prev) {\n          var _res$data$data, _res$data$data2;\n\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            sliderID: (_res$data$data = res.data.data) === null || _res$data$data === void 0 ? void 0 : _res$data$data.id,\n            sliderGID: (_res$data$data2 = res.data.data) === null || _res$data$data2 === void 0 ? void 0 : _res$data$data2.gid\n          });\n        });\n        handleSectionComponent({\n          service: \"hcmitemsld\",\n          type: \"slider-gallery\",\n          gid: (_res$data$data3 = res.data.data) === null || _res$data$data3 === void 0 ? void 0 : _res$data$data3.gid,\n          textColor: textColor,\n          buttonColor: buttonColor\n        });\n      } else {\n        var retErr = isErrorMsg(res);\n        toast.error(retErr.errorMsg, {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      }\n    });\n  }, []);\n  useEffect(function () {\n    handleSectionComponent && handleSectionComponent({\n      service: \"hcmitemsld\",\n      type: \"slider-gallery\",\n      gid: sliderGID,\n      textColor: textColor,\n      buttonColor: buttonColor\n    });\n  }, [textColor, buttonColor]);\n  useEffect(function () {\n    if (ctaTitle && ctaLink) {\n      setLocalState(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          cta: \"<a target=\\\"_blank\\\" href=\\\"\".concat(ctaLink, \"\\\" > \").concat(ctaTitle, \" </a>\")\n        });\n      });\n    }\n  }, [ctaTitle, ctaLink]);\n\n  var handleSaveImage = function handleSaveImage(files) {\n    setLocalState(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        isRequested: true\n      });\n    });\n    var orderNo = itemCount;\n    var requests = files.map(function (file) {\n      return new Promise(function (resolve) {\n        asyncUpload(file, orderNo, resolve);\n        orderNo++;\n      });\n    });\n    Promise.all(requests).then(function () {\n      ViewList({\n        apiUrl: GENERAL_SETTINGS.OREST_URL,\n        endpoint: OREST_ENDPOINT.HCMITEMIMG,\n        token: authToken,\n        params: {\n          query: \"sliderid:\".concat(sliderID),\n          sort: 'orderno',\n          hotelrefno: Number(companyId)\n        }\n      }).then(function (res) {\n        setLocalState(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            isRequested: false\n          });\n        });\n\n        if ((res === null || res === void 0 ? void 0 : res.status) === 200) {\n          var _res$data2, _res$data2$data;\n\n          var updatedImages = [];\n          res === null || res === void 0 ? void 0 : (_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : (_res$data2$data = _res$data2.data) === null || _res$data2$data === void 0 ? void 0 : _res$data2$data.map(function (data) {\n            updatedImages.push(data);\n          });\n          setLocalState(function (prev) {\n            return _objectSpread(_objectSpread({}, prev), {}, {\n              sliderImages: updatedImages,\n              itemCount: updatedImages.length + 1,\n              openDialog: false\n            });\n          });\n          handleSelectedImage(1, updatedImages[0]);\n          toast.success(UPLOAD_SUCCESS, {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        } else {\n          var retErr = isErrorMsg(res);\n          toast.error(retErr.errorMsg, {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        }\n      });\n    });\n  };\n\n  var handleDeleteImage = function handleDeleteImage(gid) {\n    setLocalState(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        isRequested: true\n      });\n    });\n    Delete({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.HCMITEMIMG,\n      token: authToken,\n      gid: gid,\n      params: {\n        hotelrefno: Number(companyId)\n      }\n    }).then( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(res) {\n        var sldImages, updatedImages, requestPassed, _iterator, _step, sldImage, updatedSliderImage, retErr;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(res.status === 200)) {\n                  _context.next = 9;\n                  break;\n                }\n\n                _context.next = 3;\n                return getSliderImages(GENERAL_SETTINGS.OREST_URL, authToken, companyId, sliderID);\n\n              case 3:\n                sldImages = _context.sent;\n                sldImages.sort(function (a, b) {\n                  return a.orderno > b.orderno ? 1 : -1;\n                });\n                setLocalState(function (prev) {\n                  return _objectSpread(_objectSpread({}, prev), {}, {\n                    isRequested: false\n                  });\n                });\n\n                if (sldImages) {\n                  updatedImages = [];\n                  sldImages.map(function (data, index) {\n                    data.orderno = index + 1;\n                    updatedImages.push(data);\n                  });\n                  requestPassed = true;\n                  _iterator = _createForOfIteratorHelper(sldImages);\n\n                  try {\n                    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                      sldImage = _step.value;\n                      updatedSliderImage = patchListSliderImage(GENERAL_SETTINGS.OREST_URL, authToken, companyId, {\n                        orderno: sldImage.orderno\n                      }, {\n                        hotelrefno: Number(companyId)\n                      }, sldImage.gid);\n                      updatedSliderImage ? requestPassed = true : requestPassed = false;\n                    }\n                  } catch (err) {\n                    _iterator.e(err);\n                  } finally {\n                    _iterator.f();\n                  }\n\n                  if (requestPassed) {\n                    setLocalState(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        sliderImages: updatedImages,\n                        selectedIndex: 1,\n                        itemCount: updatedImages.length + 1\n                      });\n                    });\n                    handleSelectedImage(1, updatedImages[0]);\n                    toast.success(DELETE_SUCCESS, {\n                      position: toast.POSITION.TOP_RIGHT\n                    });\n                  } else {\n                    setLocalState(function (prev) {\n                      return _objectSpread(_objectSpread({}, prev), {}, {\n                        selectedIndex: null\n                      });\n                    });\n                    toast.error('Something went wrong while deleting image. Please check network tab.', {\n                      position: toast.POSITION.TOP_RIGHT\n                    });\n                  }\n                } else {\n                  toast.warn('Something went wrong while deleting image. Please check network tab.', {\n                    position: toast.POSITION.TOP_RIGHT\n                  });\n                }\n\n                _context.next = 12;\n                break;\n\n              case 9:\n                retErr = isErrorMsg(res);\n                setLocalState(function (prev) {\n                  return _objectSpread(_objectSpread({}, prev), {}, {\n                    isRequested: false\n                  });\n                });\n                toast.error(retErr.errorMsg, {\n                  position: toast.POSITION.TOP_RIGHT\n                });\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  };\n\n  var handleSelectedImage = function handleSelectedImage(index, image) {\n    setLocalState(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        selectedIndex: index,\n        selectedImage: image\n      });\n    });\n    ViewList({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.HCMITEMIMG,\n      token: authToken,\n      params: {\n        query: \"gid:\".concat(image.gid),\n        sort: 'orderno',\n        hotelrefno: Number(companyId)\n      }\n    }).then(function (res) {\n      if ((res === null || res === void 0 ? void 0 : res.status) === 200) {\n        var _res$data3, _res$data3$data;\n\n        if ((res === null || res === void 0 ? void 0 : (_res$data3 = res.data) === null || _res$data3 === void 0 ? void 0 : (_res$data3$data = _res$data3.data) === null || _res$data3$data === void 0 ? void 0 : _res$data3$data.length) > 0) {\n          setLocalState(function (prev) {\n            var _res$data$data$, _res$data$data$2, _res$data$data$3, _res$data$data$4, _res$data$data$5, _res$data$data$6, _res$data$data$7;\n\n            return _objectSpread(_objectSpread({}, prev), {}, {\n              title: (_res$data$data$ = res.data.data[0]) !== null && _res$data$data$ !== void 0 && _res$data$data$.title ? (_res$data$data$2 = res.data.data[0]) === null || _res$data$data$2 === void 0 ? void 0 : _res$data$data$2.title : '',\n              description: (_res$data$data$3 = res.data.data[0]) !== null && _res$data$data$3 !== void 0 && _res$data$data$3.description ? (_res$data$data$4 = res.data.data[0]) === null || _res$data$data$4 === void 0 ? void 0 : _res$data$data$4.description : '',\n              ctaVerticalAlignment: (_res$data$data$5 = res.data.data[0]) === null || _res$data$data$5 === void 0 ? void 0 : _res$data$data$5.alignver,\n              ctaHorizontalAlignment: (_res$data$data$6 = res.data.data[0]) === null || _res$data$data$6 === void 0 ? void 0 : _res$data$data$6.alignhor,\n              cta: (_res$data$data$7 = res.data.data[0]) === null || _res$data$data$7 === void 0 ? void 0 : _res$data$data$7.cta\n            });\n          });\n\n          if (res.data.data[0].cta) {\n            setLocalState(function (prev) {\n              return _objectSpread(_objectSpread({}, prev), {}, {\n                isCta: true\n              });\n            });\n            var matchs = res.data.data[0].cta.match(/\\bhttps?:\\/\\/\\S+/gi);\n\n            if (matchs.length > 0) {\n              var cta_title = res.data.data[0].cta.replace(\"<a target=\\\"_blank\\\" href=\\\"\", '').replace(matchs[0], '').replace('>', '').replace('</a>', '').trim();\n              setLocalState(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  ctaLink: matchs[0],\n                  ctaTitle: cta_title\n                });\n              });\n            }\n          } else {\n            setLocalState(function (prev) {\n              return _objectSpread(_objectSpread({}, prev), {}, {\n                ctaLink: '',\n                ctaTitle: '',\n                isCta: false\n              });\n            });\n          }\n        }\n      } else {\n        var retErr = isErrorMsg(res);\n        toast.error(retErr.errorMsg, {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      }\n    });\n  };\n\n  var handleUpdateImage = function handleUpdateImage() {\n    setLocalState(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        isRequested: true\n      });\n    });\n    Patch({\n      // update image\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.HCMITEMIMG,\n      token: authToken,\n      gid: selectedImage === null || selectedImage === void 0 ? void 0 : selectedImage.gid,\n      params: {\n        hotelrefno: Number(companyId)\n      },\n      data: {\n        title: title,\n        description: description,\n        cta: cta,\n        alignhor: ctaHorizontalAlignment,\n        alignver: ctaVerticalAlignment\n      }\n    }).then(function (res) {\n      if (res.status === 200) {\n        setLocalState(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            isRequested: false\n          });\n        });\n        toast.success(SAVED_SUCCESS, {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      } else {\n        var retErr = isErrorMsg(res);\n        toast.error(retErr.errorMsg, {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      }\n    });\n  };\n\n  var asyncUpload = function asyncUpload(file, itemTreated, callback) {\n    if (state.hcmItemId) {\n      setTimeout(function () {\n        Insert({\n          apiUrl: GENERAL_SETTINGS.OREST_URL,\n          endpoint: OREST_ENDPOINT.HCMITEMIMG,\n          token: authToken,\n          data: {\n            itemid: state.hcmItemId,\n            imgtype: FIELDTYPE.IMG,\n            orderno: itemTreated,\n            sliderid: sliderID,\n            hotelrefno: Number(companyId)\n          }\n        }).then(function (r1) {\n          var _r1$data;\n\n          if (r1.status === 200 && r1 !== null && r1 !== void 0 && (_r1$data = r1.data) !== null && _r1$data !== void 0 && _r1$data.data) {\n            var _r1$data2;\n\n            var updatedImages = _toConsumableArray(sliderImages);\n\n            updatedImages.push(r1 === null || r1 === void 0 ? void 0 : (_r1$data2 = r1.data) === null || _r1$data2 === void 0 ? void 0 : _r1$data2.data);\n            ImageUpload(GENERAL_SETTINGS.OREST_URL, OREST_ENDPOINT.RAFILE, authToken, r1.data.data.mid, file).then(function (r) {\n              if (r.status === 200) {\n                callback();\n              } else {\n                callback();\n              }\n            });\n          } else {\n            callback();\n          }\n        });\n      }, 100);\n    }\n  };\n\n  var ImageUpload = function ImageUpload(apiUrl, endPoint, token, masterID, file) {\n    var url = apiUrl + '/' + endPoint + OREST_UPLOAD;\n    var binaryData = [];\n    binaryData.push(file);\n    var formData = new FormData();\n    formData.append('file', new Blob(binaryData, {\n      type: file.type\n    }), toSelfName(file.name));\n    var options = {\n      url: url,\n      method: 'post',\n      headers: {\n        \"Authorization\": \"Bearer \".concat(token),\n        'Content-Type': 'multipart/form-data'\n      },\n      params: {\n        orsactive: true,\n        masterid: masterID,\n        hotelrefno: companyId\n      },\n      data: formData\n    };\n    return axios(options).then(function (response) {\n      return response;\n    })[\"catch\"](function (error) {\n      return error.response || {\n        status: 0\n      };\n    });\n  };\n\n  var handleImageQualityChange = function handleImageQualityChange(value) {\n    if (value >= 10 && value <= 90 && value % 10 === 0) {\n      if (sliderImages.length) {\n        setLocalState(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            isRequested: true\n          });\n        });\n        var gids = sliderImages.map(function (image) {\n          return {\n            gid: image.gid,\n            imgquality: value / 100,\n            imgscale: value / 100\n          };\n        });\n        UseOrest({\n          apiUrl: GENERAL_SETTINGS.OREST_URL,\n          endpoint: OREST_ENDPOINT.HCMITEMIMG + '/' + OREST_ENDPOINT.LIST + '/' + OREST_ENDPOINT.PATCH,\n          token: authToken,\n          method: REQUEST_METHOD_CONST.PATCH,\n          data: gids,\n          params: {\n            hotelrefno: Number(companyId)\n          }\n        }).then(function (res) {\n          var _res$data4;\n\n          if ((res === null || res === void 0 ? void 0 : res.status) === 200 && res !== null && res !== void 0 && (_res$data4 = res.data) !== null && _res$data4 !== void 0 && _res$data4.data) {\n            setLocalState(function (prev) {\n              return _objectSpread(_objectSpread({}, prev), {}, {\n                isRequested: false,\n                quality: value\n              });\n            });\n          } else {\n            var retErr = isErrorMsg(res);\n            toast.error(retErr.errorMsg, {\n              position: toast.POSITION.TOP_RIGHT\n            });\n          }\n        });\n      } else {\n        setLocalState(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            quality: value\n          });\n        });\n      }\n    }\n  };\n\n  var handleUpdateOrderNo = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(gid, orderNo, orderType) {\n      var tmpSliderImages, tmp, _tmp, updatedImages, requestPassed, _iterator2, _step2, sldImage, updatedSliderImage;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              // update order no of slider images\n              if (orderNo <= 0 || orderNo > sliderImages.length) {\n                setLocalState(function (prev) {\n                  return _objectSpread(_objectSpread({}, prev), {}, {\n                    selectedIndex: null\n                  });\n                });\n              } else {\n                tmpSliderImages = _toConsumableArray(sliderImages);\n\n                if (orderType === 'increment') {\n                  tmp = tmpSliderImages[orderNo - 1];\n                  tmpSliderImages[orderNo - 1] = tmpSliderImages[orderNo - 2];\n                  tmpSliderImages[orderNo - 2] = tmp;\n                } else {\n                  _tmp = tmpSliderImages[orderNo - 1];\n                  tmpSliderImages[orderNo - 1] = tmpSliderImages[orderNo];\n                  tmpSliderImages[orderNo] = _tmp;\n                }\n\n                updatedImages = [];\n                tmpSliderImages.map(function (data, index) {\n                  data.orderno = index + 1;\n                  updatedImages.push(data);\n                });\n                setLocalState(function (prev) {\n                  return _objectSpread(_objectSpread({}, prev), {}, {\n                    isRequested: true\n                  });\n                });\n                requestPassed = true;\n                _iterator2 = _createForOfIteratorHelper(tmpSliderImages);\n\n                try {\n                  for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                    sldImage = _step2.value;\n                    updatedSliderImage = patchListSliderImage(GENERAL_SETTINGS.OREST_URL, authToken, companyId, {\n                      orderno: sldImage.orderno\n                    }, {\n                      hotelrefno: Number(companyId)\n                    }, sldImage.gid);\n                    updatedSliderImage ? requestPassed = true : requestPassed = false;\n                  }\n                } catch (err) {\n                  _iterator2.e(err);\n                } finally {\n                  _iterator2.f();\n                }\n\n                setLocalState(function (prev) {\n                  return _objectSpread(_objectSpread({}, prev), {}, {\n                    isRequested: false\n                  });\n                });\n\n                if (requestPassed) {\n                  setLocalState(function (prev) {\n                    return _objectSpread(_objectSpread({}, prev), {}, {\n                      sliderImages: updatedImages,\n                      itemCount: (updatedImages === null || updatedImages === void 0 ? void 0 : updatedImages.length) + 1\n                    });\n                  });\n                  toast.success('Order No Updated Successfully', {\n                    position: toast.POSITION.TOP_RIGHT\n                  });\n                  handleSelectedImage(1, tmpSliderImages[0]);\n                } else {\n                  toast.error('Something went wrong while updating order no. Please check network tab.', {\n                    position: toast.POSITION.TOP_RIGHT\n                  });\n                }\n              }\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleUpdateOrderNo(_x2, _x3, _x4) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleTextEditorValue = function handleTextEditorValue(value) {\n    if (dialogType === 'title') {\n      setLocalState(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          title: value\n        });\n      });\n    }\n\n    if (dialogType === 'description') {\n      setLocalState(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          description: value\n        });\n      });\n    }\n\n    setLocalState(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        isDialogOpen: false,\n        dialogType: '',\n        editorValue: ''\n      });\n    });\n  };\n\n  var handleCancelEditor = function handleCancelEditor() {\n    setLocalState(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        isDialogOpen: false,\n        dialogType: '',\n        editorValue: ''\n      });\n    });\n  };\n\n  var handleDialogOpen = function handleDialogOpen(type) {\n    if (type === 'title') {\n      setLocalState(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          isDialogOpen: true,\n          dialogType: type,\n          editorValue: title\n        });\n      });\n    }\n\n    if (type === 'description') {\n      setLocalState(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          isDialogOpen: true,\n          dialogType: type,\n          editorValue: description\n        });\n      });\n    }\n  };\n\n  var handleAlignment = function handleAlignment(type, value) {\n    if (type === 'horizontal') {\n      setLocalState(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          ctaHorizontalAlignment: value\n        });\n      });\n    }\n\n    if (type === 'vertical') {\n      setLocalState(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          ctaVerticalAlignment: value\n        });\n      });\n    }\n  };\n\n  var handleChangeDatePicker = function handleChangeDatePicker(date) {\n    var dateValue = moment(date).format(OREST_ENDPOINT.DATEFORMAT_LOCALE);\n    setLocalState(_objectSpread(_objectSpread({}, localState), {}, {\n      expiryDate: dateValue\n    }));\n\n    if (dateValue !== 'Invalid date') {\n      setLocalState(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          isRequested: true\n        });\n      });\n      Patch({\n        // update slider\n        apiUrl: GENERAL_SETTINGS.OREST_URL,\n        endpoint: OREST_ENDPOINT.HCMITEMSLD,\n        token: authToken,\n        gid: sliderGID,\n        params: {\n          hotelrefno: Number(companyId)\n        },\n        data: {\n          expiredt: dateValue\n        }\n      }).then(function (res) {\n        setLocalState(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            isRequested: false\n          });\n        });\n\n        if (res.status === 200) {\n          toast.success(SAVED_SUCCESS, {\n            position: toast.POSITION.TOP_RIGHT\n          });\n        } else {\n          console.log(res);\n        }\n      });\n    }\n  };\n\n  if (isRequested) {\n    return __jsx(LoadingSpinner, {\n      size: 50,\n      style: {\n        color: COLORS === null || COLORS === void 0 ? void 0 : COLORS.secondary\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 9\n    }\n  }, state.hcmItemId && __jsx(React.Fragment, null, __jsx(Grid, {\n    container: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 25\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 29\n    }\n  }, __jsx(\"div\", {\n    className: clsx(classes.alignRight, _defineProperty({}, classes.disableEvent, !(sliderImages !== null && sliderImages !== void 0 && sliderImages.length))),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 33\n    }\n  }, __jsx(LocalizationProvider, {\n    dateLibInstance: moment,\n    dateAdapter: MomentAdapter,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 37\n    }\n  }, __jsx(DatePicker, {\n    id: \"sliderExpiryDate\",\n    name: \"sliderExpiryDate\",\n    label: 'Select Expiry',\n    value: expiryDate,\n    inputFormat: \"DD/MM/YYYY\",\n    disablePast: true,\n    onChange: handleChangeDatePicker,\n    renderInput: function renderInput(props) {\n      return __jsx(TextField, _extends({}, props, {\n        variant: 'filled',\n        required: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 69\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 41\n    }\n  }))))), __jsx(Grid, {\n    container: true,\n    justify: 'flex-end',\n    className: isRequested ? classes.disableEvent : '',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 25\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 5,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 29\n    }\n  }, __jsx(FormControlLabel, {\n    className: classes.labelFont,\n    control: __jsx(Checkbox, {\n      size: 'small',\n      checked: isOptimizeImages,\n      onChange: function onChange() {\n        return setLocalState(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            isOptimizeImages: !isOptimizeImages\n          });\n        });\n      },\n      color: \"primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 612,\n        columnNumber: 41\n      }\n    }),\n    label: \"Optimize Images\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 33\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 7,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 622,\n      columnNumber: 29\n    }\n  }, __jsx(Grid, {\n    container: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 623,\n      columnNumber: 33\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 1,\n    style: {\n      marginTop: 6,\n      marginLeft: 16\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 37\n    }\n  }, __jsx(Typography, {\n    component: 'span',\n    style: {\n      marginLeft: -8\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 41\n    }\n  }, \"Text\")), __jsx(Grid, {\n    item: true,\n    xs: 2,\n    style: {\n      marginTop: 8\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 37\n    }\n  }, __jsx(InputColor, {\n    onChange: function onChange(color) {\n      return setLocalState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          textColor: color.hex\n        });\n      });\n    },\n    placement: \"right\",\n    initialValue: textColor,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 628,\n      columnNumber: 41\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 2,\n    style: {\n      marginTop: 6\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 37\n    }\n  }, __jsx(Typography, {\n    component: 'span',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 41\n    }\n  }, \"Button\")), __jsx(Grid, {\n    item: true,\n    xs: 4,\n    style: {\n      marginTop: 8\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 637,\n      columnNumber: 37\n    }\n  }, __jsx(InputColor, {\n    onChange: function onChange(color) {\n      return setLocalState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          buttonColor: color.hex\n        });\n      });\n    },\n    placement: \"right\",\n    initialValue: buttonColor,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 638,\n      columnNumber: 41\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 644,\n      columnNumber: 37\n    }\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      return setLocalState(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          openDialog: true\n        });\n      });\n    },\n    variant: \"contained\",\n    size: \"small\",\n    color: \"primary\",\n    \"aria-label\": \"upload\",\n    className: classes.uploadButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 645,\n      columnNumber: 41\n    }\n  }, __jsx(CloudUploadIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 45\n    }\n  }), \"UPLOAD\"))))), isOptimizeImages && __jsx(Grid, {\n    container: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 661,\n      columnNumber: 49\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 662,\n      columnNumber: 33\n    }\n  }, __jsx(Grid, {\n    container: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 663,\n      columnNumber: 37\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 664,\n      columnNumber: 41\n    }\n  }, __jsx(PercentageSlider, {\n    marks: PERCENTAGE_VALUES,\n    value: quality,\n    onChange: function onChange(e, value) {\n      return handleImageQualityChange(value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 665,\n      columnNumber: 45\n    }\n  }))))), __jsx(Grid, {\n    container: true,\n    justify: 'flex-start',\n    spacing: 3,\n    className: isRequested ? classes.disableEvent : '',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 675,\n      columnNumber: 25\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 5,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 676,\n      columnNumber: 29\n    }\n  }, __jsx(Paper, {\n    className: classes.paperBlock,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 677,\n      columnNumber: 33\n    }\n  }, (sliderImages === null || sliderImages === void 0 ? void 0 : sliderImages.length) > 0 && sliderImages.map(function (value, index) {\n    return __jsx(Grid, {\n      key: index,\n      container: true,\n      justify: 'center',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 49\n      }\n    }, __jsx(Grid, {\n      item: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 682,\n        columnNumber: 53\n      }\n    }, __jsx(Card, {\n      className: classes.card,\n      style: {\n        border: index + 1 === selectedIndex ? '2px solid red' : \"1px solid \".concat(COLORS === null || COLORS === void 0 ? void 0 : COLORS.secondary)\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 683,\n        columnNumber: 57\n      }\n    }, __jsx(\"div\", {\n      style: {\n        backgroundImage: \"url(\".concat(GENERAL_SETTINGS.STATIC_URL + value.fileurl, \")\"),\n        height: '100%',\n        width: '100%',\n        backgroundSize: 'cover',\n        borderRadius: 5\n      },\n      onMouseEnter: function onMouseEnter() {\n        setLocalState(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            showDeleteButton: true,\n            hoverIndex: index\n          });\n        });\n      },\n      onMouseLeave: function onMouseLeave() {\n        setLocalState(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            showDeleteButton: false,\n            hoverIndex: index\n          });\n        });\n      },\n      onClick: function onClick() {\n        return handleSelectedImage(index + 1, value);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 61\n      }\n    }, showDeleteButton && hoverIndex === index && __jsx(IconButton, {\n      disabled: isRequested,\n      component: \"span\",\n      color: 'primary',\n      className: index === sliderImages.length - 1 ? classes.disableEvent : '',\n      onClick: function onClick() {\n        return handleUpdateOrderNo(value.gid, value.orderno + 1, 'increment');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 113\n      }\n    }, __jsx(AddCircleIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 705,\n        columnNumber: 73\n      }\n    })), showDeleteButton && hoverIndex === index && __jsx(Typography, {\n      component: \"span\",\n      color: 'primary',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 709,\n        columnNumber: 113\n      }\n    }, value.orderno), showDeleteButton && hoverIndex === index && __jsx(IconButton, {\n      disabled: isRequested,\n      component: \"span\",\n      color: 'primary',\n      className: index === 0 ? classes.disableEvent : '',\n      onClick: function onClick() {\n        return handleUpdateOrderNo(value.gid, value.orderno - 1, 'decrement');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 717,\n        columnNumber: 113\n      }\n    }, __jsx(RemoveCircleIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 724,\n        columnNumber: 73\n      }\n    })), showDeleteButton && hoverIndex === index && __jsx(IconButton, {\n      onClick: function onClick() {\n        return handleDeleteImage(value.gid);\n      },\n      disabled: isRequested,\n      \"aria-label\": \"upload picture\",\n      component: \"span\",\n      style: {\n        \"float\": \"right\"\n      },\n      color: 'primary',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 728,\n        columnNumber: 113\n      }\n    }, __jsx(CancelIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 736,\n        columnNumber: 73\n      }\n    }))))));\n  }))), __jsx(Grid, {\n    item: true,\n    xs: 7,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 748,\n      columnNumber: 29\n    }\n  }, __jsx(Paper, {\n    className: classes.paperBlock,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 749,\n      columnNumber: 33\n    }\n  }, selectedIndex && __jsx(React.Fragment, null, __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 753,\n      columnNumber: 45\n    }\n  }, __jsx(Grid, {\n    container: true,\n    justify: 'flex-start',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 754,\n      columnNumber: 49\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 755,\n      columnNumber: 53\n    }\n  }, __jsx(Typography, {\n    component: 'h6',\n    variant: 'h6',\n    className: classes.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 756,\n      columnNumber: 57\n    }\n  }, \"Title\")), __jsx(Grid, {\n    item: true,\n    xs: 9,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 764,\n      columnNumber: 53\n    }\n  }, __jsx(IconButton, {\n    \"aria-label\": \"Edit Title\",\n    color: \"primary\",\n    onClick: function onClick() {\n      return handleDialogOpen('title');\n    },\n    style: {\n      \"float\": 'right'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 765,\n      columnNumber: 57\n    }\n  }, __jsx(BorderColorSharpIcon, {\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 771,\n      columnNumber: 61\n    }\n  }))))), __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 776,\n      columnNumber: 45\n    }\n  }, __jsx(Grid, {\n    container: true,\n    justify: 'flex-start',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 777,\n      columnNumber: 49\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 778,\n      columnNumber: 53\n    }\n  }, __jsx(Typography, {\n    component: 'h6',\n    variant: 'h6',\n    className: classes.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 779,\n      columnNumber: 57\n    }\n  }, \"Description\")), __jsx(Grid, {\n    item: true,\n    xs: 9,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 787,\n      columnNumber: 53\n    }\n  }, __jsx(IconButton, {\n    \"aria-label\": \"Edit Title\",\n    color: \"primary\",\n    onClick: function onClick() {\n      return handleDialogOpen('description');\n    },\n    style: {\n      \"float\": 'right'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 788,\n      columnNumber: 57\n    }\n  }, __jsx(BorderColorSharpIcon, {\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 794,\n      columnNumber: 61\n    }\n  }))))), __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 799,\n      columnNumber: 45\n    }\n  }, __jsx(Grid, {\n    container: true,\n    justify: 'flex-start',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 800,\n      columnNumber: 49\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 11,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 801,\n      columnNumber: 53\n    }\n  }, __jsx(Typography, {\n    component: 'h6',\n    variant: 'h6',\n    className: classes.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 802,\n      columnNumber: 57\n    }\n  }, \"Do you want to add button for image ?\")), __jsx(Grid, {\n    item: true,\n    xs: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 810,\n      columnNumber: 53\n    }\n  }, __jsx(Typography, {\n    component: 'div',\n    style: {\n      marginTop: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 811,\n      columnNumber: 57\n    }\n  }, __jsx(Switch, {\n    size: 'small',\n    checked: isCta,\n    onChange: function onChange() {\n      setLocalState(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          cta: '',\n          isCta: !isCta,\n          ctaTitle: '',\n          ctaLink: ''\n        });\n      });\n    },\n    inputProps: {\n      'aria-label': 'secondary checkbox'\n    },\n    color: 'primary',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 812,\n      columnNumber: 61\n    }\n  }))))), isCta && __jsx(React.Fragment, null, __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 828,\n      columnNumber: 57\n    }\n  }, __jsx(Grid, {\n    container: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 829,\n      columnNumber: 61\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 830,\n      columnNumber: 65\n    }\n  }, __jsx(FormLabel, {\n    id: \"align-horizontal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 831,\n      columnNumber: 69\n    }\n  }, \"Horizontal Alignment :\")), __jsx(Grid, {\n    item: true,\n    xs: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 833,\n      columnNumber: 65\n    }\n  }, __jsx(FormControl, {\n    variant: \"outlined\",\n    size: 'small',\n    fullWidth: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 834,\n      columnNumber: 69\n    }\n  }, __jsx(Select, {\n    value: ctaHorizontalAlignment,\n    onChange: function onChange(e) {\n      return handleAlignment('horizontal', e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 835,\n      columnNumber: 73\n    }\n  }, horizontalAlignments.map(function (align, index) {\n    return __jsx(MenuItem, {\n      value: align.value,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 838,\n        columnNumber: 85\n      }\n    }, ' ', align.text, ' ');\n  }))))), __jsx(Grid, {\n    container: true,\n    style: {\n      marginTop: 4\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 848,\n      columnNumber: 61\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 849,\n      columnNumber: 65\n    }\n  }, __jsx(FormLabel, {\n    id: \"align-vertical\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 850,\n      columnNumber: 69\n    }\n  }, \"Vertical Alignment : \")), __jsx(Grid, {\n    item: true,\n    xs: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 852,\n      columnNumber: 65\n    }\n  }, __jsx(FormControl, {\n    variant: \"outlined\",\n    size: 'small',\n    fullWidth: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 853,\n      columnNumber: 69\n    }\n  }, __jsx(Select, {\n    value: ctaVerticalAlignment,\n    onChange: function onChange(e) {\n      return handleAlignment('vertical', e.target.value);\n    },\n    label: \"Vertical Alignment\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 854,\n      columnNumber: 73\n    }\n  }, verticalAlignments.map(function (align, index) {\n    return __jsx(MenuItem, {\n      value: align.value,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 861,\n        columnNumber: 85\n      }\n    }, ' ', align.text, ' ');\n  })))))), __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 872,\n      columnNumber: 49\n    }\n  }, __jsx(Grid, {\n    container: true,\n    justify: 'flex-start',\n    spacing: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 873,\n      columnNumber: 53\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 874,\n      columnNumber: 57\n    }\n  }, __jsx(TextField, {\n    size: 'small',\n    id: \"button-title\",\n    variant: \"outlined\",\n    label: 'Title',\n    value: ctaTitle,\n    fullWidth: true,\n    onChange: function onChange(e) {\n      var _e$target = e === null || e === void 0 ? void 0 : e.target,\n          value = _e$target.value;\n\n      setLocalState(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          ctaTitle: value\n        });\n      });\n    },\n    style: {\n      marginTop: 8\n    },\n    helperText: ctaTitle && __jsx(Typography, {\n      variant: \"caption\",\n      className: classes.alignText,\n      display: \"block\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 888,\n        columnNumber: 81\n      }\n    }, \"\".concat(ctaTitle === null || ctaTitle === void 0 ? void 0 : ctaTitle.length, \" < 100\")),\n    inputProps: {\n      maxLength: 99\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 875,\n      columnNumber: 61\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 899,\n      columnNumber: 57\n    }\n  }, __jsx(TextField, {\n    size: 'small',\n    id: \"button-link\",\n    variant: \"outlined\",\n    label: 'Link',\n    value: ctaLink,\n    error: ctaLink ? !validator.isURL(ctaLink) : false,\n    onChange: function onChange(e) {\n      var _e$target2 = e === null || e === void 0 ? void 0 : e.target,\n          value = _e$target2.value;\n\n      setLocalState(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          ctaLink: value\n        });\n      });\n    },\n    style: {\n      marginTop: 8\n    },\n    fullWidth: true,\n    helperText: ctaLink && __jsx(Typography, {\n      variant: \"caption\",\n      className: classes.alignText,\n      display: \"block\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 914,\n        columnNumber: 80\n      }\n    }, \"\".concat(ctaLink === null || ctaLink === void 0 ? void 0 : ctaLink.length, \" < 100\")),\n    inputProps: {\n      maxLength: 99\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 900,\n      columnNumber: 61\n    }\n  }))))), __jsx(Divider, {\n    style: {\n      marginTop: 8\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 929,\n      columnNumber: 45\n    }\n  }), __jsx(Button, {\n    onClick: handleUpdateImage,\n    variant: \"contained\",\n    size: \"small\",\n    color: \"primary\",\n    \"aria-label\": \"add\",\n    className: classes.submit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 930,\n      columnNumber: 45\n    }\n  }, \"SUBMIT\"))))), __jsx(DropzoneDialog, {\n    open: openDialog,\n    onSave: handleSaveImage,\n    acceptedFiles: ['image/jpeg', 'image/png', 'image/bmp'],\n    showPreviews: true,\n    maxFileSize: 5000000,\n    filesLimit: 5,\n    onClose: function onClose() {\n      return setLocalState(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          openDialog: false\n        });\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 945,\n      columnNumber: 25\n    }\n  }), isDialogOpen && __jsx(TextEditor, {\n    handleSaveTextEditor: handleTextEditorValue,\n    handleCancelTextEditor: handleCancelEditor,\n    data: editorValue,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 956,\n      columnNumber: 29\n    }\n  })));\n};\n\n_s(AddSliderGallery, \"WGIf+ahlnZ+8eIGgLRdAOxydhNE=\", false, function () {\n  return [useSelector, useStyles, useRouter];\n});\n\n_c = AddSliderGallery;\nexport default AddSliderGallery;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddSliderGallery\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/components/page/sections/slider-gallery/AddSliderGallery.js"],"names":["React","useContext","useEffect","useState","makeStyles","COLORS","DELETE_SUCCESS","PERCENTAGE_VALUES","SAVED_SUCCESS","UPLOAD_SUCCESS","verticalAlignments","horizontalAlignments","useSelector","Grid","Button","Typography","IconButton","Divider","TextField","Container","Card","Paper","FormControlLabel","Switch","Checkbox","FormControl","MenuItem","Select","FormLabel","CloudUploadIcon","DropzoneDialog","CancelIcon","FIELDTYPE","isErrorMsg","OREST_ENDPOINT","OREST_UPLOAD","REQUEST_METHOD_CONST","axios","useRouter","WebCmsGlobal","Delete","Insert","Patch","UseOrest","ViewList","toast","LoadingSpinner","validator","PercentageSlider","InputColor","AddCircleIcon","RemoveCircleIcon","getSliderImages","patchListSliderImage","TextEditor","BorderColorSharpIcon","toSelfName","DatePicker","LocalizationProvider","moment","MomentAdapter","clsx","useStyles","theme","root","margin","spacing","submit","marginRight","marginTop","borderRadius","disableUpload","pointerEvents","opacity","paperBlock","height","border","secondary","overflow","disableEvent","uploadButton","marginBottom","marginLeft","card","width","cursor","alignText","textAlign","color","text","fontWeight","fontSize","alignRight","AddSliderGallery","props","handleSectionComponent","state","formReducer","pageBuilder","isRequested","openDialog","title","description","selectedIndex","hoverIndex","showDeleteButton","itemCount","sliderID","sliderGID","sliderImages","selectedImage","isCta","ctaTitle","ctaLink","cta","isOptimizeImages","quality","assets","meta","imageQuality","textColor","colors","slider","main","buttonColor","button","isDialogOpen","editorValue","dialogType","ctaVerticalAlignment","ctaHorizontalAlignment","expiryDate","format","DATEFORMAT_LOCALE","localState","setLocalState","classes","router","companyId","query","companyID","GENERAL_SETTINGS","token","authToken","prev","apiUrl","OREST_URL","endpoint","HCMITEMSLD","data","itemid","hcmItemId","hotelrefno","Number","then","res","status","id","gid","service","type","retErr","error","errorMsg","position","POSITION","TOP_RIGHT","handleSaveImage","files","orderNo","requests","map","file","Promise","resolve","asyncUpload","all","HCMITEMIMG","params","sort","updatedImages","push","length","handleSelectedImage","success","handleDeleteImage","sldImages","a","b","orderno","index","requestPassed","sldImage","updatedSliderImage","warn","image","alignver","alignhor","matchs","match","cta_title","replace","trim","handleUpdateImage","itemTreated","callback","setTimeout","imgtype","IMG","sliderid","r1","ImageUpload","RAFILE","mid","r","endPoint","masterID","url","binaryData","formData","FormData","append","Blob","name","options","method","headers","orsactive","masterid","response","handleImageQualityChange","value","gids","imgquality","imgscale","LIST","PATCH","handleUpdateOrderNo","orderType","tmpSliderImages","tmp","handleTextEditorValue","handleCancelEditor","handleDialogOpen","handleAlignment","handleChangeDatePicker","date","dateValue","expiredt","console","log","labelFont","prevState","hex","e","backgroundImage","STATIC_URL","fileurl","backgroundSize","target","align","maxLength","isURL"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {\n    COLORS,\n    DELETE_SUCCESS,\n    PERCENTAGE_VALUES,\n    SAVED_SUCCESS,\n    UPLOAD_SUCCESS,\n    verticalAlignments,\n    horizontalAlignments\n} from \"../../../../constants\";\nimport {useSelector} from 'react-redux'\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n    Button,\n    Typography,\n    IconButton,\n    Divider,\n    TextField,\n    Container,\n    Card,\n    Paper,\n    FormControlLabel,\n    Switch,\n    Checkbox,\n    FormControl,\n    MenuItem,\n    Select,\n    FormLabel\n} from \"@material-ui/core\";\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\nimport {DropzoneDialog} from \"material-ui-dropzone\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport {\n    FIELDTYPE,\n    isErrorMsg,\n    OREST_ENDPOINT,\n    OREST_UPLOAD,\n    REQUEST_METHOD_CONST\n} from \"../../../../../../../model/orest/constants\";\nimport axios from \"axios\";\nimport {useRouter} from \"next/router\";\nimport WebCmsGlobal from \"components/webcms-global\";\nimport {Delete, Insert, Patch, UseOrest, ViewList} from \"@webcms/orest\";\nimport {toast} from \"react-toastify\";\nimport LoadingSpinner from \"../../../../../../LoadingSpinner\";\nimport validator from \"validator\";\nimport {PercentageSlider} from \"../../../../../../../model/slider\";\nimport InputColor from \"react-input-color\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\nimport {getSliderImages, patchListSliderImage} from \"../../../../helpers/slider\";\nimport TextEditor from \"../text-editor\";\nimport BorderColorSharpIcon from \"@material-ui/icons/BorderColorSharp\";\nimport { toSelfName } from './../../../../../../../lib/helpers/useFunction';\nimport {DatePicker, LocalizationProvider} from \"@material-ui/pickers\";\nimport moment from \"moment\";\nimport MomentAdapter from \"@date-io/moment\";\nimport clsx from 'clsx'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    },\n    submit: {\n        marginRight: theme.spacing(3),\n        marginTop: theme.spacing(1),\n        borderRadius: 20,\n        float: \"right\"\n    },\n    disableUpload: {\n        pointerEvents: \"none\",\n        opacity: 0.5\n    },\n    paperBlock: {\n        height: 350,\n        border: `2px solid ${COLORS?.secondary}`,\n        overflow: \"auto\"\n    },\n    disableEvent: {\n        pointerEvents: \"none\",\n        opacity: 0.5\n    },\n    uploadButton: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n        marginLeft: theme.spacing(1),\n        borderRadius: 20,\n        // float: 'right'\n    },\n    card: {\n        height: 200,\n        width: 300,\n        margin: theme.spacing(1),\n        cursor: \"pointer\"\n    },\n    alignText: {\n        textAlign: \"right\",\n        color: \"red\"\n    },\n    text: {\n        marginTop: 16,\n        fontWeight: \"bold\",\n        fontSize: 15\n    },\n    alignRight: {\n        float: 'right'\n    }\n}));\n\nconst AddSliderGallery = (props) =>  {\n\n    const { handleSectionComponent } = props\n    const state = useSelector(state => state.formReducer.pageBuilder);\n    const [localState, setLocalState] = useState({\n        isRequested: false,\n        openDialog: false,\n        title: '',\n        description: '',\n        selectedIndex: null,\n        hoverIndex: null,\n        showDeleteButton: false,\n        itemCount: 1,\n        sliderID: null,\n        sliderGID: null,\n        sliderImages: [],\n        selectedImage: null,\n        isCta: false,\n        ctaTitle: '',\n        ctaLink: '',\n        cta: '',\n        isOptimizeImages: false,\n        quality: state?.assets?.meta?.imageQuality ? (state.assets.meta.imageQuality * 100) : 50,\n        textColor: state?.assets?.colors?.slider?.main ? state.assets.colors.slider.main : '#fff',\n        buttonColor: state?.assets?.colors?.button?.main ? state.assets.colors.button.main : '#fff',\n        isDialogOpen: false,\n        editorValue: '',\n        dialogType: '',\n        ctaVerticalAlignment: '0000192',\n        ctaHorizontalAlignment: '0000182',\n        expiryDate: moment().format(OREST_ENDPOINT.DATEFORMAT_LOCALE)\n    });\n\n    const {\n        isRequested, openDialog, description, title, selectedIndex,\n        hoverIndex, showDeleteButton, itemCount, sliderID, sliderImages,\n        selectedImage, isCta, ctaLink, ctaTitle, cta, isOptimizeImages, quality,\n        buttonColor, textColor, sliderGID, isDialogOpen, dialogType, editorValue,\n        ctaVerticalAlignment, ctaHorizontalAlignment, expiryDate\n    } = localState;\n\n    const classes = useStyles();\n\n    const router = useRouter();\n    const companyId = router.query.companyID;\n    const {GENERAL_SETTINGS, token} = useContext(WebCmsGlobal);\n    const authToken = token || router.query.authToken;\n\n    useEffect(() => {\n        setLocalState(prev => ({...prev, isRequested: true}));\n        Insert({ // insert slider\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.HCMITEMSLD,\n            token: authToken,\n            data: {\n                itemid: state.hcmItemId,\n                hotelrefno: Number(companyId)\n            },\n        }).then(res => {\n            setLocalState(prev => ({...prev, isRequested: false}));\n            if (res?.status === 200 && res?.data?.data) {\n                setLocalState(prev => ({...prev, sliderID: res.data.data?.id, sliderGID: res.data.data?.gid}));\n                handleSectionComponent({\n                    service: \"hcmitemsld\",\n                    type: \"slider-gallery\",\n                    gid: res.data.data?.gid,\n                    textColor: textColor,\n                    buttonColor: buttonColor,\n                });\n            } else {\n                const retErr = isErrorMsg(res);\n                toast.error(retErr.errorMsg, {\n                    position: toast.POSITION.TOP_RIGHT\n                });\n            }\n        })\n    }, []);\n\n    useEffect(() => {\n        handleSectionComponent &&\n        handleSectionComponent({\n            service: \"hcmitemsld\",\n            type: \"slider-gallery\",\n            gid: sliderGID,\n            textColor: textColor,\n            buttonColor: buttonColor,\n        });\n    }, [textColor, buttonColor]);\n\n    useEffect(() => {\n        if(ctaTitle && ctaLink) {\n            setLocalState(prev => ({...prev, cta: `<a target=\"_blank\" href=\"${ctaLink}\" > ${ctaTitle} </a>`}));\n        }\n    }, [ctaTitle, ctaLink]);\n\n    const handleSaveImage = (files) => {\n        setLocalState(prev => ({...prev, isRequested: true}))\n        let orderNo = itemCount;\n        let requests = files.map((file) => {\n            return new Promise( (resolve) => {\n                asyncUpload(file, orderNo, resolve);\n                orderNo ++ ;\n            });\n        });\n\n        Promise.all(requests).then(() => {\n            ViewList({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: OREST_ENDPOINT.HCMITEMIMG,\n                token: authToken,\n                params: {\n                    query: `sliderid:${sliderID}`,\n                    sort: 'orderno',\n                    hotelrefno:  Number(companyId)\n                }\n            }).then(res => {\n                setLocalState(prev => ({...prev, isRequested: false}))\n                if (res?.status === 200) {\n                    let updatedImages = [];\n                    res?.data?.data?.map((data) => {\n                        updatedImages.push(data);\n                    });\n                    setLocalState(prev => ({...prev, sliderImages: updatedImages, itemCount: updatedImages.length + 1, openDialog: false}));\n                    handleSelectedImage(1, updatedImages[0]);\n                    toast.success(UPLOAD_SUCCESS, {\n                        position: toast.POSITION.TOP_RIGHT\n                    });\n                } else {\n                    const retErr = isErrorMsg(res);\n                    toast.error(retErr.errorMsg, {\n                        position: toast.POSITION.TOP_RIGHT\n                    });\n                }\n            });\n        });\n    }\n\n    const handleDeleteImage = (gid) => {\n        setLocalState(prev => ({...prev, isRequested: true}))\n        Delete({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.HCMITEMIMG,\n            token: authToken,\n            gid: gid,\n            params: {\n                hotelrefno: Number(companyId)\n            }\n        }).then(async res => {\n            if (res.status === 200) {\n                const sldImages = await getSliderImages(GENERAL_SETTINGS.OREST_URL, authToken, companyId, sliderID);\n                sldImages.sort((a, b) => (a.orderno > b.orderno) ? 1 : -1)\n                setLocalState(prev => ({...prev, isRequested: false}));\n                if (sldImages) {\n                    let updatedImages = [];\n                    sldImages.map((data, index) => {\n                        data.orderno = index + 1;\n                        updatedImages.push(data);\n                    });\n                    let requestPassed = true;\n                    for (const sldImage of sldImages) {\n                        const updatedSliderImage = patchListSliderImage(GENERAL_SETTINGS.OREST_URL, authToken, companyId, {orderno: sldImage.orderno}, {hotelrefno: Number(companyId)}, sldImage.gid);\n                        updatedSliderImage ? requestPassed = true : requestPassed = false;\n                    }\n                    if (requestPassed) {\n                        setLocalState(prev => ({...prev, sliderImages: updatedImages, selectedIndex: 1, itemCount: updatedImages.length + 1}));\n                        handleSelectedImage(1, updatedImages[0]);\n                        toast.success(DELETE_SUCCESS, {\n                            position: toast.POSITION.TOP_RIGHT\n                        });\n                    } else {\n                        setLocalState(prev => ({...prev, selectedIndex: null}));\n                        toast.error('Something went wrong while deleting image. Please check network tab.', {\n                            position: toast.POSITION.TOP_RIGHT\n                        });\n                    }\n                } else {\n                    toast.warn('Something went wrong while deleting image. Please check network tab.', {\n                        position: toast.POSITION.TOP_RIGHT\n                    });\n                }\n            } else {\n                const retErr = isErrorMsg(res);\n                setLocalState(prev => ({...prev, isRequested: false}))\n                toast.error(retErr.errorMsg, {\n                    position: toast.POSITION.TOP_RIGHT\n                });\n            }\n        });\n    }\n\n    const handleSelectedImage = (index, image) => {\n        setLocalState(prev => ({...prev, selectedIndex: index, selectedImage: image}));\n        ViewList({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.HCMITEMIMG,\n            token: authToken,\n            params: {\n                query: `gid:${image.gid}`,\n                sort: 'orderno',\n                hotelrefno:  Number(companyId)\n            }\n        }).then(res => {\n            if (res?.status === 200) {\n                if (res?.data?.data?.length > 0) {\n                    setLocalState(prev => ({...prev, title: res.data.data[0]?.title ? res.data.data[0]?.title : '',\n                                description: res.data.data[0]?.description ? res.data.data[0]?.description : '',\n                        ctaVerticalAlignment: res.data.data[0]?.alignver, ctaHorizontalAlignment: res.data.data[0]?.alignhor,\n                        cta: res.data.data[0]?.cta}));\n                    if (res.data.data[0].cta) {\n                        setLocalState(prev => ({...prev, isCta: true}));\n                        const matchs = res.data.data[0].cta.match(/\\bhttps?:\\/\\/\\S+/gi)\n                        if (matchs.length > 0) {\n                            const cta_title = res.data.data[0].cta.replace(`<a target=\"_blank\" href=\"`,\n                                '').replace(matchs[0], '').replace('>',\n                                '').replace('</a>', '').trim();\n                            setLocalState(prev => ({...prev, ctaLink: matchs[0], ctaTitle: cta_title}));\n                        }\n                    } else {\n                        setLocalState(prev => ({...prev, ctaLink: '', ctaTitle: '', isCta: false}));\n                    }\n                }\n            } else {\n                const retErr = isErrorMsg(res);\n                toast.error(retErr.errorMsg, {\n                    position: toast.POSITION.TOP_RIGHT\n                });\n            }\n        })\n    }\n\n    const handleUpdateImage = () => {\n        setLocalState(prev => ({...prev, isRequested: true}));\n        Patch({ // update image\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.HCMITEMIMG,\n            token: authToken,\n            gid: selectedImage?.gid,\n            params: {\n                hotelrefno: Number(companyId),\n            },\n            data: {\n                title: title,\n                description: description,\n                cta: cta,\n                alignhor: ctaHorizontalAlignment,\n                alignver: ctaVerticalAlignment\n            }\n        }).then(res => {\n            if(res.status === 200) {\n                setLocalState(prev => ({...prev, isRequested: false}));\n                toast.success(SAVED_SUCCESS, {\n                    position: toast.POSITION.TOP_RIGHT\n                });\n            } else {\n                const retErr = isErrorMsg(res);\n                toast.error(retErr.errorMsg, {\n                    position: toast.POSITION.TOP_RIGHT\n                });\n            }\n        })\n    }\n\n    const asyncUpload = (file, itemTreated, callback) => {\n        if (state.hcmItemId) {\n            setTimeout(() => {\n                Insert({\n                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                    endpoint: OREST_ENDPOINT.HCMITEMIMG,\n                    token: authToken,\n                    data: {\n                        itemid: state.hcmItemId,\n                        imgtype: FIELDTYPE.IMG,\n                        orderno: itemTreated,\n                        sliderid: sliderID,\n                        hotelrefno: Number(companyId)\n                    },\n                }).then(r1 => {\n                    if (r1.status === 200 && r1?.data?.data) {\n                        let updatedImages = [...sliderImages];\n                        updatedImages.push(r1?.data?.data);\n                        ImageUpload(\n                            GENERAL_SETTINGS.OREST_URL,\n                            OREST_ENDPOINT.RAFILE,\n                            authToken,\n                            r1.data.data.mid,\n                            file\n                        ).then(r => {\n                            if (r.status === 200) {\n                                callback();\n                            } else {\n                                callback();\n                            }\n                        });\n                    } else {\n                        callback();\n                    }\n                });\n            }, 100);\n        }\n    }\n\n    const ImageUpload = (apiUrl, endPoint, token, masterID, file) => {\n        const url = apiUrl + '/' + endPoint + OREST_UPLOAD;\n        let binaryData = [];\n        binaryData.push(file);\n        let formData = new FormData();\n        formData.append('file', new Blob(binaryData, {type: file.type}), toSelfName(file.name));\n\n        const options = {\n            url: url,\n            method: 'post',\n            headers: {\n                \"Authorization\": `Bearer ${token}`,\n                'Content-Type': 'multipart/form-data'\n            },\n            params: {\n                orsactive: true,\n                masterid: masterID,\n                hotelrefno: companyId,\n            },\n            data: formData\n        };\n\n        return axios(options).then(response => {\n            return response\n        }).catch(error => {\n            return error.response || {status: 0};\n        });\n    };\n\n    const handleImageQualityChange = (value) => {\n        if (value >= 10 && value <= 90 && value % 10 === 0) {\n            if (sliderImages.length) {\n                setLocalState(prev => ({...prev, isRequested: true}));\n                const gids = sliderImages.map(image => {\n                    return {gid: image.gid, imgquality: value / 100, imgscale: value / 100};\n                });\n                UseOrest({\n                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                    endpoint: OREST_ENDPOINT.HCMITEMIMG + '/' + OREST_ENDPOINT.LIST + '/' + OREST_ENDPOINT.PATCH,\n                    token: authToken,\n                    method: REQUEST_METHOD_CONST.PATCH,\n                    data: gids,\n                    params: {\n                        hotelrefno: Number(companyId),\n                    },\n                }).then(res => {\n                    if (res?.status === 200 && res?.data?.data) {\n                        setLocalState(prev => ({...prev, isRequested: false, quality: value}))\n                    } else {\n                        const retErr = isErrorMsg(res);\n                        toast.error(retErr.errorMsg, {\n                            position: toast.POSITION.TOP_RIGHT\n                        });\n                    }\n                })\n            } else {\n                setLocalState(prev => ({...prev, quality: value}))\n            }\n        }\n    }\n\n    const handleUpdateOrderNo = async (gid, orderNo, orderType) => { // update order no of slider images\n        if (orderNo <= 0 || orderNo > sliderImages.length) {\n            setLocalState(prev => ({...prev, selectedIndex: null}))\n        } else {\n            const tmpSliderImages = [...sliderImages];\n            if (orderType === 'increment') {\n                const tmp = tmpSliderImages[orderNo - 1];\n                tmpSliderImages[orderNo - 1] = tmpSliderImages[orderNo - 2];\n                tmpSliderImages[orderNo - 2] = tmp;\n            } else {\n                const tmp = tmpSliderImages[orderNo - 1];\n                tmpSliderImages[orderNo - 1] = tmpSliderImages[orderNo];\n                tmpSliderImages[orderNo] = tmp;\n            }\n            let updatedImages = [];\n            tmpSliderImages.map((data, index) => {\n                data.orderno = index + 1;\n                updatedImages.push(data);\n            });\n            setLocalState(prev => ({...prev, isRequested: true}));\n            let requestPassed = true;\n            for (const sldImage of tmpSliderImages) {\n                const updatedSliderImage = patchListSliderImage(GENERAL_SETTINGS.OREST_URL, authToken, companyId, {orderno: sldImage.orderno}, {hotelrefno: Number(companyId)}, sldImage.gid);\n                updatedSliderImage ? requestPassed = true : requestPassed = false;\n            }\n            setLocalState(prev => ({...prev, isRequested: false}));\n            if (requestPassed) {\n                setLocalState(prev => ({...prev, sliderImages: updatedImages, itemCount: updatedImages?.length + 1}));\n                toast.success('Order No Updated Successfully', {\n                    position: toast.POSITION.TOP_RIGHT\n                });\n                handleSelectedImage(1, tmpSliderImages[0]);\n            } else {\n                toast.error('Something went wrong while updating order no. Please check network tab.', {\n                    position: toast.POSITION.TOP_RIGHT\n                });\n            }\n        }\n    }\n\n    const handleTextEditorValue = (value) => {\n        if (dialogType === 'title') {\n            setLocalState(prev => ({...prev, title: value}));\n        }\n        if (dialogType === 'description') {\n            setLocalState(prev => ({...prev, description: value}));\n        }\n        setLocalState(prev => ({...prev, isDialogOpen: false, dialogType: '', editorValue: ''}));\n    }\n\n    const handleCancelEditor = () => {\n        setLocalState(prev => ({...prev, isDialogOpen: false, dialogType: '', editorValue: ''}));\n    }\n\n    const handleDialogOpen = (type) => {\n        if (type === 'title') {\n            setLocalState(prev => ({...prev, isDialogOpen: true, dialogType: type, editorValue: title}));\n        }\n        if (type === 'description') {\n            setLocalState(prev => ({...prev, isDialogOpen: true, dialogType: type, editorValue: description}));\n        }\n    }\n\n    const handleAlignment = (type, value) => {\n        if (type === 'horizontal') {\n            setLocalState(prev => ({...prev, ctaHorizontalAlignment: value}));\n        }\n        if (type === 'vertical') {\n            setLocalState(prev => ({...prev, ctaVerticalAlignment: value}));\n        }\n    }\n\n    const handleChangeDatePicker = (date) => {\n        const dateValue = moment(date).format(OREST_ENDPOINT.DATEFORMAT_LOCALE)\n        setLocalState({...localState, expiryDate: dateValue});\n        if (dateValue !== 'Invalid date') {\n            setLocalState(prev => ({...prev, isRequested: true}))\n            Patch({\n                // update slider\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: OREST_ENDPOINT.HCMITEMSLD,\n                token: authToken,\n                gid: sliderGID,\n                params: {\n                    hotelrefno: Number(companyId),\n                },\n                data: {\n                    expiredt: dateValue,\n                },\n            }).then((res) => {\n                setLocalState(prev => ({...prev, isRequested: false}))\n                if (res.status === 200) {\n                    toast.success(SAVED_SUCCESS, {\n                        position: toast.POSITION.TOP_RIGHT,\n                    })\n                } else {\n                    console.log(res)\n                }\n            })\n        }\n    }\n\n    if (isRequested) {\n        return <LoadingSpinner size={50} style={{color: COLORS?.secondary}} />\n    }\n\n    return (\n        <React.Fragment>\n            {\n                state.hcmItemId && (\n                    <>\n                        <Grid container={true}>\n                            <Grid item xs={12}>\n                                <div className={clsx(classes.alignRight, { [classes.disableEvent]: !sliderImages?.length })}>\n                                    <LocalizationProvider dateLibInstance={moment} dateAdapter={MomentAdapter}>\n                                        <DatePicker\n                                            id=\"sliderExpiryDate\"\n                                            name=\"sliderExpiryDate\"\n                                            label={'Select Expiry'}\n                                            value={expiryDate}\n                                            inputFormat=\"DD/MM/YYYY\"\n                                            disablePast\n                                            onChange={handleChangeDatePicker}\n                                            renderInput={(props) => <TextField {...props}\n                                                                               variant={'filled'}\n                                                                               required={true}\n                                            />}\n                                        />\n                                    </LocalizationProvider>\n                                </div>\n                            </Grid>\n                        </Grid>\n                        <Grid container={true} justify={'flex-end'} className={isRequested ? classes.disableEvent : ''}>\n                            <Grid item xs={5}>\n                                <FormControlLabel\n                                    className={classes.labelFont}\n                                    control={\n                                        <Checkbox\n                                            size={'small'}\n                                            checked={isOptimizeImages}\n                                            onChange={() => setLocalState(prev => ({...prev, isOptimizeImages: !isOptimizeImages}))}\n                                            color=\"primary\"\n                                        />\n                                    }\n                                    label=\"Optimize Images\"\n                                />\n                            </Grid>\n                            <Grid item xs={7}>\n                                <Grid container>\n                                    <Grid item xs={1} style={{marginTop: 6, marginLeft: 16}}>\n                                        <Typography component={'span'} style={{marginLeft: -8}}>Text</Typography>\n                                    </Grid>\n                                    <Grid item xs={2} style={{marginTop: 8}}>\n                                        <InputColor\n                                            onChange={(color) => setLocalState(prevState => ({...prevState, textColor: color.hex}))}\n                                            placement=\"right\"\n                                            initialValue={textColor}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={2} style={{marginTop: 6}}>\n                                        <Typography component={'span'}>Button</Typography>\n                                    </Grid>\n                                    <Grid item xs={4} style={{marginTop: 8}}>\n                                        <InputColor\n                                            onChange={(color) => setLocalState(prevState => ({...prevState, buttonColor: color.hex}))}\n                                            placement=\"right\"\n                                            initialValue={buttonColor}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={2}>\n                                        <Button\n                                            onClick={() => setLocalState(prev => ({...prev, openDialog: true}))}\n                                            variant=\"contained\"\n                                            size=\"small\"\n                                            color=\"primary\"\n                                            aria-label=\"upload\"\n                                            className={classes.uploadButton}\n                                        >\n                                            <CloudUploadIcon/>\n                                            UPLOAD\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        {\n                            isOptimizeImages && <Grid container>\n                                <Grid item xs={12}>\n                                    <Grid container>\n                                        <Grid item xs={12}>\n                                            <PercentageSlider\n                                                marks={PERCENTAGE_VALUES}\n                                                value={quality}\n                                                onChange={(e, value) => handleImageQualityChange(value)}\n                                            />\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        }\n                        <Grid container justify={'flex-start'} spacing={3} className={isRequested ? classes.disableEvent : ''}>\n                            <Grid item xs={5}>\n                                <Paper className={classes.paperBlock}>\n                                    {\n                                        sliderImages?.length > 0 && sliderImages.map((value, index) => {\n                                            return (\n                                                <Grid key={index} container justify={'center'}>\n                                                    <Grid item={true}>\n                                                        <Card  className={classes.card}\n                                                               style={{border: index + 1 === selectedIndex ? '2px solid red' :\n                                                                       `1px solid ${COLORS?.secondary}`}}>\n                                                            <div style={{\n                                                                backgroundImage: `url(${GENERAL_SETTINGS.STATIC_URL + value.fileurl})`,\n                                                                height: '100%',\n                                                                width: '100%',\n                                                                backgroundSize: 'cover',\n                                                                borderRadius: 5,\n                                                            }}\n                                                                 onMouseEnter={() => {setLocalState(prev => ({...prev, showDeleteButton: true, hoverIndex: index}))}}\n                                                                 onMouseLeave={() => {setLocalState(prev => ({...prev, showDeleteButton: false, hoverIndex: index}))}}\n                                                                 onClick={() => handleSelectedImage(index + 1, value)}\n                                                            >\n                                                                {\n                                                                    showDeleteButton && hoverIndex === index && <IconButton\n                                                                        disabled={isRequested}\n                                                                        component=\"span\"\n                                                                        color={'primary'}\n                                                                        className={index === sliderImages.length - 1 ? classes.disableEvent : ''}\n                                                                        onClick={() => handleUpdateOrderNo(value.gid, value.orderno + 1, 'increment')}\n                                                                    >\n                                                                        <AddCircleIcon />\n                                                                    </IconButton>\n                                                                }\n                                                                {\n                                                                    showDeleteButton && hoverIndex === index && <Typography\n                                                                        component=\"span\"\n                                                                        color={'primary'}\n                                                                    >\n                                                                        {value.orderno}\n                                                                    </Typography>\n                                                                }\n                                                                {\n                                                                    showDeleteButton && hoverIndex === index && <IconButton\n                                                                        disabled={isRequested}\n                                                                        component=\"span\"\n                                                                        color={'primary'}\n                                                                        className={index === 0 ? classes.disableEvent : ''}\n                                                                        onClick={() => handleUpdateOrderNo(value.gid, value.orderno - 1, 'decrement')}\n                                                                    >\n                                                                        <RemoveCircleIcon />\n                                                                    </IconButton>\n                                                                }\n                                                                {\n                                                                    showDeleteButton && hoverIndex === index && <IconButton\n                                                                        onClick={() => handleDeleteImage(value.gid)}\n                                                                        disabled={isRequested}\n                                                                        aria-label=\"upload picture\"\n                                                                        component=\"span\"\n                                                                        style={{float: \"right\"}}\n                                                                        color={'primary'}\n                                                                    >\n                                                                        <CancelIcon/>\n                                                                    </IconButton>\n                                                                }\n                                                            </div>\n                                                        </Card>\n                                                    </Grid>\n                                                </Grid>\n                                            )\n                                        })\n                                    }\n                                </Paper>\n                            </Grid>\n                            <Grid item xs={7}>\n                                <Paper className={classes.paperBlock}>\n                                    {\n                                        selectedIndex &&\n                                        <>\n                                            <Container>\n                                                <Grid container justify={'flex-start'}>\n                                                    <Grid item xs={3}>\n                                                        <Typography\n                                                            component={'h6'}\n                                                            variant={'h6'}\n                                                            className={classes.text}\n                                                        >\n                                                            Title\n                                                        </Typography>\n                                                    </Grid>\n                                                    <Grid item xs={9}>\n                                                        <IconButton\n                                                            aria-label=\"Edit Title\"\n                                                            color=\"primary\"\n                                                            onClick={() => handleDialogOpen('title')}\n                                                            style={{float: 'right'}}\n                                                        >\n                                                            <BorderColorSharpIcon color=\"primary\" />\n                                                        </IconButton>\n                                                    </Grid>\n                                                </Grid>\n                                            </Container>\n                                            <Container>\n                                                <Grid container justify={'flex-start'}>\n                                                    <Grid item xs={3}>\n                                                        <Typography\n                                                            component={'h6'}\n                                                            variant={'h6'}\n                                                            className={classes.text}\n                                                        >\n                                                            Description\n                                                        </Typography>\n                                                    </Grid>\n                                                    <Grid item xs={9}>\n                                                        <IconButton\n                                                            aria-label=\"Edit Title\"\n                                                            color=\"primary\"\n                                                            onClick={() => handleDialogOpen('description')}\n                                                            style={{float: 'right'}}\n                                                        >\n                                                            <BorderColorSharpIcon color=\"primary\" />\n                                                        </IconButton>\n                                                    </Grid>\n                                                </Grid>\n                                            </Container>\n                                            <Container>\n                                                <Grid container justify={'flex-start'}>\n                                                    <Grid item xs={11}>\n                                                        <Typography\n                                                            component={'h6'}\n                                                            variant={'h6'}\n                                                            className={classes.text}\n                                                        >\n                                                            Do you want to add button for image ?\n                                                        </Typography>\n                                                    </Grid>\n                                                    <Grid item xs={1} >\n                                                        <Typography component={'div'} style={{marginTop: 20}}>\n                                                            <Switch\n                                                                size={'small'}\n                                                                checked={isCta}\n                                                                onChange={() => {\n                                                                    setLocalState(prev => ({...prev, cta: '', isCta: !isCta, ctaTitle: '', ctaLink: ''}))\n                                                                }}\n                                                                inputProps={{ 'aria-label': 'secondary checkbox' }}\n                                                                color={'primary'}\n                                                            />\n                                                        </Typography>\n                                                    </Grid>\n                                                </Grid>\n                                            </Container>\n                                            {\n                                                isCta &&\n                                                    <>\n                                                        <Container>\n                                                            <Grid container>\n                                                                <Grid item xs={4}>\n                                                                    <FormLabel id=\"align-horizontal\">Horizontal Alignment :</FormLabel>\n                                                                </Grid>\n                                                                <Grid item xs={8}>\n                                                                    <FormControl variant=\"outlined\" size={'small'} fullWidth>\n                                                                        <Select value={ctaHorizontalAlignment} onChange={(e) => handleAlignment('horizontal', e.target.value)}>\n                                                                            {horizontalAlignments.map((align, index) => {\n                                                                                return (\n                                                                                    <MenuItem value={align.value} key={index}>\n                                                                                        {' '}\n                                                                                        {align.text}{' '}\n                                                                                    </MenuItem>\n                                                                                )\n                                                                            })}\n                                                                        </Select>\n                                                                    </FormControl>\n                                                                </Grid>\n                                                            </Grid>\n                                                            <Grid container style={{marginTop: 4}}>\n                                                                <Grid item xs={4}>\n                                                                    <FormLabel id=\"align-vertical\">Vertical Alignment : </FormLabel>\n                                                                </Grid>\n                                                                <Grid item xs={8}>\n                                                                    <FormControl variant=\"outlined\" size={'small'} fullWidth>\n                                                                        <Select\n                                                                            value={ctaVerticalAlignment}\n                                                                            onChange={(e) => handleAlignment('vertical', e.target.value)}\n                                                                            label=\"Vertical Alignment\"\n                                                                        >\n                                                                            {verticalAlignments.map((align, index) => {\n                                                                                return (\n                                                                                    <MenuItem value={align.value} key={index}>\n                                                                                        {' '}\n                                                                                        {align.text}{' '}\n                                                                                    </MenuItem>\n                                                                                )\n                                                                            })}\n                                                                        </Select>\n                                                                    </FormControl>\n                                                                </Grid>\n                                                            </Grid>\n                                                        </Container>\n                                                <Container>\n                                                    <Grid container justify={'flex-start'} spacing={3}>\n                                                        <Grid item xs={6}>\n                                                            <TextField\n                                                                size={'small'}\n                                                                id=\"button-title\"\n                                                                variant={\"outlined\"}\n                                                                label={'Title'}\n                                                                value={ctaTitle}\n                                                                fullWidth\n                                                                onChange={(e) => {\n                                                                    const { value } = e?.target;\n                                                                    setLocalState(prev => ({...prev, ctaTitle: value}))\n                                                                }}\n                                                                style={{marginTop: 8}}\n                                                                helperText={\n                                                                    ctaTitle && <Typography\n                                                                        variant=\"caption\"\n                                                                        className={classes.alignText}\n                                                                        display=\"block\"\n                                                                    >\n                                                                        { `${ctaTitle?.length} < 100` }\n                                                                    </Typography>\n                                                                }\n                                                                inputProps={{maxLength: 99}}\n                                                            />\n                                                        </Grid>\n                                                        <Grid item xs={6}>\n                                                            <TextField\n                                                                size={'small'}\n                                                                id=\"button-link\"\n                                                                variant={\"outlined\"}\n                                                                label={'Link'}\n                                                                value={ctaLink}\n                                                                error={ctaLink ? !validator.isURL(ctaLink) : false}\n                                                                onChange={(e) => {\n                                                                    const { value } = e?.target;\n                                                                    setLocalState(prev => ({...prev, ctaLink: value}))\n                                                                }}\n                                                                style={{marginTop: 8}}\n                                                                fullWidth\n                                                                helperText={\n                                                                    ctaLink && <Typography\n                                                                        variant=\"caption\"\n                                                                        className={classes.alignText}\n                                                                        display=\"block\"\n                                                                    >\n                                                                        { `${ctaLink?.length} < 100` }\n                                                                    </Typography>\n                                                                }\n                                                                inputProps={{maxLength: 99}}\n                                                            />\n                                                        </Grid>\n                                                    </Grid>\n                                                </Container>\n                                                        </>\n                                            }\n                                            <Divider style={{marginTop: 8}} />\n                                            <Button\n                                                onClick={handleUpdateImage}\n                                                variant=\"contained\"\n                                                size=\"small\"\n                                                color=\"primary\"\n                                                aria-label=\"add\"\n                                                className={classes.submit}\n                                            >\n                                                SUBMIT\n                                            </Button>\n                                        </>\n                                    }\n                                </Paper>\n                            </Grid>\n                        </Grid>\n                        <DropzoneDialog\n                            open={openDialog}\n                            onSave={handleSaveImage}\n                            acceptedFiles={['image/jpeg', 'image/png', 'image/bmp']}\n                            showPreviews={true}\n                            maxFileSize={5000000}\n                            filesLimit={5}\n                            onClose={() => setLocalState(prev => ({...prev, openDialog: false}))}\n                        />\n                        {\n                            isDialogOpen &&\n                            <TextEditor\n                                handleSaveTextEditor={handleTextEditorValue}\n                                handleCancelTextEditor={handleCancelEditor}\n                                data={editorValue}\n                            />\n                        }\n                    </>\n                )\n            }\n        </React.Fragment>\n    )\n}\nexport  default  AddSliderGallery;"]},"metadata":{},"sourceType":"module"}