{"ast":null,"code":"import _extends from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/components/website/footer/EditFooter.js\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useContext } from 'react';\nimport { TextField, Button, Container, Grid, FormControl, RadioGroup, FormControlLabel, Radio, InputLabel, Select, Stepper, Step, StepLabel, StepConnector, Paper } from '@material-ui/core';\nimport CreateIcon from '@material-ui/icons/Create';\nimport ReceiptIcon from '@material-ui/icons/Receipt';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ReactDropzone from 'react-dropzone';\nimport { connect } from 'react-redux';\nimport { COLORS, UPLOAD_SUCCESS } from \"../../../constants\";\nimport clsx from \"clsx\";\nimport validator from \"validator\";\nimport WebCmsGlobal from \"components/webcms-global\";\nimport { withStyles } from '@material-ui/core/styles';\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\nimport { Upload, ViewList } from \"@webcms/orest\";\nimport { useRouter } from \"next/router\";\nimport { toast } from \"react-toastify\";\nimport { OREST_ENDPOINT } from \"../../../../../../model/orest/constants\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: 200\n      },\n      disabledDiv: {\n        pointerEvents: \"none\",\n        opacity: 0.5\n      }\n    },\n    actionButtons: {\n      display: 'flex',\n      justifyContent: 'flex-start',\n      marginTop: theme.spacing(2),\n      marginBottom: theme.spacing(2)\n    },\n    actionButton: {\n      marginLeft: theme.spacing(1),\n      borderRadius: 20\n    },\n    disabledEvent: {\n      pointerEvents: \"none\",\n      opacity: 0.5\n    },\n    icon: {\n      cursor: 'pointer',\n      width: '100%',\n      height: '100%',\n      opacity: 0.3\n    },\n    imagePreview: {\n      backgroundSize: 'contain',\n      backgroundRepeat: 'no-repeat',\n      backgroundPosition: \"center\",\n      height: 200,\n      width: '100%',\n      cursor: 'pointer'\n    },\n    columnCard: {\n      height: 400,\n      overflow: 'auto',\n      border: \"3px solid \".concat(COLORS.secondary)\n    },\n    iconBtn: {\n      '*:focus': {\n        outline: 'none'\n      }\n    }\n  };\n});\nvar useColorStepIconStyle = makeStyles(function () {\n  return {\n    root: {\n      backgroundColor: '#ccc',\n      zIndex: 1,\n      color: '#fff',\n      width: 50,\n      height: 50,\n      display: 'flex',\n      borderRadius: '50%',\n      justifyContent: 'center',\n      alignItems: 'center',\n      '& img': {\n        width: 35\n      }\n    },\n    iconSize: {\n      height: 30,\n      width: 30\n    },\n    active: {\n      backgroundColor: COLORS === null || COLORS === void 0 ? void 0 : COLORS.secondary,\n      boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)'\n    },\n    completed: {\n      backgroundColor: COLORS === null || COLORS === void 0 ? void 0 : COLORS.primary,\n      color: '#fff'\n    }\n  };\n});\nvar ColorlibConnector = withStyles({\n  alternativeLabel: {\n    top: 30,\n    left: 'calc(-50% + 10px)',\n    right: 'calc(50% + 10px)'\n  },\n  active: {\n    '& $line': {\n      background: 'transparent linear-gradient(270deg, #269DD4 0%, #0F4571 100%) 0% 0% no-repeat padding-box'\n    }\n  },\n  completed: {\n    '& $line': {\n      backgroundColor: COLORS === null || COLORS === void 0 ? void 0 : COLORS.primary\n    }\n  },\n  line: {\n    height: 4,\n    border: 0,\n    backgroundColor: '#eaeaf0',\n    borderRadius: 1\n  }\n})(StepConnector);\n\nvar getRowStepsIcons = function getRowStepsIcons(itemCount, isActive, isCompleted, step) {\n  _s();\n\n  var _clsx;\n\n  var icon_classes = useColorStepIconStyle();\n  var icons = {};\n\n  switch (itemCount) {\n    case 1:\n      icons = {\n        0: __jsx(ReceiptIcon, {\n          className: icon_classes.iconSize,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 20\n          }\n        }),\n        1: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 20\n          }\n        })\n      };\n      break;\n\n    case 2:\n      icons = {\n        0: __jsx(ReceiptIcon, {\n          className: icon_classes.iconSize,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 20\n          }\n        }),\n        1: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 20\n          }\n        }),\n        2: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 20\n          }\n        })\n      };\n      break;\n\n    case 3:\n      icons = {\n        0: __jsx(ReceiptIcon, {\n          className: icon_classes.iconSize,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 20\n          }\n        }),\n        1: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 20\n          }\n        }),\n        2: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 20\n          }\n        }),\n        3: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 20\n          }\n        })\n      };\n      break;\n\n    default:\n      icons = {\n        0: __jsx(ReceiptIcon, {\n          className: icon_classes.iconSize,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 20\n          }\n        }),\n        1: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 20\n          }\n        }),\n        2: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 20\n          }\n        }),\n        3: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 20\n          }\n        })\n      };\n      break;\n  }\n\n  return __jsx(\"div\", {\n    className: clsx(icon_classes.root, (_clsx = {}, _defineProperty(_clsx, icon_classes.active, isActive), _defineProperty(_clsx, icon_classes.completed, isCompleted), _clsx)),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, icons[step]);\n};\n\n_s(getRowStepsIcons, \"8QtFB1Loh2LoGFxabbnFhEJpa34=\", false, function () {\n  return [useColorStepIconStyle];\n});\n\nvar getColumnStepsIcons = function getColumnStepsIcons(itemCount, isActive, isCompleted, step) {\n  _s2();\n\n  var _clsx2;\n\n  var icon_classes = useColorStepIconStyle();\n  var icons = {};\n\n  switch (itemCount) {\n    case 1:\n      icons = {\n        0: __jsx(ReceiptIcon, {\n          className: icon_classes.iconSize,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 20\n          }\n        }),\n        1: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 20\n          }\n        })\n      };\n      break;\n\n    case 2:\n      icons = {\n        0: __jsx(ReceiptIcon, {\n          className: icon_classes.iconSize,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 20\n          }\n        }),\n        1: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 20\n          }\n        }),\n        2: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 20\n          }\n        })\n      };\n      break;\n\n    case 3:\n      icons = {\n        0: __jsx(ReceiptIcon, {\n          className: icon_classes.iconSize,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 20\n          }\n        }),\n        1: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 20\n          }\n        }),\n        2: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 20\n          }\n        }),\n        3: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 20\n          }\n        })\n      };\n      break;\n\n    case 4:\n      icons = {\n        0: __jsx(ReceiptIcon, {\n          className: icon_classes.iconSize,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 20\n          }\n        }),\n        1: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 20\n          }\n        }),\n        2: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 20\n          }\n        }),\n        3: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 20\n          }\n        }),\n        4: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 20\n          }\n        })\n      };\n      break;\n\n    case 5:\n      icons = {\n        0: __jsx(ReceiptIcon, {\n          className: icon_classes.iconSize,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 20\n          }\n        }),\n        1: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 20\n          }\n        }),\n        2: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 20\n          }\n        }),\n        3: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 20\n          }\n        }),\n        4: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 20\n          }\n        }),\n        5: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 20\n          }\n        })\n      };\n      break;\n\n    default:\n      icons = {\n        0: __jsx(ReceiptIcon, {\n          className: icon_classes.iconSize,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 20\n          }\n        }),\n        1: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 20\n          }\n        }),\n        2: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 20\n          }\n        }),\n        3: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 20\n          }\n        }),\n        4: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 20\n          }\n        }),\n        5: __jsx(CreateIcon, {\n          className: icon_classes.iconSize,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 20\n          }\n        })\n      };\n      break;\n  }\n\n  return __jsx(\"div\", {\n    className: clsx(icon_classes.root, (_clsx2 = {}, _defineProperty(_clsx2, icon_classes.active, isActive), _defineProperty(_clsx2, icon_classes.completed, isCompleted), _clsx2)),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }\n  }, icons[step]);\n};\n\n_s2(getColumnStepsIcons, \"8QtFB1Loh2LoGFxabbnFhEJpa34=\", false, function () {\n  return [useColorStepIconStyle];\n});\n\nvar EditFooter = function EditFooter(props) {\n  _s3();\n\n  var state = props.state,\n      onEditFooter = props.onEditFooter;\n  var classes = useStyles();\n\n  var _useState = useState(state.website.footer.items.length),\n      rowNumber = _useState[0],\n      setRowNumber = _useState[1];\n\n  var _useState2 = useState(0),\n      activeRowStep = _useState2[0],\n      setActiveRowStep = _useState2[1];\n\n  var _useState3 = useState(0),\n      activeColumnStep = _useState3[0],\n      setActiveColumnStep = _useState3[1];\n\n  var _useState4 = useState([]),\n      rowSteps = _useState4[0],\n      setRowSteps = _useState4[1];\n\n  var _useState5 = useState([]),\n      columnSteps = _useState5[0],\n      setColumnSteps = _useState5[1];\n\n  var _useState6 = useState(state.website.footer.items),\n      footerItems = _useState6[0],\n      setFooterItems = _useState6[1];\n\n  var _useState7 = useState([]),\n      otherLangFooterItems = _useState7[0],\n      setOtherLangFooterItems = _useState7[1];\n\n  var _useState8 = useState(0),\n      colNumber = _useState8[0],\n      setColNumber = _useState8[1];\n\n  var _useState9 = useState([]),\n      webPages = _useState9[0],\n      setWebPages = _useState9[1];\n\n  var _useContext = useContext(WebCmsGlobal),\n      GENERAL_SETTINGS = _useContext.GENERAL_SETTINGS,\n      token = _useContext.token;\n\n  var router = useRouter();\n  var companyId = router.query.companyID;\n  var authToken = token || router.query.authToken;\n  useEffect(function () {\n    //set header items for other languages\n    if (Object.keys(state.langsFile).length > 0 && state.langsFile.footer && state.langsFile.footer[state.langCode]) {\n      setOtherLangFooterItems(_toConsumableArray(state.langsFile.footer[state.langCode].items));\n    } //getting web page from rafile\n\n\n    ViewList({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.RAFILE,\n      token: authToken,\n      params: {\n        hotelrefno: Number(companyId),\n        query: \"filetype:WEBPAGE\"\n      }\n    }).then(function (res) {\n      if (res.status === 200 && res.data.data) {\n        var updatedWebPages = [];\n\n        if (state.website.pages.length > 0) {\n          state.website.pages.map(function (page) {\n            var webPage = res.data.data.find(function (x) {\n              return x.gid === page.gid;\n            });\n\n            if (webPage) {\n              updatedWebPages.push(webPage);\n            }\n          });\n        }\n\n        setWebPages(updatedWebPages);\n      }\n    });\n  }, []);\n  useEffect(function () {\n    var updatedRowsSteps = [];\n\n    for (var i = 0; i <= rowNumber; i++) {\n      if (i === 0) {\n        updatedRowsSteps.push('No of Rows');\n      } else {\n        updatedRowsSteps.push('Row ' + i);\n      }\n    }\n\n    setRowSteps(updatedRowsSteps);\n\n    if (rowNumber < footerItems.length) {\n      var updatedFooterItems = _toConsumableArray(footerItems);\n\n      updatedFooterItems.length = rowNumber;\n      setFooterItems(updatedFooterItems);\n    }\n\n    if (rowNumber > footerItems.length) {\n      for (var _i = 0; _i < rowNumber; _i++) {\n        if (!footerItems[_i]) {\n          footerItems.push({\n            id: \"row-\".concat(footerItems.length + 1),\n            items: [{\n              id: 'item-1',\n              alignment: 'left',\n              value: [{\n                id: 'value-1',\n                type: 'paragraph',\n                value: ''\n              }]\n            }]\n          });\n        }\n      }\n    }\n  }, [rowNumber]);\n  useEffect(function () {\n    var updatedColSteps = [];\n\n    for (var i = 0; i <= colNumber; i++) {\n      if (i === 0) {\n        updatedColSteps.push('No of Columns');\n      } else {\n        updatedColSteps.push('Column ' + i);\n      }\n    }\n\n    setColumnSteps(updatedColSteps);\n\n    if (activeRowStep !== 0) {\n      if (colNumber < footerItems[activeRowStep - 1].items.length) {\n        var updatedFooterItems = _toConsumableArray(footerItems);\n\n        updatedFooterItems[activeRowStep - 1].items.length = colNumber;\n        setFooterItems(updatedFooterItems);\n      }\n\n      if (colNumber > footerItems[activeRowStep - 1].items.length) {\n        for (var _i2 = 0; _i2 < colNumber; _i2++) {\n          if (!footerItems[activeRowStep - 1].items[_i2]) {\n            footerItems[activeRowStep - 1].items.push({\n              id: 'item-' + _i2 + 1,\n              alignment: 'left',\n              value: [{\n                id: 'value-1',\n                type: 'paragraph',\n                value: ''\n              }]\n            });\n          }\n        }\n      }\n    }\n  }, [colNumber]);\n  useEffect(function () {\n    if (activeRowStep === rowSteps.length - 1) {\n      if (state.langCode === state.defaultLang) {\n        onEditFooter({\n          tpl: state.website.footer.tpl,\n          items: footerItems\n        });\n      } else {\n        onEditFooter({\n          items: otherLangFooterItems\n        });\n      }\n    }\n  }, [activeRowStep, footerItems]);\n\n  var handleNextRow = function handleNextRow() {\n    setActiveRowStep(function (previousStep) {\n      return previousStep + 1;\n    });\n    setActiveColumnStep(0);\n    setColNumber(state.website.footer.items[activeRowStep].items.length);\n  };\n\n  var handleBackRow = function handleBackRow() {\n    setActiveRowStep(function (previousStep) {\n      return previousStep - 1;\n    });\n    activeRowStep > 1 && setColNumber(state.website.footer.items[activeRowStep - 2].items.length);\n  };\n\n  var handleNextColumn = function handleNextColumn() {\n    setActiveColumnStep(function (previousStep) {\n      return previousStep + 1;\n    });\n  };\n\n  var handleBackColumn = function handleBackColumn() {\n    setActiveColumnStep(function (previousStep) {\n      return previousStep - 1;\n    });\n  };\n\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 13\n    }\n  }, __jsx(IconButton, {\n    \"aria-label\": \"Back\",\n    color: \"primary\",\n    disabled: activeRowStep === 0,\n    onClick: handleBackRow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 17\n    }\n  }, __jsx(ArrowBackIosIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 21\n    }\n  })), __jsx(Stepper, {\n    style: {\n      width: '100%'\n    },\n    activeStep: activeRowStep,\n    connector: __jsx(ColorlibConnector, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 88\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 17\n    }\n  }, rowSteps.map(function (label, index) {\n    return __jsx(Step, {\n      key: label,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 33\n      }\n    }, __jsx(StepLabel, {\n      color: \"secondary\",\n      StepIconComponent: function StepIconComponent() {\n        return getRowStepsIcons(rowSteps, activeRowStep === index, activeRowStep > index, index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 37\n      }\n    }, label));\n  })), __jsx(IconButton, {\n    \"aria-label\": \"Back\",\n    color: \"primary\",\n    disabled: activeRowStep === rowSteps.length - 1,\n    onClick: handleNextRow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 17\n    }\n  }, __jsx(ArrowForwardIosIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 21\n    }\n  }))), activeRowStep === 0 && __jsx(Grid, {\n    container: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 17\n    }\n  }, __jsx(TextField, {\n    label: 'Number of Rows',\n    placeholder: 'Enter Number of rows here ..',\n    value: rowNumber,\n    onChange: function onChange(e) {\n      return setRowNumber(parseInt(e.target.value));\n    },\n    variant: \"outlined\",\n    type: \"number\",\n    inputProps: {\n      min: \"1\",\n      max: \"3\",\n      step: \"1\"\n    },\n    style: {\n      minWidth: 200,\n      marginLeft: 32\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 21\n    }\n  })), activeRowStep !== 0 && __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 17\n    }\n  }, __jsx(Paper, {\n    className: classes.columnCard,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 21\n    }\n  }, __jsx(Stepper, {\n    activeStep: activeColumnStep,\n    connector: __jsx(ColorlibConnector, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 75\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 25\n    }\n  }, columnSteps.map(function (label, index) {\n    return __jsx(Step, {\n      key: label,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 41\n      }\n    }, __jsx(StepLabel, {\n      color: \"secondary\",\n      StepIconComponent: function StepIconComponent() {\n        return getColumnStepsIcons(columnSteps, activeColumnStep === index, activeColumnStep > index, index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 45\n      }\n    }, label));\n  })), activeColumnStep === 0 && __jsx(Grid, {\n    container: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 29\n    }\n  }, __jsx(TextField, {\n    label: 'Number of Columns',\n    value: colNumber,\n    onChange: function onChange(e) {\n      return setColNumber(parseInt(e.target.value));\n    },\n    variant: \"outlined\",\n    type: \"number\",\n    inputProps: {\n      min: \"1\",\n      max: \"5\",\n      step: \"1\"\n    },\n    style: {\n      minWidth: 200,\n      marginLeft: 32\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 33\n    }\n  })), activeColumnStep > 0 && state.langCode !== state.defaultLang && otherLangFooterItems.length > 0 && otherLangFooterItems[activeRowStep - 1].items.map(function (item, index) {\n    return activeColumnStep - 1 === index ? __jsx(Container, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 37\n      }\n    }, __jsx(Grid, {\n      container: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 41\n      }\n    }, __jsx(Grid, {\n      item: true,\n      xs: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 45\n      }\n    }, __jsx(Button, {\n      onClick: function onClick() {\n        var updatedFooterItems = _toConsumableArray(footerItems);\n\n        updatedFooterItems[activeRowStep - 1].items[index].value.push({\n          id: \"value-\".concat(index + 1),\n          type: 'paragraph',\n          value: ''\n        });\n        setFooterItems(updatedFooterItems);\n      },\n      variant: \"contained\",\n      size: \"small\",\n      color: \"primary\",\n      \"aria-label\": \"add\",\n      className: classes.actionButton,\n      disabled: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 49\n      }\n    }, __jsx(AddCircleIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 53\n      }\n    }), \" ADD\")), __jsx(Grid, {\n      item: true,\n      xs: 8,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 45\n      }\n    }, __jsx(FormControl, {\n      component: \"fieldset\",\n      style: {\n        \"float\": \"right\"\n      },\n      disabled: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 49\n      }\n    }, __jsx(RadioGroup, {\n      \"aria-label\": \"footeritem\",\n      row: true,\n      name: \"footer-item\",\n      value: footerItems[activeRowStep - 1].items[index].alignment,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 53\n      }\n    }, __jsx(FormControlLabel, {\n      value: 'left',\n      control: __jsx(Radio, {\n        color: \"primary\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 70\n        }\n      }),\n      label: \"Align Left\",\n      labelPlacement: \"start\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 57\n      }\n    }), __jsx(FormControlLabel, {\n      value: 'center',\n      control: __jsx(Radio, {\n        color: \"primary\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 70\n        }\n      }),\n      label: \"Alight Center\",\n      labelPlacement: \"start\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 57\n      }\n    }), __jsx(FormControlLabel, {\n      value: 'right',\n      control: __jsx(Radio, {\n        color: \"primary\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 70\n        }\n      }),\n      label: \"Alight Right\",\n      labelPlacement: \"start\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 57\n      }\n    }))))), item.value.length > 0 && item.value.map(function (val, i) {\n      return __jsx(Grid, {\n        container: true,\n        key: i,\n        style: {\n          marginTop: 8\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 53\n        }\n      }, __jsx(Grid, {\n        item: true,\n        xs: 3,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 57\n        }\n      }, __jsx(IconButton, {\n        \"aria-label\": \"Delete item\",\n        color: \"primary\",\n        disabled: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 61\n        }\n      }, __jsx(ArrowDownwardIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 65\n        }\n      })), __jsx(IconButton, {\n        \"aria-label\": \"Delete item\",\n        color: \"primary\",\n        disabled: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 61\n        }\n      }, __jsx(ArrowUpwardIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 65\n        }\n      })), __jsx(FormControl, {\n        disabled: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 61\n        }\n      }, __jsx(InputLabel, {\n        htmlFor: \"age-native-simple\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 65\n        }\n      }, \"Sub Item\"), __jsx(Select, {\n        \"native\": true,\n        name: \"type\",\n        variant: 'outlined',\n        value: footerItems[activeRowStep - 1].items[index].value[i].type,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 65\n        }\n      }, __jsx(\"option\", {\n        style: {\n          display: 'none'\n        },\n        value: \"\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 69\n        }\n      }), __jsx(\"option\", {\n        value: \"paragraph\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 69\n        }\n      }, \"Paragraph\"), __jsx(\"option\", {\n        value: \"logo\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 69\n        }\n      }, \"Logo\"), __jsx(\"option\", {\n        value: \"heading\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 69\n        }\n      }, \"Heading\"), __jsx(\"option\", {\n        value: \"link\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 69\n        }\n      }, \"Link\"), __jsx(\"option\", {\n        value: \"internal-link\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 69\n        }\n      }, \"Internal\"), __jsx(\"option\", {\n        value: \"social-link\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 69\n        }\n      }, \"Social Link\"), __jsx(\"option\", {\n        value: \"button\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 69\n        }\n      }, \"Button\"), __jsx(\"option\", {\n        value: \"address\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 69\n        }\n      }, \"Address\"), __jsx(\"option\", {\n        value: \"phone\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 69\n        }\n      }, \"Phone \"), __jsx(\"option\", {\n        value: \"email\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 69\n        }\n      }, \"Email\"), __jsx(\"option\", {\n        value: \"image\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 69\n        }\n      }, \"Image\")))), __jsx(Grid, {\n        item: true,\n        xs: 8,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 57\n        }\n      }, footerItems[activeRowStep - 1].items[index].value[i].type === 'logo' && __jsx(Paper, {\n        style: {\n          border: \"2px solid \".concat(COLORS === null || COLORS === void 0 ? void 0 : COLORS.secondary),\n          opacity: 0.5\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 65\n        }\n      }, __jsx(Grid, {\n        container: true,\n        justify: 'center',\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 69\n        }\n      }, __jsx(Grid, {\n        item: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 73\n        }\n      }, __jsx(\"div\", {\n        style: {\n          backgroundImage: \"url(\".concat(GENERAL_SETTINGS.STATIC_URL + state.altLogoUrl, \")\"),\n          backgroundSize: 'contain',\n          backgroundRepeat: 'no-repeat',\n          backgroundPosition: \"center\",\n          height: 200,\n          width: 200,\n          marginTop: 16\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 77\n        }\n      })))), footerItems[activeRowStep - 1].items[index].value[i].type === 'image' && __jsx(Grid, {\n        container: true,\n        justify: 'center',\n        spacing: 1,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 65\n        }\n      }, __jsx(Grid, {\n        item: true,\n        xs: 6,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 69\n        }\n      }, __jsx(TextField, {\n        label: 'Link',\n        variant: \"outlined\",\n        fullWidth: true,\n        value: footerItems[activeRowStep - 1].items[index].value[i].value.link,\n        disabled: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 73\n        }\n      })), __jsx(Grid, {\n        item: true,\n        xs: 6,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 69\n        }\n      }, __jsx(Paper, {\n        style: {\n          border: \"2px solid \".concat(COLORS === null || COLORS === void 0 ? void 0 : COLORS.secondary)\n        },\n        className: classes.disabledEvent,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 73\n        }\n      }, __jsx(ReactDropzone, {\n        accept: 'image/png,image/jpg,image/jpeg',\n        acceptedFile: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 77\n        }\n      }, function (_ref) {\n        var _val$value;\n\n        var getRootProps = _ref.getRootProps,\n            getInputProps = _ref.getInputProps;\n        return __jsx(\"section\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 647,\n            columnNumber: 85\n          }\n        }, __jsx(\"div\", _extends({}, getRootProps(), {\n          style: {\n            width: '100%',\n            height: 200\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 648,\n            columnNumber: 89\n          }\n        }), __jsx(\"input\", _extends({}, getInputProps(), {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 93\n          }\n        })), val.value ? __jsx(\"div\", {\n          style: {\n            backgroundImage: \"url(\".concat(GENERAL_SETTINGS.STATIC_URL + ((_val$value = val.value) === null || _val$value === void 0 ? void 0 : _val$value.image), \")\")\n          },\n          className: classes.imagePreview,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 651,\n            columnNumber: 109\n          }\n        }) : __jsx(CloudUploadIcon, {\n          className: classes.icon,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 658,\n            columnNumber: 107\n          }\n        })));\n      })))), (footerItems[activeRowStep - 1].items[index].value[i].type === 'social-link' || footerItems[activeRowStep - 1].items[index].value[i].type === 'link' || footerItems[activeRowStep - 1].items[index].value[i].type === 'button') && __jsx(Grid, {\n        container: true,\n        justify: 'flex-start',\n        spacing: 3,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 672,\n          columnNumber: 65\n        }\n      }, __jsx(Grid, {\n        item: true,\n        xs: 6,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 69\n        }\n      }, __jsx(TextField, {\n        label: 'Title',\n        variant: \"outlined\",\n        fullWidth: true,\n        value: val.value,\n        onChange: function onChange(e) {\n          var updatedFooterItems = _toConsumableArray(otherLangFooterItems);\n\n          updatedFooterItems[activeRowStep - 1].items[index].value[i].value = e.target.value;\n          setOtherLangFooterItems(updatedFooterItems);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 677,\n          columnNumber: 73\n        }\n      })), __jsx(Grid, {\n        item: true,\n        xs: 6,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 689,\n          columnNumber: 69\n        }\n      }, __jsx(TextField, {\n        label: 'Link',\n        variant: \"outlined\",\n        fullWidth: true,\n        value: footerItems[activeRowStep - 1].items[index].value[i].value.value,\n        disabled: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 690,\n          columnNumber: 73\n        }\n      }))), footerItems[activeRowStep - 1].items[index].value[i].type === 'internal-link' && __jsx(Grid, {\n        container: true,\n        justify: 'flex-start',\n        spacing: 3,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 65\n        }\n      }, __jsx(Grid, {\n        item: true,\n        xs: 6,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 703,\n          columnNumber: 69\n        }\n      }, __jsx(TextField, {\n        label: 'Title',\n        variant: \"outlined\",\n        fullWidth: true,\n        value: val.value,\n        onChange: function onChange(e) {\n          var updatedFooterItems = _toConsumableArray(otherLangFooterItems);\n\n          updatedFooterItems[activeRowStep - 1].items[index].value[i].value = e.target.value;\n          setOtherLangFooterItems(updatedFooterItems);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 704,\n          columnNumber: 73\n        }\n      })), __jsx(Grid, {\n        item: true,\n        xs: 6,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 69\n        }\n      }, __jsx(FormControl, {\n        fullWidth: true,\n        disabled: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 717,\n          columnNumber: 73\n        }\n      }, __jsx(InputLabel, {\n        shrink: !!val.value.value,\n        style: {\n          marginLeft: 16\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 718,\n          columnNumber: 77\n        }\n      }, \"Web Page\"), __jsx(Select, {\n        \"native\": true,\n        value: footerItems[activeRowStep - 1].items[index].value[i].value.value,\n        variant: \"outlined\",\n        onChange: function onChange(e) {\n          var updatedFooterItems = _toConsumableArray(footerItems);\n\n          updatedFooterItems[activeRowStep - 1].items[index].value[i].value['value'] = e.target.value;\n          setFooterItems(updatedFooterItems);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 721,\n          columnNumber: 77\n        }\n      }, __jsx(\"option\", {\n        style: {\n          display: 'none'\n        },\n        value: \"\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 730,\n          columnNumber: 81\n        }\n      }), webPages.length > 0 && webPages.map(function (page, index) {\n        return __jsx(\"option\", {\n          value: page.gid,\n          key: index,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 734,\n            columnNumber: 93\n          }\n        }, \" \", page.code, \" \");\n      }))))), footerItems[activeRowStep - 1].items[index].value[i].type === 'address' && __jsx(Grid, {\n        container: true,\n        justify: 'flex-start',\n        spacing: 3,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 745,\n          columnNumber: 65\n        }\n      }, __jsx(Grid, {\n        item: true,\n        xs: 6,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 749,\n          columnNumber: 69\n        }\n      }, __jsx(TextField, {\n        label: 'Title',\n        variant: \"outlined\",\n        fullWidth: true,\n        value: val.value,\n        disabled: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 750,\n          columnNumber: 73\n        }\n      })), __jsx(Grid, {\n        item: true,\n        xs: 6,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 758,\n          columnNumber: 69\n        }\n      }, __jsx(TextField, {\n        label: 'Link',\n        variant: \"outlined\",\n        fullWidth: true,\n        value: footerItems[activeRowStep - 1].items[index].value[i].value.value,\n        disabled: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 759,\n          columnNumber: 73\n        }\n      }))), (footerItems[activeRowStep - 1].items[index].value[i].type === 'paragraph' || footerItems[activeRowStep - 1].items[index].value[i].type === 'heading') && __jsx(Grid, {\n        container: true,\n        justify: 'flex-start',\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 772,\n          columnNumber: 65\n        }\n      }, __jsx(TextField, {\n        label: 'Value',\n        variant: \"outlined\",\n        fullWidth: true,\n        value: val.value,\n        onChange: function onChange(e) {\n          var updatedFooterItems = _toConsumableArray(otherLangFooterItems);\n\n          updatedFooterItems[activeRowStep - 1].items[index].value[i].value = e.target.value;\n          setOtherLangFooterItems(updatedFooterItems);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 773,\n          columnNumber: 69\n        }\n      })), footerItems[activeRowStep - 1].items[index].value[i].type === 'email' && __jsx(TextField, {\n        label: 'Value',\n        variant: \"outlined\",\n        fullWidth: true,\n        value: val.value,\n        disabled: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 787,\n          columnNumber: 138\n        }\n      }), footerItems[activeRowStep - 1].items[index].value[i].type === 'phone' && __jsx(TextField, {\n        label: 'Value',\n        variant: \"outlined\",\n        fullWidth: true,\n        value: val.value,\n        disabled: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 796,\n          columnNumber: 138\n        }\n      })), __jsx(Grid, {\n        item: true,\n        xs: 1,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 805,\n          columnNumber: 57\n        }\n      }, __jsx(IconButton, {\n        \"aria-label\": \"Delete item\",\n        color: \"primary\",\n        onClick: function onClick() {\n          var updatedFooterItems = _toConsumableArray(footerItems);\n\n          updatedFooterItems[activeRowStep - 1].items[index].value.splice(i, 1);\n          setFooterItems(updatedFooterItems);\n        },\n        disabled: item.value.length === 1,\n        className: state.langCode !== state.defaultLang ? classes.disabledEvent : '',\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 806,\n          columnNumber: 61\n        }\n      }, __jsx(CancelIcon, {\n        style: {\n          color: item.value.length === 1 ? 'grey' : 'red'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 817,\n          columnNumber: 65\n        }\n      }))));\n    })) : null;\n  }), activeColumnStep > 0 && state.langCode === state.defaultLang && footerItems.length > 0 && footerItems[activeRowStep - 1].items.map(function (item, index) {\n    return activeColumnStep - 1 === index ? __jsx(Container, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 830,\n        columnNumber: 75\n      }\n    }, __jsx(Grid, {\n      container: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 831,\n        columnNumber: 37\n      }\n    }, __jsx(Grid, {\n      item: true,\n      xs: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 832,\n        columnNumber: 41\n      }\n    }, __jsx(Button, {\n      onClick: function onClick() {\n        var updatedFooterItems = _toConsumableArray(footerItems);\n\n        updatedFooterItems[activeRowStep - 1].items[index].value.push({\n          id: \"value-\".concat(index + 1),\n          type: 'paragraph',\n          value: ''\n        });\n        setFooterItems(updatedFooterItems);\n      },\n      variant: \"contained\",\n      size: \"small\",\n      color: \"primary\",\n      \"aria-label\": \"add\",\n      className: classes.actionButton,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 833,\n        columnNumber: 45\n      }\n    }, __jsx(AddCircleIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 849,\n        columnNumber: 49\n      }\n    }), \" ADD\")), __jsx(Grid, {\n      item: true,\n      xs: 8,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 852,\n        columnNumber: 41\n      }\n    }, __jsx(FormControl, {\n      component: \"fieldset\",\n      style: {\n        \"float\": \"right\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 853,\n        columnNumber: 45\n      }\n    }, __jsx(RadioGroup, {\n      \"aria-label\": \"footeritem\",\n      row: true,\n      name: \"footer-item\",\n      value: item.alignment,\n      onChange: function onChange(e) {\n        var updatedFooterItems = _toConsumableArray(footerItems);\n\n        updatedFooterItems[activeRowStep - 1].items[index].alignment = e.target.value;\n        setFooterItems(updatedFooterItems);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 857,\n        columnNumber: 49\n      }\n    }, __jsx(FormControlLabel, {\n      value: 'left',\n      control: __jsx(Radio, {\n        color: \"primary\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 870,\n          columnNumber: 66\n        }\n      }),\n      label: \"Align Left\",\n      labelPlacement: \"start\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 868,\n        columnNumber: 53\n      }\n    }), __jsx(FormControlLabel, {\n      value: 'center',\n      control: __jsx(Radio, {\n        color: \"primary\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 876,\n          columnNumber: 66\n        }\n      }),\n      label: \"Alight Center\",\n      labelPlacement: \"start\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 874,\n        columnNumber: 53\n      }\n    }), __jsx(FormControlLabel, {\n      value: 'right',\n      control: __jsx(Radio, {\n        color: \"primary\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 882,\n          columnNumber: 66\n        }\n      }),\n      label: \"Alight Right\",\n      labelPlacement: \"start\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 880,\n        columnNumber: 53\n      }\n    }))))), item.value.length > 0 && item.value.map(function (val, i) {\n      return __jsx(Grid, {\n        container: true,\n        key: i,\n        style: {\n          marginTop: 8\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 893,\n          columnNumber: 49\n        }\n      }, __jsx(Grid, {\n        item: true,\n        xs: 3,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 894,\n          columnNumber: 53\n        }\n      }, __jsx(IconButton, {\n        \"aria-label\": \"Delete item\",\n        color: \"primary\",\n        onClick: function onClick() {\n          var updatedFooterItems = _toConsumableArray(footerItems);\n\n          var tmp = updatedFooterItems[activeRowStep - 1].items[index].value[i + 1];\n          updatedFooterItems[activeRowStep - 1].items[index].value[i + 1] = updatedFooterItems[activeRowStep - 1].items[index].value[i];\n          updatedFooterItems[activeRowStep - 1].items[index].value[i] = tmp;\n          setFooterItems(updatedFooterItems);\n        },\n        disabled: item.value.length === 1 || i === item.value.length - 1,\n        className: classes.iconBtn,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 895,\n          columnNumber: 57\n        }\n      }, __jsx(ArrowDownwardIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 908,\n          columnNumber: 61\n        }\n      })), __jsx(IconButton, {\n        \"aria-label\": \"Delete item\",\n        color: \"primary\",\n        onClick: function onClick() {\n          var updatedFooterItems = _toConsumableArray(footerItems);\n\n          var tmp = updatedFooterItems[activeRowStep - 1].items[index].value[i - 1];\n          updatedFooterItems[activeRowStep - 1].items[index].value[i - 1] = updatedFooterItems[activeRowStep - 1].items[index].value[i];\n          updatedFooterItems[activeRowStep - 1].items[index].value[i] = tmp;\n          setFooterItems(updatedFooterItems);\n        },\n        disabled: item.value.length === 1 || i === 0,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 910,\n          columnNumber: 57\n        }\n      }, __jsx(ArrowUpwardIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 922,\n          columnNumber: 61\n        }\n      })), __jsx(FormControl, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 924,\n          columnNumber: 57\n        }\n      }, __jsx(InputLabel, {\n        htmlFor: \"age-native-simple\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 925,\n          columnNumber: 61\n        }\n      }, \"Sub Item\"), __jsx(Select, {\n        \"native\": true,\n        name: \"type\",\n        variant: 'outlined',\n        value: val.type,\n        onChange: function onChange(e) {\n          var updatedFooterItems = _toConsumableArray(footerItems);\n\n          if (e.target.value === 'social-link' || e.target.value === 'link' || e.target.value === 'button' || e.target.value === 'address' || e.target.value === 'internal-link') {\n            updatedFooterItems[activeRowStep - 1].items[index].value[i] = {\n              id: val.id,\n              type: e.target.value,\n              value: {\n                title: '',\n                value: ''\n              }\n            };\n          }\n\n          if (e.target.value === 'paragraph' || e.target.value === 'heading' || e.target.value === 'phone' || e.target.value === 'email') {\n            updatedFooterItems[activeRowStep - 1].items[index].value[i] = {\n              id: val.id,\n              type: e.target.value,\n              value: ''\n            };\n          }\n\n          if (e.target.value === 'logo') {\n            updatedFooterItems[activeRowStep - 1].items[index].value[i] = {\n              id: val.id,\n              type: e.target.value,\n              value: state.altLogoUrl\n            };\n          }\n\n          if (e.target.value === 'image') {\n            updatedFooterItems[activeRowStep - 1].items[index].value[i] = {\n              id: val.id,\n              type: e.target.value,\n              value: {\n                link: '',\n                image: ''\n              }\n            };\n          }\n\n          setFooterItems(updatedFooterItems);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 926,\n          columnNumber: 61\n        }\n      }, __jsx(\"option\", {\n        style: {\n          display: 'none'\n        },\n        value: \"\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 975,\n          columnNumber: 65\n        }\n      }), __jsx(\"option\", {\n        value: \"paragraph\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 976,\n          columnNumber: 65\n        }\n      }, \"Paragraph\"), __jsx(\"option\", {\n        value: \"logo\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 977,\n          columnNumber: 65\n        }\n      }, \"Logo\"), __jsx(\"option\", {\n        value: \"heading\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 978,\n          columnNumber: 65\n        }\n      }, \"Heading\"), __jsx(\"option\", {\n        value: \"link\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 979,\n          columnNumber: 65\n        }\n      }, \"Link\"), __jsx(\"option\", {\n        value: \"internal-link\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 980,\n          columnNumber: 65\n        }\n      }, \"Internal Link\"), __jsx(\"option\", {\n        value: \"social-link\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 981,\n          columnNumber: 65\n        }\n      }, \"Social Link\"), __jsx(\"option\", {\n        value: \"button\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 982,\n          columnNumber: 65\n        }\n      }, \"Button\"), __jsx(\"option\", {\n        value: \"address\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 983,\n          columnNumber: 65\n        }\n      }, \"Address\"), __jsx(\"option\", {\n        value: \"phone\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 984,\n          columnNumber: 65\n        }\n      }, \"Phone \"), __jsx(\"option\", {\n        value: \"email\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 985,\n          columnNumber: 65\n        }\n      }, \"Email\"), __jsx(\"option\", {\n        value: \"image\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 986,\n          columnNumber: 65\n        }\n      }, \"Image\")))), __jsx(Grid, {\n        item: true,\n        xs: 8,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 990,\n          columnNumber: 53\n        }\n      }, val.type === 'logo' && __jsx(Paper, {\n        style: {\n          border: \"2px solid \".concat(COLORS === null || COLORS === void 0 ? void 0 : COLORS.secondary)\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 993,\n          columnNumber: 61\n        }\n      }, __jsx(Grid, {\n        container: true,\n        justify: 'center',\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 994,\n          columnNumber: 65\n        }\n      }, __jsx(Grid, {\n        item: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 995,\n          columnNumber: 69\n        }\n      }, __jsx(\"div\", {\n        style: {\n          backgroundImage: \"url(\".concat(GENERAL_SETTINGS.STATIC_URL + state.altLogoUrl, \")\"),\n          backgroundSize: 'contain',\n          backgroundRepeat: 'no-repeat',\n          backgroundPosition: \"center\",\n          height: 200,\n          width: 200,\n          marginTop: 16\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 996,\n          columnNumber: 73\n        }\n      })))), val.type === 'image' && __jsx(Grid, {\n        container: true,\n        justify: 'center',\n        spacing: 1,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1015,\n          columnNumber: 61\n        }\n      }, __jsx(Grid, {\n        item: true,\n        xs: 6,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1016,\n          columnNumber: 65\n        }\n      }, __jsx(TextField, {\n        label: 'Link',\n        variant: \"outlined\",\n        fullWidth: true,\n        value: val.value.link,\n        error: !!(!validator.isURL(val.value.link) && val.value.link),\n        onChange: function onChange(e) {\n          var updatedFooterItems = _toConsumableArray(footerItems);\n\n          updatedFooterItems[activeRowStep - 1].items[index].value[i].value['link'] = e.target.value;\n          setFooterItems(updatedFooterItems);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1017,\n          columnNumber: 69\n        }\n      })), __jsx(Grid, {\n        item: true,\n        xs: 6,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1030,\n          columnNumber: 65\n        }\n      }, __jsx(Paper, {\n        style: {\n          border: \"2px solid \".concat(COLORS === null || COLORS === void 0 ? void 0 : COLORS.secondary)\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1031,\n          columnNumber: 69\n        }\n      }, __jsx(ReactDropzone, {\n        onDrop: function onDrop(e) {\n          Upload({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            token: authToken,\n            params: {\n              masterid: state.hotelMid,\n              code: \"FOOTER-IMAGE-\".concat(Math.floor(Math.random() * (1000 - 100) + 100) / 100),\n              orsactive: true,\n              hotelrefno: companyId\n            },\n            files: e\n          }).then(function (res) {\n            if (res.status === 200 && res.data && res.data.data) {\n              var url = res.data.data.url.replace('/var/otello', '').replace('/public', '');\n\n              var updatedFooterItems = _toConsumableArray(footerItems);\n\n              updatedFooterItems[activeRowStep - 1].items[index].value[i].value.image = url;\n              setFooterItems(updatedFooterItems);\n              toast.success(UPLOAD_SUCCESS, {\n                position: toast.POSITION.TOP_RIGHT\n              });\n            }\n          });\n        },\n        accept: 'image/png,image/jpg,image/jpeg',\n        acceptedFile: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1033,\n          columnNumber: 73\n        }\n      }, function (_ref2) {\n        var getRootProps = _ref2.getRootProps,\n            getInputProps = _ref2.getInputProps;\n        return __jsx(\"section\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1061,\n            columnNumber: 81\n          }\n        }, __jsx(\"div\", _extends({}, getRootProps(), {\n          style: {\n            width: '100%',\n            height: 200\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1062,\n            columnNumber: 85\n          }\n        }), __jsx(\"input\", _extends({}, getInputProps(), {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1066,\n            columnNumber: 89\n          }\n        })), val.value.image ? __jsx(\"div\", {\n          style: {\n            backgroundImage: \"url(\".concat(GENERAL_SETTINGS.STATIC_URL + val.value.image, \")\")\n          },\n          className: classes.imagePreview,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1068,\n            columnNumber: 111\n          }\n        }) : __jsx(CloudUploadIcon, {\n          className: classes.icon,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1075,\n            columnNumber: 103\n          }\n        })));\n      })))), (val.type === 'social-link' || val.type === 'link' || val.type === 'button' || val.type === 'address') && __jsx(Grid, {\n        container: true,\n        justify: 'flex-start',\n        spacing: 3,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1087,\n          columnNumber: 117\n        }\n      }, __jsx(Grid, {\n        item: true,\n        xs: 6,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1091,\n          columnNumber: 65\n        }\n      }, __jsx(TextField, {\n        label: 'Title',\n        variant: \"outlined\",\n        fullWidth: true,\n        value: val.value.title,\n        onChange: function onChange(e) {\n          var updatedFooterItems = _toConsumableArray(footerItems);\n\n          updatedFooterItems[activeRowStep - 1].items[index].value[i].value['title'] = e.target.value;\n          setFooterItems(updatedFooterItems);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1092,\n          columnNumber: 69\n        }\n      })), __jsx(Grid, {\n        item: true,\n        xs: 6,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1104,\n          columnNumber: 65\n        }\n      }, __jsx(TextField, {\n        label: 'Link',\n        variant: \"outlined\",\n        fullWidth: true,\n        value: val.value.value,\n        error: !validator.isURL(val.value.value) && val.value.value ? true : false,\n        onChange: function onChange(e) {\n          var updatedFooterItems = _toConsumableArray(footerItems);\n\n          updatedFooterItems[activeRowStep - 1].items[index].value[i].value['value'] = e.target.value;\n          setFooterItems(updatedFooterItems);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1105,\n          columnNumber: 69\n        }\n      }))), (val.type === 'paragraph' || val.type === 'heading') && __jsx(Grid, {\n        container: true,\n        justify: 'flex-start',\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1122,\n          columnNumber: 61\n        }\n      }, __jsx(TextField, {\n        label: 'Value',\n        variant: \"outlined\",\n        fullWidth: true,\n        value: val.value,\n        onChange: function onChange(e) {\n          var updatedFooterItems = _toConsumableArray(footerItems);\n\n          updatedFooterItems[activeRowStep - 1].items[index].value[i].value = e.target.value;\n          setFooterItems(updatedFooterItems);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1123,\n          columnNumber: 65\n        }\n      })), val.type === 'email' && __jsx(TextField, {\n        label: 'Value',\n        variant: \"outlined\",\n        fullWidth: true,\n        value: val.value,\n        onChange: function onChange(e) {\n          var updatedFooterItems = _toConsumableArray(footerItems);\n\n          updatedFooterItems[activeRowStep - 1].items[index].value[i].value = e.target.value;\n          setFooterItems(updatedFooterItems);\n        },\n        error: val.value && validator.isEmail(val.value) === false ? true : false,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1137,\n          columnNumber: 85\n        }\n      }), val.type === 'phone' && __jsx(TextField, {\n        label: 'Value',\n        variant: \"outlined\",\n        fullWidth: true,\n        value: val.value,\n        onChange: function onChange(e) {\n          var updatedFooterItems = _toConsumableArray(footerItems);\n\n          updatedFooterItems[activeRowStep - 1].items[index].value[i].value = e.target.value;\n          setFooterItems(updatedFooterItems);\n        },\n        error: val.value && validator.isMobilePhone(val.value) === false ? true : false,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1151,\n          columnNumber: 85\n        }\n      }), val.type === 'internal-link' && __jsx(Grid, {\n        container: true,\n        justify: 'flex-start',\n        spacing: 3,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1166,\n          columnNumber: 61\n        }\n      }, __jsx(Grid, {\n        item: true,\n        xs: 6,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1167,\n          columnNumber: 65\n        }\n      }, __jsx(TextField, {\n        label: 'Title',\n        variant: \"outlined\",\n        fullWidth: true,\n        value: val.value.title,\n        onChange: function onChange(e) {\n          var updatedFooterItems = _toConsumableArray(footerItems);\n\n          updatedFooterItems[activeRowStep - 1].items[index].value[i].value['title'] = e.target.value;\n          setFooterItems(updatedFooterItems);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1168,\n          columnNumber: 69\n        }\n      })), __jsx(Grid, {\n        item: true,\n        xs: 6,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1180,\n          columnNumber: 65\n        }\n      }, __jsx(FormControl, {\n        fullWidth: true,\n        disabled: state.langCode !== state.defaultLang,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1181,\n          columnNumber: 69\n        }\n      }, __jsx(InputLabel, {\n        shrink: val.value.value ? true : false,\n        style: {\n          marginLeft: 16\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1182,\n          columnNumber: 73\n        }\n      }, \"Web Page\"), __jsx(Select, {\n        \"native\": true,\n        value: val.value.value,\n        variant: \"outlined\",\n        onChange: function onChange(e) {\n          var updatedFooterItems = _toConsumableArray(footerItems);\n\n          updatedFooterItems[activeRowStep - 1].items[index].value[i].value['value'] = e.target.value;\n          setFooterItems(updatedFooterItems);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1185,\n          columnNumber: 73\n        }\n      }, __jsx(\"option\", {\n        style: {\n          display: 'none'\n        },\n        value: \"\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1194,\n          columnNumber: 77\n        }\n      }), webPages.length > 0 && webPages.map(function (page, index) {\n        return __jsx(\"option\", {\n          value: page.gid,\n          key: index,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1198,\n            columnNumber: 89\n          }\n        }, \" \", page.code, \" \");\n      })))))), __jsx(Grid, {\n        item: true,\n        xs: 1,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1208,\n          columnNumber: 53\n        }\n      }, __jsx(IconButton, {\n        \"aria-label\": \"Delete item\",\n        color: \"primary\",\n        onClick: function onClick() {\n          var updatedFooterItems = _toConsumableArray(footerItems);\n\n          updatedFooterItems[activeRowStep - 1].items[index].value.splice(i, 1);\n          setFooterItems(updatedFooterItems);\n        },\n        disabled: item.value.length === 1,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1209,\n          columnNumber: 57\n        }\n      }, __jsx(CancelIcon, {\n        style: {\n          color: item.value.length === 1 ? 'grey' : 'red'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1219,\n          columnNumber: 61\n        }\n      }))));\n    })) : null;\n  }), __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"flex-start\",\n    alignItems: \"flex-start\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1229,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: classes.actionButtons,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1230,\n      columnNumber: 29\n    }\n  }, activeColumnStep !== 0 && __jsx(Button, {\n    onClick: handleBackColumn,\n    variant: \"contained\",\n    size: \"small\",\n    \"aria-label\": \"add\",\n    className: classes.actionButton,\n    style: {\n      marginRight: 8\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1233,\n      columnNumber: 37\n    }\n  }, \"BACK\"), activeColumnStep !== columnSteps.length - 1 && __jsx(Button, {\n    onClick: handleNextColumn,\n    variant: \"contained\",\n    size: \"small\",\n    color: \"primary\",\n    \"aria-label\": \"add\",\n    className: classes.actionButton,\n    style: {\n      marginRight: 24\n    } // disabled={handleNextDisable() ? true : false}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1245,\n      columnNumber: 84\n    }\n  }, \"NEXT\"))))));\n};\n\n_s3(EditFooter, \"l84Z47Mdb4HzM/PfA5oTwl28rNc=\", false, function () {\n  return [useStyles, useRouter];\n});\n\n_c = EditFooter;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    state: state.formReducer.pageBuilder\n  };\n};\n\nexport default connect(mapStateToProps)(EditFooter);\n\nvar _c;\n\n$RefreshReg$(_c, \"EditFooter\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/components/website/footer/EditFooter.js"],"names":["React","useState","useEffect","useContext","TextField","Button","Container","Grid","FormControl","RadioGroup","FormControlLabel","Radio","InputLabel","Select","Stepper","Step","StepLabel","StepConnector","Paper","CreateIcon","ReceiptIcon","AddCircleIcon","IconButton","CancelIcon","ArrowUpwardIcon","ArrowDownwardIcon","ArrowBackIosIcon","ArrowForwardIosIcon","makeStyles","ReactDropzone","connect","COLORS","UPLOAD_SUCCESS","clsx","validator","WebCmsGlobal","withStyles","CloudUploadIcon","Upload","ViewList","useRouter","toast","OREST_ENDPOINT","useStyles","theme","root","margin","spacing","width","disabledDiv","pointerEvents","opacity","actionButtons","display","justifyContent","marginTop","marginBottom","actionButton","marginLeft","borderRadius","disabledEvent","icon","cursor","height","imagePreview","backgroundSize","backgroundRepeat","backgroundPosition","columnCard","overflow","border","secondary","iconBtn","outline","useColorStepIconStyle","backgroundColor","zIndex","color","alignItems","iconSize","active","boxShadow","completed","primary","ColorlibConnector","alternativeLabel","top","left","right","background","line","getRowStepsIcons","itemCount","isActive","isCompleted","step","icon_classes","icons","getColumnStepsIcons","EditFooter","props","state","onEditFooter","classes","website","footer","items","length","rowNumber","setRowNumber","activeRowStep","setActiveRowStep","activeColumnStep","setActiveColumnStep","rowSteps","setRowSteps","columnSteps","setColumnSteps","footerItems","setFooterItems","otherLangFooterItems","setOtherLangFooterItems","colNumber","setColNumber","webPages","setWebPages","GENERAL_SETTINGS","token","router","companyId","query","companyID","authToken","Object","keys","langsFile","langCode","apiUrl","OREST_URL","endpoint","RAFILE","params","hotelrefno","Number","then","res","status","data","updatedWebPages","pages","map","page","webPage","find","x","gid","push","updatedRowsSteps","i","updatedFooterItems","id","alignment","value","type","updatedColSteps","defaultLang","tpl","handleNextRow","previousStep","handleBackRow","handleNextColumn","handleBackColumn","label","index","e","parseInt","target","min","max","minWidth","item","val","backgroundImage","STATIC_URL","altLogoUrl","link","getRootProps","getInputProps","image","code","splice","tmp","title","isURL","masterid","hotelMid","Math","floor","random","orsactive","files","url","replace","success","position","POSITION","TOP_RIGHT","isEmail","isMobilePhone","marginRight","mapStateToProps","formReducer","pageBuilder"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext} from 'react';\nimport {TextField, Button, Container, Grid, FormControl, RadioGroup,\n    FormControlLabel, Radio, InputLabel, Select, Stepper, Step, StepLabel, StepConnector, Paper} from '@material-ui/core';\nimport CreateIcon from '@material-ui/icons/Create';\nimport ReceiptIcon from '@material-ui/icons/Receipt';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport {makeStyles} from '@material-ui/core/styles';\nimport ReactDropzone from 'react-dropzone'\n\nimport { connect } from 'react-redux';\nimport {COLORS, UPLOAD_SUCCESS} from \"../../../constants\";\nimport clsx from \"clsx\";\nimport validator from \"validator\";\nimport WebCmsGlobal from \"components/webcms-global\"\nimport { withStyles } from '@material-ui/core/styles'\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\nimport {Upload, ViewList} from \"@webcms/orest\";\nimport {useRouter} from \"next/router\";\nimport {toast} from \"react-toastify\";\nimport {OREST_ENDPOINT} from \"../../../../../../model/orest/constants\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n            width: 200,\n        },\n        disabledDiv: {\n            pointerEvents: \"none\",\n            opacity: 0.5\n        }\n    },\n    actionButtons: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2)\n    },\n    actionButton: {\n        marginLeft: theme.spacing(1),\n        borderRadius: 20,\n    },\n    disabledEvent: {\n        pointerEvents: \"none\",\n        opacity: 0.5\n    },\n    icon: {\n        cursor: 'pointer',\n        width: '100%',\n        height: '100%',\n        opacity: 0.3,\n    },\n    imagePreview: {\n        backgroundSize: 'contain',\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: \"center\",\n        height: 200,\n        width: '100%',\n        cursor: 'pointer',\n    },\n    columnCard: {\n        height: 400,\n        overflow: 'auto',\n        border: `3px solid ${COLORS.secondary}`\n    },\n    iconBtn: {\n        '*:focus': {\n            outline: 'none'\n        }\n    },\n\n}));\n\nconst useColorStepIconStyle = makeStyles(() => ({\n    root: {\n        backgroundColor: '#ccc',\n        zIndex: 1,\n        color: '#fff',\n        width: 50,\n        height: 50,\n        display: 'flex',\n        borderRadius: '50%',\n        justifyContent: 'center',\n        alignItems: 'center',\n        '& img': {\n            width: 35,\n        },\n    },\n    iconSize: {\n        height: 30,\n        width: 30,\n    },\n    active: {\n        backgroundColor: COLORS?.secondary,\n        boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)',\n    },\n    completed: {\n        backgroundColor: COLORS?.primary,\n        color: '#fff',\n    },\n}));\n\nconst ColorlibConnector = withStyles({\n    alternativeLabel: {\n        top: 30,\n        left: 'calc(-50% + 10px)',\n        right: 'calc(50% + 10px)',\n    },\n    active: {\n        '& $line': {\n            background: 'transparent linear-gradient(270deg, #269DD4 0%, #0F4571 100%) 0% 0% no-repeat padding-box',\n        },\n    },\n    completed: {\n        '& $line': {\n            backgroundColor: COLORS?.primary,\n        },\n    },\n    line: {\n        height: 4,\n        border: 0,\n        backgroundColor: '#eaeaf0',\n        borderRadius: 1,\n    },\n})(StepConnector)\n\nconst getRowStepsIcons = (itemCount, isActive, isCompleted, step) => {\n    const icon_classes = useColorStepIconStyle()\n    let icons = {}\n    switch (itemCount) {\n        case 1:\n            icons = {\n                0: <ReceiptIcon className={icon_classes.iconSize} />,\n                1: <CreateIcon className={icon_classes.iconSize} />,\n            }\n            break\n        case 2:\n            icons = {\n                0: <ReceiptIcon className={icon_classes.iconSize} />,\n                1: <CreateIcon className={icon_classes.iconSize} />,\n                2: <CreateIcon className={icon_classes.iconSize} />,\n            }\n            break\n        case 3:\n            icons = {\n                0: <ReceiptIcon className={icon_classes.iconSize} />,\n                1: <CreateIcon className={icon_classes.iconSize} />,\n                2: <CreateIcon className={icon_classes.iconSize} />,\n                3: <CreateIcon className={icon_classes.iconSize} />,\n            }\n            break\n        default:\n            icons = {\n                0: <ReceiptIcon className={icon_classes.iconSize} />,\n                1: <CreateIcon className={icon_classes.iconSize} />,\n                2: <CreateIcon className={icon_classes.iconSize} />,\n                3: <CreateIcon className={icon_classes.iconSize} />,\n            }\n            break\n    }\n\n    return (\n        <div\n            className={clsx(icon_classes.root, {\n                [icon_classes.active]: isActive,\n                [icon_classes.completed]: isCompleted,\n            })}\n        >\n            {icons[step]}\n        </div>\n    )\n}\n\nconst getColumnStepsIcons = (itemCount, isActive, isCompleted, step) =>  {\n    const icon_classes = useColorStepIconStyle()\n    let icons = {}\n    switch (itemCount) {\n        case 1:\n            icons = {\n                0: <ReceiptIcon className={icon_classes.iconSize} />,\n                1: <CreateIcon className={icon_classes.iconSize} />,\n            }\n            break\n        case 2:\n            icons = {\n                0: <ReceiptIcon className={icon_classes.iconSize} />,\n                1: <CreateIcon className={icon_classes.iconSize} />,\n                2: <CreateIcon className={icon_classes.iconSize} />,\n            }\n            break\n        case 3:\n            icons = {\n                0: <ReceiptIcon className={icon_classes.iconSize} />,\n                1: <CreateIcon className={icon_classes.iconSize} />,\n                2: <CreateIcon className={icon_classes.iconSize} />,\n                3: <CreateIcon className={icon_classes.iconSize} />,\n            }\n            break\n        case 4:\n            icons = {\n                0: <ReceiptIcon className={icon_classes.iconSize} />,\n                1: <CreateIcon className={icon_classes.iconSize} />,\n                2: <CreateIcon className={icon_classes.iconSize} />,\n                3: <CreateIcon className={icon_classes.iconSize} />,\n                4: <CreateIcon className={icon_classes.iconSize} />,\n            }\n            break\n        case 5:\n            icons = {\n                0: <ReceiptIcon className={icon_classes.iconSize} />,\n                1: <CreateIcon className={icon_classes.iconSize} />,\n                2: <CreateIcon className={icon_classes.iconSize} />,\n                3: <CreateIcon className={icon_classes.iconSize} />,\n                4: <CreateIcon className={icon_classes.iconSize} />,\n                5: <CreateIcon className={icon_classes.iconSize} />,\n            }\n            break\n        default:\n            icons = {\n                0: <ReceiptIcon className={icon_classes.iconSize} />,\n                1: <CreateIcon className={icon_classes.iconSize} />,\n                2: <CreateIcon className={icon_classes.iconSize} />,\n                3: <CreateIcon className={icon_classes.iconSize} />,\n                4: <CreateIcon className={icon_classes.iconSize} />,\n                5: <CreateIcon className={icon_classes.iconSize} />,\n            }\n            break\n    }\n\n    return (\n        <div\n            className={clsx(icon_classes.root, {\n                [icon_classes.active]: isActive,\n                [icon_classes.completed]: isCompleted,\n            })}\n        >\n            {icons[step]}\n        </div>\n    )\n}\n\nconst EditFooter = (props) => {\n\n    const { state, onEditFooter } = props;\n    const classes = useStyles();\n    const [rowNumber, setRowNumber] = useState(state.website.footer.items.length);\n    const [activeRowStep, setActiveRowStep] = useState(0);\n    const [activeColumnStep, setActiveColumnStep] = useState(0);\n    const [rowSteps, setRowSteps] = useState([]);\n    const [columnSteps, setColumnSteps] = useState([]);\n    const [footerItems, setFooterItems] = useState(state.website.footer.items);\n    const [otherLangFooterItems, setOtherLangFooterItems] = useState([]);\n    const [colNumber, setColNumber] = useState(0);\n    const [webPages, setWebPages] = useState([]);\n\n    const { GENERAL_SETTINGS, token } = useContext(WebCmsGlobal);\n    const router = useRouter();\n    const companyId = router.query.companyID;\n    const authToken = token || router.query.authToken;\n\n    useEffect(() => {\n        //set header items for other languages\n        if (Object.keys(state.langsFile).length > 0 &&\n            state.langsFile.footer &&\n            state.langsFile.footer[state.langCode]) {\n            setOtherLangFooterItems([...state.langsFile.footer[state.langCode].items]);\n        }\n        //getting web page from rafile\n        ViewList({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.RAFILE,\n            token: authToken,\n            params: {\n                hotelrefno: Number(companyId),\n                query: `filetype:WEBPAGE`,\n            }\n        }).then(res => {\n            if (res.status === 200 && res.data.data) {\n                let updatedWebPages = [];\n                if (state.website.pages.length > 0) {\n                    state.website.pages.map(page => {\n                        const webPage = res.data.data.find(x => x.gid === page.gid);\n                        if (webPage) {\n                            updatedWebPages.push(webPage);\n                        }\n                    });\n                }\n                setWebPages(updatedWebPages);\n            }\n        })\n    }, []);\n\n    useEffect(() => {\n        let updatedRowsSteps = [];\n        for (let i = 0; i <= rowNumber; i ++) {\n            if (i === 0) {\n                updatedRowsSteps.push('No of Rows');\n            } else {\n                updatedRowsSteps.push('Row ' + i);\n            }\n        }\n        setRowSteps(updatedRowsSteps);\n        if (rowNumber < footerItems.length) {\n            const updatedFooterItems = [...footerItems];\n            updatedFooterItems.length = rowNumber;\n            setFooterItems(updatedFooterItems);\n        }\n        if (rowNumber > footerItems.length) {\n            for (let i = 0; i < rowNumber; i++) {\n                if (!footerItems[i]) {\n                    footerItems.push({\n                        id: `row-${footerItems.length + 1}`,\n                        items: [{\n                            id: 'item-1',\n                            alignment: 'left',\n                            value: [{\n                                id: 'value-1',\n                                type: 'paragraph',\n                                value: ''\n                            }]\n                        }]\n                    })\n                }\n            }\n        }\n\n    }, [rowNumber]);\n\n    useEffect(() => {\n        let updatedColSteps = [];\n        for (let i = 0; i <= colNumber; i ++) {\n            if (i === 0) {\n                updatedColSteps.push('No of Columns');\n            } else {\n                updatedColSteps.push('Column ' + i);\n            }\n        }\n        setColumnSteps(updatedColSteps);\n        if (activeRowStep !== 0) {\n            if (colNumber < footerItems[activeRowStep - 1].items.length) {\n                const updatedFooterItems = [...footerItems];\n                updatedFooterItems[activeRowStep - 1].items.length = colNumber;\n                setFooterItems(updatedFooterItems);\n            }\n            if (colNumber > footerItems[activeRowStep - 1].items.length) {\n                for (let i = 0; i < colNumber; i++) {\n                    if (!footerItems[activeRowStep - 1].items[i]) {\n                        footerItems[activeRowStep - 1].items.push({\n                            id: 'item-' + i+1,\n                            alignment: 'left',\n                            value: [\n                                {\n                                    id: 'value-1',\n                                    type: 'paragraph',\n                                    value: ''\n                                }\n                            ]\n                        });\n                    }\n                }\n            }\n        }\n\n    }, [colNumber]);\n\n    useEffect(() => {\n        if (activeRowStep === rowSteps.length - 1) {\n            if (state.langCode === state.defaultLang) {\n                onEditFooter({\n                    tpl: state.website.footer.tpl,\n                    items: footerItems\n                });\n            } else {\n                onEditFooter({\n                    items: otherLangFooterItems\n                });\n            }\n        }\n    }, [activeRowStep, footerItems])\n\n    const handleNextRow = () => {\n        setActiveRowStep(previousStep => previousStep + 1);\n        setActiveColumnStep(0);\n        setColNumber(state.website.footer.items[activeRowStep].items.length);\n    }\n\n    const handleBackRow = () => {\n        setActiveRowStep(previousStep => previousStep - 1);\n        activeRowStep > 1 && setColNumber(state.website.footer.items[activeRowStep - 2].items.length);\n    }\n\n    const handleNextColumn = () => {\n        setActiveColumnStep(previousStep => previousStep + 1);\n    }\n\n    const handleBackColumn = () => {\n        setActiveColumnStep(previousStep => previousStep - 1);\n    }\n\n    return (\n        <React.Fragment>\n            <div style={{display: 'flex', alignItems: 'center'}}>\n                <IconButton\n                    aria-label=\"Back\"\n                    color=\"primary\"\n                    disabled={activeRowStep === 0}\n                    onClick={handleBackRow}\n                >\n                    <ArrowBackIosIcon  />\n                </IconButton>\n                <Stepper style={{width: '100%'}} activeStep={activeRowStep} connector={<ColorlibConnector />}>\n                    {\n                        rowSteps.map((label, index) => {\n                            return (\n                                <Step key={label} >\n                                    <StepLabel\n                                        color=\"secondary\"\n                                        StepIconComponent={() =>\n                                            getRowStepsIcons(rowSteps,\n                                                activeRowStep === index, activeRowStep > index,\n                                                index\n                                            )\n                                        }\n                                    >\n                                        {label}\n                                    </StepLabel>\n                                </Step>\n                            )\n                        })\n                    }\n                </Stepper>\n                <IconButton\n                    aria-label=\"Back\"\n                    color=\"primary\"\n                    disabled={activeRowStep === rowSteps.length - 1 }\n                    onClick={handleNextRow}\n                >\n                    <ArrowForwardIosIcon  />\n                </IconButton>\n            </div>\n            {\n                activeRowStep === 0 &&\n                <Grid container={true}>\n                    <TextField\n                        label={'Number of Rows'}\n                        placeholder={'Enter Number of rows here ..'}\n                        value={rowNumber}\n                        onChange={(e) => setRowNumber(parseInt(e.target.value))}\n                        variant={\"outlined\"}\n                        type=\"number\"\n                        inputProps={{min: \"1\", max: \"3\", step: \"1\"}}\n                        style={{minWidth: 200, marginLeft: 32}}\n                    />\n                </Grid>\n            }\n            {\n                activeRowStep !== 0 &&\n                <Container>\n                    <Paper className={classes.columnCard}>\n                        <Stepper activeStep={activeColumnStep} connector={<ColorlibConnector />}>\n                            {\n                                columnSteps.map((label, index) => {\n                                    return (\n                                        <Step key={label} >\n                                            <StepLabel\n                                                color=\"secondary\"\n                                                StepIconComponent={() =>\n                                                    getColumnStepsIcons(columnSteps,\n                                                        activeColumnStep === index, activeColumnStep > index,\n                                                        index\n                                                    )\n                                                }\n                                            >\n                                                {label}\n                                            </StepLabel>\n                                        </Step>\n                                    )\n                                })\n                            }\n                        </Stepper>\n                        {\n                            activeColumnStep === 0 &&\n                            <Grid container={true}>\n                                <TextField\n                                    label={'Number of Columns'}\n                                    value={colNumber}\n                                    onChange={(e) => setColNumber(parseInt(e.target.value))}\n                                    variant={\"outlined\"}\n                                    type=\"number\"\n                                    inputProps={{min: \"1\", max: \"5\", step: \"1\"}}\n                                    style={{minWidth: 200, marginLeft: 32}}\n                                />\n                            </Grid>\n                        }\n                        {\n                            activeColumnStep > 0 && state.langCode !== state.defaultLang &&\n                            otherLangFooterItems.length > 0 &&\n                            otherLangFooterItems[activeRowStep - 1].items.map((item, index) => {\n                                return (activeColumnStep - 1 === index) ?\n                                    <Container key={index}>\n                                        <Grid container={true}>\n                                            <Grid item={true} xs={4}>\n                                                <Button\n                                                    onClick={() => {\n                                                        const updatedFooterItems = [...footerItems];\n                                                        updatedFooterItems[activeRowStep - 1].items[index].value.push({\n                                                            id: `value-${index + 1}`,\n                                                            type: 'paragraph',\n                                                            value: '',\n                                                        });\n                                                        setFooterItems(updatedFooterItems);\n                                                    }}\n                                                    variant=\"contained\"\n                                                    size=\"small\"\n                                                    color=\"primary\"\n                                                    aria-label=\"add\"\n                                                    className={classes.actionButton}\n                                                    disabled\n                                                >\n                                                    <AddCircleIcon /> ADD\n                                                </Button>\n                                            </Grid>\n                                            <Grid item xs={8}>\n                                                <FormControl\n                                                    component=\"fieldset\"\n                                                    style={{float: \"right\"}}\n                                                    disabled\n                                                >\n                                                    <RadioGroup\n                                                        aria-label=\"footeritem\"\n                                                        row\n                                                        name=\"footer-item\"\n                                                        value={footerItems[activeRowStep - 1].items[index].alignment}\n                                                    >\n                                                        <FormControlLabel\n                                                            value={'left'}\n                                                            control={<Radio color=\"primary\"/>}\n                                                            label=\"Align Left\"\n                                                            labelPlacement=\"start\"\n                                                        />\n                                                        <FormControlLabel\n                                                            value={'center'}\n                                                            control={<Radio color=\"primary\"/>}\n                                                            label=\"Alight Center\"\n                                                            labelPlacement=\"start\"\n                                                        />\n                                                        <FormControlLabel\n                                                            value={'right'}\n                                                            control={<Radio color=\"primary\"/>}\n                                                            label=\"Alight Right\"\n                                                            labelPlacement=\"start\"\n                                                        />\n                                                    </RadioGroup>\n                                                </FormControl>\n                                            </Grid>\n                                        </Grid>\n                                        {\n                                            item.value.length > 0 && item.value.map((val, i) => {\n                                                return(\n                                                    <Grid container={true} key={i} style={{marginTop: 8}}>\n                                                        <Grid item xs={3}>\n                                                            <IconButton\n                                                                aria-label=\"Delete item\"\n                                                                color=\"primary\"\n                                                                disabled\n                                                            >\n                                                                <ArrowDownwardIcon />\n                                                            </IconButton>\n                                                            <IconButton\n                                                                aria-label=\"Delete item\"\n                                                                color=\"primary\"\n                                                                disabled\n                                                            >\n                                                                <ArrowUpwardIcon />\n                                                            </IconButton>\n                                                            <FormControl disabled={true} >\n                                                                <InputLabel htmlFor=\"age-native-simple\">Sub Item</InputLabel>\n                                                                <Select\n                                                                    native\n                                                                    name='type'\n                                                                    variant={'outlined'}\n                                                                    value={footerItems[activeRowStep - 1].items[index].value[i].type}\n                                                                >\n                                                                    <option style={{ display: 'none' }} value=''></option>\n                                                                    <option value='paragraph'>Paragraph</option>\n                                                                    <option value='logo'>Logo</option>\n                                                                    <option value='heading'>Heading</option>\n                                                                    <option value='link'>Link</option>\n                                                                    <option value='internal-link'>Internal</option>\n                                                                    <option value='social-link'>Social Link</option>\n                                                                    <option value='button'>Button</option>\n                                                                    <option value='address'>Address</option>\n                                                                    <option value='phone'>Phone </option>\n                                                                    <option value='email'>Email</option>\n                                                                    <option value='image'>Image</option>\n                                                                </Select>\n                                                            </FormControl>\n                                                        </Grid>\n                                                        <Grid item xs={8}>\n                                                            {\n                                                                footerItems[activeRowStep - 1].items[index].value[i].type === 'logo' &&\n                                                                <Paper style={{border: `2px solid ${COLORS?.secondary}`, opacity: 0.5}}>\n                                                                    <Grid container={true} justify={'center'}>\n                                                                        <Grid item={true}>\n                                                                            <div\n                                                                                style={{\n                                                                                    backgroundImage: `url(${\n                                                                                        GENERAL_SETTINGS.STATIC_URL + state.altLogoUrl\n                                                                                    })`,\n                                                                                    backgroundSize: 'contain',\n                                                                                    backgroundRepeat: 'no-repeat',\n                                                                                    backgroundPosition: \"center\",\n                                                                                    height: 200,\n                                                                                    width: 200,\n                                                                                    marginTop: 16\n                                                                                }}\n                                                                            ></div>\n                                                                        </Grid>\n                                                                    </Grid>\n                                                                </Paper>\n                                                            }\n                                                            {\n                                                                footerItems[activeRowStep - 1].items[index].value[i].type === 'image' &&\n                                                                <Grid container justify={'center'} spacing={1}>\n                                                                    <Grid item xs={6}>\n                                                                        <TextField\n                                                                            label={'Link'}\n                                                                            variant=\"outlined\"\n                                                                            fullWidth\n                                                                            value={footerItems[activeRowStep - 1].items[index].value[i].value.link}\n                                                                            disabled\n                                                                        />\n                                                                    </Grid>\n                                                                    <Grid item xs={6}>\n                                                                        <Paper style={{border: `2px solid ${COLORS?.secondary}`}} className={classes.disabledEvent}>\n                                                                            <ReactDropzone\n                                                                                accept={'image/png,image/jpg,image/jpeg'}\n                                                                                acceptedFile\n                                                                            >\n                                                                                {({ getRootProps, getInputProps }) => (\n                                                                                    <section>\n                                                                                        <div {...getRootProps()} style={{ width: '100%', height: 200 }}>\n                                                                                            <input {...getInputProps()} />\n                                                                                            {\n                                                                                                val.value ? <div\n                                                                                                    style={{\n                                                                                                        backgroundImage: `url(${\n                                                                                                            GENERAL_SETTINGS.STATIC_URL + val.value?.image\n                                                                                                        })`,\n                                                                                                    }}\n                                                                                                    className={classes.imagePreview}\n                                                                                                ></div> : <CloudUploadIcon className={classes.icon} />\n                                                                                            }\n                                                                                        </div>\n                                                                                    </section>\n                                                                                )}\n                                                                            </ReactDropzone>\n                                                                        </Paper>\n                                                                    </Grid>\n                                                                </Grid>\n                                                            }\n                                                            {\n                                                                (footerItems[activeRowStep - 1].items[index].value[i].type === 'social-link' ||\n                                                                    footerItems[activeRowStep - 1].items[index].value[i].type === 'link' ||\n                                                                    footerItems[activeRowStep - 1].items[index].value[i].type === 'button') &&\n                                                                <Grid container={true}\n                                                                      justify={'flex-start'}\n                                                                      spacing={3}\n                                                                >\n                                                                    <Grid item xs={6}>\n                                                                        <TextField\n                                                                            label={'Title'}\n                                                                            variant=\"outlined\"\n                                                                            fullWidth\n                                                                            value={val.value}\n                                                                            onChange={(e) => {\n                                                                                const updatedFooterItems = [...otherLangFooterItems];\n                                                                                updatedFooterItems[activeRowStep - 1].items[index].value[i].value = e.target.value;\n                                                                                setOtherLangFooterItems(updatedFooterItems);\n                                                                            }}\n                                                                        />\n                                                                    </Grid>\n                                                                    <Grid item xs={6}>\n                                                                        <TextField\n                                                                            label={'Link'}\n                                                                            variant=\"outlined\"\n                                                                            fullWidth\n                                                                            value={footerItems[activeRowStep - 1].items[index].value[i].value.value}\n                                                                            disabled={true}\n                                                                        />\n                                                                    </Grid>\n                                                                </Grid>\n                                                            }\n                                                            {\n                                                                footerItems[activeRowStep - 1].items[index].value[i].type === 'internal-link' &&\n                                                                <Grid container={true} justify={'flex-start'} spacing={3}>\n                                                                    <Grid item xs={6}>\n                                                                        <TextField\n                                                                            label={'Title'}\n                                                                            variant=\"outlined\"\n                                                                            fullWidth\n                                                                            value={val.value}\n                                                                            onChange={(e) => {\n                                                                                const updatedFooterItems = [...otherLangFooterItems];\n                                                                                updatedFooterItems[activeRowStep - 1].items[index].value[i].value = e.target.value;\n                                                                                setOtherLangFooterItems(updatedFooterItems);\n                                                                            }}\n                                                                        />\n                                                                    </Grid>\n                                                                    <Grid item xs={6}>\n                                                                        <FormControl fullWidth disabled={true}>\n                                                                            <InputLabel shrink={!!val.value.value} style={{marginLeft: 16}}>\n                                                                                Web Page\n                                                                            </InputLabel>\n                                                                            <Select\n                                                                                native\n                                                                                value={footerItems[activeRowStep - 1].items[index].value[i].value.value}\n                                                                                variant={\"outlined\"}\n                                                                                onChange={(e) => {\n                                                                                    const updatedFooterItems = [...footerItems];\n                                                                                    updatedFooterItems[activeRowStep - 1].items[index].value[i].value['value'] = e.target.value;\n                                                                                    setFooterItems(updatedFooterItems);\n                                                                                }}>\n                                                                                <option style={{ display: 'none' }} value=''></option>\n                                                                                {\n                                                                                    webPages.length > 0 && webPages.map((page, index) => {\n                                                                                        return (\n                                                                                            <option value={page.gid} key={index}> { page.code } </option>\n                                                                                        )\n                                                                                    })\n                                                                                }\n                                                                            </Select>\n                                                                        </FormControl>\n                                                                    </Grid>\n                                                                </Grid>\n                                                            }\n                                                            {\n                                                                footerItems[activeRowStep - 1].items[index].value[i].type === 'address' &&\n                                                                <Grid container={true}\n                                                                      justify={'flex-start'}\n                                                                      spacing={3}\n                                                                >\n                                                                    <Grid item xs={6}>\n                                                                        <TextField\n                                                                            label={'Title'}\n                                                                            variant=\"outlined\"\n                                                                            fullWidth\n                                                                            value={val.value}\n                                                                            disabled={true}\n                                                                        />\n                                                                    </Grid>\n                                                                    <Grid item xs={6}>\n                                                                        <TextField\n                                                                            label={'Link'}\n                                                                            variant=\"outlined\"\n                                                                            fullWidth\n                                                                            value={footerItems[activeRowStep - 1].items[index].value[i].value.value}\n                                                                            disabled={true}\n                                                                        />\n                                                                    </Grid>\n                                                                </Grid>\n                                                            }\n                                                            {\n                                                                (footerItems[activeRowStep - 1].items[index].value[i].type === 'paragraph' ||\n                                                                    footerItems[activeRowStep - 1].items[index].value[i].type === 'heading') &&\n                                                                <Grid container={true} justify={'flex-start'}>\n                                                                    <TextField\n                                                                        label={'Value'}\n                                                                        variant=\"outlined\"\n                                                                        fullWidth\n                                                                        value={val.value}\n                                                                        onChange={(e) => {\n                                                                            const updatedFooterItems = [...otherLangFooterItems];\n                                                                            updatedFooterItems[activeRowStep - 1].items[index].value[i].value = e.target.value;\n                                                                            setOtherLangFooterItems(updatedFooterItems);\n                                                                        }}\n                                                                    />\n                                                                </Grid>\n                                                            }\n                                                            {\n                                                                footerItems[activeRowStep - 1].items[index].value[i].type === 'email' && <TextField\n                                                                    label={'Value'}\n                                                                    variant=\"outlined\"\n                                                                    fullWidth\n                                                                    value={val.value}\n                                                                    disabled={true}\n                                                                />\n                                                            }\n                                                            {\n                                                                footerItems[activeRowStep - 1].items[index].value[i].type === 'phone' && <TextField\n                                                                    label={'Value'}\n                                                                    variant=\"outlined\"\n                                                                    fullWidth\n                                                                    value={val.value}\n                                                                    disabled={true}\n                                                                />\n                                                            }\n                                                        </Grid>\n                                                        <Grid item xs={1}>\n                                                            <IconButton\n                                                                aria-label=\"Delete item\"\n                                                                color=\"primary\"\n                                                                onClick={() => {\n                                                                    const updatedFooterItems = [...footerItems];\n                                                                    updatedFooterItems[activeRowStep - 1].items[index].value.splice(i, 1);\n                                                                    setFooterItems(updatedFooterItems);\n                                                                }}\n                                                                disabled={item.value.length === 1}\n                                                                className={state.langCode !== state.defaultLang ? classes.disabledEvent : ''}\n                                                            >\n                                                                <CancelIcon style={{color: item.value.length === 1 ? 'grey' : 'red'}} />\n                                                            </IconButton>\n                                                        </Grid>\n                                                    </Grid>\n                                                )\n                                            })\n                                        }\n                                    </Container> : null\n                            })\n                        }\n                        {\n                            activeColumnStep > 0 && state.langCode === state.defaultLang &&\n                            footerItems.length > 0 && footerItems[activeRowStep - 1].items.map((item, index) => {\n                                return (activeColumnStep - 1 === index) ? <Container key={index}>\n                                    <Grid container={true}>\n                                        <Grid item={true} xs={4}>\n                                            <Button\n                                                onClick={() => {\n                                                    const updatedFooterItems = [...footerItems];\n                                                    updatedFooterItems[activeRowStep - 1].items[index].value.push({\n                                                        id: `value-${index + 1}`,\n                                                        type: 'paragraph',\n                                                        value: '',\n                                                    });\n                                                    setFooterItems(updatedFooterItems);\n                                                }}\n                                                variant=\"contained\"\n                                                size=\"small\"\n                                                color=\"primary\"\n                                                aria-label=\"add\"\n                                                className={classes.actionButton}\n                                            >\n                                                <AddCircleIcon /> ADD\n                                            </Button>\n                                        </Grid>\n                                        <Grid item xs={8}>\n                                            <FormControl\n                                                component=\"fieldset\"\n                                                style={{float: \"right\"}}\n                                            >\n                                                <RadioGroup\n                                                    aria-label=\"footeritem\"\n                                                    row\n                                                    name=\"footer-item\"\n                                                    value={item.alignment}\n                                                    onChange={(e) => {\n                                                        const updatedFooterItems = [...footerItems];\n                                                        updatedFooterItems[activeRowStep - 1].items[index].alignment = e.target.value;\n                                                        setFooterItems(updatedFooterItems);\n                                                    }}\n                                                >\n                                                    <FormControlLabel\n                                                        value={'left'}\n                                                        control={<Radio color=\"primary\"/>}\n                                                        label=\"Align Left\"\n                                                        labelPlacement=\"start\"\n                                                    />\n                                                    <FormControlLabel\n                                                        value={'center'}\n                                                        control={<Radio color=\"primary\"/>}\n                                                        label=\"Alight Center\"\n                                                        labelPlacement=\"start\"\n                                                    />\n                                                    <FormControlLabel\n                                                        value={'right'}\n                                                        control={<Radio color=\"primary\"/>}\n                                                        label=\"Alight Right\"\n                                                        labelPlacement=\"start\"\n                                                    />\n                                                </RadioGroup>\n                                            </FormControl>\n                                        </Grid>\n                                    </Grid>\n                                    {\n                                        item.value.length > 0 && item.value.map((val, i) => {\n                                            return(\n                                                <Grid container={true} key={i} style={{marginTop: 8}}>\n                                                    <Grid item xs={3}>\n                                                        <IconButton\n                                                            aria-label=\"Delete item\"\n                                                            color=\"primary\"\n                                                            onClick={() => {\n                                                                const updatedFooterItems = [...footerItems];\n                                                                const tmp = updatedFooterItems[activeRowStep - 1].items[index].value[i+1]\n                                                                updatedFooterItems[activeRowStep - 1].items[index].value[i+1] = updatedFooterItems[activeRowStep - 1].items[index].value[i]\n                                                                updatedFooterItems[activeRowStep - 1].items[index].value[i] = tmp;\n                                                                setFooterItems(updatedFooterItems);\n                                                            }}\n                                                            disabled={item.value.length === 1 || i === item.value.length - 1}\n                                                            className={classes.iconBtn}\n                                                        >\n                                                            <ArrowDownwardIcon />\n                                                        </IconButton>\n                                                        <IconButton\n                                                            aria-label=\"Delete item\"\n                                                            color=\"primary\"\n                                                            onClick={() => {\n                                                                const updatedFooterItems = [...footerItems];\n                                                                const tmp = updatedFooterItems[activeRowStep - 1].items[index].value[i-1]\n                                                                updatedFooterItems[activeRowStep - 1].items[index].value[i-1] = updatedFooterItems[activeRowStep - 1].items[index].value[i]\n                                                                updatedFooterItems[activeRowStep - 1].items[index].value[i] = tmp;\n                                                                setFooterItems(updatedFooterItems);\n                                                            }}\n                                                            disabled={item.value.length === 1 || i === 0}\n                                                        >\n                                                            <ArrowUpwardIcon />\n                                                        </IconButton>\n                                                        <FormControl>\n                                                            <InputLabel htmlFor=\"age-native-simple\">Sub Item</InputLabel>\n                                                            <Select\n                                                                native\n                                                                name='type'\n                                                                variant={'outlined'}\n                                                                value={val.type}\n                                                                onChange={(e) => {\n                                                                    const updatedFooterItems = [...footerItems];\n                                                                    if (e.target.value === 'social-link' ||\n                                                                        e.target.value === 'link' ||\n                                                                        e.target.value === 'button' || e.target.value === 'address'\n                                                                        || e.target.value === 'internal-link') {\n                                                                        updatedFooterItems[activeRowStep - 1].items[index].value[i] = {\n                                                                            id: val.id,\n                                                                            type: e.target.value,\n                                                                            value: {\n                                                                                title: '',\n                                                                                value: ''\n                                                                            }\n                                                                        }\n                                                                    }\n                                                                    if (e.target.value === 'paragraph' ||\n                                                                        e.target.value === 'heading' ||\n                                                                        e.target.value === 'phone' || e.target.value === 'email') {\n                                                                        updatedFooterItems[activeRowStep - 1].items[index].value[i] = {\n                                                                            id: val.id,\n                                                                            type: e.target.value,\n                                                                            value: ''\n                                                                        }\n                                                                    }\n                                                                    if (e.target.value === 'logo') {\n                                                                        updatedFooterItems[activeRowStep - 1].items[index].value[i] = {\n                                                                            id: val.id,\n                                                                            type: e.target.value,\n                                                                            value: state.altLogoUrl\n                                                                        }\n                                                                    }\n                                                                    if (e.target.value === 'image') {\n                                                                        updatedFooterItems[activeRowStep - 1].items[index].value[i] = {\n                                                                            id: val.id,\n                                                                            type: e.target.value,\n                                                                            value: {\n                                                                                link: '',\n                                                                                image: ''\n                                                                            }\n                                                                        }\n                                                                    }\n                                                                    setFooterItems(updatedFooterItems);\n                                                                }}\n                                                            >\n                                                                <option style={{ display: 'none' }} value=''></option>\n                                                                <option value='paragraph'>Paragraph</option>\n                                                                <option value='logo'>Logo</option>\n                                                                <option value='heading'>Heading</option>\n                                                                <option value='link'>Link</option>\n                                                                <option value='internal-link'>Internal Link</option>\n                                                                <option value='social-link'>Social Link</option>\n                                                                <option value='button'>Button</option>\n                                                                <option value='address'>Address</option>\n                                                                <option value='phone'>Phone </option>\n                                                                <option value='email'>Email</option>\n                                                                <option value='image'>Image</option>\n                                                            </Select>\n                                                        </FormControl>\n                                                    </Grid>\n                                                    <Grid item xs={8}>\n                                                        {\n                                                            val.type === 'logo' &&\n                                                            <Paper style={{border: `2px solid ${COLORS?.secondary}`}}>\n                                                                <Grid container={true} justify={'center'}>\n                                                                    <Grid item={true}>\n                                                                        <div\n                                                                            style={{\n                                                                                backgroundImage: `url(${\n                                                                                    GENERAL_SETTINGS.STATIC_URL + state.altLogoUrl\n                                                                                })`,\n                                                                                backgroundSize: 'contain',\n                                                                                backgroundRepeat: 'no-repeat',\n                                                                                backgroundPosition: \"center\",\n                                                                                height: 200,\n                                                                                width: 200,\n                                                                                marginTop: 16\n                                                                            }}\n                                                                        ></div>\n                                                                    </Grid>\n                                                                </Grid>\n                                                            </Paper>\n                                                        }\n                                                        {\n                                                            val.type === 'image' &&\n                                                            <Grid container justify={'center'} spacing={1} >\n                                                                <Grid item xs={6}>\n                                                                    <TextField\n                                                                        label={'Link'}\n                                                                        variant=\"outlined\"\n                                                                        fullWidth\n                                                                        value={val.value.link}\n                                                                        error={!!(!validator.isURL(val.value.link) && val.value.link)}\n                                                                        onChange={(e) => {\n                                                                            const updatedFooterItems = [...footerItems];\n                                                                            updatedFooterItems[activeRowStep - 1].items[index].value[i].value['link'] = e.target.value;\n                                                                            setFooterItems(updatedFooterItems);\n                                                                        }}\n                                                                    />\n                                                                </Grid>\n                                                                <Grid item xs={6}>\n                                                                    <Paper\n                                                                        style={{border: `2px solid ${COLORS?.secondary}`}}>\n                                                                        <ReactDropzone\n                                                                            onDrop={(e) => {\n                                                                                Upload({\n                                                                                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                                                                                    token: authToken,\n                                                                                    params: {\n                                                                                        masterid: state.hotelMid,\n                                                                                        code: `FOOTER-IMAGE-${Math.floor(Math.random() * (1000 - 100) + 100) / 100}`,\n                                                                                        orsactive: true,\n                                                                                        hotelrefno: companyId,\n                                                                                    },\n                                                                                    files: e,\n                                                                                }).then(res => {\n                                                                                    if (res.status === 200 && res.data && res.data.data) {\n                                                                                        let url = res.data.data.url.replace('/var/otello', '').replace('/public', '');\n                                                                                        const updatedFooterItems = [...footerItems];\n                                                                                        updatedFooterItems[activeRowStep - 1].items[index].value[i].value.image = url;\n                                                                                        setFooterItems(updatedFooterItems);\n                                                                                        toast.success(UPLOAD_SUCCESS, {\n                                                                                            position: toast.POSITION.TOP_RIGHT,\n                                                                                        })\n                                                                                    }\n                                                                                })\n                                                                            }}\n                                                                            accept={'image/png,image/jpg,image/jpeg'}\n                                                                            acceptedFile\n                                                                        >\n                                                                            {({getRootProps, getInputProps}) => (\n                                                                                <section>\n                                                                                    <div {...getRootProps()} style={{\n                                                                                        width: '100%',\n                                                                                        height: 200,\n                                                                                    }}>\n                                                                                        <input {...getInputProps()} />\n                                                                                        {\n                                                                                            val.value.image ? <div\n                                                                                                style={{\n                                                                                                    backgroundImage: `url(${\n                                                                                                        GENERAL_SETTINGS.STATIC_URL + val.value.image\n                                                                                                    })`,\n                                                                                                }}\n                                                                                                className={classes.imagePreview}\n                                                                                            ></div> : <CloudUploadIcon className={classes.icon}/>\n                                                                                        }\n                                                                                    </div>\n                                                                                </section>\n                                                                            )}\n                                                                        </ReactDropzone>\n                                                                    </Paper>\n                                                                </Grid>\n                                                            </Grid>\n                                                        }\n                                                        {\n                                                            (val.type === 'social-link' || val.type === 'link' ||\n                                                                val.type === 'button' || val.type === 'address') && <Grid container={true}\n                                                                                                                          justify={'flex-start'}\n                                                                                                                          spacing={3}\n                                                            >\n                                                                <Grid item xs={6}>\n                                                                    <TextField\n                                                                        label={'Title'}\n                                                                        variant=\"outlined\"\n                                                                        fullWidth\n                                                                        value={val.value.title}\n                                                                        onChange={(e) => {\n                                                                            const updatedFooterItems = [...footerItems];\n                                                                            updatedFooterItems[activeRowStep - 1].items[index].value[i].value['title'] = e.target.value;\n                                                                            setFooterItems(updatedFooterItems);\n                                                                        }}\n                                                                    />\n                                                                </Grid>\n                                                                <Grid item xs={6}>\n                                                                    <TextField\n                                                                        label={'Link'}\n                                                                        variant=\"outlined\"\n                                                                        fullWidth\n                                                                        value={val.value.value}\n                                                                        error={(!validator.isURL(val.value.value) && val.value.value) ? true : false}\n                                                                        onChange={(e) => {\n                                                                            const updatedFooterItems = [...footerItems];\n                                                                            updatedFooterItems[activeRowStep - 1].items[index].value[i].value['value'] = e.target.value;\n                                                                            setFooterItems(updatedFooterItems);\n                                                                        }}\n                                                                    />\n                                                                </Grid>\n                                                            </Grid>\n                                                        }\n                                                        {\n                                                            (val.type === 'paragraph' || val.type === 'heading') &&\n                                                            <Grid container={true} justify={'flex-start'}>\n                                                                <TextField\n                                                                    label={'Value'}\n                                                                    variant=\"outlined\"\n                                                                    fullWidth\n                                                                    value={val.value}\n                                                                    onChange={(e) => {\n                                                                        const updatedFooterItems = [...footerItems];\n                                                                        updatedFooterItems[activeRowStep - 1].items[index].value[i].value = e.target.value;\n                                                                        setFooterItems(updatedFooterItems);\n                                                                    }}\n                                                                />\n                                                            </Grid>\n                                                        }\n                                                        {\n                                                            val.type === 'email' && <TextField\n                                                                label={'Value'}\n                                                                variant=\"outlined\"\n                                                                fullWidth\n                                                                value={val.value}\n                                                                onChange={(e) => {\n                                                                    const updatedFooterItems = [...footerItems];\n                                                                    updatedFooterItems[activeRowStep - 1].items[index].value[i].value = e.target.value;\n                                                                    setFooterItems(updatedFooterItems);\n                                                                }}\n                                                                error={(val.value && validator.isEmail(val.value) === false) ? true : false}\n                                                            />\n                                                        }\n                                                        {\n                                                            val.type === 'phone' && <TextField\n                                                                label={'Value'}\n                                                                variant=\"outlined\"\n                                                                fullWidth\n                                                                value={val.value}\n                                                                onChange={(e) => {\n                                                                    const updatedFooterItems = [...footerItems];\n                                                                    updatedFooterItems[activeRowStep - 1].items[index].value[i].value = e.target.value;\n                                                                    setFooterItems(updatedFooterItems);\n                                                                }}\n                                                                error={(val.value && validator.isMobilePhone(val.value) === false) ? true : false}\n                                                            />\n                                                        }\n                                                        {\n                                                            val.type === 'internal-link' &&\n                                                            <Grid container={true} justify={'flex-start'} spacing={3}>\n                                                                <Grid item xs={6}>\n                                                                    <TextField\n                                                                        label={'Title'}\n                                                                        variant=\"outlined\"\n                                                                        fullWidth\n                                                                        value={val.value.title}\n                                                                        onChange={(e) => {\n                                                                            const updatedFooterItems = [...footerItems];\n                                                                            updatedFooterItems[activeRowStep - 1].items[index].value[i].value['title'] = e.target.value;\n                                                                            setFooterItems(updatedFooterItems);\n                                                                        }}\n                                                                    />\n                                                                </Grid>\n                                                                <Grid item xs={6}>\n                                                                    <FormControl fullWidth disabled={state.langCode !== state.defaultLang}>\n                                                                        <InputLabel shrink={val.value.value ? true : false} style={{marginLeft: 16}}>\n                                                                            Web Page\n                                                                        </InputLabel>\n                                                                        <Select\n                                                                            native\n                                                                            value={val.value.value}\n                                                                            variant={\"outlined\"}\n                                                                            onChange={(e) => {\n                                                                                const updatedFooterItems = [...footerItems];\n                                                                                updatedFooterItems[activeRowStep - 1].items[index].value[i].value['value'] = e.target.value;\n                                                                                setFooterItems(updatedFooterItems);\n                                                                            }}>\n                                                                            <option style={{ display: 'none' }} value=''></option>\n                                                                            {\n                                                                                webPages.length > 0 && webPages.map((page, index) => {\n                                                                                    return (\n                                                                                        <option value={page.gid} key={index}> { page.code } </option>\n                                                                                    )\n                                                                                })\n                                                                            }\n                                                                        </Select>\n                                                                    </FormControl>\n                                                                </Grid>\n                                                            </Grid>\n                                                        }\n                                                    </Grid>\n                                                    <Grid item xs={1}>\n                                                        <IconButton\n                                                            aria-label=\"Delete item\"\n                                                            color=\"primary\"\n                                                            onClick={() => {\n                                                                const updatedFooterItems = [...footerItems];\n                                                                updatedFooterItems[activeRowStep - 1].items[index].value.splice(i, 1);\n                                                                setFooterItems(updatedFooterItems);\n                                                            }}\n                                                            disabled={item.value.length === 1}\n                                                        >\n                                                            <CancelIcon style={{color: item.value.length === 1 ? 'grey' : 'red'}} />\n                                                        </IconButton>\n                                                    </Grid>\n                                                </Grid>\n                                            )\n                                        })\n                                    }\n                                </Container> : null\n                            })\n                        }\n                        <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\n                            <div className={classes.actionButtons}>\n                                {\n                                    activeColumnStep !== 0 &&\n                                    <Button\n                                        onClick={handleBackColumn}\n                                        variant=\"contained\"\n                                        size=\"small\"\n                                        aria-label=\"add\"\n                                        className={classes.actionButton}\n                                        style={{marginRight: 8}}\n                                    >\n                                        BACK\n                                    </Button>\n                                }\n                                {\n                                    activeColumnStep !== columnSteps.length - 1 && <Button\n                                        onClick={handleNextColumn}\n                                        variant=\"contained\"\n                                        size=\"small\"\n                                        color=\"primary\"\n                                        aria-label=\"add\"\n                                        className={classes.actionButton}\n                                        style={{marginRight: 24}}\n                                        // disabled={handleNextDisable() ? true : false}\n                                    >\n                                        NEXT\n                                    </Button>\n                                }\n                            </div>\n                        </Grid>\n                    </Paper>\n                </Container>\n            }\n            {/*<Grid className={isSave ? classes.disabledEvent : ''} container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">*/}\n            {/*    <div className={classes.actionButtons}>*/}\n            {/*        {activeRowStep !== 0 && (*/}\n            {/*            <Button*/}\n            {/*                onClick={handleBackRow}*/}\n            {/*                variant=\"contained\"*/}\n            {/*                size=\"small\"*/}\n            {/*                aria-label=\"add\"*/}\n            {/*                className={classes.actionButton}*/}\n            {/*                style={{marginRight: 8}}*/}\n            {/*            >*/}\n            {/*                BACK*/}\n            {/*            </Button>*/}\n            {/*        )}*/}\n            {/*        <Button*/}\n            {/*            onClick={handleNextRow}*/}\n            {/*            variant=\"contained\"*/}\n            {/*            size=\"small\"*/}\n            {/*            color=\"primary\"*/}\n            {/*            aria-label=\"add\"*/}\n            {/*            className={classes.actionButton}*/}\n            {/*            style={{marginRight: 24}}*/}\n            {/*            // disabled={handleNextDisable() ? true : false}*/}\n            {/*        >*/}\n            {/*            {activeRowStep === rowSteps.length - 1 ? 'SAVE' : 'NEXT'}*/}\n            {/*        </Button>*/}\n            {/*    </div>*/}\n            {/*</Grid>*/}\n        </React.Fragment>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        state: state.formReducer.pageBuilder\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n)(EditFooter);"]},"metadata":{},"sourceType":"module"}