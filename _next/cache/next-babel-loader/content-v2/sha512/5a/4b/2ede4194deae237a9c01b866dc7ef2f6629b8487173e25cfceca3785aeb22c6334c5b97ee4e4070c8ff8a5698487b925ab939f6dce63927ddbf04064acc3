{"ast":null,"code":"import _defineProperty from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/mata/app-cloudweb/components/survey/quick-register/index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext, useState, useRef, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport moment from 'moment';\nimport ReCaptcha from 'react-google-recaptcha';\nimport * as global from '@webcms-globals';\nimport WebCmsGlobal from 'components/webcms-global';\nimport { LocaleContext } from 'lib/translations/context/LocaleContext';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nimport { Grid, TextField, Icon, Box, Paper, Typography, Button } from '@material-ui/core';\nimport FrameCheckbox from '@webcms-ui/core/frame-checkbox';\nimport { required, validateEmail } from 'state/utils/form';\nimport { useSnackbar } from 'notistack';\nimport axios from 'axios';\nimport { useRouter } from 'next/router';\nimport ProgressButton from '@webcms-ui/core/progress-button';\nimport PhoneInput from \"../../../@webcms-ui/core/phone-input\";\nimport CustomAutoComplete from \"../../CustomAutoComplete/CustomAutoComplete\";\nimport { mobileTelNoFormat, OREST_ENDPOINT, REQUEST_METHOD_CONST } from \"../../../model/orest/constants\";\nimport CustomDatePicker from \"../../CustomDatePicker/CustomDatePicker\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    textFieldDestinationPortal: {\n      borderRadius: '5px'\n    }\n  };\n});\nexport default function QuickRegister(props) {\n  _s();\n\n  var _client$mobiletel, _client$mobiletel2, _client$mobiletel3, _client$mobiletel4, _client$mobiletel5, _client$birthdate, _client$birthdate2, _client$country, _client$country2, _client$city, _client$city2, _client$country3, _client$country4, _client$country5, _client$country6, _client$country6$valu, _client$country7, _client$country8, _client$country9, _client$country9$valu;\n\n  var classes = useStyles();\n  var isRegisterWrapper = props.isRegisterWrapper,\n      showBackButton = props.showBackButton,\n      onClickBackButton = props.onClickBackButton,\n      variant = props.variant,\n      isEmpPortal = props.isEmpPortal,\n      isOpenRegister = props.isOpenRegister;\n\n  var _useContext = useContext(WebCmsGlobal),\n      GENERAL_SETTINGS = _useContext.GENERAL_SETTINGS,\n      WEBCMS_DATA = _useContext.WEBCMS_DATA;\n\n  var _useContext2 = useContext(LocaleContext),\n      locale = _useContext2.locale;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useSnackbar = useSnackbar(),\n      enqueueSnackbar = _useSnackbar.enqueueSnackbar;\n\n  var router = useRouter();\n\n  var _useState = useState(false),\n      isRegister = _useState[0],\n      setIsRegister = _useState[1];\n\n  var _useState2 = useState(false),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var reCaptchaRef = useRef({});\n  var surveyGid = router.query.surveyGid;\n\n  var _useState3 = useState(false),\n      phoneInfoData = _useState3[0],\n      setPhoneInfoData = _useState3[1];\n\n  var _useState4 = useState(''),\n      iso2 = _useState4[0],\n      setIso2 = _useState4[1];\n\n  var _useState5 = useState(Object.assign(GENERAL_SETTINGS.hotelSettings.regbirthdate && !isEmpPortal ? {\n    birthdate: {\n      value: null,\n      isError: false,\n      isRequired: true\n    }\n  } : {}, {\n    firstname: {\n      value: '',\n      isError: false,\n      isRequired: true\n    },\n    lastname: {\n      value: '',\n      isError: false,\n      isRequired: true\n    },\n    email: {\n      value: '',\n      isError: false,\n      isRequired: true\n    },\n    mobiletel: {\n      value: '',\n      isError: false,\n      isRequired: isEmpPortal\n    },\n    country: {\n      value: null,\n      isError: false,\n      isRequired: isEmpPortal\n    },\n    city: {\n      value: '',\n      isError: false,\n      isRequired: isEmpPortal\n    },\n    datapolicy: {\n      value: false,\n      isError: false,\n      isRequired: true\n    },\n    recaptcha: {\n      value: '',\n      isRequired: true\n    }\n  })),\n      client = _useState5[0],\n      setClient = _useState5[1];\n\n  var handleStrChange = function handleStrChange(event, name) {\n    var key, value;\n    key = name ? name : event.target.name;\n    value = event ? event.target ? event.target.value : event : '';\n\n    if (event !== null && event !== void 0 && event.target) {\n      event.preventDefault();\n    }\n\n    setClient(_objectSpread(_objectSpread({}, client), {}, _defineProperty({}, key, _objectSpread(_objectSpread({}, client[key]), {}, {\n      value: value,\n      isError: client[key].isRequired && !!required(value)\n    }))));\n  };\n\n  useEffect(function () {\n    if (isEmpPortal && isOpenRegister && !phoneInfoData) {\n      if (client.mobiletel.value.length <= 0) getPhoneInfo(null);\n    }\n  }, [isOpenRegister]);\n  useEffect(function () {\n    if (isEmpPortal && isOpenRegister && phoneInfoData) {\n      var timer = setTimeout(function () {\n        getPhoneInfo(mobileTelNoFormat(client.mobiletel.value));\n      }, 700);\n      return function () {\n        return clearTimeout(timer);\n      };\n    }\n  }, [client.mobiletel.value, isOpenRegister]);\n\n  var getPhoneInfo = function getPhoneInfo(tel) {\n    var params = {\n      tel: tel\n    };\n    axios({\n      url: GENERAL_SETTINGS.BASE_URL + 'api/get/phone/info',\n      method: REQUEST_METHOD_CONST.POST,\n      params: tel ? params : {}\n    }).then(function (res) {\n      if (res.status === 200 && res.data.success) {\n        setPhoneInfoData(res.data.data);\n      }\n    });\n  };\n\n  var handleDateChange = function handleDateChange(value) {\n    var key = 'birthdate';\n    setClient(_objectSpread(_objectSpread({}, client), {}, _defineProperty({}, key, _objectSpread(_objectSpread({}, client[key]), {}, {\n      value: moment(value).format(OREST_ENDPOINT.DATEFORMAT),\n      renderValue: value,\n      isError: client[key].isRequired && !!required(value)\n    }))));\n  };\n\n  var handleChckDataPolicy = function handleChckDataPolicy(value) {\n    var key = 'datapolicy';\n    setClient(_objectSpread(_objectSpread({}, client), {}, _defineProperty({}, key, _objectSpread(_objectSpread({}, client[key]), {}, {\n      value: value,\n      isError: client[key].isRequired && !!required(value),\n      errorText: client[key].isRequired && required(value)\n    }))));\n  };\n\n  var handleVerifyRecaptcha = function handleVerifyRecaptcha(value) {\n    var key = 'recaptcha';\n    setClient(_objectSpread(_objectSpread({}, client), {}, _defineProperty({}, key, _objectSpread(_objectSpread({}, client[key]), {}, {\n      value: value\n    }))));\n  };\n\n  var handleClientRegister = function handleClientRegister() {\n    var isRequiredError = false,\n        isEmailError = false;\n    var clientData = client;\n    Object.keys(clientData).forEach(function (key) {\n      if (clientData[key].isRequired) {\n        if (required(clientData[key].value)) {\n          clientData[key].isError = true;\n          isRequiredError = true;\n        }\n      }\n    });\n\n    if (validateEmail(client.email.value)) {\n      clientData.email.isError = true;\n      isEmailError = true;\n    }\n\n    if (!client.datapolicy.value) {\n      clientData.datapolicy.isError = true;\n      isRequiredError = true;\n    }\n\n    if (!client.recaptcha.value) {\n      isRequiredError = true;\n    }\n\n    setClient(_objectSpread({}, client));\n\n    if (!isRequiredError && !isEmailError) {\n      setIsLoading(true);\n      var requestData = Object.assign(GENERAL_SETTINGS.hotelSettings.regbirthdate && !isEmpPortal ? {\n        birthdate: client.birthdate.value\n      } : {}, {\n        firstname: client.firstname.value,\n        lastname: client.lastname.value,\n        email: client.email.value,\n        datapolicy: client.datapolicy.value,\n        langcode: locale,\n        recaptcha: client.recaptcha.value,\n        surveygid: surveyGid\n      });\n\n      if (isEmpPortal) {\n        var _clientData$mobiletel, _clientData$country, _clientData$country2, _clientData$country2$, _clientData$country3, _clientData$city, _clientData$city2, _clientData$city2$val, _clientData$city3;\n\n        var data = {};\n        data.mobiletel = clientData === null || clientData === void 0 ? void 0 : (_clientData$mobiletel = clientData.mobiletel) === null || _clientData$mobiletel === void 0 ? void 0 : _clientData$mobiletel.value;\n        data.country = typeof (clientData === null || clientData === void 0 ? void 0 : (_clientData$country = clientData.country) === null || _clientData$country === void 0 ? void 0 : _clientData$country.value) === 'object' ? clientData === null || clientData === void 0 ? void 0 : (_clientData$country2 = clientData.country) === null || _clientData$country2 === void 0 ? void 0 : (_clientData$country2$ = _clientData$country2.value) === null || _clientData$country2$ === void 0 ? void 0 : _clientData$country2$.description : clientData === null || clientData === void 0 ? void 0 : (_clientData$country3 = clientData.country) === null || _clientData$country3 === void 0 ? void 0 : _clientData$country3.value;\n        data.city = typeof (clientData === null || clientData === void 0 ? void 0 : (_clientData$city = clientData.city) === null || _clientData$city === void 0 ? void 0 : _clientData$city.value) === 'object' ? clientData === null || clientData === void 0 ? void 0 : (_clientData$city2 = clientData.city) === null || _clientData$city2 === void 0 ? void 0 : (_clientData$city2$val = _clientData$city2.value) === null || _clientData$city2$val === void 0 ? void 0 : _clientData$city2$val.description : clientData === null || clientData === void 0 ? void 0 : (_clientData$city3 = clientData.city) === null || _clientData$city3 === void 0 ? void 0 : _clientData$city3.value;\n        Object.assign(requestData, data);\n        requestData.langcode = null;\n      }\n\n      axios({\n        url: \"\".concat(GENERAL_SETTINGS.BASE_URL).concat(isEmpPortal ? 'api/hotel/emp/register' : 'api/ors/user/save'),\n        method: REQUEST_METHOD_CONST.POST,\n        data: requestData\n      }).then(function (response) {\n        if (response.status === 200 && response.data.success === true) {\n          enqueueSnackbar(t('str_dataSaveSuccessMsg'), {\n            variant: 'success'\n          });\n          setIsRegister(true);\n          setIsLoading(false);\n        } else {\n          if (response.data.error === 'existed_email') {\n            reCaptchaRef.current.reset();\n            enqueueSnackbar(t('str_thisEmailAddressHasBeenUsedBefore'), {\n              variant: 'error'\n            });\n          } else {\n            reCaptchaRef.current.reset();\n            enqueueSnackbar(t('str_unexpectedProblem'), {\n              variant: 'error'\n            });\n          }\n\n          setIsLoading(false);\n        }\n      });\n    } else {\n      reCaptchaRef.current.reset();\n      enqueueSnackbar(t('str_fillRequiredFields'), {\n        variant: 'error'\n      });\n      setIsLoading(false);\n    }\n  };\n\n  if (isRegister) {\n    return __jsx(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 13\n      }\n    }, __jsx(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }\n    }, __jsx(Paper, {\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 21\n      }\n    }, __jsx(Box, {\n      p: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 25\n      }\n    }, __jsx(Typography, {\n      variant: \"subtitle1\",\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 29\n      }\n    }, __jsx(Icon, {\n      style: {\n        color: '#4CAF50'\n      },\n      fontSize: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 33\n      }\n    }, \"check_circle_outline\")), __jsx(Typography, {\n      variant: \"subtitle1\",\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 29\n      }\n    }, t('str_pleaseCheckYourMailBoxPassword')), __jsx(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 29\n      }\n    }, showBackButton && __jsx(Button, {\n      style: {\n        marginRight: '8px'\n      },\n      size: 'large',\n      color: 'primary',\n      variant: 'outlined',\n      onClick: function onClick() {\n        return typeof onClickBackButton === 'function' && onClickBackButton();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 37\n      }\n    }, t('str_back')))))));\n  }\n\n  return __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"center\",\n    alignItems: \"center\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 13\n    }\n  }, __jsx(TextField, {\n    disabled: isLoading,\n    className: isRegisterWrapper ? classes.textFieldDestinationPortal : '',\n    value: client.firstname.value,\n    error: client.firstname.isError,\n    onChange: function onChange(e) {\n      return handleStrChange(e);\n    },\n    variant: variant ? variant : 'filled',\n    color: 'primary',\n    required: true,\n    fullWidth: true,\n    id: \"firstname\",\n    name: \"firstname\",\n    label: t('str_firstName'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 17\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 13\n    }\n  }, __jsx(TextField, {\n    disabled: isLoading,\n    className: isRegisterWrapper ? classes.textFieldDestinationPortal : '',\n    value: client.lastname.value,\n    error: client.lastname.isError,\n    onChange: function onChange(e) {\n      return handleStrChange(e);\n    },\n    variant: variant ? variant : 'filled',\n    color: 'primary',\n    required: true,\n    fullWidth: true,\n    id: \"lastname\",\n    name: \"lastname\",\n    label: t('str_lastName'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 17\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 13\n    }\n  }, __jsx(TextField, {\n    className: isRegisterWrapper ? classes.textFieldDestinationPortal : '',\n    value: client.email.value,\n    error: client.email.isError,\n    onChange: function onChange(e) {\n      return handleStrChange(e);\n    },\n    variant: variant || 'filled',\n    color: 'primary',\n    required: true,\n    fullWidth: true,\n    id: \"email\",\n    name: \"email\",\n    label: t('str_email'),\n    disabled: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 17\n    }\n  })), isEmpPortal && __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 17\n    }\n  }, __jsx(PhoneInput, {\n    defaultCountry: iso2 || locale,\n    preferredCountries: ['it', 'ie', 'de', 'fr', 'es', 'gb'],\n    regions: ['america', 'europe', 'asia', 'oceania', 'africa'],\n    id: 'mobiletel',\n    name: 'mobiletel',\n    value: (_client$mobiletel = client.mobiletel) === null || _client$mobiletel === void 0 ? void 0 : _client$mobiletel.value,\n    required: (_client$mobiletel2 = client.mobiletel) === null || _client$mobiletel2 === void 0 ? void 0 : _client$mobiletel2.isRequired,\n    label: t('str_mobile'),\n    disabled: isLoading,\n    fullWidth: true,\n    variant: variant || 'filled',\n    onChange: function onChange(newValue, e) {\n      return handleStrChange(newValue, 'mobiletel', e);\n    },\n    error: (_client$mobiletel3 = client.mobiletel) === null || _client$mobiletel3 === void 0 ? void 0 : _client$mobiletel3.isError,\n    helperText: ((_client$mobiletel4 = client.mobiletel) === null || _client$mobiletel4 === void 0 ? void 0 : _client$mobiletel4.isError) && ((_client$mobiletel5 = client.mobiletel) === null || _client$mobiletel5 === void 0 ? void 0 : _client$mobiletel5.errorText) //onBlur={field.isVerifyRequired ? () => handleOnVerify(field.key, field.value, field.type) : undefined}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 21\n    }\n  })), GENERAL_SETTINGS.hotelSettings.regbirthdate && !isEmpPortal && __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 17\n    }\n  }, __jsx(CustomDatePicker, {\n    id: \"birthdate\",\n    name: \"birthdate\",\n    required: client === null || client === void 0 ? void 0 : (_client$birthdate = client.birthdate) === null || _client$birthdate === void 0 ? void 0 : _client$birthdate.isRequired,\n    error: client === null || client === void 0 ? void 0 : (_client$birthdate2 = client.birthdate) === null || _client$birthdate2 === void 0 ? void 0 : _client$birthdate2.isError,\n    value: client['birthdate'].value || moment(),\n    label: t('str_birthDate'),\n    onChange: function onChange(e) {\n      return handleDateChange(e);\n    },\n    disableFuture: true,\n    fullWidth: true,\n    disabled: isLoading,\n    variant: isRegisterWrapper ? 'outlined' : 'filled',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 21\n    }\n  })), isEmpPortal && isOpenRegister && __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 17\n    }\n  }, __jsx(CustomAutoComplete, {\n    id: 'country',\n    name: 'country',\n    required: (_client$country = client.country) === null || _client$country === void 0 ? void 0 : _client$country.isRequired,\n    error: client.country.isError,\n    value: ((_client$country2 = client.country) === null || _client$country2 === void 0 ? void 0 : _client$country2.value) || null,\n    variant: variant || 'filled',\n    disabled: isLoading,\n    withoutToken: true,\n    endpoint: 'api/hotel/content/info/country',\n    onChange: function onChange(event, newValue) {\n      handleStrChange(newValue, 'country');\n    } //onInputChange={(inputValue) => handleStrChange(inputValue, 'country')}\n    ,\n    onLoad: function onLoad(initialValue) {\n      setClient(_objectSpread(_objectSpread({}, client), {}, _defineProperty({}, 'country', _objectSpread(_objectSpread({}, client['country']), {}, {\n        value: initialValue\n      }))));\n      setIso2((initialValue === null || initialValue === void 0 ? void 0 : initialValue.iso2) || false);\n    },\n    showOptionLabel: 'descineng',\n    showOption: 'descineng',\n    searchInitialParam: 'itu',\n    initialId: phoneInfoData ? phoneInfoData === null || phoneInfoData === void 0 ? void 0 : phoneInfoData.itu : false //triggerValue={true}\n    ,\n    useDefaultFilter: true,\n    label: t('str_country'),\n    fullWidth: true //freeSolo\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 21\n    }\n  })), isEmpPortal && isOpenRegister && __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 17\n    }\n  }, __jsx(CustomAutoComplete, {\n    id: 'city',\n    name: 'city',\n    value: ((_client$city = client.city) === null || _client$city === void 0 ? void 0 : _client$city.value) || null,\n    required: (_client$city2 = client.city) === null || _client$city2 === void 0 ? void 0 : _client$city2.isRequired,\n    error: client.city.isError,\n    disabled: isLoading,\n    variant: variant || 'filled',\n    withoutToken: (_client$country3 = client.country) === null || _client$country3 === void 0 ? void 0 : _client$country3.value,\n    withoutTokenData: (_client$country4 = client.country) !== null && _client$country4 !== void 0 && _client$country4.value ? {\n      country: typeof ((_client$country5 = client.country) === null || _client$country5 === void 0 ? void 0 : _client$country5.value) === 'object' ? (_client$country6 = client.country) === null || _client$country6 === void 0 ? void 0 : (_client$country6$valu = _client$country6.value) === null || _client$country6$valu === void 0 ? void 0 : _client$country6$valu.description : (_client$country7 = client.country) === null || _client$country7 === void 0 ? void 0 : _client$country7.value\n    } : false,\n    endpoint: 'api/hotel/content/info/city',\n    onChange: function onChange(event, newValue) {\n      handleStrChange(newValue, 'city');\n    },\n    onInputChange: function onInputChange(inputValue) {\n      return handleStrChange(inputValue, 'city');\n    },\n    showOptionLabel: 'description',\n    showOption: 'description',\n    trgValKey: 'description',\n    triggerValue: typeof ((_client$country8 = client.country) === null || _client$country8 === void 0 ? void 0 : _client$country8.value) === 'object' ? (_client$country9 = client.country) === null || _client$country9 === void 0 ? void 0 : (_client$country9$valu = _client$country9.value) === null || _client$country9$valu === void 0 ? void 0 : _client$country9$valu.description : false,\n    useDefaultFilter: true,\n    label: t('str_city'),\n    fullWidth: true,\n    freeSolo: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 21\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 13\n    }\n  }, __jsx(FrameCheckbox, {\n    required: true,\n    value: client.datapolicy.value,\n    isError: client.datapolicy.isError,\n    disabled: isLoading,\n    fontSize: \"12px\",\n    title: \"str_privacyAndPersonalDataProtectionPolicies\",\n    linkText: \"str_iAcceptDataPolicy\",\n    linkTextADesc: \"str_privacyAndPersonalDataProtectionPolicies\",\n    ifamePageUrl: GENERAL_SETTINGS.BASE_URL + \"info/\".concat(locale || global.common.strDefShortLangCode, \"/\").concat(global.guestWeb.strDataPolicy, \"?iframe=true\"),\n    isCheck: function isCheck(e) {\n      return handleChckDataPolicy(e);\n    },\n    linkColor: WEBCMS_DATA.assets.colors.primary.main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 17\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 13\n    }\n  }, __jsx(ReCaptcha, {\n    ref: reCaptchaRef,\n    sitekey: GENERAL_SETTINGS.RECAPTCHA_SITE_KEY,\n    onChange: function onChange(e) {\n      return handleVerifyRecaptcha(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 17\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    style: showBackButton ? {\n      textAlign: 'right'\n    } : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 13\n    }\n  }, showBackButton && __jsx(Button, {\n    style: {\n      marginRight: '8px'\n    },\n    size: 'large',\n    color: 'primary',\n    variant: 'outlined',\n    onClick: function onClick() {\n      return typeof onClickBackButton === 'function' && onClickBackButton();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 21\n    }\n  }, t('str_back')), __jsx(ProgressButton, {\n    isLoading: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    variant: \"contained\",\n    disabled: isLoading,\n    color: \"primary\",\n    size: \"large\",\n    onClick: function onClick() {\n      return handleClientRegister();\n    },\n    disableElevation: true,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 21\n    }\n  }, t('str_register')))));\n}\n\n_s(QuickRegister, \"E/PyHXzd8dN3m8WiOI1QYRKJrOI=\", false, function () {\n  return [useStyles, useTranslation, useSnackbar, useRouter];\n});\n\n_c = QuickRegister;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuickRegister\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/survey/quick-register/index.js"],"names":["React","useContext","useState","useRef","useEffect","makeStyles","moment","ReCaptcha","global","WebCmsGlobal","LocaleContext","useTranslation","Grid","TextField","Icon","Box","Paper","Typography","Button","FrameCheckbox","required","validateEmail","useSnackbar","axios","useRouter","ProgressButton","PhoneInput","CustomAutoComplete","mobileTelNoFormat","OREST_ENDPOINT","REQUEST_METHOD_CONST","CustomDatePicker","useStyles","theme","textFieldDestinationPortal","borderRadius","QuickRegister","props","classes","isRegisterWrapper","showBackButton","onClickBackButton","variant","isEmpPortal","isOpenRegister","GENERAL_SETTINGS","WEBCMS_DATA","locale","t","enqueueSnackbar","router","isRegister","setIsRegister","isLoading","setIsLoading","reCaptchaRef","surveyGid","query","phoneInfoData","setPhoneInfoData","iso2","setIso2","Object","assign","hotelSettings","regbirthdate","birthdate","value","isError","isRequired","firstname","lastname","email","mobiletel","country","city","datapolicy","recaptcha","client","setClient","handleStrChange","event","name","key","target","preventDefault","length","getPhoneInfo","timer","setTimeout","clearTimeout","tel","params","url","BASE_URL","method","POST","then","res","status","data","success","handleDateChange","format","DATEFORMAT","renderValue","handleChckDataPolicy","errorText","handleVerifyRecaptcha","handleClientRegister","isRequiredError","isEmailError","clientData","keys","forEach","requestData","langcode","surveygid","description","response","error","current","reset","color","marginRight","e","newValue","initialValue","itu","inputValue","common","strDefShortLangCode","guestWeb","strDataPolicy","assets","colors","primary","main","RECAPTCHA_SITE_KEY","textAlign"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useRef, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport moment from 'moment'\nimport ReCaptcha from 'react-google-recaptcha'\nimport * as global from '@webcms-globals'\nimport WebCmsGlobal from 'components/webcms-global'\nimport { LocaleContext } from 'lib/translations/context/LocaleContext'\nimport useTranslation from 'lib/translations/hooks/useTranslation'\nimport { Grid, TextField, Icon, Box, Paper, Typography, Button } from '@material-ui/core'\nimport FrameCheckbox from '@webcms-ui/core/frame-checkbox'\nimport { required, validateEmail } from 'state/utils/form'\nimport { useSnackbar } from 'notistack'\nimport axios from 'axios'\nimport { useRouter } from 'next/router'\nimport ProgressButton from '@webcms-ui/core/progress-button'\nimport PhoneInput from \"../../../@webcms-ui/core/phone-input\";\nimport CustomAutoComplete from \"../../CustomAutoComplete/CustomAutoComplete\";\nimport {mobileTelNoFormat, OREST_ENDPOINT, REQUEST_METHOD_CONST} from \"../../../model/orest/constants\";\nimport CustomDatePicker from \"../../CustomDatePicker/CustomDatePicker\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    textFieldDestinationPortal: {\n        borderRadius: '5px',\n    },\n}))\n\nexport default function QuickRegister(props) {\n    const classes = useStyles()\n\n    const { isRegisterWrapper,  showBackButton, onClickBackButton, variant, isEmpPortal, isOpenRegister } = props\n    const { GENERAL_SETTINGS, WEBCMS_DATA } = useContext(WebCmsGlobal)\n    const { locale } = useContext(LocaleContext)\n    const { t } = useTranslation()\n    const { enqueueSnackbar } = useSnackbar()\n    const router = useRouter()\n    const [isRegister, setIsRegister] = useState(false)\n    const [isLoading, setIsLoading] = useState(false)\n    const reCaptchaRef = useRef({})\n    const surveyGid = router.query.surveyGid\n    const [phoneInfoData, setPhoneInfoData] = useState(false);\n    const [iso2, setIso2] = useState('')\n\n\n    const [client, setClient] = useState(\n        Object.assign(\n            GENERAL_SETTINGS.hotelSettings.regbirthdate && !isEmpPortal ? {\n                birthdate: {\n                    value: null,\n                    isError: false,\n                    isRequired: true,\n                },\n            } : {}, {\n                firstname: {\n                    value: '',\n                    isError: false,\n                    isRequired: true,\n                },\n                lastname: {\n                    value: '',\n                    isError: false,\n                    isRequired: true,\n                },\n                email: {\n                    value: '',\n                    isError: false,\n                    isRequired: true,\n                },\n                mobiletel: {\n                    value: '',\n                    isError: false,\n                    isRequired: isEmpPortal,\n                },\n                country: {\n                    value: null,\n                    isError: false,\n                    isRequired: isEmpPortal,\n                },\n                city: {\n                    value: '',\n                    isError: false,\n                    isRequired: isEmpPortal,\n                },\n                datapolicy: {\n                    value: false,\n                    isError: false,\n                    isRequired: true,\n                },\n                recaptcha: {\n                    value: '',\n                    isRequired: true,\n                },\n            }))\n\n    const handleStrChange = (event, name) => {\n        let key, value\n        key = name ? name : event.target.name\n        value = event ? event.target ? event.target.value : event : ''\n        if(event?.target) {\n            event.preventDefault()\n        }\n\n        setClient({\n            ...client,\n            [key]: {\n                ...client[key],\n                value: value,\n                isError: client[key].isRequired && !!required(value),\n            },\n        })\n    }\n\n   useEffect(() => {\n       if(isEmpPortal && isOpenRegister && !phoneInfoData) {\n           if(client.mobiletel.value.length <= 0) getPhoneInfo(null)\n       }\n   }, [isOpenRegister])\n\n    useEffect(() => {\n        if(isEmpPortal && isOpenRegister && phoneInfoData) {\n            const timer = setTimeout(() => {\n                getPhoneInfo(mobileTelNoFormat(client.mobiletel.value))\n            }, 700)\n            return () => clearTimeout(timer);\n        }\n    }, [client.mobiletel.value, isOpenRegister])\n\n    const getPhoneInfo = (tel) => {\n        const params = {\n            tel: tel\n        }\n\n        axios({\n            url: GENERAL_SETTINGS.BASE_URL + 'api/get/phone/info',\n            method: REQUEST_METHOD_CONST.POST,\n            params: tel ? params : {}\n        }).then(res => {\n            if(res.status === 200 && res.data.success) {\n                setPhoneInfoData(res.data.data)\n            }\n        })\n    }\n\n    const handleDateChange = (value) => {\n        const key = 'birthdate'\n        setClient({\n            ...client,\n            [key]: {\n                ...client[key],\n                value: moment(value).format(OREST_ENDPOINT.DATEFORMAT),\n                renderValue: value,\n                isError: client[key].isRequired && !!required(value),\n            },\n        })\n    }\n\n    const handleChckDataPolicy = (value) => {\n        const key = 'datapolicy'\n\n        setClient({\n            ...client,\n            [key]: {\n                ...client[key],\n                value: value,\n                isError: client[key].isRequired && !!required(value),\n                errorText: client[key].isRequired && required(value),\n            },\n        })\n    }\n\n    const handleVerifyRecaptcha = (value) => {\n        const key = 'recaptcha'\n        setClient({\n            ...client,\n            [key]: {\n                ...client[key],\n                value: value,\n            },\n        })\n    }\n\n    const handleClientRegister = () => {\n        let isRequiredError = false, isEmailError = false\n        const clientData = client\n\n        Object.keys(clientData).forEach(function(key) {\n            if (clientData[key].isRequired) {\n                if (required(clientData[key].value)) {\n                    clientData[key].isError = true\n                    isRequiredError = true\n                }\n            }\n        })\n\n        if (validateEmail(client.email.value)) {\n            clientData.email.isError = true\n            isEmailError = true\n        }\n\n        if (!client.datapolicy.value) {\n            clientData.datapolicy.isError = true\n            isRequiredError = true\n        }\n\n        if (!client.recaptcha.value) {\n            isRequiredError = true\n        }\n\n        setClient({ ...client })\n\n        if (!isRequiredError && !isEmailError) {\n            setIsLoading(true)\n            let requestData =\n                Object.assign(GENERAL_SETTINGS.hotelSettings.regbirthdate && !isEmpPortal ? { birthdate: client.birthdate.value } : {}, {\n                    firstname: client.firstname.value,\n                    lastname: client.lastname.value,\n                    email: client.email.value,\n                    datapolicy: client.datapolicy.value,\n                    langcode: locale,\n                    recaptcha: client.recaptcha.value,\n                    surveygid: surveyGid,\n                })\n\n            if(isEmpPortal) {\n                const data = {}\n                data.mobiletel = clientData?.mobiletel?.value\n                data.country = typeof clientData?.country?.value === 'object' ? clientData?.country?.value?.description : clientData?.country?.value\n                data.city = typeof clientData?.city?.value === 'object' ? clientData?.city?.value?.description : clientData?.city?.value\n                Object.assign(requestData, data)\n                requestData.langcode = null\n            }\n\n            axios({\n                url: `${GENERAL_SETTINGS.BASE_URL}${isEmpPortal ? 'api/hotel/emp/register' : 'api/ors/user/save'}`,\n                method: REQUEST_METHOD_CONST.POST,\n                data: requestData,\n            }).then((response) => {\n                if (response.status === 200 && response.data.success === true) {\n                    enqueueSnackbar(t('str_dataSaveSuccessMsg'), { variant: 'success' })\n                    setIsRegister(true)\n                    setIsLoading(false)\n                } else {\n                    if (response.data.error === 'existed_email') {\n                        reCaptchaRef.current.reset()\n                        enqueueSnackbar(t('str_thisEmailAddressHasBeenUsedBefore'), { variant: 'error' })\n                    } else {\n                        reCaptchaRef.current.reset()\n                        enqueueSnackbar(t('str_unexpectedProblem'), { variant: 'error' })\n                    }\n                    setIsLoading(false)\n                }\n            })\n        } else {\n            reCaptchaRef.current.reset()\n            enqueueSnackbar(t('str_fillRequiredFields'), { variant: 'error' })\n            setIsLoading(false)\n        }\n    }\n\n    if (isRegister) {\n        return (\n            <Grid container direction='row' justify='center' alignItems='center' spacing={2}>\n                <Grid item xs={12}>\n                    <Paper variant='outlined'>\n                        <Box p={3}>\n                            <Typography variant='subtitle1' align='center'>\n                                <Icon style={{ color: '#4CAF50' }} fontSize='large'>check_circle_outline</Icon>\n                            </Typography>\n                            <Typography variant='subtitle1' align='center'>\n                                {t('str_pleaseCheckYourMailBoxPassword')}\n                            </Typography>\n                            <Typography>\n                                {showBackButton && (\n                                    <Button\n                                        style={{marginRight: '8px'}}\n                                        size={'large'}\n                                        color={'primary'}\n                                        variant={'outlined'}\n                                        onClick={() => typeof onClickBackButton === 'function' && onClickBackButton()}\n                                    >\n                                        {t('str_back')}\n                                    </Button>\n                                )}\n                            </Typography>\n                        </Box>\n                    </Paper>\n                </Grid>\n            </Grid>\n        )\n    }\n\n    return (\n        <Grid container direction='row' justify='center' alignItems='center' spacing={2}>\n            <Grid item xs={6}>\n                <TextField\n                    disabled={isLoading}\n                    className={isRegisterWrapper ? classes.textFieldDestinationPortal : ''}\n                    value={client.firstname.value}\n                    error={client.firstname.isError}\n                    onChange={(e) => handleStrChange(e)}\n                    variant={variant ? variant : 'filled'}\n                    color={'primary'}\n                    required\n                    fullWidth\n                    id='firstname'\n                    name='firstname'\n                    label={t('str_firstName')}\n                />\n            </Grid>\n            <Grid item xs={6}>\n                <TextField\n                    disabled={isLoading}\n                    className={isRegisterWrapper ? classes.textFieldDestinationPortal : ''}\n                    value={client.lastname.value}\n                    error={client.lastname.isError}\n                    onChange={(e) => handleStrChange(e)}\n                    variant={variant ? variant : 'filled'}\n                    color={'primary'}\n                    required\n                    fullWidth\n                    id='lastname'\n                    name='lastname'\n                    label={t('str_lastName')}\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <TextField\n                    className={isRegisterWrapper ? classes.textFieldDestinationPortal : ''}\n                    value={client.email.value}\n                    error={client.email.isError}\n                    onChange={(e) => handleStrChange(e)}\n                    variant={variant || 'filled'}\n                    color={'primary'}\n                    required\n                    fullWidth\n                    id='email'\n                    name='email'\n                    label={t('str_email')}\n                    disabled={isLoading}\n                />\n            </Grid>\n            {isEmpPortal && (\n                <Grid item xs={12}>\n                    <PhoneInput\n                        defaultCountry={iso2 || locale}\n                        preferredCountries={['it', 'ie', 'de', 'fr', 'es', 'gb']}\n                        regions={['america', 'europe', 'asia', 'oceania', 'africa',]}\n                        id={'mobiletel'}\n                        name={'mobiletel'}\n                        value={client.mobiletel?.value}\n                        required={client.mobiletel?.isRequired}\n                        label={t('str_mobile')}\n                        disabled={isLoading}\n                        fullWidth\n                        variant={variant || 'filled'}\n                        onChange={(newValue, e) => handleStrChange(newValue, 'mobiletel', e)}\n                        error={client.mobiletel?.isError}\n                        helperText={client.mobiletel?.isError && client.mobiletel?.errorText}\n                        //onBlur={field.isVerifyRequired ? () => handleOnVerify(field.key, field.value, field.type) : undefined}\n                    />\n                </Grid>\n            )}\n            {GENERAL_SETTINGS.hotelSettings.regbirthdate && !isEmpPortal && (\n                <Grid item xs={12}>\n                    <CustomDatePicker\n                        id='birthdate'\n                        name='birthdate'\n                        required={client?.birthdate?.isRequired}\n                        error={client?.birthdate?.isError}\n                        value={client['birthdate'].value || moment()}\n                        label={t('str_birthDate')}\n                        onChange={(e) => handleDateChange(e)}\n                        disableFuture\n                        fullWidth\n                        disabled={isLoading}\n                        variant={isRegisterWrapper ? 'outlined' : 'filled'}\n                    />\n                </Grid>\n            )}\n            {isEmpPortal && isOpenRegister && (\n                <Grid item xs={12} sm={6}>\n                    <CustomAutoComplete\n                        id={'country'}\n                        name={'country'}\n                        required={client.country?.isRequired}\n                        error={client.country.isError}\n                        value={client.country?.value || null}\n                        variant={variant || 'filled'}\n                        disabled={isLoading}\n                        withoutToken\n                        endpoint={'api/hotel/content/info/country'}\n                        onChange={(event, newValue) => {handleStrChange(newValue, 'country')}}\n                        //onInputChange={(inputValue) => handleStrChange(inputValue, 'country')}\n                        onLoad={(initialValue) => {\n                            setClient({\n                                ...client,\n                                ['country']: {\n                                    ...client['country'],\n                                    value: initialValue\n\n                                }\n                            })\n                            setIso2(initialValue?.iso2 || false)\n                        }}\n                        showOptionLabel={'descineng'}\n                        showOption={'descineng'}\n                        searchInitialParam={'itu'}\n                        initialId={phoneInfoData ? phoneInfoData?.itu : false}\n                        //triggerValue={true}\n                        useDefaultFilter\n                        label={t('str_country')}\n                        fullWidth\n                        //freeSolo\n                    />\n                </Grid>\n            )}\n            {isEmpPortal && isOpenRegister &&(\n                <Grid item xs={12} sm={6}>\n                    <CustomAutoComplete\n                        id={'city'}\n                        name={'city'}\n                        value={client.city?.value || null}\n                        required={client.city?.isRequired}\n                        error={client.city.isError}\n                        disabled={isLoading}\n                        variant={variant || 'filled'}\n                        withoutToken={client.country?.value}\n                        withoutTokenData={client.country?.value ? {country: typeof client.country?.value === 'object' ? client.country?.value?.description : client.country?.value} : false}\n                        endpoint={'api/hotel/content/info/city'}\n                        onChange={(event, newValue) => {handleStrChange(newValue, 'city')}}\n                        onInputChange={(inputValue) => handleStrChange(inputValue, 'city')}\n                        showOptionLabel={'description'}\n                        showOption={'description'}\n                        trgValKey={'description'}\n                        triggerValue={typeof client.country?.value === 'object' ? client.country?.value?.description : false}\n                        useDefaultFilter\n                        label={t('str_city')}\n                        fullWidth\n                        freeSolo\n                    />\n                </Grid>\n            )}\n            <Grid item xs={12}>\n                <FrameCheckbox\n                    required={true}\n                    value={client.datapolicy.value}\n                    isError={client.datapolicy.isError}\n                    disabled={isLoading}\n                    fontSize='12px'\n                    title='str_privacyAndPersonalDataProtectionPolicies'\n                    linkText='str_iAcceptDataPolicy'\n                    linkTextADesc='str_privacyAndPersonalDataProtectionPolicies'\n                    ifamePageUrl={GENERAL_SETTINGS.BASE_URL + `info/${locale || global.common.strDefShortLangCode}/${global.guestWeb.strDataPolicy}?iframe=true`}\n                    isCheck={(e) => handleChckDataPolicy(e)}\n                    linkColor={WEBCMS_DATA.assets.colors.primary.main}\n                />\n            </Grid>\n            <Grid item xs={12}>\n                <ReCaptcha ref={reCaptchaRef} sitekey={GENERAL_SETTINGS.RECAPTCHA_SITE_KEY} onChange={(e) => handleVerifyRecaptcha(e)} />\n            </Grid>\n            <Grid item xs={12} style={showBackButton ? { textAlign: 'right'} : null}>\n                {showBackButton && (\n                    <Button\n                        style={{marginRight: '8px'}}\n                        size={'large'}\n                        color={'primary'}\n                        variant={'outlined'}\n                        onClick={() => typeof onClickBackButton === 'function' && onClickBackButton()}\n                    >\n                        {t('str_back')}\n                    </Button>\n                )}\n                <ProgressButton isLoading={isLoading}>\n                    <Button variant='contained' disabled={isLoading} color='primary' size='large' onClick={() => handleClientRegister()} disableElevation fullWidth>\n                        {t('str_register')}\n                    </Button>\n                </ProgressButton>\n            </Grid>\n        </Grid>\n    )\n}"]},"metadata":{},"sourceType":"module"}