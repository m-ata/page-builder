{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/@webcms-ui/core/file-upload-and-show/index.js\";\nvar __jsx = React.createElement;\nimport React, { useContext, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { IconButton, InputAdornment, TextField, Button, Dialog, DialogTitle, DialogContent, DialogActions } from '@material-ui/core';\nimport { CloudUpload, Visibility } from '@material-ui/icons';\nimport { DropzoneDialog } from 'material-ui-dropzone';\nimport { Delete, Upload, ViewList } from '@webcms/orest';\nimport { OREST_ENDPOINT } from 'model/orest/constants';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nimport WebCmsGlobal from 'components/webcms-global';\nimport { useSnackbar } from 'notistack';\n\nconst FileViewer = ({\n  label,\n  open,\n  handleClose,\n  fileUrl,\n  closeButtonText\n}) => {\n  return __jsx(Dialog, {\n    fullWidth: true,\n    maxWidth: \"xs\",\n    open: open,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, __jsx(DialogTitle, {\n    id: \"max-width-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, label), __jsx(DialogContent, {\n    dividers: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, fileUrl ? __jsx(\"img\", {\n    src: fileUrl,\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 28\n    }\n  }) : 'Not file'), __jsx(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }, closeButtonText)));\n};\n\nconst FileUploadAndShow = ({\n  id,\n  name,\n  label,\n  required,\n  disabled,\n  fullWidth,\n  size,\n  variant,\n  error,\n  helperText,\n  optionKey,\n  defValue,\n  trgQueryKey\n}) => {\n  const {\n    t\n  } = useTranslation();\n  const {\n    GENERAL_SETTINGS\n  } = useContext(WebCmsGlobal);\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const useToken = useSelector(state => {\n    var _state$orest, _state$orest$currentU;\n\n    return (state === null || state === void 0 ? void 0 : (_state$orest = state.orest) === null || _state$orest === void 0 ? void 0 : (_state$orest$currentU = _state$orest.currentUser) === null || _state$orest$currentU === void 0 ? void 0 : _state$orest$currentU.auth.access_token) || false;\n  });\n  const {\n    0: openUploadDialog,\n    1: setOpenUploadDialog\n  } = useState(false);\n  const {\n    0: openViewerDialog,\n    1: setOpenViewerDialog\n  } = useState(false);\n  const {\n    0: fileUrl,\n    1: setFileUrl\n  } = useState(false);\n\n  const getIsFileExists = (code, mid) => {\n    return ViewList({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.RAFILE,\n      token: useToken,\n      params: {\n        query: `code::${code},masterid::${mid}`,\n        limit: 1,\n        allhotels: true\n      }\n    }).then(rafileViewListResponse => {\n      var _rafileViewListRespon;\n\n      if (rafileViewListResponse.status === 200 && (rafileViewListResponse === null || rafileViewListResponse === void 0 ? void 0 : (_rafileViewListRespon = rafileViewListResponse.data) === null || _rafileViewListRespon === void 0 ? void 0 : _rafileViewListRespon.data.length) > 0) {\n        return rafileViewListResponse.data.data[0];\n      } else {\n        return false;\n      }\n    }).catch(() => {\n      return false;\n    });\n  };\n\n  const handleFileUpload = async useFile => {\n    const fileUpload = (code, mid, trgQueryKey, file) => {\n      return Upload({\n        apiUrl: GENERAL_SETTINGS.OREST_URL,\n        token: useToken,\n        params: {\n          code: code,\n          masterid: mid,\n          orsactive: true,\n          hotelrefno: trgQueryKey\n        },\n        files: file\n      }).then(fileUploadResponse => {\n        if (fileUploadResponse.status === 200 && fileUploadResponse.data.count > 0) {\n          return fileUploadResponse.data.data.url.replace('/var/otello', '').replace('/public', '');\n        } else {\n          return false;\n        }\n      }).catch(() => {\n        return false;\n      });\n    };\n\n    const fileDelete = (gid, hotelrefno) => {\n      return Delete({\n        apiUrl: GENERAL_SETTINGS.OREST_URL,\n        endpoint: OREST_ENDPOINT.RAFILE,\n        token: useToken,\n        gid: gid,\n        params: {\n          hotelrefno: hotelrefno\n        }\n      }).then(rafileDeleteResponse => {\n        return rafileDeleteResponse.status === 200;\n      }).catch(() => {\n        return false;\n      });\n    };\n\n    const fileIsExists = await getIsFileExists(optionKey, defValue);\n\n    if (fileIsExists) {\n      await fileDelete(fileIsExists.gid, fileIsExists.hotelrefno);\n    }\n\n    const fileIsUpload = await fileUpload(optionKey, defValue, trgQueryKey, useFile);\n\n    if (fileIsUpload) {\n      enqueueSnackbar(t('str_fileSuccessfullyUploaded'), {\n        variant: 'info'\n      });\n      setOpenUploadDialog(false);\n    } else {\n      enqueueSnackbar(t('str_unexpectedProblem'), {\n        variant: 'info'\n      });\n    }\n  };\n\n  const handleOpenFile = async () => {\n    const fileIsExists = await getIsFileExists(optionKey, defValue);\n\n    if (fileIsExists) {\n      setFileUrl(GENERAL_SETTINGS.STATIC_URL + fileIsExists.url.replace('/var/otello', '').replace('/public', ''));\n      setOpenViewerDialog(true);\n    } else {\n      enqueueSnackbar(t('str_fileDoesntExist'), {\n        variant: 'info'\n      });\n    }\n  };\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, __jsx(TextField, {\n    id: id,\n    name: name,\n    label: label,\n    required: required,\n    disabled: disabled,\n    fullWidth: fullWidth,\n    size: size,\n    variant: variant,\n    error: error,\n    helperText: helperText,\n    InputLabelProps: {\n      shrink: false\n    },\n    InputProps: {\n      readOnly: true,\n      endAdornment: __jsx(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 25\n        }\n      }, __jsx(IconButton, {\n        title: t('str_upload'),\n        disabled: disabled,\n        onClick: () => setOpenUploadDialog(true),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 29\n        }\n      }, __jsx(CloudUpload, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 33\n        }\n      })), __jsx(IconButton, {\n        title: t('str_view'),\n        disabled: disabled,\n        onClick: () => handleOpenFile(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 29\n        }\n      }, __jsx(Visibility, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 33\n        }\n      })))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }), __jsx(DropzoneDialog, {\n    maxWidth: \"xs\",\n    open: openUploadDialog,\n    onSave: handleFileUpload,\n    acceptedFiles: ['image/jpeg', 'image/png'],\n    showPreviews: true,\n    maxFileSize: 5000000,\n    filesLimit: 1,\n    onClose: () => setOpenUploadDialog(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }), __jsx(FileViewer, {\n    label: label,\n    closeButtonText: t('str_close'),\n    open: openViewerDialog,\n    fileUrl: fileUrl,\n    handleClose: () => setOpenViewerDialog(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default FileUploadAndShow;","map":{"version":3,"sources":["/Users/mata/app-cloudweb/@webcms-ui/core/file-upload-and-show/index.js"],"names":["React","useContext","useState","useSelector","IconButton","InputAdornment","TextField","Button","Dialog","DialogTitle","DialogContent","DialogActions","CloudUpload","Visibility","DropzoneDialog","Delete","Upload","ViewList","OREST_ENDPOINT","useTranslation","WebCmsGlobal","useSnackbar","FileViewer","label","open","handleClose","fileUrl","closeButtonText","width","FileUploadAndShow","id","name","required","disabled","fullWidth","size","variant","error","helperText","optionKey","defValue","trgQueryKey","t","GENERAL_SETTINGS","enqueueSnackbar","useToken","state","orest","currentUser","auth","access_token","openUploadDialog","setOpenUploadDialog","openViewerDialog","setOpenViewerDialog","setFileUrl","getIsFileExists","code","mid","apiUrl","OREST_URL","endpoint","RAFILE","token","params","query","limit","allhotels","then","rafileViewListResponse","status","data","length","catch","handleFileUpload","useFile","fileUpload","file","masterid","orsactive","hotelrefno","files","fileUploadResponse","count","url","replace","fileDelete","gid","rafileDeleteResponse","fileIsExists","fileIsUpload","handleOpenFile","STATIC_URL","shrink","readOnly","endAdornment"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react'\nimport {useSelector} from 'react-redux'\nimport { IconButton, InputAdornment, TextField, Button, Dialog, DialogTitle, DialogContent, DialogActions } from '@material-ui/core'\nimport { CloudUpload, Visibility } from '@material-ui/icons'\nimport { DropzoneDialog } from 'material-ui-dropzone'\nimport { Delete, Upload, ViewList } from '@webcms/orest'\nimport { OREST_ENDPOINT } from 'model/orest/constants'\nimport useTranslation from 'lib/translations/hooks/useTranslation'\nimport WebCmsGlobal from 'components/webcms-global'\nimport { useSnackbar } from 'notistack'\n\nconst FileViewer = ({label, open, handleClose, fileUrl, closeButtonText}) => {\n    return (\n        <Dialog fullWidth={true} maxWidth=\"xs\" open={open} onClose={handleClose}>\n            <DialogTitle id=\"max-width-dialog-title\">{label}</DialogTitle>\n            <DialogContent dividers>\n                {fileUrl ? <img src={fileUrl} style={{ width:'100%' }} />: 'Not file'}\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose} color=\"primary\">\n                    {closeButtonText}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nconst FileUploadAndShow = ({ id, name, label, required, disabled, fullWidth, size, variant, error, helperText, optionKey, defValue, trgQueryKey }) => {\n    const { t } = useTranslation()\n    const { GENERAL_SETTINGS } = useContext(WebCmsGlobal)\n    const { enqueueSnackbar } = useSnackbar()\n    const useToken = useSelector((state) => state?.orest?.currentUser?.auth.access_token || false)\n    const [ openUploadDialog, setOpenUploadDialog ] = useState(false)\n    const [ openViewerDialog, setOpenViewerDialog ] = useState(false)\n    const [ fileUrl, setFileUrl ] = useState(false)\n\n    const getIsFileExists = (code, mid) => {\n        return ViewList({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.RAFILE,\n            token: useToken,\n            params: {\n                query: `code::${code},masterid::${mid}`,\n                limit: 1,\n                allhotels: true,\n            },\n        }).then((rafileViewListResponse) => {\n            if (rafileViewListResponse.status === 200 && rafileViewListResponse?.data?.data.length > 0) {\n                return rafileViewListResponse.data.data[0]\n            } else {\n                return false\n            }\n        }).catch(() => {\n            return false\n        })\n    }\n\n    const handleFileUpload = async (useFile) => {\n        const fileUpload = (code, mid, trgQueryKey, file) => {\n            return Upload({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                token: useToken,\n                params: {\n                    code: code,\n                    masterid: mid,\n                    orsactive: true,\n                    hotelrefno: trgQueryKey\n                },\n                files: file,\n            }).then((fileUploadResponse) => {\n                if (fileUploadResponse.status === 200 && fileUploadResponse.data.count > 0) {\n                    return fileUploadResponse.data.data.url.replace('/var/otello', '').replace('/public', '')\n                } else {\n                    return false\n                }\n            }).catch(() => {\n                return false\n            })\n        }\n\n        const fileDelete = (gid, hotelrefno) => {\n            return Delete({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: OREST_ENDPOINT.RAFILE,\n                token: useToken,\n                gid: gid,\n                params: {\n                    hotelrefno: hotelrefno,\n                },\n            }).then((rafileDeleteResponse) => {\n                return rafileDeleteResponse.status === 200\n            }).catch(() => {\n                return false\n            })\n        }\n\n        const fileIsExists = await getIsFileExists(optionKey, defValue)\n        if(fileIsExists){\n            await fileDelete(fileIsExists.gid, fileIsExists.hotelrefno)\n        }\n\n        const fileIsUpload = await fileUpload(optionKey, defValue, trgQueryKey, useFile)\n        if(fileIsUpload){\n            enqueueSnackbar(t('str_fileSuccessfullyUploaded'), { variant: 'info' })\n            setOpenUploadDialog(false)\n        }else{\n            enqueueSnackbar(t('str_unexpectedProblem'), { variant: 'info' })\n        }\n    }\n\n    const handleOpenFile = async () => {\n        const fileIsExists = await getIsFileExists(optionKey, defValue)\n        if(fileIsExists){\n            setFileUrl(GENERAL_SETTINGS.STATIC_URL + fileIsExists.url.replace('/var/otello', '').replace('/public', ''))\n            setOpenViewerDialog(true)\n        }else {\n            enqueueSnackbar(t('str_fileDoesntExist'), { variant: 'info' })\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <TextField\n                id={id}\n                name={name}\n                label={label}\n                required={required}\n                disabled={disabled}\n                fullWidth={fullWidth}\n                size={size}\n                variant={variant}\n                error={error}\n                helperText={helperText}\n                InputLabelProps={{\n                    shrink: false,\n                }}\n                InputProps={{\n                    readOnly: true,\n                    endAdornment: (\n                        <InputAdornment position=\"end\">\n                            <IconButton title={t('str_upload')} disabled={disabled} onClick={() => setOpenUploadDialog(true)}>\n                                <CloudUpload />\n                            </IconButton>\n                            <IconButton title={t('str_view')} disabled={disabled} onClick={() => handleOpenFile()}>\n                                <Visibility />\n                            </IconButton>\n                        </InputAdornment>\n                    ),\n                }}\n            />\n            <DropzoneDialog\n                maxWidth=\"xs\"\n                open={openUploadDialog}\n                onSave={handleFileUpload}\n                acceptedFiles={['image/jpeg', 'image/png']}\n                showPreviews={true}\n                maxFileSize={5000000}\n                filesLimit={1}\n                onClose={() => setOpenUploadDialog(false)}\n            />\n            <FileViewer\n                label={label}\n                closeButtonText={t('str_close')}\n                open={openViewerDialog}\n                fileUrl={fileUrl}\n                handleClose={()=> setOpenViewerDialog(false)}\n            />\n        </React.Fragment>\n    )\n}\n\nexport default FileUploadAndShow"]},"metadata":{},"sourceType":"module"}