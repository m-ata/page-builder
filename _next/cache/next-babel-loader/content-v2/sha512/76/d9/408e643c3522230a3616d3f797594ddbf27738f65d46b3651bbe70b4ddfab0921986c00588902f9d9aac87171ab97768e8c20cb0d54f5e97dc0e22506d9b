{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/booking/components/RoomTypeAttributes.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport axios from 'axios';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Box, CircularProgress, Tooltip } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport WebCmsGlobal from 'components/webcms-global';\nimport { connect, useSelector } from 'react-redux';\nimport { setToState as _setToState, updateState as _updateState } from 'state/actions';\nimport useNotifications from 'model/notification/useNotifications';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nimport Icon from '@material-ui/core/Icon';\nimport { withStyles } from '@material-ui/core/styles';\nimport HairDryerIcon from 'public/imgs/icons/ibe/hair-dryer.svg';\nimport KettleIcon from 'public/imgs/icons/ibe/kettle.svg';\nimport IronIcon from 'public/imgs/icons/ibe/iron.svg';\nvar LightTooltip = withStyles(function (theme) {\n  return {\n    tooltip: {\n      backgroundColor: theme.palette.common.white,\n      color: 'rgba(0, 0, 0, 0.87)',\n      boxShadow: theme.shadows[1],\n      fontSize: 11\n    }\n  };\n})(Tooltip);\nvar useStyles = makeStyles(function (theme) {\n  return {\n    facilityItem: {\n      margin: '0 3px',\n      display: 'inline-block',\n      backgroundColor: '#ffffff',\n      border: '1px solid #eee',\n      padding: 5,\n      height: 35\n    },\n    attributeList: {\n      display: 'inline-flex',\n      padding: 0\n    },\n    attributeItem: {\n      position: 'relative',\n      listStyleType: 'none',\n      padding: '15px',\n      borderRight: '1px solid #ababab59',\n      '&:last-child': {\n        borderRight: 'none'\n      }\n    },\n    attributeIcon: {\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      '-ms-transform': 'translate(-50%, -50%)',\n      transform: 'translate(-50%, -50%)'\n    }\n  };\n});\n\nvar RoomTypeAttributes = function RoomTypeAttributes(props) {\n  _s();\n\n  var _useContext = useContext(WebCmsGlobal),\n      GENERAL_SETTINGS = _useContext.GENERAL_SETTINGS;\n\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useNotifications = useNotifications(),\n      showSuccess = _useNotifications.showSuccess,\n      showError = _useNotifications.showError;\n\n  var _useState = useState(false),\n      roomAttrLoading = _useState[0],\n      setRoomAttrLoading = _useState[1];\n\n  var roomtypeid = props.roomtypeid,\n      roomgid = props.roomgid,\n      state = props.state,\n      setToState = props.setToState,\n      updateState = props.updateState;\n  var loginfo = useSelector(function (state) {\n    return state.orest.currentUser && state.orest.currentUser.loginfo;\n  });\n  var clientParams = {};\n  clientParams.hotelrefno = loginfo && loginfo.hotelrefno || GENERAL_SETTINGS.HOTELREFNO;\n\n  if (loginfo && loginfo.hotelgidstr) {\n    clientParams.hoteltoken = loginfo && loginfo.hotelgidstr;\n  }\n\n  useEffect(function () {\n    var active = true;\n\n    if (active) {\n      var roomTypeIndex = state.roomTypeAttrList.findIndex(function (item) {\n        return Number(item.roomtypeid) === Number(roomtypeid);\n      });\n\n      if (roomTypeIndex === -1) {\n        setRoomAttrLoading(true);\n        axios({\n          url: GENERAL_SETTINGS.BASE_URL + 'api/ors/room/attributes',\n          method: 'post',\n          params: Object.assign({\n            gid: roomgid\n          }, clientParams)\n        }).then(function (roomAttrResponse) {\n          if (active) {\n            var roomAttrResponseData = roomAttrResponse.data;\n\n            if (roomAttrResponseData.success) {\n              var newRoomTypeAttr = state.roomTypeAttrList;\n              var newRoomTypeAttrData = [];\n              roomAttrResponseData.data.map(function (item, i) {\n                newRoomTypeAttrData.push({\n                  attrcode: item.attrcode,\n                  attrdesc: item.attrdesc\n                });\n              });\n              var roomTypeAttrFullList = {\n                roomtypeid: roomtypeid,\n                roomTypeAttrList: newRoomTypeAttrData\n              };\n              newRoomTypeAttr.push(roomTypeAttrFullList);\n              setToState('ibe', ['roomTypeAttrList'], newRoomTypeAttr);\n              setRoomAttrLoading(false);\n            } else {\n              setRoomAttrLoading(false);\n            }\n          }\n        });\n      }\n    }\n\n    return function () {\n      active = false;\n      setRoomAttrLoading(false);\n    };\n  }, []);\n  var roomAttrIcon = {\n    'SAFE': 'account_balance_wallet',\n    'MINIBAR': 'kitchen',\n    'JACUZZI': 'hot_tub',\n    'AIRCONDITIONING': 'ac_unit',\n    'FLATSCREENTV': 'tv',\n    'GARDEN_VIEW': 'local_florist',\n    'POOL_VIEW': 'pool',\n    'HANDICAP': 'accessible',\n    'BALCONY': 'deck',\n    'LARG_BALC': 'deck',\n    'NON_SMOKING': 'smoke_free',\n    'SMOKING': 'smoking_rooms',\n    'MOUNTAIN_VIEW': 'terrain',\n    'SILENT': 'meeting_room',\n    'SEA_VIEW': 'waves',\n    'RIVER_VIEW': 'sailing',\n    'PHONE CHARGER': 'charging_station',\n    'TELEPHONE': 'phone',\n    'WIFI': 'wifi',\n    'HAIR_DRYER': 'hair_dryer',\n    'KETTLE': 'kettle',\n    'DEFAULT': 'local_offer'\n  };\n\n  var getCustomIcon = function getCustomIcon(icon) {\n    switch (icon) {\n      case 'hair_dryer':\n        return HairDryerIcon;\n        break;\n\n      case 'kettle':\n        return KettleIcon;\n        break;\n\n      case 'iron':\n        return IronIcon;\n        break;\n\n      default:\n        return false;\n    }\n  };\n\n  if (roomAttrLoading) {\n    return __jsx(CircularProgress, {\n      size: 24,\n      className: classes.confirmButtonProgress,\n      color: \"inherit\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 16\n      }\n    });\n  } else {\n    if (state.roomTypeAttrList && state.roomTypeAttrList.findIndex(function (item) {\n      return Number(item.roomtypeid) === Number(roomtypeid);\n    }) > -1) {\n      var attrIndex = state.roomTypeAttrList.findIndex(function (item) {\n        return Number(item.roomtypeid) === Number(roomtypeid);\n      });\n      return __jsx(\"ul\", {\n        className: classes.attributeList,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 17\n        }\n      }, state.roomTypeAttrList[attrIndex].roomTypeAttrList.slice(0, 10).map(function (item, index) {\n        return __jsx(\"li\", {\n          className: classes.attributeItem,\n          key: index,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }\n        }, __jsx(LightTooltip, {\n          key: item.attrdesc,\n          title: item.attrdesc,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 29\n          }\n        }, roomAttrIcon[item.attrcode] ? getCustomIcon(roomAttrIcon[item.attrcode]) ? __jsx(\"img\", {\n          className: classes.attributeIcon,\n          src: getCustomIcon(roomAttrIcon[item.attrcode]),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 43\n          }\n        }) : __jsx(Icon, {\n          className: classes.attributeIcon,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 41\n          }\n        }, roomAttrIcon[item.attrcode]) : __jsx(Icon, {\n          className: classes.attributeIcon,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 37\n          }\n        }, roomAttrIcon['DEFAULT'])));\n      }));\n    } else {\n      return null;\n    }\n  }\n};\n\n_s(RoomTypeAttributes, \"BWZdaCNkj5mVkgPWS4p4WJGCZa0=\", false, function () {\n  return [useStyles, useTranslation, useNotifications, useSelector];\n});\n\n_c = RoomTypeAttributes;\nRoomTypeAttributes.propTypes = {};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    state: state.formReducer.ibe\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setToState: function setToState(stateType, stateName, value) {\n      return dispatch(_setToState(stateType, stateName, value));\n    },\n    updateState: function updateState(stateType, stateName, value) {\n      return dispatch(_updateState(stateType, stateName, value));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RoomTypeAttributes);\n\nvar _c;\n\n$RefreshReg$(_c, \"RoomTypeAttributes\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/booking/components/RoomTypeAttributes.js"],"names":["axios","React","useContext","useEffect","useState","Box","CircularProgress","Tooltip","makeStyles","WebCmsGlobal","connect","useSelector","setToState","updateState","useNotifications","useTranslation","Icon","withStyles","HairDryerIcon","KettleIcon","IronIcon","LightTooltip","theme","tooltip","backgroundColor","palette","common","white","color","boxShadow","shadows","fontSize","useStyles","facilityItem","margin","display","border","padding","height","attributeList","attributeItem","position","listStyleType","borderRight","attributeIcon","top","left","transform","RoomTypeAttributes","props","GENERAL_SETTINGS","classes","t","showSuccess","showError","roomAttrLoading","setRoomAttrLoading","roomtypeid","roomgid","state","loginfo","orest","currentUser","clientParams","hotelrefno","HOTELREFNO","hotelgidstr","hoteltoken","active","roomTypeIndex","roomTypeAttrList","findIndex","item","Number","url","BASE_URL","method","params","Object","assign","gid","then","roomAttrResponse","roomAttrResponseData","data","success","newRoomTypeAttr","newRoomTypeAttrData","map","i","push","attrcode","attrdesc","roomTypeAttrFullList","roomAttrIcon","getCustomIcon","icon","confirmButtonProgress","attrIndex","slice","index","propTypes","mapStateToProps","formReducer","ibe","mapDispatchToProps","dispatch","stateType","stateName","value"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport React, { useContext, useEffect, useState } from 'react'\nimport { Box, CircularProgress, Tooltip } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport WebCmsGlobal from 'components/webcms-global'\nimport { connect, useSelector } from 'react-redux'\nimport { setToState, updateState } from 'state/actions'\nimport useNotifications from 'model/notification/useNotifications'\nimport useTranslation from 'lib/translations/hooks/useTranslation'\nimport Icon from '@material-ui/core/Icon'\nimport { withStyles } from '@material-ui/core/styles'\nimport HairDryerIcon from 'public/imgs/icons/ibe/hair-dryer.svg'\nimport KettleIcon from 'public/imgs/icons/ibe/kettle.svg'\nimport IronIcon from 'public/imgs/icons/ibe/iron.svg'\n\nconst LightTooltip = withStyles((theme) => ({\n    tooltip: {\n        backgroundColor: theme.palette.common.white,\n        color: 'rgba(0, 0, 0, 0.87)',\n        boxShadow: theme.shadows[1],\n        fontSize: 11,\n    },\n}))(Tooltip)\n\nconst useStyles = makeStyles((theme) => ({\n    facilityItem: {\n        margin: '0 3px',\n        display: 'inline-block',\n        backgroundColor: '#ffffff',\n        border: '1px solid #eee',\n        padding: 5,\n        height: 35,\n    },\n    attributeList: {\n        display: 'inline-flex',\n        padding: 0,\n    },\n    attributeItem: {\n        position: 'relative',\n        listStyleType: 'none',\n        padding: '15px',\n        borderRight: '1px solid #ababab59',\n        '&:last-child': {\n            borderRight: 'none',\n        },\n    },\n    attributeIcon: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        '-ms-transform': 'translate(-50%, -50%)',\n        transform: 'translate(-50%, -50%)',\n    },\n}))\n\nconst RoomTypeAttributes = (props) => {\n    const { GENERAL_SETTINGS } = useContext(WebCmsGlobal)\n    const classes = useStyles()\n    const { t } = useTranslation()\n    const { showSuccess, showError } = useNotifications()\n    const [roomAttrLoading, setRoomAttrLoading] = useState(false)\n    const { roomtypeid, roomgid, state, setToState, updateState } = props\n\n    const loginfo = useSelector((state) => state.orest.currentUser && state.orest.currentUser.loginfo)\n\n    let clientParams = {}\n    clientParams.hotelrefno = loginfo && loginfo.hotelrefno || GENERAL_SETTINGS.HOTELREFNO\n\n    if(loginfo && loginfo.hotelgidstr){\n        clientParams.hoteltoken = loginfo && loginfo.hotelgidstr\n    }\n\n    useEffect(() => {\n        let active = true\n        if (active) {\n            const roomTypeIndex = state.roomTypeAttrList.findIndex(\n                (item) => Number(item.roomtypeid) === Number(roomtypeid)\n            )\n            if (roomTypeIndex === -1) {\n                setRoomAttrLoading(true)\n                axios({\n                    url: GENERAL_SETTINGS.BASE_URL + 'api/ors/room/attributes',\n                    method: 'post',\n                    params:Object.assign({\n                        gid: roomgid,\n                    }, clientParams)\n                }).then((roomAttrResponse) => {\n                    if (active) {\n                        const roomAttrResponseData = roomAttrResponse.data\n                        if (roomAttrResponseData.success) {\n                            let newRoomTypeAttr = state.roomTypeAttrList\n                            let newRoomTypeAttrData = []\n                            roomAttrResponseData.data.map((item, i) => {\n                                newRoomTypeAttrData.push({\n                                    attrcode: item.attrcode,\n                                    attrdesc: item.attrdesc,\n                                })\n                            })\n\n                            let roomTypeAttrFullList = {\n                                roomtypeid: roomtypeid,\n                                roomTypeAttrList: newRoomTypeAttrData,\n                            }\n                            newRoomTypeAttr.push(roomTypeAttrFullList)\n                            setToState('ibe', ['roomTypeAttrList'], newRoomTypeAttr)\n                            setRoomAttrLoading(false)\n                        } else {\n                            setRoomAttrLoading(false)\n                        }\n                    }\n                })\n            }\n        }\n\n        return () => {\n            active = false\n            setRoomAttrLoading(false)\n        }\n    }, [])\n\n    let roomAttrIcon = {\n        'SAFE': 'account_balance_wallet',\n        'MINIBAR': 'kitchen',\n        'JACUZZI': 'hot_tub',\n        'AIRCONDITIONING': 'ac_unit',\n        'FLATSCREENTV': 'tv',\n        'GARDEN_VIEW': 'local_florist',\n        'POOL_VIEW': 'pool',\n        'HANDICAP': 'accessible',\n        'BALCONY': 'deck',\n        'LARG_BALC': 'deck',\n        'NON_SMOKING': 'smoke_free',\n        'SMOKING': 'smoking_rooms',\n        'MOUNTAIN_VIEW': 'terrain',\n        'SILENT': 'meeting_room',\n        'SEA_VIEW': 'waves',\n        'RIVER_VIEW': 'sailing',\n        'PHONE CHARGER': 'charging_station',\n        'TELEPHONE': 'phone',\n        'WIFI': 'wifi',\n        'HAIR_DRYER': 'hair_dryer',\n        'KETTLE': 'kettle',\n        'DEFAULT': 'local_offer',\n    }\n\n    const getCustomIcon = (icon) =>{\n        switch (icon) {\n            case 'hair_dryer':\n                return HairDryerIcon\n                break\n            case 'kettle':\n                return KettleIcon\n                break\n            case 'iron':\n                return IronIcon\n                break\n            default:\n                return false\n        }\n    }\n\n    if (roomAttrLoading) {\n        return <CircularProgress size={24} className={classes.confirmButtonProgress} color=\"inherit\" />\n    } else {\n        if (\n            state.roomTypeAttrList &&\n            state.roomTypeAttrList.findIndex((item) => Number(item.roomtypeid) === Number(roomtypeid)) > -1\n        ) {\n            const attrIndex = state.roomTypeAttrList.findIndex((item) => Number(item.roomtypeid) === Number(roomtypeid))\n            return (\n                <ul className={classes.attributeList}>\n                    {state.roomTypeAttrList[attrIndex].roomTypeAttrList.slice(0, 10).map((item, index) => (\n                        <li className={classes.attributeItem} key={index}>\n                            <LightTooltip key={item.attrdesc} title={item.attrdesc}>\n                                {roomAttrIcon[item.attrcode] ? (\n                                    getCustomIcon(roomAttrIcon[item.attrcode])\n                                        ? <img className={classes.attributeIcon} src={getCustomIcon(roomAttrIcon[item.attrcode])} /> :\n                                        <Icon className={classes.attributeIcon}>{roomAttrIcon[item.attrcode]}</Icon>\n                                ) : (\n                                    <Icon className={classes.attributeIcon}>{roomAttrIcon['DEFAULT']}</Icon>\n                                )}\n                            </LightTooltip>\n                        </li>\n                    ))}\n                </ul>\n            )\n        } else {\n            return null\n        }\n    }\n}\n\nRoomTypeAttributes.propTypes = {}\n\nconst mapStateToProps = (state) => {\n    return {\n        state: state.formReducer.ibe,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value)),\n    updateState: (stateType, stateName, value) => dispatch(updateState(stateType, stateName, value)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RoomTypeAttributes)\n"]},"metadata":{},"sourceType":"module"}