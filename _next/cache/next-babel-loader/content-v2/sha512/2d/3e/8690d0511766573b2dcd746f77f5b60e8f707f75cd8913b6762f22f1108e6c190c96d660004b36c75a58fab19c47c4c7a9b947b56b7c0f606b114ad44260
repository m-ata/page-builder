{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/components/page/sections/image/Image.js\";\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect, useState } from 'react';\nimport { ViewList } from \"@webcms/orest\";\nimport WebCmsGlobal from \"components/webcms-global\";\nimport { useRouter } from \"next/router\";\nimport { OREST_ENDPOINT } from \"../../../../../../../model/orest/constants\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { connect, useSelector } from \"react-redux\";\nimport LoadingSpinner from \"../../../../../../LoadingSpinner\";\nimport ThumbnailSliderModal from \"../../../../../../website/pages/SliderModal\";\nimport clsx from 'clsx';\nimport { COLORS } from '../../../../constants';\nconst useStyles = makeStyles(() => ({\n  box: {\n    position: \"relative\",\n    textAlign: \"center\",\n    color: \"white\"\n  },\n  text: {\n    position: \"absolute\",\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    zIndex: 999,\n    height: '100%',\n    width: '100%'\n  },\n  textColor: {\n    color: props => {\n      var _props$imageComponent;\n\n      return props !== null && props !== void 0 && (_props$imageComponent = props.imageComponent) !== null && _props$imageComponent !== void 0 && _props$imageComponent.textColor ? props.imageComponent.textColor : \"#000000\";\n    }\n  },\n  image: {\n    width: '100%',\n    backgroundSize: \"cover\",\n    borderRadius: 5,\n    height: props => {\n      if (props.sectionType === 'threecol') return 200;\n      if (props.sectionType === 'twocol') return 250;\n      if (props.sectionType === 'fullcol') return 'auto';\n    }\n  },\n  cursorPointer: {\n    cursor: \"pointer\"\n  }\n}));\n\nconst Image = props => {\n  const {\n    imageComponent,\n    otherLangsImage,\n    state,\n    sectionType,\n    sectionImages\n  } = props;\n  const {\n    GENERAL_SETTINGS,\n    token\n  } = useContext(WebCmsGlobal);\n  const router = useRouter();\n  const clientToken = useSelector(state => state.orest.currentUser !== null ? state.orest.currentUser.auth.access_token : router.query.authToken);\n  const companyId = router.query.companyID || GENERAL_SETTINGS.HOTELREFNO;\n  const classes = useStyles(props);\n  const authToken = token || clientToken || router.query.authToken;\n  const {\n    0: isOpenSlider,\n    1: setIsOpenSlider\n  } = useState(false);\n  const {\n    0: image,\n    1: setImage\n  } = useState({});\n  const {\n    0: title,\n    1: setTitle\n  } = useState('');\n  const {\n    0: description,\n    1: setDescription\n  } = useState('');\n  const {\n    0: cta,\n    1: setCta\n  } = useState('');\n  const {\n    0: isRequestSend,\n    1: setRequestSend\n  } = useState(false);\n  const {\n    0: sliderImages,\n    1: setSliderImages\n  } = useState(sectionImages);\n  useEffect(() => {\n    if (imageComponent && imageComponent.gid) {\n      setRequestSend(true);\n      ViewList({\n        apiUrl: GENERAL_SETTINGS.OREST_URL,\n        endpoint: OREST_ENDPOINT.HCMITEMIMG,\n        token: authToken,\n        params: {\n          query: `gid:${imageComponent.gid}`,\n          sort: 'orderno',\n          hotelrefno: Number(companyId)\n        }\n      }).then(res => {\n        var _res$data, _res$data$data;\n\n        setRequestSend(false);\n\n        if (res.status === 200 && (res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : (_res$data$data = _res$data.data) === null || _res$data$data === void 0 ? void 0 : _res$data$data.length) > 0) {\n          setImage(res.data.data[0]);\n\n          if (state.langCode !== state.defaultLang && otherLangsImage) {\n            var _res$data$data$;\n\n            setTitle(otherLangsImage === null || otherLangsImage === void 0 ? void 0 : otherLangsImage.title);\n            setDescription(otherLangsImage === null || otherLangsImage === void 0 ? void 0 : otherLangsImage.description);\n            setCta((_res$data$data$ = res.data.data[0]) === null || _res$data$data$ === void 0 ? void 0 : _res$data$data$.cta);\n          } else {\n            var _res$data$data$2, _res$data$data$3, _res$data$data$4;\n\n            setTitle((_res$data$data$2 = res.data.data[0]) === null || _res$data$data$2 === void 0 ? void 0 : _res$data$data$2.title);\n            setDescription((_res$data$data$3 = res.data.data[0]) === null || _res$data$data$3 === void 0 ? void 0 : _res$data$data$3.description);\n            setCta((_res$data$data$4 = res.data.data[0]) === null || _res$data$data$4 === void 0 ? void 0 : _res$data$data$4.cta);\n          }\n        } else {\n          console.log(res);\n        }\n      });\n    }\n  }, [imageComponent, otherLangsImage]);\n  useEffect(() => {\n    if (sectionImages !== null && sectionImages !== void 0 && sectionImages.length) {\n      const gid = sectionImages.map(s => s.gid);\n      let updatedSliderImages = [];\n      gid.map(g => {\n        ViewList({\n          apiUrl: GENERAL_SETTINGS.OREST_URL,\n          endpoint: OREST_ENDPOINT.HCMITEMIMG,\n          token: authToken,\n          params: {\n            query: `gid:${g}`,\n            sort: 'orderno',\n            hotelrefno: Number(companyId)\n          }\n        }).then(res => {\n          if (res.status === 200) {\n            var _res$data2, _res$data2$data;\n\n            if (res !== null && res !== void 0 && (_res$data2 = res.data) !== null && _res$data2 !== void 0 && (_res$data2$data = _res$data2.data) !== null && _res$data2$data !== void 0 && _res$data2$data.length) {\n              updatedSliderImages.push(res.data.data[0]);\n              setSliderImages(updatedSliderImages);\n            }\n          }\n        });\n      });\n    }\n  }, [sectionImages]);\n\n  if (isRequestSend) {\n    return __jsx(LoadingSpinner, {\n      size: 40,\n      style: {\n        color: COLORS.secondary\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return __jsx(React.Fragment, null, image && __jsx(\"div\", {\n    onClick: () => {\n      if (sliderImages !== null && sliderImages !== void 0 && sliderImages.length) {\n        setIsOpenSlider(true);\n      }\n    },\n    className: clsx({\n      [classes.box]: true,\n      [classes.cursorPointer]: sliderImages === null || sliderImages === void 0 ? void 0 : sliderImages.length\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, cta ? __jsx(\"a\", {\n    href: cta,\n    target: '_blank',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 31\n    }\n  }, __jsx(\"img\", {\n    alt: 'img',\n    className: classes.image,\n    src: GENERAL_SETTINGS.STATIC_URL + (image === null || image === void 0 ? void 0 : image.fileurl),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 29\n    }\n  })) : __jsx(\"img\", {\n    alt: 'img',\n    className: classes.image,\n    src: GENERAL_SETTINGS.STATIC_URL + (image === null || image === void 0 ? void 0 : image.fileurl),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 32\n    }\n  }), __jsx(\"div\", {\n    className: classes.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }, title && __jsx(\"div\", {\n    className: classes.textColor,\n    dangerouslySetInnerHTML: {\n      __html: title\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 36\n    }\n  }), description && __jsx(\"div\", {\n    className: classes.textColor,\n    dangerouslySetInnerHTML: {\n      __html: description\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 42\n    }\n  }))), __jsx(ThumbnailSliderModal, {\n    open: isOpenSlider,\n    sliderTitle: (image === null || image === void 0 ? void 0 : image.title) || 'Image',\n    sliderDesc: image === null || image === void 0 ? void 0 : image.description,\n    onClose: e => setIsOpenSlider(e),\n    sliderImages: sliderImages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    state: state.formReducer.pageBuilder\n  };\n};\n\nexport default connect(mapStateToProps)(Image);","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/components/page/sections/image/Image.js"],"names":["React","useContext","useEffect","useState","ViewList","WebCmsGlobal","useRouter","OREST_ENDPOINT","makeStyles","connect","useSelector","LoadingSpinner","ThumbnailSliderModal","clsx","COLORS","useStyles","box","position","textAlign","color","text","top","left","transform","zIndex","height","width","textColor","props","imageComponent","image","backgroundSize","borderRadius","sectionType","cursorPointer","cursor","Image","otherLangsImage","state","sectionImages","GENERAL_SETTINGS","token","router","clientToken","orest","currentUser","auth","access_token","query","authToken","companyId","companyID","HOTELREFNO","classes","isOpenSlider","setIsOpenSlider","setImage","title","setTitle","description","setDescription","cta","setCta","isRequestSend","setRequestSend","sliderImages","setSliderImages","gid","apiUrl","OREST_URL","endpoint","HCMITEMIMG","params","sort","hotelrefno","Number","then","res","status","data","length","langCode","defaultLang","console","log","map","s","updatedSliderImages","g","push","secondary","STATIC_URL","fileurl","__html","e","mapStateToProps","formReducer","pageBuilder"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\nimport {ViewList} from \"@webcms/orest\";\nimport WebCmsGlobal from \"components/webcms-global\";\nimport {useRouter} from \"next/router\";\nimport {OREST_ENDPOINT} from \"../../../../../../../model/orest/constants\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {connect, useSelector} from \"react-redux\";\nimport LoadingSpinner from \"../../../../../../LoadingSpinner\";\nimport ThumbnailSliderModal from \"../../../../../../website/pages/SliderModal\";\nimport clsx from 'clsx'\nimport { COLORS } from '../../../../constants';\n\nconst useStyles = makeStyles(() => ({\n    box: {\n        position: \"relative\",\n        textAlign: \"center\",\n        color: \"white\",\n    },\n    text: {\n        position: \"absolute\",\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        zIndex: 999,\n        height: '100%',\n        width: '100%'\n    },\n    textColor: {\n        color: props => props?.imageComponent?.textColor ? props.imageComponent.textColor : \"#000000\"\n    },\n    image: {\n        width: '100%',\n        backgroundSize: \"cover\",\n        borderRadius: 5,\n        height: props => {\n            if (props.sectionType === 'threecol')\n                return  200\n            if (props.sectionType === 'twocol')\n                return 250\n            if (props.sectionType === 'fullcol')\n                return 'auto'\n        }\n    },\n    cursorPointer: {\n        cursor: \"pointer\"\n    }\n}))\n\nconst Image = (props) => {\n\n    const {\n        imageComponent,\n        otherLangsImage,\n        state,\n        sectionType,\n        sectionImages\n    } = props;\n\n    const {GENERAL_SETTINGS, token} = useContext(WebCmsGlobal);\n    const router = useRouter();\n    const clientToken = useSelector((state) => state.orest.currentUser !== null ? state.orest.currentUser.auth.access_token : router.query.authToken)\n    const companyId = router.query.companyID || GENERAL_SETTINGS.HOTELREFNO;\n    const classes = useStyles(props);\n    const authToken = token || clientToken || router.query.authToken;\n    const [ isOpenSlider, setIsOpenSlider ] = useState(false)\n\n    const [image, setImage] = useState({});\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [cta, setCta] = useState('');\n    const [isRequestSend, setRequestSend] = useState(false);\n    const [sliderImages, setSliderImages] = useState(sectionImages);\n\n    useEffect(() => {\n        if(imageComponent && imageComponent.gid) {\n            setRequestSend(true);\n            ViewList({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: OREST_ENDPOINT.HCMITEMIMG,\n                token: authToken,\n                params: {\n                    query: `gid:${imageComponent.gid}`,\n                    sort: 'orderno',\n                    hotelrefno:  Number(companyId)\n                }\n            }).then(res => {\n                setRequestSend(false);\n                if (res.status === 200 && res?.data?.data?.length > 0) {\n                    setImage(res.data.data[0]);\n                    if (state.langCode !== state.defaultLang && otherLangsImage) {\n                        setTitle(otherLangsImage?.title);\n                        setDescription(otherLangsImage?.description);\n                        setCta(res.data.data[0]?.cta);\n                    } else {\n                        setTitle(res.data.data[0]?.title);\n                        setDescription(res.data.data[0]?.description);\n                        setCta(res.data.data[0]?.cta);\n                    }\n                } else {\n                    console.log(res);\n                }\n            });\n        }\n    }, [imageComponent, otherLangsImage]);\n\n    useEffect(() => {\n        if (sectionImages?.length) {\n            const gid = sectionImages.map(s => s.gid);\n            let updatedSliderImages = [];\n            gid.map(g => {\n                ViewList({\n                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                    endpoint: OREST_ENDPOINT.HCMITEMIMG,\n                    token: authToken,\n                    params: {\n                        query: `gid:${g}`,\n                        sort: 'orderno',\n                        hotelrefno:  Number(companyId)\n                    }\n                }).then(res => {\n                    if (res.status === 200) {\n                        if (res?.data?.data?.length) {\n                            updatedSliderImages.push(res.data.data[0]);\n                            setSliderImages(updatedSliderImages)\n                        }\n                    }\n                })\n            })\n        }\n    }, [sectionImages]);\n\n    if (isRequestSend) {\n        return <LoadingSpinner size={40} style={{color: COLORS.secondary}} />\n    }\n\n    return (\n        <>\n            {\n                image &&\n                <div onClick={()=> {\n                    if (sliderImages?.length) {\n                        setIsOpenSlider(true);\n                    }\n                }} className={clsx({\n                    [classes.box]: true,\n                    [classes.cursorPointer]: sliderImages?.length,\n                })}>\n                    {\n                        cta ? <a href={cta} target={'_blank'}>\n                            <img alt={'img'} className={classes.image} src={GENERAL_SETTINGS.STATIC_URL + image?.fileurl} />\n                        </a> : <img alt={'img'} className={classes.image} src={GENERAL_SETTINGS.STATIC_URL + image?.fileurl} />\n                    }\n                    <div className={classes.text}>\n                        { title && <div className={classes.textColor} dangerouslySetInnerHTML={{__html: title}}></div> }\n                        { description && <div className={classes.textColor} dangerouslySetInnerHTML={{__html: description}}></div> }\n                    </div>\n                </div>\n            }\n            <ThumbnailSliderModal open={isOpenSlider} sliderTitle={image?.title || 'Image'} sliderDesc={image?.description} onClose={(e)=> setIsOpenSlider(e)} sliderImages={sliderImages} />\n        </>\n    )\n};\n\nconst mapStateToProps = state => {\n    return {\n        state: state.formReducer.pageBuilder\n    }\n};\n\nexport default connect(\n    mapStateToProps,\n)(Image);\n"]},"metadata":{},"sourceType":"module"}