{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/guest/account/AccountKiosk/components/Home.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { Container, Grid, Card, CardMedia, CardContent, Button, Typography, CardActionArea } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nimport Info from '../../../public/Info';\nimport Events from '../../../public/Events';\nimport BackIcon from '@material-ui/icons/KeyboardBackspace';\nimport Surveys from '../../MyProfile/Surveys';\nimport MyRequest from '../../MyRequest';\nimport { useSelector } from 'react-redux';\nimport LoginDialog from '../../../../LoginComponent/LoginDialog';\nimport { useSnackbar } from 'notistack';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    background: '#ffffff 0% 0% no-repeat padding-box',\n    boxShadow: '0px 3px 6px #122D3129',\n    paddingBottom: 10,\n    borderRadius: 10\n  },\n  nameText: {\n    color: theme.palette.primary.main\n  },\n  offerImage: {\n    height: 240,\n    borderRadius: 10\n  },\n  ctaButton: {\n    borderWidth: 2.3,\n    fontWeight: 400,\n    margin: '0 auto',\n    width: '95%',\n    '&:hover': {\n      borderWidth: 2.3,\n      fontWeight: 400\n    }\n  },\n  descriptionText: {\n    fontSize: 18,\n    color: '#707070',\n    textAlign: 'center',\n    padding: '0 6px',\n    height: 48,\n    overflow: 'auto'\n  },\n  paper: {\n    position: 'absolute',\n    top: 10,\n    background: '#E2F4F7 0% 0% no-repeat padding-box',\n    boxShadow: '0px 3px 6px #00000029',\n    borderRadius: '6px 6px 6px 0px'\n  },\n  price: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#2F3434'\n  },\n  priceBox: {\n    position: 'absolute',\n    top: 0,\n    background: '#ffffffc9',\n    marginTop: '20%',\n    padding: 7,\n    paddingBottom: 5,\n    paddingLeft: 10,\n    borderRadius: '0px 5px 5px 0px',\n    boxShadow: '3px 0 6px #17171766'\n  },\n  night: {\n    fontSize: 14,\n    color: '#2F3434',\n    marginLeft: 5\n  },\n  form: {\n    alignItems: 'center'\n  },\n  submit: {\n    backgroundColor: '#FFFFFF',\n    border: '2px solid #198C9B',\n    borderRadius: 6\n  },\n  book: {\n    fontSize: 16,\n    color: '#198C9B'\n  },\n  media: {\n    height: 221,\n    backgroundSize: 'cover'\n  }\n}));\n\nconst HomeCard = props => {\n  const classes = useStyles();\n  const {\n    title,\n    description,\n    imageUrl,\n    onClick\n  } = props;\n  const {\n    t\n  } = useTranslation();\n  return __jsx(Card, {\n    className: classes.root,\n    onClick: () => onClick(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, __jsx(CardActionArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, __jsx(CardMedia, {\n    className: classes.offerImage,\n    image: imageUrl,\n    alt: t(description),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }), __jsx(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, __jsx(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h2\",\n    align: \"center\",\n    className: classes.nameText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }, t(title)), __jsx(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, t(description)))));\n};\n\nconst Home = () => {\n  const {\n    t\n  } = useTranslation();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const {\n    0: useHomePage,\n    1: setHomePage\n  } = useState(false);\n  const {\n    0: isOpenLoginDialog,\n    1: setIsOpenLoginDialog\n  } = useState(false);\n  const isLogin = useSelector(state => state.orest.currentUser && state.orest.currentUser.auth) ? true : false;\n  const homeMenuList = [{\n    imageUrl: 'imgs/guest/kiosk/alacarte-res.png',\n    title: 'str_aLaCarteReservations',\n    description: '',\n    onClick: () => {\n      if (!isLogin) {\n        enqueueSnackbar(t('str_youMustLoginFirst'), {\n          variant: 'info'\n        });\n        setIsOpenLoginDialog(true);\n      } else {\n        setHomePage('ALACARTE_RES');\n      }\n    },\n    isHide: false\n  }, {\n    imageUrl: 'imgs/guest/kiosk/events-res.png',\n    title: 'str_eventReservations',\n    description: '',\n    onClick: () => {\n      if (!isLogin) {\n        enqueueSnackbar(t('str_youMustLoginFirst'), {\n          variant: 'info'\n        });\n        setIsOpenLoginDialog(true);\n      } else {\n        setHomePage('EVENTS_RES');\n      }\n    },\n    isHide: true\n  }, {\n    imageUrl: 'imgs/guest/kiosk/fill-survey.png',\n    title: 'str_fillSurvey',\n    description: '',\n    onClick: () => {\n      if (!isLogin) {\n        enqueueSnackbar(t('str_youMustLoginFirst'), {\n          variant: 'info'\n        });\n        setIsOpenLoginDialog(true);\n      } else {\n        setHomePage('FILL_SURVEY');\n      }\n    },\n    isHide: false\n  }, {\n    imageUrl: 'imgs/guest/kiosk/request.png',\n    title: 'str_request',\n    description: '',\n    onClick: () => {\n      if (!isLogin) {\n        enqueueSnackbar(t('str_youMustLoginFirst'), {\n          variant: 'info'\n        });\n        setIsOpenLoginDialog(true);\n      } else {\n        setHomePage('REQUEST');\n      }\n    },\n    isHide: false\n  }];\n\n  const renderMenuComponent = menuItem => {\n    let component;\n\n    switch (menuItem) {\n      case 'ALACARTE_RES':\n        component = __jsx(Info, {\n          onlyRes: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 29\n          }\n        });\n        break;\n\n      case 'EVENTS_RES':\n        component = __jsx(Events, {\n          onlyRes: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 29\n          }\n        });\n        break;\n\n      case 'FILL_SURVEY':\n        component = __jsx(Surveys, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 29\n          }\n        });\n        break;\n\n      case 'REQUEST':\n        component = __jsx(MyRequest, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 29\n          }\n        });\n        break;\n    }\n\n    return component;\n  };\n\n  return __jsx(Container, {\n    fixed: true,\n    maxWidth: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }\n  }, __jsx(LoginDialog, {\n    open: isOpenLoginDialog,\n    onClose: status => setIsOpenLoginDialog(status),\n    locationName: \"guest\",\n    isLoginWrapper: true,\n    disableRegister: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }), __jsx(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }\n  }, !useHomePage ? homeMenuList.filter(hMenuItem => !hMenuItem.isHide).map((item, index) => {\n    return __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 4,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 25\n      }\n    }, __jsx(HomeCard, {\n      imageUrl: item.imageUrl,\n      title: item.title,\n      description: item.description,\n      onClick: () => item.onClick(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 29\n      }\n    }));\n  }) : __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 21\n    }\n  }, __jsx(Button, {\n    style: {\n      marginBottom: 10\n    },\n    variant: \"outlined\",\n    color: \"primary\",\n    size: \"large\",\n    startIcon: __jsx(BackIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 40\n      }\n    }),\n    onClick: () => setHomePage(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 25\n    }\n  }, t('str_back')), renderMenuComponent(useHomePage))));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/guest/account/AccountKiosk/components/Home.js"],"names":["React","useEffect","useState","Container","Grid","Card","CardMedia","CardContent","Button","Typography","CardActionArea","makeStyles","useTranslation","Info","Events","BackIcon","Surveys","MyRequest","useSelector","LoginDialog","useSnackbar","useStyles","theme","root","background","boxShadow","paddingBottom","borderRadius","nameText","color","palette","primary","main","offerImage","height","ctaButton","borderWidth","fontWeight","margin","width","descriptionText","fontSize","textAlign","padding","overflow","paper","position","top","price","priceBox","marginTop","paddingLeft","night","marginLeft","form","alignItems","submit","backgroundColor","border","book","media","backgroundSize","HomeCard","props","classes","title","description","imageUrl","onClick","t","Home","enqueueSnackbar","useHomePage","setHomePage","isOpenLoginDialog","setIsOpenLoginDialog","isLogin","state","orest","currentUser","auth","homeMenuList","variant","isHide","renderMenuComponent","menuItem","component","status","filter","hMenuItem","map","item","index","marginBottom"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,IAA1B,EAAgCC,SAAhC,EAA2CC,WAA3C,EAAwDC,MAAxD,EAAiEC,UAAjE,EAA6EC,cAA7E,QAAmG,mBAAnG;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,cAAP,MAA2B,uCAA3B;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,QAAP,MAAqB,sCAArB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,WAAP,MAAwB,wCAAxB;AACA,SAASC,WAAT,QAA4B,WAA5B;AAEA,MAAMC,SAAS,GAAGV,UAAU,CAAEW,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,UAAU,EAAE,qCADV;AAEFC,IAAAA,SAAS,EAAE,uBAFT;AAGFC,IAAAA,aAAa,EAAE,EAHb;AAIFC,IAAAA,YAAY,EAAE;AAJZ,GAD+B;AAOrCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,KAAK,EAAEP,KAAK,CAACQ,OAAN,CAAcC,OAAd,CAAsBC;AADvB,GAP2B;AAUrCC,EAAAA,UAAU,EAAE;AACRC,IAAAA,MAAM,EAAE,GADA;AAERP,IAAAA,YAAY,EAAE;AAFN,GAVyB;AAcrCQ,EAAAA,SAAS,EAAE;AACPC,IAAAA,WAAW,EAAE,GADN;AAEPC,IAAAA,UAAU,EAAE,GAFL;AAGPC,IAAAA,MAAM,EAAE,QAHD;AAIPC,IAAAA,KAAK,EAAE,KAJA;AAKP,eAAW;AACPH,MAAAA,WAAW,EAAE,GADN;AAEPC,MAAAA,UAAU,EAAE;AAFL;AALJ,GAd0B;AAwBrCG,EAAAA,eAAe,EAAE;AACbC,IAAAA,QAAQ,EAAE,EADG;AAEbZ,IAAAA,KAAK,EAAE,SAFM;AAGba,IAAAA,SAAS,EAAE,QAHE;AAIbC,IAAAA,OAAO,EAAE,OAJI;AAKbT,IAAAA,MAAM,EAAE,EALK;AAMbU,IAAAA,QAAQ,EAAE;AANG,GAxBoB;AAgCrCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,QAAQ,EAAE,UADP;AAEHC,IAAAA,GAAG,EAAE,EAFF;AAGHvB,IAAAA,UAAU,EAAE,qCAHT;AAIHC,IAAAA,SAAS,EAAE,uBAJR;AAKHE,IAAAA,YAAY,EAAE;AALX,GAhC8B;AAuCrCqB,EAAAA,KAAK,EAAE;AACHP,IAAAA,QAAQ,EAAE,EADP;AAEHJ,IAAAA,UAAU,EAAE,MAFT;AAGHR,IAAAA,KAAK,EAAE;AAHJ,GAvC8B;AA4CrCoB,EAAAA,QAAQ,EAAE;AACNH,IAAAA,QAAQ,EAAE,UADJ;AAENC,IAAAA,GAAG,EAAE,CAFC;AAGNvB,IAAAA,UAAU,EAAE,WAHN;AAIN0B,IAAAA,SAAS,EAAE,KAJL;AAKNP,IAAAA,OAAO,EAAE,CALH;AAMNjB,IAAAA,aAAa,EAAE,CANT;AAONyB,IAAAA,WAAW,EAAE,EAPP;AAQNxB,IAAAA,YAAY,EAAE,iBARR;AASNF,IAAAA,SAAS,EAAE;AATL,GA5C2B;AAuDrC2B,EAAAA,KAAK,EAAE;AACHX,IAAAA,QAAQ,EAAE,EADP;AAEHZ,IAAAA,KAAK,EAAE,SAFJ;AAGHwB,IAAAA,UAAU,EAAE;AAHT,GAvD8B;AA4DrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,UAAU,EAAE;AADV,GA5D+B;AA+DrCC,EAAAA,MAAM,EAAE;AACJC,IAAAA,eAAe,EAAE,SADb;AAEJC,IAAAA,MAAM,EAAE,mBAFJ;AAGJ/B,IAAAA,YAAY,EAAE;AAHV,GA/D6B;AAoErCgC,EAAAA,IAAI,EAAE;AACFlB,IAAAA,QAAQ,EAAE,EADR;AAEFZ,IAAAA,KAAK,EAAE;AAFL,GApE+B;AAwErC+B,EAAAA,KAAK,EAAE;AACH1B,IAAAA,MAAM,EAAE,GADL;AAEH2B,IAAAA,cAAc,EAAE;AAFb;AAxE8B,CAAZ,CAAD,CAA5B;;AA8EA,MAAMC,QAAQ,GAAIC,KAAD,IAAU;AACvB,QAAMC,OAAO,GAAG3C,SAAS,EAAzB;AACA,QAAM;AAAE4C,IAAAA,KAAF;AAASC,IAAAA,WAAT;AAAsBC,IAAAA,QAAtB;AAAgCC,IAAAA;AAAhC,MAA4CL,KAAlD;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAQzD,cAAc,EAA5B;AAEA,SACI,MAAC,IAAD;AAAM,IAAA,SAAS,EAAEoD,OAAO,CAACzC,IAAzB;AAA+B,IAAA,OAAO,EAAE,MAAK6C,OAAO,EAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AACI,IAAA,SAAS,EAAEJ,OAAO,CAAC/B,UADvB;AAEI,IAAA,KAAK,EAAEkC,QAFX;AAGI,IAAA,GAAG,EAAEE,CAAC,CAACH,WAAD,CAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAMI,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AAAY,IAAA,YAAY,MAAxB;AAAyB,IAAA,OAAO,EAAC,IAAjC;AAAsC,IAAA,SAAS,EAAC,IAAhD;AAAqD,IAAA,KAAK,EAAC,QAA3D;AAAoE,IAAA,SAAS,EAAEF,OAAO,CAACpC,QAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKyC,CAAC,CAACJ,KAAD,CADN,CADJ,EAII,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,KAAK,EAAC,eAAlC;AAAkD,IAAA,SAAS,EAAC,GAA5D;AAAgE,IAAA,KAAK,EAAC,QAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKI,CAAC,CAACH,WAAD,CADN,CAJJ,CANJ,CADJ,CADJ;AAmBH,CAxBD;;AA0BA,MAAMI,IAAI,GAAG,MAAM;AACf,QAAM;AAAED,IAAAA;AAAF,MAAQzD,cAAc,EAA5B;AACA,QAAM;AAAE2D,IAAAA;AAAF,MAAsBnD,WAAW,EAAvC;AACA,QAAM;AAAA,OAACoD,WAAD;AAAA,OAAcC;AAAd,MAA6BvE,QAAQ,CAAC,KAAD,CAA3C;AACA,QAAM;AAAA,OAACwE,iBAAD;AAAA,OAAoBC;AAApB,MAA4CzE,QAAQ,CAAC,KAAD,CAA1D;AACA,QAAM0E,OAAO,GAAG1D,WAAW,CAAE2D,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,WAAZ,IAA2BF,KAAK,CAACC,KAAN,CAAYC,WAAZ,CAAwBC,IAA/D,CAAX,GAAkF,IAAlF,GAAyF,KAAzG;AAEA,QAAMC,YAAY,GAAG,CACjB;AACId,IAAAA,QAAQ,EAAE,mCADd;AAEIF,IAAAA,KAAK,EAAE,0BAFX;AAGIC,IAAAA,WAAW,EAAE,EAHjB;AAIIE,IAAAA,OAAO,EAAE,MAAK;AACV,UAAG,CAACQ,OAAJ,EAAY;AACRL,QAAAA,eAAe,CAACF,CAAC,CAAC,uBAAD,CAAF,EAA6B;AAAEa,UAAAA,OAAO,EAAE;AAAX,SAA7B,CAAf;AACAP,QAAAA,oBAAoB,CAAC,IAAD,CAApB;AACH,OAHD,MAGK;AACDF,QAAAA,WAAW,CAAC,cAAD,CAAX;AACH;AACJ,KAXL;AAYIU,IAAAA,MAAM,EAAE;AAZZ,GADiB,EAejB;AACIhB,IAAAA,QAAQ,EAAE,iCADd;AAEIF,IAAAA,KAAK,EAAE,uBAFX;AAGIC,IAAAA,WAAW,EAAE,EAHjB;AAIIE,IAAAA,OAAO,EAAE,MAAK;AACV,UAAG,CAACQ,OAAJ,EAAY;AACRL,QAAAA,eAAe,CAACF,CAAC,CAAC,uBAAD,CAAF,EAA6B;AAAEa,UAAAA,OAAO,EAAE;AAAX,SAA7B,CAAf;AACAP,QAAAA,oBAAoB,CAAC,IAAD,CAApB;AACH,OAHD,MAGK;AACDF,QAAAA,WAAW,CAAC,YAAD,CAAX;AACH;AACJ,KAXL;AAYIU,IAAAA,MAAM,EAAE;AAZZ,GAfiB,EA6BjB;AACIhB,IAAAA,QAAQ,EAAE,kCADd;AAEIF,IAAAA,KAAK,EAAE,gBAFX;AAGIC,IAAAA,WAAW,EAAE,EAHjB;AAIIE,IAAAA,OAAO,EAAE,MAAM;AACX,UAAG,CAACQ,OAAJ,EAAY;AACRL,QAAAA,eAAe,CAACF,CAAC,CAAC,uBAAD,CAAF,EAA6B;AAAEa,UAAAA,OAAO,EAAE;AAAX,SAA7B,CAAf;AACAP,QAAAA,oBAAoB,CAAC,IAAD,CAApB;AACH,OAHD,MAGK;AACDF,QAAAA,WAAW,CAAC,aAAD,CAAX;AACH;AACJ,KAXL;AAYIU,IAAAA,MAAM,EAAE;AAZZ,GA7BiB,EA2CjB;AACIhB,IAAAA,QAAQ,EAAE,8BADd;AAEIF,IAAAA,KAAK,EAAE,aAFX;AAGIC,IAAAA,WAAW,EAAE,EAHjB;AAIIE,IAAAA,OAAO,EAAE,MAAM;AACX,UAAG,CAACQ,OAAJ,EAAY;AACRL,QAAAA,eAAe,CAACF,CAAC,CAAC,uBAAD,CAAF,EAA6B;AAAEa,UAAAA,OAAO,EAAE;AAAX,SAA7B,CAAf;AACAP,QAAAA,oBAAoB,CAAC,IAAD,CAApB;AACH,OAHD,MAGK;AACDF,QAAAA,WAAW,CAAC,SAAD,CAAX;AACH;AACJ,KAXL;AAYIU,IAAAA,MAAM,EAAE;AAZZ,GA3CiB,CAArB;;AA2DA,QAAMC,mBAAmB,GAAIC,QAAD,IAAc;AACtC,QAAIC,SAAJ;;AACA,YAAQD,QAAR;AACI,WAAK,cAAL;AACIC,QAAAA,SAAS,GAAG,MAAC,IAAD;AAAM,UAAA,OAAO,EAAE,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAZ;AACA;;AACJ,WAAK,YAAL;AACIA,QAAAA,SAAS,GAAG,MAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAZ;AACA;;AACJ,WAAK,aAAL;AACIA,QAAAA,SAAS,GAAG,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAZ;AACA;;AACJ,WAAK,SAAL;AACIA,QAAAA,SAAS,GAAG,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAZ;AACA;AAZR;;AAeA,WAAOA,SAAP;AACH,GAlBD;;AAoBA,SACI,MAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAiB,IAAA,QAAQ,EAAC,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,WAAD;AAAa,IAAA,IAAI,EAAEZ,iBAAnB;AAAsC,IAAA,OAAO,EAAGa,MAAD,IAAYZ,oBAAoB,CAACY,MAAD,CAA/E;AAAyF,IAAA,YAAY,EAAC,OAAtG;AAA8G,IAAA,cAAc,MAA5H;AAA6H,IAAA,eAAe,MAA5I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAACf,WAAD,GAAeS,YAAY,CAACO,MAAb,CAAoBC,SAAS,IAAI,CAACA,SAAS,CAACN,MAA5C,EAAoDO,GAApD,CAAwD,CAACC,IAAD,EAAOC,KAAP,KAAgB;AACpF,WACI,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,EAAE,EAAE,CAAvB;AAA0B,MAAA,EAAE,EAAE,CAA9B;AAAiC,MAAA,GAAG,EAAEA,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,QAAD;AACI,MAAA,QAAQ,EAAED,IAAI,CAACxB,QADnB;AAEI,MAAA,KAAK,EAAEwB,IAAI,CAAC1B,KAFhB;AAGI,MAAA,WAAW,EAAE0B,IAAI,CAACzB,WAHtB;AAII,MAAA,OAAO,EAAE,MAAKyB,IAAI,CAACvB,OAAL,EAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAUH,GAXe,CAAf,GAYG,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AACI,IAAA,KAAK,EAAE;AACHyB,MAAAA,YAAY,EAAE;AADX,KADX;AAII,IAAA,OAAO,EAAC,UAJZ;AAKI,IAAA,KAAK,EAAC,SALV;AAMI,IAAA,IAAI,EAAC,OANT;AAOI,IAAA,SAAS,EAAE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPf;AAQI,IAAA,OAAO,EAAE,MAAKpB,WAAW,CAAC,KAAD,CAR7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUKJ,CAAC,CAAC,UAAD,CAVN,CADJ,EAaKe,mBAAmB,CAACZ,WAAD,CAbxB,CAbR,CAFJ,CADJ;AAmCH,CAzHD;;AA2HA,eAAeF,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Container, Grid, Card, CardMedia, CardContent, Button,  Typography, CardActionArea } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport useTranslation from 'lib/translations/hooks/useTranslation'\nimport Info from '../../../public/Info'\nimport Events from '../../../public/Events'\nimport BackIcon from '@material-ui/icons/KeyboardBackspace'\nimport Surveys from '../../MyProfile/Surveys'\nimport MyRequest from '../../MyRequest'\nimport { useSelector } from 'react-redux'\nimport LoginDialog from '../../../../LoginComponent/LoginDialog'\nimport { useSnackbar } from 'notistack'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        background: '#ffffff 0% 0% no-repeat padding-box',\n        boxShadow: '0px 3px 6px #122D3129',\n        paddingBottom: 10,\n        borderRadius: 10\n    },\n    nameText: {\n        color: theme.palette.primary.main,\n    },\n    offerImage: {\n        height: 240,\n        borderRadius: 10\n    },\n    ctaButton: {\n        borderWidth: 2.3,\n        fontWeight: 400,\n        margin: '0 auto',\n        width: '95%',\n        '&:hover': {\n            borderWidth: 2.3,\n            fontWeight: 400,\n        }\n    },\n    descriptionText: {\n        fontSize: 18,\n        color: '#707070',\n        textAlign: 'center',\n        padding: '0 6px',\n        height: 48,\n        overflow: 'auto',\n    },\n    paper: {\n        position: 'absolute',\n        top: 10,\n        background: '#E2F4F7 0% 0% no-repeat padding-box',\n        boxShadow: '0px 3px 6px #00000029',\n        borderRadius: '6px 6px 6px 0px',\n    },\n    price: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        color: '#2F3434',\n    },\n    priceBox: {\n        position: 'absolute',\n        top: 0,\n        background: '#ffffffc9',\n        marginTop: '20%',\n        padding: 7,\n        paddingBottom: 5,\n        paddingLeft: 10,\n        borderRadius: '0px 5px 5px 0px',\n        boxShadow: '3px 0 6px #17171766'\n    },\n    night: {\n        fontSize: 14,\n        color: '#2F3434',\n        marginLeft: 5,\n    },\n    form: {\n        alignItems: 'center',\n    },\n    submit: {\n        backgroundColor: '#FFFFFF',\n        border: '2px solid #198C9B',\n        borderRadius: 6,\n    },\n    book: {\n        fontSize: 16,\n        color: '#198C9B',\n    },\n    media: {\n        height: 221,\n        backgroundSize: 'cover',\n    },\n}))\n\nconst HomeCard = (props) =>{\n    const classes = useStyles()\n    const { title, description, imageUrl, onClick } = props\n    const { t } = useTranslation()\n\n    return (\n        <Card className={classes.root} onClick={()=> onClick()}>\n            <CardActionArea>\n                <CardMedia\n                    className={classes.offerImage}\n                    image={imageUrl}\n                    alt={t(description)}\n                />\n                <CardContent>\n                    <Typography gutterBottom variant='h5' component='h2' align='center' className={classes.nameText}>\n                        {t(title)}\n                     </Typography>\n                    <Typography variant='body2' color='textSecondary' component='p' align='center'>\n                        {t(description)}\n                    </Typography>\n                </CardContent>\n            </CardActionArea>\n        </Card>\n    )\n}\n\nconst Home = () => {\n    const { t } = useTranslation()\n    const { enqueueSnackbar } = useSnackbar()\n    const [useHomePage, setHomePage] = useState(false)\n    const [isOpenLoginDialog, setIsOpenLoginDialog] = useState(false)\n    const isLogin = useSelector((state) => state.orest.currentUser && state.orest.currentUser.auth) ? true : false\n\n    const homeMenuList = [\n        {\n            imageUrl: 'imgs/guest/kiosk/alacarte-res.png',\n            title: 'str_aLaCarteReservations',\n            description: '',\n            onClick: ()=> {\n                if(!isLogin){\n                    enqueueSnackbar(t('str_youMustLoginFirst'), { variant: 'info' })\n                    setIsOpenLoginDialog(true)\n                }else{\n                    setHomePage('ALACARTE_RES')\n                }\n            },\n            isHide: false\n        },\n        {\n            imageUrl: 'imgs/guest/kiosk/events-res.png',\n            title: 'str_eventReservations',\n            description: '',\n            onClick: ()=> {\n                if(!isLogin){\n                    enqueueSnackbar(t('str_youMustLoginFirst'), { variant: 'info' })\n                    setIsOpenLoginDialog(true)\n                }else{\n                    setHomePage('EVENTS_RES')\n                }\n            },\n            isHide: true\n        },\n        {\n            imageUrl: 'imgs/guest/kiosk/fill-survey.png',\n            title: 'str_fillSurvey',\n            description: '',\n            onClick: () => {\n                if(!isLogin){\n                    enqueueSnackbar(t('str_youMustLoginFirst'), { variant: 'info' })\n                    setIsOpenLoginDialog(true)\n                }else{\n                    setHomePage('FILL_SURVEY')\n                }\n            },\n            isHide: false\n        },\n        {\n            imageUrl: 'imgs/guest/kiosk/request.png',\n            title: 'str_request',\n            description: '',\n            onClick: () => {\n                if(!isLogin){\n                    enqueueSnackbar(t('str_youMustLoginFirst'), { variant: 'info' })\n                    setIsOpenLoginDialog(true)\n                }else{\n                    setHomePage('REQUEST')\n                }\n            },\n            isHide: false\n        }\n    ]\n\n    const renderMenuComponent = (menuItem) => {\n        let component\n        switch (menuItem) {\n            case 'ALACARTE_RES':\n                component = <Info onlyRes={true} />\n                break\n            case 'EVENTS_RES':\n                component = <Events onlyRes={true} />\n                break\n            case 'FILL_SURVEY':\n                component = <Surveys />\n                break\n            case 'REQUEST':\n                component = <MyRequest />\n                break\n        }\n\n        return component\n    }\n\n    return (\n        <Container fixed maxWidth=\"lg\">\n            <LoginDialog open={isOpenLoginDialog} onClose={(status) => setIsOpenLoginDialog(status)} locationName='guest' isLoginWrapper disableRegister/>\n            <Grid container spacing={3}>\n                {!useHomePage ? homeMenuList.filter(hMenuItem => !hMenuItem.isHide).map((item, index)=> {\n                    return (\n                        <Grid item xs={12} sm={6} md={4} key={index}>\n                            <HomeCard\n                                imageUrl={item.imageUrl}\n                                title={item.title}\n                                description={item.description}\n                                onClick={()=> item.onClick()}\n                            />\n                        </Grid>\n                    )\n                }):\n                    <React.Fragment>\n                        <Button\n                            style={{\n                                marginBottom: 10\n                            }}\n                            variant=\"outlined\"\n                            color=\"primary\"\n                            size=\"large\"\n                            startIcon={<BackIcon />}\n                            onClick={()=> setHomePage(false)}\n                        >\n                            {t('str_back')}\n                        </Button>\n                        {renderMenuComponent(useHomePage)}\n                    </React.Fragment>\n                }\n            </Grid>\n        </Container>\n    )\n}\n\nexport default Home"]},"metadata":{},"sourceType":"module"}