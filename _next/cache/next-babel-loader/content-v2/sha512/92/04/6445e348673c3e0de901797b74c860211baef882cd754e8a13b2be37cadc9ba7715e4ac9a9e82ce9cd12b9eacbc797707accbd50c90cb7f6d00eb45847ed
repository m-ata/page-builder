{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/mata/app-cloudweb/components/common/base-loader.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { UseOrest } from '@webcms/orest';\nimport { REQUEST_METHOD_CONST } from 'model/orest/constants';\nimport { useOrestAction } from 'model/orest';\nimport { useSnackbar } from 'notistack';\nimport WebCmsGlobal from 'components/webcms-global';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nexport default function BaseLoader(props) {\n  _s();\n\n  var _useContext = useContext(WebCmsGlobal),\n      GENERAL_SETTINGS = _useContext.GENERAL_SETTINGS;\n\n  var token = useSelector(function (state) {\n    var _state$orest, _state$orest$currentU, _state$orest$currentU2;\n\n    return (state === null || state === void 0 ? void 0 : (_state$orest = state.orest) === null || _state$orest === void 0 ? void 0 : (_state$orest$currentU = _state$orest.currentUser) === null || _state$orest$currentU === void 0 ? void 0 : (_state$orest$currentU2 = _state$orest$currentU.auth) === null || _state$orest$currentU2 === void 0 ? void 0 : _state$orest$currentU2.access_token) || false;\n  });\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useOrestAction = useOrestAction(),\n      setOrestState = _useOrestAction.setOrestState,\n      deleteOrestCurrentUserInfo = _useOrestAction.deleteOrestCurrentUserInfo;\n\n  var _useSnackbar = useSnackbar(),\n      enqueueSnackbar = _useSnackbar.enqueueSnackbar;\n\n  var checkClientToken = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return UseOrest({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: 'auth/checktoken',\n                token: token,\n                method: REQUEST_METHOD_CONST.POST,\n                params: {\n                  token: token,\n                  hotelrefno: ''\n                }\n              }).then(function (checkTokenResponse) {\n                var _checkTokenResponse$d;\n\n                if (checkTokenResponse !== null && checkTokenResponse !== void 0 && (_checkTokenResponse$d = checkTokenResponse.data) !== null && _checkTokenResponse$d !== void 0 && _checkTokenResponse$d.active) {\n                  return true;\n                } else {\n                  enqueueSnackbar(t('str_sessionTimeoutLoginAgain'), {\n                    variant: 'info'\n                  });\n                  deleteOrestCurrentUserInfo();\n                  return false;\n                }\n              })[\"catch\"](function () {\n                enqueueSnackbar(t('str_sessionTimeoutLoginAgain'), {\n                  variant: 'info'\n                });\n                deleteOrestCurrentUserInfo();\n                return false;\n              });\n\n            case 2:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function checkClientToken() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var getHotelWorkDateTime = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(hotelrefno) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return UseOrest({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: 'info/portal',\n                token: token,\n                params: {\n                  hotelrefno: hotelrefno\n                }\n              }).then(function (infoPortalResponse) {\n                var _infoPortalResponse$d;\n\n                if (infoPortalResponse !== null && infoPortalResponse !== void 0 && (_infoPortalResponse$d = infoPortalResponse.data) !== null && _infoPortalResponse$d !== void 0 && _infoPortalResponse$d.data) {\n                  setOrestState(['hotelWorkDateTime'], infoPortalResponse.data.data);\n                  return true;\n                } else {\n                  setOrestState(['hotelWorkDateTime'], false);\n                  return false;\n                }\n              })[\"catch\"](function () {\n                setOrestState(['hotelWorkDateTime'], false);\n                return false;\n              });\n\n            case 2:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function getHotelWorkDateTime(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    var active = true;\n\n    if (active && token) {\n      var isTokenValid = checkClientToken();\n\n      if (isTokenValid) {\n        getHotelWorkDateTime();\n      }\n    }\n\n    return function () {\n      active = false;\n    };\n  }, []);\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, props.children);\n}\n\n_s(BaseLoader, \"tqTgWlWpZZRFK/fboQXTdsH3aNo=\", false, function () {\n  return [useSelector, useTranslation, useOrestAction, useSnackbar];\n});\n\n_c = BaseLoader;\n\nvar _c;\n\n$RefreshReg$(_c, \"BaseLoader\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/common/base-loader.js"],"names":["React","useContext","useEffect","useSelector","UseOrest","REQUEST_METHOD_CONST","useOrestAction","useSnackbar","WebCmsGlobal","useTranslation","BaseLoader","props","GENERAL_SETTINGS","token","state","orest","currentUser","auth","access_token","t","setOrestState","deleteOrestCurrentUserInfo","enqueueSnackbar","checkClientToken","apiUrl","OREST_URL","endpoint","method","POST","params","hotelrefno","then","checkTokenResponse","data","active","variant","getHotelWorkDateTime","infoPortalResponse","isTokenValid","children"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { UseOrest } from '@webcms/orest'\nimport { REQUEST_METHOD_CONST } from 'model/orest/constants'\nimport { useOrestAction } from 'model/orest'\nimport { useSnackbar } from 'notistack'\nimport WebCmsGlobal from 'components/webcms-global'\nimport useTranslation from 'lib/translations/hooks/useTranslation'\n\nexport default function BaseLoader(props) {\n    const { GENERAL_SETTINGS } = useContext(WebCmsGlobal)\n    const token = useSelector((state) => state?.orest?.currentUser?.auth?.access_token || false)\n    const { t } = useTranslation()\n    const { setOrestState, deleteOrestCurrentUserInfo } = useOrestAction()\n    const { enqueueSnackbar } = useSnackbar()\n\n    const checkClientToken = async () => {\n        return await UseOrest({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: 'auth/checktoken',\n            token: token,\n            method: REQUEST_METHOD_CONST.POST,\n            params: {\n                token: token,\n                hotelrefno: '',\n            },\n        }).then((checkTokenResponse) => {\n            if (checkTokenResponse?.data?.active) {\n                return true\n            }else{\n                enqueueSnackbar(t('str_sessionTimeoutLoginAgain'), { variant: 'info' })\n                deleteOrestCurrentUserInfo()\n                return false\n            }\n        }).catch(() => {\n            enqueueSnackbar(t('str_sessionTimeoutLoginAgain'), { variant: 'info' })\n            deleteOrestCurrentUserInfo()\n            return false\n        })\n    }\n\n    const getHotelWorkDateTime = async (hotelrefno) => {\n        return await UseOrest({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: 'info/portal',\n            token: token,\n            params: {\n                hotelrefno: hotelrefno,\n            },\n        }).then((infoPortalResponse) => {\n            if (infoPortalResponse?.data?.data) {\n                setOrestState(['hotelWorkDateTime'], infoPortalResponse.data.data)\n                return true\n            }else{\n                setOrestState(['hotelWorkDateTime'], false)\n                return false\n            }\n        }).catch(() => {\n            setOrestState(['hotelWorkDateTime'], false)\n            return false\n        })\n    }\n\n    useEffect(() => {\n        let active = true\n\n        if(active && token) {\n            const isTokenValid = checkClientToken()\n            if(isTokenValid){\n                getHotelWorkDateTime()\n            }\n        }\n\n        return () => {\n            active = false\n        }\n\n    }, [])\n\n    return (\n        <React.Fragment>\n            {props.children}\n        </React.Fragment>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}