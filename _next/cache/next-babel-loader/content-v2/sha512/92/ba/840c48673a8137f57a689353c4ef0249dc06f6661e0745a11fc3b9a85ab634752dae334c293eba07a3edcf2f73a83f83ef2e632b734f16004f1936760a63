{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/components/page/sections/map/Map.js\";\nvar __jsx = React.createElement;\nimport React, { memo, useContext, useEffect, useRef, useState } from 'react';\nimport WebCmsGlobal from \"../../../../../../webcms-global\";\nimport { GoogleMap, withScriptjs, withGoogleMap, Marker } from \"react-google-maps\";\nimport InfoBox from \"react-google-maps/lib/components/addons/InfoBox\";\n\nconst Map = props => {\n  const {\n    handleCmponent,\n    langCode,\n    defaultCode\n  } = props;\n  const {\n    0: center,\n    1: setCenter\n  } = useState({\n    lat: 54.68916,\n    lng: 25.2798\n  });\n  const {\n    0: infoBoxOpen,\n    1: setInfoBoxOpen\n  } = useState(false);\n  const refMap = useRef(null);\n  const {\n    GENERAL_SETTINGS\n  } = useContext(WebCmsGlobal);\n  useEffect(() => {\n    GENERAL_SETTINGS && GENERAL_SETTINGS.hotelLocation && setCenter(GENERAL_SETTINGS.hotelLocation);\n  }, [GENERAL_SETTINGS]);\n  useEffect(() => {\n    if (handleCmponent && langCode && defaultCode) {\n      if (langCode !== defaultCode) {\n        handleCmponent({\n          map: true\n        });\n      }\n    }\n  }, []);\n  return __jsx(GoogleMap, {\n    ref: refMap,\n    zoom: 5,\n    center: center,\n    options: {\n      streetViewControl: false,\n      gestureHandling: \"greedy\",\n      zoomControl: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, __jsx(Marker, {\n    position: center,\n    clickable: true,\n    onClick: () => setInfoBoxOpen(!infoBoxOpen),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, infoBoxOpen && __jsx(InfoBox, {\n    onCloseClick: () => setInfoBoxOpen(false),\n    options: {\n      closeBoxURL: ``,\n      enableEventPropagation: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 36\n    }\n  }, __jsx(\"div\", {\n    style: {\n      backgroundColor: `silver`,\n      opacity: 0.75,\n      padding: `12px`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    style: {\n      fontSize: `10px`,\n      fontColor: `#08233B`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 29\n    }\n  }, `Longitude ${center.lng}, Latitude ${center.lat})`)))));\n};\n\nconst memorizedMap = /*#__PURE__*/memo(withScriptjs(withGoogleMap(Map)));\nexport default memorizedMap;","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/components/page/sections/map/Map.js"],"names":["React","memo","useContext","useEffect","useRef","useState","WebCmsGlobal","GoogleMap","withScriptjs","withGoogleMap","Marker","InfoBox","Map","props","handleCmponent","langCode","defaultCode","center","setCenter","lat","lng","infoBoxOpen","setInfoBoxOpen","refMap","GENERAL_SETTINGS","hotelLocation","map","streetViewControl","gestureHandling","zoomControl","closeBoxURL","enableEventPropagation","backgroundColor","opacity","padding","fontSize","fontColor","memorizedMap"],"mappings":"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","sourcesContent":["import React, { memo, useContext, useEffect, useRef, useState } from 'react'\nimport WebCmsGlobal from \"../../../../../../webcms-global\";\nimport {\n    GoogleMap,\n    withScriptjs,\n    withGoogleMap,\n    Marker\n} from \"react-google-maps\";\nimport InfoBox from \"react-google-maps/lib/components/addons/InfoBox\";\n\nconst Map = (props) => {\n\n    const {handleCmponent, langCode, defaultCode} = props;\n    const [center, setCenter] = useState({lat: 54.68916, lng: 25.2798});\n    const [infoBoxOpen, setInfoBoxOpen] = useState(false)\n    const refMap = useRef(null);\n\n    const { GENERAL_SETTINGS } = useContext(WebCmsGlobal);\n\n    useEffect(() => {\n        GENERAL_SETTINGS && GENERAL_SETTINGS.hotelLocation && setCenter(GENERAL_SETTINGS.hotelLocation)\n    }, [GENERAL_SETTINGS]);\n\n    useEffect(() => {\n        if (handleCmponent && langCode && defaultCode) {\n            if (langCode !== defaultCode) {\n                handleCmponent({\n                    map: true\n                });\n            }\n        }\n    }, []);\n\n    return (\n        <GoogleMap\n            ref={refMap}\n            zoom={5}\n            center={center}\n            options={{\n                streetViewControl:false,\n                gestureHandling: \"greedy\",\n                zoomControl: false,\n            }}\n        >\n            <Marker\n                position={center}\n                clickable={true}\n                onClick={() => setInfoBoxOpen(!infoBoxOpen)}\n            >\n                {\n                    infoBoxOpen && <InfoBox\n                        onCloseClick={() => setInfoBoxOpen(false)}\n                        options={{ closeBoxURL: ``, enableEventPropagation: true }}\n                    >\n                        <div style={{ backgroundColor: `silver`, opacity: 0.75, padding: `12px` }}>\n                            <div style={{ fontSize: `10px`, fontColor: `#08233B` }}>\n                                {`Longitude ${center.lng}, Latitude ${center.lat})`}\n                            </div>\n                        </div>\n                    </InfoBox>\n                }\n            </Marker>\n        </GoogleMap>\n    );\n}\n\nconst memorizedMap = memo(withScriptjs(withGoogleMap(Map)))\n\nexport default memorizedMap"]},"metadata":{},"sourceType":"module"}