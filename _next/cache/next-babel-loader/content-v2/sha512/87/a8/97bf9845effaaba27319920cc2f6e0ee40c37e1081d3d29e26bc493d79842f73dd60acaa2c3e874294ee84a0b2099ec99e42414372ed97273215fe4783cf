{"ast":null,"code":"import _defineProperty from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/mata/app-cloudweb/components/guest/public/components/info/event-reservation/menu-card.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport { connect } from 'react-redux';\nimport clsx from 'clsx';\nimport { setToState as _setToState, updateState as _updateState } from 'state/actions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport WebCmsGlobal from \"../../../../../webcms-global\";\nvar useStyles = makeStyles(function (theme) {\n  var _image;\n\n  return {\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      minWidth: 300,\n      width: '100%',\n      padding: 15\n    },\n    image: (_image = {\n      position: 'relative',\n      height: 100\n    }, _defineProperty(_image, theme.breakpoints.down('xs'), {\n      width: '100% !important',\n      // Overrides inline-style\n      height: 100\n    }), _defineProperty(_image, '&:hover, &$focusVisible', {\n      zIndex: 1,\n      '& $imageBackdrop': {\n        opacity: 0.3\n      },\n      '& $imageMarked': {\n        opacity: 0\n      },\n      '& $imageTitle': {\n        border: '4px solid currentColor'\n      }\n    }), _image),\n    focusVisible: {},\n    imageButton: {\n      position: 'absolute',\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      color: theme.palette.common.white\n    },\n    imageSrc: {\n      position: 'absolute',\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n      backgroundSize: 'cover',\n      backgroundPosition: 'center 40%',\n      borderRadius: 10\n    },\n    imageBackdrop: {\n      position: 'absolute',\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n      backgroundColor: theme.palette.common.black,\n      opacity: 0.6,\n      transition: theme.transitions.create('opacity'),\n      borderRadius: 10\n    },\n    imageTitle: {\n      position: 'relative',\n      padding: \"\".concat(theme.spacing(2), \"px \").concat(theme.spacing(4), \"px \").concat(theme.spacing(1) + 6, \"px\")\n    },\n    imageMarked: {\n      height: 3,\n      width: 18,\n      backgroundColor: theme.palette.common.white,\n      position: 'absolute',\n      bottom: -2,\n      left: 'calc(50% - 9px)',\n      transition: theme.transitions.create('opacity')\n    },\n    active: {\n      border: '4px solid currentColor'\n    },\n    activeDot: {\n      '&:after': {\n        content: \"''\",\n        width: 10,\n        height: 10,\n        position: 'absolute',\n        borderRadius: '50%',\n        backgroundColor: '#4caf50'\n      }\n    }\n  };\n});\n\nvar MenuCard = function MenuCard(props) {\n  _s();\n\n  var _clsx;\n\n  var classes = useStyles();\n\n  var _useContext = useContext(WebCmsGlobal),\n      GENERAL_SETTINGS = _useContext.GENERAL_SETTINGS;\n\n  var state = props.state,\n      selectGroupName = props.selectGroupName,\n      description = props.description,\n      imageUrl = props.imageUrl,\n      _onClick = props.onClick,\n      isOnlyProduct = props.isOnlyProduct;\n  var checkGuestGroup = state.selectGuestProductList.findIndex(function (item) {\n    return item.groupname === description;\n  });\n  var isPortal = GENERAL_SETTINGS.ISPORTAL;\n  var imageWithStaticUrl = imageUrl;\n\n  if (!(imageUrl !== null && imageUrl !== void 0 && imageUrl.includes(GENERAL_SETTINGS.STATIC_URL))) {\n    imageWithStaticUrl = GENERAL_SETTINGS.STATIC_URL + imageUrl;\n  }\n\n  return __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: isPortal ? selectGroupName ? 12 : 4 : 6,\n    onClick: function onClick() {\n      return _onClick(description);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, __jsx(ButtonBase, {\n    className: classes.image,\n    focusVisibleClassName: classes.focusVisible,\n    style: {\n      width: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    className: classes.imageSrc,\n    style: imageWithStaticUrl ? {\n      backgroundImage: \"url(\".concat(imageWithStaticUrl, \")\")\n    } : {},\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }), __jsx(\"span\", {\n    className: classes.imageBackdrop,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }), __jsx(\"span\", {\n    className: classes.imageButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, __jsx(Typography, {\n    component: \"span\",\n    variant: \"subtitle1\",\n    color: \"inherit\",\n    className: clsx(classes.imageTitle, (_clsx = {}, _defineProperty(_clsx, classes.active, description === selectGroupName ? true : false), _defineProperty(_clsx, classes.activeDot, checkGuestGroup > -1 ? true : false), _clsx)),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, description, __jsx(\"span\", {\n    className: classes.imageMarked,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 25\n    }\n  })))));\n};\n\n_s(MenuCard, \"+5aqXXhB1Sjbg2SW7qLpBCx7t1I=\", false, function () {\n  return [useStyles];\n});\n\n_c = MenuCard;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    state: state.formReducer.guest\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setToState: function setToState(stateType, stateName, value) {\n      return dispatch(_setToState(stateType, stateName, value));\n    },\n    updateState: function updateState(stateType, stateName, value) {\n      return dispatch(_updateState(stateType, stateName, value));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MenuCard);\n\nvar _c;\n\n$RefreshReg$(_c, \"MenuCard\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/guest/public/components/info/event-reservation/menu-card.js"],"names":["React","useContext","connect","clsx","setToState","updateState","makeStyles","ButtonBase","Typography","Grid","WebCmsGlobal","useStyles","theme","root","display","flexWrap","minWidth","width","padding","image","position","height","breakpoints","down","zIndex","opacity","border","focusVisible","imageButton","left","right","top","bottom","alignItems","justifyContent","color","palette","common","white","imageSrc","backgroundSize","backgroundPosition","borderRadius","imageBackdrop","backgroundColor","black","transition","transitions","create","imageTitle","spacing","imageMarked","active","activeDot","content","MenuCard","props","classes","GENERAL_SETTINGS","state","selectGroupName","description","imageUrl","onClick","isOnlyProduct","checkGuestGroup","selectGuestProductList","findIndex","item","groupname","isPortal","ISPORTAL","imageWithStaticUrl","includes","STATIC_URL","backgroundImage","mapStateToProps","formReducer","guest","mapDispatchToProps","dispatch","stateType","stateName","value"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react'\nimport { connect } from 'react-redux'\nimport clsx from 'clsx'\nimport { setToState, updateState } from 'state/actions'\nimport { makeStyles } from '@material-ui/core/styles'\nimport ButtonBase from '@material-ui/core/ButtonBase'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport WebCmsGlobal from \"../../../../../webcms-global\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        minWidth: 300,\n        width: '100%',\n        padding: 15,\n    },\n    image: {\n        position: 'relative',\n        height: 100,\n        [theme.breakpoints.down('xs')]: {\n            width: '100% !important', // Overrides inline-style\n            height: 100,\n        },\n        '&:hover, &$focusVisible': {\n            zIndex: 1,\n            '& $imageBackdrop': {\n                opacity: 0.3,\n            },\n            '& $imageMarked': {\n                opacity: 0,\n            },\n            '& $imageTitle': {\n                border: '4px solid currentColor',\n            },\n        },\n    },\n    focusVisible: {},\n    imageButton: {\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        color: theme.palette.common.white,\n    },\n    imageSrc: {\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center 40%',\n        borderRadius: 10,\n    },\n    imageBackdrop: {\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n        backgroundColor: theme.palette.common.black,\n        opacity: 0.6,\n        transition: theme.transitions.create('opacity'),\n        borderRadius: 10,\n    },\n    imageTitle: {\n        position: 'relative',\n        padding: `${theme.spacing(2)}px ${theme.spacing(4)}px ${theme.spacing(1) + 6}px`,\n    },\n    imageMarked: {\n        height: 3,\n        width: 18,\n        backgroundColor: theme.palette.common.white,\n        position: 'absolute',\n        bottom: -2,\n        left: 'calc(50% - 9px)',\n        transition: theme.transitions.create('opacity'),\n    },\n    active: {\n        border: '4px solid currentColor',\n    },\n    activeDot: {\n        '&:after': {\n            content: \"''\",\n            width: 10,\n            height: 10,\n            position: 'absolute',\n            borderRadius: '50%',\n            backgroundColor: '#4caf50'\n        },\n    }\n}))\n\nconst MenuCard = (props) => {\n    const classes = useStyles()\n\n    const { GENERAL_SETTINGS } = useContext(WebCmsGlobal)\n\n    const { state, selectGroupName, description, imageUrl, onClick, isOnlyProduct } = props\n    const checkGuestGroup = state.selectGuestProductList.findIndex((item) => item.groupname === description)\n    const isPortal = GENERAL_SETTINGS.ISPORTAL;\n    let imageWithStaticUrl = imageUrl\n\n    if(!imageUrl?.includes(GENERAL_SETTINGS.STATIC_URL)) {\n        imageWithStaticUrl = GENERAL_SETTINGS.STATIC_URL + imageUrl\n    }\n\n    return (\n        <Grid item xs={12} sm={isPortal ? selectGroupName ? 12 : 4 : 6} onClick={() => onClick(description)}>\n            <ButtonBase\n                className={classes.image}\n                focusVisibleClassName={classes.focusVisible}\n                style={{ width: '100%' }}\n            >\n                <span className={classes.imageSrc} style={imageWithStaticUrl ? { backgroundImage: `url(${imageWithStaticUrl})` } : {}} />\n                <span className={classes.imageBackdrop} />\n                <span className={classes.imageButton}>\n                    <Typography\n                        component=\"span\"\n                        variant=\"subtitle1\"\n                        color=\"inherit\"\n                        className={clsx(classes.imageTitle, {\n                            [classes.active]: description === selectGroupName ? true : false,\n                            [classes.activeDot]: checkGuestGroup > -1 ? true : false,\n                        })}\n                    >\n                        {description}\n                        <span className={classes.imageMarked} />\n                    </Typography>\n                </span>\n            </ButtonBase>\n        </Grid>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        state: state.formReducer.guest,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value)),\n    updateState: (stateType, stateName, value) => dispatch(updateState(stateType, stateName, value)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MenuCard)\n"]},"metadata":{},"sourceType":"module"}