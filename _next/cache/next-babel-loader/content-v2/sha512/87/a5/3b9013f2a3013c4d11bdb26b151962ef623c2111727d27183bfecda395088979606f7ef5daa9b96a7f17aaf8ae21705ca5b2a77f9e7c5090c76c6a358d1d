{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/@webcms-ui/core/card-slider/card-slider-item-info-dialog.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useContext } from 'react';\nimport { connect } from 'react-redux';\nimport { setToState, updateState } from 'state/actions';\nimport axios from 'axios';\nimport Typography from '@material-ui/core/Typography';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport WebCmsGlobal from 'components/webcms-global';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport LoadingSpinner from 'components/LoadingSpinner';\nconst useStyles = makeStyles(theme => ({\n  dialogTitle: {\n    '& h2': {\n      [theme.breakpoints.only('md')]: {\n        fontSize: 15\n      },\n      [theme.breakpoints.only('sm')]: {\n        fontSize: 14\n      },\n      [theme.breakpoints.only('xs')]: {\n        fontSize: 13\n      }\n    }\n  },\n  button: {\n    textAlign: 'center',\n    '& a': {\n      background: '#fffbfb',\n      padding: 10,\n      textAlign: 'center',\n      color: theme.palette.primary.main,\n      border: `1px solid ${theme.palette.primary.main}`,\n      fontSize: '0.875rem',\n      minWidth: 64,\n      boxSizing: 'border-box',\n      transition: 'background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\n      fontWeight: 500,\n      lineHeight: 1.75,\n      borderRadius: 4,\n      letterSpacing: '0.02857em',\n      textTransform: 'uppercase'\n    }\n  },\n  sliderImgBox: {\n    width: '100%',\n    height: 340,\n    [theme.breakpoints.only('xs')]: {\n      height: 180\n    },\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: '100% 100%'\n  }\n}));\n\nconst FileItem = props => {\n  const {\n    GENERAL_SETTINGS\n  } = useContext(WebCmsGlobal);\n  const {\n    t\n  } = useTranslation();\n  const {\n    data\n  } = props;\n  return __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, __jsx(CardActionArea, {\n    onClick: () => window.open(GENERAL_SETTINGS.STATIC_URL + data.fileurl),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, __jsx(CardMedia, {\n    component: \"img\",\n    alt: data && data.description,\n    height: \"140\",\n    image: data.isPreview ? GENERAL_SETTINGS.STATIC_URL + data.fileurl : '/imgs/pdf-placeholder.jpg',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }), __jsx(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, __jsx(Tooltip, {\n    title: data && data.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, __jsx(Typography, {\n    gutterBottom: true,\n    variant: \"h6\",\n    component: \"h4\",\n    noWrap: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, data && data.description)))), __jsx(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    onClick: () => window.open(GENERAL_SETTINGS.STATIC_URL + data.fileurl),\n    color: \"primary\",\n    startIcon: __jsx(VisibilityIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 32\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, t('str_preview'))));\n};\n\nconst CardSliderItemInfoDialog = props => {\n  const {\n    state,\n    dialogData,\n    open,\n    close\n  } = props;\n  const {\n    GENERAL_SETTINGS,\n    locale\n  } = useContext(WebCmsGlobal);\n  const {\n    t\n  } = useTranslation();\n  const classes = useStyles();\n  const {\n    0: isLoading,\n    1: setIsloading\n  } = useState(false);\n  const {\n    0: fileList,\n    1: setFileList\n  } = useState(false);\n  let clientParams = {};\n  useEffect(() => {\n    let active = true;\n\n    if (active && open && !fileList) {\n      if (GENERAL_SETTINGS.ISCHAIN && state.changeHotelRefno !== false) {\n        clientParams.ischain = true;\n        clientParams.chainid = state.changeHotelRefno;\n        clientParams.hotelrefno = GENERAL_SETTINGS.HOTELREFNO;\n      } else {\n        clientParams.ischain = false;\n        clientParams.chainid = false;\n      }\n\n      clientParams.langcode = locale;\n      setIsloading(true);\n      axios({\n        url: GENERAL_SETTINGS.BASE_URL + 'api/hotel/content/file/list',\n        method: 'post',\n        params: Object.assign({\n          masterid: dialogData.locmid\n        }, clientParams)\n      }).then(fileResponse => {\n        if (active) {\n          var _fileResponse$data;\n\n          const fileListData = fileResponse === null || fileResponse === void 0 ? void 0 : (_fileResponse$data = fileResponse.data) === null || _fileResponse$data === void 0 ? void 0 : _fileResponse$data.data;\n\n          if (fileResponse.data.success && fileListData.length > 0) {\n            setFileList(fileListData);\n            setIsloading(false);\n          } else {\n            setFileList(null);\n            setIsloading(false);\n          }\n        }\n      });\n    }\n\n    return () => {\n      active = false;\n    };\n  }, [open]);\n  return __jsx(Dialog, {\n    maxWidth: \"md\",\n    open: open,\n    onClose: () => close(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, __jsx(DialogTitle, {\n    className: classes.dialogTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, dialogData && t(dialogData.localtitle), \" - \", t('str_info')), __jsx(DialogContent, {\n    dividers: true,\n    style: {\n      overflow: 'overlay'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }\n  }, isLoading ? __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 25\n    }\n  }, __jsx(LoadingSpinner, {\n    size: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 29\n    }\n  })) : fileList && fileList.length > 0 ? fileList.map((item, index) => {\n    return __jsx(Grid, {\n      item: true,\n      xs: fileList.length === 1 ? 6 : 4,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 29\n      }\n    }, __jsx(FileItem, {\n      data: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 33\n      }\n    }));\n  }) : t('str_noDefaultRecord'))), __jsx(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    onClick: () => close(false),\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }\n  }, t('str_cancel'))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    state: state.formReducer.guest\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  updateState: (stateType, stateName, value) => dispatch(updateState(stateType, stateName, value)),\n  setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardSliderItemInfoDialog);","map":{"version":3,"sources":["/Users/mata/app-cloudweb/@webcms-ui/core/card-slider/card-slider-item-info-dialog.js"],"names":["React","useEffect","useState","useContext","connect","setToState","updateState","axios","Typography","DialogTitle","DialogContent","DialogActions","Dialog","Button","Grid","WebCmsGlobal","useTranslation","makeStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","VisibilityIcon","Tooltip","LoadingSpinner","useStyles","theme","dialogTitle","breakpoints","only","fontSize","button","textAlign","background","padding","color","palette","primary","main","border","minWidth","boxSizing","transition","fontWeight","lineHeight","borderRadius","letterSpacing","textTransform","sliderImgBox","width","height","backgroundRepeat","backgroundSize","FileItem","props","GENERAL_SETTINGS","t","data","window","open","STATIC_URL","fileurl","description","isPreview","CardSliderItemInfoDialog","state","dialogData","close","locale","classes","isLoading","setIsloading","fileList","setFileList","clientParams","active","ISCHAIN","changeHotelRefno","ischain","chainid","hotelrefno","HOTELREFNO","langcode","url","BASE_URL","method","params","Object","assign","masterid","locmid","then","fileResponse","fileListData","success","length","localtitle","overflow","map","item","index","mapStateToProps","formReducer","guest","mapDispatchToProps","dispatch","stateType","stateName","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react'\nimport { connect } from 'react-redux'\nimport { setToState, updateState } from 'state/actions'\nimport axios from 'axios'\nimport Typography from '@material-ui/core/Typography'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Dialog from '@material-ui/core/Dialog'\nimport Button from '@material-ui/core/Button'\nimport Grid from '@material-ui/core/Grid'\nimport WebCmsGlobal from 'components/webcms-global'\nimport useTranslation from 'lib/translations/hooks/useTranslation'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardActionArea from '@material-ui/core/CardActionArea'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport VisibilityIcon from '@material-ui/icons/Visibility'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport LoadingSpinner from 'components/LoadingSpinner'\n\nconst useStyles = makeStyles((theme) => ({\n    dialogTitle: {\n        '& h2': {\n            [theme.breakpoints.only('md')]: {\n                fontSize: 15,\n            },\n            [theme.breakpoints.only('sm')]: {\n                fontSize: 14,\n            },\n            [theme.breakpoints.only('xs')]: {\n                fontSize: 13,\n            },\n        },\n    },\n    button: {\n        textAlign: 'center',\n        '& a': {\n            background: '#fffbfb',\n            padding: 10,\n            textAlign: 'center',\n            color: theme.palette.primary.main,\n            border: `1px solid ${theme.palette.primary.main}`,\n            fontSize: '0.875rem',\n            minWidth: 64,\n            boxSizing: 'border-box',\n            transition: 'background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\n            fontWeight: 500,\n            lineHeight: 1.75,\n            borderRadius: 4,\n            letterSpacing: '0.02857em',\n            textTransform: 'uppercase'\n        },\n    },\n    sliderImgBox: {\n        width: '100%',\n        height: 340,\n        [theme.breakpoints.only('xs')]: {\n            height: 180,\n        },\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: '100% 100%',\n    },\n}))\n\nconst FileItem = (props) => {\n    const { GENERAL_SETTINGS } = useContext(WebCmsGlobal)\n    const { t } = useTranslation()\n    const { data } = props\n\n    return (\n        <Card>\n            <CardActionArea onClick={()=> window.open(GENERAL_SETTINGS.STATIC_URL + data.fileurl)}>\n                <CardMedia\n                    component=\"img\"\n                    alt={data && data.description}\n                    height=\"140\"\n                    image={data.isPreview ? GENERAL_SETTINGS.STATIC_URL + data.fileurl : '/imgs/pdf-placeholder.jpg'}\n                />\n                <CardContent>\n                    <Tooltip title={data && data.description}>\n                        <Typography gutterBottom variant=\"h6\" component=\"h4\" noWrap>\n                            {data && data.description}\n                        </Typography>\n                    </Tooltip>\n                </CardContent>\n            </CardActionArea>\n            <CardActions>\n                <Button\n                    onClick={()=> window.open(GENERAL_SETTINGS.STATIC_URL + data.fileurl)}\n                    color=\"primary\"\n                    startIcon={<VisibilityIcon />}\n                >\n                    {t('str_preview')}\n                </Button>\n            </CardActions>\n        </Card>\n    );\n}\n\nconst CardSliderItemInfoDialog = (props) => {\n    const { state, dialogData, open, close } = props\n    const { GENERAL_SETTINGS, locale } = useContext(WebCmsGlobal)\n    const { t } = useTranslation()\n    const classes = useStyles()\n    const [isLoading, setIsloading] = useState(false)\n    const [fileList, setFileList] = useState(false)\n\n    let clientParams = {}\n\n    useEffect(() => {\n        let active = true\n        if (active && open && !fileList) {\n\n            if (GENERAL_SETTINGS.ISCHAIN && state.changeHotelRefno !== false) {\n                clientParams.ischain = true\n                clientParams.chainid = state.changeHotelRefno\n                clientParams.hotelrefno = GENERAL_SETTINGS.HOTELREFNO\n\n            } else {\n                clientParams.ischain = false\n                clientParams.chainid = false\n            }\n\n            clientParams.langcode = locale\n\n            setIsloading(true)\n            axios({\n                url: GENERAL_SETTINGS.BASE_URL + 'api/hotel/content/file/list',\n                method: 'post',\n                params:  Object.assign({\n                    masterid: dialogData.locmid,\n                }, clientParams),\n            }).then((fileResponse) => {\n                if (active) {\n                    const fileListData = fileResponse?.data?.data\n                    if (fileResponse.data.success && fileListData.length > 0) {\n                        setFileList(fileListData)\n                        setIsloading(false)\n                    } else {\n                        setFileList(null)\n                        setIsloading(false)\n                    }\n                }\n            })\n        }\n\n        return () => {\n            active = false\n        }\n    }, [open])\n\n    return (\n        <Dialog maxWidth=\"md\" open={open} onClose={() => close(false)}>\n            <DialogTitle className={classes.dialogTitle}>{dialogData && t(dialogData.localtitle)} - {t('str_info')}</DialogTitle>\n            <DialogContent dividers style={{overflow: 'overlay'}}>\n                <Grid container spacing={3}>\n                    {isLoading ?\n                        <Grid item xs={12}>\n                            <LoadingSpinner size={40} />\n                        </Grid> : fileList && fileList.length > 0 ? fileList.map((item, index) => {\n                        return (\n                            <Grid item xs={fileList.length === 1 ? 6 : 4} key={index}>\n                                <FileItem data={item}/>\n                            </Grid>\n                        )\n                    }): t('str_noDefaultRecord')}\n                </Grid>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={() => close(false)} color=\"primary\">\n                    {t('str_cancel')}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        state: state.formReducer.guest,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    updateState: (stateType, stateName, value) => dispatch(updateState(stateType, stateName, value)),\n    setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardSliderItemInfoDialog)\n"]},"metadata":{},"sourceType":"module"}