{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/CustomDatePicker/CustomDatePicker.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport moment from 'moment';\nimport MomentAdapter from '@date-io/moment';\nimport { DatePicker, LocalizationProvider } from '@material-ui/pickers';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nimport { ClickAwayListener } from \"@material-ui/core\";\nimport { LocaleContext } from \"../../lib/translations/context/LocaleContext\";\nimport EventIcon from '@material-ui/icons/Event';\n\nfunction CustomDatePicker(props) {\n  const {\n    minDate,\n    value,\n    onChange,\n    onError,\n    label,\n    id,\n    name,\n    disablePast,\n    disableFuture,\n    helperText,\n    fullWidth,\n    required,\n    error,\n    variant\n  } = props,\n        {\n    t\n  } = useTranslation();\n  const {\n    locale\n  } = useContext(LocaleContext);\n  const inputFormat = moment.localeData(locale).longDateFormat('L');\n  const mask = inputFormat.replaceAll('D', '_').replaceAll('M', '_').replaceAll('Y', '_');\n  const {\n    0: openDatePicker,\n    1: setOpenDatePicker\n  } = useState(false);\n\n  const handleOnChange = (newDate, name) => {\n    if (typeof onChange === \"function\") onChange(newDate, name);\n  };\n\n  const handleOnError = error => {\n    if (typeof onError === \"function\") onError(error);\n  };\n\n  return __jsx(LocalizationProvider, {\n    dateLibInstance: moment,\n    dateAdapter: MomentAdapter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, __jsx(ClickAwayListener, {\n    onClickAway: () => setOpenDatePicker(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, __jsx(DatePicker, {\n    autoOk: true,\n    id: id,\n    name: name,\n    open: openDatePicker,\n    label: label || t('str_date'),\n    minDate: minDate,\n    mask: mask,\n    value: value,\n    error: error,\n    allowKeyboardControl: true,\n    inputFormat: moment.localeData(locale).longDateFormat('L'),\n    disableFuture: disableFuture,\n    disablePast: disablePast,\n    openTo: 'date',\n    views: ['year', 'month', 'date'],\n    onClose: () => {\n      setOpenDatePicker(false);\n    },\n    onError: e => handleOnError(e),\n    onChange: newDate => handleOnChange(newDate, name),\n    renderInput: props => {\n      return __jsx(TextField, _extends({}, props, {\n        id: id,\n        name: name,\n        fullWidth: fullWidth,\n        required: required,\n        variant: variant || 'outlined',\n        helperText: helperText && `(${helperText})` || (props === null || props === void 0 ? void 0 : props.error) && inputFormat && `(${inputFormat})` || '',\n        InputProps: _objectSpread(_objectSpread({}, props.InputProps), {}, {\n          endAdornment: __jsx(React.Fragment, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 45\n            }\n          }, __jsx(\"span\", {\n            onClick: () => {\n              setOpenDatePicker(true);\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 46\n            }\n          }, __jsx(EventIcon, {\n            size: 'small',\n            style: {\n              color: 'inherit',\n              cursor: 'pointer'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 51\n            }\n          })))\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 33\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }))));\n}\n\nCustomDatePicker.propTypes = {\n  value: PropTypes.object,\n  minDate: PropTypes.object,\n  label: PropTypes.string,\n  onError: PropTypes.func,\n  onChange: PropTypes.func\n};\nexport default CustomDatePicker;","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/CustomDatePicker/CustomDatePicker.js"],"names":["React","useContext","useState","PropTypes","TextField","moment","MomentAdapter","DatePicker","LocalizationProvider","useTranslation","ClickAwayListener","LocaleContext","EventIcon","CustomDatePicker","props","minDate","value","onChange","onError","label","id","name","disablePast","disableFuture","helperText","fullWidth","required","error","variant","t","locale","inputFormat","localeData","longDateFormat","mask","replaceAll","openDatePicker","setOpenDatePicker","handleOnChange","newDate","handleOnError","e","InputProps","endAdornment","color","cursor","propTypes","object","string","func"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,UAAT,EAAqBC,oBAArB,QAAiD,sBAAjD;AACA,OAAOC,cAAP,MAA2B,uCAA3B;AACA,SAAQC,iBAAR,QAAgC,mBAAhC;AACA,SAAQC,aAAR,QAA4B,8CAA5B;AACA,OAAOC,SAAP,MAAsB,0BAAtB;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAC7B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA,QAAlB;AAA4BC,IAAAA,OAA5B;AAAqCC,IAAAA,KAArC;AAA4CC,IAAAA,EAA5C;AAAgDC,IAAAA,IAAhD;AAAsDC,IAAAA,WAAtD;AAAmEC,IAAAA,aAAnE;AAAkFC,IAAAA,UAAlF;AAA8FC,IAAAA,SAA9F;AAAyGC,IAAAA,QAAzG;AAAmHC,IAAAA,KAAnH;AAA0HC,IAAAA;AAA1H,MAAsId,KAA5I;AAAA,QACM;AAAEe,IAAAA;AAAF,MAAQpB,cAAc,EAD5B;AAGA,QAAM;AAAEqB,IAAAA;AAAF,MAAa7B,UAAU,CAACU,aAAD,CAA7B;AACA,QAAMoB,WAAW,GAAG1B,MAAM,CAAC2B,UAAP,CAAkBF,MAAlB,EAA0BG,cAA1B,CAAyC,GAAzC,CAApB;AACA,QAAMC,IAAI,GAAGH,WAAW,CAACI,UAAZ,CAAuB,GAAvB,EAA4B,GAA5B,EAAiCA,UAAjC,CAA4C,GAA5C,EAAiD,GAAjD,EAAsDA,UAAtD,CAAiE,GAAjE,EAAsE,GAAtE,CAAb;AACA,QAAM;AAAA,OAACC,cAAD;AAAA,OAAiBC;AAAjB,MAAsCnC,QAAQ,CAAC,KAAD,CAApD;;AAEA,QAAMoC,cAAc,GAAG,CAACC,OAAD,EAAUlB,IAAV,KAAmB;AACtC,QAAG,OAAOJ,QAAP,KAAoB,UAAvB,EAAmCA,QAAQ,CAACsB,OAAD,EAAUlB,IAAV,CAAR;AACtC,GAFD;;AAIA,QAAMmB,aAAa,GAAIb,KAAD,IAAW;AAC7B,QAAG,OAAOT,OAAP,KAAmB,UAAtB,EAAkCA,OAAO,CAACS,KAAD,CAAP;AACrC,GAFD;;AAIA,SACI,MAAC,oBAAD;AAAsB,IAAA,eAAe,EAAEtB,MAAvC;AAA+C,IAAA,WAAW,EAAEC,aAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,iBAAD;AAAmB,IAAA,WAAW,EAAE,MAAM+B,iBAAiB,CAAC,KAAD,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AACI,IAAA,MAAM,MADV;AAEI,IAAA,EAAE,EAAEjB,EAFR;AAGI,IAAA,IAAI,EAAEC,IAHV;AAII,IAAA,IAAI,EAAEe,cAJV;AAKI,IAAA,KAAK,EAAEjB,KAAK,IAAIU,CAAC,CAAC,UAAD,CALrB;AAMI,IAAA,OAAO,EAAEd,OANb;AAOI,IAAA,IAAI,EAAEmB,IAPV;AAQI,IAAA,KAAK,EAAElB,KARX;AASI,IAAA,KAAK,EAAEW,KATX;AAUI,IAAA,oBAAoB,MAVxB;AAWI,IAAA,WAAW,EAAEtB,MAAM,CAAC2B,UAAP,CAAkBF,MAAlB,EAA0BG,cAA1B,CAAyC,GAAzC,CAXjB;AAYI,IAAA,aAAa,EAAEV,aAZnB;AAaI,IAAA,WAAW,EAAED,WAbjB;AAcI,IAAA,MAAM,EAAE,MAdZ;AAeI,IAAA,KAAK,EAAE,CAAC,MAAD,EAAS,OAAT,EAAkB,MAAlB,CAfX;AAgBI,IAAA,OAAO,EAAE,MAAM;AAACe,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AAAyB,KAhB7C;AAiBI,IAAA,OAAO,EAAGI,CAAD,IAAOD,aAAa,CAACC,CAAD,CAjBjC;AAkBI,IAAA,QAAQ,EAAGF,OAAD,IAAaD,cAAc,CAACC,OAAD,EAAUlB,IAAV,CAlBzC;AAmBI,IAAA,WAAW,EAAGP,KAAD,IAAW;AACpB,aACI,MAAC,SAAD,eACQA,KADR;AAEI,QAAA,EAAE,EAAEM,EAFR;AAGI,QAAA,IAAI,EAAEC,IAHV;AAII,QAAA,SAAS,EAAEI,SAJf;AAKI,QAAA,QAAQ,EAAEC,QALd;AAMI,QAAA,OAAO,EAAEE,OAAO,IAAI,UANxB;AAOI,QAAA,UAAU,EAAEJ,UAAU,IAAK,IAAGA,UAAW,GAA7B,IAAmC,CAAAV,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEa,KAAP,KAAgBI,WAAhB,IAAgC,IAAGA,WAAY,GAAlF,IAAwF,EAPxG;AAQI,QAAA,UAAU,kCACHjB,KAAK,CAAC4B,UADH;AAENC,UAAAA,YAAY,EACR,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACC;AAAM,YAAA,OAAO,EAAE,MAAM;AAACN,cAAAA,iBAAiB,CAAC,IAAD,CAAjB;AAAwB,aAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACK,MAAC,SAAD;AAAW,YAAA,IAAI,EAAE,OAAjB;AAA0B,YAAA,KAAK,EAAE;AAACO,cAAAA,KAAK,EAAE,SAAR;AAAmBC,cAAAA,MAAM,EAAE;AAA3B,aAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADL,CADD;AAHE,UARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ;AAqBH,KAzCL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,CADJ;AAmDH;;AAEDhC,gBAAgB,CAACiC,SAAjB,GAA6B;AACzB9B,EAAAA,KAAK,EAAEb,SAAS,CAAC4C,MADQ;AAEzBhC,EAAAA,OAAO,EAAEZ,SAAS,CAAC4C,MAFM;AAGzB5B,EAAAA,KAAK,EAAEhB,SAAS,CAAC6C,MAHQ;AAIzB9B,EAAAA,OAAO,EAAEf,SAAS,CAAC8C,IAJM;AAKzBhC,EAAAA,QAAQ,EAAEd,SAAS,CAAC8C;AALK,CAA7B;AAQA,eAAepC,gBAAf","sourcesContent":["import React, {useContext, useState} from 'react'\nimport PropTypes from 'prop-types'\nimport TextField from '@material-ui/core/TextField'\nimport moment from 'moment'\nimport MomentAdapter from '@date-io/moment'\nimport { DatePicker, LocalizationProvider } from '@material-ui/pickers'\nimport useTranslation from 'lib/translations/hooks/useTranslation'\nimport {ClickAwayListener} from \"@material-ui/core\";\nimport {LocaleContext} from \"../../lib/translations/context/LocaleContext\";\nimport EventIcon from '@material-ui/icons/Event';\n\nfunction CustomDatePicker(props) {\n    const { minDate, value, onChange, onError, label, id, name, disablePast, disableFuture, helperText, fullWidth, required, error, variant } = props\n        , { t } = useTranslation()\n\n    const { locale } = useContext(LocaleContext)\n    const inputFormat = moment.localeData(locale).longDateFormat('L')\n    const mask = inputFormat.replaceAll('D', '_').replaceAll('M', '_').replaceAll('Y', '_')\n    const [openDatePicker, setOpenDatePicker] = useState(false);\n\n    const handleOnChange = (newDate, name) => {\n        if(typeof onChange === \"function\") onChange(newDate, name)\n    }\n\n    const handleOnError = (error) => {\n        if(typeof onError === \"function\") onError(error)\n    }\n\n    return (\n        <LocalizationProvider dateLibInstance={moment} dateAdapter={MomentAdapter}>\n            <ClickAwayListener onClickAway={() => setOpenDatePicker(false)}>\n                <div>\n                    <DatePicker\n                        autoOk\n                        id={id}\n                        name={name}\n                        open={openDatePicker}\n                        label={label || t('str_date')}\n                        minDate={minDate}\n                        mask={mask}\n                        value={value}\n                        error={error}\n                        allowKeyboardControl\n                        inputFormat={moment.localeData(locale).longDateFormat('L')}\n                        disableFuture={disableFuture}\n                        disablePast={disablePast}\n                        openTo={'date'}\n                        views={['year', 'month', 'date']}\n                        onClose={() => {setOpenDatePicker(false)}}\n                        onError={(e) => handleOnError(e)}\n                        onChange={(newDate) => handleOnChange(newDate, name)}\n                        renderInput={(props) => {\n                            return (\n                                <TextField\n                                    {...props}\n                                    id={id}\n                                    name={name}\n                                    fullWidth={fullWidth}\n                                    required={required}\n                                    variant={variant || 'outlined'}\n                                    helperText={helperText && `(${helperText})` || props?.error && inputFormat && `(${inputFormat})` || ''}\n                                    InputProps={{\n                                        ...props.InputProps,\n                                        endAdornment: (\n                                            <React.Fragment>\n                                             <span onClick={() => {setOpenDatePicker(true)}}>\n                                                 {<EventIcon size={'small'} style={{color: 'inherit', cursor: 'pointer'}}/>}\n                                             </span>\n                                            </React.Fragment>\n                                        ),\n                                    }}\n                                />\n                            )\n                        }}\n                    />\n                </div>\n            </ClickAwayListener>\n        </LocalizationProvider>\n    )\n}\n\nCustomDatePicker.propTypes = {\n    value: PropTypes.object,\n    minDate: PropTypes.object,\n    label: PropTypes.string,\n    onError: PropTypes.func,\n    onChange: PropTypes.func,\n}\n\nexport default CustomDatePicker\n"]},"metadata":{},"sourceType":"module"}