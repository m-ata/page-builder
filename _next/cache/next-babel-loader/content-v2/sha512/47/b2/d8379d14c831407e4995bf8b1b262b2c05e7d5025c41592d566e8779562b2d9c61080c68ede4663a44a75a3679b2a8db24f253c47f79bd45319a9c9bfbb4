{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/website/pages/WebsiteSliderGallery.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { memo, useContext, useEffect, useRef, useState } from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Slider from 'react-slick';\nimport Button from \"@material-ui/core/Button\";\nimport WebCmsGlobal from \"../../webcms-global\";\nimport { useSelector } from 'react-redux';\nimport moment from \"moment\";\nimport { OREST_ENDPOINT } from \"../../../model/orest/constants\";\nimport { Typography } from \"@material-ui/core\";\nimport ThumbnailSliderModal from \"./SliderModal\";\nconst useStyles = makeStyles(theme => ({\n  cardRoot: {\n    width: '100%'\n  },\n  parentDiv: {\n    display: \"flex\",\n    flexWrap: 'wrap'\n  },\n  textDiv: {\n    float: \"left\",\n    width: '50%',\n    [theme.breakpoints.down(\"xs\")]: {\n      width: '100%'\n    }\n  },\n  heading: {\n    letterSpacing: 2,\n    marginBottom: 30,\n    color: props => props !== null && props !== void 0 && props.textColor ? props.textColor : \"#000000\"\n  },\n  cardDiv: {\n    display: \"inline-block\",\n    width: '50%',\n    [theme.breakpoints.down(\"xs\")]: {\n      width: '100%'\n    }\n  },\n  cardImage: {\n    width: '100%',\n    height: '40vh',\n    borderRadius: 5\n  },\n  description: {\n    color: props => props !== null && props !== void 0 && props.textColor ? props.textColor : \"#000000\",\n    display: 'block',\n    overflow: 'hidden',\n    textAlign: 'justify',\n    fontSize: '0.95rem',\n    height: 150\n  },\n  line: {\n    background: '#839FAD none repeat scroll 0 0',\n    display: 'block',\n    height: 1,\n    marginTop: 10,\n    marginBottom: 10,\n    position: 'relative',\n    width: '10%'\n  },\n  ctaButton: {\n    borderRadius: 2,\n    backgroundColor: props => props !== null && props !== void 0 && props.buttonColor ? props.buttonColor : \"#000000\",\n    cursor: 'pointer',\n    display: 'inline-block',\n    fontSize: 14,\n    letterSpacing: 3,\n    lineHeight: '45px',\n    padding: '0 45px',\n    textAlign: \"center\",\n    '& a': {\n      color: 'white'\n    }\n  },\n  moreInfoRoot: {\n    position: 'relative',\n    textAlign: 'center',\n    marginTop: -8,\n    marginBottom: 10,\n    '&::before': {\n      content: '\"\"',\n      width: '100%',\n      marginTop: 12,\n      display: 'block',\n      position: 'absolute',\n      borderBottom: '1px dashed #ededed',\n      boxShadow: '0 -15px 15px 10px #ffffff'\n    }\n  },\n  moreInfoButton: {\n    fontSize: '0.7rem',\n    padding: '2px 10px 1px',\n    background: 'white'\n  }\n}));\n\nconst Description = ({\n  str = '',\n  openSlider,\n  moreInfoText,\n  sliderGalleryProp,\n  cta\n}) => {\n  const classes = useStyles(sliderGalleryProp);\n  const ref = useRef();\n  const {\n    0: offsetHeight,\n    1: setOffsetHeight\n  } = useState(null);\n  useEffect(() => {\n    var _ref$current;\n\n    setOffsetHeight(ref === null || ref === void 0 ? void 0 : (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.offsetHeight);\n  }, [str]);\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, __jsx(Typography, {\n    className: classes.description,\n    variant: \"body1\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    ref: ref,\n    dangerouslySetInnerHTML: {\n      __html: str + '...'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  })), offsetHeight > 100 && __jsx(\"div\", {\n    className: classes.moreInfoRoot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 43\n    }\n  }, __jsx(Button, {\n    className: classes.moreInfoButton,\n    variant: \"outlined\",\n    color: \"primary\",\n    size: \"small\",\n    onClick: () => openSlider(),\n    style: {\n      fontSize: '0.7rem',\n      padding: '2px 10px 1px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 25\n    }\n  }, moreInfoText)));\n};\n\nconst WebsiteSliderGallery = props => {\n  const {\n    sliderGallery,\n    otherLangSliderGallery,\n    selectedLang,\n    defaultLang\n  } = props;\n  const {\n    0: sliderImages,\n    1: setSliderImages\n  } = useState([]);\n  const {\n    0: sliderTitle,\n    1: setSliderTitle\n  } = useState('');\n  const {\n    0: sliderDescription,\n    1: setSliderDescription\n  } = useState('');\n  const {\n    0: sliderCta,\n    1: setSliderCta\n  } = useState('');\n  const {\n    0: filteredImages,\n    1: setFilteredImages\n  } = useState([]);\n  const {\n    0: showSlider,\n    1: setShowSlider\n  } = useState([]);\n  const {\n    0: isOpenSlider,\n    1: setIsOpenSlider\n  } = useState(false);\n  const {\n    0: hasMobileView,\n    1: setMobileView\n  } = useState(false);\n  const website = useSelector(state => {\n    var _state$formReducer;\n\n    return state === null || state === void 0 ? void 0 : (_state$formReducer = state.formReducer) === null || _state$formReducer === void 0 ? void 0 : _state$formReducer.website;\n  });\n  const {\n    GENERAL_SETTINGS\n  } = useContext(WebCmsGlobal);\n  const classes = useStyles(sliderGallery);\n  const settings = {\n    dots: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    infinite: true\n  };\n  useEffect(() => {\n    var _sliderGallery$gid, _sliderGallery$gid$im, _sliderGallery$gid2;\n\n    if ((sliderGallery === null || sliderGallery === void 0 ? void 0 : (_sliderGallery$gid = sliderGallery.gid) === null || _sliderGallery$gid === void 0 ? void 0 : (_sliderGallery$gid$im = _sliderGallery$gid.images) === null || _sliderGallery$gid$im === void 0 ? void 0 : _sliderGallery$gid$im.length) > 0) {\n      setSliderImages(sliderGallery.gid.images);\n      setFilteredImages(sliderGallery.gid.images);\n    } // handling expiry date\n\n\n    if (sliderGallery !== null && sliderGallery !== void 0 && (_sliderGallery$gid2 = sliderGallery.gid) !== null && _sliderGallery$gid2 !== void 0 && _sliderGallery$gid2.expiryDate) {\n      var _sliderGallery$gid3;\n\n      const currentDate = moment().format(OREST_ENDPOINT.DATEFORMAT_LOCALE);\n      setShowSlider(moment(sliderGallery === null || sliderGallery === void 0 ? void 0 : (_sliderGallery$gid3 = sliderGallery.gid) === null || _sliderGallery$gid3 === void 0 ? void 0 : _sliderGallery$gid3.expiryDate).isAfter(currentDate));\n    } else {\n      setShowSlider(true);\n    }\n  }, [sliderGallery]);\n  useEffect(() => {\n    const setResponsiveness = () => {\n      return window.innerWidth < 767 ? setMobileView(true) : setMobileView(false);\n    };\n\n    setResponsiveness();\n    window.addEventListener('resize', () => setResponsiveness());\n  }, []);\n  return __jsx(React.Fragment, null, showSlider && __jsx(Slider, _extends({}, settings, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }), sliderImages.map((item, i) => {\n    var _otherLangSliderGalle, _otherLangSliderGalle2, _otherLangSliderGalle3, _otherLangSliderGalle4, _website$assets, _website$assets$font;\n\n    return __jsx(\"div\", {\n      key: i,\n      className: classes.cardRoot,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 29\n      }\n    }, __jsx(\"div\", {\n      className: classes.textDiv,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 33\n      }\n    }, __jsx(\"h4\", {\n      className: classes.heading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 37\n      }\n    }, __jsx(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: selectedLang === defaultLang ? item.title : (otherLangSliderGallery === null || otherLangSliderGallery === void 0 ? void 0 : otherLangSliderGallery.length) > 0 && ((_otherLangSliderGalle = otherLangSliderGallery[i]) === null || _otherLangSliderGalle === void 0 ? void 0 : _otherLangSliderGalle.title)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 41\n      }\n    }), __jsx(\"span\", {\n      className: classes.line,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 41\n      }\n    })), hasMobileView ? __jsx(Description, {\n      str: selectedLang === defaultLang ? item.description : (otherLangSliderGallery === null || otherLangSliderGallery === void 0 ? void 0 : otherLangSliderGallery.length) > 0 && ((_otherLangSliderGalle2 = otherLangSliderGallery[i]) === null || _otherLangSliderGalle2 === void 0 ? void 0 : _otherLangSliderGalle2.description),\n      openSlider: () => {\n        setIsOpenSlider(true);\n        setSliderTitle(item === null || item === void 0 ? void 0 : item.title);\n        setSliderDescription(item === null || item === void 0 ? void 0 : item.description);\n        setSliderCta(item === null || item === void 0 ? void 0 : item.cta);\n      },\n      moreInfoText: 'Show more',\n      sliderGalleryProp: sliderGallery,\n      cta: item === null || item === void 0 ? void 0 : item.cta,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 45\n      }\n    }) : __jsx(React.Fragment, null, __jsx(\"p\", {\n      className: classes.description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 49\n      }\n    }, __jsx(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: selectedLang === defaultLang ? item.description : (otherLangSliderGallery === null || otherLangSliderGallery === void 0 ? void 0 : otherLangSliderGallery.length) > 0 && ((_otherLangSliderGalle3 = otherLangSliderGallery[i]) === null || _otherLangSliderGalle3 === void 0 ? void 0 : _otherLangSliderGalle3.description)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 53\n      }\n    })), (item === null || item === void 0 ? void 0 : item.cta) && __jsx(Button, {\n      variant: \"contained\",\n      size: \"small\",\n      color: \"primary\",\n      \"aria-label\": \"add\",\n      className: classes.ctaButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 66\n      }\n    }, __jsx(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: selectedLang === defaultLang ? item === null || item === void 0 ? void 0 : item.cta : (otherLangSliderGallery === null || otherLangSliderGallery === void 0 ? void 0 : otherLangSliderGallery.length) > 0 && ((_otherLangSliderGalle4 = otherLangSliderGallery[i]) === null || _otherLangSliderGalle4 === void 0 ? void 0 : _otherLangSliderGalle4.cta)\n      },\n      style: {\n        fontFamily: website !== null && website !== void 0 && (_website$assets = website.assets) !== null && _website$assets !== void 0 && (_website$assets$font = _website$assets.font) !== null && _website$assets$font !== void 0 && _website$assets$font.name ? website.assets.font.name : 'Roboto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 57\n      }\n    })))), __jsx(\"div\", {\n      className: classes.cardDiv,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 33\n      }\n    }, __jsx(\"img\", {\n      alt: 'image',\n      src: GENERAL_SETTINGS.STATIC_URL + (item === null || item === void 0 ? void 0 : item.fileurl),\n      className: classes.cardImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 37\n      }\n    })), __jsx(ThumbnailSliderModal, {\n      open: isOpenSlider,\n      slider: sliderGallery,\n      sliderTitle: sliderTitle,\n      sliderDesc: sliderDescription,\n      sliderCta: sliderCta,\n      onClose: e => setIsOpenSlider(e),\n      sliderImages: sliderImages,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 33\n      }\n    }));\n  })));\n};\n\nconst memorizedWebsiteSliderGallery = /*#__PURE__*/memo(WebsiteSliderGallery);\nexport default memorizedWebsiteSliderGallery;","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/website/pages/WebsiteSliderGallery.js"],"names":["React","memo","useContext","useEffect","useRef","useState","makeStyles","Slider","Button","WebCmsGlobal","useSelector","moment","OREST_ENDPOINT","Typography","ThumbnailSliderModal","useStyles","theme","cardRoot","width","parentDiv","display","flexWrap","textDiv","float","breakpoints","down","heading","letterSpacing","marginBottom","color","props","textColor","cardDiv","cardImage","height","borderRadius","description","overflow","textAlign","fontSize","line","background","marginTop","position","ctaButton","backgroundColor","buttonColor","cursor","lineHeight","padding","moreInfoRoot","content","borderBottom","boxShadow","moreInfoButton","Description","str","openSlider","moreInfoText","sliderGalleryProp","cta","classes","ref","offsetHeight","setOffsetHeight","current","__html","WebsiteSliderGallery","sliderGallery","otherLangSliderGallery","selectedLang","defaultLang","sliderImages","setSliderImages","sliderTitle","setSliderTitle","sliderDescription","setSliderDescription","sliderCta","setSliderCta","filteredImages","setFilteredImages","showSlider","setShowSlider","isOpenSlider","setIsOpenSlider","hasMobileView","setMobileView","website","state","formReducer","GENERAL_SETTINGS","settings","dots","speed","slidesToShow","slidesToScroll","infinite","gid","images","length","expiryDate","currentDate","format","DATEFORMAT_LOCALE","isAfter","setResponsiveness","window","innerWidth","addEventListener","map","item","i","title","fontFamily","assets","font","name","STATIC_URL","fileurl","e","memorizedWebsiteSliderGallery"],"mappings":"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","sourcesContent":["import React, {memo, useContext, useEffect, useRef, useState} from 'react'\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Slider from 'react-slick';\nimport Button from \"@material-ui/core/Button\";\nimport WebCmsGlobal from \"../../webcms-global\";\nimport { useSelector } from 'react-redux';\nimport moment from \"moment\";\nimport {OREST_ENDPOINT} from \"../../../model/orest/constants\";\nimport {Typography} from \"@material-ui/core\";\nimport ThumbnailSliderModal from \"./SliderModal\";\n\nconst useStyles = makeStyles((theme) => ({\n    cardRoot: {\n        width: '100%',\n    },\n    parentDiv: {\n        display: \"flex\",\n        flexWrap: 'wrap'\n    },\n    textDiv: {\n        float: \"left\",\n        width: '50%',\n        [theme.breakpoints.down(\"xs\")]: {\n            width: '100%',\n        },\n    },\n    heading: {\n        letterSpacing: 2,\n        marginBottom: 30,\n        color: props => props?.textColor ? props.textColor : \"#000000\"\n    },\n    cardDiv: {\n        display: \"inline-block\",\n        width: '50%',\n        [theme.breakpoints.down(\"xs\")]: {\n            width: '100%',\n        },\n    },\n    cardImage: {\n        width: '100%',\n        height: '40vh',\n        borderRadius: 5\n    },\n    description: {\n        color: props => props?.textColor ? props.textColor : \"#000000\",\n        display: 'block',\n        overflow: 'hidden',\n        textAlign: 'justify',\n        fontSize: '0.95rem',\n        height: 150,\n    },\n    line: {\n        background: '#839FAD none repeat scroll 0 0',\n        display: 'block',\n        height: 1,\n        marginTop: 10,\n        marginBottom: 10,\n        position: 'relative',\n        width: '10%'\n    },\n    ctaButton: {\n        borderRadius: 2,\n        backgroundColor: props => props?.buttonColor ? props.buttonColor : \"#000000\",\n        cursor: 'pointer',\n        display: 'inline-block',\n        fontSize: 14,\n        letterSpacing: 3,\n        lineHeight: '45px',\n        padding: '0 45px',\n        textAlign: \"center\",\n        '& a': {\n            color: 'white'\n        }\n    },\n    moreInfoRoot: {\n        position: 'relative',\n        textAlign: 'center',\n        marginTop: -8,\n        marginBottom: 10,\n        '&::before': {\n            content: '\"\"',\n            width: '100%',\n            marginTop: 12,\n            display: 'block',\n            position: 'absolute',\n            borderBottom: '1px dashed #ededed',\n            boxShadow: '0 -15px 15px 10px #ffffff',\n        },\n    },\n    moreInfoButton: {\n        fontSize: '0.7rem',\n        padding: '2px 10px 1px',\n        background: 'white',\n    },\n}));\n\nconst Description = ({ str = '', openSlider, moreInfoText, sliderGalleryProp, cta }) => {\n    const classes = useStyles(sliderGalleryProp);\n    const ref = useRef();\n    const [offsetHeight, setOffsetHeight] = useState(null);\n\n    useEffect(() => {\n        setOffsetHeight(ref?.current?.offsetHeight)\n    }, [str]);\n\n        return (\n            <React.Fragment>\n                <Typography className={classes.description} variant='body1' gutterBottom>\n                    <div ref={ref} dangerouslySetInnerHTML={{ __html: str + '...' }}/>\n                </Typography>\n                {\n                    offsetHeight > 100 && <div className={classes.moreInfoRoot}>\n                        <Button className={classes.moreInfoButton} variant='outlined' color='primary' size='small' onClick={() => openSlider()} style={{ fontSize: '0.7rem', padding: '2px 10px 1px' }}>\n                            {moreInfoText}\n                        </Button>\n                    </div>\n\n                }\n            </React.Fragment>\n        )\n}\n\nconst WebsiteSliderGallery = (props) => {\n\n    const { sliderGallery,\n            otherLangSliderGallery,\n            selectedLang,\n            defaultLang,\n            } = props;\n\n    const [sliderImages, setSliderImages] = useState([]);\n    const [sliderTitle, setSliderTitle] = useState('');\n    const [sliderDescription, setSliderDescription] = useState('');\n    const [sliderCta, setSliderCta] = useState('');\n    const [filteredImages, setFilteredImages] = useState([]);\n    const [showSlider, setShowSlider] = useState([]);\n    const [ isOpenSlider, setIsOpenSlider ] = useState(false);\n    const [hasMobileView, setMobileView] = useState(false);\n    const website = useSelector((state) => state?.formReducer?.website);\n\n    const {GENERAL_SETTINGS} = useContext(WebCmsGlobal);\n    const classes = useStyles(sliderGallery);\n    const settings = {\n        dots: true,\n        speed: 500,\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        infinite: true,\n    }\n\n    useEffect(() => {\n        if (sliderGallery?.gid?.images?.length > 0) {\n            setSliderImages(sliderGallery.gid.images);\n            setFilteredImages(sliderGallery.gid.images);\n        }\n        // handling expiry date\n        if (sliderGallery?.gid?.expiryDate) {\n            const currentDate = moment().format(OREST_ENDPOINT.DATEFORMAT_LOCALE)\n            setShowSlider(moment(sliderGallery?.gid?.expiryDate).isAfter(currentDate))\n        } else {\n            setShowSlider(true)\n        }\n    }, [sliderGallery])\n\n    useEffect(() => {\n        const setResponsiveness = () => {\n            return window.innerWidth < 767\n                ? setMobileView(true)\n                : setMobileView(false)\n        }\n        setResponsiveness()\n        window.addEventListener('resize', () => setResponsiveness())\n    }, [])\n\n    return (\n        <>\n            {\n                showSlider &&\n                <Slider {...settings}>\n                    {sliderImages.map((item, i) => {\n                        return (\n                            <div key={i} className={classes.cardRoot} >\n                                <div className={classes.textDiv}>\n                                    <h4 className={classes.heading} >\n                                        <div dangerouslySetInnerHTML={{ __html: selectedLang === defaultLang ? item.title : otherLangSliderGallery?.length > 0 && otherLangSliderGallery[i]?.title }}/>\n                                        <span className={classes.line}/>\n                                    </h4>\n                                    {\n                                        hasMobileView ?\n                                            <Description\n                                                str={selectedLang === defaultLang ? item.description : otherLangSliderGallery?.length > 0 && otherLangSliderGallery[i]?.description}\n                                                openSlider={()=> {\n                                                    setIsOpenSlider(true);\n                                                    setSliderTitle(item?.title);\n                                                    setSliderDescription(item?.description);\n                                                    setSliderCta(item?.cta);\n                                                }}\n                                                moreInfoText={'Show more'}\n                                                sliderGalleryProp={sliderGallery}\n                                                cta={item?.cta}\n                                            /> :\n                                            <>\n                                                <p className={classes.description}>\n                                                    <div dangerouslySetInnerHTML={{ __html: selectedLang === defaultLang ? item.description : otherLangSliderGallery?.length > 0 && otherLangSliderGallery[i]?.description }}/>\n                                                </p>\n                                                {\n                                                    item?.cta && <Button\n                                                        variant=\"contained\"\n                                                        size=\"small\"\n                                                        color=\"primary\"\n                                                        aria-label=\"add\"\n                                                        className={classes.ctaButton}\n                                                    >\n                                                        <div dangerouslySetInnerHTML={{ __html: selectedLang === defaultLang ? item?.cta : otherLangSliderGallery?.length > 0 && otherLangSliderGallery[i]?.cta }} style={{ fontFamily: website?.assets?.font?.name ? website.assets.font.name : 'Roboto' }}/>\n                                                    </Button>\n                                                }\n                                            </>\n                                    }\n\n                                </div>\n                                <div className={classes.cardDiv}>\n                                    <img alt={'image'} src={GENERAL_SETTINGS.STATIC_URL + item?.fileurl} className={classes.cardImage}  />\n                                </div>\n                                <ThumbnailSliderModal open={isOpenSlider} slider={sliderGallery} sliderTitle={sliderTitle} sliderDesc={sliderDescription} sliderCta={sliderCta} onClose={(e)=> setIsOpenSlider(e)} sliderImages={sliderImages} />\n                            </div>\n                        )\n                    })}\n                </Slider>\n            }\n        </>\n    )\n}\n\nconst memorizedWebsiteSliderGallery = memo(WebsiteSliderGallery)\n\nexport default memorizedWebsiteSliderGallery"]},"metadata":{},"sourceType":"module"}