{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/emp-portal/tabs/Education/index.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Insert, UseOrest, ViewList, Patch, Delete } from \"@webcms/orest\";\nimport WebCmsGlobal from \"../../../webcms-global\";\nimport { useSelector } from \"react-redux\";\nimport { isErrorMsg, OREST_ENDPOINT } from \"../../../../model/orest/constants\";\nimport { Grid, Typography, Dialog, Checkbox, FormControlLabel, Button, Menu, MenuItem, IconButton } from \"@material-ui/core\";\nimport { useSnackbar } from \"notistack\";\nimport { SLASH } from \"../../../../model/globals\";\nimport useTranslation from \"../../../../lib/translations/hooks/useTranslation\";\nimport renderFormElements, { ELEMENT_TYPES } from \"../../../render-form-elements\";\nimport { required } from \"../../../../state/utils/form\";\nimport AddDialogActions from \"../../../AddDialogActions\";\nimport { LocaleContext } from \"../../../../lib/translations/context/LocaleContext\";\nimport LoadingSpinner from \"../../../LoadingSpinner\";\nimport { helper } from \"../../../../@webcms-globals\";\nimport TrackedChangesDialog from \"../../../TrackedChangesDialog\";\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\nimport MaterialTable, { MTableHeader } from \"material-table\";\nimport MaterialTableLocalization from \"../../../MaterialTableLocalization\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport TableColumnText from \"../../../TableColumnText\";\nimport PopupState, { bindMenu, bindTrigger } from \"material-ui-popup-state\";\nimport { CustomToolTip } from \"../../../user-portal/components/CustomToolTip/CustomToolTip\";\nimport CachedIcon from \"@material-ui/icons/Cached\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport moment from \"moment\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nconst VARIANT = 'outlined';\n\nfunction Education(props) {\n  var _educationData$edutyp, _educationData$edutyp2, _educationData$edutyp3, _educationData$edutyp4, _educationData$gradda, _educationData$gradda2, _educationData$gradda3, _educationData$gradda4, _educationData$gradle, _educationData$gradle2, _educationData$gradle3, _educationData$gradle4, _educationData$school, _educationData$school2, _educationData$school3, _educationData$school4, _educationData$school5, _educationData$school6, _educationData$school7, _educationData$school8, _educationData$note, _educationData$note2, _educationData$note3, _educationData$note4;\n\n  //props\n  const {\n    empId\n  } = props; //snackbar\n\n  const {\n    enqueueSnackbar\n  } = useSnackbar(); //context\n\n  const {\n    GENERAL_SETTINGS\n  } = useContext(WebCmsGlobal);\n  const {\n    locale\n  } = useContext(LocaleContext);\n  const {\n    t\n  } = useTranslation();\n  const tableLocalization = MaterialTableLocalization(); //redux state\n\n  const token = useSelector(state => {\n    var _state$orest, _state$orest$currentU, _state$orest$currentU2;\n\n    return (state === null || state === void 0 ? void 0 : (_state$orest = state.orest) === null || _state$orest === void 0 ? void 0 : (_state$orest$currentU = _state$orest.currentUser) === null || _state$orest$currentU === void 0 ? void 0 : (_state$orest$currentU2 = _state$orest$currentU.auth) === null || _state$orest$currentU2 === void 0 ? void 0 : _state$orest$currentU2.access_token) || false;\n  });\n  const hotelRefNo = useSelector(state => {\n    var _state$hotelinfo;\n\n    return (state === null || state === void 0 ? void 0 : (_state$hotelinfo = state.hotelinfo) === null || _state$hotelinfo === void 0 ? void 0 : _state$hotelinfo.currentHotelRefNo) || GENERAL_SETTINGS.HOTELREFNO || false;\n  }); //locale state\n\n  const initialState = {\n    edutypeid: {\n      value: '',\n      isError: false,\n      required: true,\n      helperText: ''\n    },\n    graddate: {\n      value: '',\n      isError: false,\n      required: false,\n      helperText: ''\n    },\n    schoolname: {\n      value: '',\n      isError: false,\n      required: false,\n      helperText: ''\n    },\n    gradlevel: {\n      value: \"\",\n      isError: false,\n      required: false,\n      helperText: ''\n    },\n    schoolplace: {\n      value: '',\n      isError: false,\n      required: false,\n      helperText: ''\n    },\n    note: {\n      value: '',\n      isError: false,\n      required: false,\n      helperText: ''\n    }\n  };\n  const {\n    0: isLoadingList,\n    1: setIsLoadingList\n  } = useState(false);\n  const {\n    0: allHotels,\n    1: setAllHotels\n  } = useState(false);\n  const {\n    0: educationList,\n    1: setEducationList\n  } = useState([]);\n  const {\n    0: openAddDialog,\n    1: setOpenAddDialog\n  } = useState(false);\n  const {\n    0: selectedEducationData,\n    1: setSelectedEducationData\n  } = useState(null);\n  const {\n    0: selectedGid,\n    1: setSelectedGid\n  } = useState(false);\n  const {\n    0: getData,\n    1: setGetData\n  } = useState(null);\n  const {\n    0: openTrackedDialog,\n    1: setOpenTrackedDialog\n  } = useState(false);\n  const {\n    0: isDef,\n    1: setIsDef\n  } = useState(false);\n  const {\n    0: isSaving,\n    1: setIsSaving\n  } = useState(false);\n  const {\n    0: educationData,\n    1: setEducationData\n  } = useState(initialState);\n  const {\n    0: educationDataBase,\n    1: setEducationDataBase\n  } = useState(initialState);\n  const {\n    0: isInitialStateLoad,\n    1: setIsInitialStateLoad\n  } = useState(false);\n  const {\n    0: isDeleting,\n    1: setIsDeleting\n  } = useState(false);\n  const formElements = [{\n    type: ELEMENT_TYPES.autoComplete,\n    id: 'edutypeid',\n    name: 'edutypeid',\n    value: ((_educationData$edutyp = educationData.edutypeid) === null || _educationData$edutyp === void 0 ? void 0 : _educationData$edutyp.value) || null,\n    disabled: isSaving,\n    label: t('str_educationType'),\n    variant: VARIANT,\n    required: (_educationData$edutyp2 = educationData.edutypeid) === null || _educationData$edutyp2 === void 0 ? void 0 : _educationData$edutyp2.isRequired,\n    error: (_educationData$edutyp3 = educationData.edutypeid) === null || _educationData$edutyp3 === void 0 ? void 0 : _educationData$edutyp3.isError,\n    helperText: (_educationData$edutyp4 = educationData.edutypeid) === null || _educationData$edutyp4 === void 0 ? void 0 : _educationData$edutyp4.helperText,\n    onChange: (newValue, name) => handleOnChangeFormElements(newValue, name),\n    onBlur: (e, name) => handleOnBlurFormElements(e, name),\n    onLoad: (initialValue, name) => {\n      const data = _objectSpread({}, educationData);\n\n      data[name].value = initialValue ? initialValue : null;\n      setEducationData(data);\n    },\n    endpoint: 'edutype/view/list',\n    params: {\n      text: '',\n      limit: 25,\n      field: 'code'\n    },\n    initialId: isInitialStateLoad && (selectedEducationData === null || selectedEducationData === void 0 ? void 0 : selectedEducationData.edutypeid) || false,\n    showOptionLabel: 'code',\n    showOption: 'code',\n    searchParam: 'code,description',\n    fullWidth: true,\n    gridProps: {\n      xs: 12,\n      sm: 12\n    }\n  }, {\n    type: ELEMENT_TYPES.datePicker,\n    id: 'graddate',\n    name: 'graddate',\n    value: (_educationData$gradda = educationData.graddate) === null || _educationData$gradda === void 0 ? void 0 : _educationData$gradda.value,\n    error: (_educationData$gradda2 = educationData.graddate) === null || _educationData$gradda2 === void 0 ? void 0 : _educationData$gradda2.isError,\n    required: (_educationData$gradda3 = educationData.graddate) === null || _educationData$gradda3 === void 0 ? void 0 : _educationData$gradda3.isRequired,\n    disabled: isSaving,\n    label: t('str_graduateDate'),\n    helperText: (_educationData$gradda4 = educationData.graddate) === null || _educationData$gradda4 === void 0 ? void 0 : _educationData$gradda4.helperText,\n    onChange: (newValue, name) => handleOnChangeFormElements(newValue, name),\n    onBlur: e => handleOnBlurFormElements(e),\n    variant: VARIANT,\n    fullWidth: true,\n    gridProps: {\n      xs: 12,\n      sm: 6\n    }\n  }, {\n    type: ELEMENT_TYPES.textField,\n    id: 'gradlevel',\n    name: 'gradlevel',\n    value: (_educationData$gradle = educationData.gradlevel) === null || _educationData$gradle === void 0 ? void 0 : _educationData$gradle.value,\n    error: (_educationData$gradle2 = educationData.gradlevel) === null || _educationData$gradle2 === void 0 ? void 0 : _educationData$gradle2.isError,\n    required: (_educationData$gradle3 = educationData.gradlevel) === null || _educationData$gradle3 === void 0 ? void 0 : _educationData$gradle3.isRequired,\n    disabled: isSaving,\n    label: t('str_graduateLevel'),\n    helperText: (_educationData$gradle4 = educationData.gradlevel) === null || _educationData$gradle4 === void 0 ? void 0 : _educationData$gradle4.helperText,\n    onChange: e => handleOnChangeFormElements(e),\n    onBlur: e => handleOnBlurFormElements(e),\n    variant: VARIANT,\n    fullWidth: true,\n    gridProps: {\n      xs: 12,\n      sm: 6\n    }\n  }, {\n    type: ELEMENT_TYPES.textField,\n    id: 'schoolname',\n    name: 'schoolname',\n    value: (_educationData$school = educationData.schoolname) === null || _educationData$school === void 0 ? void 0 : _educationData$school.value,\n    error: (_educationData$school2 = educationData.schoolname) === null || _educationData$school2 === void 0 ? void 0 : _educationData$school2.isError,\n    required: (_educationData$school3 = educationData.schoolname) === null || _educationData$school3 === void 0 ? void 0 : _educationData$school3.isRequired,\n    disabled: isSaving,\n    label: t('str_schoolName'),\n    helperText: (_educationData$school4 = educationData.schoolname) === null || _educationData$school4 === void 0 ? void 0 : _educationData$school4.helperText,\n    onChange: e => handleOnChangeFormElements(e),\n    onBlur: e => handleOnBlurFormElements(e),\n    variant: VARIANT,\n    fullWidth: true,\n    gridProps: {\n      xs: 12,\n      sm: 6\n    }\n  }, {\n    type: ELEMENT_TYPES.textField,\n    id: 'schoolplace',\n    name: 'schoolplace',\n    value: (_educationData$school5 = educationData.schoolplace) === null || _educationData$school5 === void 0 ? void 0 : _educationData$school5.value,\n    error: (_educationData$school6 = educationData.schoolplace) === null || _educationData$school6 === void 0 ? void 0 : _educationData$school6.isError,\n    required: (_educationData$school7 = educationData.schoolplace) === null || _educationData$school7 === void 0 ? void 0 : _educationData$school7.isRequired,\n    disabled: isSaving,\n    label: t('str_schoolPlace'),\n    helperText: (_educationData$school8 = educationData.schoolplace) === null || _educationData$school8 === void 0 ? void 0 : _educationData$school8.helperText,\n    onChange: e => handleOnChangeFormElements(e),\n    onBlur: e => handleOnBlurFormElements(e),\n    variant: VARIANT,\n    fullWidth: true,\n    gridProps: {\n      xs: 12,\n      sm: 6\n    }\n  }, {\n    type: ELEMENT_TYPES.textField,\n    id: 'note',\n    name: 'note',\n    value: (_educationData$note = educationData.note) === null || _educationData$note === void 0 ? void 0 : _educationData$note.value,\n    error: (_educationData$note2 = educationData.note) === null || _educationData$note2 === void 0 ? void 0 : _educationData$note2.isError,\n    required: (_educationData$note3 = educationData.note) === null || _educationData$note3 === void 0 ? void 0 : _educationData$note3.isRequired,\n    disabled: isSaving,\n    label: t('str_note'),\n    helperText: (_educationData$note4 = educationData.note) === null || _educationData$note4 === void 0 ? void 0 : _educationData$note4.helperText,\n    onChange: e => handleOnChangeFormElements(e),\n    onBlur: e => handleOnBlurFormElements(e),\n    variant: VARIANT,\n    multiLine: true,\n    rows: 4,\n    rowsMax: 4,\n    fullWidth: true,\n    gridProps: {\n      xs: 12\n    }\n  }];\n  const educationColumns = [{\n    title: __jsx(Button, {\n      style: {\n        padding: 0,\n        maxWidth: 25,\n        minWidth: 25\n      },\n      disabled: true,\n      color: 'primary',\n      variant: 'text',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }\n    }, __jsx(MoreVertIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }\n    })),\n    render: props => __jsx(TableColumnText, {\n      minWidth: 30,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }\n    }, __jsx(PopupState, {\n      variant: \"popover\",\n      popupId: \"material-table-action-column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }\n    }, popupState => __jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 29\n      }\n    }, __jsx(Button, _extends({\n      style: {\n        padding: 0,\n        maxWidth: 25,\n        minWidth: 25\n      },\n      color: 'primary',\n      variant: 'contained'\n    }, bindTrigger(popupState), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 33\n      }\n    }), __jsx(MoreVertIcon, {\n      size: 'small',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 37\n      }\n    })), __jsx(Menu, _extends({\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"left\"\n      },\n      transformOrigin: {\n        vertical: \"top\",\n        horizontal: \"left\"\n      },\n      getContentAnchorEl: null\n    }, bindMenu(popupState), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 33\n      }\n    }), __jsx(MenuItem, {\n      onClick: () => {\n        setSelectedEducationData(props);\n        setSelectedGid((props === null || props === void 0 ? void 0 : props.gid) || false);\n        handleOpenAddDialog(props);\n        popupState.close();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 37\n      }\n    }, __jsx(EditOutlinedIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 42\n      }\n    }), __jsx(Typography, {\n      style: {\n        paddingLeft: '8px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 41\n      }\n    }, t('str_edit'))), __jsx(MenuItem, {\n      onClick: () => handleDeleteItem(props.gid),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 37\n      }\n    }, __jsx(DeleteIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 41\n      }\n    }), __jsx(Typography, {\n      style: {\n        paddingLeft: '8px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 41\n      }\n    }, t('str_delete')))))))\n  }, {\n    title: t('str_educationType'),\n    field: 'edutype',\n    render: props => __jsx(TableColumnText, {\n      minWidth: 150,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 32\n      }\n    }, props === null || props === void 0 ? void 0 : props.edutype)\n  }, {\n    title: t('str_graduateDate'),\n    field: 'graddate',\n    render: props => __jsx(TableColumnText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 32\n      }\n    }, props === null || props === void 0 ? void 0 : props.graddate)\n  }, {\n    title: t('str_schoolName'),\n    field: 'schoolname',\n    render: props => __jsx(TableColumnText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 32\n      }\n    }, props === null || props === void 0 ? void 0 : props.schoolname)\n  }, {\n    title: t('str_graduateLevel'),\n    field: 'gradlevel',\n    render: props => __jsx(TableColumnText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 32\n      }\n    }, props === null || props === void 0 ? void 0 : props.gradlevel)\n  }, {\n    title: t('str_schoolPlace'),\n    field: 'schoolplace',\n    render: props => __jsx(TableColumnText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 32\n      }\n    }, props === null || props === void 0 ? void 0 : props.schoolplace)\n  }, {\n    title: t('str_note'),\n    field: 'note',\n    render: props => __jsx(TableColumnText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 32\n      }\n    }, props === null || props === void 0 ? void 0 : props.note)\n  }, {\n    title: t('str_empId'),\n    field: 'empid',\n    headerStyle: {\n      textAlign: 'right'\n    },\n    render: props => __jsx(TableColumnText, {\n      textAlign: 'right',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 32\n      }\n    }, props === null || props === void 0 ? void 0 : props.empid)\n  }, {\n    title: t('str_id'),\n    field: 'id',\n    headerStyle: {\n      textAlign: 'right'\n    },\n    render: props => __jsx(TableColumnText, {\n      textAlign: 'right',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 32\n      }\n    }, props === null || props === void 0 ? void 0 : props.id)\n  }];\n  useEffect(() => {\n    if (token && empId) {\n      getEducationList();\n    }\n  }, []);\n  useEffect(() => {\n    let isEffect = true;\n\n    if (isEffect && educationData && getData) {\n      const newClientInitialState = helper.objectMapper(educationData, getData, ['edutypeid']);\n      setEducationData(newClientInitialState);\n      setEducationDataBase(newClientInitialState);\n      setIsInitialStateLoad(true);\n    }\n\n    return () => {\n      isEffect = false;\n    };\n  }, [getData]);\n\n  const handleDeleteItem = gid => {\n    setIsDeleting(true);\n    Delete({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.EMPEDU,\n      token,\n      gid: gid,\n      params: {\n        hotelrefno: GENERAL_SETTINGS.HOTELREFNO\n      }\n    }).then(res => {\n      if (res.status === 200) {\n        getEducationList();\n      } else {\n        var _error$errorMsg, _error$errorMsg2;\n\n        const error = isErrorMsg(res);\n        enqueueSnackbar(((_error$errorMsg = error.errorMsg) === null || _error$errorMsg === void 0 ? void 0 : _error$errorMsg.length) > 50 ? (_error$errorMsg2 = error.errorMsg) === null || _error$errorMsg2 === void 0 ? void 0 : _error$errorMsg2.substring(0, 50) : error.errorMsg, {\n          variant: 'error'\n        });\n        setIsDeleting(false);\n      }\n    });\n  };\n\n  const getEducationList = () => {\n    setIsLoadingList(true);\n    ViewList({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.EMPEDU,\n      token,\n      params: {\n        query: `empid:${empId}`,\n        allhotels: allHotels,\n        hotelrefno: hotelRefNo\n      }\n    }).then(res => {\n      setIsLoadingList(false);\n\n      if (res.status === 200) {\n        if (res.data.count > 0) {\n          setEducationList(res.data.data);\n        }\n      } else {\n        var _error$errorMsg3, _error$errorMsg4;\n\n        const error = isErrorMsg(res);\n        enqueueSnackbar(((_error$errorMsg3 = error.errorMsg) === null || _error$errorMsg3 === void 0 ? void 0 : _error$errorMsg3.length) > 50 ? (_error$errorMsg4 = error.errorMsg) === null || _error$errorMsg4 === void 0 ? void 0 : _error$errorMsg4.substring(0, 50) : error.errorMsg, {\n          variant: 'error'\n        });\n      }\n    });\n  };\n\n  const handleGetSelectededucation = selectedEducation => {\n    if (selectedEducation) {\n      setIsDef(true);\n      UseOrest({\n        apiUrl: GENERAL_SETTINGS.OREST_URL,\n        endpoint: OREST_ENDPOINT.EMPEDU + SLASH + OREST_ENDPOINT.VIEW + SLASH + 'get' + SLASH + selectedEducation.gid,\n        token\n      }).then(res => {\n        setIsDef(false);\n\n        if (res.status === 200 && res.data.data) {\n          const data = res.data.data;\n          setGetData(data);\n        }\n      });\n    }\n  };\n\n  const handleDefRecord = () => {\n    setIsDef(true);\n    UseOrest({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.EMPEDU + SLASH + OREST_ENDPOINT.DEF,\n      token,\n      params: {\n        hotelrefno: hotelRefNo\n      }\n    }).then(res => {\n      if (res.status === 200 && res.data.count > 0) {\n        const data = Object.assign({}, res.data.data, educationData);\n        setEducationData(data);\n        setEducationDataBase(data);\n      }\n\n      setIsDef(false);\n    });\n  };\n\n  const handleSave = () => {\n    const data = _objectSpread({}, educationData);\n\n    Object.keys(initialState).map(key => {\n      data[key] = typeof data[key].value === 'object' ? data[key].value ? data[key].value.id : null : data[key].value;\n    });\n\n    if (empId) {\n      setIsSaving(true);\n\n      if (selectedGid) {\n        Patch({\n          apiUrl: GENERAL_SETTINGS.OREST_URL,\n          endpoint: OREST_ENDPOINT.EMPEDU,\n          gid: selectedGid,\n          data: data,\n          token\n        }).then(res => {\n          if (res.status === 200) {\n            enqueueSnackbar(t('str_processCompletedSuccessfully'), {\n              variant: 'success'\n            });\n            setOpenAddDialog(false);\n            getEducationList();\n            handleReset();\n          } else {\n            const error = isErrorMsg(res);\n            enqueueSnackbar(error.errorMsg, {\n              variant: 'error'\n            });\n          }\n\n          setIsSaving(false);\n        });\n      } else {\n        data.empid = empId;\n        data.hotelrefno = hotelRefNo;\n        Insert({\n          apiUrl: GENERAL_SETTINGS.OREST_URL,\n          endpoint: OREST_ENDPOINT.EMPEDU,\n          token,\n          data: data\n        }).then(res => {\n          if (res.status === 200) {\n            enqueueSnackbar(t('str_processCompletedSuccessfully'), {\n              variant: 'success'\n            });\n            setOpenAddDialog(false);\n            getEducationList();\n            handleReset();\n          } else {\n            const error = isErrorMsg(res);\n            enqueueSnackbar(error.errorMsg, {\n              variant: 'error'\n            });\n          }\n\n          setIsSaving(false);\n        });\n        console.log(data);\n      }\n    }\n  };\n\n  const handleOnChangeFormElements = (event, key, isOnBlur) => {\n    const name = key ? key : event.target.name;\n    const value = event !== null && event !== void 0 && event.target ? event.target.value : event;\n\n    if (isOnBlur) {\n      var _educationData$name, _educationData$name2;\n\n      setEducationData(_objectSpread(_objectSpread({}, educationData), {}, {\n        [name]: _objectSpread(_objectSpread({}, educationData[name]), {}, {\n          isError: ((_educationData$name = educationData[name]) === null || _educationData$name === void 0 ? void 0 : _educationData$name.isRequired) && !!required(value),\n          helperText: ((_educationData$name2 = educationData[name]) === null || _educationData$name2 === void 0 ? void 0 : _educationData$name2.isRequired) && !!required(value) && t('str_mandatory')\n        })\n      }));\n    } else {\n      var _educationData$name3, _educationData$name4;\n\n      setEducationData(_objectSpread(_objectSpread({}, educationData), {}, {\n        [name]: _objectSpread(_objectSpread({}, educationData[name]), {}, {\n          value: name === \"graddate\" ? moment(value).format(OREST_ENDPOINT.DATEFORMAT) : value,\n          isError: ((_educationData$name3 = educationData[name]) === null || _educationData$name3 === void 0 ? void 0 : _educationData$name3.isRequired) && !!required(value),\n          helperText: ((_educationData$name4 = educationData[name]) === null || _educationData$name4 === void 0 ? void 0 : _educationData$name4.isRequired) && !!required(value) && t('str_mandatory')\n        })\n      }));\n    }\n  };\n\n  const handleOnBlurFormElements = (event, key) => {\n    handleOnChangeFormElements(event, key, true);\n  };\n\n  const handleOpenAddDialog = (selectedEducation = false) => {\n    if (selectedEducation) {\n      handleGetSelectededucation(selectedEducation);\n    } else {\n      handleDefRecord();\n    }\n\n    setOpenAddDialog(true);\n  };\n\n  const handleCloseDialog = () => {\n    if (JSON.stringify(educationData) !== JSON.stringify(educationDataBase)) {\n      setOpenTrackedDialog(true);\n    } else {\n      setOpenAddDialog(false);\n      handleReset();\n    }\n  };\n\n  const handleReset = () => {\n    setTimeout(() => {\n      setIsInitialStateLoad(false);\n      setGetData(null);\n      setEducationData(initialState);\n      setEducationDataBase(initialState);\n      setSelectedEducationData(null);\n    }, 100);\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 9\n    }\n  }, __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 4,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 21\n    }\n  }, __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 25\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 29\n    }\n  }, __jsx(CustomToolTip, {\n    title: t('str_refresh'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 33\n    }\n  }, __jsx(IconButton, {\n    onClick: () => getEducationList(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 37\n    }\n  }, __jsx(CachedIcon, {\n    style: {\n      color: \"#F16A4B\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 41\n    }\n  })))), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 29\n    }\n  }, __jsx(CustomToolTip, {\n    title: t('str_add'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 33\n    }\n  }, __jsx(IconButton, {\n    onClick: () => handleOpenAddDialog(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 37\n    }\n  }, __jsx(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 41\n    }\n  })))))), __jsx(Grid, {\n    item: true,\n    xs: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 21\n    }\n  }), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 21\n    }\n  }, __jsx(MaterialTable, {\n    isLoading: isLoadingList,\n    columns: educationColumns,\n    data: educationList,\n    localization: tableLocalization,\n    options: {\n      headerStyle: {\n        cursor: 'default',\n        fontWeight: \"bold\",\n        fontSize: \"12px\",\n        color: \"#A3A6B4\",\n        textTransform: \"uppercase\",\n        backgroundColor: \"#F5F6FA\",\n        whiteSpace: 'nowrap',\n        borderLeft: '1px solid #FFF'\n      },\n      cellStyle: {\n        whiteSpace: 'nowrap',\n        borderLeft: '1px solid rgba(224, 224, 224, 1)',\n        fontSize: '13px'\n      },\n      toolbar: false,\n      selection: false,\n      sorting: false,\n      search: false,\n      actionsColumnIndex: 1,\n      selectionColumnIndex: 1\n    },\n    components: {\n      Header: props => {\n        const overrideProps = _objectSpread({}, props);\n\n        overrideProps.draggable = false;\n        return __jsx(MTableHeader, _extends({}, overrideProps, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 41\n          }\n        }));\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 25\n    }\n  }))), __jsx(Dialog, {\n    open: openAddDialog,\n    maxWidth: 'sm',\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    style: {\n      padding: 24\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 21\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 25\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 29\n    }\n  }, __jsx(Typography, {\n    style: {\n      fontWeight: '600',\n      fontSize: '18px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 33\n    }\n  }, selectedEducationData ? t('str_editEducation') : t('str_addEducationInformation'))), isDef ? __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 37\n    }\n  }, __jsx(LoadingSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 41\n    }\n  })) : __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 603,\n      columnNumber: 37\n    }\n  }, formElements.map((item, index) => __jsx(Grid, _extends({\n    key: index,\n    item: true\n  }, item.gridProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 49\n    }\n  }), renderFormElements(item))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 611,\n      columnNumber: 41\n    }\n  }, __jsx(AddDialogActions, {\n    disabled: isSaving,\n    loading: isSaving,\n    onCancelClick: handleCloseDialog,\n    onSaveClick: handleSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 612,\n      columnNumber: 45\n    }\n  })))))), __jsx(TrackedChangesDialog, {\n    open: openTrackedDialog,\n    onPressNo: e => {\n      setOpenTrackedDialog(e);\n    },\n    onPressYes: e => {\n      setOpenTrackedDialog(e);\n      setOpenAddDialog(false);\n      handleReset();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 17\n    }\n  })));\n}\n\nexport default Education;","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/emp-portal/tabs/Education/index.js"],"names":["React","useState","useEffect","useContext","Insert","UseOrest","ViewList","Patch","Delete","WebCmsGlobal","useSelector","isErrorMsg","OREST_ENDPOINT","Grid","Typography","Dialog","Checkbox","FormControlLabel","Button","Menu","MenuItem","IconButton","useSnackbar","SLASH","useTranslation","renderFormElements","ELEMENT_TYPES","required","AddDialogActions","LocaleContext","LoadingSpinner","helper","TrackedChangesDialog","EditOutlinedIcon","MaterialTable","MTableHeader","MaterialTableLocalization","MoreVertIcon","TableColumnText","PopupState","bindMenu","bindTrigger","CustomToolTip","CachedIcon","AddIcon","moment","DeleteIcon","VARIANT","Education","props","empId","enqueueSnackbar","GENERAL_SETTINGS","locale","t","tableLocalization","token","state","orest","currentUser","auth","access_token","hotelRefNo","hotelinfo","currentHotelRefNo","HOTELREFNO","initialState","edutypeid","value","isError","helperText","graddate","schoolname","gradlevel","schoolplace","note","isLoadingList","setIsLoadingList","allHotels","setAllHotels","educationList","setEducationList","openAddDialog","setOpenAddDialog","selectedEducationData","setSelectedEducationData","selectedGid","setSelectedGid","getData","setGetData","openTrackedDialog","setOpenTrackedDialog","isDef","setIsDef","isSaving","setIsSaving","educationData","setEducationData","educationDataBase","setEducationDataBase","isInitialStateLoad","setIsInitialStateLoad","isDeleting","setIsDeleting","formElements","type","autoComplete","id","name","disabled","label","variant","isRequired","error","onChange","newValue","handleOnChangeFormElements","onBlur","e","handleOnBlurFormElements","onLoad","initialValue","data","endpoint","params","text","limit","field","initialId","showOptionLabel","showOption","searchParam","fullWidth","gridProps","xs","sm","datePicker","textField","multiLine","rows","rowsMax","educationColumns","title","padding","maxWidth","minWidth","render","popupState","vertical","horizontal","gid","handleOpenAddDialog","close","paddingLeft","handleDeleteItem","edutype","headerStyle","textAlign","empid","getEducationList","isEffect","newClientInitialState","objectMapper","apiUrl","OREST_URL","EMPEDU","hotelrefno","then","res","status","errorMsg","length","substring","query","allhotels","count","handleGetSelectededucation","selectedEducation","VIEW","handleDefRecord","DEF","Object","assign","handleSave","keys","map","key","handleReset","console","log","event","isOnBlur","target","format","DATEFORMAT","handleCloseDialog","JSON","stringify","setTimeout","color","cursor","fontWeight","fontSize","textTransform","backgroundColor","whiteSpace","borderLeft","cellStyle","toolbar","selection","sorting","search","actionsColumnIndex","selectionColumnIndex","Header","overrideProps","draggable","item","index"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext} from 'react';\nimport {Insert, UseOrest, ViewList, Patch, Delete} from \"@webcms/orest\";\nimport WebCmsGlobal from \"../../../webcms-global\";\nimport {useSelector} from \"react-redux\";\nimport {isErrorMsg, OREST_ENDPOINT} from \"../../../../model/orest/constants\";\nimport {\n    Grid,\n    Typography,\n    Dialog,\n    Checkbox, FormControlLabel, Button, Menu, MenuItem, IconButton\n} from \"@material-ui/core\";\nimport {useSnackbar} from \"notistack\";\nimport {SLASH} from \"../../../../model/globals\";\nimport useTranslation from \"../../../../lib/translations/hooks/useTranslation\";\nimport renderFormElements, {ELEMENT_TYPES} from \"../../../render-form-elements\";\nimport {required} from \"../../../../state/utils/form\";\nimport AddDialogActions from \"../../../AddDialogActions\";\nimport {LocaleContext} from \"../../../../lib/translations/context/LocaleContext\";\nimport LoadingSpinner from \"../../../LoadingSpinner\";\nimport {helper} from \"../../../../@webcms-globals\";\nimport TrackedChangesDialog from \"../../../TrackedChangesDialog\";\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\nimport MaterialTable, {MTableHeader} from \"material-table\";\nimport MaterialTableLocalization from \"../../../MaterialTableLocalization\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport TableColumnText from \"../../../TableColumnText\";\nimport PopupState, {bindMenu, bindTrigger} from \"material-ui-popup-state\";\nimport {CustomToolTip} from \"../../../user-portal/components/CustomToolTip/CustomToolTip\";\nimport CachedIcon from \"@material-ui/icons/Cached\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport moment from \"moment\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\n\nconst VARIANT = 'outlined'\n\nfunction Education(props) {\n\n    //props\n    const {empId} = props\n\n    //snackbar\n    const {enqueueSnackbar} = useSnackbar();\n\n    //context\n    const {GENERAL_SETTINGS} = useContext(WebCmsGlobal)\n    const {locale} = useContext(LocaleContext)\n    const {t} = useTranslation()\n\n    const tableLocalization = MaterialTableLocalization();\n\n    //redux state\n    const token = useSelector((state) => state?.orest?.currentUser?.auth?.access_token || false)\n    const hotelRefNo = useSelector((state) => state?.hotelinfo?.currentHotelRefNo || GENERAL_SETTINGS.HOTELREFNO || false)\n\n    //locale state\n    const initialState = {\n        edutypeid: {value: '', isError: false, required: true, helperText: ''},\n        graddate: {value: '', isError: false, required: false, helperText: ''},\n        schoolname: {value: '', isError: false, required: false, helperText: ''},\n        gradlevel: {value: \"\", isError: false, required: false, helperText: ''},\n        schoolplace: {value: '', isError: false, required: false, helperText: ''},\n        note: {value: '', isError: false, required: false, helperText: ''},\n    }\n\n    const [isLoadingList, setIsLoadingList] = useState(false)\n    const [allHotels, setAllHotels] = useState(false)\n    const [educationList, setEducationList] = useState([])\n    const [openAddDialog, setOpenAddDialog] = useState(false);\n\n    const [selectedEducationData, setSelectedEducationData] = useState(null)\n    const [selectedGid, setSelectedGid] = useState(false)\n    const [getData, setGetData] = useState(null)\n    const [openTrackedDialog, setOpenTrackedDialog] = useState(false);\n    const [isDef, setIsDef] = useState(false)\n    const [isSaving, setIsSaving] = useState(false)\n    const [educationData, setEducationData] = useState(initialState)\n    const [educationDataBase, setEducationDataBase] = useState(initialState)\n    const [isInitialStateLoad, setIsInitialStateLoad] = useState(false)\n    const [isDeleting, setIsDeleting] = useState(false)\n\n    const formElements = [\n        {\n            type: ELEMENT_TYPES.autoComplete,\n            id: 'edutypeid',\n            name: 'edutypeid',\n            value: educationData.edutypeid?.value || null,\n            disabled: isSaving,\n            label: t('str_educationType'),\n            variant: VARIANT,\n            required: educationData.edutypeid?.isRequired,\n            error: educationData.edutypeid?.isError,\n            helperText: educationData.edutypeid?.helperText,\n            onChange: (newValue, name) => handleOnChangeFormElements(newValue, name),\n            onBlur: (e, name) => handleOnBlurFormElements(e, name),\n            onLoad: (initialValue, name) => {\n                const data = {...educationData}\n                data[name].value = initialValue ? initialValue : null\n                setEducationData(data)\n            },\n            endpoint: 'edutype/view/list',\n            params: {text: '', limit: 25, field: 'code'},\n            initialId: isInitialStateLoad && selectedEducationData?.edutypeid || false,\n            showOptionLabel: 'code',\n            showOption: 'code',\n            searchParam: 'code,description',\n            fullWidth: true,\n            gridProps: {xs: 12, sm: 12}\n        },\n        {\n            type: ELEMENT_TYPES.datePicker,\n            id: 'graddate',\n            name: 'graddate',\n            value: educationData.graddate?.value,\n            error: educationData.graddate?.isError,\n            required: educationData.graddate?.isRequired,\n            disabled: isSaving,\n            label: t('str_graduateDate'),\n            helperText: educationData.graddate?.helperText,\n            onChange: (newValue, name) => handleOnChangeFormElements(newValue, name),\n            onBlur: (e) => handleOnBlurFormElements(e),\n            variant: VARIANT,\n            fullWidth: true,\n            gridProps: {xs: 12, sm: 6}\n        },\n        {\n            type: ELEMENT_TYPES.textField,\n            id: 'gradlevel',\n            name: 'gradlevel',\n            value: educationData.gradlevel?.value,\n            error: educationData.gradlevel?.isError,\n            required: educationData.gradlevel?.isRequired,\n            disabled: isSaving,\n            label: t('str_graduateLevel'),\n            helperText: educationData.gradlevel?.helperText,\n            onChange: (e) => handleOnChangeFormElements(e),\n            onBlur: (e) => handleOnBlurFormElements(e),\n            variant: VARIANT,\n            fullWidth: true,\n            gridProps: {xs: 12, sm: 6}\n        },\n        {\n            type: ELEMENT_TYPES.textField,\n            id: 'schoolname',\n            name: 'schoolname',\n            value: educationData.schoolname?.value,\n            error: educationData.schoolname?.isError,\n            required: educationData.schoolname?.isRequired,\n            disabled: isSaving,\n            label: t('str_schoolName'),\n            helperText: educationData.schoolname?.helperText,\n            onChange: (e) => handleOnChangeFormElements(e),\n            onBlur: (e) => handleOnBlurFormElements(e),\n            variant: VARIANT,\n            fullWidth: true,\n            gridProps: {xs: 12, sm: 6}\n        },\n        {\n            type: ELEMENT_TYPES.textField,\n            id: 'schoolplace',\n            name: 'schoolplace',\n            value: educationData.schoolplace?.value,\n            error: educationData.schoolplace?.isError,\n            required: educationData.schoolplace?.isRequired,\n            disabled: isSaving,\n            label: t('str_schoolPlace'),\n            helperText: educationData.schoolplace?.helperText,\n            onChange: (e) => handleOnChangeFormElements(e),\n            onBlur: (e) => handleOnBlurFormElements(e),\n            variant: VARIANT,\n            fullWidth: true,\n            gridProps: {xs: 12, sm: 6}\n        },\n        {\n            type: ELEMENT_TYPES.textField,\n            id: 'note',\n            name: 'note',\n            value: educationData.note?.value,\n            error: educationData.note?.isError,\n            required: educationData.note?.isRequired,\n            disabled: isSaving,\n            label: t('str_note'),\n            helperText: educationData.note?.helperText,\n            onChange: (e) => handleOnChangeFormElements(e),\n            onBlur: (e) => handleOnBlurFormElements(e),\n            variant: VARIANT,\n            multiLine: true,\n            rows: 4,\n            rowsMax: 4,\n            fullWidth: true,\n            gridProps: {xs: 12}\n        },\n    ]\n\n    const educationColumns = [\n        {\n            title: (\n                <Button\n                    style={{padding: 0, maxWidth: 25, minWidth: 25}}\n                    disabled\n                    color={'primary'}\n                    variant={'text'}\n                >\n                    <MoreVertIcon/>\n                </Button>\n            ),\n            render: props => (\n                <TableColumnText minWidth={30}>\n                    <PopupState variant=\"popover\" popupId=\"material-table-action-column\">\n                        {(popupState) => (\n                            <React.Fragment>\n                                <Button\n                                    style={{padding: 0, maxWidth: 25, minWidth: 25}}\n                                    color={'primary'}\n                                    variant={'contained'}\n                                    {...bindTrigger(popupState)}\n                                >\n                                    <MoreVertIcon size={'small'}/>\n                                </Button>\n                                <Menu\n                                    anchorOrigin={{\n                                        vertical: \"bottom\",\n                                        horizontal: \"left\"\n                                    }}\n                                    transformOrigin={{\n                                        vertical: \"top\",\n                                        horizontal: \"left\"\n                                    }}\n                                    getContentAnchorEl={null}\n                                    {...bindMenu(popupState)}\n                                >\n                                    <MenuItem\n                                        onClick={() => {\n                                            setSelectedEducationData(props)\n                                            setSelectedGid(props?.gid || false)\n\n                                            handleOpenAddDialog(props)\n                                            popupState.close();\n                                        }}\n                                    >\n                                        {<EditOutlinedIcon/>}\n                                        <Typography style={{paddingLeft: '8px'}}>{t('str_edit')}</Typography>\n                                    </MenuItem>\n                                    <MenuItem\n                                        onClick={() => handleDeleteItem(props.gid)}\n                                    >\n                                        <DeleteIcon/>\n                                        <Typography style={{paddingLeft: '8px'}}>{t('str_delete')}</Typography>\n                                    </MenuItem>\n                                </Menu>\n                            </React.Fragment>\n                        )}\n                    </PopupState>\n                </TableColumnText>\n            )\n        },\n        {\n            title: t('str_educationType'),\n            field: 'edutype',\n            render: (props) => <TableColumnText minWidth={150}>{props?.edutype}</TableColumnText>\n        },\n        {\n            title: t('str_graduateDate'),\n            field: 'graddate',\n            render: (props) => <TableColumnText>{props?.graddate}</TableColumnText>\n        },\n        {\n            title: t('str_schoolName'),\n            field: 'schoolname',\n            render: (props) => <TableColumnText>{props?.schoolname}</TableColumnText>\n        },\n        {\n            title: t('str_graduateLevel'),\n            field: 'gradlevel',\n            render: (props) => <TableColumnText>{props?.gradlevel}</TableColumnText>\n        },\n        {\n            title: t('str_schoolPlace'),\n            field: 'schoolplace',\n            render: (props) => <TableColumnText>{props?.schoolplace}</TableColumnText>\n        },\n        {\n            title: t('str_note'),\n            field: 'note',\n            render: (props) => <TableColumnText>{props?.note}</TableColumnText>\n        },\n        {\n            title: t('str_empId'),\n            field: 'empid',\n            headerStyle: {\n                textAlign: 'right'\n            },\n            render: (props) => <TableColumnText textAlign={'right'}>{props?.empid}</TableColumnText>\n        },\n        {\n            title: t('str_id'),\n            field: 'id',\n            headerStyle: {\n                textAlign: 'right'\n            },\n            render: (props) => <TableColumnText textAlign={'right'}>{props?.id}</TableColumnText>\n        },\n    ]\n\n\n    useEffect(() => {\n        if (token && empId) {\n            getEducationList()\n        }\n    }, [])\n\n    useEffect(() => {\n        let isEffect = true\n        if (isEffect && educationData && getData) {\n            const newClientInitialState = helper.objectMapper(educationData, getData, ['edutypeid'])\n            setEducationData(newClientInitialState)\n            setEducationDataBase(newClientInitialState)\n            setIsInitialStateLoad(true)\n        }\n\n\n        return () => {\n            isEffect = false\n        }\n\n    }, [getData])\n\n    const handleDeleteItem = (gid) => {\n        setIsDeleting(true)\n        Delete({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.EMPEDU,\n            token,\n            gid: gid,\n            params: {\n                hotelrefno: GENERAL_SETTINGS.HOTELREFNO,\n            }\n        }).then((res) => {\n            if (res.status === 200) {\n                getEducationList()\n            } else {\n                const error = isErrorMsg(res)\n                enqueueSnackbar(error.errorMsg?.length > 50 ? error.errorMsg?.substring(0, 50) : error.errorMsg, {variant: 'error'})\n                setIsDeleting(false)\n            }\n        })\n    }\n\n    const getEducationList = () => {\n        setIsLoadingList(true)\n        ViewList({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.EMPEDU,\n            token,\n            params: {\n                query: `empid:${empId}`,\n                allhotels: allHotels,\n                hotelrefno: hotelRefNo\n            }\n        }).then(res => {\n            setIsLoadingList(false)\n            if (res.status === 200) {\n                if (res.data.count > 0) {\n                    setEducationList(res.data.data)\n                }\n            } else {\n                const error = isErrorMsg(res)\n                enqueueSnackbar(error.errorMsg?.length > 50 ? error.errorMsg?.substring(0, 50) : error.errorMsg, {variant: 'error'})\n            }\n        })\n    }\n\n    const handleGetSelectededucation = (selectedEducation) => {\n        if (selectedEducation) {\n            setIsDef(true)\n            UseOrest({\n                apiUrl: GENERAL_SETTINGS.OREST_URL,\n                endpoint: OREST_ENDPOINT.EMPEDU + SLASH + OREST_ENDPOINT.VIEW + SLASH + 'get' + SLASH + selectedEducation.gid,\n                token\n            }).then(res => {\n                setIsDef(false)\n                if (res.status === 200 && res.data.data) {\n                    const data = res.data.data\n                    setGetData(data)\n                }\n            })\n        }\n    }\n\n    const handleDefRecord = () => {\n        setIsDef(true)\n        UseOrest({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.EMPEDU + SLASH + OREST_ENDPOINT.DEF,\n            token,\n            params: {\n                hotelrefno: hotelRefNo\n            }\n        }).then(res => {\n            if (res.status === 200 && res.data.count > 0) {\n                const data = Object.assign({}, res.data.data, educationData)\n                setEducationData(data)\n                setEducationDataBase(data)\n            }\n            setIsDef(false)\n        })\n    }\n\n    const handleSave = () => {\n        const data = {...educationData}\n        Object.keys(initialState).map((key) => {\n            data[key] = typeof data[key].value === 'object' ? data[key].value ? data[key].value.id : null : data[key].value\n        })\n        if (empId) {\n            setIsSaving(true)\n            if (selectedGid) {\n                Patch({\n                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                    endpoint: OREST_ENDPOINT.EMPEDU,\n                    gid: selectedGid,\n                    data: data,\n                    token\n                }).then(res => {\n                    if (res.status === 200) {\n                        enqueueSnackbar(t('str_processCompletedSuccessfully'), {variant: 'success'})\n                        setOpenAddDialog(false)\n                        getEducationList()\n                        handleReset()\n                    } else {\n                        const error = isErrorMsg(res)\n                        enqueueSnackbar(error.errorMsg, {variant: 'error'})\n                    }\n                    setIsSaving(false)\n                })\n            } else {\n                data.empid = empId\n                data.hotelrefno = hotelRefNo\n                Insert({\n                    apiUrl: GENERAL_SETTINGS.OREST_URL,\n                    endpoint: OREST_ENDPOINT.EMPEDU,\n                    token,\n                    data: data\n                }).then(res => {\n                    if (res.status === 200) {\n                        enqueueSnackbar(t('str_processCompletedSuccessfully'), {variant: 'success'})\n                        setOpenAddDialog(false)\n                        getEducationList()\n                        handleReset()\n                    } else {\n                        const error = isErrorMsg(res)\n                        enqueueSnackbar(error.errorMsg, {variant: 'error'})\n                    }\n                    setIsSaving(false)\n                })\n                console.log(data)\n            }\n        }\n    }\n\n    const handleOnChangeFormElements = (event, key, isOnBlur) => {\n        const name = key ? key : event.target.name\n        const value = event?.target ? event.target.value : event\n\n        if (isOnBlur) {\n            setEducationData({\n                ...educationData,\n                [name]: {\n                    ...educationData[name],\n                    isError: educationData[name]?.isRequired && !!required(value),\n                    helperText: educationData[name]?.isRequired && !!required(value) && t('str_mandatory'),\n                }\n            })\n        } else {\n            setEducationData({\n                ...educationData,\n                [name]: {\n                    ...educationData[name],\n                    value: name === \"graddate\" ? moment(value).format(OREST_ENDPOINT.DATEFORMAT): value,\n                    isError: educationData[name]?.isRequired && !!required(value),\n                    helperText: educationData[name]?.isRequired && !!required(value) && t('str_mandatory'),\n                }\n            })\n        }\n    }\n\n    const handleOnBlurFormElements = (event, key) => {\n        handleOnChangeFormElements(event, key, true)\n    }\n\n    const handleOpenAddDialog = (selectedEducation = false) => {\n        if (selectedEducation) {\n            handleGetSelectededucation(selectedEducation)\n        } else {\n            handleDefRecord()\n        }\n        setOpenAddDialog(true)\n    }\n\n    const handleCloseDialog = () => {\n        if (JSON.stringify(educationData) !== JSON.stringify(educationDataBase)) {\n            setOpenTrackedDialog(true)\n        } else {\n            setOpenAddDialog(false)\n            handleReset()\n        }\n    }\n\n\n    const handleReset = () => {\n        setTimeout(() => {\n            setIsInitialStateLoad(false)\n            setGetData(null)\n            setEducationData(initialState)\n            setEducationDataBase(initialState)\n            setSelectedEducationData(null)\n        }, 100)\n    }\n\n    return (\n        <div>\n            <React.Fragment>\n                <Grid container>\n                    <Grid item xs={4} sm={3}>\n                        <Grid container>\n                            <Grid item xs={6} sm={3}>\n                                <CustomToolTip title={t('str_refresh')}>\n                                    <IconButton\n                                        onClick={() => getEducationList()}\n                                    >\n                                        <CachedIcon style={{color: \"#F16A4B\"}}/>\n                                    </IconButton>\n                                </CustomToolTip>\n                            </Grid>\n                            <Grid item xs={6} sm={3}>\n                                <CustomToolTip title={t('str_add')}>\n                                    <IconButton\n                                        onClick={() => handleOpenAddDialog(false)}\n                                    >\n                                        <AddIcon/>\n                                    </IconButton>\n                                </CustomToolTip>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={8}>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <MaterialTable\n                            isLoading={isLoadingList}\n                            columns={educationColumns}\n                            data={educationList}\n                            localization={tableLocalization}\n                            options={{\n                                headerStyle: {\n                                    cursor: 'default',\n                                    fontWeight: \"bold\",\n                                    fontSize: \"12px\",\n                                    color: \"#A3A6B4\",\n                                    textTransform: \"uppercase\",\n                                    backgroundColor: \"#F5F6FA\",\n                                    whiteSpace: 'nowrap',\n                                    borderLeft: '1px solid #FFF',\n                                },\n                                cellStyle: {\n                                    whiteSpace: 'nowrap',\n                                    borderLeft: '1px solid rgba(224, 224, 224, 1)',\n                                    fontSize: '13px',\n                                },\n                                toolbar: false,\n                                selection: false,\n                                sorting: false,\n                                search: false,\n                                actionsColumnIndex: 1,\n                                selectionColumnIndex: 1\n                            }}\n                            components={{\n                                Header: (props) => {\n                                    const overrideProps = {...props}\n                                    overrideProps.draggable = false\n                                    return (\n                                        <MTableHeader  {...overrideProps}/>\n                                    )\n                                },\n                            }}\n                        />\n                    </Grid>\n                </Grid>\n                <Dialog open={openAddDialog} maxWidth={'sm'} fullWidth>\n                    <div style={{padding: 24}}>\n                        <Grid container spacing={3}>\n                            <Grid item xs={12}>\n                                <Typography style={{\n                                    fontWeight: '600',\n                                    fontSize: '18px'\n                                }}>{selectedEducationData ? t('str_editEducation') : t('str_addEducationInformation')}</Typography>\n                            </Grid>\n                            {\n                                isDef ? (\n                                    <Grid item xs={12}>\n                                        <LoadingSpinner/>\n                                    </Grid>\n                                ) : (\n                                    <React.Fragment>\n                                        {\n                                            formElements.map((item, index) => (\n                                                <Grid key={index} item {...item.gridProps}>\n                                                    {renderFormElements(item)}\n                                                </Grid>\n                                            ))\n                                        }\n                                        <Grid item xs={12}>\n                                            <AddDialogActions\n                                                disabled={isSaving}\n                                                loading={isSaving}\n                                                onCancelClick={handleCloseDialog}\n                                                onSaveClick={handleSave}\n                                            />\n                                        </Grid>\n                                    </React.Fragment>\n                                )\n                            }\n                        </Grid>\n                    </div>\n                </Dialog>\n                <TrackedChangesDialog\n                    open={openTrackedDialog}\n                    onPressNo={(e) => {\n                        setOpenTrackedDialog(e);\n                    }}\n                    onPressYes={(e) => {\n                        setOpenTrackedDialog(e);\n                        setOpenAddDialog(false)\n                        handleReset()\n                    }}\n                />\n            </React.Fragment>\n        </div>\n    )\n}\n\nexport default Education"]},"metadata":{},"sourceType":"module"}