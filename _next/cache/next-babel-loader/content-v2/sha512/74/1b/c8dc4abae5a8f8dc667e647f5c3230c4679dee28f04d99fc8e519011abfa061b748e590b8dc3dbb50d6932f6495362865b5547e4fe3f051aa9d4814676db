{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/components/language/LanguageDropdown.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState, memo } from 'react';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport { useSelector } from 'react-redux';\nconst LanguageDropdown = /*#__PURE__*/memo(props => {\n  const {\n    handleChange,\n    langID\n  } = props;\n  const state = useSelector(state => {\n    var _state$formReducer;\n\n    return state === null || state === void 0 ? void 0 : (_state$formReducer = state.formReducer) === null || _state$formReducer === void 0 ? void 0 : _state$formReducer.pageBuilder;\n  });\n  const {\n    0: localState,\n    1: setLocalState\n  } = useState({\n    languages: state === null || state === void 0 ? void 0 : state.languages,\n    selectedLang: ''\n  });\n  const {\n    languages,\n    selectedLang\n  } = localState;\n  useEffect(() => {\n    languages && languages.length > 0 && languages.map(lang => {\n      if (lang.id === parseInt(langID)) {\n        setLocalState(prevState => _objectSpread(_objectSpread({}, prevState), {}, {\n          selectedLang: lang\n        }));\n        handleChange(lang);\n      }\n    });\n  }, []);\n\n  const handleLanguageChange = e => {\n    setLocalState(prevState => _objectSpread(_objectSpread({}, prevState), {}, {\n      selectedLang: e.target.value\n    }));\n    handleChange(e.target.value);\n  };\n\n  return __jsx(FormControl, {\n    variant: \"outlined\",\n    style: {\n      float: 'right',\n      marginBottom: 8\n    },\n    size: 'small',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, languages && languages.length > 0 && __jsx(Select, {\n    value: selectedLang,\n    onChange: handleLanguageChange,\n    label: \"Language\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, languages.map((lang, index) => {\n    return __jsx(MenuItem, {\n      value: lang,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 29\n      }\n    }, ' ', lang.description, ' ');\n  })));\n});\nexport default LanguageDropdown;","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/components/language/LanguageDropdown.js"],"names":["React","useEffect","useState","memo","Select","MenuItem","FormControl","useSelector","LanguageDropdown","props","handleChange","langID","state","formReducer","pageBuilder","localState","setLocalState","languages","selectedLang","length","map","lang","id","parseInt","prevState","handleLanguageChange","e","target","value","float","marginBottom","index","description"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,IAArC,QAAiD,OAAjD;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,MAAMC,gBAAgB,gBAAGL,IAAI,CAAEM,KAAD,IAAW;AACrC,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAA2BF,KAAjC;AAEA,QAAMG,KAAK,GAAGL,WAAW,CAAEK,KAAD;AAAA;;AAAA,WAAWA,KAAX,aAAWA,KAAX,6CAAWA,KAAK,CAAEC,WAAlB,uDAAW,mBAAoBC,WAA/B;AAAA,GAAD,CAAzB;AAEA,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8Bd,QAAQ,CAAC;AACzCe,IAAAA,SAAS,EAAEL,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEK,SADuB;AAEzCC,IAAAA,YAAY,EAAE;AAF2B,GAAD,CAA5C;AAKA,QAAM;AAAED,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA8BH,UAApC;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,SAAS,IACLA,SAAS,CAACE,MAAV,GAAmB,CADvB,IAEIF,SAAS,CAACG,GAAV,CAAeC,IAAD,IAAU;AACpB,UAAIA,IAAI,CAACC,EAAL,KAAYC,QAAQ,CAACZ,MAAD,CAAxB,EAAkC;AAC9BK,QAAAA,aAAa,CAAEQ,SAAD,oCAAqBA,SAArB;AAAgCN,UAAAA,YAAY,EAAEG;AAA9C,UAAD,CAAb;AACAX,QAAAA,YAAY,CAACW,IAAD,CAAZ;AACH;AACJ,KALD,CAFJ;AAQH,GATQ,EASN,EATM,CAAT;;AAWA,QAAMI,oBAAoB,GAAIC,CAAD,IAAO;AAChCV,IAAAA,aAAa,CAAEQ,SAAD,oCAAqBA,SAArB;AAAgCN,MAAAA,YAAY,EAAEQ,CAAC,CAACC,MAAF,CAASC;AAAvD,MAAD,CAAb;AACAlB,IAAAA,YAAY,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AACH,GAHD;;AAKA,SACI,MAAC,WAAD;AAAa,IAAA,OAAO,EAAC,UAArB;AAAgC,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,YAAY,EAAE;AAAhC,KAAvC;AAA4E,IAAA,IAAI,EAAE,OAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKb,SAAS,IAAIA,SAAS,CAACE,MAAV,GAAmB,CAAhC,IACG,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAED,YAAf;AAA6B,IAAA,QAAQ,EAAEO,oBAAvC;AAA6D,IAAA,KAAK,EAAC,UAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKR,SAAS,CAACG,GAAV,CAAc,CAACC,IAAD,EAAOU,KAAP,KAAiB;AAC5B,WACI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAEV,IAAjB;AAAuB,MAAA,GAAG,EAAEU,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,GADL,EAEKV,IAAI,CAACW,WAFV,EAEuB,GAFvB,CADJ;AAMH,GAPA,CADL,CAFR,CADJ;AAgBH,CA5C4B,CAA7B;AA8CA,eAAexB,gBAAf","sourcesContent":["import React, { useEffect, useState, memo } from 'react'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport { useSelector } from 'react-redux'\n\nconst LanguageDropdown = memo((props) => {\n    const { handleChange, langID } = props\n\n    const state = useSelector((state) => state?.formReducer?.pageBuilder)\n\n    const [localState, setLocalState] = useState({\n        languages: state?.languages,\n        selectedLang: '',\n    })\n\n    const { languages, selectedLang } = localState\n\n    useEffect(() => {\n        languages &&\n            languages.length > 0 &&\n            languages.map((lang) => {\n                if (lang.id === parseInt(langID)) {\n                    setLocalState((prevState) => ({ ...prevState, selectedLang: lang }))\n                    handleChange(lang)\n                }\n            })\n    }, [])\n\n    const handleLanguageChange = (e) => {\n        setLocalState((prevState) => ({ ...prevState, selectedLang: e.target.value }))\n        handleChange(e.target.value)\n    }\n\n    return (\n        <FormControl variant=\"outlined\" style={{ float: 'right', marginBottom: 8 }} size={'small'}>\n            {languages && languages.length > 0 && (\n                <Select value={selectedLang} onChange={handleLanguageChange} label=\"Language\">\n                    {languages.map((lang, index) => {\n                        return (\n                            <MenuItem value={lang} key={index}>\n                                {' '}\n                                {lang.description}{' '}\n                            </MenuItem>\n                        )\n                    })}\n                </Select>\n            )}\n        </FormControl>\n    )\n})\n\nexport default LanguageDropdown\n"]},"metadata":{},"sourceType":"module"}