{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/guest/account/MyProfile/index.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport { setToState, updateState } from 'state/actions';\nimport { Container, Paper } from '@material-ui/core';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nimport Details from '../Details';\nimport Preferences from '../Preferences';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport Surveys from './Surveys';\nimport LoyaltyClub from '../LoyaltyClub';\nimport Router, { useRouter } from 'next/router';\nimport { ZERO } from 'model/globals';\nimport MyRequest from '../MyRequest';\nimport History from '../History';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport LoyaltyIcon from '@material-ui/icons/Loyalty';\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    hashCode,\n    index\n  } = props,\n        other = _objectWithoutProperties(props, [\"children\", \"value\", \"hashCode\", \"index\"]);\n\n  return __jsx(\"div\", _extends({\n    role: \"tabpanel\",\n    hidden: value !== hashCode,\n    id: `scrollable-auto-tabpanel-${index}`,\n    \"aria-labelledby\": `scrollable-auto-tab-${index}`\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }), value === hashCode && __jsx(Paper, {\n    square: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 36\n    }\n  }, children));\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`\n  };\n}\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Notes from \"../Notes\";\nimport SaleCalls from \"../SaleCalls\";\nimport CallLog from \"../CallLog\";\nimport SearchGuest from \"../SearchGuest\";\nimport TrackedChangesDialog from \"../../../TrackedChangesDialog\";\nimport WebCmsGlobal from \"../../../webcms-global\";\nimport { ROLETYPES } from \"../../../../model/orest/constants\";\nimport Contacts from \"../../../emp-portal/tabs/Contacts\";\nimport Education from \"../../../emp-portal/tabs/Education\";\nimport Abilities from \"../../../emp-portal/tabs/Abilities\";\nimport Languages from \"../../../emp-portal/tabs/Languages\";\nimport WorkExperience from \"../../../emp-portal/tabs/Work\";\nimport References from \"../../../emp-portal/tabs/References\";\nimport Files from \"../../../emp-portal/tabs/Files\";\n\nconst dashboardOverview = theme => ({\n  mainTitle: {\n    paddingTop: \"38px\",\n    fontSize: \"28px\",\n    fontWeight: \"normal\",\n    color: \"#43425D\"\n  },\n  iconStyle: {\n    color: \"#FFF\",\n    \"&.MuiSvgIcon-root\": {\n      width: \"1.75em\",\n      height: \"2.188em\"\n    }\n  },\n  iconDiv: {\n    top: -12,\n    width: 65,\n    height: 65,\n    marginLeft: '-15px',\n    padding: '7px 12px',\n    position: 'absolute',\n    borderRadius: 5,\n    boxShadow: '0 1px 12px #d0d0d0'\n  },\n  cardStyle: {\n    minHeight: \"130px\",\n    boxShadow: 'inset 0 -7px 0 0px #009688, -1px 1px 10px 1px #69696940',\n    [theme.breakpoints.down('xs')]: {\n      width: \"100%\"\n    }\n  },\n  cardLeft: {\n    boxShadow: 'inset 0 -7px 0 0px #2196f3, -1px 1px 10px 1px #69696940'\n  },\n  cardLeftHc: {\n    boxShadow: 'inset 0 -7px 0 0px #4caf50, -1px 1px 10px 1px #69696940'\n  },\n  cardUsed: {\n    boxShadow: 'inset 0 -7px 0 0px #ff9800, -1px 1px 10px 1px #69696940'\n  },\n  cardGained: {\n    boxShadow: 'inset 0 -7px 0 0px #009688, -1px 1px 10px 1px #69696940'\n  },\n  cardContent: {\n    padding: \"16px 32px\"\n  },\n  cardTitle: {\n    fontSize: \"18px\",\n    fontWeight: \"normal\",\n    textAlign: \"right\",\n    [theme.breakpoints.down('xs')]: {\n      textAlign: \"right\"\n    }\n  },\n  loyaltyInfoCardWrapper: {\n    [theme.breakpoints.down('xs')]: {\n      marginTop: 20\n    },\n    marginBottom: 20\n  },\n  cardCountText: {\n    fontSize: \"30px\",\n    fontWeight: \"bold\",\n    textAlign: \"right\"\n  },\n  dividerStyle: {\n    width: \"calc(100% - 30px)\",\n    color: \"#CECECE\",\n    [theme.breakpoints.down('xs')]: {\n      width: \"100%\"\n    }\n  },\n  detailTitle: {\n    fontSize: \"14px\",\n    fontWeight: \"500\",\n    textTransform: \"uppercase\",\n    color: \"#43425D\",\n    textDecoration: \"underline\"\n  },\n  detailDoneCountText: {\n    fontSize: \"18px\",\n    fontWeight: \"bold\",\n    color: \"#5B5A72\"\n  },\n  detailProcessCountText: {\n    fontSize: \"18px\",\n    fontWeight: \"bold\",\n    color: \"#43425D\"\n  }\n});\n\nconst useStyles = makeStyles(dashboardOverview);\n\nconst MyProfile = props => {\n  const {\n    state,\n    setToState,\n    isHistory,\n    clientParams,\n    isEmpPortal\n  } = props;\n  const router = useRouter();\n  const {\n    GENERAL_SETTINGS\n  } = useContext(WebCmsGlobal);\n  const {\n    t\n  } = useTranslation();\n  const hotelSettings = GENERAL_SETTINGS.hotelSettings;\n  const classes = useStyles();\n  const clientBase = useSelector(state => {\n    var _state$orest, _state$orest$state, _state$orest2, _state$orest2$state;\n\n    return isEmpPortal ? (state === null || state === void 0 ? void 0 : (_state$orest = state.orest) === null || _state$orest === void 0 ? void 0 : (_state$orest$state = _state$orest.state) === null || _state$orest$state === void 0 ? void 0 : _state$orest$state.emp) || false : (state === null || state === void 0 ? void 0 : (_state$orest2 = state.orest) === null || _state$orest2 === void 0 ? void 0 : (_state$orest2$state = _state$orest2.state) === null || _state$orest2$state === void 0 ? void 0 : _state$orest2$state.client) || false || false;\n  });\n  const isClientBase = clientBase !== null && clientBase !== void 0 && clientBase.id ? false : true;\n  const loginfo = useSelector(state => state.orest.currentUser && state.orest.currentUser.loginfo);\n  const panels = useSelector(state => {\n    var _state$formReducer, _state$formReducer$us;\n\n    return (state === null || state === void 0 ? void 0 : (_state$formReducer = state.formReducer) === null || _state$formReducer === void 0 ? void 0 : (_state$formReducer$us = _state$formReducer.userPortal) === null || _state$formReducer$us === void 0 ? void 0 : _state$formReducer$us.panels) || false;\n  });\n  const {\n    0: openTrackedDialog,\n    1: setOpenTrackedDialog\n  } = useState(false);\n  const {\n    0: routerHashCode,\n    1: setRouterHashCode\n  } = useState('');\n  let myProfileTabMenu = [];\n\n  if (isEmpPortal) {\n    myProfileTabMenu = [{\n      code: 'DETAILS',\n      title: 'str_details',\n      hashCode: 'details',\n      isHide: false\n    }, {\n      code: 'CONTACTS',\n      title: 'str_contacts',\n      hashCode: 'contacts',\n      isHide: false\n    }, {\n      code: 'EDUCATION',\n      title: 'str_education',\n      hashCode: 'education',\n      isHide: false\n    }, {\n      code: 'WORK',\n      title: 'str_work',\n      hashCode: 'work',\n      isHide: false\n    }, {\n      code: 'REFERENCES',\n      title: 'str_references',\n      hashCode: 'references',\n      isHide: false\n    }, {\n      code: 'ABILITIES',\n      title: 'str_abilities',\n      hashCode: 'abilities',\n      isHide: false\n    }, {\n      code: 'LANGUAGES',\n      title: 'str_languages',\n      hashCode: 'languages',\n      isHide: false\n    }, {\n      code: 'FILES',\n      title: 'str_files',\n      hashCode: 'files',\n      isHide: false\n    }];\n  } else {\n    if (loginfo.roletype === ROLETYPES.EMPLOYEE) {\n      myProfileTabMenu = [{\n        code: 'DASHBOARD',\n        title: 'str_dashboard',\n        hashCode: 'dashboard',\n        isHide: false\n      }, {\n        code: 'DETAILS',\n        title: 'str_myDetails',\n        hashCode: 'details',\n        isHide: false\n      }, {\n        code: 'MY_REQUEST',\n        title: 'str_request',\n        hashCode: 'request',\n        isHide: isClientBase || false\n      }, {\n        code: 'NOTES',\n        title: 'str_notes',\n        hashCode: 'notes',\n        isHide: isClientBase || false\n      }, {\n        code: 'PREFERENCES',\n        title: 'str_preferences',\n        hashCode: 'prefs',\n        isHide: isClientBase || false\n      }, {\n        code: 'LOYALTY_CLUB',\n        title: 'str_loyaltyClub',\n        hashCode: 'loyalty',\n        isHide: isClientBase || false\n      }, {\n        code: 'SURVEYS',\n        title: 'str_surveys',\n        hashCode: 'surveys',\n        isHide: isClientBase || false\n      }, {\n        code: 'HISTORY',\n        title: 'str_history',\n        hashCode: 'history',\n        isHide: isClientBase || !isHistory\n      }, {\n        code: 'CALL_LOG',\n        title: 'str_callLog',\n        hashCode: 'call-logs',\n        isHide: isClientBase || false\n      }]; //TODO change after the fix\n\n      const callLogIndex = myProfileTabMenu.findIndex(e => e.code === 'CALL_LOG');\n      const saleCallTabData = {\n        code: 'SALE_CALLS',\n        title: 'str_saleCalls',\n        hashCode: 'calls',\n        isHide: isClientBase || false\n      };\n\n      if (callLogIndex !== -1) {\n        myProfileTabMenu.splice(callLogIndex, 0, saleCallTabData);\n      }\n    } else {\n      myProfileTabMenu = [{\n        code: 'DETAILS',\n        title: 'str_myDetails',\n        hashCode: 'details',\n        isHide: false\n      }, {\n        code: 'MY_REQUEST',\n        title: 'str_requests',\n        hashCode: 'request',\n        isHide: isClientBase || false\n      }, {\n        code: 'PREFERENCES',\n        title: 'str_preferences',\n        hashCode: 'prefs',\n        isHide: isClientBase || false\n      }, {\n        code: 'LOYALTY_CLUB',\n        title: 'str_loyaltyClub',\n        hashCode: 'loyalty',\n        isHide: isClientBase || false\n      }, {\n        code: 'SURVEYS',\n        title: 'str_surveys',\n        hashCode: 'surveys',\n        isHide: isClientBase || false\n      }, {\n        code: 'HISTORY',\n        title: 'str_history',\n        hashCode: 'history',\n        isHide: isClientBase || !isHistory\n      }];\n\n      if (hotelSettings !== null && hotelSettings !== void 0 && hotelSettings.showsc) {\n        const saleCallTabData = {\n          code: 'SALE_CALLS',\n          title: 'str_saleCalls',\n          hashCode: 'calls',\n          isHide: isClientBase || false\n        };\n        myProfileTabMenu.push(saleCallTabData);\n      }\n    }\n  }\n\n  let tabPanelHashCode = router.query.tab;\n\n  if (!router.query.tab && clientBase) {\n    tabPanelHashCode = 'details';\n  }\n\n  if (clientParams && Object.keys(clientParams).length > 0 && !router.query.tab && !clientBase) {\n    let isAnyTrue = false;\n    Object.keys(clientParams).map((item, i) => {\n      if (clientParams[item]) {\n        isAnyTrue = true;\n      }\n    });\n\n    if (isAnyTrue) {\n      tabPanelHashCode = 'details';\n    } else {\n      tabPanelHashCode = 'dashboard';\n    }\n  }\n\n  const {\n    0: myProfileTabsHashCode,\n    1: setMyProfileTabsHashCode\n  } = useState(myProfileTabMenu.findIndex(menu => menu.hashCode === tabPanelHashCode) > -1 ? tabPanelHashCode : myProfileTabMenu[ZERO].hashCode);\n  useEffect(() => {\n    setMyProfileTabsHashCode(myProfileTabMenu.findIndex(menu => menu.hashCode === tabPanelHashCode) > -1 ? tabPanelHashCode : myProfileTabMenu[ZERO].hashCode);\n  }, [router.query]);\n\n  const handleGuestProfilePanelTabChange = (event, newValue) => {\n    if (myProfileTabsHashCode !== newValue) {\n      setTimeout(() => {\n        setToState('userPortal', ['panelStatus'], panels.requestList);\n      }, 100);\n      setRouterHashCode(newValue);\n\n      if (tabPanelHashCode) {\n        const routerQuery = router.query;\n\n        if (routerQuery.tab === 'prefs') {\n          if (JSON.stringify(state.profile.checkboxGroupAllBase) !== JSON.stringify(state.profile.checkboxGroupAll) || JSON.stringify(state.profile.radioGroupAllGid) !== JSON.stringify(state.profile.radioGroupAllGidBase)) {\n            setOpenTrackedDialog(true);\n          } else {\n            setToState('guest', ['profile', 'checkboxGroupAllBase'], {});\n            setToState('guest', ['profile', 'checkboxGroupAll'], {});\n            setToState('guest', ['profile', 'radioGroupAllGid'], {});\n            setToState('guest', ['profile', 'radioGroupAllGidBase'], {});\n            setMyProfileTabsHashCode(newValue);\n            routerQuery.menu = router.query.menu;\n            routerQuery.tab = newValue;\n            Router.push({\n              pathname: router.pathname,\n              query: routerQuery\n            }, undefined, {\n              scroll: false\n            });\n          }\n        } else {\n          routerQuery.menu = router.query.menu || 'profile';\n          routerQuery.tab = newValue;\n          Router.push({\n            pathname: router.pathname,\n            query: routerQuery\n          }, undefined, {\n            scroll: false\n          });\n          setMyProfileTabsHashCode(newValue);\n        }\n      }\n    }\n  };\n\n  const renderEventComponent = profileItem => {\n    let component;\n\n    switch (profileItem.code) {\n      case 'DASHBOARD':\n        component = __jsx(SearchGuest, {\n          clientParams: clientParams,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 29\n          }\n        });\n        break;\n\n      case 'DETAILS':\n        component = __jsx(Details, {\n          clientParams: clientParams,\n          isEmpPortal: isEmpPortal,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 29\n          }\n        });\n        break;\n\n      case 'CONTACTS':\n        component = __jsx(Contacts, {\n          mid: clientBase === null || clientBase === void 0 ? void 0 : clientBase.mid,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 29\n          }\n        });\n        break;\n\n      case 'EDUCATION':\n        component = __jsx(Education, {\n          empId: clientBase === null || clientBase === void 0 ? void 0 : clientBase.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 29\n          }\n        });\n        break;\n\n      case 'WORK':\n        component = __jsx(WorkExperience, {\n          empId: clientBase === null || clientBase === void 0 ? void 0 : clientBase.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 29\n          }\n        });\n        break;\n\n      case 'REFERENCES':\n        component = __jsx(References, {\n          empId: clientBase === null || clientBase === void 0 ? void 0 : clientBase.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 29\n          }\n        });\n        break;\n\n      case 'ABILITIES':\n        component = __jsx(Abilities, {\n          empId: clientBase === null || clientBase === void 0 ? void 0 : clientBase.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 29\n          }\n        });\n        break;\n\n      case 'LANGUAGES':\n        component = __jsx(Languages, {\n          empId: clientBase === null || clientBase === void 0 ? void 0 : clientBase.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 29\n          }\n        });\n        break;\n\n      case 'FILES':\n        component = __jsx(Files, {\n          mid: clientBase === null || clientBase === void 0 ? void 0 : clientBase.mid,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 29\n          }\n        });\n        break;\n\n      case 'MY_REQUEST':\n        component = __jsx(MyRequest, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 29\n          }\n        });\n        break;\n\n      case 'PREFERENCES':\n        component = __jsx(Preferences, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 29\n          }\n        });\n        break;\n\n      case 'LOYALTY_CLUB':\n        component = __jsx(LoyaltyClub, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 29\n          }\n        });\n        break;\n\n      case 'SURVEYS':\n        component = __jsx(Surveys, {\n          isWidget: true,\n          limit: 3,\n          loadMore: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 29\n          }\n        });\n        break;\n\n      case 'HISTORY':\n        component = __jsx(History, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 29\n          }\n        });\n        break;\n\n      case 'NOTES':\n        component = __jsx(Notes, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 29\n          }\n        });\n        break;\n\n      case 'SALE_CALLS':\n        component = __jsx(SaleCalls, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 29\n          }\n        });\n        break;\n\n      case 'CALL_LOG':\n        component = __jsx(CallLog, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 29\n          }\n        });\n    }\n\n    return component;\n  };\n\n  const bonusInfoList = [{\n    icon: __jsx(LoyaltyIcon, {\n      className: classes.iconStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 17\n      }\n    }),\n    color: \"#009688\",\n    cardName: t(\"str_bonusGained\"),\n    className: classes.cardGained,\n    totalBonus: new Intl.NumberFormat('en-IN', {\n      maximumSignificantDigits: 3\n    }).format(state.bonusTransPoints && state.bonusTransPoints.bonusgained || '0')\n  }, {\n    icon: __jsx(LoyaltyIcon, {\n      className: classes.iconStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 17\n      }\n    }),\n    color: \"#2196f3\",\n    cardName: t(\"str_bonusLeft\"),\n    className: classes.cardLeft,\n    totalBonus: new Intl.NumberFormat('en-IN', {\n      maximumSignificantDigits: 3\n    }).format(state.bonusTransPoints && state.bonusTransPoints.bonusleft || '0')\n  }, {\n    icon: __jsx(LoyaltyIcon, {\n      className: classes.iconStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 17\n      }\n    }),\n    color: \"#4caf50\",\n    cardName: t(\"str_bonusUsed\"),\n    className: classes.cardLeftHc,\n    totalBonus: new Intl.NumberFormat('en-IN', {\n      maximumSignificantDigits: 3\n    }).format(state.bonusTransPoints && state.bonusTransPoints.bonusused || '0')\n  }, {\n    icon: __jsx(LoyaltyIcon, {\n      className: classes.iconStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 17\n      }\n    }),\n    color: \"#ff9800\",\n    cardName: t(\"str_bonusExpired\"),\n    className: classes.cardUsed,\n    totalBonus: new Intl.NumberFormat('en-IN', {\n      maximumSignificantDigits: 3\n    }).format(state.bonusTransPoints && state.bonusTransPoints.bonusexpired || '0')\n  }];\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 9\n    }\n  }, __jsx(Container, {\n    maxWidth: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 4,\n    className: classes.loyaltyInfoCardWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 17\n    }\n  }, state.bonusTransPoints ? bonusInfoList.map((data, i) => {\n    return __jsx(Grid, {\n      item: true,\n      key: i,\n      xs: 12,\n      sm: 6,\n      md: 6,\n      lg: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 33\n      }\n    }, __jsx(\"div\", {\n      style: {\n        position: \"relative\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 37\n      }\n    }, __jsx(Card, {\n      className: classes.cardStyle + ' ' + data.className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 41\n      }\n    }, __jsx(CardContent, {\n      className: classes.cardContent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 45\n      }\n    }, __jsx(\"div\", {\n      className: classes.iconDiv,\n      style: {\n        backgroundColor: data.color\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 49\n      }\n    }, data.icon), __jsx(Typography, {\n      color: \"textSecondary\",\n      className: classes.cardTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 49\n      }\n    }, data.cardName), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 49\n      }\n    }, __jsx(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 53\n      }\n    }, __jsx(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 57\n      }\n    }, __jsx(Typography, {\n      className: classes.cardCountText,\n      style: {\n        color: data.color\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 61\n      }\n    }, data.totalBonus, \" \", __jsx(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 83\n      }\n    }, \"pts\")))))))));\n  }) : null), __jsx(AppBar, {\n    position: \"static\",\n    color: \"default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 17\n    }\n  }, __jsx(Tabs, {\n    value: myProfileTabsHashCode,\n    onChange: handleGuestProfilePanelTabChange,\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    variant: \"scrollable\",\n    scrollButtons: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 21\n    }\n  }, myProfileTabMenu.filter(tabMenuItem => !tabMenuItem.isHide).map((item, i) => __jsx(Tab, _extends({\n    label: t(item.title),\n    value: item.hashCode\n  }, a11yProps(i), {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 29\n    }\n  }))))), myProfileTabMenu.filter(tabMenuItem => !tabMenuItem.isHide).map((item, i) => __jsx(TabPanel, {\n    value: myProfileTabsHashCode,\n    hashCode: item.hashCode,\n    index: i,\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 21\n    }\n  }, __jsx(Box, {\n    style: {\n      backgroundColor: '#FAFAFA'\n    },\n    p: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 25\n    }\n  }, renderEventComponent(item))))), __jsx(TrackedChangesDialog, {\n    open: openTrackedDialog,\n    onPressNo: e => setOpenTrackedDialog(e),\n    onPressYes: e => {\n      setOpenTrackedDialog(e);\n      setMyProfileTabsHashCode(routerHashCode);\n      const routerQuery = router.query;\n      routerQuery.menu = router.query.menu;\n      routerQuery.tab = routerHashCode;\n      Router.push({\n        pathname: router.pathname,\n        query: routerQuery\n      });\n      setToState('guest', ['profile', 'checkboxGroupAllBase'], {});\n      setToState('guest', ['profile', 'checkboxGroupAll'], {});\n      setToState('guest', ['profile', 'radioGroupAllGid'], {});\n      setToState('guest', ['profile', 'radioGroupAllGidBase'], {});\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    state: state.formReducer.guest\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  updateState: (stateType, stateName, value) => dispatch(updateState(stateType, stateName, value)),\n  setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyProfile);","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/guest/account/MyProfile/index.js"],"names":["React","useEffect","useState","useContext","connect","useSelector","setToState","updateState","Container","Paper","useTranslation","Details","Preferences","AppBar","Tabs","Tab","Box","Surveys","LoyaltyClub","Router","useRouter","ZERO","MyRequest","History","Grid","Card","CardContent","Typography","LoyaltyIcon","TabPanel","props","children","value","hashCode","index","other","a11yProps","id","makeStyles","Notes","SaleCalls","CallLog","SearchGuest","TrackedChangesDialog","WebCmsGlobal","ROLETYPES","Contacts","Education","Abilities","Languages","WorkExperience","References","Files","dashboardOverview","theme","mainTitle","paddingTop","fontSize","fontWeight","color","iconStyle","width","height","iconDiv","top","marginLeft","padding","position","borderRadius","boxShadow","cardStyle","minHeight","breakpoints","down","cardLeft","cardLeftHc","cardUsed","cardGained","cardContent","cardTitle","textAlign","loyaltyInfoCardWrapper","marginTop","marginBottom","cardCountText","dividerStyle","detailTitle","textTransform","textDecoration","detailDoneCountText","detailProcessCountText","useStyles","MyProfile","state","isHistory","clientParams","isEmpPortal","router","GENERAL_SETTINGS","t","hotelSettings","classes","clientBase","orest","emp","client","isClientBase","loginfo","currentUser","panels","formReducer","userPortal","openTrackedDialog","setOpenTrackedDialog","routerHashCode","setRouterHashCode","myProfileTabMenu","code","title","isHide","roletype","EMPLOYEE","callLogIndex","findIndex","e","saleCallTabData","splice","showsc","push","tabPanelHashCode","query","tab","Object","keys","length","isAnyTrue","map","item","i","myProfileTabsHashCode","setMyProfileTabsHashCode","menu","handleGuestProfilePanelTabChange","event","newValue","setTimeout","requestList","routerQuery","JSON","stringify","profile","checkboxGroupAllBase","checkboxGroupAll","radioGroupAllGid","radioGroupAllGidBase","pathname","undefined","scroll","renderEventComponent","profileItem","component","mid","bonusInfoList","icon","cardName","className","totalBonus","Intl","NumberFormat","maximumSignificantDigits","format","bonusTransPoints","bonusgained","bonusleft","bonusused","bonusexpired","data","backgroundColor","filter","tabMenuItem","mapStateToProps","guest","mapDispatchToProps","dispatch","stateType","stateName"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,UAApC,QAAqD,OAArD;AACA,SAAQC,OAAR,EAAiBC,WAAjB,QAAmC,aAAnC;AACA,SAAQC,UAAR,EAAoBC,WAApB,QAAsC,eAAtC;AACA,SAAQC,SAAR,EAAmBC,KAAnB,QAA+B,mBAA/B;AACA,OAAOC,cAAP,MAA2B,uCAA3B;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,MAAP,IAAgBC,SAAhB,QAAgC,aAAhC;AACA,SAAQC,IAAR,QAAmB,eAAnB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA,QAAlB;AAA4BC,IAAAA;AAA5B,MAA+CJ,KAArD;AAAA,QAA4CK,KAA5C,4BAAqDL,KAArD;;AAEA,SACI;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,MAAM,EAAEE,KAAK,KAAKC,QAFtB;AAGI,IAAA,EAAE,EAAG,4BAA2BC,KAAM,EAH1C;AAII,uBAAkB,uBAAsBA,KAAM;AAJlD,KAKQC,KALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOKH,KAAK,KAAKC,QAAV,IAAsB,MAAC,KAAD;AAAO,IAAA,MAAM,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeF,QAAf,CAP3B,CADJ;AAWH;;AAED,SAASK,SAAT,CAAmBF,KAAnB,EAA0B;AACtB,SAAO;AACHG,IAAAA,EAAE,EAAG,uBAAsBH,KAAM,EAD9B;AAEH,qBAAkB,4BAA2BA,KAAM;AAFhD,GAAP;AAIH;;AAED,SAAQI,UAAR,QAAyB,0BAAzB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,oBAAP,MAAiC,+BAAjC;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,SAAQC,SAAR,QAAwB,mCAAxB;AACA,OAAOC,QAAP,MAAqB,mCAArB;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,KAAP,MAAkB,gCAAlB;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,KAAY;AAClCC,EAAAA,SAAS,EAAE;AACPC,IAAAA,UAAU,EAAE,MADL;AAEPC,IAAAA,QAAQ,EAAE,MAFH;AAGPC,IAAAA,UAAU,EAAE,QAHL;AAIPC,IAAAA,KAAK,EAAE;AAJA,GADuB;AAOlCC,EAAAA,SAAS,EAAE;AACPD,IAAAA,KAAK,EAAE,MADA;AAEP,yBAAqB;AACjBE,MAAAA,KAAK,EAAE,QADU;AAEjBC,MAAAA,MAAM,EAAE;AAFS;AAFd,GAPuB;AAclCC,EAAAA,OAAO,EAAE;AACLC,IAAAA,GAAG,EAAE,CAAC,EADD;AAELH,IAAAA,KAAK,EAAE,EAFF;AAGLC,IAAAA,MAAM,EAAE,EAHH;AAILG,IAAAA,UAAU,EAAE,OAJP;AAKLC,IAAAA,OAAO,EAAE,UALJ;AAMLC,IAAAA,QAAQ,EAAE,UANL;AAOLC,IAAAA,YAAY,EAAE,CAPT;AAQLC,IAAAA,SAAS,EAAE;AARN,GAdyB;AAwBlCC,EAAAA,SAAS,EAAE;AACPC,IAAAA,SAAS,EAAE,OADJ;AAEPF,IAAAA,SAAS,EAAE,yDAFJ;AAGP,KAACf,KAAK,CAACkB,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;AAC5BZ,MAAAA,KAAK,EAAE;AADqB;AAHzB,GAxBuB;AA+BlCa,EAAAA,QAAQ,EAAE;AACNL,IAAAA,SAAS,EAAE;AADL,GA/BwB;AAkClCM,EAAAA,UAAU,EAAE;AACRN,IAAAA,SAAS,EAAE;AADH,GAlCsB;AAqClCO,EAAAA,QAAQ,EAAE;AACNP,IAAAA,SAAS,EAAE;AADL,GArCwB;AAwClCQ,EAAAA,UAAU,EAAE;AACRR,IAAAA,SAAS,EAAE;AADH,GAxCsB;AA2ClCS,EAAAA,WAAW,EAAE;AACTZ,IAAAA,OAAO,EAAE;AADA,GA3CqB;AA8ClCa,EAAAA,SAAS,EAAE;AACPtB,IAAAA,QAAQ,EAAE,MADH;AAEPC,IAAAA,UAAU,EAAE,QAFL;AAGPsB,IAAAA,SAAS,EAAE,OAHJ;AAIP,KAAC1B,KAAK,CAACkB,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;AAC5BO,MAAAA,SAAS,EAAE;AADiB;AAJzB,GA9CuB;AAsDlCC,EAAAA,sBAAsB,EAAE;AACpB,KAAC3B,KAAK,CAACkB,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;AAC5BS,MAAAA,SAAS,EAAE;AADiB,KADZ;AAIpBC,IAAAA,YAAY,EAAE;AAJM,GAtDU;AA4DlCC,EAAAA,aAAa,EAAE;AACX3B,IAAAA,QAAQ,EAAE,MADC;AAEXC,IAAAA,UAAU,EAAE,MAFD;AAGXsB,IAAAA,SAAS,EAAE;AAHA,GA5DmB;AAiElCK,EAAAA,YAAY,EAAE;AACVxB,IAAAA,KAAK,EAAE,mBADG;AAEVF,IAAAA,KAAK,EAAE,SAFG;AAGV,KAACL,KAAK,CAACkB,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;AAC5BZ,MAAAA,KAAK,EAAE;AADqB;AAHtB,GAjEoB;AAwElCyB,EAAAA,WAAW,EAAE;AACT7B,IAAAA,QAAQ,EAAE,MADD;AAETC,IAAAA,UAAU,EAAE,KAFH;AAGT6B,IAAAA,aAAa,EAAE,WAHN;AAIT5B,IAAAA,KAAK,EAAE,SAJE;AAKT6B,IAAAA,cAAc,EAAE;AALP,GAxEqB;AA+ElCC,EAAAA,mBAAmB,EAAE;AACjBhC,IAAAA,QAAQ,EAAE,MADO;AAEjBC,IAAAA,UAAU,EAAE,MAFK;AAGjBC,IAAAA,KAAK,EAAE;AAHU,GA/Ea;AAoFlC+B,EAAAA,sBAAsB,EAAE;AACpBjC,IAAAA,QAAQ,EAAE,MADU;AAEpBC,IAAAA,UAAU,EAAE,MAFQ;AAGpBC,IAAAA,KAAK,EAAE;AAHa;AApFU,CAAZ,CAA1B;;AA2FA,MAAMgC,SAAS,GAAGrD,UAAU,CAACe,iBAAD,CAA5B;;AAEA,MAAMuC,SAAS,GAAI9D,KAAD,IAAW;AACzB,QAAM;AAAC+D,IAAAA,KAAD;AAAQvF,IAAAA,UAAR;AAAoBwF,IAAAA,SAApB;AAA+BC,IAAAA,YAA/B;AAA6CC,IAAAA;AAA7C,MAA4DlE,KAAlE;AACA,QAAMmE,MAAM,GAAG7E,SAAS,EAAxB;AACA,QAAM;AAAC8E,IAAAA;AAAD,MAAqB/F,UAAU,CAACyC,YAAD,CAArC;AACA,QAAM;AAACuD,IAAAA;AAAD,MAAMzF,cAAc,EAA1B;AACA,QAAM0F,aAAa,GAAGF,gBAAgB,CAACE,aAAvC;AACA,QAAMC,OAAO,GAAGV,SAAS,EAAzB;AACA,QAAMW,UAAU,GAAGjG,WAAW,CAAEwF,KAAD;AAAA;;AAAA,WAAWG,WAAW,GAAI,CAAAH,KAAK,SAAL,IAAAA,KAAK,WAAL,4BAAAA,KAAK,CAAEU,KAAP,oFAAcV,KAAd,0EAAqBW,GAArB,KAA4B,KAAhC,GAA0C,CAAAX,KAAK,SAAL,IAAAA,KAAK,WAAL,6BAAAA,KAAK,CAAEU,KAAP,uFAAcV,KAAd,4EAAqBY,MAArB,KAA+B,KAAhC,IAA0C,KAAzG;AAAA,GAAD,CAA9B;AACA,QAAMC,YAAY,GAAGJ,UAAU,SAAV,IAAAA,UAAU,WAAV,IAAAA,UAAU,CAAEjE,EAAZ,GAAiB,KAAjB,GAAyB,IAA9C;AACA,QAAMsE,OAAO,GAAGtG,WAAW,CAAEwF,KAAD,IAAWA,KAAK,CAACU,KAAN,CAAYK,WAAZ,IAA2Bf,KAAK,CAACU,KAAN,CAAYK,WAAZ,CAAwBD,OAA/D,CAA3B;AACA,QAAME,MAAM,GAAGxG,WAAW,CAACwF,KAAK;AAAA;;AAAA,WAAI,CAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,kCAAAA,KAAK,CAAEiB,WAAP,mGAAoBC,UAApB,gFAAgCF,MAAhC,KAA0C,KAA9C;AAAA,GAAN,CAA1B;AACA,QAAM;AAAA,OAACG,iBAAD;AAAA,OAAoBC;AAApB,MAA4C/G,QAAQ,CAAC,KAAD,CAA1D;AACA,QAAM;AAAA,OAACgH,cAAD;AAAA,OAAiBC;AAAjB,MAAsCjH,QAAQ,CAAC,EAAD,CAApD;AACA,MAAIkH,gBAAgB,GAAG,EAAvB;;AAEA,MAAIpB,WAAJ,EAAiB;AACboB,IAAAA,gBAAgB,GAAG,CACf;AACIC,MAAAA,IAAI,EAAE,SADV;AAEIC,MAAAA,KAAK,EAAE,aAFX;AAGIrF,MAAAA,QAAQ,EAAE,SAHd;AAIIsF,MAAAA,MAAM,EAAE;AAJZ,KADe,EAOf;AACIF,MAAAA,IAAI,EAAE,UADV;AAEIC,MAAAA,KAAK,EAAE,cAFX;AAGIrF,MAAAA,QAAQ,EAAE,UAHd;AAIIsF,MAAAA,MAAM,EAAE;AAJZ,KAPe,EAaf;AACIF,MAAAA,IAAI,EAAE,WADV;AAEIC,MAAAA,KAAK,EAAE,eAFX;AAGIrF,MAAAA,QAAQ,EAAE,WAHd;AAIIsF,MAAAA,MAAM,EAAE;AAJZ,KAbe,EAmBf;AACIF,MAAAA,IAAI,EAAE,MADV;AAEIC,MAAAA,KAAK,EAAE,UAFX;AAGIrF,MAAAA,QAAQ,EAAE,MAHd;AAIIsF,MAAAA,MAAM,EAAE;AAJZ,KAnBe,EAyBf;AACIF,MAAAA,IAAI,EAAE,YADV;AAEIC,MAAAA,KAAK,EAAE,gBAFX;AAGIrF,MAAAA,QAAQ,EAAE,YAHd;AAIIsF,MAAAA,MAAM,EAAE;AAJZ,KAzBe,EA+Bf;AACIF,MAAAA,IAAI,EAAE,WADV;AAEIC,MAAAA,KAAK,EAAE,eAFX;AAGIrF,MAAAA,QAAQ,EAAE,WAHd;AAIIsF,MAAAA,MAAM,EAAE;AAJZ,KA/Be,EAqCf;AACIF,MAAAA,IAAI,EAAE,WADV;AAEIC,MAAAA,KAAK,EAAE,eAFX;AAGIrF,MAAAA,QAAQ,EAAE,WAHd;AAIIsF,MAAAA,MAAM,EAAE;AAJZ,KArCe,EA2Cf;AACIF,MAAAA,IAAI,EAAE,OADV;AAEIC,MAAAA,KAAK,EAAE,WAFX;AAGIrF,MAAAA,QAAQ,EAAE,OAHd;AAIIsF,MAAAA,MAAM,EAAE;AAJZ,KA3Ce,CAAnB;AAkDH,GAnDD,MAmDO;AACH,QAAIZ,OAAO,CAACa,QAAR,KAAqB3E,SAAS,CAAC4E,QAAnC,EAA6C;AACzCL,MAAAA,gBAAgB,GAAG,CACf;AACIC,QAAAA,IAAI,EAAE,WADV;AAEIC,QAAAA,KAAK,EAAE,eAFX;AAGIrF,QAAAA,QAAQ,EAAE,WAHd;AAIIsF,QAAAA,MAAM,EAAE;AAJZ,OADe,EAOf;AACIF,QAAAA,IAAI,EAAE,SADV;AAEIC,QAAAA,KAAK,EAAE,eAFX;AAGIrF,QAAAA,QAAQ,EAAE,SAHd;AAIIsF,QAAAA,MAAM,EAAE;AAJZ,OAPe,EAaf;AACIF,QAAAA,IAAI,EAAE,YADV;AAEIC,QAAAA,KAAK,EAAE,aAFX;AAGIrF,QAAAA,QAAQ,EAAE,SAHd;AAIIsF,QAAAA,MAAM,EAAEb,YAAY,IAAI;AAJ5B,OAbe,EAmBf;AACIW,QAAAA,IAAI,EAAE,OADV;AAEIC,QAAAA,KAAK,EAAE,WAFX;AAGIrF,QAAAA,QAAQ,EAAE,OAHd;AAIIsF,QAAAA,MAAM,EAAEb,YAAY,IAAI;AAJ5B,OAnBe,EAyBf;AACIW,QAAAA,IAAI,EAAE,aADV;AAEIC,QAAAA,KAAK,EAAE,iBAFX;AAGIrF,QAAAA,QAAQ,EAAE,OAHd;AAIIsF,QAAAA,MAAM,EAAEb,YAAY,IAAI;AAJ5B,OAzBe,EA+Bf;AACIW,QAAAA,IAAI,EAAE,cADV;AAEIC,QAAAA,KAAK,EAAE,iBAFX;AAGIrF,QAAAA,QAAQ,EAAE,SAHd;AAIIsF,QAAAA,MAAM,EAAEb,YAAY,IAAI;AAJ5B,OA/Be,EAqCf;AACIW,QAAAA,IAAI,EAAE,SADV;AAEIC,QAAAA,KAAK,EAAE,aAFX;AAGIrF,QAAAA,QAAQ,EAAE,SAHd;AAIIsF,QAAAA,MAAM,EAAEb,YAAY,IAAI;AAJ5B,OArCe,EA2Cf;AACIW,QAAAA,IAAI,EAAE,SADV;AAEIC,QAAAA,KAAK,EAAE,aAFX;AAGIrF,QAAAA,QAAQ,EAAE,SAHd;AAIIsF,QAAAA,MAAM,EAAEb,YAAY,IAAI,CAACZ;AAJ7B,OA3Ce,EAiDf;AACIuB,QAAAA,IAAI,EAAE,UADV;AAEIC,QAAAA,KAAK,EAAE,aAFX;AAGIrF,QAAAA,QAAQ,EAAE,WAHd;AAIIsF,QAAAA,MAAM,EAAEb,YAAY,IAAI;AAJ5B,OAjDe,CAAnB,CADyC,CAyDzC;;AACA,YAAMgB,YAAY,GAAGN,gBAAgB,CAACO,SAAjB,CAA2BC,CAAC,IAAIA,CAAC,CAACP,IAAF,KAAW,UAA3C,CAArB;AACA,YAAMQ,eAAe,GAAG;AACpBR,QAAAA,IAAI,EAAE,YADc;AAEpBC,QAAAA,KAAK,EAAE,eAFa;AAGpBrF,QAAAA,QAAQ,EAAE,OAHU;AAIpBsF,QAAAA,MAAM,EAAEb,YAAY,IAAI;AAJJ,OAAxB;;AAMA,UAAIgB,YAAY,KAAK,CAAC,CAAtB,EAAyB;AACrBN,QAAAA,gBAAgB,CAACU,MAAjB,CAAwBJ,YAAxB,EAAsC,CAAtC,EAAyCG,eAAzC;AACH;AACJ,KApED,MAoEO;AACHT,MAAAA,gBAAgB,GAAG,CACf;AACIC,QAAAA,IAAI,EAAE,SADV;AAEIC,QAAAA,KAAK,EAAE,eAFX;AAGIrF,QAAAA,QAAQ,EAAE,SAHd;AAIIsF,QAAAA,MAAM,EAAE;AAJZ,OADe,EAOf;AACIF,QAAAA,IAAI,EAAE,YADV;AAEIC,QAAAA,KAAK,EAAE,cAFX;AAGIrF,QAAAA,QAAQ,EAAE,SAHd;AAIIsF,QAAAA,MAAM,EAAEb,YAAY,IAAI;AAJ5B,OAPe,EAaf;AACIW,QAAAA,IAAI,EAAE,aADV;AAEIC,QAAAA,KAAK,EAAE,iBAFX;AAGIrF,QAAAA,QAAQ,EAAE,OAHd;AAIIsF,QAAAA,MAAM,EAAEb,YAAY,IAAI;AAJ5B,OAbe,EAmBf;AACIW,QAAAA,IAAI,EAAE,cADV;AAEIC,QAAAA,KAAK,EAAE,iBAFX;AAGIrF,QAAAA,QAAQ,EAAE,SAHd;AAIIsF,QAAAA,MAAM,EAAEb,YAAY,IAAI;AAJ5B,OAnBe,EAyBf;AACIW,QAAAA,IAAI,EAAE,SADV;AAEIC,QAAAA,KAAK,EAAE,aAFX;AAGIrF,QAAAA,QAAQ,EAAE,SAHd;AAIIsF,QAAAA,MAAM,EAAEb,YAAY,IAAI;AAJ5B,OAzBe,EA+Bf;AACIW,QAAAA,IAAI,EAAE,SADV;AAEIC,QAAAA,KAAK,EAAE,aAFX;AAGIrF,QAAAA,QAAQ,EAAE,SAHd;AAIIsF,QAAAA,MAAM,EAAEb,YAAY,IAAI,CAACZ;AAJ7B,OA/Be,CAAnB;;AAsCA,UAAIM,aAAJ,aAAIA,aAAJ,eAAIA,aAAa,CAAE2B,MAAnB,EAA2B;AACvB,cAAMF,eAAe,GAAG;AACpBR,UAAAA,IAAI,EAAE,YADc;AAEpBC,UAAAA,KAAK,EAAE,eAFa;AAGpBrF,UAAAA,QAAQ,EAAE,OAHU;AAIpBsF,UAAAA,MAAM,EAAEb,YAAY,IAAI;AAJJ,SAAxB;AAMAU,QAAAA,gBAAgB,CAACY,IAAjB,CAAsBH,eAAtB;AACH;AACJ;AACJ;;AAGD,MAAII,gBAAgB,GAAGhC,MAAM,CAACiC,KAAP,CAAaC,GAApC;;AACA,MAAI,CAAClC,MAAM,CAACiC,KAAP,CAAaC,GAAd,IAAqB7B,UAAzB,EAAqC;AACjC2B,IAAAA,gBAAgB,GAAG,SAAnB;AACH;;AACD,MAAIlC,YAAY,IAAIqC,MAAM,CAACC,IAAP,CAAYtC,YAAZ,EAA0BuC,MAA1B,GAAmC,CAAnD,IAAwD,CAACrC,MAAM,CAACiC,KAAP,CAAaC,GAAtE,IAA6E,CAAC7B,UAAlF,EAA8F;AAC1F,QAAIiC,SAAS,GAAG,KAAhB;AACAH,IAAAA,MAAM,CAACC,IAAP,CAAYtC,YAAZ,EAA0ByC,GAA1B,CAA8B,CAACC,IAAD,EAAOC,CAAP,KAAa;AACvC,UAAI3C,YAAY,CAAC0C,IAAD,CAAhB,EAAwB;AACpBF,QAAAA,SAAS,GAAG,IAAZ;AACH;AACJ,KAJD;;AAKA,QAAIA,SAAJ,EAAe;AACXN,MAAAA,gBAAgB,GAAG,SAAnB;AACH,KAFD,MAEO;AACHA,MAAAA,gBAAgB,GAAG,WAAnB;AACH;AACJ;;AACD,QAAM;AAAA,OAACU,qBAAD;AAAA,OAAwBC;AAAxB,MAAoD1I,QAAQ,CAC9DkH,gBAAgB,CAACO,SAAjB,CAA4BkB,IAAD,IAAUA,IAAI,CAAC5G,QAAL,KAAkBgG,gBAAvD,IAA2E,CAAC,CAA5E,GACMA,gBADN,GAEMb,gBAAgB,CAAC/F,IAAD,CAAhB,CAAuBY,QAHiC,CAAlE;AAMAhC,EAAAA,SAAS,CAAC,MAAM;AACZ2I,IAAAA,wBAAwB,CACpBxB,gBAAgB,CAACO,SAAjB,CAA4BkB,IAAD,IAAUA,IAAI,CAAC5G,QAAL,KAAkBgG,gBAAvD,IAA2E,CAAC,CAA5E,GACMA,gBADN,GAEMb,gBAAgB,CAAC/F,IAAD,CAAhB,CAAuBY,QAHT,CAAxB;AAKH,GANQ,EAMN,CAACgE,MAAM,CAACiC,KAAR,CANM,CAAT;;AAQA,QAAMY,gCAAgC,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC1D,QAAIL,qBAAqB,KAAKK,QAA9B,EAAwC;AACpCC,MAAAA,UAAU,CAAC,MAAM;AACb3I,QAAAA,UAAU,CAAC,YAAD,EAAe,CAAC,aAAD,CAAf,EAAgCuG,MAAM,CAACqC,WAAvC,CAAV;AACH,OAFS,EAEP,GAFO,CAAV;AAGA/B,MAAAA,iBAAiB,CAAC6B,QAAD,CAAjB;;AACA,UAAIf,gBAAJ,EAAsB;AAClB,cAAMkB,WAAW,GAAGlD,MAAM,CAACiC,KAA3B;;AACA,YAAIiB,WAAW,CAAChB,GAAZ,KAAoB,OAAxB,EAAiC;AAC7B,cAAIiB,IAAI,CAACC,SAAL,CAAexD,KAAK,CAACyD,OAAN,CAAcC,oBAA7B,MAAuDH,IAAI,CAACC,SAAL,CAAexD,KAAK,CAACyD,OAAN,CAAcE,gBAA7B,CAAvD,IAAyGJ,IAAI,CAACC,SAAL,CAAexD,KAAK,CAACyD,OAAN,CAAcG,gBAA7B,MAAmDL,IAAI,CAACC,SAAL,CAAexD,KAAK,CAACyD,OAAN,CAAcI,oBAA7B,CAAhK,EAAoN;AAChNzC,YAAAA,oBAAoB,CAAC,IAAD,CAApB;AACH,WAFD,MAEO;AACH3G,YAAAA,UAAU,CAAC,OAAD,EAAU,CAAC,SAAD,EAAY,sBAAZ,CAAV,EAA+C,EAA/C,CAAV;AACAA,YAAAA,UAAU,CAAC,OAAD,EAAU,CAAC,SAAD,EAAY,kBAAZ,CAAV,EAA2C,EAA3C,CAAV;AACAA,YAAAA,UAAU,CAAC,OAAD,EAAU,CAAC,SAAD,EAAY,kBAAZ,CAAV,EAA2C,EAA3C,CAAV;AACAA,YAAAA,UAAU,CAAC,OAAD,EAAU,CAAC,SAAD,EAAY,sBAAZ,CAAV,EAA+C,EAA/C,CAAV;AACAsI,YAAAA,wBAAwB,CAACI,QAAD,CAAxB;AACAG,YAAAA,WAAW,CAACN,IAAZ,GAAmB5C,MAAM,CAACiC,KAAP,CAAaW,IAAhC;AACAM,YAAAA,WAAW,CAAChB,GAAZ,GAAkBa,QAAlB;AACA7H,YAAAA,MAAM,CAAC6G,IAAP,CAAY;AACJ2B,cAAAA,QAAQ,EAAE1D,MAAM,CAAC0D,QADb;AAEJzB,cAAAA,KAAK,EAAEiB;AAFH,aAAZ,EAIIS,SAJJ,EAKI;AAACC,cAAAA,MAAM,EAAE;AAAT,aALJ;AAOH;AACJ,SAnBD,MAmBO;AACHV,UAAAA,WAAW,CAACN,IAAZ,GAAmB5C,MAAM,CAACiC,KAAP,CAAaW,IAAb,IAAqB,SAAxC;AACAM,UAAAA,WAAW,CAAChB,GAAZ,GAAkBa,QAAlB;AACA7H,UAAAA,MAAM,CAAC6G,IAAP,CAAY;AACJ2B,YAAAA,QAAQ,EAAE1D,MAAM,CAAC0D,QADb;AAEJzB,YAAAA,KAAK,EAAEiB;AAFH,WAAZ,EAIIS,SAJJ,EAKI;AAACC,YAAAA,MAAM,EAAE;AAAT,WALJ;AAOAjB,UAAAA,wBAAwB,CAACI,QAAD,CAAxB;AACH;AACJ;AACJ;AACJ,GAzCD;;AA2CA,QAAMc,oBAAoB,GAAIC,WAAD,IAAiB;AAC1C,QAAIC,SAAJ;;AACA,YAAQD,WAAW,CAAC1C,IAApB;AACI,WAAK,WAAL;AACI2C,QAAAA,SAAS,GAAG,MAAC,WAAD;AAAa,UAAA,YAAY,EAAEjE,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAZ;AACA;;AACJ,WAAK,SAAL;AACIiE,QAAAA,SAAS,GAAG,MAAC,OAAD;AAAS,UAAA,YAAY,EAAEjE,YAAvB;AAAqC,UAAA,WAAW,EAAEC,WAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAZ;AACA;;AACJ,WAAK,UAAL;AACIgE,QAAAA,SAAS,GAAG,MAAC,QAAD;AAAU,UAAA,GAAG,EAAE1D,UAAF,aAAEA,UAAF,uBAAEA,UAAU,CAAE2D,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAZ;AACA;;AACJ,WAAK,WAAL;AACID,QAAAA,SAAS,GAAG,MAAC,SAAD;AAAW,UAAA,KAAK,EAAE1D,UAAF,aAAEA,UAAF,uBAAEA,UAAU,CAAEjE,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAZ;AACA;;AACJ,WAAK,MAAL;AACI2H,QAAAA,SAAS,GAAG,MAAC,cAAD;AAAgB,UAAA,KAAK,EAAE1D,UAAF,aAAEA,UAAF,uBAAEA,UAAU,CAAEjE,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAZ;AACA;;AACJ,WAAK,YAAL;AACI2H,QAAAA,SAAS,GAAG,MAAC,UAAD;AAAY,UAAA,KAAK,EAAE1D,UAAF,aAAEA,UAAF,uBAAEA,UAAU,CAAEjE,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAZ;AACA;;AACJ,WAAK,WAAL;AACI2H,QAAAA,SAAS,GAAG,MAAC,SAAD;AAAW,UAAA,KAAK,EAAE1D,UAAF,aAAEA,UAAF,uBAAEA,UAAU,CAAEjE,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAZ;AACA;;AACJ,WAAK,WAAL;AACI2H,QAAAA,SAAS,GAAG,MAAC,SAAD;AAAW,UAAA,KAAK,EAAE1D,UAAF,aAAEA,UAAF,uBAAEA,UAAU,CAAEjE,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAZ;AACA;;AACJ,WAAK,OAAL;AACI2H,QAAAA,SAAS,GAAG,MAAC,KAAD;AAAO,UAAA,GAAG,EAAE1D,UAAF,aAAEA,UAAF,uBAAEA,UAAU,CAAE2D,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAZ;AACA;;AACJ,WAAK,YAAL;AACID,QAAAA,SAAS,GAAG,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAZ;AACA;;AACJ,WAAK,aAAL;AACIA,QAAAA,SAAS,GAAG,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAZ;AACA;;AACJ,WAAK,cAAL;AACIA,QAAAA,SAAS,GAAG,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAZ;AACA;;AACJ,WAAK,SAAL;AACIA,QAAAA,SAAS,GAAG,MAAC,OAAD;AAAS,UAAA,QAAQ,EAAE,IAAnB;AAAyB,UAAA,KAAK,EAAE,CAAhC;AAAmC,UAAA,QAAQ,EAAE,IAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAZ;AACA;;AACJ,WAAK,SAAL;AACIA,QAAAA,SAAS,GAAG,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAZ;AACA;;AACJ,WAAK,OAAL;AACIA,QAAAA,SAAS,GAAG,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAZ;AACA;;AACJ,WAAK,YAAL;AACIA,QAAAA,SAAS,GAAG,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAZ;AACA;;AACJ,WAAK,UAAL;AACIA,QAAAA,SAAS,GAAG,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAZ;AAlDR;;AAsDA,WAAOA,SAAP;AACH,GAzDD;;AA2DA,QAAME,aAAa,GAAG,CAClB;AACIC,IAAAA,IAAI,EACA,MAAC,WAAD;AAAa,MAAA,SAAS,EAAE9D,OAAO,CAACzC,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFR;AAIID,IAAAA,KAAK,EAAE,SAJX;AAKIyG,IAAAA,QAAQ,EAAEjE,CAAC,CAAC,iBAAD,CALf;AAMIkE,IAAAA,SAAS,EAAEhE,OAAO,CAACxB,UANvB;AAOIyF,IAAAA,UAAU,EAAE,IAAIC,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AAACC,MAAAA,wBAAwB,EAAE;AAA3B,KAA/B,EAA8DC,MAA9D,CAAsE7E,KAAK,CAAC8E,gBAAN,IAA0B9E,KAAK,CAAC8E,gBAAN,CAAuBC,WAAlD,IAAkE,GAAvI;AAPhB,GADkB,EAUlB;AACIT,IAAAA,IAAI,EACA,MAAC,WAAD;AAAa,MAAA,SAAS,EAAE9D,OAAO,CAACzC,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFR;AAIID,IAAAA,KAAK,EAAE,SAJX;AAKIyG,IAAAA,QAAQ,EAAEjE,CAAC,CAAC,eAAD,CALf;AAMIkE,IAAAA,SAAS,EAAEhE,OAAO,CAAC3B,QANvB;AAOI4F,IAAAA,UAAU,EAAE,IAAIC,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AAACC,MAAAA,wBAAwB,EAAE;AAA3B,KAA/B,EAA8DC,MAA9D,CAAsE7E,KAAK,CAAC8E,gBAAN,IAA0B9E,KAAK,CAAC8E,gBAAN,CAAuBE,SAAlD,IAAgE,GAArI;AAPhB,GAVkB,EAmBlB;AACIV,IAAAA,IAAI,EACA,MAAC,WAAD;AAAa,MAAA,SAAS,EAAE9D,OAAO,CAACzC,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFR;AAIID,IAAAA,KAAK,EAAE,SAJX;AAKIyG,IAAAA,QAAQ,EAAEjE,CAAC,CAAC,eAAD,CALf;AAMIkE,IAAAA,SAAS,EAAEhE,OAAO,CAAC1B,UANvB;AAOI2F,IAAAA,UAAU,EAAE,IAAIC,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AAACC,MAAAA,wBAAwB,EAAE;AAA3B,KAA/B,EAA8DC,MAA9D,CAAsE7E,KAAK,CAAC8E,gBAAN,IAA0B9E,KAAK,CAAC8E,gBAAN,CAAuBG,SAAlD,IAAgE,GAArI;AAPhB,GAnBkB,EA4BlB;AACIX,IAAAA,IAAI,EACA,MAAC,WAAD;AAAa,MAAA,SAAS,EAAE9D,OAAO,CAACzC,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFR;AAIID,IAAAA,KAAK,EAAE,SAJX;AAKIyG,IAAAA,QAAQ,EAAEjE,CAAC,CAAC,kBAAD,CALf;AAMIkE,IAAAA,SAAS,EAAEhE,OAAO,CAACzB,QANvB;AAOI0F,IAAAA,UAAU,EAAE,IAAIC,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AAACC,MAAAA,wBAAwB,EAAE;AAA3B,KAA/B,EAA8DC,MAA9D,CAAsE7E,KAAK,CAAC8E,gBAAN,IAA0B9E,KAAK,CAAC8E,gBAAN,CAAuBI,YAAlD,IAAmE,GAAxI;AAPhB,GA5BkB,CAAtB;AAuCA,SACI,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAA4B,IAAA,SAAS,EAAE1E,OAAO,CAACpB,sBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKY,KAAK,CAAC8E,gBAAN,GACGT,aAAa,CAAC1B,GAAd,CAAkB,CAACwC,IAAD,EAAOtC,CAAP,KAAa;AAC3B,WACI,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,GAAG,EAAEA,CAAhB;AAAmB,MAAA,EAAE,EAAE,EAAvB;AAA2B,MAAA,EAAE,EAAE,CAA/B;AAAkC,MAAA,EAAE,EAAE,CAAtC;AAAyC,MAAA,EAAE,EAAE,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAE;AAACvE,QAAAA,QAAQ,EAAE;AAAX,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD;AAAM,MAAA,SAAS,EAAEkC,OAAO,CAAC/B,SAAR,GAAoB,GAApB,GAA0B0G,IAAI,CAACX,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,WAAD;AAAa,MAAA,SAAS,EAAEhE,OAAO,CAACvB,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAEuB,OAAO,CAACtC,OAAxB;AAAiC,MAAA,KAAK,EAAE;AAACkH,QAAAA,eAAe,EAAED,IAAI,CAACrH;AAAvB,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKqH,IAAI,CAACb,IADV,CADJ,EAII,MAAC,UAAD;AAAY,MAAA,KAAK,EAAC,eAAlB;AACY,MAAA,SAAS,EAAE9D,OAAO,CAACtB,SAD/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAC2CiG,IAAI,CAACZ,QADhD,CAJJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,UAAD;AAAY,MAAA,SAAS,EAAE/D,OAAO,CAACjB,aAA/B;AACY,MAAA,KAAK,EAAE;AAACzB,QAAAA,KAAK,EAAEqH,IAAI,CAACrH;AAAb,OADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEKqH,IAAI,CAACV,UAFV,OAEsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFtB,CADJ,CADJ,CADJ,CANJ,CADJ,CADJ,CADJ,CADJ;AAyBH,GA1BD,CADH,GA2BQ,IA5Bb,CADJ,EAgCI,MAAC,MAAD;AAAQ,IAAA,QAAQ,EAAC,QAAjB;AAA0B,IAAA,KAAK,EAAC,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AACI,IAAA,KAAK,EAAE3B,qBADX;AAEI,IAAA,QAAQ,EAAEG,gCAFd;AAGI,IAAA,cAAc,EAAC,SAHnB;AAII,IAAA,SAAS,EAAC,SAJd;AAKI,IAAA,OAAO,EAAC,YALZ;AAMI,IAAA,aAAa,EAAC,MANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQK1B,gBAAgB,CAAC8D,MAAjB,CAAwBC,WAAW,IAAI,CAACA,WAAW,CAAC5D,MAApD,EAA4DiB,GAA5D,CAAgE,CAACC,IAAD,EAAOC,CAAP,KAC7D,MAAC,GAAD;AAAK,IAAA,KAAK,EAAEvC,CAAC,CAACsC,IAAI,CAACnB,KAAN,CAAb;AAA2B,IAAA,KAAK,EAAEmB,IAAI,CAACxG;AAAvC,KAAqDG,SAAS,CAACsG,CAAD,CAA9D;AAAmE,IAAA,GAAG,EAAEA,CAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADH,CARL,CADJ,CAhCJ,EA8CKtB,gBAAgB,CAAC8D,MAAjB,CAAwBC,WAAW,IAAI,CAACA,WAAW,CAAC5D,MAApD,EAA4DiB,GAA5D,CAAgE,CAACC,IAAD,EAAOC,CAAP,KAC7D,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEC,qBAAjB;AAAwC,IAAA,QAAQ,EAAEF,IAAI,CAACxG,QAAvD;AAAiE,IAAA,KAAK,EAAEyG,CAAxE;AAA2E,IAAA,GAAG,EAAEA,CAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,GAAD;AAAK,IAAA,KAAK,EAAE;AAACuC,MAAAA,eAAe,EAAE;AAAlB,KAAZ;AAA0C,IAAA,CAAC,EAAE,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiDnB,oBAAoB,CAACrB,IAAD,CAArE,CADJ,CADH,CA9CL,CADJ,EAqDI,MAAC,oBAAD;AACI,IAAA,IAAI,EAAEzB,iBADV;AAEI,IAAA,SAAS,EAAGY,CAAD,IAAOX,oBAAoB,CAACW,CAAD,CAF1C;AAGI,IAAA,UAAU,EAAGA,CAAD,IAAO;AACfX,MAAAA,oBAAoB,CAACW,CAAD,CAApB;AACAgB,MAAAA,wBAAwB,CAAC1B,cAAD,CAAxB;AACA,YAAMiC,WAAW,GAAGlD,MAAM,CAACiC,KAA3B;AACAiB,MAAAA,WAAW,CAACN,IAAZ,GAAmB5C,MAAM,CAACiC,KAAP,CAAaW,IAAhC;AACAM,MAAAA,WAAW,CAAChB,GAAZ,GAAkBjB,cAAlB;AACA/F,MAAAA,MAAM,CAAC6G,IAAP,CAAY;AACR2B,QAAAA,QAAQ,EAAE1D,MAAM,CAAC0D,QADT;AAERzB,QAAAA,KAAK,EAAEiB;AAFC,OAAZ;AAIA7I,MAAAA,UAAU,CAAC,OAAD,EAAU,CAAC,SAAD,EAAY,sBAAZ,CAAV,EAA+C,EAA/C,CAAV;AACAA,MAAAA,UAAU,CAAC,OAAD,EAAU,CAAC,SAAD,EAAY,kBAAZ,CAAV,EAA2C,EAA3C,CAAV;AACAA,MAAAA,UAAU,CAAC,OAAD,EAAU,CAAC,SAAD,EAAY,kBAAZ,CAAV,EAA2C,EAA3C,CAAV;AACAA,MAAAA,UAAU,CAAC,OAAD,EAAU,CAAC,SAAD,EAAY,sBAAZ,CAAV,EAA+C,EAA/C,CAAV;AACH,KAjBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArDJ,CADJ;AA2EH,CAlbD;;AAobA,MAAM8K,eAAe,GAAIvF,KAAD,IAAW;AAC/B,SAAO;AACHA,IAAAA,KAAK,EAAEA,KAAK,CAACiB,WAAN,CAAkBuE;AADtB,GAAP;AAGH,CAJD;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACtChL,EAAAA,WAAW,EAAE,CAACiL,SAAD,EAAYC,SAAZ,EAAuBzJ,KAAvB,KAAiCuJ,QAAQ,CAAChL,WAAW,CAACiL,SAAD,EAAYC,SAAZ,EAAuBzJ,KAAvB,CAAZ,CADhB;AAEtC1B,EAAAA,UAAU,EAAE,CAACkL,SAAD,EAAYC,SAAZ,EAAuBzJ,KAAvB,KAAiCuJ,QAAQ,CAACjL,UAAU,CAACkL,SAAD,EAAYC,SAAZ,EAAuBzJ,KAAvB,CAAX;AAFf,CAAf,CAA3B;;AAKA,eAAe5B,OAAO,CAACgL,eAAD,EAAkBE,kBAAlB,CAAP,CAA6C1F,SAA7C,CAAf","sourcesContent":["import React, {useEffect, useState, useContext} from 'react'\nimport {connect, useSelector} from 'react-redux'\nimport {setToState, updateState} from 'state/actions'\nimport {Container, Paper} from '@material-ui/core'\nimport useTranslation from 'lib/translations/hooks/useTranslation'\nimport Details from '../Details'\nimport Preferences from '../Preferences'\nimport AppBar from '@material-ui/core/AppBar'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Box from '@material-ui/core/Box'\nimport Surveys from './Surveys'\nimport LoyaltyClub from '../LoyaltyClub'\nimport Router, {useRouter} from 'next/router'\nimport {ZERO} from 'model/globals'\nimport MyRequest from '../MyRequest'\nimport History from '../History'\nimport Grid from '@material-ui/core/Grid'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport LoyaltyIcon from '@material-ui/icons/Loyalty'\n\nfunction TabPanel(props) {\n    const {children, value, hashCode, index, ...other} = props\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== hashCode}\n            id={`scrollable-auto-tabpanel-${index}`}\n            aria-labelledby={`scrollable-auto-tab-${index}`}\n            {...other}\n        >\n            {value === hashCode && <Paper square>{children}</Paper>}\n        </div>\n    )\n}\n\nfunction a11yProps(index) {\n    return {\n        id: `scrollable-auto-tab-${index}`,\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    }\n}\n\nimport {makeStyles} from '@material-ui/core/styles'\nimport Notes from \"../Notes\";\nimport SaleCalls from \"../SaleCalls\";\nimport CallLog from \"../CallLog\";\nimport SearchGuest from \"../SearchGuest\";\nimport TrackedChangesDialog from \"../../../TrackedChangesDialog\";\nimport WebCmsGlobal from \"../../../webcms-global\";\nimport {ROLETYPES} from \"../../../../model/orest/constants\";\nimport Contacts from \"../../../emp-portal/tabs/Contacts\";\nimport Education from \"../../../emp-portal/tabs/Education\";\nimport Abilities from \"../../../emp-portal/tabs/Abilities\";\nimport Languages from \"../../../emp-portal/tabs/Languages\";\nimport WorkExperience from \"../../../emp-portal/tabs/Work\";\nimport References from \"../../../emp-portal/tabs/References\";\nimport Files from \"../../../emp-portal/tabs/Files\";\n\nconst dashboardOverview = (theme) => ({\n    mainTitle: {\n        paddingTop: \"38px\",\n        fontSize: \"28px\",\n        fontWeight: \"normal\",\n        color: \"#43425D\",\n    },\n    iconStyle: {\n        color: \"#FFF\",\n        \"&.MuiSvgIcon-root\": {\n            width: \"1.75em\",\n            height: \"2.188em\"\n        }\n    },\n    iconDiv: {\n        top: -12,\n        width: 65,\n        height: 65,\n        marginLeft: '-15px',\n        padding: '7px 12px',\n        position: 'absolute',\n        borderRadius: 5,\n        boxShadow: '0 1px 12px #d0d0d0'\n    },\n    cardStyle: {\n        minHeight: \"130px\",\n        boxShadow: 'inset 0 -7px 0 0px #009688, -1px 1px 10px 1px #69696940',\n        [theme.breakpoints.down('xs')]: {\n            width: \"100%\",\n        },\n    },\n    cardLeft: {\n        boxShadow: 'inset 0 -7px 0 0px #2196f3, -1px 1px 10px 1px #69696940',\n    },\n    cardLeftHc: {\n        boxShadow: 'inset 0 -7px 0 0px #4caf50, -1px 1px 10px 1px #69696940',\n    },\n    cardUsed: {\n        boxShadow: 'inset 0 -7px 0 0px #ff9800, -1px 1px 10px 1px #69696940',\n    },\n    cardGained: {\n        boxShadow: 'inset 0 -7px 0 0px #009688, -1px 1px 10px 1px #69696940',\n    },\n    cardContent: {\n        padding: \"16px 32px\",\n    },\n    cardTitle: {\n        fontSize: \"18px\",\n        fontWeight: \"normal\",\n        textAlign: \"right\",\n        [theme.breakpoints.down('xs')]: {\n            textAlign: \"right\",\n        },\n    },\n    loyaltyInfoCardWrapper: {\n        [theme.breakpoints.down('xs')]: {\n            marginTop: 20\n        },\n        marginBottom: 20\n    },\n    cardCountText: {\n        fontSize: \"30px\",\n        fontWeight: \"bold\",\n        textAlign: \"right\",\n    },\n    dividerStyle: {\n        width: \"calc(100% - 30px)\",\n        color: \"#CECECE\",\n        [theme.breakpoints.down('xs')]: {\n            width: \"100%\",\n        },\n    },\n    detailTitle: {\n        fontSize: \"14px\",\n        fontWeight: \"500\",\n        textTransform: \"uppercase\",\n        color: \"#43425D\",\n        textDecoration: \"underline\"\n    },\n    detailDoneCountText: {\n        fontSize: \"18px\",\n        fontWeight: \"bold\",\n        color: \"#5B5A72\"\n    },\n    detailProcessCountText: {\n        fontSize: \"18px\",\n        fontWeight: \"bold\",\n        color: \"#43425D\"\n    }\n})\n\nconst useStyles = makeStyles(dashboardOverview);\n\nconst MyProfile = (props) => {\n    const {state, setToState, isHistory, clientParams, isEmpPortal} = props\n    const router = useRouter()\n    const {GENERAL_SETTINGS} = useContext(WebCmsGlobal)\n    const {t} = useTranslation()\n    const hotelSettings = GENERAL_SETTINGS.hotelSettings;\n    const classes = useStyles()\n    const clientBase = useSelector((state) => isEmpPortal ? (state?.orest?.state?.emp || false) : (state?.orest?.state?.client || false) || false)\n    const isClientBase = clientBase?.id ? false : true\n    const loginfo = useSelector((state) => state.orest.currentUser && state.orest.currentUser.loginfo)\n    const panels = useSelector(state => state?.formReducer?.userPortal?.panels || false);\n    const [openTrackedDialog, setOpenTrackedDialog] = useState(false);\n    const [routerHashCode, setRouterHashCode] = useState('');\n    let myProfileTabMenu = [];\n\n    if (isEmpPortal) {\n        myProfileTabMenu = [\n            {\n                code: 'DETAILS',\n                title: 'str_details',\n                hashCode: 'details',\n                isHide: false\n            },\n            {\n                code: 'CONTACTS',\n                title: 'str_contacts',\n                hashCode: 'contacts',\n                isHide: false\n            },\n            {\n                code: 'EDUCATION',\n                title: 'str_education',\n                hashCode: 'education',\n                isHide: false\n            },\n            {\n                code: 'WORK',\n                title: 'str_work',\n                hashCode: 'work',\n                isHide: false\n            },\n            {\n                code: 'REFERENCES',\n                title: 'str_references',\n                hashCode: 'references',\n                isHide: false,\n            },\n            {\n                code: 'ABILITIES',\n                title: 'str_abilities',\n                hashCode: 'abilities',\n                isHide: false,\n            },\n            {\n                code: 'LANGUAGES',\n                title: 'str_languages',\n                hashCode: 'languages',\n                isHide: false,\n            },\n            {\n                code: 'FILES',\n                title: 'str_files',\n                hashCode: 'files',\n                isHide: false,\n            }\n        ]\n    } else {\n        if (loginfo.roletype === ROLETYPES.EMPLOYEE) {\n            myProfileTabMenu = [\n                {\n                    code: 'DASHBOARD',\n                    title: 'str_dashboard',\n                    hashCode: 'dashboard',\n                    isHide: false\n                },\n                {\n                    code: 'DETAILS',\n                    title: 'str_myDetails',\n                    hashCode: 'details',\n                    isHide: false\n                },\n                {\n                    code: 'MY_REQUEST',\n                    title: 'str_request',\n                    hashCode: 'request',\n                    isHide: isClientBase || false\n                },\n                {\n                    code: 'NOTES',\n                    title: 'str_notes',\n                    hashCode: 'notes',\n                    isHide: isClientBase || false\n                },\n                {\n                    code: 'PREFERENCES',\n                    title: 'str_preferences',\n                    hashCode: 'prefs',\n                    isHide: isClientBase || false\n                },\n                {\n                    code: 'LOYALTY_CLUB',\n                    title: 'str_loyaltyClub',\n                    hashCode: 'loyalty',\n                    isHide: isClientBase || false\n                },\n                {\n                    code: 'SURVEYS',\n                    title: 'str_surveys',\n                    hashCode: 'surveys',\n                    isHide: isClientBase || false\n                },\n                {\n                    code: 'HISTORY',\n                    title: 'str_history',\n                    hashCode: 'history',\n                    isHide: isClientBase || !isHistory\n                },\n                {\n                    code: 'CALL_LOG',\n                    title: 'str_callLog',\n                    hashCode: 'call-logs',\n                    isHide: isClientBase || false\n                },\n            ]\n            //TODO change after the fix\n            const callLogIndex = myProfileTabMenu.findIndex(e => e.code === 'CALL_LOG')\n            const saleCallTabData = {\n                code: 'SALE_CALLS',\n                title: 'str_saleCalls',\n                hashCode: 'calls',\n                isHide: isClientBase || false\n            }\n            if (callLogIndex !== -1) {\n                myProfileTabMenu.splice(callLogIndex, 0, saleCallTabData)\n            }\n        } else {\n            myProfileTabMenu = [\n                {\n                    code: 'DETAILS',\n                    title: 'str_myDetails',\n                    hashCode: 'details',\n                    isHide: false\n                },\n                {\n                    code: 'MY_REQUEST',\n                    title: 'str_requests',\n                    hashCode: 'request',\n                    isHide: isClientBase || false\n                },\n                {\n                    code: 'PREFERENCES',\n                    title: 'str_preferences',\n                    hashCode: 'prefs',\n                    isHide: isClientBase || false\n                },\n                {\n                    code: 'LOYALTY_CLUB',\n                    title: 'str_loyaltyClub',\n                    hashCode: 'loyalty',\n                    isHide: isClientBase || false\n                },\n                {\n                    code: 'SURVEYS',\n                    title: 'str_surveys',\n                    hashCode: 'surveys',\n                    isHide: isClientBase || false\n                },\n                {\n                    code: 'HISTORY',\n                    title: 'str_history',\n                    hashCode: 'history',\n                    isHide: isClientBase || !isHistory\n                },\n            ]\n            if (hotelSettings?.showsc) {\n                const saleCallTabData = {\n                    code: 'SALE_CALLS',\n                    title: 'str_saleCalls',\n                    hashCode: 'calls',\n                    isHide: isClientBase || false\n                }\n                myProfileTabMenu.push(saleCallTabData)\n            }\n        }\n    }\n\n\n    let tabPanelHashCode = router.query.tab\n    if (!router.query.tab && clientBase) {\n        tabPanelHashCode = 'details'\n    }\n    if (clientParams && Object.keys(clientParams).length > 0 && !router.query.tab && !clientBase) {\n        let isAnyTrue = false;\n        Object.keys(clientParams).map((item, i) => {\n            if (clientParams[item]) {\n                isAnyTrue = true\n            }\n        })\n        if (isAnyTrue) {\n            tabPanelHashCode = 'details';\n        } else {\n            tabPanelHashCode = 'dashboard'\n        }\n    }\n    const [myProfileTabsHashCode, setMyProfileTabsHashCode] = useState(\n        myProfileTabMenu.findIndex((menu) => menu.hashCode === tabPanelHashCode) > -1\n            ? tabPanelHashCode\n            : myProfileTabMenu[ZERO].hashCode\n    )\n\n    useEffect(() => {\n        setMyProfileTabsHashCode(\n            myProfileTabMenu.findIndex((menu) => menu.hashCode === tabPanelHashCode) > -1\n                ? tabPanelHashCode\n                : myProfileTabMenu[ZERO].hashCode\n        )\n    }, [router.query])\n\n    const handleGuestProfilePanelTabChange = (event, newValue) => {\n        if (myProfileTabsHashCode !== newValue) {\n            setTimeout(() => {\n                setToState('userPortal', ['panelStatus'], panels.requestList)\n            }, 100)\n            setRouterHashCode(newValue)\n            if (tabPanelHashCode) {\n                const routerQuery = router.query;\n                if (routerQuery.tab === 'prefs') {\n                    if (JSON.stringify(state.profile.checkboxGroupAllBase) !== JSON.stringify(state.profile.checkboxGroupAll) || JSON.stringify(state.profile.radioGroupAllGid) !== JSON.stringify(state.profile.radioGroupAllGidBase)) {\n                        setOpenTrackedDialog(true)\n                    } else {\n                        setToState('guest', ['profile', 'checkboxGroupAllBase'], {})\n                        setToState('guest', ['profile', 'checkboxGroupAll'], {})\n                        setToState('guest', ['profile', 'radioGroupAllGid'], {})\n                        setToState('guest', ['profile', 'radioGroupAllGidBase'], {})\n                        setMyProfileTabsHashCode(newValue)\n                        routerQuery.menu = router.query.menu\n                        routerQuery.tab = newValue\n                        Router.push({\n                                pathname: router.pathname,\n                                query: routerQuery\n                            },\n                            undefined,\n                            {scroll: false}\n                        )\n                    }\n                } else {\n                    routerQuery.menu = router.query.menu || 'profile'\n                    routerQuery.tab = newValue\n                    Router.push({\n                            pathname: router.pathname,\n                            query: routerQuery\n                        },\n                        undefined,\n                        {scroll: false}\n                    )\n                    setMyProfileTabsHashCode(newValue)\n                }\n            }\n        }\n    }\n\n    const renderEventComponent = (profileItem) => {\n        let component\n        switch (profileItem.code) {\n            case 'DASHBOARD':\n                component = <SearchGuest clientParams={clientParams}/>\n                break\n            case 'DETAILS':\n                component = <Details clientParams={clientParams} isEmpPortal={isEmpPortal}/>\n                break\n            case 'CONTACTS':\n                component = <Contacts mid={clientBase?.mid}/>\n                break\n            case 'EDUCATION':\n                component = <Education empId={clientBase?.id}/>\n                break\n            case 'WORK':\n                component = <WorkExperience empId={clientBase?.id}/>\n                break\n            case 'REFERENCES':\n                component = <References empId={clientBase?.id}/>\n                break\n            case 'ABILITIES':\n                component = <Abilities empId={clientBase?.id}/>\n                break\n            case 'LANGUAGES':\n                component = <Languages empId={clientBase?.id}/>\n                break\n            case 'FILES':\n                component = <Files mid={clientBase?.mid}/>\n                break\n            case 'MY_REQUEST':\n                component = <MyRequest/>\n                break\n            case 'PREFERENCES':\n                component = <Preferences/>\n                break\n            case 'LOYALTY_CLUB':\n                component = <LoyaltyClub/>\n                break\n            case 'SURVEYS':\n                component = <Surveys isWidget={true} limit={3} loadMore={true}/>\n                break\n            case 'HISTORY':\n                component = <History/>\n                break\n            case 'NOTES':\n                component = <Notes/>\n                break\n            case 'SALE_CALLS':\n                component = <SaleCalls/>\n                break\n            case 'CALL_LOG':\n                component = <CallLog/>\n\n        }\n\n        return component\n    }\n\n    const bonusInfoList = [\n        {\n            icon: (\n                <LoyaltyIcon className={classes.iconStyle}/>\n            ),\n            color: \"#009688\",\n            cardName: t(\"str_bonusGained\"),\n            className: classes.cardGained,\n            totalBonus: new Intl.NumberFormat('en-IN', {maximumSignificantDigits: 3}).format((state.bonusTransPoints && state.bonusTransPoints.bonusgained) || '0')\n        },\n        {\n            icon: (\n                <LoyaltyIcon className={classes.iconStyle}/>\n            ),\n            color: \"#2196f3\",\n            cardName: t(\"str_bonusLeft\"),\n            className: classes.cardLeft,\n            totalBonus: new Intl.NumberFormat('en-IN', {maximumSignificantDigits: 3}).format((state.bonusTransPoints && state.bonusTransPoints.bonusleft) || '0')\n        },\n        {\n            icon: (\n                <LoyaltyIcon className={classes.iconStyle}/>\n            ),\n            color: \"#4caf50\",\n            cardName: t(\"str_bonusUsed\"),\n            className: classes.cardLeftHc,\n            totalBonus: new Intl.NumberFormat('en-IN', {maximumSignificantDigits: 3}).format((state.bonusTransPoints && state.bonusTransPoints.bonusused) || '0')\n        },\n        {\n            icon: (\n                <LoyaltyIcon className={classes.iconStyle}/>\n            ),\n            color: \"#ff9800\",\n            cardName: t(\"str_bonusExpired\"),\n            className: classes.cardUsed,\n            totalBonus: new Intl.NumberFormat('en-IN', {maximumSignificantDigits: 3}).format((state.bonusTransPoints && state.bonusTransPoints.bonusexpired) || '0')\n        }\n    ]\n\n    return (\n        <React.Fragment>\n            <Container maxWidth=\"lg\">\n                <Grid container spacing={4} className={classes.loyaltyInfoCardWrapper}>\n                    {state.bonusTransPoints ?\n                        bonusInfoList.map((data, i) => {\n                            return (\n                                <Grid item key={i} xs={12} sm={6} md={6} lg={3}>\n                                    <div style={{position: \"relative\"}}>\n                                        <Card className={classes.cardStyle + ' ' + data.className}>\n                                            <CardContent className={classes.cardContent}>\n                                                <div className={classes.iconDiv} style={{backgroundColor: data.color}}>\n                                                    {data.icon}\n                                                </div>\n                                                <Typography color=\"textSecondary\"\n                                                            className={classes.cardTitle}>{data.cardName}</Typography>\n                                                <div>\n                                                    <Grid container>\n                                                        <Grid item xs={12}>\n                                                            <Typography className={classes.cardCountText}\n                                                                        style={{color: data.color}}>\n                                                                {data.totalBonus} <small>pts</small>\n                                                            </Typography>\n                                                        </Grid>\n                                                    </Grid>\n                                                </div>\n                                            </CardContent>\n                                        </Card>\n                                    </div>\n                                </Grid>\n                            )\n                        }) : null\n                    }\n                </Grid>\n                <AppBar position=\"static\" color=\"default\">\n                    <Tabs\n                        value={myProfileTabsHashCode}\n                        onChange={handleGuestProfilePanelTabChange}\n                        indicatorColor=\"primary\"\n                        textColor=\"primary\"\n                        variant=\"scrollable\"\n                        scrollButtons=\"auto\"\n                    >\n                        {myProfileTabMenu.filter(tabMenuItem => !tabMenuItem.isHide).map((item, i) => (\n                            <Tab label={t(item.title)} value={item.hashCode} {...a11yProps(i)} key={i}/>\n                        ))}\n                    </Tabs>\n                </AppBar>\n                {myProfileTabMenu.filter(tabMenuItem => !tabMenuItem.isHide).map((item, i) => (\n                    <TabPanel value={myProfileTabsHashCode} hashCode={item.hashCode} index={i} key={i}>\n                        <Box style={{backgroundColor: '#FAFAFA'}} p={3}>{renderEventComponent(item)}</Box>\n                    </TabPanel>\n                ))}\n            </Container>\n            <TrackedChangesDialog\n                open={openTrackedDialog}\n                onPressNo={(e) => setOpenTrackedDialog(e)}\n                onPressYes={(e) => {\n                    setOpenTrackedDialog(e);\n                    setMyProfileTabsHashCode(routerHashCode)\n                    const routerQuery = router.query;\n                    routerQuery.menu = router.query.menu\n                    routerQuery.tab = routerHashCode\n                    Router.push({\n                        pathname: router.pathname,\n                        query: routerQuery\n                    })\n                    setToState('guest', ['profile', 'checkboxGroupAllBase'], {})\n                    setToState('guest', ['profile', 'checkboxGroupAll'], {})\n                    setToState('guest', ['profile', 'radioGroupAllGid'], {})\n                    setToState('guest', ['profile', 'radioGroupAllGidBase'], {})\n                }}\n            />\n        </React.Fragment>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        state: state.formReducer.guest,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    updateState: (stateType, stateName, value) => dispatch(updateState(stateType, stateName, value)),\n    setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyProfile)\n"]},"metadata":{},"sourceType":"module"}