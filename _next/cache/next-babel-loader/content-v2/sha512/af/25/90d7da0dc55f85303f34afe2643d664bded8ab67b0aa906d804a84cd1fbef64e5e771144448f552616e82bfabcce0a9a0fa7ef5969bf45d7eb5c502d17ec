{"ast":null,"code":"import _extends from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\n\nvar _jsxFileName = \"/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/steps/assets/Asset.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext, useState, useEffect } from 'react'; //material imports\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Card from '@material-ui/core/Card';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize'; //dropzone import\n\nimport ReactDropzone from 'react-dropzone'; //redux imports\n\nimport { connect } from 'react-redux';\nimport { Upload, ViewList } from '@webcms/orest';\nimport WebCmsGlobal from '../../../../webcms-global';\nimport { useRouter } from 'next/router';\nimport { COLORS, PERCENTAGE_VALUES, UPLOAD_SUCCESS } from '../../constants';\nimport { setToState as _setToState, updateState as _updateState } from '../../../../../state/actions';\nimport { isErrorMsg, OREST_ENDPOINT } from '../../../../../model/orest/constants';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport { toast } from 'react-toastify';\nimport validator from 'validator';\nimport { PercentageSlider } from '../../../../../model/slider';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      flexGrow: 1\n    },\n    block: {\n      position: 'relative',\n      width: 500,\n      height: 300,\n      border: 4,\n      borderColor: 'silver',\n      borderStyle: 'dashed',\n      borderRadius: 5\n    },\n    previewStyle: {\n      backgroundSize: 'contain',\n      backgroundRepeat: 'no-repeat',\n      backgroundPosition: 'center ',\n      width: '100%',\n      height: '100%'\n    },\n    actionButtons: {\n      display: 'flex',\n      justifyContent: 'flex-start',\n      marginTop: theme.spacing(2)\n    },\n    actionButton: {\n      marginLeft: theme.spacing(1),\n      borderRadius: 20\n    },\n    icon: {\n      cursor: 'pointer',\n      width: '100%',\n      height: '100%',\n      opacity: 0.3\n    },\n    logoBlock: {\n      display: 'flex',\n      alignItems: 'center',\n      backgroundColor: 'lightgray',\n      margin: theme.spacing(1)\n    },\n    favIcon: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      borderColor: 'lightgray',\n      borderRadius: 4,\n      margin: theme.spacing(1),\n      cursor: 'pointer'\n    },\n    previewBlock: {\n      margin: theme.spacing(1),\n      display: 'flex',\n      alignItems: 'center',\n      borderColor: 'lightgray',\n      borderRadius: 4\n    },\n    card: {\n      height: 480\n    },\n    heading: {\n      marginLeft: 8,\n      marginTop: 8,\n      color: COLORS === null || COLORS === void 0 ? void 0 : COLORS.secondary,\n      fontWeight: 'bold'\n    },\n    formControl: {\n      margin: 4\n    },\n    textArea: {\n      borderColor: 'silver',\n      borderRadius: 5,\n      margin: theme.spacing(1),\n      overflow: 'auto',\n      width: '100%'\n    },\n    infoText: {\n      fontSize: 14,\n      fontWeight: 'bold',\n      color: '#FF0000',\n      marginLeft: 8\n    },\n    asteric: {\n      color: 'red'\n    }\n  };\n});\n\nvar Asset = function Asset(props) {\n  _s();\n\n  var _state$assets, _state$assets$meta, _state$assets2, _state$assets2$meta, _state$assets5, _state$assets5$images, _state$assets6, _state$assets6$images, _state$assets7, _state$assets7$images, _state$assets8, _state$assets8$images, _state$assets9, _state$assets9$images, _state$assets11, _state$assets11$image, _state$assets13, _state$assets13$image, _state$assets15, _state$assets15$icons, _state$assets17, _state$assets17$icons, _state$assets19, _state$assets19$icons, _state$assets21, _state$assets21$icons, _state$assets23, _state$assets23$icons, _state$assets25, _state$assets25$icons, _state$assets27, _state$assets27$meta, _state$assets28, _state$assets28$meta, _state$assets29, _state$assets29$meta, _state$assets30, _state$assets30$meta, _state$assets31, _state$assets31$meta, _state$assets32, _state$assets32$meta, _state$assets33, _state$assets33$meta, _state$assets34, _state$assets34$meta, _state$assets35, _state$assets35$meta, _state$assets36, _state$assets36$meta;\n\n  var state = props.state,\n      setToState = props.setToState,\n      updateState = props.updateState;\n  var classes = useStyles();\n\n  var _useContext = useContext(WebCmsGlobal),\n      GENERAL_SETTINGS = _useContext.GENERAL_SETTINGS,\n      token = _useContext.token;\n\n  var router = useRouter();\n  var companyId = router.query.companyID;\n  var authToken = token || router.query.authToken;\n\n  var _useState = useState([]),\n      languages = _useState[0],\n      setLanguages = _useState[1];\n\n  var _useState2 = useState(''),\n      selectedLanguage = _useState2[0],\n      setSelectedLanguage = _useState2[1];\n\n  var _useState3 = useState(state !== null && state !== void 0 && (_state$assets = state.assets) !== null && _state$assets !== void 0 && (_state$assets$meta = _state$assets.meta) !== null && _state$assets$meta !== void 0 && _state$assets$meta.imageQuality ? (state === null || state === void 0 ? void 0 : (_state$assets2 = state.assets) === null || _state$assets2 === void 0 ? void 0 : (_state$assets2$meta = _state$assets2.meta) === null || _state$assets2$meta === void 0 ? void 0 : _state$assets2$meta.imageQuality) * 100 : 0),\n      quality = _useState3[0],\n      setQuality = _useState3[1];\n\n  useEffect(function () {\n    ViewList({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.RALANG,\n      token: authToken,\n      params: {\n        allhotels: true,\n        hotelrefno: Number(companyId)\n      }\n    }).then(function (res) {\n      if (res.status === 200 && res.data && res.data.data.length > 0) {\n        var _state$assets3, _state$assets3$meta;\n\n        setLanguages(res.data.data);\n\n        if (!(state !== null && state !== void 0 && (_state$assets3 = state.assets) !== null && _state$assets3 !== void 0 && (_state$assets3$meta = _state$assets3.meta) !== null && _state$assets3$meta !== void 0 && _state$assets3$meta.lang)) {\n          var preSelectedLanguage = res.data.data[0];\n          setToState('pageBuilder', ['assets', 'meta', 'lang'], preSelectedLanguage.code.toLowerCase());\n          setSelectedLanguage(preSelectedLanguage);\n        } else {\n          res.data.data.some(function (lang) {\n            var _state$assets4, _state$assets4$meta;\n\n            if ((state === null || state === void 0 ? void 0 : (_state$assets4 = state.assets) === null || _state$assets4 === void 0 ? void 0 : (_state$assets4$meta = _state$assets4.meta) === null || _state$assets4$meta === void 0 ? void 0 : _state$assets4$meta.lang) === lang.code.toLowerCase()) {\n              setSelectedLanguage(lang);\n              return true;\n            }\n          });\n        }\n      }\n    });\n  }, []);\n\n  var onDropLogo = function onDropLogo(acceptedFile, logoType) {\n    var _acceptedFile$, _acceptedFile$2, _acceptedFile$3;\n\n    if (((_acceptedFile$ = acceptedFile[0]) === null || _acceptedFile$ === void 0 ? void 0 : _acceptedFile$.type.toLowerCase()) !== 'image/png' && ((_acceptedFile$2 = acceptedFile[0]) === null || _acceptedFile$2 === void 0 ? void 0 : _acceptedFile$2.type.toLowerCase()) !== 'image/jpg' && ((_acceptedFile$3 = acceptedFile[0]) === null || _acceptedFile$3 === void 0 ? void 0 : _acceptedFile$3.type.toLowerCase()) !== 'image/jpeg') {\n      toast.error('Invalid Format', {\n        position: toast.POSITION.TOP_RIGHT\n      });\n      return;\n    }\n\n    Upload({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      token: authToken,\n      params: {\n        code: logoType,\n        masterid: state.hotelMid,\n        orsactive: true,\n        hotelrefno: companyId,\n        allhotels: true\n      },\n      files: acceptedFile\n    }).then(function (r) {\n      if (r.status === 200 && r.data.data) {\n        var url = r.data.data.url.replace('/var/otello', '').replace('/public', '');\n        toast.success(UPLOAD_SUCCESS, {\n          position: toast.POSITION.TOP_RIGHT\n        });\n        var gid = r.data.data.gid;\n\n        if (logoType.toLowerCase() === 'logo') {\n          setToState('pageBuilder', ['assets', 'images', 'logo'], gid);\n          updateState('pageBuilder', 'logoUrl', url);\n        }\n\n        if (logoType.toLowerCase() === 'altlogo') {\n          setToState('pageBuilder', ['assets', 'images', 'altLogo'], gid);\n          updateState('pageBuilder', 'altLogoUrl', url);\n        }\n\n        if (logoType.toLowerCase() === 'logo-banner') {\n          setToState('pageBuilder', ['assets', 'images', 'logoBanner'], gid);\n          updateState('pageBuilder', 'logoBanner', url);\n        }\n\n        if (logoType.toLowerCase() === 'background') {\n          setToState('pageBuilder', ['assets', 'images', 'background'], gid);\n          updateState('pageBuilder', 'backgroundUrl', url);\n        }\n\n        if (logoType.toLowerCase() === 'powered-by') {\n          setToState('pageBuilder', ['assets', 'images', 'poweredBy'], gid);\n          updateState('pageBuilder', 'poweredByUrl', url);\n        }\n\n        if (logoType.toLowerCase() === 'thumbnail') {\n          setToState('pageBuilder', ['assets', 'images', 'thumbnail'], gid);\n          updateState('pageBuilder', 'thumbnailUrl', url);\n        }\n      } else {\n        var retErr = isErrorMsg(r);\n        toast.error(retErr.errorMsg, {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      }\n    });\n  }; //handle upload icons\n\n\n  var onDropIcon = function onDropIcon(icons, type) {\n    var _icons$, _icons$2, _icons$3;\n\n    if (((_icons$ = icons[0]) === null || _icons$ === void 0 ? void 0 : _icons$.type.toLowerCase()) !== 'image/png' && ((_icons$2 = icons[0]) === null || _icons$2 === void 0 ? void 0 : _icons$2.type.toLowerCase()) !== 'image/jpg' && ((_icons$3 = icons[0]) === null || _icons$3 === void 0 ? void 0 : _icons$3.type.toLowerCase()) !== 'image/jpeg') {\n      toast.error('Invalid Format', {\n        position: toast.POSITION.TOP_RIGHT\n      });\n      return;\n    }\n\n    Upload({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      token: authToken,\n      params: {\n        code: type,\n        masterid: state.hotelMid,\n        orsactive: true,\n        hotelrefno: companyId,\n        allhotels: true\n      },\n      files: icons\n    }).then(function (r) {\n      if (r.status === 200 && r.data.data) {\n        var gid = r.data.data.gid;\n        var url = r.data.data.url.replace('/var/otello', '').replace('/public', '');\n\n        if (type.toLowerCase() === 'favicon') {\n          setToState('pageBuilder', ['assets', 'images', 'favIcon'], gid);\n          updateState('pageBuilder', 'faviconUrl', url);\n        }\n\n        if (type.toLowerCase() === 'phone') {\n          setToState('pageBuilder', ['assets', 'icons', 'phone'], gid);\n          updateState('pageBuilder', 'phoneIconUrl', url);\n        }\n\n        if (type.toLowerCase() === 'email') {\n          setToState('pageBuilder', ['assets', 'icons', 'email'], gid);\n          updateState('pageBuilder', 'emailIconUrl', url);\n        }\n\n        if (type.toLowerCase() === 'facebook') {\n          setToState('pageBuilder', ['assets', 'icons', 'facebook'], gid);\n          updateState('pageBuilder', 'facebookIconUrl', url);\n        }\n\n        if (type.toLowerCase() === 'twitter') {\n          setToState('pageBuilder', ['assets', 'icons', 'twitter'], gid);\n          updateState('pageBuilder', 'twitterIconUrl', url);\n        }\n\n        if (type.toLowerCase() === 'instagram') {\n          setToState('pageBuilder', ['assets', 'icons', 'instagram'], gid);\n          updateState('pageBuilder', 'instagramIconUrl', url);\n        }\n\n        if (type.toLowerCase() === 'linkedin') {\n          setToState('pageBuilder', ['assets', 'icons', 'linkedin'], gid);\n          updateState('pageBuilder', 'linkedinIconUrl', url);\n        }\n\n        toast.success(UPLOAD_SUCCESS, {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      } else {\n        var retErr = isErrorMsg(r);\n        toast.error(retErr.errorMsg, {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      }\n    });\n  };\n\n  var handleTitleChange = function handleTitleChange(event) {\n    setToState('pageBuilder', ['assets', 'meta', 'title'], event.target.value);\n  };\n\n  var handleUrlChange = function handleUrlChange(event) {\n    setToState('pageBuilder', ['assets', 'meta', 'ibeurl'], event.target.value);\n  };\n\n  var handleLanguageChange = function handleLanguageChange(event) {\n    var lang = event.target.value;\n    setSelectedLanguage(lang);\n    setToState('pageBuilder', ['assets', 'meta', 'lang'], lang.code.toLowerCase());\n    updateState('pageBuilder', 'langId', lang === null || lang === void 0 ? void 0 : lang.id);\n  };\n\n  return __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 3,\n    justify: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 17\n    }\n  }, __jsx(Card, {\n    variant: 'outlined',\n    raised: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 21\n    }\n  }, __jsx(Grid, {\n    container: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 25\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 29\n    }\n  }, __jsx(Typography, {\n    component: 'span',\n    className: classes.infoText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 33\n    }\n  }, \"Only png, jpg, jpeg formats are allowed for all the pictures.\"))), __jsx(Grid, {\n    container: true,\n    justify: 'flex-start',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 25\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 29\n    }\n  }, __jsx(\"h5\", {\n    className: classes.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 33\n    }\n  }, \"Logo \", __jsx(\"span\", {\n    className: classes.asteric,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 70\n    }\n  }, \" * \"), \" \"), !(state !== null && state !== void 0 && (_state$assets5 = state.assets) !== null && _state$assets5 !== void 0 && (_state$assets5$images = _state$assets5.images) !== null && _state$assets5$images !== void 0 && _state$assets5$images.logo) ? __jsx(Paper, {\n    variant: 'outlined',\n    className: classes.logoBlock,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 37\n    }\n  }, __jsx(ReactDropzone, {\n    onDrop: function onDrop(e) {\n      return onDropLogo(e, 'LOGO');\n    },\n    acceptedFile: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 41\n    }\n  }, function (_ref) {\n    var getRootProps = _ref.getRootProps,\n        getInputProps = _ref.getInputProps;\n    return __jsx(\"section\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 49\n      }\n    }, __jsx(\"div\", _extends({}, getRootProps(), {\n      style: {\n        width: 572,\n        height: 360\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 53\n      }\n    }), __jsx(\"input\", _extends({}, getInputProps(), {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 57\n      }\n    })), __jsx(CloudUploadIcon, {\n      className: classes.icon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 57\n      }\n    })));\n  })) : __jsx(Paper, {\n    variant: 'outlined',\n    className: classes.previewBlock,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 37\n    }\n  }, __jsx(ReactDropzone, {\n    onDrop: function onDrop(e) {\n      return onDropLogo(e, 'LOGO');\n    },\n    acceptedFile: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 41\n    }\n  }, function (_ref2) {\n    var getRootProps = _ref2.getRootProps,\n        getInputProps = _ref2.getInputProps;\n    return __jsx(\"section\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 49\n      }\n    }, __jsx(\"div\", _extends({}, getRootProps(), {\n      style: {\n        cursor: 'pointer',\n        width: 572,\n        height: 360\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 53\n      }\n    }), __jsx(\"input\", _extends({}, getInputProps(), {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 57\n      }\n    })), __jsx(\"div\", {\n      className: classes.previewStyle,\n      style: {\n        backgroundImage: \"url(\".concat(GENERAL_SETTINGS.STATIC_URL + state.logoUrl, \")\"),\n        width: '100%',\n        height: '100%'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 57\n      }\n    })));\n  }))), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 29\n    }\n  }, __jsx(\"h5\", {\n    className: classes.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 33\n    }\n  }, \"Alternate Logo \"), !(state !== null && state !== void 0 && (_state$assets6 = state.assets) !== null && _state$assets6 !== void 0 && (_state$assets6$images = _state$assets6.images) !== null && _state$assets6$images !== void 0 && _state$assets6$images.altLogo) ? __jsx(Paper, {\n    variant: 'outlined',\n    className: classes.logoBlock,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 37\n    }\n  }, __jsx(ReactDropzone, {\n    onDrop: function onDrop(e) {\n      return onDropLogo(e, 'ALTLOGO');\n    },\n    acceptedFile: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 41\n    }\n  }, function (_ref3) {\n    var getRootProps = _ref3.getRootProps,\n        getInputProps = _ref3.getInputProps;\n    return __jsx(\"section\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 49\n      }\n    }, __jsx(\"div\", _extends({}, getRootProps(), {\n      style: {\n        width: 572,\n        height: 360\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 53\n      }\n    }), __jsx(\"input\", _extends({}, getInputProps(), {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 57\n      }\n    })), __jsx(CloudUploadIcon, {\n      className: classes.icon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 57\n      }\n    })));\n  })) : __jsx(Paper, {\n    variant: 'outlined',\n    className: classes.previewBlock,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 37\n    }\n  }, __jsx(ReactDropzone, {\n    onDrop: function onDrop(e) {\n      return onDropLogo(e, 'ALTLOGO');\n    },\n    acceptedFile: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 41\n    }\n  }, function (_ref4) {\n    var getRootProps = _ref4.getRootProps,\n        getInputProps = _ref4.getInputProps;\n    return __jsx(\"section\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 49\n      }\n    }, __jsx(\"div\", _extends({}, getRootProps(), {\n      style: {\n        cursor: 'pointer',\n        width: 550,\n        height: 360\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 53\n      }\n    }), __jsx(\"input\", _extends({}, getInputProps(), {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 57\n      }\n    })), __jsx(\"div\", {\n      className: classes.previewStyle,\n      style: {\n        backgroundImage: \"url(\".concat(GENERAL_SETTINGS.STATIC_URL + state.altLogoUrl, \")\")\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 57\n      }\n    })));\n  })))), __jsx(Grid, {\n    item: true,\n    container: true,\n    justify: 'flex-start',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 25\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 29\n    }\n  }, __jsx(\"h5\", {\n    className: classes.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 33\n    }\n  }, \"Background\"), !(state !== null && state !== void 0 && (_state$assets7 = state.assets) !== null && _state$assets7 !== void 0 && (_state$assets7$images = _state$assets7.images) !== null && _state$assets7$images !== void 0 && _state$assets7$images.background) ? __jsx(Paper, {\n    variant: 'outlined',\n    className: classes.logoBlock,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 37\n    }\n  }, __jsx(ReactDropzone, {\n    onDrop: function onDrop(e) {\n      return onDropLogo(e, 'BACKGROUND');\n    },\n    acceptedFile: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 41\n    }\n  }, function (_ref5) {\n    var getRootProps = _ref5.getRootProps,\n        getInputProps = _ref5.getInputProps;\n    return __jsx(\"section\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 49\n      }\n    }, __jsx(\"div\", _extends({}, getRootProps(), {\n      style: {\n        width: 572,\n        height: 360\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 53\n      }\n    }), __jsx(\"input\", _extends({}, getInputProps(), {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 57\n      }\n    })), __jsx(CloudUploadIcon, {\n      className: classes.icon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 57\n      }\n    })));\n  })) : __jsx(Paper, {\n    variant: 'outlined',\n    className: classes.previewBlock,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 37\n    }\n  }, __jsx(ReactDropzone, {\n    onDrop: function onDrop(e) {\n      return onDropLogo(e, 'BACKGROUND');\n    },\n    acceptedFile: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 41\n    }\n  }, function (_ref6) {\n    var getRootProps = _ref6.getRootProps,\n        getInputProps = _ref6.getInputProps;\n    return __jsx(\"section\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 49\n      }\n    }, __jsx(\"div\", _extends({}, getRootProps(), {\n      style: {\n        cursor: 'pointer',\n        width: 550,\n        height: 360\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 53\n      }\n    }), __jsx(\"input\", _extends({}, getInputProps(), {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 57\n      }\n    })), __jsx(\"div\", {\n      className: classes.previewStyle,\n      style: {\n        backgroundImage: \"url(\".concat(GENERAL_SETTINGS.STATIC_URL + state.backgroundUrl, \")\")\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 57\n      }\n    })));\n  }))), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 29\n    }\n  }, __jsx(\"h5\", {\n    className: classes.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 33\n    }\n  }, \" Logo Banner \"), !(state !== null && state !== void 0 && (_state$assets8 = state.assets) !== null && _state$assets8 !== void 0 && (_state$assets8$images = _state$assets8.images) !== null && _state$assets8$images !== void 0 && _state$assets8$images.logoBanner) ? __jsx(Paper, {\n    variant: 'outlined',\n    className: classes.logoBlock,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 37\n    }\n  }, __jsx(ReactDropzone, {\n    onDrop: function onDrop(e) {\n      return onDropLogo(e, 'LOGO-BANNER');\n    },\n    acceptedFile: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 41\n    }\n  }, function (_ref7) {\n    var getRootProps = _ref7.getRootProps,\n        getInputProps = _ref7.getInputProps;\n    return __jsx(\"section\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 49\n      }\n    }, __jsx(\"div\", _extends({}, getRootProps(), {\n      style: {\n        width: 572,\n        height: 360\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 53\n      }\n    }), __jsx(\"input\", _extends({}, getInputProps(), {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 57\n      }\n    })), __jsx(CloudUploadIcon, {\n      className: classes.icon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 57\n      }\n    })));\n  })) : __jsx(Paper, {\n    variant: 'outlined',\n    className: classes.previewBlock,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 37\n    }\n  }, __jsx(ReactDropzone, {\n    onDrop: function onDrop(e) {\n      return onDropLogo(e, 'LOGO-BANNER');\n    },\n    acceptedFile: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 41\n    }\n  }, function (_ref8) {\n    var getRootProps = _ref8.getRootProps,\n        getInputProps = _ref8.getInputProps;\n    return __jsx(\"section\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 49\n      }\n    }, __jsx(\"div\", _extends({}, getRootProps(), {\n      style: {\n        cursor: 'pointer',\n        width: 550,\n        height: 360\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 53\n      }\n    }), __jsx(\"input\", _extends({}, getInputProps(), {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 57\n      }\n    })), __jsx(\"div\", {\n      className: classes.previewStyle,\n      style: {\n        backgroundImage: \"url(\".concat(GENERAL_SETTINGS.STATIC_URL + state.logoBanner, \")\")\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 57\n      }\n    })));\n  })))), __jsx(Grid, {\n    item: true,\n    container: true,\n    justify: 'flex-start',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 25\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 29\n    }\n  }, __jsx(Typography, {\n    component: 'h6',\n    variant: 'h6',\n    className: classes.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 33\n    }\n  }, \"Powered By\"), __jsx(Paper, {\n    variant: 'outlined',\n    className: classes.favIcon,\n    style: {\n      backgroundColor: state !== null && state !== void 0 && (_state$assets9 = state.assets) !== null && _state$assets9 !== void 0 && (_state$assets9$images = _state$assets9.images) !== null && _state$assets9$images !== void 0 && _state$assets9$images.poweredBy ? '#fff' : 'lightgray'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 33\n    }\n  }, __jsx(ReactDropzone, {\n    onDrop: function onDrop(e) {\n      return onDropLogo(e, 'POWERED-BY');\n    },\n    acceptedFile: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 37\n    }\n  }, function (_ref9) {\n    var _state$assets10, _state$assets10$image;\n\n    var getRootProps = _ref9.getRootProps,\n        getInputProps = _ref9.getInputProps;\n    return __jsx(\"section\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 45\n      }\n    }, __jsx(\"div\", _extends({}, getRootProps(), {\n      style: {\n        width: 150,\n        height: 100\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 49\n      }\n    }), __jsx(\"input\", _extends({}, getInputProps(), {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 53\n      }\n    })), state !== null && state !== void 0 && (_state$assets10 = state.assets) !== null && _state$assets10 !== void 0 && (_state$assets10$image = _state$assets10.images) !== null && _state$assets10$image !== void 0 && _state$assets10$image.poweredBy ? __jsx(\"div\", {\n      style: {\n        backgroundImage: \"url(\".concat(GENERAL_SETTINGS.STATIC_URL + state.poweredByUrl, \")\"),\n        backgroundSize: 'contain',\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center',\n        width: '100%',\n        height: '100%',\n        backgroundColor: '#fff'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 57\n      }\n    }) : __jsx(CloudUploadIcon, {\n      className: classes.icon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 57\n      }\n    })));\n  }))), __jsx(Grid, {\n    item: true,\n    xs: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 29\n    }\n  }, __jsx(Typography, {\n    component: 'h6',\n    variant: 'h6',\n    className: classes.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 33\n    }\n  }, \"Favicon\"), __jsx(Paper, {\n    variant: 'outlined',\n    className: classes.favIcon,\n    style: {\n      backgroundColor: state !== null && state !== void 0 && (_state$assets11 = state.assets) !== null && _state$assets11 !== void 0 && (_state$assets11$image = _state$assets11.images) !== null && _state$assets11$image !== void 0 && _state$assets11$image.favIcon ? '#fff' : 'lightgray'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 33\n    }\n  }, __jsx(ReactDropzone, {\n    onDrop: function onDrop(e) {\n      return onDropIcon(e, 'FAVICON');\n    },\n    acceptedFile: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 37\n    }\n  }, function (_ref10) {\n    var _state$assets12, _state$assets12$image;\n\n    var getRootProps = _ref10.getRootProps,\n        getInputProps = _ref10.getInputProps;\n    return __jsx(\"section\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 45\n      }\n    }, __jsx(\"div\", _extends({}, getRootProps(), {\n      style: {\n        width: 200,\n        height: 100\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 49\n      }\n    }), __jsx(\"input\", _extends({}, getInputProps(), {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 53\n      }\n    })), state !== null && state !== void 0 && (_state$assets12 = state.assets) !== null && _state$assets12 !== void 0 && (_state$assets12$image = _state$assets12.images) !== null && _state$assets12$image !== void 0 && _state$assets12$image.favIcon ? __jsx(\"div\", {\n      style: {\n        backgroundImage: \"url(\".concat(GENERAL_SETTINGS.STATIC_URL + state.faviconUrl, \")\"),\n        backgroundSize: 'contain',\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center',\n        width: '100%',\n        height: '100%',\n        backgroundColor: '#fff'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 57\n      }\n    }) : __jsx(CloudUploadIcon, {\n      className: classes.icon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 57\n      }\n    })));\n  }))), __jsx(Grid, {\n    item: true,\n    xs: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 29\n    }\n  }, __jsx(Typography, {\n    component: 'h6',\n    variant: 'h6',\n    className: classes.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 33\n    }\n  }, \"Thumbnail\"), __jsx(Paper, {\n    variant: 'outlined',\n    className: classes.favIcon,\n    style: {\n      backgroundColor: state !== null && state !== void 0 && (_state$assets13 = state.assets) !== null && _state$assets13 !== void 0 && (_state$assets13$image = _state$assets13.images) !== null && _state$assets13$image !== void 0 && _state$assets13$image.thumbnail ? '#fff' : 'lightgray'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 33\n    }\n  }, __jsx(ReactDropzone, {\n    onDrop: function onDrop(e) {\n      return onDropLogo(e, 'THUMBNAIL');\n    },\n    acceptedFile: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 37\n    }\n  }, function (_ref11) {\n    var _state$assets14, _state$assets14$image;\n\n    var getRootProps = _ref11.getRootProps,\n        getInputProps = _ref11.getInputProps;\n    return __jsx(\"section\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 45\n      }\n    }, __jsx(\"div\", _extends({}, getRootProps(), {\n      style: {\n        width: 200,\n        height: 100\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 49\n      }\n    }), __jsx(\"input\", _extends({}, getInputProps(), {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 53\n      }\n    })), state !== null && state !== void 0 && (_state$assets14 = state.assets) !== null && _state$assets14 !== void 0 && (_state$assets14$image = _state$assets14.images) !== null && _state$assets14$image !== void 0 && _state$assets14$image.thumbnail ? __jsx(\"div\", {\n      style: {\n        backgroundImage: \"url(\".concat(GENERAL_SETTINGS.STATIC_URL + state.thumbnailUrl, \")\"),\n        backgroundSize: 'contain',\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center',\n        width: '100%',\n        height: '100%',\n        backgroundColor: '#fff'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 57\n      }\n    }) : __jsx(CloudUploadIcon, {\n      className: classes.icon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 57\n      }\n    })));\n  }))))))), __jsx(Grid, {\n    container: true,\n    spacing: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 17\n    }\n  }, __jsx(Card, {\n    variant: 'outlined',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 21\n    }\n  }, __jsx(Grid, {\n    container: true,\n    justify: 'flex-start',\n    spacing: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 601,\n      columnNumber: 25\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 602,\n      columnNumber: 25\n    }\n  }, __jsx(Typography, {\n    component: 'h6',\n    variant: 'h6',\n    className: classes.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 603,\n      columnNumber: 33\n    }\n  }, \"Phone\"), __jsx(Paper, {\n    variant: 'outlined',\n    className: classes.favIcon,\n    style: {\n      backgroundColor: state !== null && state !== void 0 && (_state$assets15 = state.assets) !== null && _state$assets15 !== void 0 && (_state$assets15$icons = _state$assets15.icons) !== null && _state$assets15$icons !== void 0 && _state$assets15$icons.phone ? '#fff' : 'lightgray'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 33\n    }\n  }, __jsx(ReactDropzone, {\n    onDrop: function onDrop(e) {\n      return onDropIcon(e, 'PHONE');\n    },\n    acceptedFile: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 611,\n      columnNumber: 37\n    }\n  }, function (_ref12) {\n    var _state$assets16, _state$assets16$icons;\n\n    var getRootProps = _ref12.getRootProps,\n        getInputProps = _ref12.getInputProps;\n    return __jsx(\"section\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 45\n      }\n    }, __jsx(\"div\", _extends({}, getRootProps(), {\n      style: {\n        width: 150,\n        height: 100\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 49\n      }\n    }), __jsx(\"input\", _extends({}, getInputProps(), {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 53\n      }\n    })), state !== null && state !== void 0 && (_state$assets16 = state.assets) !== null && _state$assets16 !== void 0 && (_state$assets16$icons = _state$assets16.icons) !== null && _state$assets16$icons !== void 0 && _state$assets16$icons.phone ? __jsx(\"div\", {\n      style: {\n        backgroundImage: \"url(\".concat(GENERAL_SETTINGS.STATIC_URL + state.phoneIconUrl, \")\"),\n        backgroundSize: 'contain',\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center',\n        width: '100%',\n        height: '100%',\n        backgroundColor: '#fff'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 57\n      }\n    }) : __jsx(CloudUploadIcon, {\n      className: classes.icon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 57\n      }\n    })));\n  }))), __jsx(Grid, {\n    item: true,\n    xs: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 639,\n      columnNumber: 29\n    }\n  }, __jsx(Typography, {\n    component: 'h6',\n    variant: 'h6',\n    className: classes.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 640,\n      columnNumber: 33\n    }\n  }, \"Email\"), __jsx(Paper, {\n    variant: 'outlined',\n    className: classes.favIcon,\n    style: {\n      backgroundColor: state !== null && state !== void 0 && (_state$assets17 = state.assets) !== null && _state$assets17 !== void 0 && (_state$assets17$icons = _state$assets17.icons) !== null && _state$assets17$icons !== void 0 && _state$assets17$icons.email ? '#fff' : 'lightgray'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 33\n    }\n  }, __jsx(ReactDropzone, {\n    onDrop: function onDrop(e) {\n      return onDropIcon(e, 'EMAIL');\n    },\n    acceptedFile: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 648,\n      columnNumber: 37\n    }\n  }, function (_ref13) {\n    var _state$assets18, _state$assets18$icons;\n\n    var getRootProps = _ref13.getRootProps,\n        getInputProps = _ref13.getInputProps;\n    return __jsx(\"section\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 650,\n        columnNumber: 45\n      }\n    }, __jsx(\"div\", _extends({}, getRootProps(), {\n      style: {\n        width: 150,\n        height: 100\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 651,\n        columnNumber: 49\n      }\n    }), __jsx(\"input\", _extends({}, getInputProps(), {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 652,\n        columnNumber: 53\n      }\n    })), state !== null && state !== void 0 && (_state$assets18 = state.assets) !== null && _state$assets18 !== void 0 && (_state$assets18$icons = _state$assets18.icons) !== null && _state$assets18$icons !== void 0 && _state$assets18$icons.email ? __jsx(\"div\", {\n      style: {\n        backgroundImage: \"url(\".concat(GENERAL_SETTINGS.STATIC_URL + state.emailIconUrl, \")\"),\n        backgroundSize: 'contain',\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center',\n        width: '100%',\n        height: '100%',\n        backgroundColor: '#fff'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 654,\n        columnNumber: 57\n      }\n    }) : __jsx(CloudUploadIcon, {\n      className: classes.icon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 668,\n        columnNumber: 57\n      }\n    })));\n  }))), __jsx(Grid, {\n    item: true,\n    xs: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 676,\n      columnNumber: 29\n    }\n  }, __jsx(Typography, {\n    component: 'h6',\n    variant: 'h6',\n    className: classes.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 677,\n      columnNumber: 33\n    }\n  }, \"Facebook\"), __jsx(Paper, {\n    variant: 'outlined',\n    className: classes.favIcon,\n    style: {\n      backgroundColor: state !== null && state !== void 0 && (_state$assets19 = state.assets) !== null && _state$assets19 !== void 0 && (_state$assets19$icons = _state$assets19.icons) !== null && _state$assets19$icons !== void 0 && _state$assets19$icons.facebook ? '#fff' : 'lightgray'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 680,\n      columnNumber: 33\n    }\n  }, __jsx(ReactDropzone, {\n    onDrop: function onDrop(e) {\n      return onDropIcon(e, 'FACEBOOK');\n    },\n    acceptedFile: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 685,\n      columnNumber: 37\n    }\n  }, function (_ref14) {\n    var _state$assets20, _state$assets20$icons;\n\n    var getRootProps = _ref14.getRootProps,\n        getInputProps = _ref14.getInputProps;\n    return __jsx(\"section\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 687,\n        columnNumber: 45\n      }\n    }, __jsx(\"div\", _extends({}, getRootProps(), {\n      style: {\n        width: 150,\n        height: 100\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 688,\n        columnNumber: 49\n      }\n    }), __jsx(\"input\", _extends({}, getInputProps(), {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 689,\n        columnNumber: 53\n      }\n    })), state !== null && state !== void 0 && (_state$assets20 = state.assets) !== null && _state$assets20 !== void 0 && (_state$assets20$icons = _state$assets20.icons) !== null && _state$assets20$icons !== void 0 && _state$assets20$icons.facebook ? __jsx(\"div\", {\n      style: {\n        backgroundImage: \"url(\".concat(GENERAL_SETTINGS.STATIC_URL + state.facebookIconUrl, \")\"),\n        backgroundSize: 'contain',\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center',\n        width: '100%',\n        height: '100%',\n        backgroundColor: '#fff'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 691,\n        columnNumber: 57\n      }\n    }) : __jsx(CloudUploadIcon, {\n      className: classes.icon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 705,\n        columnNumber: 57\n      }\n    })));\n  })))), __jsx(Grid, {\n    container: true,\n    justify: 'flex-start',\n    spacing: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 714,\n      columnNumber: 25\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 715,\n      columnNumber: 25\n    }\n  }, __jsx(Typography, {\n    component: 'h6',\n    variant: 'h6',\n    className: classes.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 716,\n      columnNumber: 33\n    }\n  }, \"Twitter\"), __jsx(Paper, {\n    variant: 'outlined',\n    className: classes.favIcon,\n    style: {\n      backgroundColor: state !== null && state !== void 0 && (_state$assets21 = state.assets) !== null && _state$assets21 !== void 0 && (_state$assets21$icons = _state$assets21.icons) !== null && _state$assets21$icons !== void 0 && _state$assets21$icons.twitter ? '#fff' : 'lightgray'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 719,\n      columnNumber: 33\n    }\n  }, __jsx(ReactDropzone, {\n    onDrop: function onDrop(e) {\n      return onDropIcon(e, 'TWITTER');\n    },\n    acceptedFile: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 724,\n      columnNumber: 37\n    }\n  }, function (_ref15) {\n    var _state$assets22, _state$assets22$icons;\n\n    var getRootProps = _ref15.getRootProps,\n        getInputProps = _ref15.getInputProps;\n    return __jsx(\"section\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 726,\n        columnNumber: 45\n      }\n    }, __jsx(\"div\", _extends({}, getRootProps(), {\n      style: {\n        width: 150,\n        height: 100\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 727,\n        columnNumber: 49\n      }\n    }), __jsx(\"input\", _extends({}, getInputProps(), {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 728,\n        columnNumber: 53\n      }\n    })), state !== null && state !== void 0 && (_state$assets22 = state.assets) !== null && _state$assets22 !== void 0 && (_state$assets22$icons = _state$assets22.icons) !== null && _state$assets22$icons !== void 0 && _state$assets22$icons.twitter ? __jsx(\"div\", {\n      style: {\n        backgroundImage: \"url(\".concat(GENERAL_SETTINGS.STATIC_URL + state.twitterIconUrl, \")\"),\n        backgroundSize: 'contain',\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center',\n        width: '100%',\n        height: '100%',\n        backgroundColor: '#fff'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 730,\n        columnNumber: 57\n      }\n    }) : __jsx(CloudUploadIcon, {\n      className: classes.icon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 744,\n        columnNumber: 57\n      }\n    })));\n  }))), __jsx(Grid, {\n    item: true,\n    xs: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 752,\n      columnNumber: 29\n    }\n  }, __jsx(Typography, {\n    component: 'h6',\n    variant: 'h6',\n    className: classes.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 753,\n      columnNumber: 33\n    }\n  }, \"Instagram\"), __jsx(Paper, {\n    variant: 'outlined',\n    className: classes.favIcon,\n    style: {\n      backgroundColor: state !== null && state !== void 0 && (_state$assets23 = state.assets) !== null && _state$assets23 !== void 0 && (_state$assets23$icons = _state$assets23.icons) !== null && _state$assets23$icons !== void 0 && _state$assets23$icons.instagram ? '#fff' : 'lightgray'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 756,\n      columnNumber: 33\n    }\n  }, __jsx(ReactDropzone, {\n    onDrop: function onDrop(e) {\n      return onDropIcon(e, 'INSTAGRAM');\n    },\n    acceptedFile: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 761,\n      columnNumber: 37\n    }\n  }, function (_ref16) {\n    var _state$assets24, _state$assets24$icons;\n\n    var getRootProps = _ref16.getRootProps,\n        getInputProps = _ref16.getInputProps;\n    return __jsx(\"section\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 763,\n        columnNumber: 45\n      }\n    }, __jsx(\"div\", _extends({}, getRootProps(), {\n      style: {\n        width: 150,\n        height: 100\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 764,\n        columnNumber: 49\n      }\n    }), __jsx(\"input\", _extends({}, getInputProps(), {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 765,\n        columnNumber: 53\n      }\n    })), state !== null && state !== void 0 && (_state$assets24 = state.assets) !== null && _state$assets24 !== void 0 && (_state$assets24$icons = _state$assets24.icons) !== null && _state$assets24$icons !== void 0 && _state$assets24$icons.instagram ? __jsx(\"div\", {\n      style: {\n        backgroundImage: \"url(\".concat(GENERAL_SETTINGS.STATIC_URL + state.instagramIconUrl, \")\"),\n        backgroundSize: 'contain',\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center',\n        width: '100%',\n        height: '100%',\n        backgroundColor: '#fff'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 767,\n        columnNumber: 57\n      }\n    }) : __jsx(CloudUploadIcon, {\n      className: classes.icon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 781,\n        columnNumber: 57\n      }\n    })));\n  }))), __jsx(Grid, {\n    item: true,\n    xs: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 789,\n      columnNumber: 29\n    }\n  }, __jsx(Typography, {\n    component: 'h6',\n    variant: 'h6',\n    className: classes.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 790,\n      columnNumber: 33\n    }\n  }, \"LinkedIn\"), __jsx(Paper, {\n    variant: 'outlined',\n    className: classes.favIcon,\n    style: {\n      backgroundColor: state !== null && state !== void 0 && (_state$assets25 = state.assets) !== null && _state$assets25 !== void 0 && (_state$assets25$icons = _state$assets25.icons) !== null && _state$assets25$icons !== void 0 && _state$assets25$icons.linkedin ? '#fff' : 'lightgray'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 793,\n      columnNumber: 33\n    }\n  }, __jsx(ReactDropzone, {\n    onDrop: function onDrop(e) {\n      return onDropIcon(e, 'LINKEDIN');\n    },\n    acceptedFile: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 798,\n      columnNumber: 37\n    }\n  }, function (_ref17) {\n    var _state$assets26, _state$assets26$icons;\n\n    var getRootProps = _ref17.getRootProps,\n        getInputProps = _ref17.getInputProps;\n    return __jsx(\"section\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 800,\n        columnNumber: 45\n      }\n    }, __jsx(\"div\", _extends({}, getRootProps(), {\n      style: {\n        width: 150,\n        height: 100\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 801,\n        columnNumber: 49\n      }\n    }), __jsx(\"input\", _extends({}, getInputProps(), {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 802,\n        columnNumber: 53\n      }\n    })), state !== null && state !== void 0 && (_state$assets26 = state.assets) !== null && _state$assets26 !== void 0 && (_state$assets26$icons = _state$assets26.icons) !== null && _state$assets26$icons !== void 0 && _state$assets26$icons.linkedin ? __jsx(\"div\", {\n      style: {\n        backgroundImage: \"url(\".concat(GENERAL_SETTINGS.STATIC_URL + state.linkedinIconUrl, \")\"),\n        backgroundSize: 'contain',\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center',\n        width: '100%',\n        height: '100%',\n        backgroundColor: '#fff'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 804,\n        columnNumber: 57\n      }\n    }) : __jsx(CloudUploadIcon, {\n      className: classes.icon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 818,\n        columnNumber: 57\n      }\n    })));\n  }))))))), __jsx(Grid, {\n    container: true,\n    spacing: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 830,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 831,\n      columnNumber: 17\n    }\n  }, __jsx(Card, {\n    variant: 'outlined',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 832,\n      columnNumber: 21\n    }\n  }, __jsx(Grid, {\n    container: true,\n    justify: 'flex-start',\n    spacing: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 833,\n      columnNumber: 25\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 834,\n      columnNumber: 29\n    }\n  }, __jsx(Typography, {\n    component: 'span',\n    className: classes.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 835,\n      columnNumber: 33\n    }\n  }, \"Google Tag Manager\"), __jsx(Typography, {\n    component: 'div',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 838,\n      columnNumber: 33\n    }\n  }, __jsx(FormControl, {\n    fullWidth: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 839,\n      columnNumber: 37\n    }\n  }, __jsx(TextField, {\n    className: classes.formControl,\n    size: 'small',\n    fullWidth: true,\n    variant: 'outlined',\n    value: state === null || state === void 0 ? void 0 : (_state$assets27 = state.assets) === null || _state$assets27 === void 0 ? void 0 : (_state$assets27$meta = _state$assets27.meta) === null || _state$assets27$meta === void 0 ? void 0 : _state$assets27$meta.googleTag,\n    onChange: function onChange(e) {\n      return setToState('pageBuilder', ['assets', 'meta', 'googleTag'], e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 840,\n      columnNumber: 41\n    }\n  })))), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 857,\n      columnNumber: 29\n    }\n  }, __jsx(Typography, {\n    component: 'span',\n    className: classes.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 858,\n      columnNumber: 33\n    }\n  }, \"Google Analytic Tag\"), __jsx(Typography, {\n    component: 'div',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 861,\n      columnNumber: 33\n    }\n  }, __jsx(TextField, {\n    size: 'small',\n    fullWidth: true,\n    className: classes.formControl,\n    variant: 'outlined',\n    value: state === null || state === void 0 ? void 0 : (_state$assets28 = state.assets) === null || _state$assets28 === void 0 ? void 0 : (_state$assets28$meta = _state$assets28.meta) === null || _state$assets28$meta === void 0 ? void 0 : _state$assets28$meta.googleAnalyticsTag,\n    onChange: function onChange(e) {\n      return setToState('pageBuilder', ['assets', 'meta', 'googleAnalyticsTag'], e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 862,\n      columnNumber: 37\n    }\n  })))), __jsx(Grid, {\n    container: true,\n    justify: 'flex-start',\n    spacing: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 879,\n      columnNumber: 25\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 880,\n      columnNumber: 29\n    }\n  }, __jsx(Typography, {\n    component: 'span',\n    className: classes.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 881,\n      columnNumber: 33\n    }\n  }, \"Chat Box\"), __jsx(TextareaAutosize, {\n    rows: 5,\n    rowsMax: 5,\n    value: state === null || state === void 0 ? void 0 : (_state$assets29 = state.assets) === null || _state$assets29 === void 0 ? void 0 : (_state$assets29$meta = _state$assets29.meta) === null || _state$assets29$meta === void 0 ? void 0 : _state$assets29$meta.chatBox,\n    className: classes.textArea,\n    onChange: function onChange(e) {\n      return setToState('pageBuilder', ['assets', 'meta', 'chatBox'], e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 884,\n      columnNumber: 33\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 898,\n      columnNumber: 29\n    }\n  }, __jsx(Typography, {\n    component: 'div',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 899,\n      columnNumber: 33\n    }\n  }, __jsx(Typography, {\n    component: 'span',\n    className: classes.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 900,\n      columnNumber: 37\n    }\n  }, \"IBE URL\"), __jsx(Typography, {\n    component: 'div',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 903,\n      columnNumber: 37\n    }\n  }, __jsx(FormControl, {\n    fullWidth: true,\n    style: {\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 904,\n      columnNumber: 41\n    }\n  }, __jsx(TextField, {\n    placeholder: 'Enter URL here ..',\n    variant: 'outlined',\n    className: classes.formControl,\n    value: state === null || state === void 0 ? void 0 : (_state$assets30 = state.assets) === null || _state$assets30 === void 0 ? void 0 : (_state$assets30$meta = _state$assets30.meta) === null || _state$assets30$meta === void 0 ? void 0 : _state$assets30$meta.ibeurl,\n    onChange: handleUrlChange,\n    size: 'small',\n    error: state !== null && state !== void 0 && (_state$assets31 = state.assets) !== null && _state$assets31 !== void 0 && (_state$assets31$meta = _state$assets31.meta) !== null && _state$assets31$meta !== void 0 && _state$assets31$meta.ibeurl ? validator.isURL(state === null || state === void 0 ? void 0 : (_state$assets32 = state.assets) === null || _state$assets32 === void 0 ? void 0 : (_state$assets32$meta = _state$assets32.meta) === null || _state$assets32$meta === void 0 ? void 0 : _state$assets32$meta.ibeurl) === false ? true : false : false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 905,\n      columnNumber: 45\n    }\n  })))), __jsx(Typography, {\n    component: 'div',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 923,\n      columnNumber: 33\n    }\n  }, __jsx(Typography, {\n    component: 'span',\n    className: classes.heading,\n    style: {\n      marginTop: 16\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 924,\n      columnNumber: 37\n    }\n  }, \"Facebook Verification Code\"), __jsx(Typography, {\n    component: 'div',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 927,\n      columnNumber: 37\n    }\n  }, __jsx(FormControl, {\n    fullWidth: true,\n    style: {\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 928,\n      columnNumber: 41\n    }\n  }, __jsx(TextField, {\n    placeholder: 'Enter URL here ..',\n    variant: 'outlined',\n    className: classes.formControl,\n    value: state === null || state === void 0 ? void 0 : (_state$assets33 = state.assets) === null || _state$assets33 === void 0 ? void 0 : (_state$assets33$meta = _state$assets33.meta) === null || _state$assets33$meta === void 0 ? void 0 : _state$assets33$meta.ibeurl,\n    onChange: handleUrlChange,\n    size: 'small',\n    error: state !== null && state !== void 0 && (_state$assets34 = state.assets) !== null && _state$assets34 !== void 0 && (_state$assets34$meta = _state$assets34.meta) !== null && _state$assets34$meta !== void 0 && _state$assets34$meta.ibeurl ? validator.isURL(state === null || state === void 0 ? void 0 : (_state$assets35 = state.assets) === null || _state$assets35 === void 0 ? void 0 : (_state$assets35$meta = _state$assets35.meta) === null || _state$assets35$meta === void 0 ? void 0 : _state$assets35$meta.ibeurl) === false ? true : false : false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 929,\n      columnNumber: 45\n    }\n  }))))))))), __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 952,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 953,\n      columnNumber: 17\n    }\n  }, __jsx(Card, {\n    variant: 'outlined',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 954,\n      columnNumber: 21\n    }\n  }, __jsx(Grid, {\n    container: true,\n    justify: 'flex-start',\n    alignItems: 'center',\n    spacing: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 955,\n      columnNumber: 25\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 956,\n      columnNumber: 29\n    }\n  }, __jsx(Typography, {\n    component: 'span',\n    className: classes.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 957,\n      columnNumber: 33\n    }\n  }, \"Image Quality\"), __jsx(Typography, {\n    component: 'div',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 960,\n      columnNumber: 33\n    }\n  }, __jsx(PercentageSlider, {\n    marks: PERCENTAGE_VALUES,\n    value: quality,\n    onChange: function onChange(e, value) {\n      if (value >= 10 && value <= 100 && value % 10 === 0) {\n        setToState('pageBuilder', ['assets', 'meta', 'imageQuality'], value / 100);\n        setQuality(value);\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 961,\n      columnNumber: 37\n    }\n  }))), __jsx(Grid, {\n    item: true,\n    xs: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 977,\n      columnNumber: 29\n    }\n  }, __jsx(Typography, {\n    component: 'span',\n    className: classes.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 978,\n      columnNumber: 33\n    }\n  }, \"Language\"), __jsx(Typography, {\n    component: 'div',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 981,\n      columnNumber: 33\n    }\n  }, __jsx(FormControl, {\n    variant: \"outlined\",\n    size: 'small',\n    fullWidth: true,\n    className: classes.formControl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 982,\n      columnNumber: 37\n    }\n  }, __jsx(Select, {\n    style: {\n      marginLeft: 4\n    },\n    value: selectedLanguage,\n    onChange: handleLanguageChange,\n    label: \"Language\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 988,\n      columnNumber: 41\n    }\n  }, languages.map(function (lang, index) {\n    return __jsx(MenuItem, {\n      value: lang,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 996,\n        columnNumber: 53\n      }\n    }, ' ', lang.description, ' ');\n  }))))), __jsx(Grid, {\n    item: true,\n    xs: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1006,\n      columnNumber: 29\n    }\n  }, __jsx(Typography, {\n    component: 'span',\n    className: classes.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1007,\n      columnNumber: 33\n    }\n  }, \"Title \", __jsx(\"span\", {\n    className: classes.asteric,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1008,\n      columnNumber: 43\n    }\n  }, \" * \")), __jsx(Typography, {\n    component: 'div',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1010,\n      columnNumber: 33\n    }\n  }, __jsx(TextField, {\n    placeholder: 'Enter your Title here ...',\n    variant: 'outlined',\n    value: state === null || state === void 0 ? void 0 : (_state$assets36 = state.assets) === null || _state$assets36 === void 0 ? void 0 : (_state$assets36$meta = _state$assets36.meta) === null || _state$assets36$meta === void 0 ? void 0 : _state$assets36$meta.title,\n    onChange: handleTitleChange,\n    size: 'small',\n    fullWidth: true,\n    style: {\n      paddingRight: 4\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1011,\n      columnNumber: 37\n    }\n  }))))))));\n};\n\n_s(Asset, \"SMZtqvoFoIyp6qbf6QSvje3nNIw=\", false, function () {\n  return [useStyles, useRouter];\n});\n\n_c = Asset;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    state: state.formReducer.pageBuilder\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setToState: function setToState(stateType, stateName, value) {\n      return dispatch(_setToState(stateType, stateName, value));\n    },\n    updateState: function updateState(stateType, stateName, value) {\n      return dispatch(_updateState(stateType, stateName, value));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Asset);\n\nvar _c;\n\n$RefreshReg$(_c, \"Asset\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/page-builder/PageBuilderSteps/steps/assets/Asset.js"],"names":["React","useContext","useState","useEffect","makeStyles","Container","Grid","Paper","Card","CloudUploadIcon","Typography","TextField","TextareaAutosize","ReactDropzone","connect","Upload","ViewList","WebCmsGlobal","useRouter","COLORS","PERCENTAGE_VALUES","UPLOAD_SUCCESS","setToState","updateState","isErrorMsg","OREST_ENDPOINT","Select","MenuItem","FormControl","toast","validator","PercentageSlider","useStyles","theme","root","flexGrow","block","position","width","height","border","borderColor","borderStyle","borderRadius","previewStyle","backgroundSize","backgroundRepeat","backgroundPosition","actionButtons","display","justifyContent","marginTop","spacing","actionButton","marginLeft","icon","cursor","opacity","logoBlock","alignItems","backgroundColor","margin","favIcon","previewBlock","card","heading","color","secondary","fontWeight","formControl","textArea","overflow","infoText","fontSize","asteric","Asset","props","state","classes","GENERAL_SETTINGS","token","router","companyId","query","companyID","authToken","languages","setLanguages","selectedLanguage","setSelectedLanguage","assets","meta","imageQuality","quality","setQuality","apiUrl","OREST_URL","endpoint","RALANG","params","allhotels","hotelrefno","Number","then","res","status","data","length","lang","preSelectedLanguage","code","toLowerCase","some","onDropLogo","acceptedFile","logoType","type","error","POSITION","TOP_RIGHT","masterid","hotelMid","orsactive","files","r","url","replace","success","gid","retErr","errorMsg","onDropIcon","icons","handleTitleChange","event","target","value","handleUrlChange","handleLanguageChange","id","images","logo","e","getRootProps","getInputProps","backgroundImage","STATIC_URL","logoUrl","altLogo","altLogoUrl","background","backgroundUrl","logoBanner","poweredBy","poweredByUrl","faviconUrl","thumbnail","thumbnailUrl","phone","phoneIconUrl","email","emailIconUrl","facebook","facebookIconUrl","twitter","twitterIconUrl","instagram","instagramIconUrl","linkedin","linkedinIconUrl","googleTag","googleAnalyticsTag","chatBox","ibeurl","isURL","map","index","description","title","paddingRight","mapStateToProps","formReducer","pageBuilder","mapDispatchToProps","dispatch","stateType","stateName"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD,C,CACA;;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B,C,CACA;;AACA,OAAOC,aAAP,MAA0B,gBAA1B,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,eAAjC;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,SAASC,MAAT,EAAiBC,iBAAjB,EAAoCC,cAApC,QAA0D,iBAA1D;AACA,SAASC,UAAU,IAAVA,WAAT,EAAqBC,WAAW,IAAXA,YAArB,QAAwC,8BAAxC;AACA,SAASC,UAAT,EAAqBC,cAArB,QAA2C,sCAA3C;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,SAASC,gBAAT,QAAiC,6BAAjC;AAEA,IAAMC,SAAS,GAAG5B,UAAU,CAAC,UAAC6B,KAAD;AAAA,SAAY;AACrCC,IAAAA,IAAI,EAAE;AACFC,MAAAA,QAAQ,EAAE;AADR,KAD+B;AAIrCC,IAAAA,KAAK,EAAE;AACHC,MAAAA,QAAQ,EAAE,UADP;AAEHC,MAAAA,KAAK,EAAE,GAFJ;AAGHC,MAAAA,MAAM,EAAE,GAHL;AAIHC,MAAAA,MAAM,EAAE,CAJL;AAKHC,MAAAA,WAAW,EAAE,QALV;AAMHC,MAAAA,WAAW,EAAE,QANV;AAOHC,MAAAA,YAAY,EAAE;AAPX,KAJ8B;AAarCC,IAAAA,YAAY,EAAE;AACVC,MAAAA,cAAc,EAAE,SADN;AAEVC,MAAAA,gBAAgB,EAAE,WAFR;AAGVC,MAAAA,kBAAkB,EAAE,SAHV;AAIVT,MAAAA,KAAK,EAAE,MAJG;AAKVC,MAAAA,MAAM,EAAE;AALE,KAbuB;AAoBrCS,IAAAA,aAAa,EAAE;AACXC,MAAAA,OAAO,EAAE,MADE;AAEXC,MAAAA,cAAc,EAAE,YAFL;AAGXC,MAAAA,SAAS,EAAElB,KAAK,CAACmB,OAAN,CAAc,CAAd;AAHA,KApBsB;AAyBrCC,IAAAA,YAAY,EAAE;AACVC,MAAAA,UAAU,EAAErB,KAAK,CAACmB,OAAN,CAAc,CAAd,CADF;AAEVT,MAAAA,YAAY,EAAE;AAFJ,KAzBuB;AA6BrCY,IAAAA,IAAI,EAAE;AACFC,MAAAA,MAAM,EAAE,SADN;AAEFlB,MAAAA,KAAK,EAAE,MAFL;AAGFC,MAAAA,MAAM,EAAE,MAHN;AAIFkB,MAAAA,OAAO,EAAE;AAJP,KA7B+B;AAmCrCC,IAAAA,SAAS,EAAE;AACPT,MAAAA,OAAO,EAAE,MADF;AAEPU,MAAAA,UAAU,EAAE,QAFL;AAGPC,MAAAA,eAAe,EAAE,WAHV;AAIPC,MAAAA,MAAM,EAAE5B,KAAK,CAACmB,OAAN,CAAc,CAAd;AAJD,KAnC0B;AAyCrCU,IAAAA,OAAO,EAAE;AACLb,MAAAA,OAAO,EAAE,MADJ;AAELC,MAAAA,cAAc,EAAE,QAFX;AAGLS,MAAAA,UAAU,EAAE,QAHP;AAILlB,MAAAA,WAAW,EAAE,WAJR;AAKLE,MAAAA,YAAY,EAAE,CALT;AAMLkB,MAAAA,MAAM,EAAE5B,KAAK,CAACmB,OAAN,CAAc,CAAd,CANH;AAOLI,MAAAA,MAAM,EAAE;AAPH,KAzC4B;AAkDrCO,IAAAA,YAAY,EAAE;AACVF,MAAAA,MAAM,EAAE5B,KAAK,CAACmB,OAAN,CAAc,CAAd,CADE;AAEVH,MAAAA,OAAO,EAAE,MAFC;AAGVU,MAAAA,UAAU,EAAE,QAHF;AAIVlB,MAAAA,WAAW,EAAE,WAJH;AAKVE,MAAAA,YAAY,EAAE;AALJ,KAlDuB;AAyDrCqB,IAAAA,IAAI,EAAE;AACFzB,MAAAA,MAAM,EAAE;AADN,KAzD+B;AA4DrC0B,IAAAA,OAAO,EAAE;AACLX,MAAAA,UAAU,EAAE,CADP;AAELH,MAAAA,SAAS,EAAE,CAFN;AAGLe,MAAAA,KAAK,EAAE/C,MAAF,aAAEA,MAAF,uBAAEA,MAAM,CAAEgD,SAHV;AAILC,MAAAA,UAAU,EAAE;AAJP,KA5D4B;AAkErCC,IAAAA,WAAW,EAAE;AACTR,MAAAA,MAAM,EAAE;AADC,KAlEwB;AAqErCS,IAAAA,QAAQ,EAAE;AACN7B,MAAAA,WAAW,EAAE,QADP;AAENE,MAAAA,YAAY,EAAE,CAFR;AAGNkB,MAAAA,MAAM,EAAE5B,KAAK,CAACmB,OAAN,CAAc,CAAd,CAHF;AAINmB,MAAAA,QAAQ,EAAE,MAJJ;AAKNjC,MAAAA,KAAK,EAAE;AALD,KArE2B;AA4ErCkC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENL,MAAAA,UAAU,EAAE,MAFN;AAGNF,MAAAA,KAAK,EAAE,SAHD;AAINZ,MAAAA,UAAU,EAAE;AAJN,KA5E2B;AAkFrCoB,IAAAA,OAAO,EAAE;AACLR,MAAAA,KAAK,EAAE;AADF;AAlF4B,GAAZ;AAAA,CAAD,CAA5B;;AAuFA,IAAMS,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AAAA;;AAAA;;AAAA,MACbC,KADa,GACsBD,KADtB,CACbC,KADa;AAAA,MACNvD,UADM,GACsBsD,KADtB,CACNtD,UADM;AAAA,MACMC,WADN,GACsBqD,KADtB,CACMrD,WADN;AAGrB,MAAMuD,OAAO,GAAG9C,SAAS,EAAzB;;AAHqB,oBAIe/B,UAAU,CAACgB,YAAD,CAJzB;AAAA,MAIb8D,gBAJa,eAIbA,gBAJa;AAAA,MAIKC,KAJL,eAIKA,KAJL;;AAKrB,MAAMC,MAAM,GAAG/D,SAAS,EAAxB;AACA,MAAMgE,SAAS,GAAGD,MAAM,CAACE,KAAP,CAAaC,SAA/B;AACA,MAAMC,SAAS,GAAGL,KAAK,IAAIC,MAAM,CAACE,KAAP,CAAaE,SAAxC;;AAPqB,kBASanF,QAAQ,CAAC,EAAD,CATrB;AAAA,MASdoF,SATc;AAAA,MASHC,YATG;;AAAA,mBAU2BrF,QAAQ,CAAC,EAAD,CAVnC;AAAA,MAUdsF,gBAVc;AAAA,MAUIC,mBAVJ;;AAAA,mBAWSvF,QAAQ,CAClC2E,KAAK,SAAL,IAAAA,KAAK,WAAL,qBAAAA,KAAK,CAAEa,MAAP,8EAAeC,IAAf,kEAAqBC,YAArB,GAAoC,CAAAf,KAAK,SAAL,IAAAA,KAAK,WAAL,8BAAAA,KAAK,CAAEa,MAAP,yFAAeC,IAAf,4EAAqBC,YAArB,IAAoC,GAAxE,GAA8E,CAD5C,CAXjB;AAAA,MAWdC,OAXc;AAAA,MAWLC,UAXK;;AAerB3F,EAAAA,SAAS,CAAC,YAAM;AACZa,IAAAA,QAAQ,CAAC;AACL+E,MAAAA,MAAM,EAAEhB,gBAAgB,CAACiB,SADpB;AAELC,MAAAA,QAAQ,EAAExE,cAAc,CAACyE,MAFpB;AAGLlB,MAAAA,KAAK,EAAEK,SAHF;AAILc,MAAAA,MAAM,EAAE;AACJC,QAAAA,SAAS,EAAE,IADP;AAEJC,QAAAA,UAAU,EAAEC,MAAM,CAACpB,SAAD;AAFd;AAJH,KAAD,CAAR,CAQGqB,IARH,CAQQ,UAACC,GAAD,EAAS;AACb,UAAIA,GAAG,CAACC,MAAJ,KAAe,GAAf,IAAsBD,GAAG,CAACE,IAA1B,IAAkCF,GAAG,CAACE,IAAJ,CAASA,IAAT,CAAcC,MAAd,GAAuB,CAA7D,EAAgE;AAAA;;AAC5DpB,QAAAA,YAAY,CAACiB,GAAG,CAACE,IAAJ,CAASA,IAAV,CAAZ;;AACA,YAAI,EAAC7B,KAAD,aAACA,KAAD,iCAACA,KAAK,CAAEa,MAAR,kEAAC,eAAeC,IAAhB,gDAAC,oBAAqBiB,IAAtB,CAAJ,EAAgC;AAC5B,cAAMC,mBAAmB,GAAGL,GAAG,CAACE,IAAJ,CAASA,IAAT,CAAc,CAAd,CAA5B;AACApF,UAAAA,UAAU,CAAC,aAAD,EAAgB,CAAC,QAAD,EAAW,MAAX,EAAmB,MAAnB,CAAhB,EAA4CuF,mBAAmB,CAACC,IAApB,CAAyBC,WAAzB,EAA5C,CAAV;AACAtB,UAAAA,mBAAmB,CAACoB,mBAAD,CAAnB;AACH,SAJD,MAIO;AACHL,UAAAA,GAAG,CAACE,IAAJ,CAASA,IAAT,CAAcM,IAAd,CAAmB,UAACJ,IAAD,EAAU;AAAA;;AACzB,gBAAI,CAAA/B,KAAK,SAAL,IAAAA,KAAK,WAAL,8BAAAA,KAAK,CAAEa,MAAP,yFAAeC,IAAf,4EAAqBiB,IAArB,MAA8BA,IAAI,CAACE,IAAL,CAAUC,WAAV,EAAlC,EAA2D;AACvDtB,cAAAA,mBAAmB,CAACmB,IAAD,CAAnB;AACA,qBAAO,IAAP;AACH;AACJ,WALD;AAMH;AACJ;AACJ,KAxBD;AAyBH,GA1BQ,EA0BN,EA1BM,CAAT;;AA4BA,MAAMK,UAAU,GAAG,SAAbA,UAAa,CAACC,YAAD,EAAeC,QAAf,EAA4B;AAAA;;AAC3C,QACI,mBAAAD,YAAY,CAAC,CAAD,CAAZ,kEAAiBE,IAAjB,CAAsBL,WAAtB,QAAwC,WAAxC,IACA,oBAAAG,YAAY,CAAC,CAAD,CAAZ,oEAAiBE,IAAjB,CAAsBL,WAAtB,QAAwC,WADxC,IAEA,oBAAAG,YAAY,CAAC,CAAD,CAAZ,oEAAiBE,IAAjB,CAAsBL,WAAtB,QAAwC,YAH5C,EAIE;AACElF,MAAAA,KAAK,CAACwF,KAAN,CAAY,gBAAZ,EAA8B;AAC1BhF,QAAAA,QAAQ,EAAER,KAAK,CAACyF,QAAN,CAAeC;AADC,OAA9B;AAGA;AACH;;AACDxG,IAAAA,MAAM,CAAC;AACHgF,MAAAA,MAAM,EAAEhB,gBAAgB,CAACiB,SADtB;AAEHhB,MAAAA,KAAK,EAAEK,SAFJ;AAGHc,MAAAA,MAAM,EAAE;AACJW,QAAAA,IAAI,EAAEK,QADF;AAEJK,QAAAA,QAAQ,EAAE3C,KAAK,CAAC4C,QAFZ;AAGJC,QAAAA,SAAS,EAAE,IAHP;AAIJrB,QAAAA,UAAU,EAAEnB,SAJR;AAKJkB,QAAAA,SAAS,EAAE;AALP,OAHL;AAUHuB,MAAAA,KAAK,EAAET;AAVJ,KAAD,CAAN,CAWGX,IAXH,CAWQ,UAACqB,CAAD,EAAO;AACX,UAAIA,CAAC,CAACnB,MAAF,KAAa,GAAb,IAAoBmB,CAAC,CAAClB,IAAF,CAAOA,IAA/B,EAAqC;AACjC,YAAImB,GAAG,GAAGD,CAAC,CAAClB,IAAF,CAAOA,IAAP,CAAYmB,GAAZ,CAAgBC,OAAhB,CAAwB,aAAxB,EAAuC,EAAvC,EAA2CA,OAA3C,CAAmD,SAAnD,EAA8D,EAA9D,CAAV;AACAjG,QAAAA,KAAK,CAACkG,OAAN,CAAc1G,cAAd,EAA8B;AAC1BgB,UAAAA,QAAQ,EAAER,KAAK,CAACyF,QAAN,CAAeC;AADC,SAA9B;AAGA,YAAMS,GAAG,GAAGJ,CAAC,CAAClB,IAAF,CAAOA,IAAP,CAAYsB,GAAxB;;AACA,YAAIb,QAAQ,CAACJ,WAAT,OAA2B,MAA/B,EAAuC;AACnCzF,UAAAA,UAAU,CAAC,aAAD,EAAgB,CAAC,QAAD,EAAW,QAAX,EAAqB,MAArB,CAAhB,EAA8C0G,GAA9C,CAAV;AACAzG,UAAAA,WAAW,CAAC,aAAD,EAAgB,SAAhB,EAA2BsG,GAA3B,CAAX;AACH;;AACD,YAAIV,QAAQ,CAACJ,WAAT,OAA2B,SAA/B,EAA0C;AACtCzF,UAAAA,UAAU,CAAC,aAAD,EAAgB,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,CAAhB,EAAiD0G,GAAjD,CAAV;AACAzG,UAAAA,WAAW,CAAC,aAAD,EAAgB,YAAhB,EAA8BsG,GAA9B,CAAX;AACH;;AACD,YAAIV,QAAQ,CAACJ,WAAT,OAA2B,aAA/B,EAA8C;AAC1CzF,UAAAA,UAAU,CAAC,aAAD,EAAgB,CAAC,QAAD,EAAW,QAAX,EAAqB,YAArB,CAAhB,EAAoD0G,GAApD,CAAV;AACAzG,UAAAA,WAAW,CAAC,aAAD,EAAgB,YAAhB,EAA8BsG,GAA9B,CAAX;AACH;;AACD,YAAIV,QAAQ,CAACJ,WAAT,OAA2B,YAA/B,EAA6C;AACzCzF,UAAAA,UAAU,CAAC,aAAD,EAAgB,CAAC,QAAD,EAAW,QAAX,EAAqB,YAArB,CAAhB,EAAoD0G,GAApD,CAAV;AACAzG,UAAAA,WAAW,CAAC,aAAD,EAAgB,eAAhB,EAAiCsG,GAAjC,CAAX;AACH;;AACD,YAAIV,QAAQ,CAACJ,WAAT,OAA2B,YAA/B,EAA6C;AACzCzF,UAAAA,UAAU,CAAC,aAAD,EAAgB,CAAC,QAAD,EAAW,QAAX,EAAqB,WAArB,CAAhB,EAAmD0G,GAAnD,CAAV;AACAzG,UAAAA,WAAW,CAAC,aAAD,EAAgB,cAAhB,EAAgCsG,GAAhC,CAAX;AACH;;AACD,YAAIV,QAAQ,CAACJ,WAAT,OAA2B,WAA/B,EAA4C;AACxCzF,UAAAA,UAAU,CAAC,aAAD,EAAgB,CAAC,QAAD,EAAW,QAAX,EAAqB,WAArB,CAAhB,EAAmD0G,GAAnD,CAAV;AACAzG,UAAAA,WAAW,CAAC,aAAD,EAAgB,cAAhB,EAAgCsG,GAAhC,CAAX;AACH;AACJ,OA9BD,MA8BO;AACH,YAAMI,MAAM,GAAGzG,UAAU,CAACoG,CAAD,CAAzB;AACA/F,QAAAA,KAAK,CAACwF,KAAN,CAAYY,MAAM,CAACC,QAAnB,EAA6B;AACzB7F,UAAAA,QAAQ,EAAER,KAAK,CAACyF,QAAN,CAAeC;AADA,SAA7B;AAGH;AACJ,KAhDD;AAiDH,GA5DD,CA3CqB,CAyGrB;;;AACA,MAAMY,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAQhB,IAAR,EAAiB;AAAA;;AAChC,QACI,YAAAgB,KAAK,CAAC,CAAD,CAAL,oDAAUhB,IAAV,CAAeL,WAAf,QAAiC,WAAjC,IACA,aAAAqB,KAAK,CAAC,CAAD,CAAL,sDAAUhB,IAAV,CAAeL,WAAf,QAAiC,WADjC,IAEA,aAAAqB,KAAK,CAAC,CAAD,CAAL,sDAAUhB,IAAV,CAAeL,WAAf,QAAiC,YAHrC,EAIE;AACElF,MAAAA,KAAK,CAACwF,KAAN,CAAY,gBAAZ,EAA8B;AAC1BhF,QAAAA,QAAQ,EAAER,KAAK,CAACyF,QAAN,CAAeC;AADC,OAA9B;AAGA;AACH;;AACDxG,IAAAA,MAAM,CAAC;AACHgF,MAAAA,MAAM,EAAEhB,gBAAgB,CAACiB,SADtB;AAEHhB,MAAAA,KAAK,EAAEK,SAFJ;AAGHc,MAAAA,MAAM,EAAE;AACJW,QAAAA,IAAI,EAAEM,IADF;AAEJI,QAAAA,QAAQ,EAAE3C,KAAK,CAAC4C,QAFZ;AAGJC,QAAAA,SAAS,EAAE,IAHP;AAIJrB,QAAAA,UAAU,EAAEnB,SAJR;AAKJkB,QAAAA,SAAS,EAAE;AALP,OAHL;AAUHuB,MAAAA,KAAK,EAAES;AAVJ,KAAD,CAAN,CAWG7B,IAXH,CAWQ,UAACqB,CAAD,EAAO;AACX,UAAIA,CAAC,CAACnB,MAAF,KAAa,GAAb,IAAoBmB,CAAC,CAAClB,IAAF,CAAOA,IAA/B,EAAqC;AACjC,YAAMsB,GAAG,GAAGJ,CAAC,CAAClB,IAAF,CAAOA,IAAP,CAAYsB,GAAxB;AACA,YAAIH,GAAG,GAAGD,CAAC,CAAClB,IAAF,CAAOA,IAAP,CAAYmB,GAAZ,CAAgBC,OAAhB,CAAwB,aAAxB,EAAuC,EAAvC,EAA2CA,OAA3C,CAAmD,SAAnD,EAA8D,EAA9D,CAAV;;AACA,YAAIV,IAAI,CAACL,WAAL,OAAuB,SAA3B,EAAsC;AAClCzF,UAAAA,UAAU,CAAC,aAAD,EAAgB,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,CAAhB,EAAiD0G,GAAjD,CAAV;AACAzG,UAAAA,WAAW,CAAC,aAAD,EAAgB,YAAhB,EAA8BsG,GAA9B,CAAX;AACH;;AACD,YAAIT,IAAI,CAACL,WAAL,OAAuB,OAA3B,EAAoC;AAChCzF,UAAAA,UAAU,CAAC,aAAD,EAAgB,CAAC,QAAD,EAAW,OAAX,EAAoB,OAApB,CAAhB,EAA8C0G,GAA9C,CAAV;AACAzG,UAAAA,WAAW,CAAC,aAAD,EAAgB,cAAhB,EAAgCsG,GAAhC,CAAX;AACH;;AACD,YAAIT,IAAI,CAACL,WAAL,OAAuB,OAA3B,EAAoC;AAChCzF,UAAAA,UAAU,CAAC,aAAD,EAAgB,CAAC,QAAD,EAAW,OAAX,EAAoB,OAApB,CAAhB,EAA8C0G,GAA9C,CAAV;AACAzG,UAAAA,WAAW,CAAC,aAAD,EAAgB,cAAhB,EAAgCsG,GAAhC,CAAX;AACH;;AACD,YAAIT,IAAI,CAACL,WAAL,OAAuB,UAA3B,EAAuC;AACnCzF,UAAAA,UAAU,CAAC,aAAD,EAAgB,CAAC,QAAD,EAAW,OAAX,EAAoB,UAApB,CAAhB,EAAiD0G,GAAjD,CAAV;AACAzG,UAAAA,WAAW,CAAC,aAAD,EAAgB,iBAAhB,EAAmCsG,GAAnC,CAAX;AACH;;AACD,YAAIT,IAAI,CAACL,WAAL,OAAuB,SAA3B,EAAsC;AAClCzF,UAAAA,UAAU,CAAC,aAAD,EAAgB,CAAC,QAAD,EAAW,OAAX,EAAoB,SAApB,CAAhB,EAAgD0G,GAAhD,CAAV;AACAzG,UAAAA,WAAW,CAAC,aAAD,EAAgB,gBAAhB,EAAkCsG,GAAlC,CAAX;AACH;;AACD,YAAIT,IAAI,CAACL,WAAL,OAAuB,WAA3B,EAAwC;AACpCzF,UAAAA,UAAU,CAAC,aAAD,EAAgB,CAAC,QAAD,EAAW,OAAX,EAAoB,WAApB,CAAhB,EAAkD0G,GAAlD,CAAV;AACAzG,UAAAA,WAAW,CAAC,aAAD,EAAgB,kBAAhB,EAAoCsG,GAApC,CAAX;AACH;;AACD,YAAIT,IAAI,CAACL,WAAL,OAAuB,UAA3B,EAAuC;AACnCzF,UAAAA,UAAU,CAAC,aAAD,EAAgB,CAAC,QAAD,EAAW,OAAX,EAAoB,UAApB,CAAhB,EAAiD0G,GAAjD,CAAV;AACAzG,UAAAA,WAAW,CAAC,aAAD,EAAgB,iBAAhB,EAAmCsG,GAAnC,CAAX;AACH;;AACDhG,QAAAA,KAAK,CAACkG,OAAN,CAAc1G,cAAd,EAA8B;AAC1BgB,UAAAA,QAAQ,EAAER,KAAK,CAACyF,QAAN,CAAeC;AADC,SAA9B;AAGH,OAlCD,MAkCO;AACH,YAAMU,MAAM,GAAGzG,UAAU,CAACoG,CAAD,CAAzB;AACA/F,QAAAA,KAAK,CAACwF,KAAN,CAAYY,MAAM,CAACC,QAAnB,EAA6B;AACzB7F,UAAAA,QAAQ,EAAER,KAAK,CAACyF,QAAN,CAAeC;AADA,SAA7B;AAGH;AACJ,KApDD;AAqDH,GAhED;;AAkEA,MAAMc,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAW;AACjChH,IAAAA,UAAU,CAAC,aAAD,EAAgB,CAAC,QAAD,EAAW,MAAX,EAAmB,OAAnB,CAAhB,EAA6CgH,KAAK,CAACC,MAAN,CAAaC,KAA1D,CAAV;AACH,GAFD;;AAIA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACH,KAAD,EAAW;AAC/BhH,IAAAA,UAAU,CAAC,aAAD,EAAgB,CAAC,QAAD,EAAW,MAAX,EAAmB,QAAnB,CAAhB,EAA8CgH,KAAK,CAACC,MAAN,CAAaC,KAA3D,CAAV;AACH,GAFD;;AAIA,MAAME,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACJ,KAAD,EAAW;AACpC,QAAM1B,IAAI,GAAG0B,KAAK,CAACC,MAAN,CAAaC,KAA1B;AACA/C,IAAAA,mBAAmB,CAACmB,IAAD,CAAnB;AACAtF,IAAAA,UAAU,CAAC,aAAD,EAAgB,CAAC,QAAD,EAAW,MAAX,EAAmB,MAAnB,CAAhB,EAA4CsF,IAAI,CAACE,IAAL,CAAUC,WAAV,EAA5C,CAAV;AACAxF,IAAAA,WAAW,CAAC,aAAD,EAAgB,QAAhB,EAA0BqF,IAA1B,aAA0BA,IAA1B,uBAA0BA,IAAI,CAAE+B,EAAhC,CAAX;AACH,GALD;;AAOA,SACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAA4B,IAAA,OAAO,EAAC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,OAAO,EAAE,UAAf;AAA2B,IAAA,MAAM,EAAE,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AAAY,IAAA,SAAS,EAAE,MAAvB;AAA+B,IAAA,SAAS,EAAE7D,OAAO,CAACN,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qEADJ,CADJ,CADJ,EAQI,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAEM,OAAO,CAACb,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAqC;AAAM,IAAA,SAAS,EAAEa,OAAO,CAACJ,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAArC,MADJ,EAEK,EAACG,KAAD,aAACA,KAAD,iCAACA,KAAK,CAAEa,MAAR,oEAAC,eAAekD,MAAhB,kDAAC,sBAAuBC,IAAxB,IACG,MAAC,KAAD;AAAO,IAAA,OAAO,EAAE,UAAhB;AAA4B,IAAA,SAAS,EAAE/D,OAAO,CAACpB,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,aAAD;AAAe,IAAA,MAAM,EAAE,gBAACoF,CAAD;AAAA,aAAO7B,UAAU,CAAC6B,CAAD,EAAI,MAAJ,CAAjB;AAAA,KAAvB;AAAqD,IAAA,YAAY,MAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK;AAAA,QAAGC,YAAH,QAAGA,YAAH;AAAA,QAAiBC,aAAjB,QAAiBA,aAAjB;AAAA,WACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,0BAASD,YAAY,EAArB;AAAyB,MAAA,KAAK,EAAE;AAAEzG,QAAAA,KAAK,EAAE,GAAT;AAAcC,QAAAA,MAAM,EAAE;AAAtB,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACI,4BAAWyG,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,EAEI,MAAC,eAAD;AAAiB,MAAA,SAAS,EAAElE,OAAO,CAACvB,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,CADH;AAAA,GADL,CADJ,CADH,GAcG,MAAC,KAAD;AAAO,IAAA,OAAO,EAAE,UAAhB;AAA4B,IAAA,SAAS,EAAEuB,OAAO,CAACf,YAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,aAAD;AAAe,IAAA,MAAM,EAAE,gBAAC+E,CAAD;AAAA,aAAO7B,UAAU,CAAC6B,CAAD,EAAI,MAAJ,CAAjB;AAAA,KAAvB;AAAqD,IAAA,YAAY,MAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK;AAAA,QAAGC,YAAH,SAAGA,YAAH;AAAA,QAAiBC,aAAjB,SAAiBA,aAAjB;AAAA,WACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,0BACQD,YAAY,EADpB;AAEI,MAAA,KAAK,EAAE;AAAEvF,QAAAA,MAAM,EAAE,SAAV;AAAqBlB,QAAAA,KAAK,EAAE,GAA5B;AAAiCC,QAAAA,MAAM,EAAE;AAAzC,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAII,4BAAWyG,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJJ,EAKI;AACI,MAAA,SAAS,EAAElE,OAAO,CAAClC,YADvB;AAEI,MAAA,KAAK,EAAE;AACHqG,QAAAA,eAAe,gBACXlE,gBAAgB,CAACmE,UAAjB,GAA8BrE,KAAK,CAACsE,OADzB,MADZ;AAIH7G,QAAAA,KAAK,EAAE,MAJJ;AAKHC,QAAAA,MAAM,EAAE;AALL,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADJ,CADH;AAAA,GADL,CADJ,CAhBR,CADJ,EA2CI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAEuC,OAAO,CAACb,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEK,EAACY,KAAD,aAACA,KAAD,iCAACA,KAAK,CAAEa,MAAR,oEAAC,eAAekD,MAAhB,kDAAC,sBAAuBQ,OAAxB,IACG,MAAC,KAAD;AAAO,IAAA,OAAO,EAAE,UAAhB;AAA4B,IAAA,SAAS,EAAEtE,OAAO,CAACpB,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,aAAD;AAAe,IAAA,MAAM,EAAE,gBAACoF,CAAD;AAAA,aAAO7B,UAAU,CAAC6B,CAAD,EAAI,SAAJ,CAAjB;AAAA,KAAvB;AAAwD,IAAA,YAAY,MAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK;AAAA,QAAGC,YAAH,SAAGA,YAAH;AAAA,QAAiBC,aAAjB,SAAiBA,aAAjB;AAAA,WACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,0BAASD,YAAY,EAArB;AAAyB,MAAA,KAAK,EAAE;AAAEzG,QAAAA,KAAK,EAAE,GAAT;AAAcC,QAAAA,MAAM,EAAE;AAAtB,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACI,4BAAWyG,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,EAEI,MAAC,eAAD;AAAiB,MAAA,SAAS,EAAElE,OAAO,CAACvB,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,CADH;AAAA,GADL,CADJ,CADH,GAcG,MAAC,KAAD;AAAO,IAAA,OAAO,EAAE,UAAhB;AAA4B,IAAA,SAAS,EAAEuB,OAAO,CAACf,YAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,aAAD;AAAe,IAAA,MAAM,EAAE,gBAAC+E,CAAD;AAAA,aAAO7B,UAAU,CAAC6B,CAAD,EAAI,SAAJ,CAAjB;AAAA,KAAvB;AAAwD,IAAA,YAAY,MAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK;AAAA,QAAGC,YAAH,SAAGA,YAAH;AAAA,QAAiBC,aAAjB,SAAiBA,aAAjB;AAAA,WACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,0BACQD,YAAY,EADpB;AAEI,MAAA,KAAK,EAAE;AAAEvF,QAAAA,MAAM,EAAE,SAAV;AAAqBlB,QAAAA,KAAK,EAAE,GAA5B;AAAiCC,QAAAA,MAAM,EAAE;AAAzC,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAII,4BAAWyG,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJJ,EAKI;AACI,MAAA,SAAS,EAAElE,OAAO,CAAClC,YADvB;AAEI,MAAA,KAAK,EAAE;AACHqG,QAAAA,eAAe,gBACXlE,gBAAgB,CAACmE,UAAjB,GAA8BrE,KAAK,CAACwE,UADzB;AADZ,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADJ,CADH;AAAA,GADL,CADJ,CAhBR,CA3CJ,CARJ,EA4FI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,SAAS,MAApB;AAAqB,IAAA,OAAO,EAAE,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAEvE,OAAO,CAACb,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEK,EAACY,KAAD,aAACA,KAAD,iCAACA,KAAK,CAAEa,MAAR,oEAAC,eAAekD,MAAhB,kDAAC,sBAAuBU,UAAxB,IACG,MAAC,KAAD;AAAO,IAAA,OAAO,EAAE,UAAhB;AAA4B,IAAA,SAAS,EAAExE,OAAO,CAACpB,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,aAAD;AAAe,IAAA,MAAM,EAAE,gBAACoF,CAAD;AAAA,aAAO7B,UAAU,CAAC6B,CAAD,EAAI,YAAJ,CAAjB;AAAA,KAAvB;AAA2D,IAAA,YAAY,MAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK;AAAA,QAAGC,YAAH,SAAGA,YAAH;AAAA,QAAiBC,aAAjB,SAAiBA,aAAjB;AAAA,WACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,0BAASD,YAAY,EAArB;AAAyB,MAAA,KAAK,EAAE;AAAEzG,QAAAA,KAAK,EAAE,GAAT;AAAcC,QAAAA,MAAM,EAAE;AAAtB,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACI,4BAAWyG,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,EAEI,MAAC,eAAD;AAAiB,MAAA,SAAS,EAAElE,OAAO,CAACvB,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,CADH;AAAA,GADL,CADJ,CADH,GAcG,MAAC,KAAD;AAAO,IAAA,OAAO,EAAE,UAAhB;AAA4B,IAAA,SAAS,EAAEuB,OAAO,CAACf,YAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,aAAD;AAAe,IAAA,MAAM,EAAE,gBAAC+E,CAAD;AAAA,aAAO7B,UAAU,CAAC6B,CAAD,EAAI,YAAJ,CAAjB;AAAA,KAAvB;AAA2D,IAAA,YAAY,MAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK;AAAA,QAAGC,YAAH,SAAGA,YAAH;AAAA,QAAiBC,aAAjB,SAAiBA,aAAjB;AAAA,WACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,0BACQD,YAAY,EADpB;AAEI,MAAA,KAAK,EAAE;AAAEvF,QAAAA,MAAM,EAAE,SAAV;AAAqBlB,QAAAA,KAAK,EAAE,GAA5B;AAAiCC,QAAAA,MAAM,EAAE;AAAzC,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAII,4BAAWyG,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJJ,EAKI;AACI,MAAA,SAAS,EAAElE,OAAO,CAAClC,YADvB;AAEI,MAAA,KAAK,EAAE;AACHqG,QAAAA,eAAe,gBACXlE,gBAAgB,CAACmE,UAAjB,GAA8BrE,KAAK,CAAC0E,aADzB;AADZ,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADJ,CADH;AAAA,GADL,CADJ,CAhBR,CADJ,EAyCI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAEzE,OAAO,CAACb,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEK,EAACY,KAAD,aAACA,KAAD,iCAACA,KAAK,CAAEa,MAAR,oEAAC,eAAekD,MAAhB,kDAAC,sBAAuBY,UAAxB,IACG,MAAC,KAAD;AAAO,IAAA,OAAO,EAAE,UAAhB;AAA4B,IAAA,SAAS,EAAE1E,OAAO,CAACpB,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,aAAD;AAAe,IAAA,MAAM,EAAE,gBAACoF,CAAD;AAAA,aAAO7B,UAAU,CAAC6B,CAAD,EAAI,aAAJ,CAAjB;AAAA,KAAvB;AAA4D,IAAA,YAAY,MAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK;AAAA,QAAGC,YAAH,SAAGA,YAAH;AAAA,QAAiBC,aAAjB,SAAiBA,aAAjB;AAAA,WACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,0BAASD,YAAY,EAArB;AAAyB,MAAA,KAAK,EAAE;AAAEzG,QAAAA,KAAK,EAAE,GAAT;AAAcC,QAAAA,MAAM,EAAE;AAAtB,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACI,4BAAWyG,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,EAEI,MAAC,eAAD;AAAiB,MAAA,SAAS,EAAElE,OAAO,CAACvB,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,CADH;AAAA,GADL,CADJ,CADH,GAcG,MAAC,KAAD;AAAO,IAAA,OAAO,EAAE,UAAhB;AAA4B,IAAA,SAAS,EAAEuB,OAAO,CAACf,YAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,aAAD;AAAe,IAAA,MAAM,EAAE,gBAAC+E,CAAD;AAAA,aAAO7B,UAAU,CAAC6B,CAAD,EAAI,aAAJ,CAAjB;AAAA,KAAvB;AAA4D,IAAA,YAAY,MAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK;AAAA,QAAGC,YAAH,SAAGA,YAAH;AAAA,QAAiBC,aAAjB,SAAiBA,aAAjB;AAAA,WACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,0BACQD,YAAY,EADpB;AAEI,MAAA,KAAK,EAAE;AAAEvF,QAAAA,MAAM,EAAE,SAAV;AAAqBlB,QAAAA,KAAK,EAAE,GAA5B;AAAiCC,QAAAA,MAAM,EAAE;AAAzC,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAII,4BAAWyG,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJJ,EAKI;AACI,MAAA,SAAS,EAAElE,OAAO,CAAClC,YADvB;AAEI,MAAA,KAAK,EAAE;AACHqG,QAAAA,eAAe,gBACXlE,gBAAgB,CAACmE,UAAjB,GAA8BrE,KAAK,CAAC2E,UADzB;AADZ,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADJ,CADH;AAAA,GADL,CADJ,CAhBR,CAzCJ,CA5FJ,EA8KI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,SAAS,MAApB;AAAqB,IAAA,OAAO,EAAE,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AAAY,IAAA,SAAS,EAAE,IAAvB;AAA6B,IAAA,OAAO,EAAE,IAAtC;AAA4C,IAAA,SAAS,EAAE1E,OAAO,CAACb,OAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAII,MAAC,KAAD;AACI,IAAA,OAAO,EAAE,UADb;AAEI,IAAA,SAAS,EAAEa,OAAO,CAAChB,OAFvB;AAGI,IAAA,KAAK,EAAE;AAAEF,MAAAA,eAAe,EAAEiB,KAAK,SAAL,IAAAA,KAAK,WAAL,sBAAAA,KAAK,CAAEa,MAAP,mFAAekD,MAAf,wEAAuBa,SAAvB,GAAmC,MAAnC,GAA4C;AAA/D,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,MAAC,aAAD;AAAe,IAAA,MAAM,EAAE,gBAACX,CAAD;AAAA,aAAO7B,UAAU,CAAC6B,CAAD,EAAI,YAAJ,CAAjB;AAAA,KAAvB;AAA2D,IAAA,YAAY,MAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK;AAAA;;AAAA,QAAGC,YAAH,SAAGA,YAAH;AAAA,QAAiBC,aAAjB,SAAiBA,aAAjB;AAAA,WACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,0BAASD,YAAY,EAArB;AAAyB,MAAA,KAAK,EAAE;AAAEzG,QAAAA,KAAK,EAAE,GAAT;AAAcC,QAAAA,MAAM,EAAE;AAAtB,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACI,4BAAWyG,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,EAEKnE,KAAK,SAAL,IAAAA,KAAK,WAAL,uBAAAA,KAAK,CAAEa,MAAP,qFAAekD,MAAf,wEAAuBa,SAAvB,GACG;AACI,MAAA,KAAK,EAAE;AACHR,QAAAA,eAAe,gBACXlE,gBAAgB,CAACmE,UAAjB,GAA8BrE,KAAK,CAAC6E,YADzB,MADZ;AAIH7G,QAAAA,cAAc,EAAE,SAJb;AAKHC,QAAAA,gBAAgB,EAAE,WALf;AAMHC,QAAAA,kBAAkB,EAAE,QANjB;AAOHT,QAAAA,KAAK,EAAE,MAPJ;AAQHC,QAAAA,MAAM,EAAE,MARL;AASHqB,QAAAA,eAAe,EAAE;AATd,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,GAeG,MAAC,eAAD;AAAiB,MAAA,SAAS,EAAEkB,OAAO,CAACvB,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBR,CADJ,CADH;AAAA,GADL,CALJ,CAJJ,CADJ,EAsCI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AAAY,IAAA,SAAS,EAAE,IAAvB;AAA6B,IAAA,OAAO,EAAE,IAAtC;AAA4C,IAAA,SAAS,EAAEuB,OAAO,CAACb,OAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAII,MAAC,KAAD;AACI,IAAA,OAAO,EAAE,UADb;AAEI,IAAA,SAAS,EAAEa,OAAO,CAAChB,OAFvB;AAGI,IAAA,KAAK,EAAE;AAAEF,MAAAA,eAAe,EAAEiB,KAAK,SAAL,IAAAA,KAAK,WAAL,uBAAAA,KAAK,CAAEa,MAAP,qFAAekD,MAAf,wEAAuB9E,OAAvB,GAAiC,MAAjC,GAA0C;AAA7D,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,MAAC,aAAD;AAAe,IAAA,MAAM,EAAE,gBAACgF,CAAD;AAAA,aAAOX,UAAU,CAACW,CAAD,EAAI,SAAJ,CAAjB;AAAA,KAAvB;AAAwD,IAAA,YAAY,MAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK;AAAA;;AAAA,QAAGC,YAAH,UAAGA,YAAH;AAAA,QAAiBC,aAAjB,UAAiBA,aAAjB;AAAA,WACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,0BAASD,YAAY,EAArB;AAAyB,MAAA,KAAK,EAAE;AAAEzG,QAAAA,KAAK,EAAE,GAAT;AAAcC,QAAAA,MAAM,EAAE;AAAtB,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACI,4BAAWyG,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,EAEKnE,KAAK,SAAL,IAAAA,KAAK,WAAL,uBAAAA,KAAK,CAAEa,MAAP,qFAAekD,MAAf,wEAAuB9E,OAAvB,GACG;AACI,MAAA,KAAK,EAAE;AACHmF,QAAAA,eAAe,gBACXlE,gBAAgB,CAACmE,UAAjB,GAA8BrE,KAAK,CAAC8E,UADzB,MADZ;AAIH9G,QAAAA,cAAc,EAAE,SAJb;AAKHC,QAAAA,gBAAgB,EAAE,WALf;AAMHC,QAAAA,kBAAkB,EAAE,QANjB;AAOHT,QAAAA,KAAK,EAAE,MAPJ;AAQHC,QAAAA,MAAM,EAAE,MARL;AASHqB,QAAAA,eAAe,EAAE;AATd,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,GAeG,MAAC,eAAD;AAAiB,MAAA,SAAS,EAAEkB,OAAO,CAACvB,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBR,CADJ,CADH;AAAA,GADL,CALJ,CAJJ,CAtCJ,EA2EI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AAAY,IAAA,SAAS,EAAE,IAAvB;AAA6B,IAAA,OAAO,EAAE,IAAtC;AAA4C,IAAA,SAAS,EAAEuB,OAAO,CAACb,OAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAII,MAAC,KAAD;AACI,IAAA,OAAO,EAAE,UADb;AAEI,IAAA,SAAS,EAAEa,OAAO,CAAChB,OAFvB;AAGI,IAAA,KAAK,EAAE;AAAEF,MAAAA,eAAe,EAAEiB,KAAK,SAAL,IAAAA,KAAK,WAAL,uBAAAA,KAAK,CAAEa,MAAP,qFAAekD,MAAf,wEAAuBgB,SAAvB,GAAmC,MAAnC,GAA4C;AAA/D,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,MAAC,aAAD;AAAe,IAAA,MAAM,EAAE,gBAACd,CAAD;AAAA,aAAO7B,UAAU,CAAC6B,CAAD,EAAI,WAAJ,CAAjB;AAAA,KAAvB;AAA0D,IAAA,YAAY,MAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK;AAAA;;AAAA,QAAGC,YAAH,UAAGA,YAAH;AAAA,QAAiBC,aAAjB,UAAiBA,aAAjB;AAAA,WACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,0BAASD,YAAY,EAArB;AAAyB,MAAA,KAAK,EAAE;AAAEzG,QAAAA,KAAK,EAAE,GAAT;AAAcC,QAAAA,MAAM,EAAE;AAAtB,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACI,4BAAWyG,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,EAEKnE,KAAK,SAAL,IAAAA,KAAK,WAAL,uBAAAA,KAAK,CAAEa,MAAP,qFAAekD,MAAf,wEAAuBgB,SAAvB,GACG;AACI,MAAA,KAAK,EAAE;AACHX,QAAAA,eAAe,gBACXlE,gBAAgB,CAACmE,UAAjB,GAA8BrE,KAAK,CAACgF,YADzB,MADZ;AAIHhH,QAAAA,cAAc,EAAE,SAJb;AAKHC,QAAAA,gBAAgB,EAAE,WALf;AAMHC,QAAAA,kBAAkB,EAAE,QANjB;AAOHT,QAAAA,KAAK,EAAE,MAPJ;AAQHC,QAAAA,MAAM,EAAE,MARL;AASHqB,QAAAA,eAAe,EAAE;AATd,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,GAeG,MAAC,eAAD;AAAiB,MAAA,SAAS,EAAEkB,OAAO,CAACvB,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBR,CADJ,CADH;AAAA,GADL,CALJ,CAJJ,CA3EJ,CA9KJ,CADJ,CADJ,CADJ,EAqSI,MAAC,IAAD;AAAM,IAAA,SAAS,EAAE,IAAjB;AAAuB,IAAA,OAAO,EAAE,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,OAAO,EAAE,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,YAAzB;AAAuC,IAAA,OAAO,EAAE,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ,MAAC,UAAD;AAAY,IAAA,SAAS,EAAE,IAAvB;AAA6B,IAAA,OAAO,EAAE,IAAtC;AAA4C,IAAA,SAAS,EAAEuB,OAAO,CAACb,OAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADR,EAIQ,MAAC,KAAD;AACI,IAAA,OAAO,EAAE,UADb;AAEI,IAAA,SAAS,EAAEa,OAAO,CAAChB,OAFvB;AAGI,IAAA,KAAK,EAAE;AAAEF,MAAAA,eAAe,EAAEiB,KAAK,SAAL,IAAAA,KAAK,WAAL,uBAAAA,KAAK,CAAEa,MAAP,qFAAe0C,KAAf,wEAAsB0B,KAAtB,GAA8B,MAA9B,GAAuC;AAA1D,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,MAAC,aAAD;AAAe,IAAA,MAAM,EAAE,gBAAChB,CAAD;AAAA,aAAOX,UAAU,CAACW,CAAD,EAAI,OAAJ,CAAjB;AAAA,KAAvB;AAAsD,IAAA,YAAY,MAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK;AAAA;;AAAA,QAAGC,YAAH,UAAGA,YAAH;AAAA,QAAiBC,aAAjB,UAAiBA,aAAjB;AAAA,WACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,0BAASD,YAAY,EAArB;AAAyB,MAAA,KAAK,EAAE;AAAEzG,QAAAA,KAAK,EAAE,GAAT;AAAcC,QAAAA,MAAM,EAAE;AAAtB,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACI,4BAAWyG,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,EAEKnE,KAAK,SAAL,IAAAA,KAAK,WAAL,uBAAAA,KAAK,CAAEa,MAAP,qFAAe0C,KAAf,wEAAsB0B,KAAtB,GACG;AACI,MAAA,KAAK,EAAE;AACHb,QAAAA,eAAe,gBACXlE,gBAAgB,CAACmE,UAAjB,GAA8BrE,KAAK,CAACkF,YADzB,MADZ;AAIHlH,QAAAA,cAAc,EAAE,SAJb;AAKHC,QAAAA,gBAAgB,EAAE,WALf;AAMHC,QAAAA,kBAAkB,EAAE,QANjB;AAOHT,QAAAA,KAAK,EAAE,MAPJ;AAQHC,QAAAA,MAAM,EAAE,MARL;AASHqB,QAAAA,eAAe,EAAE;AATd,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,GAeG,MAAC,eAAD;AAAiB,MAAA,SAAS,EAAEkB,OAAO,CAACvB,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBR,CADJ,CADH;AAAA,GADL,CALJ,CAJR,CADA,EAsCI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AAAY,IAAA,SAAS,EAAE,IAAvB;AAA6B,IAAA,OAAO,EAAE,IAAtC;AAA4C,IAAA,SAAS,EAAEuB,OAAO,CAACb,OAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAII,MAAC,KAAD;AACI,IAAA,OAAO,EAAE,UADb;AAEI,IAAA,SAAS,EAAEa,OAAO,CAAChB,OAFvB;AAGI,IAAA,KAAK,EAAE;AAAEF,MAAAA,eAAe,EAAEiB,KAAK,SAAL,IAAAA,KAAK,WAAL,uBAAAA,KAAK,CAAEa,MAAP,qFAAe0C,KAAf,wEAAsB4B,KAAtB,GAA8B,MAA9B,GAAuC;AAA1D,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,MAAC,aAAD;AAAe,IAAA,MAAM,EAAE,gBAAClB,CAAD;AAAA,aAAOX,UAAU,CAACW,CAAD,EAAI,OAAJ,CAAjB;AAAA,KAAvB;AAAsD,IAAA,YAAY,MAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK;AAAA;;AAAA,QAAGC,YAAH,UAAGA,YAAH;AAAA,QAAiBC,aAAjB,UAAiBA,aAAjB;AAAA,WACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,0BAASD,YAAY,EAArB;AAAyB,MAAA,KAAK,EAAE;AAAEzG,QAAAA,KAAK,EAAE,GAAT;AAAcC,QAAAA,MAAM,EAAE;AAAtB,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACI,4BAAWyG,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,EAEKnE,KAAK,SAAL,IAAAA,KAAK,WAAL,uBAAAA,KAAK,CAAEa,MAAP,qFAAe0C,KAAf,wEAAsB4B,KAAtB,GACG;AACI,MAAA,KAAK,EAAE;AACHf,QAAAA,eAAe,gBACXlE,gBAAgB,CAACmE,UAAjB,GAA8BrE,KAAK,CAACoF,YADzB,MADZ;AAIHpH,QAAAA,cAAc,EAAE,SAJb;AAKHC,QAAAA,gBAAgB,EAAE,WALf;AAMHC,QAAAA,kBAAkB,EAAE,QANjB;AAOHT,QAAAA,KAAK,EAAE,MAPJ;AAQHC,QAAAA,MAAM,EAAE,MARL;AASHqB,QAAAA,eAAe,EAAE;AATd,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,GAeG,MAAC,eAAD;AAAiB,MAAA,SAAS,EAAEkB,OAAO,CAACvB,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBR,CADJ,CADH;AAAA,GADL,CALJ,CAJJ,CAtCJ,EA2EI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AAAY,IAAA,SAAS,EAAE,IAAvB;AAA6B,IAAA,OAAO,EAAE,IAAtC;AAA4C,IAAA,SAAS,EAAEuB,OAAO,CAACb,OAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAII,MAAC,KAAD;AACI,IAAA,OAAO,EAAE,UADb;AAEI,IAAA,SAAS,EAAEa,OAAO,CAAChB,OAFvB;AAGI,IAAA,KAAK,EAAE;AAAEF,MAAAA,eAAe,EAAEiB,KAAK,SAAL,IAAAA,KAAK,WAAL,uBAAAA,KAAK,CAAEa,MAAP,qFAAe0C,KAAf,wEAAsB8B,QAAtB,GAAiC,MAAjC,GAA0C;AAA7D,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,MAAC,aAAD;AAAe,IAAA,MAAM,EAAE,gBAACpB,CAAD;AAAA,aAAOX,UAAU,CAACW,CAAD,EAAI,UAAJ,CAAjB;AAAA,KAAvB;AAAyD,IAAA,YAAY,MAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK;AAAA;;AAAA,QAAGC,YAAH,UAAGA,YAAH;AAAA,QAAiBC,aAAjB,UAAiBA,aAAjB;AAAA,WACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,0BAASD,YAAY,EAArB;AAAyB,MAAA,KAAK,EAAE;AAAEzG,QAAAA,KAAK,EAAE,GAAT;AAAcC,QAAAA,MAAM,EAAE;AAAtB,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACI,4BAAWyG,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,EAEKnE,KAAK,SAAL,IAAAA,KAAK,WAAL,uBAAAA,KAAK,CAAEa,MAAP,qFAAe0C,KAAf,wEAAsB8B,QAAtB,GACG;AACI,MAAA,KAAK,EAAE;AACHjB,QAAAA,eAAe,gBACXlE,gBAAgB,CAACmE,UAAjB,GAA8BrE,KAAK,CAACsF,eADzB,MADZ;AAIHtH,QAAAA,cAAc,EAAE,SAJb;AAKHC,QAAAA,gBAAgB,EAAE,WALf;AAMHC,QAAAA,kBAAkB,EAAE,QANjB;AAOHT,QAAAA,KAAK,EAAE,MAPJ;AAQHC,QAAAA,MAAM,EAAE,MARL;AASHqB,QAAAA,eAAe,EAAE;AATd,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,GAeG,MAAC,eAAD;AAAiB,MAAA,SAAS,EAAEkB,OAAO,CAACvB,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBR,CADJ,CADH;AAAA,GADL,CALJ,CAJJ,CA3EJ,CADJ,EAkHI,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,YAAzB;AAAuC,IAAA,OAAO,EAAE,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ,MAAC,UAAD;AAAY,IAAA,SAAS,EAAE,IAAvB;AAA6B,IAAA,OAAO,EAAE,IAAtC;AAA4C,IAAA,SAAS,EAAEuB,OAAO,CAACb,OAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADR,EAIQ,MAAC,KAAD;AACI,IAAA,OAAO,EAAE,UADb;AAEI,IAAA,SAAS,EAAEa,OAAO,CAAChB,OAFvB;AAGI,IAAA,KAAK,EAAE;AAAEF,MAAAA,eAAe,EAAEiB,KAAK,SAAL,IAAAA,KAAK,WAAL,uBAAAA,KAAK,CAAEa,MAAP,qFAAe0C,KAAf,wEAAsBgC,OAAtB,GAAgC,MAAhC,GAAyC;AAA5D,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,MAAC,aAAD;AAAe,IAAA,MAAM,EAAE,gBAACtB,CAAD;AAAA,aAAOX,UAAU,CAACW,CAAD,EAAI,SAAJ,CAAjB;AAAA,KAAvB;AAAwD,IAAA,YAAY,MAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK;AAAA;;AAAA,QAAGC,YAAH,UAAGA,YAAH;AAAA,QAAiBC,aAAjB,UAAiBA,aAAjB;AAAA,WACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,0BAASD,YAAY,EAArB;AAAyB,MAAA,KAAK,EAAE;AAAEzG,QAAAA,KAAK,EAAE,GAAT;AAAcC,QAAAA,MAAM,EAAE;AAAtB,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACI,4BAAWyG,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,EAEKnE,KAAK,SAAL,IAAAA,KAAK,WAAL,uBAAAA,KAAK,CAAEa,MAAP,qFAAe0C,KAAf,wEAAsBgC,OAAtB,GACG;AACI,MAAA,KAAK,EAAE;AACHnB,QAAAA,eAAe,gBACXlE,gBAAgB,CAACmE,UAAjB,GAA8BrE,KAAK,CAACwF,cADzB,MADZ;AAIHxH,QAAAA,cAAc,EAAE,SAJb;AAKHC,QAAAA,gBAAgB,EAAE,WALf;AAMHC,QAAAA,kBAAkB,EAAE,QANjB;AAOHT,QAAAA,KAAK,EAAE,MAPJ;AAQHC,QAAAA,MAAM,EAAE,MARL;AASHqB,QAAAA,eAAe,EAAE;AATd,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,GAeG,MAAC,eAAD;AAAiB,MAAA,SAAS,EAAEkB,OAAO,CAACvB,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBR,CADJ,CADH;AAAA,GADL,CALJ,CAJR,CADA,EAsCI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AAAY,IAAA,SAAS,EAAE,IAAvB;AAA6B,IAAA,OAAO,EAAE,IAAtC;AAA4C,IAAA,SAAS,EAAEuB,OAAO,CAACb,OAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAII,MAAC,KAAD;AACI,IAAA,OAAO,EAAE,UADb;AAEI,IAAA,SAAS,EAAEa,OAAO,CAAChB,OAFvB;AAGI,IAAA,KAAK,EAAE;AAAEF,MAAAA,eAAe,EAAEiB,KAAK,SAAL,IAAAA,KAAK,WAAL,uBAAAA,KAAK,CAAEa,MAAP,qFAAe0C,KAAf,wEAAsBkC,SAAtB,GAAkC,MAAlC,GAA2C;AAA9D,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,MAAC,aAAD;AAAe,IAAA,MAAM,EAAE,gBAACxB,CAAD;AAAA,aAAOX,UAAU,CAACW,CAAD,EAAI,WAAJ,CAAjB;AAAA,KAAvB;AAA0D,IAAA,YAAY,MAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK;AAAA;;AAAA,QAAGC,YAAH,UAAGA,YAAH;AAAA,QAAiBC,aAAjB,UAAiBA,aAAjB;AAAA,WACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,0BAASD,YAAY,EAArB;AAAyB,MAAA,KAAK,EAAE;AAAEzG,QAAAA,KAAK,EAAE,GAAT;AAAcC,QAAAA,MAAM,EAAE;AAAtB,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACI,4BAAWyG,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,EAEKnE,KAAK,SAAL,IAAAA,KAAK,WAAL,uBAAAA,KAAK,CAAEa,MAAP,qFAAe0C,KAAf,wEAAsBkC,SAAtB,GACG;AACI,MAAA,KAAK,EAAE;AACHrB,QAAAA,eAAe,gBACXlE,gBAAgB,CAACmE,UAAjB,GAA8BrE,KAAK,CAAC0F,gBADzB,MADZ;AAIH1H,QAAAA,cAAc,EAAE,SAJb;AAKHC,QAAAA,gBAAgB,EAAE,WALf;AAMHC,QAAAA,kBAAkB,EAAE,QANjB;AAOHT,QAAAA,KAAK,EAAE,MAPJ;AAQHC,QAAAA,MAAM,EAAE,MARL;AASHqB,QAAAA,eAAe,EAAE;AATd,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,GAeG,MAAC,eAAD;AAAiB,MAAA,SAAS,EAAEkB,OAAO,CAACvB,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBR,CADJ,CADH;AAAA,GADL,CALJ,CAJJ,CAtCJ,EA2EI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AAAY,IAAA,SAAS,EAAE,IAAvB;AAA6B,IAAA,OAAO,EAAE,IAAtC;AAA4C,IAAA,SAAS,EAAEuB,OAAO,CAACb,OAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAII,MAAC,KAAD;AACI,IAAA,OAAO,EAAE,UADb;AAEI,IAAA,SAAS,EAAEa,OAAO,CAAChB,OAFvB;AAGI,IAAA,KAAK,EAAE;AAAEF,MAAAA,eAAe,EAAEiB,KAAK,SAAL,IAAAA,KAAK,WAAL,uBAAAA,KAAK,CAAEa,MAAP,qFAAe0C,KAAf,wEAAsBoC,QAAtB,GAAiC,MAAjC,GAA0C;AAA7D,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,MAAC,aAAD;AAAe,IAAA,MAAM,EAAE,gBAAC1B,CAAD;AAAA,aAAOX,UAAU,CAACW,CAAD,EAAI,UAAJ,CAAjB;AAAA,KAAvB;AAAyD,IAAA,YAAY,MAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK;AAAA;;AAAA,QAAGC,YAAH,UAAGA,YAAH;AAAA,QAAiBC,aAAjB,UAAiBA,aAAjB;AAAA,WACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,0BAASD,YAAY,EAArB;AAAyB,MAAA,KAAK,EAAE;AAAEzG,QAAAA,KAAK,EAAE,GAAT;AAAcC,QAAAA,MAAM,EAAE;AAAtB,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACI,4BAAWyG,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,EAEKnE,KAAK,SAAL,IAAAA,KAAK,WAAL,uBAAAA,KAAK,CAAEa,MAAP,qFAAe0C,KAAf,wEAAsBoC,QAAtB,GACG;AACI,MAAA,KAAK,EAAE;AACHvB,QAAAA,eAAe,gBACXlE,gBAAgB,CAACmE,UAAjB,GAA8BrE,KAAK,CAAC4F,eADzB,MADZ;AAIH5H,QAAAA,cAAc,EAAE,SAJb;AAKHC,QAAAA,gBAAgB,EAAE,WALf;AAMHC,QAAAA,kBAAkB,EAAE,QANjB;AAOHT,QAAAA,KAAK,EAAE,MAPJ;AAQHC,QAAAA,MAAM,EAAE,MARL;AASHqB,QAAAA,eAAe,EAAE;AATd,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,GAeG,MAAC,eAAD;AAAiB,MAAA,SAAS,EAAEkB,OAAO,CAACvB,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBR,CADJ,CADH;AAAA,GADL,CALJ,CAJJ,CA3EJ,CAlHJ,CADJ,CADJ,CArSJ,EA6gBI,MAAC,IAAD;AAAM,IAAA,SAAS,EAAE,IAAjB;AAAuB,IAAA,OAAO,EAAE,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,OAAO,EAAE,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,YAAzB;AAAuC,IAAA,OAAO,EAAE,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AAAY,IAAA,SAAS,EAAE,MAAvB;AAA+B,IAAA,SAAS,EAAEuB,OAAO,CAACb,OAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAII,MAAC,UAAD;AAAY,IAAA,SAAS,EAAE,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,WAAD;AAAa,IAAA,SAAS,EAAE,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AACI,IAAA,SAAS,EAAEa,OAAO,CAACT,WADvB;AAEI,IAAA,IAAI,EAAE,OAFV;AAGI,IAAA,SAAS,EAAE,IAHf;AAII,IAAA,OAAO,EAAE,UAJb;AAKI,IAAA,KAAK,EAAEQ,KAAF,aAAEA,KAAF,0CAAEA,KAAK,CAAEa,MAAT,4EAAE,gBAAeC,IAAjB,yDAAE,qBAAqB+E,SALhC;AAMI,IAAA,QAAQ,EAAE,kBAAC5B,CAAD;AAAA,aACNxH,UAAU,CACN,aADM,EAEN,CAAC,QAAD,EAAW,MAAX,EAAmB,WAAnB,CAFM,EAGNwH,CAAC,CAACP,MAAF,CAASC,KAHH,CADJ;AAAA,KANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAJJ,CADJ,EAwBI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AAAY,IAAA,SAAS,EAAE,MAAvB;AAA+B,IAAA,SAAS,EAAE1D,OAAO,CAACb,OAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAII,MAAC,UAAD;AAAY,IAAA,SAAS,EAAE,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AACI,IAAA,IAAI,EAAE,OADV;AAEI,IAAA,SAAS,EAAE,IAFf;AAGI,IAAA,SAAS,EAAEa,OAAO,CAACT,WAHvB;AAII,IAAA,OAAO,EAAE,UAJb;AAKI,IAAA,KAAK,EAAEQ,KAAF,aAAEA,KAAF,0CAAEA,KAAK,CAAEa,MAAT,4EAAE,gBAAeC,IAAjB,yDAAE,qBAAqBgF,kBALhC;AAMI,IAAA,QAAQ,EAAE,kBAAC7B,CAAD;AAAA,aACNxH,UAAU,CACN,aADM,EAEN,CAAC,QAAD,EAAW,MAAX,EAAmB,oBAAnB,CAFM,EAGNwH,CAAC,CAACP,MAAF,CAASC,KAHH,CADJ;AAAA,KANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJJ,CAxBJ,CADJ,EA+CI,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,YAAzB;AAAuC,IAAA,OAAO,EAAE,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AAAY,IAAA,SAAS,EAAE,MAAvB;AAA+B,IAAA,SAAS,EAAE1D,OAAO,CAACb,OAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAII,MAAC,gBAAD;AACI,IAAA,IAAI,EAAE,CADV;AAEI,IAAA,OAAO,EAAE,CAFb;AAGI,IAAA,KAAK,EAAEY,KAAF,aAAEA,KAAF,0CAAEA,KAAK,CAAEa,MAAT,4EAAE,gBAAeC,IAAjB,yDAAE,qBAAqBiF,OAHhC;AAII,IAAA,SAAS,EAAE9F,OAAO,CAACR,QAJvB;AAKI,IAAA,QAAQ,EAAE,kBAACwE,CAAD;AAAA,aACNxH,UAAU,CACN,aADM,EAEN,CAAC,QAAD,EAAW,MAAX,EAAmB,SAAnB,CAFM,EAGNwH,CAAC,CAACP,MAAF,CAASC,KAHH,CADJ;AAAA,KALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ,EAmBI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AAAY,IAAA,SAAS,EAAE,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AAAY,IAAA,SAAS,EAAE,MAAvB;AAA+B,IAAA,SAAS,EAAE1D,OAAO,CAACb,OAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAII,MAAC,UAAD;AAAY,IAAA,SAAS,EAAE,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,WAAD;AAAa,IAAA,SAAS,EAAE,IAAxB;AAA8B,IAAA,KAAK,EAAE;AAAChB,MAAAA,OAAO,EAAE,MAAV;AAAkBC,MAAAA,cAAc,EAAE;AAAlC,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AACI,IAAA,WAAW,EAAE,mBADjB;AAEI,IAAA,OAAO,EAAE,UAFb;AAGI,IAAA,SAAS,EAAE4B,OAAO,CAACT,WAHvB;AAII,IAAA,KAAK,EAAEQ,KAAF,aAAEA,KAAF,0CAAEA,KAAK,CAAEa,MAAT,4EAAE,gBAAeC,IAAjB,yDAAE,qBAAqBkF,MAJhC;AAKI,IAAA,QAAQ,EAAEpC,eALd;AAMI,IAAA,IAAI,EAAE,OANV;AAOI,IAAA,KAAK,EACD5D,KAAK,SAAL,IAAAA,KAAK,WAAL,uBAAAA,KAAK,CAAEa,MAAP,oFAAeC,IAAf,sEAAqBkF,MAArB,GACM/I,SAAS,CAACgJ,KAAV,CAAgBjG,KAAhB,aAAgBA,KAAhB,0CAAgBA,KAAK,CAAEa,MAAvB,4EAAgB,gBAAeC,IAA/B,yDAAgB,qBAAqBkF,MAArC,MAAiD,KAAjD,GACA,IADA,GAEA,KAHN,GAIM,KAZd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAJJ,CADJ,EAyBI,MAAC,UAAD;AAAY,IAAA,SAAS,EAAE,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AAAY,IAAA,SAAS,EAAE,MAAvB;AAA+B,IAAA,SAAS,EAAE/F,OAAO,CAACb,OAAlD;AAA2D,IAAA,KAAK,EAAE;AAACd,MAAAA,SAAS,EAAE;AAAZ,KAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,EAII,MAAC,UAAD;AAAY,IAAA,SAAS,EAAE,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,WAAD;AAAa,IAAA,SAAS,EAAE,IAAxB;AAA8B,IAAA,KAAK,EAAE;AAACF,MAAAA,OAAO,EAAE,MAAV;AAAkBC,MAAAA,cAAc,EAAE;AAAlC,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AACI,IAAA,WAAW,EAAE,mBADjB;AAEI,IAAA,OAAO,EAAE,UAFb;AAGI,IAAA,SAAS,EAAE4B,OAAO,CAACT,WAHvB;AAII,IAAA,KAAK,EAAEQ,KAAF,aAAEA,KAAF,0CAAEA,KAAK,CAAEa,MAAT,4EAAE,gBAAeC,IAAjB,yDAAE,qBAAqBkF,MAJhC;AAKI,IAAA,QAAQ,EAAEpC,eALd;AAMI,IAAA,IAAI,EAAE,OANV;AAOI,IAAA,KAAK,EACD5D,KAAK,SAAL,IAAAA,KAAK,WAAL,uBAAAA,KAAK,CAAEa,MAAP,oFAAeC,IAAf,sEAAqBkF,MAArB,GACM/I,SAAS,CAACgJ,KAAV,CAAgBjG,KAAhB,aAAgBA,KAAhB,0CAAgBA,KAAK,CAAEa,MAAvB,4EAAgB,gBAAeC,IAA/B,yDAAgB,qBAAqBkF,MAArC,MAAiD,KAAjD,GACA,IADA,GAEA,KAHN,GAIM,KAZd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAJJ,CAzBJ,CAnBJ,CA/CJ,CADJ,CADJ,CA7gBJ,EAuoBI,MAAC,IAAD;AAAM,IAAA,SAAS,EAAE,IAAjB;AAAuB,IAAA,OAAO,EAAE,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,OAAO,EAAE,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,YAAzB;AAAuC,IAAA,UAAU,EAAE,QAAnD;AAA6D,IAAA,OAAO,EAAE,CAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AAAY,IAAA,SAAS,EAAE,MAAvB;AAA+B,IAAA,SAAS,EAAE/F,OAAO,CAACb,OAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAII,MAAC,UAAD;AAAY,IAAA,SAAS,EAAE,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,gBAAD;AACI,IAAA,KAAK,EAAE7C,iBADX;AAEI,IAAA,KAAK,EAAEyE,OAFX;AAGI,IAAA,QAAQ,EAAE,kBAACiD,CAAD,EAAIN,KAAJ,EAAc;AACpB,UAAIA,KAAK,IAAI,EAAT,IAAeA,KAAK,IAAI,GAAxB,IAA+BA,KAAK,GAAG,EAAR,KAAe,CAAlD,EAAqD;AACjDlH,QAAAA,UAAU,CACN,aADM,EAEN,CAAC,QAAD,EAAW,MAAX,EAAmB,cAAnB,CAFM,EAGNkH,KAAK,GAAG,GAHF,CAAV;AAKA1C,QAAAA,UAAU,CAAC0C,KAAD,CAAV;AACH;AACJ,KAZL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJJ,CADJ,EAsBI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AAAY,IAAA,SAAS,EAAE,MAAvB;AAA+B,IAAA,SAAS,EAAE1D,OAAO,CAACb,OAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAII,MAAC,UAAD;AAAY,IAAA,SAAS,EAAE,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,WAAD;AACI,IAAA,OAAO,EAAC,UADZ;AAEI,IAAA,IAAI,EAAE,OAFV;AAGI,IAAA,SAAS,MAHb;AAII,IAAA,SAAS,EAAEa,OAAO,CAACT,WAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMI,MAAC,MAAD;AACI,IAAA,KAAK,EAAE;AAAEf,MAAAA,UAAU,EAAE;AAAd,KADX;AAEI,IAAA,KAAK,EAAEkC,gBAFX;AAGI,IAAA,QAAQ,EAAEkD,oBAHd;AAII,IAAA,KAAK,EAAC,UAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMKpD,SAAS,CAACyF,GAAV,CAAc,UAACnE,IAAD,EAAOoE,KAAP,EAAiB;AAC5B,WACI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAEpE,IAAjB;AAAuB,MAAA,GAAG,EAAEoE,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,GADL,EAEKpE,IAAI,CAACqE,WAFV,EAEuB,GAFvB,CADJ;AAMH,GAPA,CANL,CANJ,CADJ,CAJJ,CAtBJ,EAmDI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AAAY,IAAA,SAAS,EAAE,MAAvB;AAA+B,IAAA,SAAS,EAAEnG,OAAO,CAACb,OAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACU;AAAM,IAAA,SAAS,EAAEa,OAAO,CAACJ,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADV,CADJ,EAII,MAAC,UAAD;AAAY,IAAA,SAAS,EAAE,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AACI,IAAA,WAAW,EAAE,2BADjB;AAEI,IAAA,OAAO,EAAE,UAFb;AAGI,IAAA,KAAK,EAAEG,KAAF,aAAEA,KAAF,0CAAEA,KAAK,CAAEa,MAAT,4EAAE,gBAAeC,IAAjB,yDAAE,qBAAqBuF,KAHhC;AAII,IAAA,QAAQ,EAAE7C,iBAJd;AAKI,IAAA,IAAI,EAAE,OALV;AAMI,IAAA,SAAS,MANb;AAOI,IAAA,KAAK,EAAE;AAAE8C,MAAAA,YAAY,EAAE;AAAhB,KAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJJ,CAnDJ,CADJ,CADJ,CADJ,CAvoBJ,CADJ;AAotBH,CA/4BD;;GAAMxG,K;UAGc3C,S,EAEDd,S;;;KALbyD,K;;AAi5BN,IAAMyG,eAAe,GAAG,SAAlBA,eAAkB,CAACvG,KAAD,EAAW;AAC/B,SAAO;AACHA,IAAAA,KAAK,EAAEA,KAAK,CAACwG,WAAN,CAAkBC;AADtB,GAAP;AAGH,CAJD;;AAMA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD;AAAA,SAAe;AACtClK,IAAAA,UAAU,EAAE,oBAACmK,SAAD,EAAYC,SAAZ,EAAuBlD,KAAvB;AAAA,aAAiCgD,QAAQ,CAAClK,WAAU,CAACmK,SAAD,EAAYC,SAAZ,EAAuBlD,KAAvB,CAAX,CAAzC;AAAA,KAD0B;AAEtCjH,IAAAA,WAAW,EAAE,qBAACkK,SAAD,EAAYC,SAAZ,EAAuBlD,KAAvB;AAAA,aAAiCgD,QAAQ,CAACjK,YAAW,CAACkK,SAAD,EAAYC,SAAZ,EAAuBlD,KAAvB,CAAZ,CAAzC;AAAA;AAFyB,GAAf;AAAA,CAA3B;;AAKA,eAAe1H,OAAO,CAACsK,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C5G,KAA7C,CAAf","sourcesContent":["import React, { useContext, useState, useEffect } from 'react'\n//material imports\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport Card from '@material-ui/core/Card'\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize'\n//dropzone import\nimport ReactDropzone from 'react-dropzone'\n//redux imports\nimport { connect } from 'react-redux'\nimport { Upload, ViewList } from '@webcms/orest'\nimport WebCmsGlobal from '../../../../webcms-global'\nimport { useRouter } from 'next/router'\n\nimport { COLORS, PERCENTAGE_VALUES, UPLOAD_SUCCESS } from '../../constants'\nimport { setToState, updateState } from '../../../../../state/actions'\nimport { isErrorMsg, OREST_ENDPOINT } from '../../../../../model/orest/constants'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport { toast } from 'react-toastify'\nimport validator from 'validator'\nimport { PercentageSlider } from '../../../../../model/slider'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    block: {\n        position: 'relative',\n        width: 500,\n        height: 300,\n        border: 4,\n        borderColor: 'silver',\n        borderStyle: 'dashed',\n        borderRadius: 5,\n    },\n    previewStyle: {\n        backgroundSize: 'contain',\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center ',\n        width: '100%',\n        height: '100%',\n    },\n    actionButtons: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        marginTop: theme.spacing(2),\n    },\n    actionButton: {\n        marginLeft: theme.spacing(1),\n        borderRadius: 20,\n    },\n    icon: {\n        cursor: 'pointer',\n        width: '100%',\n        height: '100%',\n        opacity: 0.3,\n    },\n    logoBlock: {\n        display: 'flex',\n        alignItems: 'center',\n        backgroundColor: 'lightgray',\n        margin: theme.spacing(1),\n    },\n    favIcon: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderColor: 'lightgray',\n        borderRadius: 4,\n        margin: theme.spacing(1),\n        cursor: 'pointer',\n    },\n    previewBlock: {\n        margin: theme.spacing(1),\n        display: 'flex',\n        alignItems: 'center',\n        borderColor: 'lightgray',\n        borderRadius: 4,\n    },\n    card: {\n        height: 480,\n    },\n    heading: {\n        marginLeft: 8,\n        marginTop: 8,\n        color: COLORS?.secondary,\n        fontWeight: 'bold',\n    },\n    formControl: {\n        margin: 4,\n    },\n    textArea: {\n        borderColor: 'silver',\n        borderRadius: 5,\n        margin: theme.spacing(1),\n        overflow: 'auto',\n        width: '100%'\n    },\n    infoText: {\n        fontSize: 14,\n        fontWeight: 'bold',\n        color: '#FF0000',\n        marginLeft: 8,\n    },\n    asteric: {\n        color: 'red'\n    }\n}))\n\nconst Asset = (props) => {\n    const { state, setToState, updateState } = props\n\n    const classes = useStyles()\n    const { GENERAL_SETTINGS, token } = useContext(WebCmsGlobal)\n    const router = useRouter()\n    const companyId = router.query.companyID\n    const authToken = token || router.query.authToken\n\n    const [languages, setLanguages] = useState([])\n    const [selectedLanguage, setSelectedLanguage] = useState('')\n    const [quality, setQuality] = useState(\n        state?.assets?.meta?.imageQuality ? state?.assets?.meta?.imageQuality * 100 : 0\n    )\n\n    useEffect(() => {\n        ViewList({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.RALANG,\n            token: authToken,\n            params: {\n                allhotels: true,\n                hotelrefno: Number(companyId),\n            },\n        }).then((res) => {\n            if (res.status === 200 && res.data && res.data.data.length > 0) {\n                setLanguages(res.data.data)\n                if (!state?.assets?.meta?.lang) {\n                    const preSelectedLanguage = res.data.data[0]\n                    setToState('pageBuilder', ['assets', 'meta', 'lang'], preSelectedLanguage.code.toLowerCase())\n                    setSelectedLanguage(preSelectedLanguage)\n                } else {\n                    res.data.data.some((lang) => {\n                        if (state?.assets?.meta?.lang === lang.code.toLowerCase()) {\n                            setSelectedLanguage(lang)\n                            return true\n                        }\n                    })\n                }\n            }\n        })\n    }, [])\n\n    const onDropLogo = (acceptedFile, logoType) => {\n        if (\n            acceptedFile[0]?.type.toLowerCase() !== 'image/png' &&\n            acceptedFile[0]?.type.toLowerCase() !== 'image/jpg' &&\n            acceptedFile[0]?.type.toLowerCase() !== 'image/jpeg'\n        ) {\n            toast.error('Invalid Format', {\n                position: toast.POSITION.TOP_RIGHT,\n            })\n            return\n        }\n        Upload({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            token: authToken,\n            params: {\n                code: logoType,\n                masterid: state.hotelMid,\n                orsactive: true,\n                hotelrefno: companyId,\n                allhotels: true,\n            },\n            files: acceptedFile,\n        }).then((r) => {\n            if (r.status === 200 && r.data.data) {\n                let url = r.data.data.url.replace('/var/otello', '').replace('/public', '')\n                toast.success(UPLOAD_SUCCESS, {\n                    position: toast.POSITION.TOP_RIGHT,\n                })\n                const gid = r.data.data.gid\n                if (logoType.toLowerCase() === 'logo') {\n                    setToState('pageBuilder', ['assets', 'images', 'logo'], gid)\n                    updateState('pageBuilder', 'logoUrl', url)\n                }\n                if (logoType.toLowerCase() === 'altlogo') {\n                    setToState('pageBuilder', ['assets', 'images', 'altLogo'], gid)\n                    updateState('pageBuilder', 'altLogoUrl', url)\n                }\n                if (logoType.toLowerCase() === 'logo-banner') {\n                    setToState('pageBuilder', ['assets', 'images', 'logoBanner'], gid)\n                    updateState('pageBuilder', 'logoBanner', url)\n                }\n                if (logoType.toLowerCase() === 'background') {\n                    setToState('pageBuilder', ['assets', 'images', 'background'], gid)\n                    updateState('pageBuilder', 'backgroundUrl', url)\n                }\n                if (logoType.toLowerCase() === 'powered-by') {\n                    setToState('pageBuilder', ['assets', 'images', 'poweredBy'], gid)\n                    updateState('pageBuilder', 'poweredByUrl', url)\n                }\n                if (logoType.toLowerCase() === 'thumbnail') {\n                    setToState('pageBuilder', ['assets', 'images', 'thumbnail'], gid)\n                    updateState('pageBuilder', 'thumbnailUrl', url)\n                }\n            } else {\n                const retErr = isErrorMsg(r)\n                toast.error(retErr.errorMsg, {\n                    position: toast.POSITION.TOP_RIGHT,\n                })\n            }\n        })\n    }\n\n    //handle upload icons\n    const onDropIcon = (icons, type) => {\n        if (\n            icons[0]?.type.toLowerCase() !== 'image/png' &&\n            icons[0]?.type.toLowerCase() !== 'image/jpg' &&\n            icons[0]?.type.toLowerCase() !== 'image/jpeg'\n        ) {\n            toast.error('Invalid Format', {\n                position: toast.POSITION.TOP_RIGHT,\n            })\n            return\n        }\n        Upload({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            token: authToken,\n            params: {\n                code: type,\n                masterid: state.hotelMid,\n                orsactive: true,\n                hotelrefno: companyId,\n                allhotels: true,\n            },\n            files: icons,\n        }).then((r) => {\n            if (r.status === 200 && r.data.data) {\n                const gid = r.data.data.gid\n                let url = r.data.data.url.replace('/var/otello', '').replace('/public', '');\n                if (type.toLowerCase() === 'favicon') {\n                    setToState('pageBuilder', ['assets', 'images', 'favIcon'], gid)\n                    updateState('pageBuilder', 'faviconUrl', url)\n                }\n                if (type.toLowerCase() === 'phone') {\n                    setToState('pageBuilder', ['assets', 'icons', 'phone'], gid)\n                    updateState('pageBuilder', 'phoneIconUrl', url)\n                }\n                if (type.toLowerCase() === 'email') {\n                    setToState('pageBuilder', ['assets', 'icons', 'email'], gid)\n                    updateState('pageBuilder', 'emailIconUrl', url)\n                }\n                if (type.toLowerCase() === 'facebook') {\n                    setToState('pageBuilder', ['assets', 'icons', 'facebook'], gid)\n                    updateState('pageBuilder', 'facebookIconUrl', url)\n                }\n                if (type.toLowerCase() === 'twitter') {\n                    setToState('pageBuilder', ['assets', 'icons', 'twitter'], gid)\n                    updateState('pageBuilder', 'twitterIconUrl', url)\n                }\n                if (type.toLowerCase() === 'instagram') {\n                    setToState('pageBuilder', ['assets', 'icons', 'instagram'], gid)\n                    updateState('pageBuilder', 'instagramIconUrl', url)\n                }\n                if (type.toLowerCase() === 'linkedin') {\n                    setToState('pageBuilder', ['assets', 'icons', 'linkedin'], gid)\n                    updateState('pageBuilder', 'linkedinIconUrl', url)\n                }\n                toast.success(UPLOAD_SUCCESS, {\n                    position: toast.POSITION.TOP_RIGHT,\n                })\n            } else {\n                const retErr = isErrorMsg(r)\n                toast.error(retErr.errorMsg, {\n                    position: toast.POSITION.TOP_RIGHT,\n                })\n            }\n        })\n    }\n\n    const handleTitleChange = (event) => {\n        setToState('pageBuilder', ['assets', 'meta', 'title'], event.target.value)\n    }\n\n    const handleUrlChange = (event) => {\n        setToState('pageBuilder', ['assets', 'meta', 'ibeurl'], event.target.value)\n    }\n\n    const handleLanguageChange = (event) => {\n        const lang = event.target.value\n        setSelectedLanguage(lang)\n        setToState('pageBuilder', ['assets', 'meta', 'lang'], lang.code.toLowerCase())\n        updateState('pageBuilder', 'langId', lang?.id)\n    }\n\n    return (\n        <Container>\n            <Grid container spacing={3} justify=\"center\">\n                <Grid item xs={12}>\n                    <Card variant={'outlined'} raised={true}>\n                        <Grid container>\n                            <Grid item xs={12}>\n                                <Typography component={'span'} className={classes.infoText}>\n                                    Only png, jpg, jpeg formats are allowed for all the pictures.\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        <Grid container justify={'flex-start'}>\n                            <Grid item xs={6}>\n                                <h5 className={classes.heading}>Logo <span className={classes.asteric}> * </span> </h5>\n                                {!state?.assets?.images?.logo ? (\n                                    <Paper variant={'outlined'} className={classes.logoBlock}>\n                                        <ReactDropzone onDrop={(e) => onDropLogo(e, 'LOGO')} acceptedFile>\n                                            {({ getRootProps, getInputProps }) => (\n                                                <section>\n                                                    <div {...getRootProps()} style={{ width: 572, height: 360 }}>\n                                                        <input {...getInputProps()} />\n                                                        <CloudUploadIcon className={classes.icon} />\n                                                    </div>\n                                                </section>\n                                            )}\n                                        </ReactDropzone>\n                                    </Paper>\n                                ) : (\n                                    <Paper variant={'outlined'} className={classes.previewBlock}>\n                                        <ReactDropzone onDrop={(e) => onDropLogo(e, 'LOGO')} acceptedFile>\n                                            {({ getRootProps, getInputProps }) => (\n                                                <section>\n                                                    <div\n                                                        {...getRootProps()}\n                                                        style={{ cursor: 'pointer', width: 572, height: 360 }}\n                                                    >\n                                                        <input {...getInputProps()} />\n                                                        <div\n                                                            className={classes.previewStyle}\n                                                            style={{\n                                                                backgroundImage: `url(${\n                                                                    GENERAL_SETTINGS.STATIC_URL + state.logoUrl\n                                                                })`,\n                                                                width: '100%',\n                                                                height: '100%',\n                                                            }}\n                                                        ></div>\n                                                    </div>\n                                                </section>\n                                            )}\n                                        </ReactDropzone>\n                                    </Paper>\n                                )}\n                            </Grid>\n                            <Grid item xs={6}>\n                                <h5 className={classes.heading}>Alternate Logo </h5>\n                                {!state?.assets?.images?.altLogo ? (\n                                    <Paper variant={'outlined'} className={classes.logoBlock}>\n                                        <ReactDropzone onDrop={(e) => onDropLogo(e, 'ALTLOGO')} acceptedFile>\n                                            {({ getRootProps, getInputProps }) => (\n                                                <section>\n                                                    <div {...getRootProps()} style={{ width: 572, height: 360 }}>\n                                                        <input {...getInputProps()} />\n                                                        <CloudUploadIcon className={classes.icon} />\n                                                    </div>\n                                                </section>\n                                            )}\n                                        </ReactDropzone>\n                                    </Paper>\n                                ) : (\n                                    <Paper variant={'outlined'} className={classes.previewBlock}>\n                                        <ReactDropzone onDrop={(e) => onDropLogo(e, 'ALTLOGO')} acceptedFile>\n                                            {({ getRootProps, getInputProps }) => (\n                                                <section>\n                                                    <div\n                                                        {...getRootProps()}\n                                                        style={{ cursor: 'pointer', width: 550, height: 360 }}\n                                                    >\n                                                        <input {...getInputProps()} />\n                                                        <div\n                                                            className={classes.previewStyle}\n                                                            style={{\n                                                                backgroundImage: `url(${\n                                                                    GENERAL_SETTINGS.STATIC_URL + state.altLogoUrl\n                                                                })`,\n                                                            }}\n                                                        ></div>\n                                                    </div>\n                                                </section>\n                                            )}\n                                        </ReactDropzone>\n                                    </Paper>\n                                )}\n                            </Grid>\n                        </Grid>\n                        <Grid item container justify={'flex-start'}>\n                            <Grid item xs={6}>\n                                <h5 className={classes.heading}>Background</h5>\n                                {!state?.assets?.images?.background ? (\n                                    <Paper variant={'outlined'} className={classes.logoBlock}>\n                                        <ReactDropzone onDrop={(e) => onDropLogo(e, 'BACKGROUND')} acceptedFile>\n                                            {({ getRootProps, getInputProps }) => (\n                                                <section>\n                                                    <div {...getRootProps()} style={{ width: 572, height: 360 }}>\n                                                        <input {...getInputProps()} />\n                                                        <CloudUploadIcon className={classes.icon} />\n                                                    </div>\n                                                </section>\n                                            )}\n                                        </ReactDropzone>\n                                    </Paper>\n                                ) : (\n                                    <Paper variant={'outlined'} className={classes.previewBlock}>\n                                        <ReactDropzone onDrop={(e) => onDropLogo(e, 'BACKGROUND')} acceptedFile>\n                                            {({ getRootProps, getInputProps }) => (\n                                                <section>\n                                                    <div\n                                                        {...getRootProps()}\n                                                        style={{ cursor: 'pointer', width: 550, height: 360 }}\n                                                    >\n                                                        <input {...getInputProps()} />\n                                                        <div\n                                                            className={classes.previewStyle}\n                                                            style={{\n                                                                backgroundImage: `url(${\n                                                                    GENERAL_SETTINGS.STATIC_URL + state.backgroundUrl\n                                                                })`,\n                                                            }}\n                                                        ></div>\n                                                    </div>\n                                                </section>\n                                            )}\n                                        </ReactDropzone>\n                                    </Paper>\n                                )}\n                            </Grid>\n                            <Grid item xs={6}>\n                                <h5 className={classes.heading}> Logo Banner </h5>\n                                {!state?.assets?.images?.logoBanner ? (\n                                    <Paper variant={'outlined'} className={classes.logoBlock}>\n                                        <ReactDropzone onDrop={(e) => onDropLogo(e, 'LOGO-BANNER')} acceptedFile>\n                                            {({ getRootProps, getInputProps }) => (\n                                                <section>\n                                                    <div {...getRootProps()} style={{ width: 572, height: 360 }}>\n                                                        <input {...getInputProps()} />\n                                                        <CloudUploadIcon className={classes.icon} />\n                                                    </div>\n                                                </section>\n                                            )}\n                                        </ReactDropzone>\n                                    </Paper>\n                                ) : (\n                                    <Paper variant={'outlined'} className={classes.previewBlock}>\n                                        <ReactDropzone onDrop={(e) => onDropLogo(e, 'LOGO-BANNER')} acceptedFile>\n                                            {({ getRootProps, getInputProps }) => (\n                                                <section>\n                                                    <div\n                                                        {...getRootProps()}\n                                                        style={{ cursor: 'pointer', width: 550, height: 360 }}\n                                                    >\n                                                        <input {...getInputProps()} />\n                                                        <div\n                                                            className={classes.previewStyle}\n                                                            style={{\n                                                                backgroundImage: `url(${\n                                                                    GENERAL_SETTINGS.STATIC_URL + state.logoBanner\n                                                                })`,\n                                                            }}\n                                                        ></div>\n                                                    </div>\n                                                </section>\n                                            )}\n                                        </ReactDropzone>\n                                    </Paper>\n                                )}\n                            </Grid>\n                        </Grid>\n                        <Grid item container justify={'flex-start'}>\n                            <Grid item xs={4}>\n                                <Typography component={'h6'} variant={'h6'} className={classes.heading}>\n                                    Powered By\n                                </Typography>\n                                <Paper\n                                    variant={'outlined'}\n                                    className={classes.favIcon}\n                                    style={{ backgroundColor: state?.assets?.images?.poweredBy ? '#fff' : 'lightgray' }}\n                                >\n                                    <ReactDropzone onDrop={(e) => onDropLogo(e, 'POWERED-BY')} acceptedFile>\n                                        {({ getRootProps, getInputProps }) => (\n                                            <section>\n                                                <div {...getRootProps()} style={{ width: 150, height: 100 }}>\n                                                    <input {...getInputProps()} />\n                                                    {state?.assets?.images?.poweredBy ? (\n                                                        <div\n                                                            style={{\n                                                                backgroundImage: `url(${\n                                                                    GENERAL_SETTINGS.STATIC_URL + state.poweredByUrl\n                                                                })`,\n                                                                backgroundSize: 'contain',\n                                                                backgroundRepeat: 'no-repeat',\n                                                                backgroundPosition: 'center',\n                                                                width: '100%',\n                                                                height: '100%',\n                                                                backgroundColor: '#fff',\n                                                            }}\n                                                        ></div>\n                                                    ) : (\n                                                        <CloudUploadIcon className={classes.icon} />\n                                                    )}\n                                                </div>\n                                            </section>\n                                        )}\n                                    </ReactDropzone>\n                                </Paper>\n                            </Grid>\n                            <Grid item xs={4}>\n                                <Typography component={'h6'} variant={'h6'} className={classes.heading}>\n                                    Favicon\n                                </Typography>\n                                <Paper\n                                    variant={'outlined'}\n                                    className={classes.favIcon}\n                                    style={{ backgroundColor: state?.assets?.images?.favIcon ? '#fff' : 'lightgray' }}\n                                >\n                                    <ReactDropzone onDrop={(e) => onDropIcon(e, 'FAVICON')} acceptedFile>\n                                        {({ getRootProps, getInputProps }) => (\n                                            <section>\n                                                <div {...getRootProps()} style={{ width: 200, height: 100 }}>\n                                                    <input {...getInputProps()} />\n                                                    {state?.assets?.images?.favIcon ? (\n                                                        <div\n                                                            style={{\n                                                                backgroundImage: `url(${\n                                                                    GENERAL_SETTINGS.STATIC_URL + state.faviconUrl\n                                                                })`,\n                                                                backgroundSize: 'contain',\n                                                                backgroundRepeat: 'no-repeat',\n                                                                backgroundPosition: 'center',\n                                                                width: '100%',\n                                                                height: '100%',\n                                                                backgroundColor: '#fff',\n                                                            }}\n                                                        ></div>\n                                                    ) : (\n                                                        <CloudUploadIcon className={classes.icon} />\n                                                    )}\n                                                </div>\n                                            </section>\n                                        )}\n                                    </ReactDropzone>\n                                </Paper>\n                            </Grid>\n                            <Grid item xs={4}>\n                                <Typography component={'h6'} variant={'h6'} className={classes.heading}>\n                                    Thumbnail\n                                </Typography>\n                                <Paper\n                                    variant={'outlined'}\n                                    className={classes.favIcon}\n                                    style={{ backgroundColor: state?.assets?.images?.thumbnail ? '#fff' : 'lightgray' }}\n                                >\n                                    <ReactDropzone onDrop={(e) => onDropLogo(e, 'THUMBNAIL')} acceptedFile>\n                                        {({ getRootProps, getInputProps }) => (\n                                            <section>\n                                                <div {...getRootProps()} style={{ width: 200, height: 100 }}>\n                                                    <input {...getInputProps()} />\n                                                    {state?.assets?.images?.thumbnail ? (\n                                                        <div\n                                                            style={{\n                                                                backgroundImage: `url(${\n                                                                    GENERAL_SETTINGS.STATIC_URL + state.thumbnailUrl\n                                                                })`,\n                                                                backgroundSize: 'contain',\n                                                                backgroundRepeat: 'no-repeat',\n                                                                backgroundPosition: 'center',\n                                                                width: '100%',\n                                                                height: '100%',\n                                                                backgroundColor: '#fff',\n                                                            }}\n                                                        ></div>\n                                                    ) : (\n                                                        <CloudUploadIcon className={classes.icon} />\n                                                    )}\n                                                </div>\n                                            </section>\n                                        )}\n                                    </ReactDropzone>\n                                </Paper>\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Grid>\n            </Grid>\n            <Grid container={true} spacing={3}>\n                <Grid item xs={12}>\n                    <Card variant={'outlined'}>\n                        <Grid container justify={'flex-start'} spacing={1}>\n                        <Grid item xs={4}>\n                                <Typography component={'h6'} variant={'h6'} className={classes.heading}>\n                                    Phone\n                                </Typography>\n                                <Paper\n                                    variant={'outlined'}\n                                    className={classes.favIcon}\n                                    style={{ backgroundColor: state?.assets?.icons?.phone ? '#fff' : 'lightgray' }}\n                                >\n                                    <ReactDropzone onDrop={(e) => onDropIcon(e, 'PHONE')} acceptedFile>\n                                        {({ getRootProps, getInputProps }) => (\n                                            <section>\n                                                <div {...getRootProps()} style={{ width: 150, height: 100 }}>\n                                                    <input {...getInputProps()} />\n                                                    {state?.assets?.icons?.phone ? (\n                                                        <div\n                                                            style={{\n                                                                backgroundImage: `url(${\n                                                                    GENERAL_SETTINGS.STATIC_URL + state.phoneIconUrl\n                                                                })`,\n                                                                backgroundSize: 'contain',\n                                                                backgroundRepeat: 'no-repeat',\n                                                                backgroundPosition: 'center',\n                                                                width: '100%',\n                                                                height: '100%',\n                                                                backgroundColor: '#fff',\n                                                            }}\n                                                        ></div>\n                                                    ) : (\n                                                        <CloudUploadIcon className={classes.icon} />\n                                                    )}\n                                                </div>\n                                            </section>\n                                        )}\n                                    </ReactDropzone>\n                                </Paper>\n                            </Grid>\n                            <Grid item xs={4}>\n                                <Typography component={'h6'} variant={'h6'} className={classes.heading}>\n                                    Email\n                                </Typography>\n                                <Paper\n                                    variant={'outlined'}\n                                    className={classes.favIcon}\n                                    style={{ backgroundColor: state?.assets?.icons?.email ? '#fff' : 'lightgray' }}\n                                >\n                                    <ReactDropzone onDrop={(e) => onDropIcon(e, 'EMAIL')} acceptedFile>\n                                        {({ getRootProps, getInputProps }) => (\n                                            <section>\n                                                <div {...getRootProps()} style={{ width: 150, height: 100 }}>\n                                                    <input {...getInputProps()} />\n                                                    {state?.assets?.icons?.email ? (\n                                                        <div\n                                                            style={{\n                                                                backgroundImage: `url(${\n                                                                    GENERAL_SETTINGS.STATIC_URL + state.emailIconUrl\n                                                                })`,\n                                                                backgroundSize: 'contain',\n                                                                backgroundRepeat: 'no-repeat',\n                                                                backgroundPosition: 'center',\n                                                                width: '100%',\n                                                                height: '100%',\n                                                                backgroundColor: '#fff',\n                                                            }}\n                                                        ></div>\n                                                    ) : (\n                                                        <CloudUploadIcon className={classes.icon} />\n                                                    )}\n                                                </div>\n                                            </section>\n                                        )}\n                                    </ReactDropzone>\n                                </Paper>\n                            </Grid>\n                            <Grid item xs={4}>\n                                <Typography component={'h6'} variant={'h6'} className={classes.heading}>\n                                    Facebook\n                                </Typography>\n                                <Paper\n                                    variant={'outlined'}\n                                    className={classes.favIcon}\n                                    style={{ backgroundColor: state?.assets?.icons?.facebook ? '#fff' : 'lightgray' }}\n                                >\n                                    <ReactDropzone onDrop={(e) => onDropIcon(e, 'FACEBOOK')} acceptedFile>\n                                        {({ getRootProps, getInputProps }) => (\n                                            <section>\n                                                <div {...getRootProps()} style={{ width: 150, height: 100 }}>\n                                                    <input {...getInputProps()} />\n                                                    {state?.assets?.icons?.facebook ? (\n                                                        <div\n                                                            style={{\n                                                                backgroundImage: `url(${\n                                                                    GENERAL_SETTINGS.STATIC_URL + state.facebookIconUrl\n                                                                })`,\n                                                                backgroundSize: 'contain',\n                                                                backgroundRepeat: 'no-repeat',\n                                                                backgroundPosition: 'center',\n                                                                width: '100%',\n                                                                height: '100%',\n                                                                backgroundColor: '#fff',\n                                                            }}\n                                                        ></div>\n                                                    ) : (\n                                                        <CloudUploadIcon className={classes.icon} />\n                                                    )}\n                                                </div>\n                                            </section>\n                                        )}\n                                    </ReactDropzone>\n                                </Paper>\n                            </Grid>\n                        </Grid>\n                        <Grid container justify={'flex-start'} spacing={1}>\n                        <Grid item xs={4}>\n                                <Typography component={'h6'} variant={'h6'} className={classes.heading}>\n                                    Twitter\n                                </Typography>\n                                <Paper\n                                    variant={'outlined'}\n                                    className={classes.favIcon}\n                                    style={{ backgroundColor: state?.assets?.icons?.twitter ? '#fff' : 'lightgray' }}\n                                >\n                                    <ReactDropzone onDrop={(e) => onDropIcon(e, 'TWITTER')} acceptedFile>\n                                        {({ getRootProps, getInputProps }) => (\n                                            <section>\n                                                <div {...getRootProps()} style={{ width: 150, height: 100 }}>\n                                                    <input {...getInputProps()} />\n                                                    {state?.assets?.icons?.twitter ? (\n                                                        <div\n                                                            style={{\n                                                                backgroundImage: `url(${\n                                                                    GENERAL_SETTINGS.STATIC_URL + state.twitterIconUrl\n                                                                })`,\n                                                                backgroundSize: 'contain',\n                                                                backgroundRepeat: 'no-repeat',\n                                                                backgroundPosition: 'center',\n                                                                width: '100%',\n                                                                height: '100%',\n                                                                backgroundColor: '#fff',\n                                                            }}\n                                                        ></div>\n                                                    ) : (\n                                                        <CloudUploadIcon className={classes.icon} />\n                                                    )}\n                                                </div>\n                                            </section>\n                                        )}\n                                    </ReactDropzone>\n                                </Paper>\n                            </Grid>\n                            <Grid item xs={4}>\n                                <Typography component={'h6'} variant={'h6'} className={classes.heading}>\n                                    Instagram\n                                </Typography>\n                                <Paper\n                                    variant={'outlined'}\n                                    className={classes.favIcon}\n                                    style={{ backgroundColor: state?.assets?.icons?.instagram ? '#fff' : 'lightgray' }}\n                                >\n                                    <ReactDropzone onDrop={(e) => onDropIcon(e, 'INSTAGRAM')} acceptedFile>\n                                        {({ getRootProps, getInputProps }) => (\n                                            <section>\n                                                <div {...getRootProps()} style={{ width: 150, height: 100 }}>\n                                                    <input {...getInputProps()} />\n                                                    {state?.assets?.icons?.instagram ? (\n                                                        <div\n                                                            style={{\n                                                                backgroundImage: `url(${\n                                                                    GENERAL_SETTINGS.STATIC_URL + state.instagramIconUrl\n                                                                })`,\n                                                                backgroundSize: 'contain',\n                                                                backgroundRepeat: 'no-repeat',\n                                                                backgroundPosition: 'center',\n                                                                width: '100%',\n                                                                height: '100%',\n                                                                backgroundColor: '#fff',\n                                                            }}\n                                                        ></div>\n                                                    ) : (\n                                                        <CloudUploadIcon className={classes.icon} />\n                                                    )}\n                                                </div>\n                                            </section>\n                                        )}\n                                    </ReactDropzone>\n                                </Paper>\n                            </Grid>\n                            <Grid item xs={4}>\n                                <Typography component={'h6'} variant={'h6'} className={classes.heading}>\n                                    LinkedIn\n                                </Typography>\n                                <Paper\n                                    variant={'outlined'}\n                                    className={classes.favIcon}\n                                    style={{ backgroundColor: state?.assets?.icons?.linkedin ? '#fff' : 'lightgray' }}\n                                >\n                                    <ReactDropzone onDrop={(e) => onDropIcon(e, 'LINKEDIN')} acceptedFile>\n                                        {({ getRootProps, getInputProps }) => (\n                                            <section>\n                                                <div {...getRootProps()} style={{ width: 150, height: 100 }}>\n                                                    <input {...getInputProps()} />\n                                                    {state?.assets?.icons?.linkedin ? (\n                                                        <div\n                                                            style={{\n                                                                backgroundImage: `url(${\n                                                                    GENERAL_SETTINGS.STATIC_URL + state.linkedinIconUrl\n                                                                })`,\n                                                                backgroundSize: 'contain',\n                                                                backgroundRepeat: 'no-repeat',\n                                                                backgroundPosition: 'center',\n                                                                width: '100%',\n                                                                height: '100%',\n                                                                backgroundColor: '#fff',\n                                                            }}\n                                                        ></div>\n                                                    ) : (\n                                                        <CloudUploadIcon className={classes.icon} />\n                                                    )}\n                                                </div>\n                                            </section>\n                                        )}\n                                    </ReactDropzone>\n                                </Paper>\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Grid>\n            </Grid>\n            <Grid container={true} spacing={3}>\n                <Grid item xs={12}>\n                    <Card variant={'outlined'}>\n                        <Grid container justify={'flex-start'} spacing={1}>\n                            <Grid item xs={6}>\n                                <Typography component={'span'} className={classes.heading}>\n                                    Google Tag Manager\n                                </Typography>\n                                <Typography component={'div'}>\n                                    <FormControl fullWidth={true}>\n                                        <TextField\n                                            className={classes.formControl}\n                                            size={'small'}\n                                            fullWidth={true}\n                                            variant={'outlined'}\n                                            value={state?.assets?.meta?.googleTag}\n                                            onChange={(e) =>\n                                                setToState(\n                                                    'pageBuilder',\n                                                    ['assets', 'meta', 'googleTag'],\n                                                    e.target.value\n                                                )\n                                            }\n                                        />\n                                    </FormControl>\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Typography component={'span'} className={classes.heading}>\n                                    Google Analytic Tag\n                                </Typography>\n                                <Typography component={'div'}>\n                                    <TextField\n                                        size={'small'}\n                                        fullWidth={true}\n                                        className={classes.formControl}\n                                        variant={'outlined'}\n                                        value={state?.assets?.meta?.googleAnalyticsTag}\n                                        onChange={(e) =>\n                                            setToState(\n                                                'pageBuilder',\n                                                ['assets', 'meta', 'googleAnalyticsTag'],\n                                                e.target.value\n                                            )\n                                        }\n                                    />\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        <Grid container justify={'flex-start'} spacing={1}>\n                            <Grid item xs={6}>\n                                <Typography component={'span'} className={classes.heading}>\n                                    Chat Box\n                                </Typography>\n                                <TextareaAutosize\n                                    rows={5}\n                                    rowsMax={5}\n                                    value={state?.assets?.meta?.chatBox}\n                                    className={classes.textArea}\n                                    onChange={(e) =>\n                                        setToState(\n                                            'pageBuilder',\n                                            ['assets', 'meta', 'chatBox'],\n                                            e.target.value\n                                        )\n                                    }\n                                />\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Typography component={'div'}>\n                                    <Typography component={'span'} className={classes.heading}>\n                                        IBE URL\n                                    </Typography>\n                                    <Typography component={'div'}>\n                                        <FormControl fullWidth={true} style={{display: 'flex', justifyContent: 'center'}}>\n                                            <TextField\n                                                placeholder={'Enter URL here ..'}\n                                                variant={'outlined'}\n                                                className={classes.formControl}\n                                                value={state?.assets?.meta?.ibeurl}\n                                                onChange={handleUrlChange}\n                                                size={'small'}\n                                                error={\n                                                    state?.assets?.meta?.ibeurl\n                                                        ? validator.isURL(state?.assets?.meta?.ibeurl) === false\n                                                        ? true\n                                                        : false\n                                                        : false\n                                                }\n                                            ></TextField>\n                                        </FormControl>\n                                    </Typography>\n                                </Typography>\n                                <Typography component={'div'}>\n                                    <Typography component={'span'} className={classes.heading} style={{marginTop: 16}}>\n                                        Facebook Verification Code\n                                    </Typography>\n                                    <Typography component={'div'}>\n                                        <FormControl fullWidth={true} style={{display: 'flex', justifyContent: 'center'}}>\n                                            <TextField\n                                                placeholder={'Enter URL here ..'}\n                                                variant={'outlined'}\n                                                className={classes.formControl}\n                                                value={state?.assets?.meta?.ibeurl}\n                                                onChange={handleUrlChange}\n                                                size={'small'}\n                                                error={\n                                                    state?.assets?.meta?.ibeurl\n                                                        ? validator.isURL(state?.assets?.meta?.ibeurl) === false\n                                                        ? true\n                                                        : false\n                                                        : false\n                                                }\n                                            ></TextField>\n                                        </FormControl>\n                                    </Typography>\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Grid>\n            </Grid>\n            <Grid container={true} spacing={1}>\n                <Grid item xs={12}>\n                    <Card variant={'outlined'}>\n                        <Grid container justify={'flex-start'} alignItems={'center'} spacing={1}>\n                            <Grid item xs={6}>\n                                <Typography component={'span'} className={classes.heading}>\n                                    Image Quality\n                                </Typography>\n                                <Typography component={'div'}>\n                                    <PercentageSlider\n                                        marks={PERCENTAGE_VALUES}\n                                        value={quality}\n                                        onChange={(e, value) => {\n                                            if (value >= 10 && value <= 100 && value % 10 === 0) {\n                                                setToState(\n                                                    'pageBuilder',\n                                                    ['assets', 'meta', 'imageQuality'],\n                                                    value / 100\n                                                )\n                                                setQuality(value)\n                                            }\n                                        }}\n                                    />\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={3}>\n                                <Typography component={'span'} className={classes.heading}>\n                                    Language\n                                </Typography>\n                                <Typography component={'div'}>\n                                    <FormControl\n                                        variant=\"outlined\"\n                                        size={'small'}\n                                        fullWidth\n                                        className={classes.formControl}\n                                    >\n                                        <Select\n                                            style={{ marginLeft: 4 }}\n                                            value={selectedLanguage}\n                                            onChange={handleLanguageChange}\n                                            label=\"Language\"\n                                        >\n                                            {languages.map((lang, index) => {\n                                                return (\n                                                    <MenuItem value={lang} key={index}>\n                                                        {' '}\n                                                        {lang.description}{' '}\n                                                    </MenuItem>\n                                                )\n                                            })}\n                                        </Select>\n                                    </FormControl>\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={3}>\n                                <Typography component={'span'} className={classes.heading}>\n                                    Title <span className={classes.asteric}> * </span>\n                                </Typography>\n                                <Typography component={'div'}>\n                                    <TextField\n                                        placeholder={'Enter your Title here ...'}\n                                        variant={'outlined'}\n                                        value={state?.assets?.meta?.title}\n                                        onChange={handleTitleChange}\n                                        size={'small'}\n                                        fullWidth\n                                        style={{ paddingRight: 4 }}\n                                    ></TextField>\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Grid>\n            </Grid>\n        </Container>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        state: state.formReducer.pageBuilder,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value)),\n    updateState: (stateType, stateName, value) => dispatch(updateState(stateType, stateName, value)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Asset)\n"]},"metadata":{},"sourceType":"module"}