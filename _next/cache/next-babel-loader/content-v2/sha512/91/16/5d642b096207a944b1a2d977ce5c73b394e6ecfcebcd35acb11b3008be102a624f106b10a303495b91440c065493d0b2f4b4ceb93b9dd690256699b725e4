{"ast":null,"code":"import _extends from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\n\nvar _jsxFileName = \"/Users/mata/app-cloudweb/components/booking/OtherGuestInfo.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { setToState as _setToState } from 'state/actions';\nimport { Grid, TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MomentAdapter from '@date-io/moment';\nimport { DatePicker, LocalizationProvider } from '@material-ui/pickers';\nimport useTranslation from 'lib/translations/hooks/useTranslation';\nimport PhoneInput from '../../@webcms-ui/core/phone-input';\nimport { updateState as _updateState } from 'state/actions';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    infoTextField: {\n      background: '#FFFFFF',\n      '& fieldset': {\n        borderRadius: 0\n      }\n    }\n  };\n});\n\nvar OtherGuestInfo = function OtherGuestInfo(props) {\n  _s();\n\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var state = props.state,\n      updateState = props.updateState,\n      roomIndex = props.roomIndex,\n      paxIndex = props.paxIndex;\n  var selectedRooms = state.selectedRooms;\n\n  var handleFirstName = function handleFirstName(e) {\n    selectedRooms[roomIndex].guestList[paxIndex].firstName.value = e.currentTarget.value;\n    selectedRooms[roomIndex].guestList[paxIndex].firstName.iserror = false;\n    updateState('ibe', 'selectedRooms', selectedRooms);\n  };\n\n  var handleLastName = function handleLastName(e) {\n    selectedRooms[roomIndex].guestList[paxIndex].lastName.value = e.currentTarget.value;\n    selectedRooms[roomIndex].guestList[paxIndex].lastName.iserror = false;\n    updateState('ibe', 'selectedRooms', selectedRooms);\n  };\n\n  var handleMail = function handleMail(e) {\n    selectedRooms[roomIndex].guestList[paxIndex].mail.value = e.currentTarget.value;\n    selectedRooms[roomIndex].guestList[paxIndex].mail.iserror = false;\n    updateState('ibe', 'selectedRooms', selectedRooms);\n  };\n\n  var handleDateOfBirth = function handleDateOfBirth(date) {\n    if (date) {\n      if (date._isValid) {\n        selectedRooms[roomIndex].guestList[paxIndex].birthDate.value = date._d;\n      } else {\n        selectedRooms[roomIndex].guestList[paxIndex].birthDate.value = date._d;\n      }\n\n      selectedRooms[roomIndex].guestList[paxIndex].birthDate.iserror = false;\n      updateState('ibe', 'selectedRooms', selectedRooms);\n    }\n  };\n\n  var id = roomIndex + '-' + paxIndex + '-';\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, __jsx(TextField, {\n    className: classes.infoTextField,\n    size: \"small\",\n    variant: \"outlined\",\n    id: id + 'fistName',\n    name: \"fistName\",\n    label: t('str_firstName'),\n    fullWidth: true,\n    value: selectedRooms[roomIndex].guestList[paxIndex].firstName.value || '',\n    required: selectedRooms[roomIndex].guestList[paxIndex].firstName.isrequired,\n    error: selectedRooms[roomIndex].guestList[paxIndex].firstName.iserror,\n    onChange: handleFirstName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, __jsx(TextField, {\n    className: classes.infoTextField,\n    size: \"small\",\n    variant: \"outlined\",\n    id: id + 'lastName',\n    name: \"lastName\",\n    label: t('str_lastName'),\n    fullWidth: true,\n    value: selectedRooms[roomIndex].guestList[paxIndex].lastName.value || '',\n    required: selectedRooms[roomIndex].guestList[paxIndex].lastName.isrequired,\n    error: selectedRooms[roomIndex].guestList[paxIndex].lastName.iserror,\n    onChange: handleLastName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, __jsx(TextField, {\n    className: classes.infoTextField,\n    size: \"small\",\n    variant: \"outlined\",\n    id: id + 'mail',\n    name: \"mail\",\n    label: t('str_email'),\n    fullWidth: true,\n    value: selectedRooms[roomIndex].guestList[paxIndex].mail.value || '',\n    required: selectedRooms[roomIndex].guestList[paxIndex].mail.isrequired,\n    error: selectedRooms[roomIndex].guestList[paxIndex].mail.iserror,\n    onChange: handleMail,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, __jsx(LocalizationProvider, {\n    dateLibInstance: moment,\n    dateAdapter: MomentAdapter,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, __jsx(DatePicker, {\n    autoOk: true,\n    id: id + '-birthDate',\n    name: \"birthdate\",\n    fullWidth: true,\n    disableFuture: true,\n    openTo: 'date',\n    views: ['year', 'month', 'date'],\n    margin: \"dense\",\n    onChange: handleDateOfBirth,\n    value: selectedRooms[roomIndex].guestList[paxIndex].birthDate.value ? moment(selectedRooms[roomIndex].guestList[paxIndex].birthDate.value) : moment().subtract(state.maxChildAge > 0 ? state.maxChildAge : 12, 'years'),\n    inputFormat: \"DD/MM/YYYY\",\n    renderInput: function renderInput(props) {\n      return __jsx(TextField, _extends({}, props, {\n        variant: \"outlined\",\n        size: \"small\",\n        fullWidth: true,\n        className: classes.infoTextField,\n        required: selectedRooms[roomIndex].guestList[paxIndex].birthDate.isrequired,\n        error: selectedRooms[roomIndex].guestList[paxIndex].birthDate.iserror,\n        helperText: \"\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 33\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  })))));\n};\n\n_s(OtherGuestInfo, \"h68XjMarfE1o4WMqifPfj6fvklc=\", false, function () {\n  return [useStyles, useTranslation];\n});\n\n_c = OtherGuestInfo;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    state: state.formReducer.ibe\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setToState: function setToState(stateType, stateName, value) {\n      return dispatch(_setToState(stateType, stateName, value));\n    },\n    pushToState: function (_pushToState) {\n      function pushToState(_x, _x2, _x3) {\n        return _pushToState.apply(this, arguments);\n      }\n\n      pushToState.toString = function () {\n        return _pushToState.toString();\n      };\n\n      return pushToState;\n    }(function (stateType, stateName, value) {\n      return dispatch(pushToState(stateType, stateName, value));\n    }),\n    updateState: function updateState(stateType, stateName, value) {\n      return dispatch(_updateState(stateType, stateName, value));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OtherGuestInfo);\n\nvar _c;\n\n$RefreshReg$(_c, \"OtherGuestInfo\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/booking/OtherGuestInfo.js"],"names":["React","moment","connect","setToState","Grid","TextField","makeStyles","MomentAdapter","DatePicker","LocalizationProvider","useTranslation","PhoneInput","updateState","useStyles","theme","infoTextField","background","borderRadius","OtherGuestInfo","props","classes","t","state","roomIndex","paxIndex","selectedRooms","handleFirstName","e","guestList","firstName","value","currentTarget","iserror","handleLastName","lastName","handleMail","mail","handleDateOfBirth","date","_isValid","birthDate","_d","id","isrequired","subtract","maxChildAge","mapStateToProps","formReducer","ibe","mapDispatchToProps","dispatch","stateType","stateName","pushToState"],"mappings":"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","sourcesContent":["import React from 'react'\nimport moment from 'moment'\nimport { connect } from 'react-redux'\nimport { setToState } from 'state/actions'\nimport { Grid, TextField } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport MomentAdapter from '@date-io/moment'\nimport { DatePicker, LocalizationProvider } from '@material-ui/pickers'\nimport useTranslation from 'lib/translations/hooks/useTranslation'\nimport PhoneInput from '../../@webcms-ui/core/phone-input'\nimport { updateState } from 'state/actions'\n\nconst useStyles = makeStyles((theme) => ({\n    infoTextField: {\n        background: '#FFFFFF',\n        '& fieldset': {\n            borderRadius: 0,\n        },\n    }\n}))\n\nconst OtherGuestInfo = (props) => {\n    const classes = useStyles()\n    const { t } = useTranslation()\n    const { state, updateState, roomIndex, paxIndex } = props\n    let selectedRooms = state.selectedRooms\n\n    const handleFirstName = (e) => {\n        selectedRooms[roomIndex].guestList[paxIndex].firstName.value = e.currentTarget.value\n        selectedRooms[roomIndex].guestList[paxIndex].firstName.iserror = false\n        updateState('ibe', 'selectedRooms', selectedRooms)\n    }\n\n    const handleLastName = (e) => {\n        selectedRooms[roomIndex].guestList[paxIndex].lastName.value = e.currentTarget.value\n        selectedRooms[roomIndex].guestList[paxIndex].lastName.iserror = false\n        updateState('ibe', 'selectedRooms', selectedRooms)\n    }\n\n    const handleMail = (e) => {\n        selectedRooms[roomIndex].guestList[paxIndex].mail.value = e.currentTarget.value\n        selectedRooms[roomIndex].guestList[paxIndex].mail.iserror = false\n        updateState('ibe', 'selectedRooms', selectedRooms)\n    }\n\n    const handleDateOfBirth = (date) => {\n        if (date) {\n            if (date._isValid) {\n                selectedRooms[roomIndex].guestList[paxIndex].birthDate.value = date._d\n            } else {\n                selectedRooms[roomIndex].guestList[paxIndex].birthDate.value = date._d\n            }\n            selectedRooms[roomIndex].guestList[paxIndex].birthDate.iserror = false\n            updateState('ibe', 'selectedRooms', selectedRooms)\n        }\n    }\n\n    let id = roomIndex + '-' + paxIndex + '-'\n    return (\n        <React.Fragment>\n            <Grid container spacing={3}>\n                <Grid item xs={12} sm={6}>\n                    <TextField\n                        className={classes.infoTextField}\n                        size=\"small\"\n                        variant=\"outlined\"\n                        id={id + 'fistName'}\n                        name=\"fistName\"\n                        label={t('str_firstName')}\n                        fullWidth\n                        value={selectedRooms[roomIndex].guestList[paxIndex].firstName.value || ''}\n                        required={selectedRooms[roomIndex].guestList[paxIndex].firstName.isrequired}\n                        error={selectedRooms[roomIndex].guestList[paxIndex].firstName.iserror}\n                        onChange={handleFirstName}\n                    />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <TextField\n                        className={classes.infoTextField}\n                        size=\"small\"\n                        variant=\"outlined\"\n                        id={id + 'lastName'}\n                        name=\"lastName\"\n                        label={t('str_lastName')}\n                        fullWidth\n                        value={selectedRooms[roomIndex].guestList[paxIndex].lastName.value || ''}\n                        required={selectedRooms[roomIndex].guestList[paxIndex].lastName.isrequired}\n                        error={selectedRooms[roomIndex].guestList[paxIndex].lastName.iserror}\n                        onChange={handleLastName}\n                    />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <TextField\n                        className={classes.infoTextField}\n                        size=\"small\"\n                        variant=\"outlined\"\n                        id={id + 'mail'}\n                        name=\"mail\"\n                        label={t('str_email')}\n                        fullWidth\n                        value={selectedRooms[roomIndex].guestList[paxIndex].mail.value || ''}\n                        required={selectedRooms[roomIndex].guestList[paxIndex].mail.isrequired}\n                        error={selectedRooms[roomIndex].guestList[paxIndex].mail.iserror}\n                        onChange={handleMail}\n                    />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <LocalizationProvider dateLibInstance={moment} dateAdapter={MomentAdapter}>\n                        <DatePicker\n                            autoOk\n                            id={id + '-birthDate'}\n                            name=\"birthdate\"\n                            fullWidth\n                            disableFuture\n                            openTo={'date'}\n                            views={['year', 'month', 'date']}\n                            margin=\"dense\"\n                            onChange={handleDateOfBirth}\n                            value={selectedRooms[roomIndex].guestList[paxIndex].birthDate.value ? moment(selectedRooms[roomIndex].guestList[paxIndex].birthDate.value) : moment().subtract(state.maxChildAge > 0 ? state.maxChildAge : 12, 'years')}\n                            inputFormat=\"DD/MM/YYYY\"\n                            renderInput={(props) =>\n                                <TextField\n                                    {...props}\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    fullWidth\n                                    className={classes.infoTextField}\n                                    required={selectedRooms[roomIndex].guestList[paxIndex].birthDate.isrequired}\n                                    error={selectedRooms[roomIndex].guestList[paxIndex].birthDate.iserror}\n                                    helperText=\"\"\n                                />\n                            }\n                        />\n                    </LocalizationProvider>\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        state: state.formReducer.ibe,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value)),\n    pushToState: (stateType, stateName, value) => dispatch(pushToState(stateType, stateName, value)),\n    updateState: (stateType, stateName, value) => dispatch(updateState(stateType, stateName, value)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OtherGuestInfo)\n"]},"metadata":{},"sourceType":"module"}