{"ast":null,"code":"import _defineProperty from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"/Users/mata/app-cloudweb/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\n\nvar _jsxFileName = \"/Users/mata/app-cloudweb/components/guest/account/CallLog/index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, useContext, useRef } from \"react\";\nimport { connect, useSelector } from 'react-redux';\nimport { ViewList } from '@webcms/orest';\nimport { IconButton, Grid, Typography, Collapse, Fab, Menu, MenuItem } from '@material-ui/core';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport WebCmsGlobal from \"../../../webcms-global\";\nimport moment from 'moment';\nimport { formatMoney, OREST_ENDPOINT } from \"../../../../model/orest/constants\";\nimport useTranslation from \"../../../../lib/translations/hooks/useTranslation\";\nimport MaterialTable, { MTableHeader } from 'material-table';\nimport { CustomToolTip } from \"../../../user-portal/components/CustomToolTip/CustomToolTip\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { setToState as _setToState } from \"../../../../state/actions\";\nimport RequestDetail from \"../../../user-portal/components/RequestDetail\";\nimport TableColumnText from \"../../../TableColumnText\";\nimport AddRaTagDialog from \"../../../AddRaTagDialog\";\nimport PopupState, { bindMenu, bindTrigger } from \"material-ui-popup-state\";\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    overflowContainer: {\n      maxWidth: '255px',\n      minWidth: '255px',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis'\n    },\n    inputAdornmentStyle: {\n      position: \"absolute\",\n      right: \"2px\",\n      top: \"10px\",\n      \"&.MuiInputAdornment-positionStart\": {\n        marginRight: \"0\"\n      }\n    },\n    callType: {\n      left: '50%',\n      transform: 'translateX(-50%)',\n      position: 'absolute',\n      visibility: 'visible'\n    },\n    ctxMenu: {\n      textAlign: 'center',\n      visibility: 'hidden'\n    },\n    table: {\n      \"& tbody>.MuiTableRow-root:hover\": {\n        backgroundColor: \"rgb(163, 166, 180,0.1)\"\n      },\n      \"& tbody>.MuiTableRow-root:hover $ctxMenu\": {\n        visibility: 'visible'\n      },\n      \"& tbody>.MuiTableRow-root:hover $callType\": {\n        visibility: 'hidden'\n      }\n    }\n  };\n});\n\nfunction CallLog(props) {\n  _s();\n\n  var _this = this;\n\n  var classes = useStyles(); //props\n\n  var setToState = props.setToState; //context\n\n  var _useContext = useContext(WebCmsGlobal),\n      GENERAL_SETTINGS = _useContext.GENERAL_SETTINGS;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t; //redux\n\n\n  var token = useSelector(function (state) {\n    var _state$orest, _state$orest$currentU;\n\n    return (state === null || state === void 0 ? void 0 : (_state$orest = state.orest) === null || _state$orest === void 0 ? void 0 : (_state$orest$currentU = _state$orest.currentUser) === null || _state$orest$currentU === void 0 ? void 0 : _state$orest$currentU.auth.access_token) || false;\n  });\n  var clientBase = useSelector(function (state) {\n    var _state$orest2, _state$orest2$state;\n\n    return (state === null || state === void 0 ? void 0 : (_state$orest2 = state.orest) === null || _state$orest2 === void 0 ? void 0 : (_state$orest2$state = _state$orest2.state) === null || _state$orest2$state === void 0 ? void 0 : _state$orest2$state.client) || false;\n  });\n  var hotelRefNo = useSelector(function (state) {\n    var _state$hotelinfo;\n\n    return (state === null || state === void 0 ? void 0 : (_state$hotelinfo = state.hotelinfo) === null || _state$hotelinfo === void 0 ? void 0 : _state$hotelinfo.currentHotelRefNo) || null;\n  });\n  var panelStatus = useSelector(function (state) {\n    var _state$formReducer, _state$formReducer$us;\n\n    return state === null || state === void 0 ? void 0 : (_state$formReducer = state.formReducer) === null || _state$formReducer === void 0 ? void 0 : (_state$formReducer$us = _state$formReducer.userPortal) === null || _state$formReducer$us === void 0 ? void 0 : _state$formReducer$us.panelStatus;\n  });\n  var panels = useSelector(function (state) {\n    var _state$formReducer2, _state$formReducer2$u;\n\n    return (state === null || state === void 0 ? void 0 : (_state$formReducer2 = state.formReducer) === null || _state$formReducer2 === void 0 ? void 0 : (_state$formReducer2$u = _state$formReducer2.userPortal) === null || _state$formReducer2$u === void 0 ? void 0 : _state$formReducer2$u.panels) || false;\n  }); //state\n\n  var _useState = useState(false),\n      isLoading = _useState[0],\n      setIsLoading = _useState[1];\n\n  var _useState2 = useState(),\n      logList = _useState2[0],\n      setLogList = _useState2[1];\n\n  var _useState3 = useState(false),\n      selectedCallLogInfo = _useState3[0],\n      setSelectedCallLogInfo = _useState3[1];\n\n  var _useState4 = useState(false),\n      openAddRaTagDialog = _useState4[0],\n      setOpenAddRaTagDialog = _useState4[1];\n\n  var _useState5 = useState(0),\n      midValue = _useState5[0],\n      setMidValue = _useState5[1]; //ref\n\n\n  var tableRef = useRef(null);\n  var columns = [{\n    title: t('str_callType'),\n    field: 'calltype',\n    render: function render(props) {\n      return __jsx(\"div\", {\n        style: {\n          position: 'relative'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        className: classes.callType,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }\n      }, __jsx(Typography, {\n        style: {\n          textAlign: 'center',\n          fontSize: 'inherit'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }\n      }, __jsx(\"img\", {\n        src: (props === null || props === void 0 ? void 0 : props.transtypeicon) || '',\n        style: {\n          maxWidth: '1em'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 29\n        }\n      }))), __jsx(\"div\", {\n        className: classes.ctxMenu,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }\n      }, __jsx(IconButton, {\n        style: {\n          padding: '0'\n        },\n        onClick: function onClick() {\n          return handleOpenDetailPanel(props);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }\n      }, __jsx(MenuIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 29\n        }\n      })), __jsx(PopupState, {\n        variant: \"popover\",\n        popupId: \"status-menu\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }\n      }, function (popupState) {\n        return __jsx(React.Fragment, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 33\n          }\n        }, __jsx(IconButton, _extends({\n          style: {\n            padding: '0'\n          }\n        }, bindTrigger(popupState), {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 37\n          }\n        }), __jsx(MoreVertIcon, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 41\n          }\n        })), __jsx(Menu, _extends({\n          anchorOrigin: {\n            vertical: \"bottom\",\n            horizontal: \"left\"\n          },\n          transformOrigin: {\n            vertical: \"top\",\n            horizontal: \"left\"\n          },\n          getContentAnchorEl: null\n        }, bindMenu(popupState), {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 37\n          }\n        }), __jsx(MenuItem, {\n          onClick: function onClick() {\n            setOpenAddRaTagDialog(true);\n            setMidValue(props === null || props === void 0 ? void 0 : props.mid);\n            popupState.close();\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 41\n          }\n        }, __jsx(AddIcon, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 45\n          }\n        }), __jsx(Typography, {\n          style: {\n            paddingLeft: '8px'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 45\n          }\n        }, \" \", t('str_addTag')))));\n      })));\n    }\n  }, {\n    title: t('str_empCode'),\n    field: 'empcode',\n    render: function render(state) {\n      return __jsx(TableColumnText, {\n        minWidth: 150,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 32\n        }\n      }, state.empcode);\n    }\n  }, {\n    title: t('str_date'),\n    field: 'transdate',\n    render: function render(state) {\n      return __jsx(TableColumnText, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 32\n        }\n      }, moment(state.transdate).format('L'));\n    }\n  }, {\n    title: t('str_time'),\n    field: 'transtime'\n  }, {\n    title: t('str_calledNumber'),\n    field: 'callednumber'\n  }, {\n    title: t('str_elapsed'),\n    field: 'elapsed'\n  }, {\n    title: t('str_counter'),\n    field: 'counter',\n    headerStyle: {\n      textAlign: 'right'\n    },\n    render: function render(state) {\n      return __jsx(TableColumnText, {\n        textAlign: 'right',\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 32\n        }\n      }, state.counter);\n    }\n  }, {\n    title: t('str_totalPrice'),\n    field: 'totalprice',\n    headerStyle: {\n      textAlign: 'right'\n    },\n    render: function render(state) {\n      return __jsx(TableColumnText, {\n        textAlign: 'right',\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 32\n        }\n      }, formatMoney(state.totalprice));\n    }\n  }, {\n    title: t('str_numberDesc'),\n    field: 'numberdesc',\n    render: function render(state) {\n      return __jsx(TableColumnText, {\n        minWidth: 250,\n        maxWidth: 250,\n        showToolTip: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 32\n        }\n      }, state.numberdesc);\n    }\n  }, {\n    title: t('str_account'),\n    field: 'acccode'\n  }, {\n    title: t('str_note'),\n    field: 'note',\n    render: function render(state) {\n      return __jsx(TableColumnText, {\n        minWidth: 250,\n        maxWidth: 250,\n        showToolTip: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 32\n        }\n      }, state.note);\n    }\n  }, {\n    title: t('str_extension'),\n    field: 'extension',\n    render: function render(state) {\n      return __jsx(TableColumnText, {\n        minWidth: 120,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 32\n        }\n      }, state.extension);\n    }\n  }, {\n    title: t('str_commType'),\n    field: 'commtypedesc'\n  }, {\n    title: t('str_id'),\n    field: 'id',\n    headerStyle: {\n      textAlign: 'right',\n      cursor: 'default'\n    },\n    render: function render(state) {\n      return __jsx(TableColumnText, {\n        textAlign: 'right',\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 32\n        }\n      }, state.id);\n    }\n  }];\n  useEffect(function () {\n    getCallLogList();\n  }, []);\n\n  var getCallLogList = function getCallLogList() {\n    setIsLoading(true);\n    ViewList({\n      apiUrl: GENERAL_SETTINGS.OREST_URL,\n      endpoint: OREST_ENDPOINT.COMM,\n      token: token,\n      params: {\n        hotelrefno: hotelRefNo || GENERAL_SETTINGS.HOTELREFNO,\n        query: \"accid:\".concat(clientBase === null || clientBase === void 0 ? void 0 : clientBase.id)\n      }\n    }).then(function (res) {\n      if (res.status === 200) {\n        setLogList(res.data.data);\n        setIsLoading(false);\n      } else {\n        setIsLoading(false);\n      }\n    });\n  };\n\n  var handleOpenDetailPanel = function handleOpenDetailPanel(callLogInfo) {\n    setSelectedCallLogInfo(callLogInfo);\n    setToState('userPortal', ['panelStatus'], panels.requestDetail);\n    setToState('userPortal', ['currentTask'], callLogInfo);\n  };\n\n  var handleReset = function handleReset() {\n    setMidValue(0);\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 17\n    }\n  }, __jsx(Collapse, {\n    \"in\": panelStatus === panels.requestList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 21\n    }\n  }, __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 25\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 29\n    }\n  }, __jsx(CustomToolTip, {\n    title: t('str_refresh'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 33\n    }\n  }, __jsx(IconButton, {\n    onClick: function onClick() {\n      getCallLogList();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 37\n    }\n  }, __jsx(CachedIcon, {\n    style: {\n      color: \"#F16A4B\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 41\n    }\n  })))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 29\n    }\n  }, __jsx(\"div\", {\n    className: classes.table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 33\n    }\n  }, __jsx(MaterialTable, {\n    tableRef: tableRef,\n    columns: columns,\n    data: logList,\n    isLoading: isLoading,\n    options: {\n      headerStyle: {\n        cursor: 'default',\n        fontWeight: \"bold\",\n        fontSize: \"12px\",\n        color: \"#A3A6B4\",\n        textTransform: \"uppercase\",\n        backgroundColor: \"#F5F6FA\",\n        whiteSpace: 'nowrap',\n        borderLeft: '1px solid #FFF'\n      },\n      cellStyle: {\n        whiteSpace: 'nowrap',\n        borderLeft: '1px solid rgba(224, 224, 224, 1)',\n        minWidth: '100px'\n      },\n      toolbar: false,\n      selection: true,\n      sorting: false,\n      search: false,\n      actionsColumnIndex: 1,\n      selectionColumnIndex: 1\n    },\n    components: {\n      Header: function Header(props) {\n        var overrideProps = _objectSpread({}, props);\n\n        overrideProps.draggable = false;\n        return __jsx(MTableHeader, _extends({}, overrideProps, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 53\n          }\n        }));\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 37\n    }\n  }))))), __jsx(Collapse, {\n    \"in\": panelStatus === panels.requestDetail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 21\n    }\n  }, __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 25\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 29\n    }\n  }, selectedCallLogInfo && __jsx(RequestDetail, {\n    taskmid: selectedCallLogInfo === null || selectedCallLogInfo === void 0 ? void 0 : selectedCallLogInfo.mid,\n    taskHotelRefNo: selectedCallLogInfo === null || selectedCallLogInfo === void 0 ? void 0 : selectedCallLogInfo.hotelrefno,\n    tableName: OREST_ENDPOINT.COMM,\n    gid: selectedCallLogInfo === null || selectedCallLogInfo === void 0 ? void 0 : selectedCallLogInfo.gid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 57\n    }\n  })))))), __jsx(AddRaTagDialog, {\n    open: openAddRaTagDialog,\n    onClose: function onClose() {\n      handleReset();\n      setOpenAddRaTagDialog(false);\n    },\n    mid: midValue,\n    token: token,\n    orestUrl: GENERAL_SETTINGS.OREST_URL,\n    hotelRefNo: hotelRefNo,\n    raTagLabel: t('str_label'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 13\n    }\n  }));\n}\n\n_s(CallLog, \"G428ioBBdH3X5+0jqf1tFeoLEeU=\", false, function () {\n  return [useStyles, useTranslation, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = CallLog;\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setToState: function setToState(stateType, stateName, value) {\n      return dispatch(_setToState(stateType, stateName, value));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(CallLog);\n\nvar _c;\n\n$RefreshReg$(_c, \"CallLog\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/guest/account/CallLog/index.js"],"names":["React","useEffect","useState","useContext","useRef","connect","useSelector","ViewList","IconButton","Grid","Typography","Collapse","Fab","Menu","MenuItem","CachedIcon","NotInterestedIcon","MenuIcon","ArrowBackIcon","ArrowDownwardIcon","ArrowUpwardIcon","MoreVertIcon","AddIcon","WebCmsGlobal","moment","formatMoney","OREST_ENDPOINT","useTranslation","MaterialTable","MTableHeader","CustomToolTip","makeStyles","setToState","RequestDetail","TableColumnText","AddRaTagDialog","PopupState","bindMenu","bindTrigger","EditOutlinedIcon","useStyles","theme","overflowContainer","maxWidth","minWidth","overflow","whiteSpace","textOverflow","inputAdornmentStyle","position","right","top","marginRight","callType","left","transform","visibility","ctxMenu","textAlign","table","backgroundColor","CallLog","props","classes","GENERAL_SETTINGS","t","token","state","orest","currentUser","auth","access_token","clientBase","client","hotelRefNo","hotelinfo","currentHotelRefNo","panelStatus","formReducer","userPortal","panels","isLoading","setIsLoading","logList","setLogList","selectedCallLogInfo","setSelectedCallLogInfo","openAddRaTagDialog","setOpenAddRaTagDialog","midValue","setMidValue","tableRef","columns","title","field","render","fontSize","transtypeicon","padding","handleOpenDetailPanel","popupState","vertical","horizontal","mid","close","paddingLeft","empcode","transdate","format","headerStyle","counter","totalprice","numberdesc","note","extension","cursor","id","getCallLogList","apiUrl","OREST_URL","endpoint","COMM","params","hotelrefno","HOTELREFNO","query","then","res","status","data","callLogInfo","requestDetail","handleReset","requestList","color","fontWeight","textTransform","borderLeft","cellStyle","toolbar","selection","sorting","search","actionsColumnIndex","selectionColumnIndex","Header","overrideProps","draggable","gid","mapDispatchToProps","dispatch","stateType","stateName","value"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, useContext, useRef} from \"react\";\nimport { connect, useSelector } from 'react-redux'\nimport { ViewList } from '@webcms/orest'\nimport {\n    IconButton,\n    Grid,\n    Typography,\n    Collapse,\n    Fab, Menu, MenuItem\n} from '@material-ui/core'\nimport CachedIcon from '@material-ui/icons/Cached';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport WebCmsGlobal from \"../../../webcms-global\";\nimport moment from 'moment'\nimport {formatMoney, OREST_ENDPOINT} from \"../../../../model/orest/constants\";\nimport useTranslation from \"../../../../lib/translations/hooks/useTranslation\";\nimport MaterialTable, { MTableHeader } from 'material-table'\nimport {CustomToolTip} from \"../../../user-portal/components/CustomToolTip/CustomToolTip\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport { setToState } from \"../../../../state/actions\";\nimport RequestDetail from \"../../../user-portal/components/RequestDetail\";\nimport TableColumnText from \"../../../TableColumnText\";\nimport AddRaTagDialog from \"../../../AddRaTagDialog\";\nimport PopupState, {bindMenu, bindTrigger} from \"material-ui-popup-state\";\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\n\n\nconst useStyles = makeStyles( theme => ({\n    overflowContainer: {\n        maxWidth: '255px',\n        minWidth: '255px',\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis'\n    },\n    inputAdornmentStyle: {\n        position:\"absolute\",\n        right:\"2px\",\n        top:\"10px\",\n        \"&.MuiInputAdornment-positionStart\": {\n            marginRight:\"0\"\n        }\n    },\n    callType: {\n        left: '50%',\n        transform: 'translateX(-50%)',\n        position: 'absolute',\n        visibility: 'visible'\n    },\n    ctxMenu: {\n        textAlign: 'center',\n        visibility: 'hidden'\n    },\n    table: {\n        \"& tbody>.MuiTableRow-root:hover\": {\n            backgroundColor: \"rgb(163, 166, 180,0.1)\"\n        },\n        \"& tbody>.MuiTableRow-root:hover $ctxMenu\": {\n            visibility: 'visible'\n        },\n        \"& tbody>.MuiTableRow-root:hover $callType\": {\n            visibility: 'hidden'\n        },\n    },\n\n\n}));\n\nfunction CallLog(props){\n    const classes = useStyles();\n\n    //props\n    const { setToState } = props\n\n    //context\n    const { GENERAL_SETTINGS } = useContext(WebCmsGlobal);\n    const { t } = useTranslation();\n\n    //redux\n    const token = useSelector((state) => state?.orest?.currentUser?.auth.access_token || false);\n    const clientBase = useSelector((state) => state?.orest?.state?.client || false)\n    const hotelRefNo = useSelector(state => state?.hotelinfo?.currentHotelRefNo || null);\n    const panelStatus = useSelector(state => state?.formReducer?.userPortal?.panelStatus);\n    const panels = useSelector(state => state?.formReducer?.userPortal?.panels || false);\n\n    //state\n    const [isLoading, setIsLoading] = useState(false);\n    const [logList, setLogList] = useState();\n    const [selectedCallLogInfo, setSelectedCallLogInfo] = useState(false);\n    const [openAddRaTagDialog, setOpenAddRaTagDialog] = useState(false);\n    const [midValue, setMidValue] = useState(0);\n\n\n    //ref\n    const tableRef = useRef(null);\n\n    const columns = [\n        {\n            title: t('str_callType'),\n            field: 'calltype',\n            render: (props) => (\n                <div style={{position: 'relative'}}>\n                    <div className={classes.callType}>\n                        <Typography style={{textAlign :'center', fontSize: 'inherit'}}>\n                            <img src={props?.transtypeicon || ''} style={{maxWidth: '1em'}}/>\n                        </Typography>\n                    </div>\n                    <div className={classes.ctxMenu}>\n                        <IconButton style={{padding: '0'}} onClick={() => handleOpenDetailPanel(props)}>\n                            <MenuIcon />\n                        </IconButton>\n                        <PopupState variant=\"popover\" popupId=\"status-menu\">\n                            {(popupState) => (\n                                <React.Fragment>\n                                    <IconButton style={{padding: '0'}} {...bindTrigger(popupState)}>\n                                        <MoreVertIcon />\n                                    </IconButton>\n                                    <Menu\n                                        anchorOrigin={{\n                                            vertical: \"bottom\",\n                                            horizontal: \"left\"\n                                        }}\n                                        transformOrigin={{\n                                            vertical: \"top\",\n                                            horizontal: \"left\"\n                                        }}\n                                        getContentAnchorEl={null}\n                                        {...bindMenu(popupState)}\n                                    >\n                                        <MenuItem onClick={() => {\n                                            setOpenAddRaTagDialog(true)\n                                            setMidValue(props?.mid)\n                                            popupState.close();\n                                        }}\n                                        >\n                                            <AddIcon />\n                                            <Typography style={{paddingLeft: '8px'}}> {t('str_addTag')}</Typography>\n                                        </MenuItem>\n                                    </Menu>\n                                </React.Fragment>\n                            )}\n                        </PopupState>\n                    </div>\n                </div>\n            )\n        },\n        {\n            title: t('str_empCode'),\n            field: 'empcode',\n            render: (state) => <TableColumnText minWidth={150}>{state.empcode}</TableColumnText>\n        },\n        {\n            title: t('str_date'),\n            field: 'transdate',\n            render: (state) => <TableColumnText>{moment(state.transdate).format('L')}</TableColumnText>\n        },\n        {\n            title: t('str_time'),\n            field: 'transtime',\n        },\n        {\n            title: t('str_calledNumber'),\n            field: 'callednumber',\n        },\n        {\n            title: t('str_elapsed'),\n            field: 'elapsed',\n        },\n        {\n            title: t('str_counter'),\n            field: 'counter',\n            headerStyle: {\n                textAlign: 'right'\n            },\n            render: (state) => <TableColumnText textAlign={'right'}>{state.counter}</TableColumnText>\n        },\n        {\n            title: t('str_totalPrice'),\n            field: 'totalprice',\n            headerStyle: {\n                textAlign: 'right'\n            },\n            render: (state) => <TableColumnText textAlign={'right'}>{formatMoney(state.totalprice)}</TableColumnText>\n        },\n        {\n            title: t('str_numberDesc'),\n            field: 'numberdesc',\n            render: (state) => <TableColumnText minWidth={250} maxWidth={250} showToolTip>{state.numberdesc}</TableColumnText>\n        },\n        {\n            title: t('str_account'),\n            field: 'acccode',\n        },\n        {\n            title: t('str_note'),\n            field: 'note',\n            render: (state) => <TableColumnText minWidth={250} maxWidth={250} showToolTip>{state.note}</TableColumnText>\n        },\n        {\n            title: t('str_extension'),\n            field: 'extension',\n            render: (state) => <TableColumnText minWidth={120}>{state.extension}</TableColumnText>\n        },\n        {\n            title: t('str_commType'),\n            field: 'commtypedesc',\n        },\n        {\n            title: t('str_id'),\n            field: 'id',\n            headerStyle: {\n                textAlign: 'right',\n                cursor: 'default',\n            },\n            render: (state) => <TableColumnText textAlign={'right'}>{state.id}</TableColumnText>\n        },\n    ]\n    \n    \n    useEffect(() => {\n        getCallLogList();\n    }, [])\n\n    const getCallLogList = () => {\n        setIsLoading(true);\n        ViewList({\n            apiUrl: GENERAL_SETTINGS.OREST_URL,\n            endpoint: OREST_ENDPOINT.COMM,\n            token,\n            params: {\n                hotelrefno: hotelRefNo || GENERAL_SETTINGS.HOTELREFNO,\n                query: `accid:${clientBase?.id}`\n            }\n        }).then(res => {\n            if(res.status === 200){\n                setLogList(res.data.data);\n                setIsLoading(false);\n            } else {\n                setIsLoading(false);\n            }\n        })\n    }\n\n    const handleOpenDetailPanel = (callLogInfo) => {\n        setSelectedCallLogInfo(callLogInfo)\n        setToState('userPortal', ['panelStatus'], panels.requestDetail)\n        setToState('userPortal', ['currentTask'], callLogInfo)\n    }\n\n    const handleReset = () => {\n        setMidValue(0)\n    }\n\n\n    return(\n        <div>\n            <Grid container>\n                <Grid item xs={12}>\n                    <Collapse in={panelStatus === panels.requestList}>\n                        <Grid container>\n                            <Grid item xs={12}>\n                                <CustomToolTip title={t('str_refresh')}>\n                                    <IconButton\n                                        onClick={() => {\n                                            getCallLogList();\n                                        }}\n                                    >\n                                        <CachedIcon style={{color:\"#F16A4B\"}}/>\n                                    </IconButton>\n                                </CustomToolTip>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <div className={classes.table}>\n                                    <MaterialTable\n                                        tableRef={tableRef}\n                                        columns={columns}\n                                        data={logList}\n                                        isLoading={isLoading}\n                                        options={{\n                                            headerStyle:{\n                                                cursor: 'default',\n                                                fontWeight:\"bold\",\n                                                fontSize:\"12px\",\n                                                color:\"#A3A6B4\",\n                                                textTransform:\"uppercase\",\n                                                backgroundColor:\"#F5F6FA\",\n                                                whiteSpace: 'nowrap',\n                                                borderLeft: '1px solid #FFF',\n                                            },\n                                            cellStyle: {\n                                                whiteSpace: 'nowrap',\n                                                borderLeft: '1px solid rgba(224, 224, 224, 1)',\n                                                minWidth: '100px'\n                                            },\n                                            toolbar: false,\n                                            selection: true,\n                                            sorting: false,\n                                            search: false,\n                                            actionsColumnIndex: 1,\n                                            selectionColumnIndex: 1\n                                        }}\n                                        components={{\n                                            Header: (props) => {\n                                                const overrideProps = {...props}\n                                                overrideProps.draggable = false\n                                                return(\n                                                    <MTableHeader  {...overrideProps}/>\n                                                )\n                                            },\n                                        }}\n                                    />\n                                </div>\n                            </Grid>\n                        </Grid>\n                    </Collapse>\n                    <Collapse in={panelStatus === panels.requestDetail}>\n                        <Grid container>\n                            <Grid item xs={12}>\n                                {selectedCallLogInfo && <RequestDetail taskmid={selectedCallLogInfo?.mid} taskHotelRefNo={selectedCallLogInfo?.hotelrefno} tableName={OREST_ENDPOINT.COMM} gid={selectedCallLogInfo?.gid}/>}\n                            </Grid>\n                        </Grid>\n                    </Collapse>\n                </Grid>\n            </Grid>\n            <AddRaTagDialog\n                open={openAddRaTagDialog}\n                onClose={() => {\n                    handleReset();\n                    setOpenAddRaTagDialog(false);\n                }}\n                mid={midValue}\n                token={token}\n                orestUrl={GENERAL_SETTINGS.OREST_URL}\n                hotelRefNo={hotelRefNo}\n                raTagLabel={t('str_label')}\n            />\n        </div>\n    );\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    setToState: (stateType, stateName, value) => dispatch(setToState(stateType, stateName, value)),\n})\n\nexport default connect(null, mapDispatchToProps)(CallLog);"]},"metadata":{},"sourceType":"module"}