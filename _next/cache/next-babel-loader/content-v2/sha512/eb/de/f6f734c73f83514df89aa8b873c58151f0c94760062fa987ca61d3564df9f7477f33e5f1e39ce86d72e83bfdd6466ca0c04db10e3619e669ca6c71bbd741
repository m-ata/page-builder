{"ast":null,"code":"var _jsxFileName = \"/Users/mata/app-cloudweb/components/survey/surveytree/options/Text.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { SURVEY_INPUT_VARIANT } from '../../../../assets/const';\nimport useSurveyAction from '../../../../model/survey/useSurveyAction';\nimport { useSelector } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport styles from '../../style/SurveyOptions.style';\nimport SurveyTooltip from 'components/survey/helper/SurveyTooltip';\nvar useStyles = makeStyles(styles);\nexport default function TextOption(props) {\n  _s();\n\n  var option = props.option,\n      optionTyp = props.optionTyp; //style\n\n  var classes = useStyles(); //redux\n\n  var _useSurveyAction = useSurveyAction(),\n      setSurveyAnswerMulti = _useSurveyAction.setSurveyAnswerMulti,\n      deleteSurveyAnswer = _useSurveyAction.deleteSurveyAnswer;\n\n  var surveyTrans = useSelector(function (state) {\n    return state.survey.trans;\n  });\n  var surveyIsValid = useSelector(function (state) {\n    return state.survey.isValid;\n  });\n  var oldAnswer = useSelector(function (state) {\n    return state.survey.answers[surveyTrans] && state.survey.answers[surveyTrans][option.parentid] && state.survey.answers[surveyTrans][option.parentid][option.id];\n  }); //state\n\n  var _useState = useState(oldAnswer ? oldAnswer.valuetext : ''),\n      optionValue = _useState[0],\n      setOptionValue = _useState[1];\n\n  var handleChangeOption = function handleChangeOption(event) {\n    var value = event.target.value;\n    setOptionValue(value);\n\n    if (value !== '') {\n      setSurveyAnswerMulti(surveyTrans, option.parentid, option.id, {\n        typ: optionTyp,\n        parentid: option.parentid,\n        valuetext: value\n      });\n    } else {\n      deleteSurveyAnswer(surveyTrans, option.parentid, option.id);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: classes.optionContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, __jsx(SurveyTooltip, {\n    title: option && option.note || '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, __jsx(TextField, {\n    onKeyUp: handleChangeOption,\n    onKeyDown: handleChangeOption,\n    onChange: handleChangeOption,\n    variant: SURVEY_INPUT_VARIANT,\n    fullWidth: true,\n    disabled: surveyIsValid,\n    name: String(option.id),\n    value: optionValue || '',\n    label: option.langwordtxt || option.description,\n    className: classes.textField,\n    InputProps: {\n      classes: {\n        input: classes.textFieldInput\n      }\n    },\n    InputLabelProps: {\n      className: classes.textFieldLabel\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  })));\n}\n\n_s(TextOption, \"MPe/A1NFn89oxoV9WxW5F6BrrXA=\", false, function () {\n  return [useStyles, useSurveyAction, useSelector, useSelector, useSelector];\n});\n\n_c = TextOption;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextOption\");","map":{"version":3,"sources":["/Users/mata/app-cloudweb/components/survey/surveytree/options/Text.js"],"names":["React","useState","TextField","SURVEY_INPUT_VARIANT","useSurveyAction","useSelector","makeStyles","styles","SurveyTooltip","useStyles","TextOption","props","option","optionTyp","classes","setSurveyAnswerMulti","deleteSurveyAnswer","surveyTrans","state","survey","trans","surveyIsValid","isValid","oldAnswer","answers","parentid","id","valuetext","optionValue","setOptionValue","handleChangeOption","event","value","target","typ","optionContainer","note","String","langwordtxt","description","textField","input","textFieldInput","className","textFieldLabel"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport { SURVEY_INPUT_VARIANT } from '../../../../assets/const'\nimport useSurveyAction from '../../../../model/survey/useSurveyAction'\nimport { useSelector } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\nimport styles from '../../style/SurveyOptions.style'\nimport SurveyTooltip from 'components/survey/helper/SurveyTooltip'\n\nconst useStyles = makeStyles(styles)\n\nexport default function TextOption(props) {\n    const { option, optionTyp } = props\n\n    //style\n    const classes = useStyles()\n\n    //redux\n    const { setSurveyAnswerMulti, deleteSurveyAnswer } = useSurveyAction()\n    const surveyTrans = useSelector((state) => state.survey.trans)\n    const surveyIsValid = useSelector((state) => state.survey.isValid)\n    const oldAnswer = useSelector(\n        (state) =>\n            state.survey.answers[surveyTrans] &&\n            state.survey.answers[surveyTrans][option.parentid] &&\n            state.survey.answers[surveyTrans][option.parentid][option.id],\n    )\n\n    //state\n    const [optionValue, setOptionValue] = useState(oldAnswer ? oldAnswer.valuetext : '')\n\n    const handleChangeOption = (event) => {\n        const value = event.target.value\n        setOptionValue(value)\n\n        if (value !== '') {\n            setSurveyAnswerMulti(surveyTrans, option.parentid, option.id, {\n                typ: optionTyp,\n                parentid: option.parentid,\n                valuetext: value,\n            })\n        } else {\n            deleteSurveyAnswer(surveyTrans, option.parentid, option.id)\n        }\n    }\n\n    return (\n        <div className={classes.optionContainer}>\n            <SurveyTooltip title={option && option.note || ''}>\n                <TextField\n                    onKeyUp={handleChangeOption}\n                    onKeyDown={handleChangeOption}\n                    onChange={handleChangeOption}\n                    variant={SURVEY_INPUT_VARIANT}\n                    fullWidth\n                    disabled={surveyIsValid}\n                    name={String(option.id)}\n                    value={optionValue || ''}\n                    label={option.langwordtxt || option.description}\n                    className={classes.textField}\n                    InputProps={{ classes: { input: classes.textFieldInput } }}\n                    InputLabelProps={{ className: classes.textFieldLabel }}\n                />\n            </SurveyTooltip>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}